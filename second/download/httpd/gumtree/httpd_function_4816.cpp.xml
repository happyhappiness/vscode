<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4816.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_pphrase_Handle<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">server_rec<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">s<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">apr_pool_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">p<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSLModConfigRec<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">mc<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">myModConfig<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><name pos:line="3" pos:column="39">s<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SSLSrvConfigRec<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">sc<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">server_rec<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">pServ<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">cpVHostID<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">szPath<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><name pos:line="7" pos:column="17">MAX_STRING_LEN<pos:position pos:line="7" pos:column="31"/></name></expr>]<pos:position pos:line="7" pos:column="32"/></index></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">EVP_PKEY<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">pPrivateKey<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ssl_asn1_t<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">asn1<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">unsigned<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">char<pos:position pos:line="10" pos:column="18"/></name> <modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier></type><name pos:line="10" pos:column="20">ucp<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">long<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">int<pos:position pos:line="11" pos:column="13"/></name></type> <name pos:line="11" pos:column="14">length<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">X509<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">pX509Cert<pos:position pos:line="12" pos:column="20"/></name></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">BOOL<pos:position pos:line="13" pos:column="9"/></name></type> <name pos:line="13" pos:column="10">bReadable<pos:position pos:line="13" pos:column="19"/></name></decl>;<pos:position pos:line="13" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_array_header_t<pos:position pos:line="14" pos:column="23"/></name> <modifier pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></modifier></type><name pos:line="14" pos:column="25">aPassPhrase<pos:position pos:line="14" pos:column="36"/></name></decl>;<pos:position pos:line="14" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">nPassPhrase<pos:position pos:line="15" pos:column="20"/></name></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">nPassPhraseCur<pos:position pos:line="16" pos:column="23"/></name></decl>;<pos:position pos:line="16" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name> <modifier pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></modifier></type><name pos:line="17" pos:column="11">cpPassPhraseCur<pos:position pos:line="17" pos:column="26"/></name></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">nPassPhraseRetry<pos:position pos:line="18" pos:column="25"/></name></decl>;<pos:position pos:line="18" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">nPassPhraseDialog<pos:position pos:line="19" pos:column="26"/></name></decl>;<pos:position pos:line="19" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">nPassPhraseDialogCur<pos:position pos:line="20" pos:column="29"/></name></decl>;<pos:position pos:line="20" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">BOOL<pos:position pos:line="21" pos:column="9"/></name></type> <name pos:line="21" pos:column="10">bPassPhraseDialogOnce<pos:position pos:line="21" pos:column="31"/></name></decl>;<pos:position pos:line="21" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">char<pos:position pos:line="22" pos:column="9"/></name> <modifier pos:line="22" pos:column="10">*<pos:position pos:line="22" pos:column="11"/></modifier><modifier pos:line="22" pos:column="11">*<pos:position pos:line="22" pos:column="12"/></modifier></type><name pos:line="22" pos:column="12">cpp<pos:position pos:line="22" pos:column="15"/></name></decl>;<pos:position pos:line="22" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">int<pos:position pos:line="23" pos:column="8"/></name></type> <name pos:line="23" pos:column="9">i<pos:position pos:line="23" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="23" pos:column="12">j<pos:position pos:line="23" pos:column="13"/></name></decl>;<pos:position pos:line="23" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">ssl_algo_t<pos:position pos:line="24" pos:column="15"/></name></type> <name pos:line="24" pos:column="16">algoCert<pos:position pos:line="24" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="24" pos:column="26">algoKey<pos:position pos:line="24" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="24" pos:column="35">at<pos:position pos:line="24" pos:column="37"/></name></decl>;<pos:position pos:line="24" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name> <modifier pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></modifier></type><name pos:line="25" pos:column="11">an<pos:position pos:line="25" pos:column="13"/></name></decl>;<pos:position pos:line="25" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">char<pos:position pos:line="26" pos:column="9"/></name> <modifier pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></modifier></type><name pos:line="26" pos:column="11">cp<pos:position pos:line="26" pos:column="13"/></name></decl>;<pos:position pos:line="26" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">apr_time_t<pos:position pos:line="27" pos:column="15"/></name></type> <name pos:line="27" pos:column="16">pkey_mtime<pos:position pos:line="27" pos:column="26"/></name> <init pos:line="27" pos:column="27">= <expr><literal type="number" pos:line="27" pos:column="29">0<pos:position pos:line="27" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">apr_status_t<pos:position pos:line="28" pos:column="17"/></name></type> <name pos:line="28" pos:column="18">rv<pos:position pos:line="28" pos:column="20"/></name></decl>;<pos:position pos:line="28" pos:column="21"/></decl_stmt>
    <comment type="block" pos:line="29" pos:column="5">/*
     * Start with a fresh pass phrase array
     */</comment>
    <expr_stmt><expr><name pos:line="32" pos:column="5">aPassPhrase<pos:position pos:line="32" pos:column="16"/></name>       <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <call><name pos:line="32" pos:column="25">apr_array_make<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><name pos:line="32" pos:column="40">p<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="43">2<pos:position pos:line="32" pos:column="44"/></literal></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="46">sizeof<argument_list pos:line="32" pos:column="52">(<argument><expr><name pos:line="32" pos:column="53">char<pos:position pos:line="32" pos:column="57"/></name> <operator pos:line="32" pos:column="58">*<pos:position pos:line="32" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">nPassPhrase<pos:position pos:line="33" pos:column="16"/></name>       <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <literal type="number" pos:line="33" pos:column="25">0<pos:position pos:line="33" pos:column="26"/></literal></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">nPassPhraseDialog<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <literal type="number" pos:line="34" pos:column="25">0<pos:position pos:line="34" pos:column="26"/></literal></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="36" pos:column="5">/*
     * Walk through all configured servers
     */</comment>
    <for pos:line="39" pos:column="5">for <control pos:line="39" pos:column="9">(<init><expr><name pos:line="39" pos:column="10">pServ<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <name pos:line="39" pos:column="18">s<pos:position pos:line="39" pos:column="19"/></name></expr>;<pos:position pos:line="39" pos:column="20"/></init> <condition><expr><name pos:line="39" pos:column="21">pServ<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">!=<pos:position pos:line="39" pos:column="29"/></operator> <name pos:line="39" pos:column="30">NULL<pos:position pos:line="39" pos:column="34"/></name></expr>;<pos:position pos:line="39" pos:column="35"/></condition> <incr><expr><name pos:line="39" pos:column="36">pServ<pos:position pos:line="39" pos:column="41"/></name> <operator pos:line="39" pos:column="42">=<pos:position pos:line="39" pos:column="43"/></operator> <name><name pos:line="39" pos:column="44">pServ<pos:position pos:line="39" pos:column="49"/></name><operator pos:line="39" pos:column="49">-&gt;<pos:position pos:line="39" pos:column="54"/></operator><name pos:line="39" pos:column="51">next<pos:position pos:line="39" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="39" pos:column="56"/></control> <block pos:line="39" pos:column="57">{
        <expr_stmt><expr><name pos:line="40" pos:column="9">sc<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <call><name pos:line="40" pos:column="14">mySrvConfig<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">pServ<pos:position pos:line="40" pos:column="31"/></name></expr></argument>)<pos:position pos:line="40" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt>

        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><name><name pos:line="42" pos:column="14">sc<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">enabled<pos:position pos:line="42" pos:column="25"/></name></name></expr>)<pos:position pos:line="42" pos:column="26"/></condition><then pos:line="42" pos:column="26">
            <block type="pseudo"><continue pos:line="43" pos:column="13">continue;<pos:position pos:line="43" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name pos:line="45" pos:column="9">cpVHostID<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <call><name pos:line="45" pos:column="21">ssl_util_vhostid<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name pos:line="45" pos:column="38">p<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="41">pServ<pos:position pos:line="45" pos:column="46"/></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">ap_log_error<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">APLOG_MARK<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="34">APLOG_INFO<pos:position pos:line="46" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="46">0<pos:position pos:line="46" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="49">pServ<pos:position pos:line="46" pos:column="54"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="47" pos:column="22">"Loading certificate &amp; private key of SSL-aware server"<pos:position pos:line="47" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="79"/></expr_stmt>

        <comment type="block" pos:line="49" pos:column="9">/*
         * Read in server certificate(s): This is the easy part
         * because this file isn't encrypted in any way.
         */</comment>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name><name pos:line="53" pos:column="13">sc<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">-&gt;<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="17">server<pos:position pos:line="53" pos:column="23"/></name><operator pos:line="53" pos:column="23">-&gt;<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="25">pks<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">cert_files<pos:position pos:line="53" pos:column="40"/></name><index pos:line="53" pos:column="40">[<expr><literal type="number" pos:line="53" pos:column="41">0<pos:position pos:line="53" pos:column="42"/></literal></expr>]<pos:position pos:line="53" pos:column="43"/></index></name> <operator pos:line="53" pos:column="44">==<pos:position pos:line="53" pos:column="46"/></operator> <name pos:line="53" pos:column="47">NULL<pos:position pos:line="53" pos:column="51"/></name>
            <operator pos:line="54" pos:column="13">&amp;&amp;<pos:position pos:line="54" pos:column="23"/></operator> <name><name pos:line="54" pos:column="16">sc<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">-&gt;<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="20">server<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">-&gt;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="28">pkcs7<pos:position pos:line="54" pos:column="33"/></name></name> <operator pos:line="54" pos:column="34">==<pos:position pos:line="54" pos:column="36"/></operator> <name pos:line="54" pos:column="37">NULL<pos:position pos:line="54" pos:column="41"/></name></expr>)<pos:position pos:line="54" pos:column="42"/></condition><then pos:line="54" pos:column="42"> <block pos:line="54" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">ap_log_error<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name pos:line="55" pos:column="26">APLOG_MARK<pos:position pos:line="55" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="38">APLOG_ERR<pos:position pos:line="55" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="49">0<pos:position pos:line="55" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="52">pServ<pos:position pos:line="55" pos:column="57"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="56" pos:column="26">"Server should be SSL-aware but has no certificate "<pos:position pos:line="56" pos:column="78"/></literal>
                         <literal type="string" pos:line="57" pos:column="26">"configured [Hint: SSLCertificateFile] (%s:%d)"<pos:position pos:line="57" pos:column="73"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="58" pos:column="26">pServ<pos:position pos:line="58" pos:column="31"/></name><operator pos:line="58" pos:column="31">-&gt;<pos:position pos:line="58" pos:column="36"/></operator><name pos:line="58" pos:column="33">defn_name<pos:position pos:line="58" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="44">pServ<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">-&gt;<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="51">defn_line_number<pos:position pos:line="58" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">ssl_die<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">()<pos:position pos:line="59" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="62" pos:column="9">algoCert<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">=<pos:position pos:line="62" pos:column="19"/></operator> <name pos:line="62" pos:column="20">SSL_ALGO_UNKNOWN<pos:position pos:line="62" pos:column="36"/></name></expr>;<pos:position pos:line="62" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="63" pos:column="9">algoKey<pos:position pos:line="63" pos:column="16"/></name>  <operator pos:line="63" pos:column="18">=<pos:position pos:line="63" pos:column="19"/></operator> <name pos:line="63" pos:column="20">SSL_ALGO_UNKNOWN<pos:position pos:line="63" pos:column="36"/></name></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt>
        <for pos:line="64" pos:column="9">for <control pos:line="64" pos:column="13">(<init><expr><name pos:line="64" pos:column="14">i<pos:position pos:line="64" pos:column="15"/></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator> <literal type="number" pos:line="64" pos:column="18">0<pos:position pos:line="64" pos:column="19"/></literal></expr><operator pos:line="64" pos:column="19">,<pos:position pos:line="64" pos:column="20"/></operator> <expr><name pos:line="64" pos:column="21">j<pos:position pos:line="64" pos:column="22"/></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <literal type="number" pos:line="64" pos:column="25">0<pos:position pos:line="64" pos:column="26"/></literal></expr>;<pos:position pos:line="64" pos:column="27"/></init> <condition><expr><name pos:line="64" pos:column="28">i<pos:position pos:line="64" pos:column="29"/></name> <operator pos:line="64" pos:column="30">&lt;<pos:position pos:line="64" pos:column="34"/></operator> <name pos:line="64" pos:column="32">SSL_AIDX_MAX<pos:position pos:line="64" pos:column="44"/></name>
                 <operator pos:line="65" pos:column="18">&amp;&amp;<pos:position pos:line="65" pos:column="28"/></operator> <operator pos:line="65" pos:column="21">(<pos:position pos:line="65" pos:column="22"/></operator><name><name pos:line="65" pos:column="22">sc<pos:position pos:line="65" pos:column="24"/></name><operator pos:line="65" pos:column="24">-&gt;<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="26">server<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">-&gt;<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="34">pks<pos:position pos:line="65" pos:column="37"/></name><operator pos:line="65" pos:column="37">-&gt;<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="39">cert_files<pos:position pos:line="65" pos:column="49"/></name><index pos:line="65" pos:column="49">[<expr><name pos:line="65" pos:column="50">i<pos:position pos:line="65" pos:column="51"/></name></expr>]<pos:position pos:line="65" pos:column="52"/></index></name> <operator pos:line="65" pos:column="53">!=<pos:position pos:line="65" pos:column="55"/></operator> <name pos:line="65" pos:column="56">NULL<pos:position pos:line="65" pos:column="60"/></name>
                     <operator pos:line="66" pos:column="22">||<pos:position pos:line="66" pos:column="24"/></operator> <name><name pos:line="66" pos:column="25">sc<pos:position pos:line="66" pos:column="27"/></name><operator pos:line="66" pos:column="27">-&gt;<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="29">server<pos:position pos:line="66" pos:column="35"/></name><operator pos:line="66" pos:column="35">-&gt;<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="37">pkcs7<pos:position pos:line="66" pos:column="42"/></name></name><operator pos:line="66" pos:column="42">)<pos:position pos:line="66" pos:column="43"/></operator></expr>;<pos:position pos:line="66" pos:column="44"/></condition> <incr><expr><name pos:line="66" pos:column="45">i<pos:position pos:line="66" pos:column="46"/></name><operator pos:line="66" pos:column="46">++<pos:position pos:line="66" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="66" pos:column="49"/></control> <block pos:line="66" pos:column="50">{
            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><name><name pos:line="67" pos:column="17">sc<pos:position pos:line="67" pos:column="19"/></name><operator pos:line="67" pos:column="19">-&gt;<pos:position pos:line="67" pos:column="24"/></operator><name pos:line="67" pos:column="21">server<pos:position pos:line="67" pos:column="27"/></name><operator pos:line="67" pos:column="27">-&gt;<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="29">pkcs7<pos:position pos:line="67" pos:column="34"/></name></name></expr>)<pos:position pos:line="67" pos:column="35"/></condition><then pos:line="67" pos:column="35"> <block pos:line="67" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="68" pos:column="17">STACK_OF<pos:position pos:line="68" pos:column="25"/></name><argument_list pos:line="68" pos:column="25">(<argument><expr><name pos:line="68" pos:column="26">X509<pos:position pos:line="68" pos:column="30"/></name></expr></argument>)<pos:position pos:line="68" pos:column="31"/></argument_list></call> <operator pos:line="68" pos:column="32">*<pos:position pos:line="68" pos:column="33"/></operator><name pos:line="68" pos:column="33">certs<pos:position pos:line="68" pos:column="38"/></name> <operator pos:line="68" pos:column="39">=<pos:position pos:line="68" pos:column="40"/></operator> <call><name pos:line="68" pos:column="41">ssl_read_pkcs7<pos:position pos:line="68" pos:column="55"/></name><argument_list pos:line="68" pos:column="55">(<argument><expr><name pos:line="68" pos:column="56">pServ<pos:position pos:line="68" pos:column="61"/></name></expr></argument>,
                                                       <argument><expr><name><name pos:line="69" pos:column="56">sc<pos:position pos:line="69" pos:column="58"/></name><operator pos:line="69" pos:column="58">-&gt;<pos:position pos:line="69" pos:column="63"/></operator><name pos:line="69" pos:column="60">server<pos:position pos:line="69" pos:column="66"/></name><operator pos:line="69" pos:column="66">-&gt;<pos:position pos:line="69" pos:column="71"/></operator><name pos:line="69" pos:column="68">pkcs7<pos:position pos:line="69" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><name pos:line="70" pos:column="17">pX509Cert<pos:position pos:line="70" pos:column="26"/></name> <operator pos:line="70" pos:column="27">=<pos:position pos:line="70" pos:column="28"/></operator> <call><name pos:line="70" pos:column="29">sk_X509_value<pos:position pos:line="70" pos:column="42"/></name><argument_list pos:line="70" pos:column="42">(<argument><expr><name pos:line="70" pos:column="43">certs<pos:position pos:line="70" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="50">0<pos:position pos:line="70" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><name pos:line="71" pos:column="17">i<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">=<pos:position pos:line="71" pos:column="20"/></operator> <name pos:line="71" pos:column="21">SSL_AIDX_MAX<pos:position pos:line="71" pos:column="33"/></name></expr>;<pos:position pos:line="71" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="72" pos:column="14"/></block></then> <else pos:line="72" pos:column="15">else <block pos:line="72" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="73" pos:column="17">apr_cpystrn<pos:position pos:line="73" pos:column="28"/></name><argument_list pos:line="73" pos:column="28">(<argument><expr><name pos:line="73" pos:column="29">szPath<pos:position pos:line="73" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="37">sc<pos:position pos:line="73" pos:column="39"/></name><operator pos:line="73" pos:column="39">-&gt;<pos:position pos:line="73" pos:column="44"/></operator><name pos:line="73" pos:column="41">server<pos:position pos:line="73" pos:column="47"/></name><operator pos:line="73" pos:column="47">-&gt;<pos:position pos:line="73" pos:column="52"/></operator><name pos:line="73" pos:column="49">pks<pos:position pos:line="73" pos:column="52"/></name><operator pos:line="73" pos:column="52">-&gt;<pos:position pos:line="73" pos:column="57"/></operator><name pos:line="73" pos:column="54">cert_files<pos:position pos:line="73" pos:column="64"/></name><index pos:line="73" pos:column="64">[<expr><name pos:line="73" pos:column="65">i<pos:position pos:line="73" pos:column="66"/></name></expr>]<pos:position pos:line="73" pos:column="67"/></index></name></expr></argument>,
                            <argument><expr><sizeof pos:line="74" pos:column="29">sizeof<argument_list pos:line="74" pos:column="35">(<argument><expr><name pos:line="74" pos:column="36">szPath<pos:position pos:line="74" pos:column="42"/></name></expr></argument>)<pos:position pos:line="74" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="74" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="45"/></expr_stmt>
                <if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><operator pos:line="75" pos:column="21">(<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="22">rv<pos:position pos:line="75" pos:column="24"/></name> <operator pos:line="75" pos:column="25">=<pos:position pos:line="75" pos:column="26"/></operator> <call><name pos:line="75" pos:column="27">exists_and_readable<pos:position pos:line="75" pos:column="46"/></name><argument_list pos:line="75" pos:column="46">(<argument><expr><name pos:line="75" pos:column="47">szPath<pos:position pos:line="75" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="55">p<pos:position pos:line="75" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="58">NULL<pos:position pos:line="75" pos:column="62"/></name></expr></argument>)<pos:position pos:line="75" pos:column="63"/></argument_list></call><operator pos:line="75" pos:column="63">)<pos:position pos:line="75" pos:column="64"/></operator>
                    <operator pos:line="76" pos:column="21">!=<pos:position pos:line="76" pos:column="23"/></operator> <name pos:line="76" pos:column="24">APR_SUCCESS<pos:position pos:line="76" pos:column="35"/></name></expr>)<pos:position pos:line="76" pos:column="36"/></condition><then pos:line="76" pos:column="36"> <block pos:line="76" pos:column="37">{
                    <expr_stmt><expr><call><name pos:line="77" pos:column="21">ap_log_error<pos:position pos:line="77" pos:column="33"/></name><argument_list pos:line="77" pos:column="33">(<argument><expr><name pos:line="77" pos:column="34">APLOG_MARK<pos:position pos:line="77" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="46">APLOG_ERR<pos:position pos:line="77" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="57">rv<pos:position pos:line="77" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="61">s<pos:position pos:line="77" pos:column="62"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="78" pos:column="34">"Init: Can't open server certificate file %s"<pos:position pos:line="78" pos:column="79"/></literal></expr></argument>,
                                 <argument><expr><name pos:line="79" pos:column="34">szPath<pos:position pos:line="79" pos:column="40"/></name></expr></argument>)<pos:position pos:line="79" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="42"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="80" pos:column="21">ssl_die<pos:position pos:line="80" pos:column="28"/></name><argument_list pos:line="80" pos:column="28">()<pos:position pos:line="80" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="81" pos:column="18"/></block></then></if>
                <if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><operator pos:line="82" pos:column="21">(<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="22">pX509Cert<pos:position pos:line="82" pos:column="31"/></name> <operator pos:line="82" pos:column="32">=<pos:position pos:line="82" pos:column="33"/></operator> <call><name pos:line="82" pos:column="34">SSL_read_X509<pos:position pos:line="82" pos:column="47"/></name><argument_list pos:line="82" pos:column="47">(<argument><expr><name pos:line="82" pos:column="48">szPath<pos:position pos:line="82" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="56">NULL<pos:position pos:line="82" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="62">NULL<pos:position pos:line="82" pos:column="66"/></name></expr></argument>)<pos:position pos:line="82" pos:column="67"/></argument_list></call><operator pos:line="82" pos:column="67">)<pos:position pos:line="82" pos:column="68"/></operator> <operator pos:line="82" pos:column="69">==<pos:position pos:line="82" pos:column="71"/></operator> <name pos:line="82" pos:column="72">NULL<pos:position pos:line="82" pos:column="76"/></name></expr>)<pos:position pos:line="82" pos:column="77"/></condition><then pos:line="82" pos:column="77"> <block pos:line="82" pos:column="78">{
                    <expr_stmt><expr><call><name pos:line="83" pos:column="21">ap_log_error<pos:position pos:line="83" pos:column="33"/></name><argument_list pos:line="83" pos:column="33">(<argument><expr><name pos:line="83" pos:column="34">APLOG_MARK<pos:position pos:line="83" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="46">APLOG_ERR<pos:position pos:line="83" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="57">0<pos:position pos:line="83" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="60">s<pos:position pos:line="83" pos:column="61"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="84" pos:column="34">"Init: Unable to read server certificate from"<pos:position pos:line="84" pos:column="80"/></literal>
                                 <literal type="string" pos:line="85" pos:column="34">" file %s"<pos:position pos:line="85" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="46">szPath<pos:position pos:line="85" pos:column="52"/></name></expr></argument>)<pos:position pos:line="85" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="54"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="86" pos:column="21">ssl_log_ssl_error<pos:position pos:line="86" pos:column="38"/></name><argument_list pos:line="86" pos:column="38">(<argument><expr><name pos:line="86" pos:column="39">SSLLOG_MARK<pos:position pos:line="86" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="52">APLOG_ERR<pos:position pos:line="86" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="63">s<pos:position pos:line="86" pos:column="64"/></name></expr></argument>)<pos:position pos:line="86" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="66"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="87" pos:column="21">ssl_die<pos:position pos:line="87" pos:column="28"/></name><argument_list pos:line="87" pos:column="28">()<pos:position pos:line="87" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="88" pos:column="18"/></block></then></if>
            }<pos:position pos:line="89" pos:column="14"/></block></else></if>
            <comment type="block" pos:line="90" pos:column="13">/*
             * check algorithm type of certificate and make
             * sure only one certificate per type is used.
             */</comment>
            <expr_stmt><expr><name pos:line="94" pos:column="13">at<pos:position pos:line="94" pos:column="15"/></name> <operator pos:line="94" pos:column="16">=<pos:position pos:line="94" pos:column="17"/></operator> <call><name pos:line="94" pos:column="18">ssl_util_algotypeof<pos:position pos:line="94" pos:column="37"/></name><argument_list pos:line="94" pos:column="37">(<argument><expr><name pos:line="94" pos:column="38">pX509Cert<pos:position pos:line="94" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="49">NULL<pos:position pos:line="94" pos:column="53"/></name></expr></argument>)<pos:position pos:line="94" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name pos:line="95" pos:column="13">an<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">=<pos:position pos:line="95" pos:column="17"/></operator> <call><name pos:line="95" pos:column="18">ssl_util_algotypestr<pos:position pos:line="95" pos:column="38"/></name><argument_list pos:line="95" pos:column="38">(<argument><expr><name pos:line="95" pos:column="39">at<pos:position pos:line="95" pos:column="41"/></name></expr></argument>)<pos:position pos:line="95" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="43"/></expr_stmt>
            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><name pos:line="96" pos:column="17">algoCert<pos:position pos:line="96" pos:column="25"/></name> <operator pos:line="96" pos:column="26">&amp;<pos:position pos:line="96" pos:column="31"/></operator> <name pos:line="96" pos:column="28">at<pos:position pos:line="96" pos:column="30"/></name></expr>)<pos:position pos:line="96" pos:column="31"/></condition><then pos:line="96" pos:column="31"> <block pos:line="96" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="97" pos:column="17">ap_log_error<pos:position pos:line="97" pos:column="29"/></name><argument_list pos:line="97" pos:column="29">(<argument><expr><name pos:line="97" pos:column="30">APLOG_MARK<pos:position pos:line="97" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="42">APLOG_ERR<pos:position pos:line="97" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="53">0<pos:position pos:line="97" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="56">s<pos:position pos:line="97" pos:column="57"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="98" pos:column="30">"Init: Multiple %s server certificates not "<pos:position pos:line="98" pos:column="74"/></literal>
                             <literal type="string" pos:line="99" pos:column="30">"allowed"<pos:position pos:line="99" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="41">an<pos:position pos:line="99" pos:column="43"/></name></expr></argument>)<pos:position pos:line="99" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="100" pos:column="17">ssl_log_ssl_error<pos:position pos:line="100" pos:column="34"/></name><argument_list pos:line="100" pos:column="34">(<argument><expr><name pos:line="100" pos:column="35">SSLLOG_MARK<pos:position pos:line="100" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="48">APLOG_ERR<pos:position pos:line="100" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="59">s<pos:position pos:line="100" pos:column="60"/></name></expr></argument>)<pos:position pos:line="100" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="101" pos:column="17">ssl_die<pos:position pos:line="101" pos:column="24"/></name><argument_list pos:line="101" pos:column="24">()<pos:position pos:line="101" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="102" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="103" pos:column="13">algoCert<pos:position pos:line="103" pos:column="21"/></name> <operator pos:line="103" pos:column="22">|=<pos:position pos:line="103" pos:column="24"/></operator> <name pos:line="103" pos:column="25">at<pos:position pos:line="103" pos:column="27"/></name></expr>;<pos:position pos:line="103" pos:column="28"/></expr_stmt>

            <comment type="block" pos:line="105" pos:column="13">/*
             * Insert the certificate into global module configuration to let it
             * survive the processing between the 1st Apache API init round (where
             * we operate here) and the 2nd Apache init round (where the
             * certificate is actually used to configure mod_ssl's per-server
             * configuration structures).
             */</comment>
            <expr_stmt><expr><name pos:line="112" pos:column="13">cp<pos:position pos:line="112" pos:column="15"/></name> <operator pos:line="112" pos:column="16">=<pos:position pos:line="112" pos:column="17"/></operator> <call><name pos:line="112" pos:column="18">asn1_table_vhost_key<pos:position pos:line="112" pos:column="38"/></name><argument_list pos:line="112" pos:column="38">(<argument><expr><name pos:line="112" pos:column="39">mc<pos:position pos:line="112" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="43">p<pos:position pos:line="112" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="46">cpVHostID<pos:position pos:line="112" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="57">an<pos:position pos:line="112" pos:column="59"/></name></expr></argument>)<pos:position pos:line="112" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name pos:line="113" pos:column="13">length<pos:position pos:line="113" pos:column="19"/></name> <operator pos:line="113" pos:column="20">=<pos:position pos:line="113" pos:column="21"/></operator> <call><name pos:line="113" pos:column="22">i2d_X509<pos:position pos:line="113" pos:column="30"/></name><argument_list pos:line="113" pos:column="30">(<argument><expr><name pos:line="113" pos:column="31">pX509Cert<pos:position pos:line="113" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="42">NULL<pos:position pos:line="113" pos:column="46"/></name></expr></argument>)<pos:position pos:line="113" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name pos:line="114" pos:column="13">ucp<pos:position pos:line="114" pos:column="16"/></name> <operator pos:line="114" pos:column="17">=<pos:position pos:line="114" pos:column="18"/></operator> <call><name pos:line="114" pos:column="19">ssl_asn1_table_set<pos:position pos:line="114" pos:column="37"/></name><argument_list pos:line="114" pos:column="37">(<argument><expr><name><name pos:line="114" pos:column="38">mc<pos:position pos:line="114" pos:column="40"/></name><operator pos:line="114" pos:column="40">-&gt;<pos:position pos:line="114" pos:column="45"/></operator><name pos:line="114" pos:column="42">tPublicCert<pos:position pos:line="114" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="55">cp<pos:position pos:line="114" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="59">length<pos:position pos:line="114" pos:column="65"/></name></expr></argument>)<pos:position pos:line="114" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="115" pos:column="13">(<pos:position pos:line="115" pos:column="14"/></operator><name pos:line="115" pos:column="14">void<pos:position pos:line="115" pos:column="18"/></name><operator pos:line="115" pos:column="18">)<pos:position pos:line="115" pos:column="19"/></operator><call><name pos:line="115" pos:column="19">i2d_X509<pos:position pos:line="115" pos:column="27"/></name><argument_list pos:line="115" pos:column="27">(<argument><expr><name pos:line="115" pos:column="28">pX509Cert<pos:position pos:line="115" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="115" pos:column="39">&amp;<pos:position pos:line="115" pos:column="44"/></operator><name pos:line="115" pos:column="40">ucp<pos:position pos:line="115" pos:column="43"/></name></expr></argument>)<pos:position pos:line="115" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="45"/></expr_stmt> <comment type="block" pos:line="115" pos:column="46">/* 2nd arg increments */</comment>

            <comment type="block" pos:line="117" pos:column="13">/*
             * Free the X509 structure
             */</comment>
            <expr_stmt><expr><call><name pos:line="120" pos:column="13">X509_free<pos:position pos:line="120" pos:column="22"/></name><argument_list pos:line="120" pos:column="22">(<argument><expr><name pos:line="120" pos:column="23">pX509Cert<pos:position pos:line="120" pos:column="32"/></name></expr></argument>)<pos:position pos:line="120" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="34"/></expr_stmt>

            <comment type="block" pos:line="122" pos:column="13">/*
             * Read in the private key: This is the non-trivial part, because the
             * key is typically encrypted, so a pass phrase dialog has to be used
             * to request it from the user (or it has to be alternatively gathered
             * from a dialog program). The important point here is that ISPs
             * usually have hundrets of virtual servers configured and a lot of
             * them use SSL, so really we have to minimize the pass phrase
             * dialogs.
             *
             * The idea is this: When N virtual hosts are configured and all of
             * them use encrypted private keys with different pass phrases, we
             * have no chance and have to pop up N pass phrase dialogs. But
             * usually the admin is clever enough and uses the same pass phrase
             * for more private key files (typically he even uses one single pass
             * phrase for all). When this is the case we can minimize the dialogs
             * by trying to re-use already known/entered pass phrases.
             */</comment>
            <if pos:line="139" pos:column="13">if <condition pos:line="139" pos:column="16">(<expr><name><name pos:line="139" pos:column="17">sc<pos:position pos:line="139" pos:column="19"/></name><operator pos:line="139" pos:column="19">-&gt;<pos:position pos:line="139" pos:column="24"/></operator><name pos:line="139" pos:column="21">server<pos:position pos:line="139" pos:column="27"/></name><operator pos:line="139" pos:column="27">-&gt;<pos:position pos:line="139" pos:column="32"/></operator><name pos:line="139" pos:column="29">pks<pos:position pos:line="139" pos:column="32"/></name><operator pos:line="139" pos:column="32">-&gt;<pos:position pos:line="139" pos:column="37"/></operator><name pos:line="139" pos:column="34">key_files<pos:position pos:line="139" pos:column="43"/></name><index pos:line="139" pos:column="43">[<expr><name pos:line="139" pos:column="44">j<pos:position pos:line="139" pos:column="45"/></name></expr>]<pos:position pos:line="139" pos:column="46"/></index></name> <operator pos:line="139" pos:column="47">!=<pos:position pos:line="139" pos:column="49"/></operator> <name pos:line="139" pos:column="50">NULL<pos:position pos:line="139" pos:column="54"/></name></expr>)<pos:position pos:line="139" pos:column="55"/></condition><then pos:line="139" pos:column="55">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="140" pos:column="17">apr_cpystrn<pos:position pos:line="140" pos:column="28"/></name><argument_list pos:line="140" pos:column="28">(<argument><expr><name pos:line="140" pos:column="29">szPath<pos:position pos:line="140" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="37">sc<pos:position pos:line="140" pos:column="39"/></name><operator pos:line="140" pos:column="39">-&gt;<pos:position pos:line="140" pos:column="44"/></operator><name pos:line="140" pos:column="41">server<pos:position pos:line="140" pos:column="47"/></name><operator pos:line="140" pos:column="47">-&gt;<pos:position pos:line="140" pos:column="52"/></operator><name pos:line="140" pos:column="49">pks<pos:position pos:line="140" pos:column="52"/></name><operator pos:line="140" pos:column="52">-&gt;<pos:position pos:line="140" pos:column="57"/></operator><name pos:line="140" pos:column="54">key_files<pos:position pos:line="140" pos:column="63"/></name><index pos:line="140" pos:column="63">[<expr><name pos:line="140" pos:column="64">j<pos:position pos:line="140" pos:column="65"/></name><operator pos:line="140" pos:column="65">++<pos:position pos:line="140" pos:column="67"/></operator></expr>]<pos:position pos:line="140" pos:column="68"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="140" pos:column="70">sizeof<argument_list pos:line="140" pos:column="76">(<argument><expr><name pos:line="140" pos:column="77">szPath<pos:position pos:line="140" pos:column="83"/></name></expr></argument>)<pos:position pos:line="140" pos:column="84"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="140" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="86"/></expr_stmt></block></then></if>

            <comment type="block" pos:line="142" pos:column="13">/*
             * Try to read the private key file with the help of
             * the callback function which serves the pass
             * phrases to OpenSSL
             */</comment>
            <expr_stmt><expr><call><name pos:line="147" pos:column="13">myCtxVarSet<pos:position pos:line="147" pos:column="24"/></name><argument_list pos:line="147" pos:column="24">(<argument><expr><name pos:line="147" pos:column="25">mc<pos:position pos:line="147" pos:column="27"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="147" pos:column="30">1<pos:position pos:line="147" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="147" pos:column="33">pServ<pos:position pos:line="147" pos:column="38"/></name></expr></argument>)<pos:position pos:line="147" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="148" pos:column="13">myCtxVarSet<pos:position pos:line="148" pos:column="24"/></name><argument_list pos:line="148" pos:column="24">(<argument><expr><name pos:line="148" pos:column="25">mc<pos:position pos:line="148" pos:column="27"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="148" pos:column="30">2<pos:position pos:line="148" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="148" pos:column="33">p<pos:position pos:line="148" pos:column="34"/></name></expr></argument>)<pos:position pos:line="148" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="149" pos:column="13">myCtxVarSet<pos:position pos:line="149" pos:column="24"/></name><argument_list pos:line="149" pos:column="24">(<argument><expr><name pos:line="149" pos:column="25">mc<pos:position pos:line="149" pos:column="27"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="149" pos:column="30">3<pos:position pos:line="149" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="149" pos:column="33">aPassPhrase<pos:position pos:line="149" pos:column="44"/></name></expr></argument>)<pos:position pos:line="149" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="150" pos:column="13">myCtxVarSet<pos:position pos:line="150" pos:column="24"/></name><argument_list pos:line="150" pos:column="24">(<argument><expr><name pos:line="150" pos:column="25">mc<pos:position pos:line="150" pos:column="27"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="150" pos:column="30">4<pos:position pos:line="150" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="150" pos:column="33">&amp;<pos:position pos:line="150" pos:column="38"/></operator><name pos:line="150" pos:column="34">nPassPhraseCur<pos:position pos:line="150" pos:column="48"/></name></expr></argument>)<pos:position pos:line="150" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="151" pos:column="13">myCtxVarSet<pos:position pos:line="151" pos:column="24"/></name><argument_list pos:line="151" pos:column="24">(<argument><expr><name pos:line="151" pos:column="25">mc<pos:position pos:line="151" pos:column="27"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="151" pos:column="30">5<pos:position pos:line="151" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="151" pos:column="33">&amp;<pos:position pos:line="151" pos:column="38"/></operator><name pos:line="151" pos:column="34">cpPassPhraseCur<pos:position pos:line="151" pos:column="49"/></name></expr></argument>)<pos:position pos:line="151" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="152" pos:column="13">myCtxVarSet<pos:position pos:line="152" pos:column="24"/></name><argument_list pos:line="152" pos:column="24">(<argument><expr><name pos:line="152" pos:column="25">mc<pos:position pos:line="152" pos:column="27"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="152" pos:column="30">6<pos:position pos:line="152" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="152" pos:column="33">cpVHostID<pos:position pos:line="152" pos:column="42"/></name></expr></argument>)<pos:position pos:line="152" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="153" pos:column="13">myCtxVarSet<pos:position pos:line="153" pos:column="24"/></name><argument_list pos:line="153" pos:column="24">(<argument><expr><name pos:line="153" pos:column="25">mc<pos:position pos:line="153" pos:column="27"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="153" pos:column="30">7<pos:position pos:line="153" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="33">an<pos:position pos:line="153" pos:column="35"/></name></expr></argument>)<pos:position pos:line="153" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="154" pos:column="13">myCtxVarSet<pos:position pos:line="154" pos:column="24"/></name><argument_list pos:line="154" pos:column="24">(<argument><expr><name pos:line="154" pos:column="25">mc<pos:position pos:line="154" pos:column="27"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="154" pos:column="30">8<pos:position pos:line="154" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="154" pos:column="33">&amp;<pos:position pos:line="154" pos:column="38"/></operator><name pos:line="154" pos:column="34">nPassPhraseDialog<pos:position pos:line="154" pos:column="51"/></name></expr></argument>)<pos:position pos:line="154" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="155" pos:column="13">myCtxVarSet<pos:position pos:line="155" pos:column="24"/></name><argument_list pos:line="155" pos:column="24">(<argument><expr><name pos:line="155" pos:column="25">mc<pos:position pos:line="155" pos:column="27"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="155" pos:column="30">9<pos:position pos:line="155" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="155" pos:column="33">&amp;<pos:position pos:line="155" pos:column="38"/></operator><name pos:line="155" pos:column="34">nPassPhraseDialogCur<pos:position pos:line="155" pos:column="54"/></name></expr></argument>)<pos:position pos:line="155" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="156" pos:column="13">myCtxVarSet<pos:position pos:line="156" pos:column="24"/></name><argument_list pos:line="156" pos:column="24">(<argument><expr><name pos:line="156" pos:column="25">mc<pos:position pos:line="156" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="156" pos:column="29">10<pos:position pos:line="156" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="156" pos:column="33">&amp;<pos:position pos:line="156" pos:column="38"/></operator><name pos:line="156" pos:column="34">bPassPhraseDialogOnce<pos:position pos:line="156" pos:column="55"/></name></expr></argument>)<pos:position pos:line="156" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="57"/></expr_stmt>

            <expr_stmt><expr><name pos:line="158" pos:column="13">nPassPhraseCur<pos:position pos:line="158" pos:column="27"/></name>        <operator pos:line="158" pos:column="35">=<pos:position pos:line="158" pos:column="36"/></operator> <literal type="number" pos:line="158" pos:column="37">0<pos:position pos:line="158" pos:column="38"/></literal></expr>;<pos:position pos:line="158" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name pos:line="159" pos:column="13">nPassPhraseRetry<pos:position pos:line="159" pos:column="29"/></name>      <operator pos:line="159" pos:column="35">=<pos:position pos:line="159" pos:column="36"/></operator> <literal type="number" pos:line="159" pos:column="37">0<pos:position pos:line="159" pos:column="38"/></literal></expr>;<pos:position pos:line="159" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name pos:line="160" pos:column="13">nPassPhraseDialogCur<pos:position pos:line="160" pos:column="33"/></name>  <operator pos:line="160" pos:column="35">=<pos:position pos:line="160" pos:column="36"/></operator> <literal type="number" pos:line="160" pos:column="37">0<pos:position pos:line="160" pos:column="38"/></literal></expr>;<pos:position pos:line="160" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name pos:line="161" pos:column="13">bPassPhraseDialogOnce<pos:position pos:line="161" pos:column="34"/></name> <operator pos:line="161" pos:column="35">=<pos:position pos:line="161" pos:column="36"/></operator> <name pos:line="161" pos:column="37">TRUE<pos:position pos:line="161" pos:column="41"/></name></expr>;<pos:position pos:line="161" pos:column="42"/></expr_stmt>

            <expr_stmt><expr><name pos:line="163" pos:column="13">pPrivateKey<pos:position pos:line="163" pos:column="24"/></name> <operator pos:line="163" pos:column="25">=<pos:position pos:line="163" pos:column="26"/></operator> <name pos:line="163" pos:column="27">NULL<pos:position pos:line="163" pos:column="31"/></name></expr>;<pos:position pos:line="163" pos:column="32"/></expr_stmt>

            <for pos:line="165" pos:column="13">for <control pos:line="165" pos:column="17">(<init pos:line="165" pos:column="18">;<pos:position pos:line="165" pos:column="19"/></init><condition pos:line="165" pos:column="19">;<pos:position pos:line="165" pos:column="20"/></condition><incr/>)<pos:position pos:line="165" pos:column="21"/></control> <block pos:line="165" pos:column="22">{
                <comment type="block" pos:line="166" pos:column="17">/*
                 * Try to read the private key file with the help of
                 * the callback function which serves the pass
                 * phrases to OpenSSL
                 */</comment>
                <if pos:line="171" pos:column="17">if <condition pos:line="171" pos:column="20">(<expr><operator pos:line="171" pos:column="21">(<pos:position pos:line="171" pos:column="22"/></operator><name pos:line="171" pos:column="22">rv<pos:position pos:line="171" pos:column="24"/></name> <operator pos:line="171" pos:column="25">=<pos:position pos:line="171" pos:column="26"/></operator> <call><name pos:line="171" pos:column="27">exists_and_readable<pos:position pos:line="171" pos:column="46"/></name><argument_list pos:line="171" pos:column="46">(<argument><expr><name pos:line="171" pos:column="47">szPath<pos:position pos:line="171" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="55">p<pos:position pos:line="171" pos:column="56"/></name></expr></argument>,
                                              <argument><expr><operator pos:line="172" pos:column="47">&amp;<pos:position pos:line="172" pos:column="52"/></operator><name pos:line="172" pos:column="48">pkey_mtime<pos:position pos:line="172" pos:column="58"/></name></expr></argument>)<pos:position pos:line="172" pos:column="59"/></argument_list></call><operator pos:line="172" pos:column="59">)<pos:position pos:line="172" pos:column="60"/></operator> <operator pos:line="172" pos:column="61">!=<pos:position pos:line="172" pos:column="63"/></operator> <name pos:line="172" pos:column="64">APR_SUCCESS<pos:position pos:line="172" pos:column="75"/></name></expr> )<pos:position pos:line="172" pos:column="77"/></condition><then pos:line="172" pos:column="77"> <block pos:line="172" pos:column="78">{
                     <expr_stmt><expr><call><name pos:line="173" pos:column="22">ap_log_error<pos:position pos:line="173" pos:column="34"/></name><argument_list pos:line="173" pos:column="34">(<argument><expr><name pos:line="173" pos:column="35">APLOG_MARK<pos:position pos:line="173" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="47">APLOG_ERR<pos:position pos:line="173" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="58">rv<pos:position pos:line="173" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="62">s<pos:position pos:line="173" pos:column="63"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="174" pos:column="35">"Init: Can't open server private key file "<pos:position pos:line="174" pos:column="78"/></literal>
                                  <literal type="string" pos:line="175" pos:column="35">"%s"<pos:position pos:line="175" pos:column="39"/></literal></expr></argument>,<argument><expr><name pos:line="175" pos:column="40">szPath<pos:position pos:line="175" pos:column="46"/></name></expr></argument>)<pos:position pos:line="175" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="48"/></expr_stmt>
                     <expr_stmt><expr><call><name pos:line="176" pos:column="22">ssl_die<pos:position pos:line="176" pos:column="29"/></name><argument_list pos:line="176" pos:column="29">()<pos:position pos:line="176" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="177" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="179" pos:column="17">/*
                 * if the private key is encrypted and SSLPassPhraseDialog
                 * is configured to "builtin" it isn't possible to prompt for
                 * a password after httpd has detached from the tty.
                 * in this case if we already have a private key and the
                 * file name/mtime hasn't changed, then reuse the existing key.
                 * we also reuse existing private keys that were encrypted for
                 * exec: and pipe: dialogs to minimize chances to snoop the
                 * password.  that and pipe: dialogs might prompt the user
                 * for password, which on win32 for example could happen 4
                 * times at startup.  twice for each child and twice within
                 * each since apache "restarts itself" on startup.
                 * of course this will not work for the builtin dialog if
                 * the server was started without LoadModule ssl_module
                 * configured, then restarted with it configured.
                 * but we fall through with a chance of success if the key
                 * is not encrypted or can be handled via exec or pipe dialog.
                 * and in the case of fallthrough, pkey_mtime and isatty()
                 * are used to give a better idea as to what failed.
                 */</comment>
                <if pos:line="199" pos:column="17">if <condition pos:line="199" pos:column="20">(<expr><name pos:line="199" pos:column="21">pkey_mtime<pos:position pos:line="199" pos:column="31"/></name></expr>)<pos:position pos:line="199" pos:column="32"/></condition><then pos:line="199" pos:column="32"> <block pos:line="199" pos:column="33">{
                    <decl_stmt><decl><type><name pos:line="200" pos:column="21">int<pos:position pos:line="200" pos:column="24"/></name></type> <name pos:line="200" pos:column="25">i<pos:position pos:line="200" pos:column="26"/></name></decl>;<pos:position pos:line="200" pos:column="27"/></decl_stmt>

                    <for pos:line="202" pos:column="21">for <control pos:line="202" pos:column="25">(<init><expr><name pos:line="202" pos:column="26">i<pos:position pos:line="202" pos:column="27"/></name><operator pos:line="202" pos:column="27">=<pos:position pos:line="202" pos:column="28"/></operator><literal type="number" pos:line="202" pos:column="28">0<pos:position pos:line="202" pos:column="29"/></literal></expr>;<pos:position pos:line="202" pos:column="30"/></init> <condition><expr><name pos:line="202" pos:column="31">i<pos:position pos:line="202" pos:column="32"/></name> <operator pos:line="202" pos:column="33">&lt;<pos:position pos:line="202" pos:column="37"/></operator> <name pos:line="202" pos:column="35">SSL_AIDX_MAX<pos:position pos:line="202" pos:column="47"/></name></expr>;<pos:position pos:line="202" pos:column="48"/></condition> <incr><expr><name pos:line="202" pos:column="49">i<pos:position pos:line="202" pos:column="50"/></name><operator pos:line="202" pos:column="50">++<pos:position pos:line="202" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="202" pos:column="53"/></control> <block pos:line="202" pos:column="54">{
                        <decl_stmt><decl><type><specifier pos:line="203" pos:column="25">const<pos:position pos:line="203" pos:column="30"/></specifier> <name pos:line="203" pos:column="31">char<pos:position pos:line="203" pos:column="35"/></name> <modifier pos:line="203" pos:column="36">*<pos:position pos:line="203" pos:column="37"/></modifier></type><name pos:line="203" pos:column="37">key_id<pos:position pos:line="203" pos:column="43"/></name> <init pos:line="203" pos:column="44">=
                            <expr><call><name pos:line="204" pos:column="29">ssl_asn1_table_keyfmt<pos:position pos:line="204" pos:column="50"/></name><argument_list pos:line="204" pos:column="50">(<argument><expr><name pos:line="204" pos:column="51">p<pos:position pos:line="204" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="54">cpVHostID<pos:position pos:line="204" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="65">i<pos:position pos:line="204" pos:column="66"/></name></expr></argument>)<pos:position pos:line="204" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="204" pos:column="68"/></decl_stmt>
                        <decl_stmt><decl><type><name pos:line="205" pos:column="25">ssl_asn1_t<pos:position pos:line="205" pos:column="35"/></name> <modifier pos:line="205" pos:column="36">*<pos:position pos:line="205" pos:column="37"/></modifier></type><name pos:line="205" pos:column="37">asn1<pos:position pos:line="205" pos:column="41"/></name> <init pos:line="205" pos:column="42">=
                            <expr><call><name pos:line="206" pos:column="29">ssl_asn1_table_get<pos:position pos:line="206" pos:column="47"/></name><argument_list pos:line="206" pos:column="47">(<argument><expr><name><name pos:line="206" pos:column="48">mc<pos:position pos:line="206" pos:column="50"/></name><operator pos:line="206" pos:column="50">-&gt;<pos:position pos:line="206" pos:column="55"/></operator><name pos:line="206" pos:column="52">tPrivateKey<pos:position pos:line="206" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="65">key_id<pos:position pos:line="206" pos:column="71"/></name></expr></argument>)<pos:position pos:line="206" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="206" pos:column="73"/></decl_stmt>

                        <if pos:line="208" pos:column="25">if <condition pos:line="208" pos:column="28">(<expr><name pos:line="208" pos:column="29">asn1<pos:position pos:line="208" pos:column="33"/></name> <operator pos:line="208" pos:column="34">&amp;&amp;<pos:position pos:line="208" pos:column="44"/></operator> <operator pos:line="208" pos:column="37">(<pos:position pos:line="208" pos:column="38"/></operator><name><name pos:line="208" pos:column="38">asn1<pos:position pos:line="208" pos:column="42"/></name><operator pos:line="208" pos:column="42">-&gt;<pos:position pos:line="208" pos:column="47"/></operator><name pos:line="208" pos:column="44">source_mtime<pos:position pos:line="208" pos:column="56"/></name></name> <operator pos:line="208" pos:column="57">==<pos:position pos:line="208" pos:column="59"/></operator> <name pos:line="208" pos:column="60">pkey_mtime<pos:position pos:line="208" pos:column="70"/></name><operator pos:line="208" pos:column="70">)<pos:position pos:line="208" pos:column="71"/></operator></expr>)<pos:position pos:line="208" pos:column="72"/></condition><then pos:line="208" pos:column="72"> <block pos:line="208" pos:column="73">{
                            <expr_stmt><expr><call><name pos:line="209" pos:column="29">ap_log_error<pos:position pos:line="209" pos:column="41"/></name><argument_list pos:line="209" pos:column="41">(<argument><expr><name pos:line="209" pos:column="42">APLOG_MARK<pos:position pos:line="209" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="54">APLOG_INFO<pos:position pos:line="209" pos:column="64"/></name></expr></argument>,
                                         <argument><expr><literal type="number" pos:line="210" pos:column="42">0<pos:position pos:line="210" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="210" pos:column="45">pServ<pos:position pos:line="210" pos:column="50"/></name></expr></argument>,
                                         <argument><expr><literal type="string" pos:line="211" pos:column="42">"%s reusing existing "<pos:position pos:line="211" pos:column="64"/></literal>
                                         <literal type="string" pos:line="212" pos:column="42">"%s private key on restart"<pos:position pos:line="212" pos:column="69"/></literal></expr></argument>,
                                         <argument><expr><name pos:line="213" pos:column="42">cpVHostID<pos:position pos:line="213" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="213" pos:column="53">ssl_asn1_keystr<pos:position pos:line="213" pos:column="68"/></name><argument_list pos:line="213" pos:column="68">(<argument><expr><name pos:line="213" pos:column="69">i<pos:position pos:line="213" pos:column="70"/></name></expr></argument>)<pos:position pos:line="213" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="213" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="73"/></expr_stmt>
                            <return pos:line="214" pos:column="29">return;<pos:position pos:line="214" pos:column="36"/></return>
                        }<pos:position pos:line="215" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="216" pos:column="22"/></block></for>
                }<pos:position pos:line="217" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="219" pos:column="17">cpPassPhraseCur<pos:position pos:line="219" pos:column="32"/></name> <operator pos:line="219" pos:column="33">=<pos:position pos:line="219" pos:column="34"/></operator> <name pos:line="219" pos:column="35">NULL<pos:position pos:line="219" pos:column="39"/></name></expr>;<pos:position pos:line="219" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name pos:line="220" pos:column="17">ssl_pphrase_server_rec<pos:position pos:line="220" pos:column="39"/></name> <operator pos:line="220" pos:column="40">=<pos:position pos:line="220" pos:column="41"/></operator> <name pos:line="220" pos:column="42">s<pos:position pos:line="220" pos:column="43"/></name></expr>;<pos:position pos:line="220" pos:column="44"/></expr_stmt> <comment type="block" pos:line="220" pos:column="45">/* to make up for sslc flaw */</comment>

                <comment type="block" pos:line="222" pos:column="17">/* Ensure that the error stack is empty; some SSL
                 * functions will fail spuriously if the error stack
                 * is not empty. */</comment>
                <expr_stmt><expr><call><name pos:line="225" pos:column="17">ERR_clear_error<pos:position pos:line="225" pos:column="32"/></name><argument_list pos:line="225" pos:column="32">()<pos:position pos:line="225" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="35"/></expr_stmt>

                <expr_stmt><expr><name pos:line="227" pos:column="17">bReadable<pos:position pos:line="227" pos:column="26"/></name> <operator pos:line="227" pos:column="27">=<pos:position pos:line="227" pos:column="28"/></operator> <operator pos:line="227" pos:column="29">(<pos:position pos:line="227" pos:column="30"/></operator><ternary><condition><expr><operator pos:line="227" pos:column="30">(<pos:position pos:line="227" pos:column="31"/></operator><name pos:line="227" pos:column="31">pPrivateKey<pos:position pos:line="227" pos:column="42"/></name> <operator pos:line="227" pos:column="43">=<pos:position pos:line="227" pos:column="44"/></operator> <call><name pos:line="227" pos:column="45">SSL_read_PrivateKey<pos:position pos:line="227" pos:column="64"/></name><argument_list pos:line="227" pos:column="64">(<argument><expr><name pos:line="227" pos:column="65">szPath<pos:position pos:line="227" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="227" pos:column="73">NULL<pos:position pos:line="227" pos:column="77"/></name></expr></argument>,
                            <argument><expr><name pos:line="228" pos:column="29">ssl_pphrase_Handle_CB<pos:position pos:line="228" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="228" pos:column="52">s<pos:position pos:line="228" pos:column="53"/></name></expr></argument>)<pos:position pos:line="228" pos:column="54"/></argument_list></call><operator pos:line="228" pos:column="54">)<pos:position pos:line="228" pos:column="55"/></operator> <operator pos:line="228" pos:column="56">!=<pos:position pos:line="228" pos:column="58"/></operator> <name pos:line="228" pos:column="59">NULL<pos:position pos:line="228" pos:column="63"/></name></expr> ?<pos:position pos:line="228" pos:column="65"/></condition><then pos:line="228" pos:column="65"> <expr><name pos:line="228" pos:column="66">TRUE<pos:position pos:line="228" pos:column="70"/></name></expr> <pos:position pos:line="228" pos:column="71"/></then><else pos:line="228" pos:column="71">: <expr><name pos:line="228" pos:column="73">FALSE<pos:position pos:line="228" pos:column="78"/></name></expr></else></ternary><operator pos:line="228" pos:column="78">)<pos:position pos:line="228" pos:column="79"/></operator></expr>;<pos:position pos:line="228" pos:column="80"/></expr_stmt>

                <comment type="block" pos:line="230" pos:column="17">/*
                 * when the private key file now was readable,
                 * it's fine and we go out of the loop
                 */</comment>
                <if pos:line="234" pos:column="17">if <condition pos:line="234" pos:column="20">(<expr><name pos:line="234" pos:column="21">bReadable<pos:position pos:line="234" pos:column="30"/></name></expr>)<pos:position pos:line="234" pos:column="31"/></condition><then pos:line="234" pos:column="31">
                   <block type="pseudo"><break pos:line="235" pos:column="20">break;<pos:position pos:line="235" pos:column="26"/></break></block></then></if>

                <comment type="block" pos:line="237" pos:column="17">/*
                 * when we have more remembered pass phrases
                 * try to reuse these first.
                 */</comment>
                <if pos:line="241" pos:column="17">if <condition pos:line="241" pos:column="20">(<expr><name pos:line="241" pos:column="21">nPassPhraseCur<pos:position pos:line="241" pos:column="35"/></name> <operator pos:line="241" pos:column="36">&lt;<pos:position pos:line="241" pos:column="40"/></operator> <name pos:line="241" pos:column="38">nPassPhrase<pos:position pos:line="241" pos:column="49"/></name></expr>)<pos:position pos:line="241" pos:column="50"/></condition><then pos:line="241" pos:column="50"> <block pos:line="241" pos:column="51">{
                    <expr_stmt><expr><name pos:line="242" pos:column="21">nPassPhraseCur<pos:position pos:line="242" pos:column="35"/></name><operator pos:line="242" pos:column="35">++<pos:position pos:line="242" pos:column="37"/></operator></expr>;<pos:position pos:line="242" pos:column="38"/></expr_stmt>
                    <continue pos:line="243" pos:column="21">continue;<pos:position pos:line="243" pos:column="30"/></continue>
                }<pos:position pos:line="244" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="246" pos:column="17">/*
                 * else it's not readable and we have no more
                 * remembered pass phrases. Then this has to mean
                 * that the callback function popped up the dialog
                 * but a wrong pass phrase was entered.  We give the
                 * user (but not the dialog program) a few more
                 * chances...
                 */</comment>
<cpp:ifndef pos:line="254" pos:column="1">#<cpp:directive pos:line="254" pos:column="2">ifndef<pos:position pos:line="254" pos:column="8"/></cpp:directive> <name pos:line="254" pos:column="9">WIN32<pos:position pos:line="254" pos:column="14"/></name></cpp:ifndef>
                <if pos:line="255" pos:column="17">if <condition pos:line="255" pos:column="20">(<expr><operator pos:line="255" pos:column="21">(<pos:position pos:line="255" pos:column="22"/></operator><name><name pos:line="255" pos:column="22">sc<pos:position pos:line="255" pos:column="24"/></name><operator pos:line="255" pos:column="24">-&gt;<pos:position pos:line="255" pos:column="29"/></operator><name pos:line="255" pos:column="26">server<pos:position pos:line="255" pos:column="32"/></name><operator pos:line="255" pos:column="32">-&gt;<pos:position pos:line="255" pos:column="37"/></operator><name pos:line="255" pos:column="34">pphrase_dialog_type<pos:position pos:line="255" pos:column="53"/></name></name> <operator pos:line="255" pos:column="54">==<pos:position pos:line="255" pos:column="56"/></operator> <name pos:line="255" pos:column="57">SSL_PPTYPE_BUILTIN<pos:position pos:line="255" pos:column="75"/></name>
                       <operator pos:line="256" pos:column="24">||<pos:position pos:line="256" pos:column="26"/></operator> <name><name pos:line="256" pos:column="27">sc<pos:position pos:line="256" pos:column="29"/></name><operator pos:line="256" pos:column="29">-&gt;<pos:position pos:line="256" pos:column="34"/></operator><name pos:line="256" pos:column="31">server<pos:position pos:line="256" pos:column="37"/></name><operator pos:line="256" pos:column="37">-&gt;<pos:position pos:line="256" pos:column="42"/></operator><name pos:line="256" pos:column="39">pphrase_dialog_type<pos:position pos:line="256" pos:column="58"/></name></name> <operator pos:line="256" pos:column="59">==<pos:position pos:line="256" pos:column="61"/></operator> <name pos:line="256" pos:column="62">SSL_PPTYPE_PIPE<pos:position pos:line="256" pos:column="77"/></name><operator pos:line="256" pos:column="77">)<pos:position pos:line="256" pos:column="78"/></operator></expr></condition></if>
<cpp:else pos:line="257" pos:column="1">#<cpp:directive pos:line="257" pos:column="2">else<pos:position pos:line="257" pos:column="6"/></cpp:directive></cpp:else>
                <if pos:line="258" pos:column="17">if <condition pos:line="258" pos:column="20">(<expr><name><name pos:line="258" pos:column="21">sc<pos:position pos:line="258" pos:column="23"/></name><operator pos:line="258" pos:column="23">-&gt;<pos:position pos:line="258" pos:column="28"/></operator><name pos:line="258" pos:column="25">server<pos:position pos:line="258" pos:column="31"/></name><operator pos:line="258" pos:column="31">-&gt;<pos:position pos:line="258" pos:column="36"/></operator><name pos:line="258" pos:column="33">pphrase_dialog_type<pos:position pos:line="258" pos:column="52"/></name></name> <operator pos:line="258" pos:column="53">==<pos:position pos:line="258" pos:column="55"/></operator> <name pos:line="258" pos:column="56">SSL_PPTYPE_PIPE<pos:position pos:line="258" pos:column="71"/></name>
<cpp:endif pos:line="259" pos:column="1">#<cpp:directive pos:line="259" pos:column="2">endif<pos:position pos:line="259" pos:column="7"/></cpp:directive></cpp:endif>
                    <operator pos:line="260" pos:column="21">&amp;&amp;<pos:position pos:line="260" pos:column="31"/></operator> <name pos:line="260" pos:column="24">cpPassPhraseCur<pos:position pos:line="260" pos:column="39"/></name> <operator pos:line="260" pos:column="40">!=<pos:position pos:line="260" pos:column="42"/></operator> <name pos:line="260" pos:column="43">NULL<pos:position pos:line="260" pos:column="47"/></name>
                    <operator pos:line="261" pos:column="21">&amp;&amp;<pos:position pos:line="261" pos:column="31"/></operator> <name pos:line="261" pos:column="24">nPassPhraseRetry<pos:position pos:line="261" pos:column="40"/></name> <operator pos:line="261" pos:column="41">&lt;<pos:position pos:line="261" pos:column="45"/></operator> <name pos:line="261" pos:column="43">BUILTIN_DIALOG_RETRIES<pos:position pos:line="261" pos:column="65"/></name></expr> )<pos:position pos:line="261" pos:column="67"/></condition><then pos:line="261" pos:column="67"> <block pos:line="261" pos:column="68">{
                    <expr_stmt><expr><call><name pos:line="262" pos:column="21">apr_file_printf<pos:position pos:line="262" pos:column="36"/></name><argument_list pos:line="262" pos:column="36">(<argument><expr><name pos:line="262" pos:column="37">writetty<pos:position pos:line="262" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="262" pos:column="47">"Apache:mod_ssl:Error: Pass phrase incorrect "<pos:position pos:line="262" pos:column="93"/></literal>
                            <literal type="string" pos:line="263" pos:column="29">"(%d more retr%s permitted).\n"<pos:position pos:line="263" pos:column="60"/></literal></expr></argument>,
                            <argument><expr><operator pos:line="264" pos:column="29">(<pos:position pos:line="264" pos:column="30"/></operator><name pos:line="264" pos:column="30">BUILTIN_DIALOG_RETRIES<pos:position pos:line="264" pos:column="52"/></name><operator pos:line="264" pos:column="52">-<pos:position pos:line="264" pos:column="53"/></operator><name pos:line="264" pos:column="53">nPassPhraseRetry<pos:position pos:line="264" pos:column="69"/></name><operator pos:line="264" pos:column="69">)<pos:position pos:line="264" pos:column="70"/></operator></expr></argument>,
                            <argument><expr><ternary><condition><expr><operator pos:line="265" pos:column="29">(<pos:position pos:line="265" pos:column="30"/></operator><name pos:line="265" pos:column="30">BUILTIN_DIALOG_RETRIES<pos:position pos:line="265" pos:column="52"/></name><operator pos:line="265" pos:column="52">-<pos:position pos:line="265" pos:column="53"/></operator><name pos:line="265" pos:column="53">nPassPhraseRetry<pos:position pos:line="265" pos:column="69"/></name><operator pos:line="265" pos:column="69">)<pos:position pos:line="265" pos:column="70"/></operator> <operator pos:line="265" pos:column="71">==<pos:position pos:line="265" pos:column="73"/></operator> <literal type="number" pos:line="265" pos:column="74">1<pos:position pos:line="265" pos:column="75"/></literal></expr> ?<pos:position pos:line="265" pos:column="77"/></condition><then pos:line="265" pos:column="77"> <expr><literal type="string" pos:line="265" pos:column="78">"y"<pos:position pos:line="265" pos:column="81"/></literal></expr> <pos:position pos:line="265" pos:column="82"/></then><else pos:line="265" pos:column="82">: <expr><literal type="string" pos:line="265" pos:column="84">"ies"<pos:position pos:line="265" pos:column="89"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="265" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="91"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="266" pos:column="21">nPassPhraseRetry<pos:position pos:line="266" pos:column="37"/></name><operator pos:line="266" pos:column="37">++<pos:position pos:line="266" pos:column="39"/></operator></expr>;<pos:position pos:line="266" pos:column="40"/></expr_stmt>
                    <if pos:line="267" pos:column="21">if <condition pos:line="267" pos:column="24">(<expr><name pos:line="267" pos:column="25">nPassPhraseRetry<pos:position pos:line="267" pos:column="41"/></name> <operator pos:line="267" pos:column="42">&gt;<pos:position pos:line="267" pos:column="46"/></operator> <name pos:line="267" pos:column="44">BUILTIN_DIALOG_BACKOFF<pos:position pos:line="267" pos:column="66"/></name></expr>)<pos:position pos:line="267" pos:column="67"/></condition><then pos:line="267" pos:column="67">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="268" pos:column="25">apr_sleep<pos:position pos:line="268" pos:column="34"/></name><argument_list pos:line="268" pos:column="34">(<argument><expr><operator pos:line="268" pos:column="35">(<pos:position pos:line="268" pos:column="36"/></operator><name pos:line="268" pos:column="36">nPassPhraseRetry<pos:position pos:line="268" pos:column="52"/></name><operator pos:line="268" pos:column="52">-<pos:position pos:line="268" pos:column="53"/></operator><name pos:line="268" pos:column="53">BUILTIN_DIALOG_BACKOFF<pos:position pos:line="268" pos:column="75"/></name><operator pos:line="268" pos:column="75">)<pos:position pos:line="268" pos:column="76"/></operator>
                                    <operator pos:line="269" pos:column="37">*<pos:position pos:line="269" pos:column="38"/></operator> <literal type="number" pos:line="269" pos:column="39">5<pos:position pos:line="269" pos:column="40"/></literal> <operator pos:line="269" pos:column="41">*<pos:position pos:line="269" pos:column="42"/></operator> <name pos:line="269" pos:column="43">APR_USEC_PER_SEC<pos:position pos:line="269" pos:column="59"/></name></expr></argument>)<pos:position pos:line="269" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="61"/></expr_stmt></block></then></if>
                    <continue pos:line="270" pos:column="21">continue;<pos:position pos:line="270" pos:column="30"/></continue>
                }<pos:position pos:line="271" pos:column="18"/></block></then></if>
<cpp:ifdef pos:line="272" pos:column="1">#<cpp:directive pos:line="272" pos:column="2">ifdef<pos:position pos:line="272" pos:column="7"/></cpp:directive> <name pos:line="272" pos:column="8">WIN32<pos:position pos:line="272" pos:column="13"/></name></cpp:ifdef>
                <if pos:line="273" pos:column="17">if <condition pos:line="273" pos:column="20">(<expr><name><name pos:line="273" pos:column="21">sc<pos:position pos:line="273" pos:column="23"/></name><operator pos:line="273" pos:column="23">-&gt;<pos:position pos:line="273" pos:column="28"/></operator><name pos:line="273" pos:column="25">server<pos:position pos:line="273" pos:column="31"/></name><operator pos:line="273" pos:column="31">-&gt;<pos:position pos:line="273" pos:column="36"/></operator><name pos:line="273" pos:column="33">pphrase_dialog_type<pos:position pos:line="273" pos:column="52"/></name></name> <operator pos:line="273" pos:column="53">==<pos:position pos:line="273" pos:column="55"/></operator> <name pos:line="273" pos:column="56">SSL_PPTYPE_BUILTIN<pos:position pos:line="273" pos:column="74"/></name></expr>)<pos:position pos:line="273" pos:column="75"/></condition><then pos:line="273" pos:column="75"> <block pos:line="273" pos:column="76">{
                    <expr_stmt><expr><call><name pos:line="274" pos:column="21">ap_log_error<pos:position pos:line="274" pos:column="33"/></name><argument_list pos:line="274" pos:column="33">(<argument><expr><name pos:line="274" pos:column="34">APLOG_MARK<pos:position pos:line="274" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="274" pos:column="46">APLOG_ERR<pos:position pos:line="274" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="274" pos:column="57">0<pos:position pos:line="274" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="274" pos:column="60">s<pos:position pos:line="274" pos:column="61"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="275" pos:column="34">"Init: SSLPassPhraseDialog builtin is not "<pos:position pos:line="275" pos:column="77"/></literal>
                                 <literal type="string" pos:line="276" pos:column="34">"supported on Win32 (key file "<pos:position pos:line="276" pos:column="65"/></literal>
                                 <literal type="string" pos:line="277" pos:column="34">"%s)"<pos:position pos:line="277" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="277" pos:column="41">szPath<pos:position pos:line="277" pos:column="47"/></name></expr></argument>)<pos:position pos:line="277" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="49"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="278" pos:column="21">ssl_die<pos:position pos:line="278" pos:column="28"/></name><argument_list pos:line="278" pos:column="28">()<pos:position pos:line="278" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="279" pos:column="18"/></block></then></if>
<cpp:endif pos:line="280" pos:column="1">#<cpp:directive pos:line="280" pos:column="2">endif<pos:position pos:line="280" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="280" pos:column="8">/* WIN32 */</comment>

                <comment type="block" pos:line="282" pos:column="17">/*
                 * Ok, anything else now means a fatal error.
                 */</comment>
                <if pos:line="285" pos:column="17">if <condition pos:line="285" pos:column="20">(<expr><name pos:line="285" pos:column="21">cpPassPhraseCur<pos:position pos:line="285" pos:column="36"/></name> <operator pos:line="285" pos:column="37">==<pos:position pos:line="285" pos:column="39"/></operator> <name pos:line="285" pos:column="40">NULL<pos:position pos:line="285" pos:column="44"/></name></expr>)<pos:position pos:line="285" pos:column="45"/></condition><then pos:line="285" pos:column="45"> <block pos:line="285" pos:column="46">{
                    <if pos:line="286" pos:column="21">if <condition pos:line="286" pos:column="24">(<expr><name pos:line="286" pos:column="25">nPassPhraseDialogCur<pos:position pos:line="286" pos:column="45"/></name> <operator pos:line="286" pos:column="46">&amp;&amp;<pos:position pos:line="286" pos:column="56"/></operator> <name pos:line="286" pos:column="49">pkey_mtime<pos:position pos:line="286" pos:column="59"/></name> <operator pos:line="286" pos:column="60">&amp;&amp;<pos:position pos:line="286" pos:column="70"/></operator>
                        <operator pos:line="287" pos:column="25">!<pos:position pos:line="287" pos:column="26"/></operator><call><name pos:line="287" pos:column="26">isatty<pos:position pos:line="287" pos:column="32"/></name><argument_list pos:line="287" pos:column="32">(<argument><expr><call><name pos:line="287" pos:column="33">fileno<pos:position pos:line="287" pos:column="39"/></name><argument_list pos:line="287" pos:column="39">(<argument><expr><name pos:line="287" pos:column="40">stdout<pos:position pos:line="287" pos:column="46"/></name></expr></argument>)<pos:position pos:line="287" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="287" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="287" pos:column="49"/></condition><then pos:line="287" pos:column="49"> <comment type="block" pos:line="287" pos:column="50">/* XXX: apr_isatty() */</comment>
                    <block pos:line="288" pos:column="21">{
                        <expr_stmt><expr><call><name pos:line="289" pos:column="25">ap_log_error<pos:position pos:line="289" pos:column="37"/></name><argument_list pos:line="289" pos:column="37">(<argument><expr><name pos:line="289" pos:column="38">APLOG_MARK<pos:position pos:line="289" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="289" pos:column="50">APLOG_ERR<pos:position pos:line="289" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="289" pos:column="61">0<pos:position pos:line="289" pos:column="62"/></literal></expr></argument>,
                                     <argument><expr><name pos:line="290" pos:column="38">pServ<pos:position pos:line="290" pos:column="43"/></name></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="291" pos:column="38">"Init: Unable to read pass phrase "<pos:position pos:line="291" pos:column="73"/></literal>
                                     <literal type="string" pos:line="292" pos:column="38">"[Hint: key introduced or changed "<pos:position pos:line="292" pos:column="73"/></literal>
                                     <literal type="string" pos:line="293" pos:column="38">"before restart?]"<pos:position pos:line="293" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="293" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="58"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="294" pos:column="25">ssl_log_ssl_error<pos:position pos:line="294" pos:column="42"/></name><argument_list pos:line="294" pos:column="42">(<argument><expr><name pos:line="294" pos:column="43">SSLLOG_MARK<pos:position pos:line="294" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="56">APLOG_ERR<pos:position pos:line="294" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="67">pServ<pos:position pos:line="294" pos:column="72"/></name></expr></argument>)<pos:position pos:line="294" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="74"/></expr_stmt>
                    }<pos:position pos:line="295" pos:column="22"/></block></then>
                    <else pos:line="296" pos:column="21">else <block pos:line="296" pos:column="26">{
                        <expr_stmt><expr><call><name pos:line="297" pos:column="25">ap_log_error<pos:position pos:line="297" pos:column="37"/></name><argument_list pos:line="297" pos:column="37">(<argument><expr><name pos:line="297" pos:column="38">APLOG_MARK<pos:position pos:line="297" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="50">APLOG_ERR<pos:position pos:line="297" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="297" pos:column="61">0<pos:position pos:line="297" pos:column="62"/></literal></expr></argument>,
                                     <argument><expr><name pos:line="298" pos:column="38">pServ<pos:position pos:line="298" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="298" pos:column="45">"Init: Private key not found"<pos:position pos:line="298" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="298" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="76"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="299" pos:column="25">ssl_log_ssl_error<pos:position pos:line="299" pos:column="42"/></name><argument_list pos:line="299" pos:column="42">(<argument><expr><name pos:line="299" pos:column="43">SSLLOG_MARK<pos:position pos:line="299" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="299" pos:column="56">APLOG_ERR<pos:position pos:line="299" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="299" pos:column="67">pServ<pos:position pos:line="299" pos:column="72"/></name></expr></argument>)<pos:position pos:line="299" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="74"/></expr_stmt>
                    }<pos:position pos:line="300" pos:column="22"/></block></else></if>
                    <if pos:line="301" pos:column="21">if <condition pos:line="301" pos:column="24">(<expr><name pos:line="301" pos:column="25">writetty<pos:position pos:line="301" pos:column="33"/></name></expr>)<pos:position pos:line="301" pos:column="34"/></condition><then pos:line="301" pos:column="34"> <block pos:line="301" pos:column="35">{
                        <expr_stmt><expr><call><name pos:line="302" pos:column="25">apr_file_printf<pos:position pos:line="302" pos:column="40"/></name><argument_list pos:line="302" pos:column="40">(<argument><expr><name pos:line="302" pos:column="41">writetty<pos:position pos:line="302" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="302" pos:column="51">"Apache:mod_ssl:Error: Private key not found.\n"<pos:position pos:line="302" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="302" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="101"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="303" pos:column="25">apr_file_printf<pos:position pos:line="303" pos:column="40"/></name><argument_list pos:line="303" pos:column="40">(<argument><expr><name pos:line="303" pos:column="41">writetty<pos:position pos:line="303" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="303" pos:column="51">"**Stopped\n"<pos:position pos:line="303" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="303" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="66"/></expr_stmt>
                    }<pos:position pos:line="304" pos:column="22"/></block></then></if>
                }<pos:position pos:line="305" pos:column="18"/></block></then>
                <else pos:line="306" pos:column="17">else <block pos:line="306" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="307" pos:column="21">ap_log_error<pos:position pos:line="307" pos:column="33"/></name><argument_list pos:line="307" pos:column="33">(<argument><expr><name pos:line="307" pos:column="34">APLOG_MARK<pos:position pos:line="307" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="307" pos:column="46">APLOG_ERR<pos:position pos:line="307" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="307" pos:column="57">0<pos:position pos:line="307" pos:column="58"/></literal></expr></argument>,
                                 <argument><expr><name pos:line="308" pos:column="34">pServ<pos:position pos:line="308" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="308" pos:column="41">"Init: Pass phrase incorrect"<pos:position pos:line="308" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="308" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="72"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="309" pos:column="21">ssl_log_ssl_error<pos:position pos:line="309" pos:column="38"/></name><argument_list pos:line="309" pos:column="38">(<argument><expr><name pos:line="309" pos:column="39">SSLLOG_MARK<pos:position pos:line="309" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="52">APLOG_ERR<pos:position pos:line="309" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="63">pServ<pos:position pos:line="309" pos:column="68"/></name></expr></argument>)<pos:position pos:line="309" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="70"/></expr_stmt>

                    <if pos:line="311" pos:column="21">if <condition pos:line="311" pos:column="24">(<expr><name pos:line="311" pos:column="25">writetty<pos:position pos:line="311" pos:column="33"/></name></expr>)<pos:position pos:line="311" pos:column="34"/></condition><then pos:line="311" pos:column="34"> <block pos:line="311" pos:column="35">{
                        <expr_stmt><expr><call><name pos:line="312" pos:column="25">apr_file_printf<pos:position pos:line="312" pos:column="40"/></name><argument_list pos:line="312" pos:column="40">(<argument><expr><name pos:line="312" pos:column="41">writetty<pos:position pos:line="312" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="312" pos:column="51">"Apache:mod_ssl:Error: Pass phrase incorrect.\n"<pos:position pos:line="312" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="312" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="101"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="313" pos:column="25">apr_file_printf<pos:position pos:line="313" pos:column="40"/></name><argument_list pos:line="313" pos:column="40">(<argument><expr><name pos:line="313" pos:column="41">writetty<pos:position pos:line="313" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="313" pos:column="51">"**Stopped\n"<pos:position pos:line="313" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="313" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="66"/></expr_stmt>
                    }<pos:position pos:line="314" pos:column="22"/></block></then></if>
                }<pos:position pos:line="315" pos:column="18"/></block></else></if>
                <expr_stmt><expr><call><name pos:line="316" pos:column="17">ssl_die<pos:position pos:line="316" pos:column="24"/></name><argument_list pos:line="316" pos:column="24">()<pos:position pos:line="316" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="317" pos:column="14"/></block></for>

            <if pos:line="319" pos:column="13">if <condition pos:line="319" pos:column="16">(<expr><name pos:line="319" pos:column="17">pPrivateKey<pos:position pos:line="319" pos:column="28"/></name> <operator pos:line="319" pos:column="29">==<pos:position pos:line="319" pos:column="31"/></operator> <name pos:line="319" pos:column="32">NULL<pos:position pos:line="319" pos:column="36"/></name></expr>)<pos:position pos:line="319" pos:column="37"/></condition><then pos:line="319" pos:column="37"> <block pos:line="319" pos:column="38">{
                <expr_stmt><expr><call><name pos:line="320" pos:column="17">ap_log_error<pos:position pos:line="320" pos:column="29"/></name><argument_list pos:line="320" pos:column="29">(<argument><expr><name pos:line="320" pos:column="30">APLOG_MARK<pos:position pos:line="320" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="320" pos:column="42">APLOG_ERR<pos:position pos:line="320" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="320" pos:column="53">0<pos:position pos:line="320" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="320" pos:column="56">s<pos:position pos:line="320" pos:column="57"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="321" pos:column="29">"Init: Unable to read server private key from "<pos:position pos:line="321" pos:column="76"/></literal>
                            <literal type="string" pos:line="322" pos:column="29">"file %s [Hint: Perhaps it is in a separate file? "<pos:position pos:line="322" pos:column="80"/></literal>
                            <literal type="string" pos:line="323" pos:column="29">"  See SSLCertificateKeyFile]"<pos:position pos:line="323" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="323" pos:column="61">szPath<pos:position pos:line="323" pos:column="67"/></name></expr></argument>)<pos:position pos:line="323" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="324" pos:column="17">ssl_log_ssl_error<pos:position pos:line="324" pos:column="34"/></name><argument_list pos:line="324" pos:column="34">(<argument><expr><name pos:line="324" pos:column="35">SSLLOG_MARK<pos:position pos:line="324" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="324" pos:column="48">APLOG_ERR<pos:position pos:line="324" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="324" pos:column="59">s<pos:position pos:line="324" pos:column="60"/></name></expr></argument>)<pos:position pos:line="324" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="325" pos:column="17">ssl_die<pos:position pos:line="325" pos:column="24"/></name><argument_list pos:line="325" pos:column="24">()<pos:position pos:line="325" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="325" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="326" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="328" pos:column="13">/*
             * check algorithm type of private key and make
             * sure only one private key per type is used.
             */</comment>
            <expr_stmt><expr><name pos:line="332" pos:column="13">at<pos:position pos:line="332" pos:column="15"/></name> <operator pos:line="332" pos:column="16">=<pos:position pos:line="332" pos:column="17"/></operator> <call><name pos:line="332" pos:column="18">ssl_util_algotypeof<pos:position pos:line="332" pos:column="37"/></name><argument_list pos:line="332" pos:column="37">(<argument><expr><name pos:line="332" pos:column="38">NULL<pos:position pos:line="332" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="332" pos:column="44">pPrivateKey<pos:position pos:line="332" pos:column="55"/></name></expr></argument>)<pos:position pos:line="332" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name pos:line="333" pos:column="13">an<pos:position pos:line="333" pos:column="15"/></name> <operator pos:line="333" pos:column="16">=<pos:position pos:line="333" pos:column="17"/></operator> <call><name pos:line="333" pos:column="18">ssl_util_algotypestr<pos:position pos:line="333" pos:column="38"/></name><argument_list pos:line="333" pos:column="38">(<argument><expr><name pos:line="333" pos:column="39">at<pos:position pos:line="333" pos:column="41"/></name></expr></argument>)<pos:position pos:line="333" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="43"/></expr_stmt>
            <if pos:line="334" pos:column="13">if <condition pos:line="334" pos:column="16">(<expr><name pos:line="334" pos:column="17">algoKey<pos:position pos:line="334" pos:column="24"/></name> <operator pos:line="334" pos:column="25">&amp;<pos:position pos:line="334" pos:column="30"/></operator> <name pos:line="334" pos:column="27">at<pos:position pos:line="334" pos:column="29"/></name></expr>)<pos:position pos:line="334" pos:column="30"/></condition><then pos:line="334" pos:column="30"> <block pos:line="334" pos:column="31">{
                <expr_stmt><expr><call><name pos:line="335" pos:column="17">ap_log_error<pos:position pos:line="335" pos:column="29"/></name><argument_list pos:line="335" pos:column="29">(<argument><expr><name pos:line="335" pos:column="30">APLOG_MARK<pos:position pos:line="335" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="335" pos:column="42">APLOG_ERR<pos:position pos:line="335" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="335" pos:column="53">0<pos:position pos:line="335" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="335" pos:column="56">s<pos:position pos:line="335" pos:column="57"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="336" pos:column="30">"Init: Multiple %s server private keys not "<pos:position pos:line="336" pos:column="74"/></literal>
                             <literal type="string" pos:line="337" pos:column="30">"allowed"<pos:position pos:line="337" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="337" pos:column="41">an<pos:position pos:line="337" pos:column="43"/></name></expr></argument>)<pos:position pos:line="337" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="338" pos:column="17">ssl_log_ssl_error<pos:position pos:line="338" pos:column="34"/></name><argument_list pos:line="338" pos:column="34">(<argument><expr><name pos:line="338" pos:column="35">SSLLOG_MARK<pos:position pos:line="338" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="338" pos:column="48">APLOG_ERR<pos:position pos:line="338" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="338" pos:column="59">s<pos:position pos:line="338" pos:column="60"/></name></expr></argument>)<pos:position pos:line="338" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="338" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="339" pos:column="17">ssl_die<pos:position pos:line="339" pos:column="24"/></name><argument_list pos:line="339" pos:column="24">()<pos:position pos:line="339" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="340" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="341" pos:column="13">algoKey<pos:position pos:line="341" pos:column="20"/></name> <operator pos:line="341" pos:column="21">|=<pos:position pos:line="341" pos:column="23"/></operator> <name pos:line="341" pos:column="24">at<pos:position pos:line="341" pos:column="26"/></name></expr>;<pos:position pos:line="341" pos:column="27"/></expr_stmt>

            <comment type="block" pos:line="343" pos:column="13">/*
             * Log the type of reading
             */</comment>
            <if pos:line="346" pos:column="13">if <condition pos:line="346" pos:column="16">(<expr><name pos:line="346" pos:column="17">nPassPhraseDialogCur<pos:position pos:line="346" pos:column="37"/></name> <operator pos:line="346" pos:column="38">==<pos:position pos:line="346" pos:column="40"/></operator> <literal type="number" pos:line="346" pos:column="41">0<pos:position pos:line="346" pos:column="42"/></literal></expr>)<pos:position pos:line="346" pos:column="43"/></condition><then pos:line="346" pos:column="43"> <block pos:line="346" pos:column="44">{
                <expr_stmt><expr><call><name pos:line="347" pos:column="17">ap_log_error<pos:position pos:line="347" pos:column="29"/></name><argument_list pos:line="347" pos:column="29">(<argument><expr><name pos:line="347" pos:column="30">APLOG_MARK<pos:position pos:line="347" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="347" pos:column="42">APLOG_DEBUG<pos:position pos:line="347" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="347" pos:column="55">0<pos:position pos:line="347" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="347" pos:column="58">pServ<pos:position pos:line="347" pos:column="63"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="348" pos:column="30">"unencrypted %s private key - pass phrase not "<pos:position pos:line="348" pos:column="77"/></literal>
                             <literal type="string" pos:line="349" pos:column="30">"required"<pos:position pos:line="349" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="349" pos:column="42">an<pos:position pos:line="349" pos:column="44"/></name></expr></argument>)<pos:position pos:line="349" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="350" pos:column="14"/></block></then>
            <else pos:line="351" pos:column="13">else <block pos:line="351" pos:column="18">{
                <if pos:line="352" pos:column="17">if <condition pos:line="352" pos:column="20">(<expr><name pos:line="352" pos:column="21">cpPassPhraseCur<pos:position pos:line="352" pos:column="36"/></name> <operator pos:line="352" pos:column="37">!=<pos:position pos:line="352" pos:column="39"/></operator> <name pos:line="352" pos:column="40">NULL<pos:position pos:line="352" pos:column="44"/></name></expr>)<pos:position pos:line="352" pos:column="45"/></condition><then pos:line="352" pos:column="45"> <block pos:line="352" pos:column="46">{
                    <expr_stmt><expr><call><name pos:line="353" pos:column="21">ap_log_error<pos:position pos:line="353" pos:column="33"/></name><argument_list pos:line="353" pos:column="33">(<argument><expr><name pos:line="353" pos:column="34">APLOG_MARK<pos:position pos:line="353" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="353" pos:column="46">APLOG_DEBUG<pos:position pos:line="353" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="353" pos:column="59">0<pos:position pos:line="353" pos:column="60"/></literal></expr></argument>,
                                 <argument><expr><name pos:line="354" pos:column="34">pServ<pos:position pos:line="354" pos:column="39"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="355" pos:column="34">"encrypted %s private key - pass phrase "<pos:position pos:line="355" pos:column="75"/></literal>
                                 <literal type="string" pos:line="356" pos:column="34">"requested"<pos:position pos:line="356" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="356" pos:column="47">an<pos:position pos:line="356" pos:column="49"/></name></expr></argument>)<pos:position pos:line="356" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="357" pos:column="18"/></block></then>
                <else pos:line="358" pos:column="17">else <block pos:line="358" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="359" pos:column="21">ap_log_error<pos:position pos:line="359" pos:column="33"/></name><argument_list pos:line="359" pos:column="33">(<argument><expr><name pos:line="359" pos:column="34">APLOG_MARK<pos:position pos:line="359" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="46">APLOG_DEBUG<pos:position pos:line="359" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="359" pos:column="59">0<pos:position pos:line="359" pos:column="60"/></literal></expr></argument>,
                                 <argument><expr><name pos:line="360" pos:column="34">pServ<pos:position pos:line="360" pos:column="39"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="361" pos:column="34">"encrypted %s private key - pass phrase"<pos:position pos:line="361" pos:column="74"/></literal>
                                 <literal type="string" pos:line="362" pos:column="34">" reused"<pos:position pos:line="362" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="362" pos:column="45">an<pos:position pos:line="362" pos:column="47"/></name></expr></argument>)<pos:position pos:line="362" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="362" pos:column="49"/></expr_stmt>
                }<pos:position pos:line="363" pos:column="18"/></block></else></if>
            }<pos:position pos:line="364" pos:column="14"/></block></else></if>

            <comment type="block" pos:line="366" pos:column="13">/*
             * Ok, when we have one more pass phrase store it
             */</comment>
            <if pos:line="369" pos:column="13">if <condition pos:line="369" pos:column="16">(<expr><name pos:line="369" pos:column="17">cpPassPhraseCur<pos:position pos:line="369" pos:column="32"/></name> <operator pos:line="369" pos:column="33">!=<pos:position pos:line="369" pos:column="35"/></operator> <name pos:line="369" pos:column="36">NULL<pos:position pos:line="369" pos:column="40"/></name></expr>)<pos:position pos:line="369" pos:column="41"/></condition><then pos:line="369" pos:column="41"> <block pos:line="369" pos:column="42">{
                <expr_stmt><expr><name pos:line="370" pos:column="17">cpp<pos:position pos:line="370" pos:column="20"/></name> <operator pos:line="370" pos:column="21">=<pos:position pos:line="370" pos:column="22"/></operator> <operator pos:line="370" pos:column="23">(<pos:position pos:line="370" pos:column="24"/></operator><name pos:line="370" pos:column="24">char<pos:position pos:line="370" pos:column="28"/></name> <operator pos:line="370" pos:column="29">*<pos:position pos:line="370" pos:column="30"/></operator><operator pos:line="370" pos:column="30">*<pos:position pos:line="370" pos:column="31"/></operator><operator pos:line="370" pos:column="31">)<pos:position pos:line="370" pos:column="32"/></operator><call><name pos:line="370" pos:column="32">apr_array_push<pos:position pos:line="370" pos:column="46"/></name><argument_list pos:line="370" pos:column="46">(<argument><expr><name pos:line="370" pos:column="47">aPassPhrase<pos:position pos:line="370" pos:column="58"/></name></expr></argument>)<pos:position pos:line="370" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="370" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="371" pos:column="17">*<pos:position pos:line="371" pos:column="18"/></operator><name pos:line="371" pos:column="18">cpp<pos:position pos:line="371" pos:column="21"/></name> <operator pos:line="371" pos:column="22">=<pos:position pos:line="371" pos:column="23"/></operator> <name pos:line="371" pos:column="24">cpPassPhraseCur<pos:position pos:line="371" pos:column="39"/></name></expr>;<pos:position pos:line="371" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name pos:line="372" pos:column="17">nPassPhrase<pos:position pos:line="372" pos:column="28"/></name><operator pos:line="372" pos:column="28">++<pos:position pos:line="372" pos:column="30"/></operator></expr>;<pos:position pos:line="372" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="373" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="375" pos:column="13">/*
             * Insert private key into the global module configuration
             * (we convert it to a stand-alone DER byte sequence
             * because the SSL library uses static variables inside a
             * RSA structure which do not survive DSO reloads!)
             */</comment>
            <expr_stmt><expr><name pos:line="381" pos:column="13">cp<pos:position pos:line="381" pos:column="15"/></name> <operator pos:line="381" pos:column="16">=<pos:position pos:line="381" pos:column="17"/></operator> <call><name pos:line="381" pos:column="18">asn1_table_vhost_key<pos:position pos:line="381" pos:column="38"/></name><argument_list pos:line="381" pos:column="38">(<argument><expr><name pos:line="381" pos:column="39">mc<pos:position pos:line="381" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="381" pos:column="43">p<pos:position pos:line="381" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="381" pos:column="46">cpVHostID<pos:position pos:line="381" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="381" pos:column="57">an<pos:position pos:line="381" pos:column="59"/></name></expr></argument>)<pos:position pos:line="381" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name pos:line="382" pos:column="13">length<pos:position pos:line="382" pos:column="19"/></name> <operator pos:line="382" pos:column="20">=<pos:position pos:line="382" pos:column="21"/></operator> <call><name pos:line="382" pos:column="22">i2d_PrivateKey<pos:position pos:line="382" pos:column="36"/></name><argument_list pos:line="382" pos:column="36">(<argument><expr><name pos:line="382" pos:column="37">pPrivateKey<pos:position pos:line="382" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="382" pos:column="50">NULL<pos:position pos:line="382" pos:column="54"/></name></expr></argument>)<pos:position pos:line="382" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="382" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name pos:line="383" pos:column="13">ucp<pos:position pos:line="383" pos:column="16"/></name> <operator pos:line="383" pos:column="17">=<pos:position pos:line="383" pos:column="18"/></operator> <call><name pos:line="383" pos:column="19">ssl_asn1_table_set<pos:position pos:line="383" pos:column="37"/></name><argument_list pos:line="383" pos:column="37">(<argument><expr><name><name pos:line="383" pos:column="38">mc<pos:position pos:line="383" pos:column="40"/></name><operator pos:line="383" pos:column="40">-&gt;<pos:position pos:line="383" pos:column="45"/></operator><name pos:line="383" pos:column="42">tPrivateKey<pos:position pos:line="383" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="383" pos:column="55">cp<pos:position pos:line="383" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="383" pos:column="59">length<pos:position pos:line="383" pos:column="65"/></name></expr></argument>)<pos:position pos:line="383" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="384" pos:column="13">(<pos:position pos:line="384" pos:column="14"/></operator><name pos:line="384" pos:column="14">void<pos:position pos:line="384" pos:column="18"/></name><operator pos:line="384" pos:column="18">)<pos:position pos:line="384" pos:column="19"/></operator><call><name pos:line="384" pos:column="19">i2d_PrivateKey<pos:position pos:line="384" pos:column="33"/></name><argument_list pos:line="384" pos:column="33">(<argument><expr><name pos:line="384" pos:column="34">pPrivateKey<pos:position pos:line="384" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="384" pos:column="47">&amp;<pos:position pos:line="384" pos:column="52"/></operator><name pos:line="384" pos:column="48">ucp<pos:position pos:line="384" pos:column="51"/></name></expr></argument>)<pos:position pos:line="384" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="53"/></expr_stmt> <comment type="block" pos:line="384" pos:column="54">/* 2nd arg increments */</comment>

            <if pos:line="386" pos:column="13">if <condition pos:line="386" pos:column="16">(<expr><name pos:line="386" pos:column="17">nPassPhraseDialogCur<pos:position pos:line="386" pos:column="37"/></name> <operator pos:line="386" pos:column="38">!=<pos:position pos:line="386" pos:column="40"/></operator> <literal type="number" pos:line="386" pos:column="41">0<pos:position pos:line="386" pos:column="42"/></literal></expr>)<pos:position pos:line="386" pos:column="43"/></condition><then pos:line="386" pos:column="43"> <block pos:line="386" pos:column="44">{
                <comment type="block" pos:line="387" pos:column="17">/* remember mtime of encrypted keys */</comment>
                <expr_stmt><expr><name pos:line="388" pos:column="17">asn1<pos:position pos:line="388" pos:column="21"/></name> <operator pos:line="388" pos:column="22">=<pos:position pos:line="388" pos:column="23"/></operator> <call><name pos:line="388" pos:column="24">ssl_asn1_table_get<pos:position pos:line="388" pos:column="42"/></name><argument_list pos:line="388" pos:column="42">(<argument><expr><name><name pos:line="388" pos:column="43">mc<pos:position pos:line="388" pos:column="45"/></name><operator pos:line="388" pos:column="45">-&gt;<pos:position pos:line="388" pos:column="50"/></operator><name pos:line="388" pos:column="47">tPrivateKey<pos:position pos:line="388" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="388" pos:column="60">cp<pos:position pos:line="388" pos:column="62"/></name></expr></argument>)<pos:position pos:line="388" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="388" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="389" pos:column="17">asn1<pos:position pos:line="389" pos:column="21"/></name><operator pos:line="389" pos:column="21">-&gt;<pos:position pos:line="389" pos:column="26"/></operator><name pos:line="389" pos:column="23">source_mtime<pos:position pos:line="389" pos:column="35"/></name></name> <operator pos:line="389" pos:column="36">=<pos:position pos:line="389" pos:column="37"/></operator> <name pos:line="389" pos:column="38">pkey_mtime<pos:position pos:line="389" pos:column="48"/></name></expr>;<pos:position pos:line="389" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="390" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="392" pos:column="13">/*
             * Free the private key structure
             */</comment>
            <expr_stmt><expr><call><name pos:line="395" pos:column="13">EVP_PKEY_free<pos:position pos:line="395" pos:column="26"/></name><argument_list pos:line="395" pos:column="26">(<argument><expr><name pos:line="395" pos:column="27">pPrivateKey<pos:position pos:line="395" pos:column="38"/></name></expr></argument>)<pos:position pos:line="395" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="396" pos:column="10"/></block></for>
    }<pos:position pos:line="397" pos:column="6"/></block></for>

    <comment type="block" pos:line="399" pos:column="5">/*
     * Let the user know when we're successful.
     */</comment>
    <if pos:line="402" pos:column="5">if <condition pos:line="402" pos:column="8">(<expr><name pos:line="402" pos:column="9">nPassPhraseDialog<pos:position pos:line="402" pos:column="26"/></name> <operator pos:line="402" pos:column="27">&gt;<pos:position pos:line="402" pos:column="31"/></operator> <literal type="number" pos:line="402" pos:column="29">0<pos:position pos:line="402" pos:column="30"/></literal></expr>)<pos:position pos:line="402" pos:column="31"/></condition><then pos:line="402" pos:column="31"> <block pos:line="402" pos:column="32">{
        <expr_stmt><expr><name pos:line="403" pos:column="9">sc<pos:position pos:line="403" pos:column="11"/></name> <operator pos:line="403" pos:column="12">=<pos:position pos:line="403" pos:column="13"/></operator> <call><name pos:line="403" pos:column="14">mySrvConfig<pos:position pos:line="403" pos:column="25"/></name><argument_list pos:line="403" pos:column="25">(<argument><expr><name pos:line="403" pos:column="26">s<pos:position pos:line="403" pos:column="27"/></name></expr></argument>)<pos:position pos:line="403" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="403" pos:column="29"/></expr_stmt>
        <if pos:line="404" pos:column="9">if <condition pos:line="404" pos:column="12">(<expr><name pos:line="404" pos:column="13">writetty<pos:position pos:line="404" pos:column="21"/></name></expr>)<pos:position pos:line="404" pos:column="22"/></condition><then pos:line="404" pos:column="22"> <block pos:line="404" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="405" pos:column="13">apr_file_printf<pos:position pos:line="405" pos:column="28"/></name><argument_list pos:line="405" pos:column="28">(<argument><expr><name pos:line="405" pos:column="29">writetty<pos:position pos:line="405" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="405" pos:column="39">"\n"<pos:position pos:line="405" pos:column="43"/></literal>
                            <literal type="string" pos:line="406" pos:column="29">"OK: Pass Phrase Dialog successful.\n"<pos:position pos:line="406" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="406" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="406" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="407" pos:column="10"/></block></then></if>
    }<pos:position pos:line="408" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="410" pos:column="5">/*
     * Wipe out the used memory from the
     * pass phrase array and then deallocate it
     */</comment>
    <if pos:line="414" pos:column="5">if <condition pos:line="414" pos:column="8">(<expr><name><name pos:line="414" pos:column="9">aPassPhrase<pos:position pos:line="414" pos:column="20"/></name><operator pos:line="414" pos:column="20">-&gt;<pos:position pos:line="414" pos:column="25"/></operator><name pos:line="414" pos:column="22">nelts<pos:position pos:line="414" pos:column="27"/></name></name></expr>)<pos:position pos:line="414" pos:column="28"/></condition><then pos:line="414" pos:column="28"> <block pos:line="414" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="415" pos:column="9">pphrase_array_clear<pos:position pos:line="415" pos:column="28"/></name><argument_list pos:line="415" pos:column="28">(<argument><expr><name pos:line="415" pos:column="29">aPassPhrase<pos:position pos:line="415" pos:column="40"/></name></expr></argument>)<pos:position pos:line="415" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="415" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="416" pos:column="9">ap_log_error<pos:position pos:line="416" pos:column="21"/></name><argument_list pos:line="416" pos:column="21">(<argument><expr><name pos:line="416" pos:column="22">APLOG_MARK<pos:position pos:line="416" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="416" pos:column="34">APLOG_INFO<pos:position pos:line="416" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="416" pos:column="46">0<pos:position pos:line="416" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="416" pos:column="49">s<pos:position pos:line="416" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="417" pos:column="22">"Init: Wiped out the queried pass phrases from memory"<pos:position pos:line="417" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="417" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="417" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="418" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="420" pos:column="5">/* Close the pipes if they were opened
     */</comment>
    <if pos:line="422" pos:column="5">if <condition pos:line="422" pos:column="8">(<expr><name pos:line="422" pos:column="9">readtty<pos:position pos:line="422" pos:column="16"/></name></expr>)<pos:position pos:line="422" pos:column="17"/></condition><then pos:line="422" pos:column="17"> <block pos:line="422" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="423" pos:column="9">apr_file_close<pos:position pos:line="423" pos:column="23"/></name><argument_list pos:line="423" pos:column="23">(<argument><expr><name pos:line="423" pos:column="24">readtty<pos:position pos:line="423" pos:column="31"/></name></expr></argument>)<pos:position pos:line="423" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="423" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="424" pos:column="9">apr_file_close<pos:position pos:line="424" pos:column="23"/></name><argument_list pos:line="424" pos:column="23">(<argument><expr><name pos:line="424" pos:column="24">writetty<pos:position pos:line="424" pos:column="32"/></name></expr></argument>)<pos:position pos:line="424" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="425" pos:column="9">readtty<pos:position pos:line="425" pos:column="16"/></name> <operator pos:line="425" pos:column="17">=<pos:position pos:line="425" pos:column="18"/></operator> <name pos:line="425" pos:column="19">writetty<pos:position pos:line="425" pos:column="27"/></name> <operator pos:line="425" pos:column="28">=<pos:position pos:line="425" pos:column="29"/></operator> <name pos:line="425" pos:column="30">NULL<pos:position pos:line="425" pos:column="34"/></name></expr>;<pos:position pos:line="425" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="426" pos:column="6"/></block></then></if>
    <return pos:line="427" pos:column="5">return;<pos:position pos:line="427" pos:column="12"/></return>
}<pos:position pos:line="428" pos:column="2"/></block></function></unit>

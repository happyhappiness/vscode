<function xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position"><specifier pos:line="1523" pos:column="1">static<pos:position pos:line="1523" pos:column="7"/></specifier> <type><name pos:line="1523" pos:column="8">int<pos:position pos:line="1523" pos:column="11"/></name></type> <name pos:line="1523" pos:column="12">run_apply<pos:position pos:line="1523" pos:column="21"/></name><parameter_list pos:line="1523" pos:column="21">(<parameter><decl><type><specifier pos:line="1523" pos:column="22">const<pos:position pos:line="1523" pos:column="27"/></specifier> <name><name pos:line="1523" pos:column="28">struct<pos:position pos:line="1523" pos:column="34"/></name> <name pos:line="1523" pos:column="35">am_state<pos:position pos:line="1523" pos:column="43"/></name></name> <modifier pos:line="1523" pos:column="44">*<pos:position pos:line="1523" pos:column="45"/></modifier></type><name pos:line="1523" pos:column="45">state<pos:position pos:line="1523" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1523" pos:column="52">const<pos:position pos:line="1523" pos:column="57"/></specifier> <name pos:line="1523" pos:column="58">char<pos:position pos:line="1523" pos:column="62"/></name> <modifier pos:line="1523" pos:column="63">*<pos:position pos:line="1523" pos:column="64"/></modifier></type><name pos:line="1523" pos:column="64">index_file<pos:position pos:line="1523" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1523" pos:column="75"/></parameter_list>
<block pos:line="1524" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="1525" pos:column="9">struct<pos:position pos:line="1525" pos:column="15"/></name> <name pos:line="1525" pos:column="16">child_process<pos:position pos:line="1525" pos:column="29"/></name></name></type> <name pos:line="1525" pos:column="30">cp<pos:position pos:line="1525" pos:column="32"/></name> <init pos:line="1525" pos:column="33">= <expr><name pos:line="1525" pos:column="35">CHILD_PROCESS_INIT<pos:position pos:line="1525" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="1525" pos:column="54"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="1527" pos:column="9">cp<pos:position pos:line="1527" pos:column="11"/></name><operator pos:line="1527" pos:column="11">.<pos:position pos:line="1527" pos:column="12"/></operator><name pos:line="1527" pos:column="12">git_cmd<pos:position pos:line="1527" pos:column="19"/></name></name> <operator pos:line="1527" pos:column="20">=<pos:position pos:line="1527" pos:column="21"/></operator> <literal type="number" pos:line="1527" pos:column="22">1<pos:position pos:line="1527" pos:column="23"/></literal></expr>;<pos:position pos:line="1527" pos:column="24"/></expr_stmt>

	<if pos:line="1529" pos:column="9">if <condition pos:line="1529" pos:column="12">(<expr><name pos:line="1529" pos:column="13">index_file<pos:position pos:line="1529" pos:column="23"/></name></expr>)<pos:position pos:line="1529" pos:column="24"/></condition><then pos:line="1529" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="1530" pos:column="17">argv_array_pushf<pos:position pos:line="1530" pos:column="33"/></name><argument_list pos:line="1530" pos:column="33">(<argument><expr><operator pos:line="1530" pos:column="34">&amp;<pos:position pos:line="1530" pos:column="39"/></operator><name><name pos:line="1530" pos:column="35">cp<pos:position pos:line="1530" pos:column="37"/></name><operator pos:line="1530" pos:column="37">.<pos:position pos:line="1530" pos:column="38"/></operator><name pos:line="1530" pos:column="38">env_array<pos:position pos:line="1530" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1530" pos:column="49">"GIT_INDEX_FILE=%s"<pos:position pos:line="1530" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="1530" pos:column="70">index_file<pos:position pos:line="1530" pos:column="80"/></name></expr></argument>)<pos:position pos:line="1530" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="1530" pos:column="82"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="1532" pos:column="9">/*
	 * If we are allowed to fall back on 3-way merge, don't give false
	 * errors during the initial attempt.
	 */</comment>
	<if pos:line="1536" pos:column="9">if <condition pos:line="1536" pos:column="12">(<expr><name><name pos:line="1536" pos:column="13">state<pos:position pos:line="1536" pos:column="18"/></name><operator pos:line="1536" pos:column="18">-&gt;<pos:position pos:line="1536" pos:column="23"/></operator><name pos:line="1536" pos:column="20">threeway<pos:position pos:line="1536" pos:column="28"/></name></name> <operator pos:line="1536" pos:column="29">&amp;&amp;<pos:position pos:line="1536" pos:column="39"/></operator> <operator pos:line="1536" pos:column="32">!<pos:position pos:line="1536" pos:column="33"/></operator><name pos:line="1536" pos:column="33">index_file<pos:position pos:line="1536" pos:column="43"/></name></expr>)<pos:position pos:line="1536" pos:column="44"/></condition><then pos:line="1536" pos:column="44"> <block pos:line="1536" pos:column="45">{
		<expr_stmt><expr><name><name pos:line="1537" pos:column="17">cp<pos:position pos:line="1537" pos:column="19"/></name><operator pos:line="1537" pos:column="19">.<pos:position pos:line="1537" pos:column="20"/></operator><name pos:line="1537" pos:column="20">no_stdout<pos:position pos:line="1537" pos:column="29"/></name></name> <operator pos:line="1537" pos:column="30">=<pos:position pos:line="1537" pos:column="31"/></operator> <literal type="number" pos:line="1537" pos:column="32">1<pos:position pos:line="1537" pos:column="33"/></literal></expr>;<pos:position pos:line="1537" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="1538" pos:column="17">cp<pos:position pos:line="1538" pos:column="19"/></name><operator pos:line="1538" pos:column="19">.<pos:position pos:line="1538" pos:column="20"/></operator><name pos:line="1538" pos:column="20">no_stderr<pos:position pos:line="1538" pos:column="29"/></name></name> <operator pos:line="1538" pos:column="30">=<pos:position pos:line="1538" pos:column="31"/></operator> <literal type="number" pos:line="1538" pos:column="32">1<pos:position pos:line="1538" pos:column="33"/></literal></expr>;<pos:position pos:line="1538" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="1539" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="1541" pos:column="9">argv_array_push<pos:position pos:line="1541" pos:column="24"/></name><argument_list pos:line="1541" pos:column="24">(<argument><expr><operator pos:line="1541" pos:column="25">&amp;<pos:position pos:line="1541" pos:column="30"/></operator><name><name pos:line="1541" pos:column="26">cp<pos:position pos:line="1541" pos:column="28"/></name><operator pos:line="1541" pos:column="28">.<pos:position pos:line="1541" pos:column="29"/></operator><name pos:line="1541" pos:column="29">args<pos:position pos:line="1541" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1541" pos:column="35">"apply"<pos:position pos:line="1541" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="1541" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1541" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="1543" pos:column="9">argv_array_pushv<pos:position pos:line="1543" pos:column="25"/></name><argument_list pos:line="1543" pos:column="25">(<argument><expr><operator pos:line="1543" pos:column="26">&amp;<pos:position pos:line="1543" pos:column="31"/></operator><name><name pos:line="1543" pos:column="27">cp<pos:position pos:line="1543" pos:column="29"/></name><operator pos:line="1543" pos:column="29">.<pos:position pos:line="1543" pos:column="30"/></operator><name pos:line="1543" pos:column="30">args<pos:position pos:line="1543" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1543" pos:column="36">state<pos:position pos:line="1543" pos:column="41"/></name><operator pos:line="1543" pos:column="41">-&gt;<pos:position pos:line="1543" pos:column="46"/></operator><name pos:line="1543" pos:column="43">git_apply_opts<pos:position pos:line="1543" pos:column="57"/></name><operator pos:line="1543" pos:column="57">.<pos:position pos:line="1543" pos:column="58"/></operator><name pos:line="1543" pos:column="58">argv<pos:position pos:line="1543" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="1543" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="1543" pos:column="64"/></expr_stmt>

	<if pos:line="1545" pos:column="9">if <condition pos:line="1545" pos:column="12">(<expr><name pos:line="1545" pos:column="13">index_file<pos:position pos:line="1545" pos:column="23"/></name></expr>)<pos:position pos:line="1545" pos:column="24"/></condition><then pos:line="1545" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="1546" pos:column="17">argv_array_push<pos:position pos:line="1546" pos:column="32"/></name><argument_list pos:line="1546" pos:column="32">(<argument><expr><operator pos:line="1546" pos:column="33">&amp;<pos:position pos:line="1546" pos:column="38"/></operator><name><name pos:line="1546" pos:column="34">cp<pos:position pos:line="1546" pos:column="36"/></name><operator pos:line="1546" pos:column="36">.<pos:position pos:line="1546" pos:column="37"/></operator><name pos:line="1546" pos:column="37">args<pos:position pos:line="1546" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1546" pos:column="43">"--cached"<pos:position pos:line="1546" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="1546" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1546" pos:column="55"/></expr_stmt></block></then>
	<else pos:line="1547" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="1548" pos:column="17">argv_array_push<pos:position pos:line="1548" pos:column="32"/></name><argument_list pos:line="1548" pos:column="32">(<argument><expr><operator pos:line="1548" pos:column="33">&amp;<pos:position pos:line="1548" pos:column="38"/></operator><name><name pos:line="1548" pos:column="34">cp<pos:position pos:line="1548" pos:column="36"/></name><operator pos:line="1548" pos:column="36">.<pos:position pos:line="1548" pos:column="37"/></operator><name pos:line="1548" pos:column="37">args<pos:position pos:line="1548" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1548" pos:column="43">"--index"<pos:position pos:line="1548" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="1548" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1548" pos:column="54"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="1550" pos:column="9">argv_array_push<pos:position pos:line="1550" pos:column="24"/></name><argument_list pos:line="1550" pos:column="24">(<argument><expr><operator pos:line="1550" pos:column="25">&amp;<pos:position pos:line="1550" pos:column="30"/></operator><name><name pos:line="1550" pos:column="26">cp<pos:position pos:line="1550" pos:column="28"/></name><operator pos:line="1550" pos:column="28">.<pos:position pos:line="1550" pos:column="29"/></operator><name pos:line="1550" pos:column="29">args<pos:position pos:line="1550" pos:column="33"/></name></name></expr></argument>, <argument><expr><call><name pos:line="1550" pos:column="35">am_path<pos:position pos:line="1550" pos:column="42"/></name><argument_list pos:line="1550" pos:column="42">(<argument><expr><name pos:line="1550" pos:column="43">state<pos:position pos:line="1550" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1550" pos:column="50">"patch"<pos:position pos:line="1550" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="1550" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="1550" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="1550" pos:column="60"/></expr_stmt>

	<if pos:line="1552" pos:column="9">if <condition pos:line="1552" pos:column="12">(<expr><call><name pos:line="1552" pos:column="13">run_command<pos:position pos:line="1552" pos:column="24"/></name><argument_list pos:line="1552" pos:column="24">(<argument><expr><operator pos:line="1552" pos:column="25">&amp;<pos:position pos:line="1552" pos:column="30"/></operator><name pos:line="1552" pos:column="26">cp<pos:position pos:line="1552" pos:column="28"/></name></expr></argument>)<pos:position pos:line="1552" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="1552" pos:column="30"/></condition><then pos:line="1552" pos:column="30">
		<block type="pseudo"><return pos:line="1553" pos:column="17">return <expr><operator pos:line="1553" pos:column="24">-<pos:position pos:line="1553" pos:column="25"/></operator><literal type="number" pos:line="1553" pos:column="25">1<pos:position pos:line="1553" pos:column="26"/></literal></expr>;<pos:position pos:line="1553" pos:column="27"/></return></block></then></if>

	<comment type="block" pos:line="1555" pos:column="9">/* Reload index as git-apply will have modified it. */</comment>
	<expr_stmt><expr><call><name pos:line="1556" pos:column="9">discard_cache<pos:position pos:line="1556" pos:column="22"/></name><argument_list pos:line="1556" pos:column="22">()<pos:position pos:line="1556" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="1556" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="1557" pos:column="9">read_cache_from<pos:position pos:line="1557" pos:column="24"/></name><argument_list pos:line="1557" pos:column="24">(<argument><expr><ternary><condition><expr><name pos:line="1557" pos:column="25">index_file<pos:position pos:line="1557" pos:column="35"/></name></expr> ?<pos:position pos:line="1557" pos:column="37"/></condition><then pos:line="1557" pos:column="37"> <expr><name pos:line="1557" pos:column="38">index_file<pos:position pos:line="1557" pos:column="48"/></name></expr> <pos:position pos:line="1557" pos:column="49"/></then><else pos:line="1557" pos:column="49">: <expr><call><name pos:line="1557" pos:column="51">get_index_file<pos:position pos:line="1557" pos:column="65"/></name><argument_list pos:line="1557" pos:column="65">()<pos:position pos:line="1557" pos:column="67"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="1557" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1557" pos:column="69"/></expr_stmt>

	<return pos:line="1559" pos:column="9">return <expr><literal type="number" pos:line="1559" pos:column="16">0<pos:position pos:line="1559" pos:column="17"/></literal></expr>;<pos:position pos:line="1559" pos:column="18"/></return>
}<pos:position pos:line="1560" pos:column="2"/></block></function>


<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5788.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_conn_io_init<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">h2_conn_io<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">io<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">conn_rec<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">c<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, 
                             <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">h2_config<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">cfg<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, 
                             <parameter><decl><type><name pos:line="3" pos:column="30">apr_pool_t<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">pool<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="47"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">io<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">-&gt;<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="9">connection<pos:position pos:line="5" pos:column="19"/></name></name>         <operator pos:line="5" pos:column="28">=<pos:position pos:line="5" pos:column="29"/></operator> <name pos:line="5" pos:column="30">c<pos:position pos:line="5" pos:column="31"/></name></expr>;<pos:position pos:line="5" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">io<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">-&gt;<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="9">input<pos:position pos:line="6" pos:column="14"/></name></name>              <operator pos:line="6" pos:column="28">=<pos:position pos:line="6" pos:column="29"/></operator> <call><name pos:line="6" pos:column="30">apr_brigade_create<pos:position pos:line="6" pos:column="48"/></name><argument_list pos:line="6" pos:column="48">(<argument><expr><name pos:line="6" pos:column="49">pool<pos:position pos:line="6" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="55">c<pos:position pos:line="6" pos:column="56"/></name><operator pos:line="6" pos:column="56">-&gt;<pos:position pos:line="6" pos:column="61"/></operator><name pos:line="6" pos:column="58">bucket_alloc<pos:position pos:line="6" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">io<pos:position pos:line="7" pos:column="7"/></name><operator pos:line="7" pos:column="7">-&gt;<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="9">output<pos:position pos:line="7" pos:column="15"/></name></name>             <operator pos:line="7" pos:column="28">=<pos:position pos:line="7" pos:column="29"/></operator> <call><name pos:line="7" pos:column="30">apr_brigade_create<pos:position pos:line="7" pos:column="48"/></name><argument_list pos:line="7" pos:column="48">(<argument><expr><name pos:line="7" pos:column="49">pool<pos:position pos:line="7" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="55">c<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">-&gt;<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="58">bucket_alloc<pos:position pos:line="7" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">io<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">-&gt;<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="9">buflen<pos:position pos:line="8" pos:column="15"/></name></name>             <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">io<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">is_tls<pos:position pos:line="9" pos:column="15"/></name></name>             <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <call><name pos:line="9" pos:column="30">h2_h2_is_tls<pos:position pos:line="9" pos:column="42"/></name><argument_list pos:line="9" pos:column="42">(<argument><expr><name pos:line="9" pos:column="43">c<pos:position pos:line="9" pos:column="44"/></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">io<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">buffer_output<pos:position pos:line="10" pos:column="22"/></name></name>      <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <name><name pos:line="10" pos:column="30">io<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">is_tls<pos:position pos:line="10" pos:column="40"/></name></name></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>
    
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">io<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">buffer_output<pos:position pos:line="12" pos:column="26"/></name></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27"> <block pos:line="12" pos:column="28">{
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">io<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">bufsize<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">WRITE_BUFFER_SIZE<pos:position pos:line="13" pos:column="40"/></name></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">io<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">buffer<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <call><name pos:line="14" pos:column="22">apr_pcalloc<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">pool<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="40">io<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">bufsize<pos:position pos:line="14" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then>
    <else pos:line="16" pos:column="5">else <block pos:line="16" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">io<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">bufsize<pos:position pos:line="17" pos:column="20"/></name></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <literal type="number" pos:line="17" pos:column="23">0<pos:position pos:line="17" pos:column="24"/></literal></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>
    
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">io<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">is_tls<pos:position pos:line="20" pos:column="19"/></name></name></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20"> <block pos:line="20" pos:column="21">{
        <comment type="block" pos:line="21" pos:column="9">/* That is where we start with, 
         * see https://issues.apache.org/jira/browse/TS-2503 */</comment>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">io<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">warmup_size<pos:position pos:line="23" pos:column="24"/></name></name>    <operator pos:line="23" pos:column="28">=<pos:position pos:line="23" pos:column="29"/></operator> <call><name pos:line="23" pos:column="30">h2_config_geti64<pos:position pos:line="23" pos:column="46"/></name><argument_list pos:line="23" pos:column="46">(<argument><expr><name pos:line="23" pos:column="47">cfg<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="52">H2_CONF_TLS_WARMUP_SIZE<pos:position pos:line="23" pos:column="75"/></name></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">io<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">cooldown_usecs<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <operator pos:line="24" pos:column="30">(<pos:position pos:line="24" pos:column="31"/></operator><call><name pos:line="24" pos:column="31">h2_config_geti<pos:position pos:line="24" pos:column="45"/></name><argument_list pos:line="24" pos:column="45">(<argument><expr><name pos:line="24" pos:column="46">cfg<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">H2_CONF_TLS_COOLDOWN_SECS<pos:position pos:line="24" pos:column="76"/></name></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call> 
                              <operator pos:line="25" pos:column="31">*<pos:position pos:line="25" pos:column="32"/></operator> <name pos:line="25" pos:column="33">APR_USEC_PER_SEC<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">)<pos:position pos:line="25" pos:column="50"/></operator></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">io<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">write_size<pos:position pos:line="26" pos:column="23"/></name></name>     <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="30">WRITE_SIZE_INITIAL<pos:position pos:line="26" pos:column="48"/></name></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt> 
    }<pos:position pos:line="27" pos:column="6"/></block></then>
    <else pos:line="28" pos:column="5">else <block pos:line="28" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">io<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">warmup_size<pos:position pos:line="29" pos:column="24"/></name></name>    <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <literal type="number" pos:line="29" pos:column="30">0<pos:position pos:line="29" pos:column="31"/></literal></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">io<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">cooldown_usecs<pos:position pos:line="30" pos:column="27"/></name></name> <operator pos:line="30" pos:column="28">=<pos:position pos:line="30" pos:column="29"/></operator> <literal type="number" pos:line="30" pos:column="30">0<pos:position pos:line="30" pos:column="31"/></literal></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">io<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">write_size<pos:position pos:line="31" pos:column="23"/></name></name>     <operator pos:line="31" pos:column="28">=<pos:position pos:line="31" pos:column="29"/></operator> <name><name pos:line="31" pos:column="30">io<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">bufsize<pos:position pos:line="31" pos:column="41"/></name></name></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><call><name pos:line="34" pos:column="9">APLOGctrace1<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">c<pos:position pos:line="34" pos:column="23"/></name></expr></argument>)<pos:position pos:line="34" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="25"/></condition><then pos:line="34" pos:column="25"> <block pos:line="34" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ap_log_cerror<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">APLOG_MARK<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">APLOG_TRACE1<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="49">0<pos:position pos:line="35" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="52">io<pos:position pos:line="35" pos:column="54"/></name><operator pos:line="35" pos:column="54">-&gt;<pos:position pos:line="35" pos:column="59"/></operator><name pos:line="35" pos:column="56">connection<pos:position pos:line="35" pos:column="66"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="36" pos:column="23">"h2_conn_io(%ld): init, buffering=%d, warmup_size=%ld, cd_secs=%f"<pos:position pos:line="36" pos:column="89"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="37" pos:column="23">io<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">-&gt;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="27">connection<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">id<pos:position pos:line="37" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="43">io<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">-&gt;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="47">buffer_output<pos:position pos:line="37" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="62">(<pos:position pos:line="37" pos:column="63"/></operator><name pos:line="37" pos:column="63">long<pos:position pos:line="37" pos:column="67"/></name><operator pos:line="37" pos:column="67">)<pos:position pos:line="37" pos:column="68"/></operator><name><name pos:line="37" pos:column="68">io<pos:position pos:line="37" pos:column="70"/></name><operator pos:line="37" pos:column="70">-&gt;<pos:position pos:line="37" pos:column="75"/></operator><name pos:line="37" pos:column="72">warmup_size<pos:position pos:line="37" pos:column="83"/></name></name></expr></argument>,
                      <argument><expr><operator pos:line="38" pos:column="23">(<pos:position pos:line="38" pos:column="24"/></operator><operator pos:line="38" pos:column="24">(<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="25">float<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">)<pos:position pos:line="38" pos:column="31"/></operator><name><name pos:line="38" pos:column="31">io<pos:position pos:line="38" pos:column="33"/></name><operator pos:line="38" pos:column="33">-&gt;<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="35">cooldown_usecs<pos:position pos:line="38" pos:column="49"/></name></name><operator pos:line="38" pos:column="49">/<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="50">APR_USEC_PER_SEC<pos:position pos:line="38" pos:column="66"/></name><operator pos:line="38" pos:column="66">)<pos:position pos:line="38" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <return pos:line="41" pos:column="5">return <expr><name pos:line="41" pos:column="12">APR_SUCCESS<pos:position pos:line="41" pos:column="23"/></name></expr>;<pos:position pos:line="41" pos:column="24"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

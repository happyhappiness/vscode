<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1442_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">proxy_worker<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">find_route_worker<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">proxy_balancer<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">balancer<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">route<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">request_rec<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">r<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">checking_standby<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">checked_standby<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">proxy_worker<pos:position pos:line="8" pos:column="17"/></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">worker<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">checking_standby<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">checked_standby<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">=<pos:position pos:line="10" pos:column="41"/></operator> <literal type="number" pos:line="10" pos:column="42">0<pos:position pos:line="10" pos:column="43"/></literal></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><operator pos:line="11" pos:column="12">!<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">checked_standby<pos:position pos:line="11" pos:column="28"/></name></expr>)<pos:position pos:line="11" pos:column="29"/></condition> <block pos:line="11" pos:column="30">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">worker<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <operator pos:line="12" pos:column="18">(<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">proxy_worker<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">*<pos:position pos:line="12" pos:column="33"/></operator><operator pos:line="12" pos:column="33">)<pos:position pos:line="12" pos:column="34"/></operator><name><name pos:line="12" pos:column="34">balancer<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">workers<pos:position pos:line="12" pos:column="51"/></name><operator pos:line="12" pos:column="51">-&gt;<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="53">elts<pos:position pos:line="12" pos:column="57"/></name></name></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt>
        <for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">i<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <name><name pos:line="13" pos:column="25">balancer<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="35">workers<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">nelts<pos:position pos:line="13" pos:column="49"/></name></name></expr>;<pos:position pos:line="13" pos:column="50"/></condition> <incr><expr><name pos:line="13" pos:column="51">i<pos:position pos:line="13" pos:column="52"/></name><operator pos:line="13" pos:column="52">++<pos:position pos:line="13" pos:column="54"/></operator></expr><operator pos:line="13" pos:column="54">,<pos:position pos:line="13" pos:column="55"/></operator> <expr><name pos:line="13" pos:column="56">worker<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">++<pos:position pos:line="13" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="65"/></control> <block pos:line="13" pos:column="66">{
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">( <expr><operator pos:line="14" pos:column="18">(<pos:position pos:line="14" pos:column="19"/></operator><ternary><condition><expr><name pos:line="14" pos:column="19">checking_standby<pos:position pos:line="14" pos:column="35"/></name></expr> ?<pos:position pos:line="14" pos:column="37"/></condition><then pos:line="14" pos:column="37"> <expr><operator pos:line="14" pos:column="38">!<pos:position pos:line="14" pos:column="39"/></operator><call><name pos:line="14" pos:column="39">PROXY_WORKER_IS_STANDBY<pos:position pos:line="14" pos:column="62"/></name><argument_list pos:line="14" pos:column="62">(<argument><expr><name pos:line="14" pos:column="63">worker<pos:position pos:line="14" pos:column="69"/></name></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr> <pos:position pos:line="14" pos:column="71"/></then><else pos:line="14" pos:column="71">: <expr><call><name pos:line="14" pos:column="73">PROXY_WORKER_IS_STANDBY<pos:position pos:line="14" pos:column="96"/></name><argument_list pos:line="14" pos:column="96">(<argument><expr><name pos:line="14" pos:column="97">worker<pos:position pos:line="14" pos:column="103"/></name></expr></argument>)<pos:position pos:line="14" pos:column="104"/></argument_list></call></expr></else></ternary><operator pos:line="14" pos:column="104">)<pos:position pos:line="14" pos:column="105"/></operator></expr> )<pos:position pos:line="14" pos:column="107"/></condition><then pos:line="14" pos:column="107">
                <block type="pseudo"><continue pos:line="15" pos:column="17">continue;<pos:position pos:line="15" pos:column="26"/></continue></block></then></if>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><operator pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></operator><operator pos:line="16" pos:column="18">(<pos:position pos:line="16" pos:column="19"/></operator><name><name pos:line="16" pos:column="19">worker<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">s<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">route<pos:position pos:line="16" pos:column="35"/></name></name><operator pos:line="16" pos:column="35">)<pos:position pos:line="16" pos:column="36"/></operator> <operator pos:line="16" pos:column="37">&amp;&amp;<pos:position pos:line="16" pos:column="47"/></operator> <call><name pos:line="16" pos:column="40">strcmp<pos:position pos:line="16" pos:column="46"/></name><argument_list pos:line="16" pos:column="46">(<argument><expr><name><name pos:line="16" pos:column="47">worker<pos:position pos:line="16" pos:column="53"/></name><operator pos:line="16" pos:column="53">-&gt;<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="55">s<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">-&gt;<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="58">route<pos:position pos:line="16" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="65">route<pos:position pos:line="16" pos:column="70"/></name></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call> <operator pos:line="16" pos:column="72">==<pos:position pos:line="16" pos:column="74"/></operator> <literal type="number" pos:line="16" pos:column="75">0<pos:position pos:line="16" pos:column="76"/></literal></expr>)<pos:position pos:line="16" pos:column="77"/></condition><then pos:line="16" pos:column="77"> <block pos:line="16" pos:column="78">{
                <if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">worker<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">&amp;&amp;<pos:position pos:line="17" pos:column="38"/></operator> <call><name pos:line="17" pos:column="31">PROXY_WORKER_IS_USABLE<pos:position pos:line="17" pos:column="53"/></name><argument_list pos:line="17" pos:column="53">(<argument><expr><name pos:line="17" pos:column="54">worker<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="62"/></condition><then pos:line="17" pos:column="62"> <block pos:line="17" pos:column="63">{
                    <return pos:line="18" pos:column="21">return <expr><name pos:line="18" pos:column="28">worker<pos:position pos:line="18" pos:column="34"/></name></expr>;<pos:position pos:line="18" pos:column="35"/></return>
                }<pos:position pos:line="19" pos:column="18"/></block></then> <else pos:line="19" pos:column="19">else <block pos:line="19" pos:column="24">{
                    <comment type="block" pos:line="20" pos:column="21">/*
                     * If the worker is in error state run
                     * retry on that worker. It will be marked as
                     * operational if the retry timeout is elapsed.
                     * The worker might still be unusable, but we try
                     * anyway.
                     */</comment>
                    <expr_stmt><expr><call><name pos:line="27" pos:column="21">ap_proxy_retry_worker<pos:position pos:line="27" pos:column="42"/></name><argument_list pos:line="27" pos:column="42">(<argument><expr><literal type="string" pos:line="27" pos:column="43">"BALANCER"<pos:position pos:line="27" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="55">worker<pos:position pos:line="27" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="63">r<pos:position pos:line="27" pos:column="64"/></name><operator pos:line="27" pos:column="64">-&gt;<pos:position pos:line="27" pos:column="69"/></operator><name pos:line="27" pos:column="66">server<pos:position pos:line="27" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="74"/></expr_stmt>
                    <if pos:line="28" pos:column="21">if <condition pos:line="28" pos:column="24">(<expr><call><name pos:line="28" pos:column="25">PROXY_WORKER_IS_USABLE<pos:position pos:line="28" pos:column="47"/></name><argument_list pos:line="28" pos:column="47">(<argument><expr><name pos:line="28" pos:column="48">worker<pos:position pos:line="28" pos:column="54"/></name></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="56"/></condition><then pos:line="28" pos:column="56"> <block pos:line="28" pos:column="57">{
                            <return pos:line="29" pos:column="29">return <expr><name pos:line="29" pos:column="36">worker<pos:position pos:line="29" pos:column="42"/></name></expr>;<pos:position pos:line="29" pos:column="43"/></return>
                    }<pos:position pos:line="30" pos:column="22"/></block></then> <else pos:line="30" pos:column="23">else <block pos:line="30" pos:column="28">{
                        <comment type="block" pos:line="31" pos:column="25">/*
                         * We have a worker that is unusable.
                         * It can be in error or disabled, but in case
                         * it has a redirection set use that redirection worker.
                         * This enables to safely remove the member from the
                         * balancer. Of course you will need some kind of
                         * session replication between those two remote.
                         */</comment>
                        <if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><operator pos:line="39" pos:column="29">*<pos:position pos:line="39" pos:column="30"/></operator><name><name pos:line="39" pos:column="30">worker<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">-&gt;<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="38">s<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">-&gt;<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="41">redirect<pos:position pos:line="39" pos:column="49"/></name></name></expr>)<pos:position pos:line="39" pos:column="50"/></condition><then pos:line="39" pos:column="50"> <block pos:line="39" pos:column="51">{
                            <decl_stmt><decl><type><name pos:line="40" pos:column="29">proxy_worker<pos:position pos:line="40" pos:column="41"/></name> <modifier pos:line="40" pos:column="42">*<pos:position pos:line="40" pos:column="43"/></modifier></type><name pos:line="40" pos:column="43">rworker<pos:position pos:line="40" pos:column="50"/></name> <init pos:line="40" pos:column="51">= <expr><name pos:line="40" pos:column="53">NULL<pos:position pos:line="40" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="40" pos:column="58"/></decl_stmt>
                            <expr_stmt><expr><name pos:line="41" pos:column="29">rworker<pos:position pos:line="41" pos:column="36"/></name> <operator pos:line="41" pos:column="37">=<pos:position pos:line="41" pos:column="38"/></operator> <call><name pos:line="41" pos:column="39">find_route_worker<pos:position pos:line="41" pos:column="56"/></name><argument_list pos:line="41" pos:column="56">(<argument><expr><name pos:line="41" pos:column="57">balancer<pos:position pos:line="41" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="67">worker<pos:position pos:line="41" pos:column="73"/></name><operator pos:line="41" pos:column="73">-&gt;<pos:position pos:line="41" pos:column="78"/></operator><name pos:line="41" pos:column="75">s<pos:position pos:line="41" pos:column="76"/></name><operator pos:line="41" pos:column="76">-&gt;<pos:position pos:line="41" pos:column="81"/></operator><name pos:line="41" pos:column="78">redirect<pos:position pos:line="41" pos:column="86"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="88">r<pos:position pos:line="41" pos:column="89"/></name></expr></argument>)<pos:position pos:line="41" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="91"/></expr_stmt>
                            <comment type="block" pos:line="42" pos:column="29">/* Check if the redirect worker is usable */</comment>
                            <if pos:line="43" pos:column="29">if <condition pos:line="43" pos:column="32">(<expr><name pos:line="43" pos:column="33">rworker<pos:position pos:line="43" pos:column="40"/></name> <operator pos:line="43" pos:column="41">&amp;&amp;<pos:position pos:line="43" pos:column="51"/></operator> <operator pos:line="43" pos:column="44">!<pos:position pos:line="43" pos:column="45"/></operator><call><name pos:line="43" pos:column="45">PROXY_WORKER_IS_USABLE<pos:position pos:line="43" pos:column="67"/></name><argument_list pos:line="43" pos:column="67">(<argument><expr><name pos:line="43" pos:column="68">rworker<pos:position pos:line="43" pos:column="75"/></name></expr></argument>)<pos:position pos:line="43" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="77"/></condition><then pos:line="43" pos:column="77"> <block pos:line="43" pos:column="78">{
                                <comment type="block" pos:line="44" pos:column="33">/*
                                 * If the worker is in error state run
                                 * retry on that worker. It will be marked as
                                 * operational if the retry timeout is elapsed.
                                 * The worker might still be unusable, but we try
                                 * anyway.
                                 */</comment>
                                <expr_stmt><expr><call><name pos:line="51" pos:column="33">ap_proxy_retry_worker<pos:position pos:line="51" pos:column="54"/></name><argument_list pos:line="51" pos:column="54">(<argument><expr><literal type="string" pos:line="51" pos:column="55">"BALANCER"<pos:position pos:line="51" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="67">rworker<pos:position pos:line="51" pos:column="74"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="76">r<pos:position pos:line="51" pos:column="77"/></name><operator pos:line="51" pos:column="77">-&gt;<pos:position pos:line="51" pos:column="82"/></operator><name pos:line="51" pos:column="79">server<pos:position pos:line="51" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="87"/></expr_stmt>
                            }<pos:position pos:line="52" pos:column="30"/></block></then></if>
                            <if pos:line="53" pos:column="29">if <condition pos:line="53" pos:column="32">(<expr><name pos:line="53" pos:column="33">rworker<pos:position pos:line="53" pos:column="40"/></name> <operator pos:line="53" pos:column="41">&amp;&amp;<pos:position pos:line="53" pos:column="51"/></operator> <call><name pos:line="53" pos:column="44">PROXY_WORKER_IS_USABLE<pos:position pos:line="53" pos:column="66"/></name><argument_list pos:line="53" pos:column="66">(<argument><expr><name pos:line="53" pos:column="67">rworker<pos:position pos:line="53" pos:column="74"/></name></expr></argument>)<pos:position pos:line="53" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="76"/></condition><then pos:line="53" pos:column="76">
                                <block type="pseudo"><return pos:line="54" pos:column="33">return <expr><name pos:line="54" pos:column="40">rworker<pos:position pos:line="54" pos:column="47"/></name></expr>;<pos:position pos:line="54" pos:column="48"/></return></block></then></if>
                        }<pos:position pos:line="55" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="56" pos:column="22"/></block></else></if>
                }<pos:position pos:line="57" pos:column="18"/></block></else></if>
            }<pos:position pos:line="58" pos:column="14"/></block></then></if>
        }<pos:position pos:line="59" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="60" pos:column="9">checked_standby<pos:position pos:line="60" pos:column="24"/></name> <operator pos:line="60" pos:column="25">=<pos:position pos:line="60" pos:column="26"/></operator> <name pos:line="60" pos:column="27">checking_standby<pos:position pos:line="60" pos:column="43"/></name><operator pos:line="60" pos:column="43">++<pos:position pos:line="60" pos:column="45"/></operator></expr>;<pos:position pos:line="60" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></while>
    <return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">NULL<pos:position pos:line="62" pos:column="16"/></name></expr>;<pos:position pos:line="62" pos:column="17"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

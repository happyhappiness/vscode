<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_812_httpd-2.2.34.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ssl_hook_ReadReq<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">request_rec<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">r<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSLConnRec<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">sslconn<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">myConnConfig<pos:position pos:line="3" pos:column="39"/></name><argument_list pos:line="3" pos:column="39">(<argument><expr><name><name pos:line="3" pos:column="40">r<pos:position pos:line="3" pos:column="41"/></name><operator pos:line="3" pos:column="41">-&gt;<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="43">connection<pos:position pos:line="3" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="55"/></decl_stmt>
<cpp:ifndef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifndef<pos:position pos:line="4" pos:column="8"/></cpp:directive> <name pos:line="4" pos:column="9">OPENSSL_NO_TLSEXT<pos:position pos:line="4" pos:column="26"/></name></cpp:ifndef>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">servername<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">SSL<pos:position pos:line="7" pos:column="8"/></name> <modifier pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></modifier></type><name pos:line="7" pos:column="10">ssl<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">sslconn<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block pos:line="9" pos:column="19">{
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">DECLINED<pos:position pos:line="10" pos:column="24"/></name></expr>;<pos:position pos:line="10" pos:column="25"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">sslconn<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">non_ssl_request<pos:position pos:line="13" pos:column="33"/></name></name> <operator pos:line="13" pos:column="34">==<pos:position pos:line="13" pos:column="36"/></operator> <name pos:line="13" pos:column="37">NON_SSL_SET_ERROR_MSG<pos:position pos:line="13" pos:column="58"/></name></expr>)<pos:position pos:line="13" pos:column="59"/></condition><then pos:line="13" pos:column="59"> <block pos:line="13" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">apr_table_setn<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name><name pos:line="14" pos:column="24">r<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">notes<pos:position pos:line="14" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">"error-notes"<pos:position pos:line="14" pos:column="47"/></literal></expr></argument>,
                       <argument><expr><literal type="string" pos:line="15" pos:column="24">"Reason: You're speaking plain HTTP to an SSL-enabled "<pos:position pos:line="15" pos:column="79"/></literal>
                       <literal type="string" pos:line="16" pos:column="24">"server port.&lt;br /&gt;\n Instead use the HTTPS scheme to "<pos:position pos:line="16" pos:column="85"/></literal>
                       <literal type="string" pos:line="17" pos:column="24">"access this URL, please.&lt;br /&gt;\n"<pos:position pos:line="17" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="60"/></expr_stmt>

        <comment type="block" pos:line="19" pos:column="9">/* Now that we have caught this error, forget it. we are done
         * with using SSL on this request.
         */</comment>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">sslconn<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">non_ssl_request<pos:position pos:line="22" pos:column="33"/></name></name> <operator pos:line="22" pos:column="34">=<pos:position pos:line="22" pos:column="35"/></operator> <name pos:line="22" pos:column="36">NON_SSL_OK<pos:position pos:line="22" pos:column="46"/></name></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>

        <return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="24" pos:column="32"/></name></expr>;<pos:position pos:line="24" pos:column="33"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="27" pos:column="5">/*
     * Get the SSL connection structure and perform the
     * delayed interlinking from SSL back to request_rec
     */</comment>
    <expr_stmt><expr><name pos:line="31" pos:column="5">ssl<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">=<pos:position pos:line="31" pos:column="10"/></operator> <name><name pos:line="31" pos:column="11">sslconn<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">ssl<pos:position pos:line="31" pos:column="23"/></name></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">!<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">ssl<pos:position pos:line="32" pos:column="13"/></name></expr>)<pos:position pos:line="32" pos:column="14"/></condition><then pos:line="32" pos:column="14"> <block pos:line="32" pos:column="15">{
        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">DECLINED<pos:position pos:line="33" pos:column="24"/></name></expr>;<pos:position pos:line="33" pos:column="25"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
<cpp:ifndef pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">ifndef<pos:position pos:line="35" pos:column="8"/></cpp:directive> <name pos:line="35" pos:column="9">OPENSSL_NO_TLSEXT<pos:position pos:line="35" pos:column="26"/></name></cpp:ifndef>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">r<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">proxyreq<pos:position pos:line="36" pos:column="20"/></name></name> <operator pos:line="36" pos:column="21">!=<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="24">PROXYREQ_PROXY<pos:position pos:line="36" pos:column="38"/></name></expr>)<pos:position pos:line="36" pos:column="39"/></condition><then pos:line="36" pos:column="39"> <block pos:line="36" pos:column="40">{
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">(<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">servername<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <call><name pos:line="37" pos:column="27">SSL_get_servername<pos:position pos:line="37" pos:column="45"/></name><argument_list pos:line="37" pos:column="45">(<argument><expr><name pos:line="37" pos:column="46">ssl<pos:position pos:line="37" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="51">TLSEXT_NAMETYPE_host_name<pos:position pos:line="37" pos:column="76"/></name></expr></argument>)<pos:position pos:line="37" pos:column="77"/></argument_list></call><operator pos:line="37" pos:column="77">)<pos:position pos:line="37" pos:column="78"/></operator></expr>)<pos:position pos:line="37" pos:column="79"/></condition><then pos:line="37" pos:column="79"> <block pos:line="37" pos:column="80">{
            <decl_stmt><decl><type><name pos:line="38" pos:column="13">char<pos:position pos:line="38" pos:column="17"/></name> <modifier pos:line="38" pos:column="18">*<pos:position pos:line="38" pos:column="19"/></modifier></type><name pos:line="38" pos:column="19">host<pos:position pos:line="38" pos:column="23"/></name></decl>, <modifier pos:line="38" pos:column="25">*<pos:position pos:line="38" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="38" pos:column="26">scope_id<pos:position pos:line="38" pos:column="34"/></name></decl>;<pos:position pos:line="38" pos:column="35"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">apr_port_t<pos:position pos:line="39" pos:column="23"/></name></type> <name pos:line="39" pos:column="24">port<pos:position pos:line="39" pos:column="28"/></name></decl>;<pos:position pos:line="39" pos:column="29"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="40" pos:column="13">apr_status_t<pos:position pos:line="40" pos:column="25"/></name></type> <name pos:line="40" pos:column="26">rv<pos:position pos:line="40" pos:column="28"/></name></decl>;<pos:position pos:line="40" pos:column="29"/></decl_stmt>

            <comment type="block" pos:line="42" pos:column="13">/*
             * The SNI extension supplied a hostname. So don't accept requests
             * with either no hostname or a different hostname as this could
             * cause us to end up in a different virtual host as the one that
             * was used for the handshake causing different SSL parameters to
             * be applied as SSLProtocol, SSLCACertificateFile/Path and
             * SSLCADNRequestFile/Path cannot be renegotiated (SSLCA* due
             * to current limitations in OpenSSL, see
             * http://mail-archives.apache.org/mod_mbox/httpd-dev/200806.mbox/%3C48592955.2090303@velox.ch%3E
             * and
             * http://mail-archives.apache.org/mod_mbox/httpd-dev/201312.mbox/%3CCAKQ1sVNpOrdiBm-UPw1hEdSN7YQXRRjeaT-MCWbW_7mN%3DuFiOw%40mail.gmail.com%3E
             * )
             */</comment>
            <if pos:line="55" pos:column="13">if <condition pos:line="55" pos:column="16">(<expr><operator pos:line="55" pos:column="17">!<pos:position pos:line="55" pos:column="18"/></operator><name><name pos:line="55" pos:column="18">r<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">-&gt;<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="21">hostname<pos:position pos:line="55" pos:column="29"/></name></name></expr>)<pos:position pos:line="55" pos:column="30"/></condition><then pos:line="55" pos:column="30"> <block pos:line="55" pos:column="31">{
                <expr_stmt><expr><call><name pos:line="56" pos:column="17">ap_log_error<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">APLOG_MARK<pos:position pos:line="56" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="42">APLOG_ERR<pos:position pos:line="56" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="53">0<pos:position pos:line="56" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="56">r<pos:position pos:line="56" pos:column="57"/></name><operator pos:line="56" pos:column="57">-&gt;<pos:position pos:line="56" pos:column="62"/></operator><name pos:line="56" pos:column="59">server<pos:position pos:line="56" pos:column="65"/></name></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="57" pos:column="29">"Hostname %s provided via SNI, but no hostname"<pos:position pos:line="57" pos:column="76"/></literal>
                            <literal type="string" pos:line="58" pos:column="29">" provided in HTTP request"<pos:position pos:line="58" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="58">servername<pos:position pos:line="58" pos:column="68"/></name></expr></argument>)<pos:position pos:line="58" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="70"/></expr_stmt>
                <return pos:line="59" pos:column="17">return <expr><name pos:line="59" pos:column="24">HTTP_BAD_REQUEST<pos:position pos:line="59" pos:column="40"/></name></expr>;<pos:position pos:line="59" pos:column="41"/></return>
            }<pos:position pos:line="60" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="61" pos:column="13">rv<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <call><name pos:line="61" pos:column="18">apr_parse_addr_port<pos:position pos:line="61" pos:column="37"/></name><argument_list pos:line="61" pos:column="37">(<argument><expr><operator pos:line="61" pos:column="38">&amp;<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="39">host<pos:position pos:line="61" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="45">&amp;<pos:position pos:line="61" pos:column="50"/></operator><name pos:line="61" pos:column="46">scope_id<pos:position pos:line="61" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="56">&amp;<pos:position pos:line="61" pos:column="61"/></operator><name pos:line="61" pos:column="57">port<pos:position pos:line="61" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="63">r<pos:position pos:line="61" pos:column="64"/></name><operator pos:line="61" pos:column="64">-&gt;<pos:position pos:line="61" pos:column="69"/></operator><name pos:line="61" pos:column="66">hostname<pos:position pos:line="61" pos:column="74"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="76">r<pos:position pos:line="61" pos:column="77"/></name><operator pos:line="61" pos:column="77">-&gt;<pos:position pos:line="61" pos:column="82"/></operator><name pos:line="61" pos:column="79">pool<pos:position pos:line="61" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="85"/></expr_stmt>
            <if pos:line="62" pos:column="13">if <condition pos:line="62" pos:column="16">(<expr><name pos:line="62" pos:column="17">rv<pos:position pos:line="62" pos:column="19"/></name> <operator pos:line="62" pos:column="20">!=<pos:position pos:line="62" pos:column="22"/></operator> <name pos:line="62" pos:column="23">APR_SUCCESS<pos:position pos:line="62" pos:column="34"/></name> <operator pos:line="62" pos:column="35">||<pos:position pos:line="62" pos:column="37"/></operator> <name pos:line="62" pos:column="38">scope_id<pos:position pos:line="62" pos:column="46"/></name></expr>)<pos:position pos:line="62" pos:column="47"/></condition><then pos:line="62" pos:column="47"> <block pos:line="62" pos:column="48">{
                <return pos:line="63" pos:column="17">return <expr><name pos:line="63" pos:column="24">HTTP_BAD_REQUEST<pos:position pos:line="63" pos:column="40"/></name></expr>;<pos:position pos:line="63" pos:column="41"/></return>
            }<pos:position pos:line="64" pos:column="14"/></block></then></if>
            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><call><name pos:line="65" pos:column="17">strcasecmp<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><name pos:line="65" pos:column="28">host<pos:position pos:line="65" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="34">servername<pos:position pos:line="65" pos:column="44"/></name></expr></argument>)<pos:position pos:line="65" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="46"/></condition><then pos:line="65" pos:column="46"> <block pos:line="65" pos:column="47">{
                <expr_stmt><expr><call><name pos:line="66" pos:column="17">ap_log_error<pos:position pos:line="66" pos:column="29"/></name><argument_list pos:line="66" pos:column="29">(<argument><expr><name pos:line="66" pos:column="30">APLOG_MARK<pos:position pos:line="66" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="42">APLOG_ERR<pos:position pos:line="66" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="53">0<pos:position pos:line="66" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="56">r<pos:position pos:line="66" pos:column="57"/></name><operator pos:line="66" pos:column="57">-&gt;<pos:position pos:line="66" pos:column="62"/></operator><name pos:line="66" pos:column="59">server<pos:position pos:line="66" pos:column="65"/></name></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="67" pos:column="29">"Hostname %s provided via SNI and hostname %s provided"<pos:position pos:line="67" pos:column="84"/></literal>
                            <literal type="string" pos:line="68" pos:column="29">" via HTTP are different"<pos:position pos:line="68" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="56">servername<pos:position pos:line="68" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="68">host<pos:position pos:line="68" pos:column="72"/></name></expr></argument>)<pos:position pos:line="68" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="74"/></expr_stmt>
                <return pos:line="69" pos:column="17">return <expr><name pos:line="69" pos:column="24">HTTP_BAD_REQUEST<pos:position pos:line="69" pos:column="40"/></name></expr>;<pos:position pos:line="69" pos:column="41"/></return>
            }<pos:position pos:line="70" pos:column="14"/></block></then></if>
        }<pos:position pos:line="71" pos:column="10"/></block></then>
        <elseif pos:line="72" pos:column="9">else <if pos:line="72" pos:column="14">if <condition pos:line="72" pos:column="17">(<expr><operator pos:line="72" pos:column="18">(<pos:position pos:line="72" pos:column="19"/></operator><operator pos:line="72" pos:column="19">(<pos:position pos:line="72" pos:column="20"/></operator><operator pos:line="72" pos:column="20">(<pos:position pos:line="72" pos:column="21"/></operator><call><name pos:line="72" pos:column="21">mySrvConfig<pos:position pos:line="72" pos:column="32"/></name><argument_list pos:line="72" pos:column="32">(<argument><expr><name><name pos:line="72" pos:column="33">r<pos:position pos:line="72" pos:column="34"/></name><operator pos:line="72" pos:column="34">-&gt;<pos:position pos:line="72" pos:column="39"/></operator><name pos:line="72" pos:column="36">server<pos:position pos:line="72" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="43"/></argument_list></call><operator pos:line="72" pos:column="43">)<pos:position pos:line="72" pos:column="44"/></operator><operator pos:line="72" pos:column="44">-&gt;<pos:position pos:line="72" pos:column="49"/></operator><name pos:line="72" pos:column="46">strict_sni_vhost_check<pos:position pos:line="72" pos:column="68"/></name>
                  <operator pos:line="73" pos:column="19">==<pos:position pos:line="73" pos:column="21"/></operator> <name pos:line="73" pos:column="22">SSL_ENABLED_TRUE<pos:position pos:line="73" pos:column="38"/></name><operator pos:line="73" pos:column="38">)<pos:position pos:line="73" pos:column="39"/></operator>
                 <operator pos:line="74" pos:column="18">||<pos:position pos:line="74" pos:column="20"/></operator> <operator pos:line="74" pos:column="21">(<pos:position pos:line="74" pos:column="22"/></operator><call><name pos:line="74" pos:column="22">mySrvConfig<pos:position pos:line="74" pos:column="33"/></name><argument_list pos:line="74" pos:column="33">(<argument><expr><name><name pos:line="74" pos:column="34">sslconn<pos:position pos:line="74" pos:column="41"/></name><operator pos:line="74" pos:column="41">-&gt;<pos:position pos:line="74" pos:column="46"/></operator><name pos:line="74" pos:column="43">server<pos:position pos:line="74" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="50"/></argument_list></call><operator pos:line="74" pos:column="50">)<pos:position pos:line="74" pos:column="51"/></operator><operator pos:line="74" pos:column="51">-&gt;<pos:position pos:line="74" pos:column="56"/></operator><name pos:line="74" pos:column="53">strict_sni_vhost_check<pos:position pos:line="74" pos:column="75"/></name>
                    <operator pos:line="75" pos:column="21">==<pos:position pos:line="75" pos:column="23"/></operator> <name pos:line="75" pos:column="24">SSL_ENABLED_TRUE<pos:position pos:line="75" pos:column="40"/></name><operator pos:line="75" pos:column="40">)<pos:position pos:line="75" pos:column="41"/></operator>
                 <operator pos:line="76" pos:column="18">&amp;&amp;<pos:position pos:line="76" pos:column="28"/></operator> <name><name pos:line="76" pos:column="21">r<pos:position pos:line="76" pos:column="22"/></name><operator pos:line="76" pos:column="22">-&gt;<pos:position pos:line="76" pos:column="27"/></operator><name pos:line="76" pos:column="24">connection<pos:position pos:line="76" pos:column="34"/></name><operator pos:line="76" pos:column="34">-&gt;<pos:position pos:line="76" pos:column="39"/></operator><name pos:line="76" pos:column="36">vhost_lookup_data<pos:position pos:line="76" pos:column="53"/></name></name></expr>)<pos:position pos:line="76" pos:column="54"/></condition><then pos:line="76" pos:column="54"> <block pos:line="76" pos:column="55">{
            <comment type="block" pos:line="77" pos:column="13">/*
             * We are using a name based configuration here, but no hostname was
             * provided via SNI. Don't allow that if are requested to do strict
             * checking. Check wether this strict checking was setup either in the
             * server config we used for handshaking or in our current server.
             * This should avoid insecure configuration by accident.
             */</comment>
            <expr_stmt><expr><call><name pos:line="84" pos:column="13">ap_log_error<pos:position pos:line="84" pos:column="25"/></name><argument_list pos:line="84" pos:column="25">(<argument><expr><name pos:line="84" pos:column="26">APLOG_MARK<pos:position pos:line="84" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="38">APLOG_ERR<pos:position pos:line="84" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="49">0<pos:position pos:line="84" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="52">r<pos:position pos:line="84" pos:column="53"/></name><operator pos:line="84" pos:column="53">-&gt;<pos:position pos:line="84" pos:column="58"/></operator><name pos:line="84" pos:column="55">server<pos:position pos:line="84" pos:column="61"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="85" pos:column="26">"No hostname was provided via SNI for a name based"<pos:position pos:line="85" pos:column="77"/></literal>
                         <literal type="string" pos:line="86" pos:column="26">" virtual host"<pos:position pos:line="86" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="43"/></expr_stmt>
            <return pos:line="87" pos:column="13">return <expr><name pos:line="87" pos:column="20">HTTP_FORBIDDEN<pos:position pos:line="87" pos:column="34"/></name></expr>;<pos:position pos:line="87" pos:column="35"/></return>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif<pos:position pos:line="90" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">SSL_set_app_data2<pos:position pos:line="91" pos:column="22"/></name><argument_list pos:line="91" pos:column="22">(<argument><expr><name pos:line="91" pos:column="23">ssl<pos:position pos:line="91" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="28">r<pos:position pos:line="91" pos:column="29"/></name></expr></argument>)<pos:position pos:line="91" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="93" pos:column="5">/*
     * Log information about incoming HTTPS requests
     */</comment>
    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name><name pos:line="96" pos:column="9">r<pos:position pos:line="96" pos:column="10"/></name><operator pos:line="96" pos:column="10">-&gt;<pos:position pos:line="96" pos:column="15"/></operator><name pos:line="96" pos:column="12">server<pos:position pos:line="96" pos:column="18"/></name><operator pos:line="96" pos:column="18">-&gt;<pos:position pos:line="96" pos:column="23"/></operator><name pos:line="96" pos:column="20">loglevel<pos:position pos:line="96" pos:column="28"/></name></name> <operator pos:line="96" pos:column="29">&gt;=<pos:position pos:line="96" pos:column="34"/></operator> <name pos:line="96" pos:column="32">APLOG_INFO<pos:position pos:line="96" pos:column="42"/></name> <operator pos:line="96" pos:column="43">&amp;&amp;<pos:position pos:line="96" pos:column="53"/></operator> <call><name pos:line="96" pos:column="46">ap_is_initial_req<pos:position pos:line="96" pos:column="63"/></name><argument_list pos:line="96" pos:column="63">(<argument><expr><name pos:line="96" pos:column="64">r<pos:position pos:line="96" pos:column="65"/></name></expr></argument>)<pos:position pos:line="96" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="67"/></condition><then pos:line="96" pos:column="67"> <block pos:line="96" pos:column="68">{
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">ap_log_error<pos:position pos:line="97" pos:column="21"/></name><argument_list pos:line="97" pos:column="21">(<argument><expr><name pos:line="97" pos:column="22">APLOG_MARK<pos:position pos:line="97" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="34">APLOG_INFO<pos:position pos:line="97" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="46">0<pos:position pos:line="97" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="49">r<pos:position pos:line="97" pos:column="50"/></name><operator pos:line="97" pos:column="50">-&gt;<pos:position pos:line="97" pos:column="55"/></operator><name pos:line="97" pos:column="52">server<pos:position pos:line="97" pos:column="58"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="98" pos:column="22">"%s HTTPS request received for child %ld (server %s)"<pos:position pos:line="98" pos:column="75"/></literal></expr></argument>,
                     <argument><expr><operator pos:line="99" pos:column="22">(<pos:position pos:line="99" pos:column="23"/></operator><ternary><condition><expr><name><name pos:line="99" pos:column="23">r<pos:position pos:line="99" pos:column="24"/></name><operator pos:line="99" pos:column="24">-&gt;<pos:position pos:line="99" pos:column="29"/></operator><name pos:line="99" pos:column="26">connection<pos:position pos:line="99" pos:column="36"/></name><operator pos:line="99" pos:column="36">-&gt;<pos:position pos:line="99" pos:column="41"/></operator><name pos:line="99" pos:column="38">keepalives<pos:position pos:line="99" pos:column="48"/></name></name> <operator pos:line="99" pos:column="49">&lt;=<pos:position pos:line="99" pos:column="54"/></operator> <literal type="number" pos:line="99" pos:column="52">0<pos:position pos:line="99" pos:column="53"/></literal></expr> ?<pos:position pos:line="99" pos:column="55"/></condition><then pos:line="99" pos:column="55">
                     <expr><literal type="string" pos:line="100" pos:column="22">"Initial (No.1)"<pos:position pos:line="100" pos:column="38"/></literal></expr> <pos:position pos:line="100" pos:column="39"/></then><else pos:line="100" pos:column="39">:
                     <expr><call><name pos:line="101" pos:column="22">apr_psprintf<pos:position pos:line="101" pos:column="34"/></name><argument_list pos:line="101" pos:column="34">(<argument><expr><name><name pos:line="101" pos:column="35">r<pos:position pos:line="101" pos:column="36"/></name><operator pos:line="101" pos:column="36">-&gt;<pos:position pos:line="101" pos:column="41"/></operator><name pos:line="101" pos:column="38">pool<pos:position pos:line="101" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="44">"Subsequent (No.%d)"<pos:position pos:line="101" pos:column="64"/></literal></expr></argument>,
                                  <argument><expr><name><name pos:line="102" pos:column="35">r<pos:position pos:line="102" pos:column="36"/></name><operator pos:line="102" pos:column="36">-&gt;<pos:position pos:line="102" pos:column="41"/></operator><name pos:line="102" pos:column="38">connection<pos:position pos:line="102" pos:column="48"/></name><operator pos:line="102" pos:column="48">-&gt;<pos:position pos:line="102" pos:column="53"/></operator><name pos:line="102" pos:column="50">keepalives<pos:position pos:line="102" pos:column="60"/></name></name><operator pos:line="102" pos:column="60">+<pos:position pos:line="102" pos:column="61"/></operator><literal type="number" pos:line="102" pos:column="61">1<pos:position pos:line="102" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="63"/></argument_list></call></expr></else></ternary><operator pos:line="102" pos:column="63">)<pos:position pos:line="102" pos:column="64"/></operator></expr></argument>,
                     <argument><expr><name><name pos:line="103" pos:column="22">r<pos:position pos:line="103" pos:column="23"/></name><operator pos:line="103" pos:column="23">-&gt;<pos:position pos:line="103" pos:column="28"/></operator><name pos:line="103" pos:column="25">connection<pos:position pos:line="103" pos:column="35"/></name><operator pos:line="103" pos:column="35">-&gt;<pos:position pos:line="103" pos:column="40"/></operator><name pos:line="103" pos:column="37">id<pos:position pos:line="103" pos:column="39"/></name></name></expr></argument>,
                     <argument><expr><call><name pos:line="104" pos:column="22">ssl_util_vhostid<pos:position pos:line="104" pos:column="38"/></name><argument_list pos:line="104" pos:column="38">(<argument><expr><name><name pos:line="104" pos:column="39">r<pos:position pos:line="104" pos:column="40"/></name><operator pos:line="104" pos:column="40">-&gt;<pos:position pos:line="104" pos:column="45"/></operator><name pos:line="104" pos:column="42">pool<pos:position pos:line="104" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="48">r<pos:position pos:line="104" pos:column="49"/></name><operator pos:line="104" pos:column="49">-&gt;<pos:position pos:line="104" pos:column="54"/></operator><name pos:line="104" pos:column="51">server<pos:position pos:line="104" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="104" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="105" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="107" pos:column="5">/* SetEnvIf ssl-*-shutdown flags can only be per-server,
     * so they won't change across keepalive requests
     */</comment>
    <if pos:line="110" pos:column="5">if <condition pos:line="110" pos:column="8">(<expr><name><name pos:line="110" pos:column="9">sslconn<pos:position pos:line="110" pos:column="16"/></name><operator pos:line="110" pos:column="16">-&gt;<pos:position pos:line="110" pos:column="21"/></operator><name pos:line="110" pos:column="18">shutdown_type<pos:position pos:line="110" pos:column="31"/></name></name> <operator pos:line="110" pos:column="32">==<pos:position pos:line="110" pos:column="34"/></operator> <name pos:line="110" pos:column="35">SSL_SHUTDOWN_TYPE_UNSET<pos:position pos:line="110" pos:column="58"/></name></expr>)<pos:position pos:line="110" pos:column="59"/></condition><then pos:line="110" pos:column="59"> <block pos:line="110" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">ssl_configure_env<pos:position pos:line="111" pos:column="26"/></name><argument_list pos:line="111" pos:column="26">(<argument><expr><name pos:line="111" pos:column="27">r<pos:position pos:line="111" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="30">sslconn<pos:position pos:line="111" pos:column="37"/></name></expr></argument>)<pos:position pos:line="111" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if>

    <return pos:line="114" pos:column="5">return <expr><name pos:line="114" pos:column="12">DECLINED<pos:position pos:line="114" pos:column="20"/></name></expr>;<pos:position pos:line="114" pos:column="21"/></return>
}<pos:position pos:line="115" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1244_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ftp_check_string<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">x<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="12">ch<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><literal type="number" pos:line="3" pos:column="17">0<pos:position pos:line="3" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="4" pos:column="23"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">buf<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><literal type="number" pos:line="5" pos:column="14">1<pos:position pos:line="5" pos:column="15"/></literal></expr>]<pos:position pos:line="5" pos:column="16"/></index></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><name><name pos:line="8" pos:column="17">x<pos:position pos:line="8" pos:column="18"/></name><index pos:line="8" pos:column="18">[<expr><name pos:line="8" pos:column="19">i<pos:position pos:line="8" pos:column="20"/></name></expr>]<pos:position pos:line="8" pos:column="21"/></index></name> <operator pos:line="8" pos:column="22">!=<pos:position pos:line="8" pos:column="24"/></operator> <literal type="char" pos:line="8" pos:column="25">'\0'<pos:position pos:line="8" pos:column="29"/></literal></expr>;<pos:position pos:line="8" pos:column="30"/></condition> <incr><expr><name pos:line="8" pos:column="31">i<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">++<pos:position pos:line="8" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="35"/></control> <block pos:line="8" pos:column="36">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">ch<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name><name pos:line="9" pos:column="14">x<pos:position pos:line="9" pos:column="15"/></name><index pos:line="9" pos:column="15">[<expr><name pos:line="9" pos:column="16">i<pos:position pos:line="9" pos:column="17"/></name></expr>]<pos:position pos:line="9" pos:column="18"/></index></name></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">ch<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">==<pos:position pos:line="10" pos:column="18"/></operator> <literal type="char" pos:line="10" pos:column="19">'%'<pos:position pos:line="10" pos:column="22"/></literal> <operator pos:line="10" pos:column="23">&amp;&amp;<pos:position pos:line="10" pos:column="33"/></operator> <call><name pos:line="10" pos:column="26">apr_isxdigit<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">(<argument><expr><name><name pos:line="10" pos:column="39">x<pos:position pos:line="10" pos:column="40"/></name><index pos:line="10" pos:column="40">[<expr><name pos:line="10" pos:column="41">i<pos:position pos:line="10" pos:column="42"/></name> <operator pos:line="10" pos:column="43">+<pos:position pos:line="10" pos:column="44"/></operator> <literal type="number" pos:line="10" pos:column="45">1<pos:position pos:line="10" pos:column="46"/></literal></expr>]<pos:position pos:line="10" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call> <operator pos:line="10" pos:column="49">&amp;&amp;<pos:position pos:line="10" pos:column="59"/></operator> <call><name pos:line="10" pos:column="52">apr_isxdigit<pos:position pos:line="10" pos:column="64"/></name><argument_list pos:line="10" pos:column="64">(<argument><expr><name><name pos:line="10" pos:column="65">x<pos:position pos:line="10" pos:column="66"/></name><index pos:line="10" pos:column="66">[<expr><name pos:line="10" pos:column="67">i<pos:position pos:line="10" pos:column="68"/></name> <operator pos:line="10" pos:column="69">+<pos:position pos:line="10" pos:column="70"/></operator> <literal type="number" pos:line="10" pos:column="71">2<pos:position pos:line="10" pos:column="72"/></literal></expr>]<pos:position pos:line="10" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="75"/></condition><then pos:line="10" pos:column="75"> <block pos:line="10" pos:column="76">{
            <expr_stmt><expr><name pos:line="11" pos:column="13">ch<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">ap_proxy_hex2c<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><operator pos:line="11" pos:column="33">&amp;<pos:position pos:line="11" pos:column="38"/></operator><name><name pos:line="11" pos:column="34">x<pos:position pos:line="11" pos:column="35"/></name><index pos:line="11" pos:column="35">[<expr><name pos:line="11" pos:column="36">i<pos:position pos:line="11" pos:column="37"/></name> <operator pos:line="11" pos:column="38">+<pos:position pos:line="11" pos:column="39"/></operator> <literal type="number" pos:line="11" pos:column="40">1<pos:position pos:line="11" pos:column="41"/></literal></expr>]<pos:position pos:line="11" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name pos:line="12" pos:column="13">i<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">+=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="18">2<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><operator pos:line="14" pos:column="5">!<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">APR_CHARSET_EBCDIC<pos:position pos:line="14" pos:column="24"/></name></expr></cpp:if>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">ch<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <literal type="char" pos:line="15" pos:column="19">'\015'<pos:position pos:line="15" pos:column="25"/></literal> <operator pos:line="15" pos:column="26">||<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">ch<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">==<pos:position pos:line="15" pos:column="34"/></operator> <literal type="char" pos:line="15" pos:column="35">'\012'<pos:position pos:line="15" pos:column="41"/></literal> <operator pos:line="15" pos:column="42">||<pos:position pos:line="15" pos:column="44"/></operator> <operator pos:line="15" pos:column="45">(<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="46">ch<pos:position pos:line="15" pos:column="48"/></name> <operator pos:line="15" pos:column="49">&amp;<pos:position pos:line="15" pos:column="54"/></operator> <literal type="number" pos:line="15" pos:column="51">0x80<pos:position pos:line="15" pos:column="55"/></literal><operator pos:line="15" pos:column="55">)<pos:position pos:line="15" pos:column="56"/></operator></expr>)<pos:position pos:line="15" pos:column="57"/></condition><then pos:line="15" pos:column="57">
<cpp:else pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">else<pos:position pos:line="16" pos:column="6"/></cpp:directive></cpp:else>                           <comment type="block" pos:line="16" pos:column="33">/* APR_CHARSET_EBCDIC */</comment>
        <block type="pseudo"><if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">ch<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">==<pos:position pos:line="17" pos:column="18"/></operator> <literal type="char" pos:line="17" pos:column="19">'\r'<pos:position pos:line="17" pos:column="23"/></literal> <operator pos:line="17" pos:column="24">||<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">ch<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">==<pos:position pos:line="17" pos:column="32"/></operator> <literal type="char" pos:line="17" pos:column="33">'\n'<pos:position pos:line="17" pos:column="37"/></literal></expr>)<pos:position pos:line="17" pos:column="38"/></condition><then pos:line="17" pos:column="38">
            <block type="pseudo"><return pos:line="18" pos:column="13">return <expr><literal type="number" pos:line="18" pos:column="20">0<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></return></block></then></if></block></then></if>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">buf<pos:position pos:line="19" pos:column="12"/></name><index pos:line="19" pos:column="12">[<expr><literal type="number" pos:line="19" pos:column="13">0<pos:position pos:line="19" pos:column="14"/></literal></expr>]<pos:position pos:line="19" pos:column="15"/></index></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">ch<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_xlate_proto_to_ascii<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">buf<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="38">1<pos:position pos:line="20" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">buf<pos:position pos:line="21" pos:column="16"/></name><index pos:line="21" pos:column="16">[<expr><literal type="number" pos:line="21" pos:column="17">0<pos:position pos:line="21" pos:column="18"/></literal></expr>]<pos:position pos:line="21" pos:column="19"/></index></name> <operator pos:line="21" pos:column="20">&amp;<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="22">0x80<pos:position pos:line="21" pos:column="26"/></literal></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27">
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>                          <comment type="block" pos:line="22" pos:column="33">/* APR_CHARSET_EBCDIC */</comment>
            <block type="pseudo"><return pos:line="23" pos:column="13">return <expr><literal type="number" pos:line="23" pos:column="20">0<pos:position pos:line="23" pos:column="21"/></literal></expr>;<pos:position pos:line="23" pos:column="22"/></return></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></for>
    <return pos:line="25" pos:column="5">return <expr><literal type="number" pos:line="25" pos:column="12">1<pos:position pos:line="25" pos:column="13"/></literal></expr>;<pos:position pos:line="25" pos:column="14"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

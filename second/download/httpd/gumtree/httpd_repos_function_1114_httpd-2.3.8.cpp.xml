<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1114_httpd-2.3.8.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">socache_mc_init<pos:position pos:line="1" pos:column="36"/></name><argument_list pos:line="1" pos:column="36">(<argument><expr><name pos:line="1" pos:column="37">ap_socache_instance_t<pos:position pos:line="1" pos:column="58"/></name> <operator pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></operator><name pos:line="1" pos:column="60">ctx<pos:position pos:line="1" pos:column="63"/></name></expr></argument>, 
                                    <argument><expr><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <operator pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></operator></expr></argument><namespace pos:line="2" pos:column="49">namespace<operator pos:line="2" pos:column="58">,<pos:position pos:line="2" pos:column="59"/></operator>
                                    const struct <name pos:line="3" pos:column="50">ap_socache_hints<pos:position pos:line="3" pos:column="66"/></name> <modifier pos:line="3" pos:column="67">*<pos:position pos:line="3" pos:column="68"/></modifier><name pos:line="3" pos:column="68">hints<pos:position pos:line="3" pos:column="73"/></name><operator pos:line="3" pos:column="73">,<pos:position pos:line="3" pos:column="74"/></operator>
                                    <name pos:line="4" pos:column="37">server_rec<pos:position pos:line="4" pos:column="47"/></name> <modifier pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></modifier><name pos:line="4" pos:column="49">s<pos:position pos:line="4" pos:column="50"/></name><operator pos:line="4" pos:column="50">,<pos:position pos:line="4" pos:column="51"/></operator> <name pos:line="4" pos:column="52">apr_pool_t<pos:position pos:line="4" pos:column="62"/></name> <modifier pos:line="4" pos:column="63">*<pos:position pos:line="4" pos:column="64"/></modifier><name pos:line="4" pos:column="64">p<pos:position pos:line="4" pos:column="65"/></name></namespace>)<pos:position pos:line="4" pos:column="66"/></argument_list>
<argument_list pos:line="5" pos:column="1">{
    <argument><expr><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></expr></argument>;
    <argument><expr><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name> <name pos:line="7" pos:column="9">thread_limit<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">=<pos:position pos:line="7" pos:column="23"/></operator> <literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr></argument>;
    <argument><expr><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name> <name pos:line="8" pos:column="9">nservers<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>;
    <argument><expr><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">cache_config<pos:position pos:line="9" pos:column="23"/></name></expr></argument>;
    <argument><expr><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">split<pos:position pos:line="10" pos:column="16"/></name></expr></argument>;
    <argument><expr><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">tok<pos:position pos:line="11" pos:column="14"/></name></expr></argument>;

    <argument><expr><call><name pos:line="13" pos:column="5">ap_mpm_query<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">AP_MPMQ_HARD_LIMIT_THREADS<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="46">&amp;<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="47">thread_limit<pos:position pos:line="13" pos:column="59"/></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr></argument>;

    <comment type="block" pos:line="15" pos:column="5">/* Find all the servers in the first run to get a total count */</comment>
    <argument><expr><name pos:line="16" pos:column="5">cache_config<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <call><name pos:line="16" pos:column="20">apr_pstrdup<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">p<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="35">ctx<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">servers<pos:position pos:line="16" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr></argument>;
    <argument><expr><name pos:line="17" pos:column="5">split<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">apr_strtok<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">cache_config<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="38">","<pos:position pos:line="17" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="43">&amp;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="44">tok<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr></argument>;
    while <argument><expr><operator pos:line="18" pos:column="11">(<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">split<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">)<pos:position pos:line="18" pos:column="18"/></operator> <block pos:line="18" pos:column="19">{
        <expr><name pos:line="19" pos:column="9">nservers<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">++<pos:position pos:line="19" pos:column="19"/></operator></expr>;
        <expr><name pos:line="20" pos:column="9">split<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <call><name pos:line="20" pos:column="17">apr_strtok<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">NULL<pos:position pos:line="20" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="20" pos:column="33">","<pos:position pos:line="20" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="38">&amp;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="39">tok<pos:position pos:line="20" pos:column="42"/></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>;
    }<pos:position pos:line="21" pos:column="6"/></block>

    <name pos:line="23" pos:column="5">rv<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <call><name pos:line="23" pos:column="10">apr_memcache_create<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">p<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="33">nservers<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="43">0<pos:position pos:line="23" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="46">&amp;<pos:position pos:line="23" pos:column="51"/></operator><name><name pos:line="23" pos:column="47">ctx<pos:position pos:line="23" pos:column="50"/></name><operator pos:line="23" pos:column="50">-&gt;<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="52">mc<pos:position pos:line="23" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr></argument>;
    if <argument><expr><operator pos:line="24" pos:column="8">(<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="9">rv<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">!=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">APR_SUCCESS<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">)<pos:position pos:line="24" pos:column="27"/></operator> <block pos:line="24" pos:column="28">{
        <expr><call><name pos:line="25" pos:column="9">ap_log_error<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">APLOG_MARK<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">APLOG_CRIT<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="46">rv<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">s<pos:position pos:line="25" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="26" pos:column="22">"socache: Failed to create Memcache Object of '%d' size."<pos:position pos:line="26" pos:column="79"/></literal></expr></argument>, 
                     <argument><expr><name pos:line="27" pos:column="22">nservers<pos:position pos:line="27" pos:column="30"/></name></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call></expr>;
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">rv<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block>

    <comment type="block" pos:line="31" pos:column="5">/* Now add each server to the memcache */</comment>
    <name pos:line="32" pos:column="5">cache_config<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <call><name pos:line="32" pos:column="20">apr_pstrdup<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">p<pos:position pos:line="32" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="35">ctx<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">-&gt;<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="40">servers<pos:position pos:line="32" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr></argument>;
    <argument><expr><name pos:line="33" pos:column="5">split<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <call><name pos:line="33" pos:column="13">apr_strtok<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">cache_config<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="38">","<pos:position pos:line="33" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="43">&amp;<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="44">tok<pos:position pos:line="33" pos:column="47"/></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr></argument>;
    while <argument><expr><operator pos:line="34" pos:column="11">(<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="12">split<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">)<pos:position pos:line="34" pos:column="18"/></operator> <block pos:line="34" pos:column="19">{
        <expr><name pos:line="35" pos:column="9">apr_memcache_server_t<pos:position pos:line="35" pos:column="30"/></name> <operator pos:line="35" pos:column="31">*<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="32">st<pos:position pos:line="35" pos:column="34"/></name></expr>;
        <expr><name pos:line="36" pos:column="9">char<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">*<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">host_str<pos:position pos:line="36" pos:column="23"/></name></expr>;
        <expr><name pos:line="37" pos:column="9">char<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">*<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">scope_id<pos:position pos:line="37" pos:column="23"/></name></expr>;
        <expr><name pos:line="38" pos:column="9">apr_port_t<pos:position pos:line="38" pos:column="19"/></name> <name pos:line="38" pos:column="20">port<pos:position pos:line="38" pos:column="24"/></name></expr>;

        <expr><name pos:line="40" pos:column="9">rv<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <call><name pos:line="40" pos:column="14">apr_parse_addr_port<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><operator pos:line="40" pos:column="34">&amp;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="35">host_str<pos:position pos:line="40" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="45">&amp;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="46">scope_id<pos:position pos:line="40" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="56">&amp;<pos:position pos:line="40" pos:column="61"/></operator><name pos:line="40" pos:column="57">port<pos:position pos:line="40" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="63">split<pos:position pos:line="40" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="70">p<pos:position pos:line="40" pos:column="71"/></name></expr></argument>)<pos:position pos:line="40" pos:column="72"/></argument_list></call></expr>;
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">rv<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">!=<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">APR_SUCCESS<pos:position pos:line="41" pos:column="30"/></name></expr>)<pos:position pos:line="41" pos:column="31"/></condition><then pos:line="41" pos:column="31"> <expr_stmt><expr><block pos:line="41" pos:column="32">{
            <expr><call><name pos:line="42" pos:column="13">ap_log_error<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">APLOG_MARK<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="38">APLOG_CRIT<pos:position pos:line="42" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="50">rv<pos:position pos:line="42" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="54">s<pos:position pos:line="42" pos:column="55"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="43" pos:column="26">"socache: Failed to Parse memcache Server: '%s'"<pos:position pos:line="43" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="76">split<pos:position pos:line="43" pos:column="81"/></name></expr></argument>)<pos:position pos:line="43" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="83"/></block></expr></expr_stmt></then></if>
            <return pos:line="44" pos:column="13">return <expr><name pos:line="44" pos:column="20">rv<pos:position pos:line="44" pos:column="22"/></name></expr>;<pos:position pos:line="44" pos:column="23"/></return>
        }<pos:position pos:line="45" pos:column="10"/></block></expr></argument>

        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">host_str<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">==<pos:position pos:line="47" pos:column="24"/></operator> <name pos:line="47" pos:column="25">NULL<pos:position pos:line="47" pos:column="29"/></name></expr>)<pos:position pos:line="47" pos:column="30"/></condition><then pos:line="47" pos:column="30"> <expr_stmt><expr><block pos:line="47" pos:column="31">{
            <expr><call><name pos:line="48" pos:column="13">ap_log_error<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">APLOG_MARK<pos:position pos:line="48" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="38">APLOG_CRIT<pos:position pos:line="48" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="50">rv<pos:position pos:line="48" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="54">s<pos:position pos:line="48" pos:column="55"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="49" pos:column="26">"socache: Failed to Parse Server, "<pos:position pos:line="49" pos:column="61"/></literal>
                         <literal type="string" pos:line="50" pos:column="26">"no hostname specified: '%s'"<pos:position pos:line="50" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="57">split<pos:position pos:line="50" pos:column="62"/></name></expr></argument>)<pos:position pos:line="50" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="64"/></block></expr></expr_stmt></then></if></argument_list></decl></decl_stmt>
            <return pos:line="51" pos:column="13">return <expr><name pos:line="51" pos:column="20">APR_EINVAL<pos:position pos:line="51" pos:column="30"/></name></expr>;<pos:position pos:line="51" pos:column="31"/></return>
        }

        if <expr_stmt><expr><operator pos:line="54" pos:column="12">(<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="13">port<pos:position pos:line="54" pos:column="17"/></name> <operator pos:line="54" pos:column="18">==<pos:position pos:line="54" pos:column="20"/></operator> <literal type="number" pos:line="54" pos:column="21">0<pos:position pos:line="54" pos:column="22"/></literal><operator pos:line="54" pos:column="22">)<pos:position pos:line="54" pos:column="23"/></operator> <block pos:line="54" pos:column="24">{
            <expr><name pos:line="55" pos:column="13">port<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <name pos:line="55" pos:column="20">MC_DEFAULT_SERVER_PORT<pos:position pos:line="55" pos:column="42"/></name></expr>;
        }<pos:position pos:line="56" pos:column="10"/></block>

        <name pos:line="58" pos:column="9">rv<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <call><name pos:line="58" pos:column="14">apr_memcache_server_create<pos:position pos:line="58" pos:column="40"/></name><argument_list pos:line="58" pos:column="40">(<argument><expr><name pos:line="58" pos:column="41">p<pos:position pos:line="58" pos:column="42"/></name></expr></argument>,
                                        <argument><expr><name pos:line="59" pos:column="41">host_str<pos:position pos:line="59" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="51">port<pos:position pos:line="59" pos:column="55"/></name></expr></argument>,
                                        <argument><expr><name pos:line="60" pos:column="41">MC_DEFAULT_SERVER_MIN<pos:position pos:line="60" pos:column="62"/></name></expr></argument>,
                                        <argument><expr><name pos:line="61" pos:column="41">MC_DEFAULT_SERVER_SMAX<pos:position pos:line="61" pos:column="63"/></name></expr></argument>,
                                        <argument><expr><name pos:line="62" pos:column="41">thread_limit<pos:position pos:line="62" pos:column="53"/></name></expr></argument>,
                                        <argument><expr><name pos:line="63" pos:column="41">MC_DEFAULT_SERVER_TTL<pos:position pos:line="63" pos:column="62"/></name></expr></argument>,
                                        <argument><expr><operator pos:line="64" pos:column="41">&amp;<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="42">st<pos:position pos:line="64" pos:column="44"/></name></expr></argument>)<pos:position pos:line="64" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="46"/></expr_stmt>
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">rv<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">!=<pos:position pos:line="65" pos:column="18"/></operator> <name pos:line="65" pos:column="19">APR_SUCCESS<pos:position pos:line="65" pos:column="30"/></name></expr>)<pos:position pos:line="65" pos:column="31"/></condition><then pos:line="65" pos:column="31"> <block pos:line="65" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">ap_log_error<pos:position pos:line="66" pos:column="25"/></name><argument_list pos:line="66" pos:column="25">(<argument><expr><name pos:line="66" pos:column="26">APLOG_MARK<pos:position pos:line="66" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="38">APLOG_CRIT<pos:position pos:line="66" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="50">rv<pos:position pos:line="66" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="54">s<pos:position pos:line="66" pos:column="55"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="67" pos:column="26">"socache: Failed to Create memcache Server: %s:%d"<pos:position pos:line="67" pos:column="76"/></literal></expr></argument>, 
                         <argument><expr><name pos:line="68" pos:column="26">host_str<pos:position pos:line="68" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="36">port<pos:position pos:line="68" pos:column="40"/></name></expr></argument>)<pos:position pos:line="68" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="42"/></expr_stmt>
            <return pos:line="69" pos:column="13">return <expr><name pos:line="69" pos:column="20">rv<pos:position pos:line="69" pos:column="22"/></name></expr>;<pos:position pos:line="69" pos:column="23"/></return>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="72" pos:column="9">rv<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">=<pos:position pos:line="72" pos:column="13"/></operator> <call><name pos:line="72" pos:column="14">apr_memcache_add_server<pos:position pos:line="72" pos:column="37"/></name><argument_list pos:line="72" pos:column="37">(<argument><expr><name><name pos:line="72" pos:column="38">ctx<pos:position pos:line="72" pos:column="41"/></name><operator pos:line="72" pos:column="41">-&gt;<pos:position pos:line="72" pos:column="46"/></operator><name pos:line="72" pos:column="43">mc<pos:position pos:line="72" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="47">st<pos:position pos:line="72" pos:column="49"/></name></expr></argument>)<pos:position pos:line="72" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="51"/></expr_stmt>
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">rv<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">!=<pos:position pos:line="73" pos:column="18"/></operator> <name pos:line="73" pos:column="19">APR_SUCCESS<pos:position pos:line="73" pos:column="30"/></name></expr>)<pos:position pos:line="73" pos:column="31"/></condition><then pos:line="73" pos:column="31"> <block pos:line="73" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">ap_log_error<pos:position pos:line="74" pos:column="25"/></name><argument_list pos:line="74" pos:column="25">(<argument><expr><name pos:line="74" pos:column="26">APLOG_MARK<pos:position pos:line="74" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="38">APLOG_CRIT<pos:position pos:line="74" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="50">rv<pos:position pos:line="74" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="54">s<pos:position pos:line="74" pos:column="55"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="75" pos:column="26">"socache: Failed to Add memcache Server: %s:%d"<pos:position pos:line="75" pos:column="73"/></literal></expr></argument>, 
                         <argument><expr><name pos:line="76" pos:column="26">host_str<pos:position pos:line="76" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="36">port<pos:position pos:line="76" pos:column="40"/></name></expr></argument>)<pos:position pos:line="76" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="42"/></expr_stmt>
            <return pos:line="77" pos:column="13">return <expr><name pos:line="77" pos:column="20">rv<pos:position pos:line="77" pos:column="22"/></name></expr>;<pos:position pos:line="77" pos:column="23"/></return>
        }<pos:position pos:line="78" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="80" pos:column="9">split<pos:position pos:line="80" pos:column="14"/></name> <operator pos:line="80" pos:column="15">=<pos:position pos:line="80" pos:column="16"/></operator> <call><name pos:line="80" pos:column="17">apr_strtok<pos:position pos:line="80" pos:column="27"/></name><argument_list pos:line="80" pos:column="27">(<argument><expr><name pos:line="80" pos:column="28">NULL<pos:position pos:line="80" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="80" pos:column="33">","<pos:position pos:line="80" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="80" pos:column="38">&amp;<pos:position pos:line="80" pos:column="43"/></operator><name pos:line="80" pos:column="39">tok<pos:position pos:line="80" pos:column="42"/></name></expr></argument>)<pos:position pos:line="80" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="44"/></expr_stmt>
    }

    ctx<expr_stmt><expr><operator pos:line="83" pos:column="8">-&gt;<pos:position pos:line="83" pos:column="13"/></operator><name pos:line="83" pos:column="10">tag<pos:position pos:line="83" pos:column="13"/></name> <operator pos:line="83" pos:column="14">=<pos:position pos:line="83" pos:column="15"/></operator> <macro><name pos:line="83" pos:column="16">apr_pstrcat<pos:position pos:line="83" pos:column="27"/></name><argument_list pos:line="83" pos:column="27">(<argument pos:line="83" pos:column="28">p<pos:position pos:line="83" pos:column="29"/></argument>, <argument pos:line="83" pos:column="31">namespace<pos:position pos:line="83" pos:column="40"/></argument>, <argument><literal type="string" pos:line="83" pos:column="42">":"<pos:position pos:line="83" pos:column="45"/></literal></argument>, <argument pos:line="83" pos:column="47">NULL<pos:position pos:line="83" pos:column="51"/></argument>)<pos:position pos:line="83" pos:column="52"/></argument_list></macro></expr>;<pos:position pos:line="83" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">ctx<pos:position pos:line="84" pos:column="8"/></name><operator pos:line="84" pos:column="8">-&gt;<pos:position pos:line="84" pos:column="13"/></operator><name pos:line="84" pos:column="10">taglen<pos:position pos:line="84" pos:column="16"/></name></name> <operator pos:line="84" pos:column="17">=<pos:position pos:line="84" pos:column="18"/></operator> <call><name pos:line="84" pos:column="19">strlen<pos:position pos:line="84" pos:column="25"/></name><argument_list pos:line="84" pos:column="25">(<argument><expr><name><name pos:line="84" pos:column="26">ctx<pos:position pos:line="84" pos:column="29"/></name><operator pos:line="84" pos:column="29">-&gt;<pos:position pos:line="84" pos:column="34"/></operator><name pos:line="84" pos:column="31">tag<pos:position pos:line="84" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="35"/></argument_list></call> <operator pos:line="84" pos:column="36">+<pos:position pos:line="84" pos:column="37"/></operator> <literal type="number" pos:line="84" pos:column="38">1<pos:position pos:line="84" pos:column="39"/></literal></expr>;<pos:position pos:line="84" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="86" pos:column="5">/* socache API constraint: */</comment>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="87" pos:column="20"/></name><argument_list pos:line="87" pos:column="20">(<argument><expr><name><name pos:line="87" pos:column="21">ctx<pos:position pos:line="87" pos:column="24"/></name><operator pos:line="87" pos:column="24">-&gt;<pos:position pos:line="87" pos:column="29"/></operator><name pos:line="87" pos:column="26">taglen<pos:position pos:line="87" pos:column="32"/></name></name> <operator pos:line="87" pos:column="33">&lt;=<pos:position pos:line="87" pos:column="38"/></operator> <literal type="number" pos:line="87" pos:column="36">16<pos:position pos:line="87" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="40"/></expr_stmt>

    <return pos:line="89" pos:column="5">return <expr><name pos:line="89" pos:column="12">APR_SUCCESS<pos:position pos:line="89" pos:column="23"/></name></expr>;<pos:position pos:line="89" pos:column="24"/></return>
}</unit>

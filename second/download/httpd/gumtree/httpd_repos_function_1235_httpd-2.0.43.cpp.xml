<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1235_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ftp_getrc_msg<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">conn_rec<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">ftp_ctrl<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">apr_bucket_brigade<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">bb<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">char<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">msgbuf<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="84">int<pos:position pos:line="1" pos:column="87"/></name></type> <name pos:line="1" pos:column="88">msglen<pos:position pos:line="1" pos:column="94"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="95"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">status<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">response<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><name pos:line="4" pos:column="19">MAX_LINE_LEN<pos:position pos:line="4" pos:column="31"/></name></expr>]<pos:position pos:line="4" pos:column="32"/></index></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">buff<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><literal type="number" pos:line="5" pos:column="15">5<pos:position pos:line="5" pos:column="16"/></literal></expr>]<pos:position pos:line="5" pos:column="17"/></index></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">mb<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><name pos:line="6" pos:column="16">msgbuf<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="25">me<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><operator pos:line="6" pos:column="30">&amp;<pos:position pos:line="6" pos:column="35"/></operator><name><name pos:line="6" pos:column="31">msgbuf<pos:position pos:line="6" pos:column="37"/></name><index pos:line="6" pos:column="37">[<expr><name pos:line="6" pos:column="38">msglen<pos:position pos:line="6" pos:column="44"/></name></expr>]<pos:position pos:line="6" pos:column="45"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rv<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">eos<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">APR_SUCCESS<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">!=<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">rv<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <call><name pos:line="10" pos:column="30">ap_proxy_string_read<pos:position pos:line="10" pos:column="50"/></name><argument_list pos:line="10" pos:column="50">(<argument><expr><name pos:line="10" pos:column="51">ftp_ctrl<pos:position pos:line="10" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="61">bb<pos:position pos:line="10" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="65">response<pos:position pos:line="10" pos:column="73"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="75">sizeof<argument_list pos:line="10" pos:column="81">(<argument><expr><name pos:line="10" pos:column="82">response<pos:position pos:line="10" pos:column="90"/></name></expr></argument>)<pos:position pos:line="10" pos:column="91"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="10" pos:column="93">&amp;<pos:position pos:line="10" pos:column="98"/></operator><name pos:line="10" pos:column="94">eos<pos:position pos:line="10" pos:column="97"/></name></expr></argument>)<pos:position pos:line="10" pos:column="98"/></argument_list></call><operator pos:line="10" pos:column="98">)<pos:position pos:line="10" pos:column="99"/></operator></expr>)<pos:position pos:line="10" pos:column="100"/></condition><then pos:line="10" pos:column="100"> <block pos:line="10" pos:column="101">{
        <return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">-<pos:position pos:line="11" pos:column="17"/></operator><literal type="number" pos:line="11" pos:column="17">1<pos:position pos:line="11" pos:column="18"/></literal></expr>;<pos:position pos:line="11" pos:column="19"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
<comment type="block" pos:line="13" pos:column="1">/*
    ap_log_error(APLOG_MARK, APLOG_DEBUG, 0, NULL,
                 "proxy: &lt;FTP: %s", response);
*/</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><call><name pos:line="17" pos:column="10">apr_isdigit<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name><name pos:line="17" pos:column="22">response<pos:position pos:line="17" pos:column="30"/></name><index pos:line="17" pos:column="30">[<expr><literal type="number" pos:line="17" pos:column="31">0<pos:position pos:line="17" pos:column="32"/></literal></expr>]<pos:position pos:line="17" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call> <operator pos:line="17" pos:column="35">||<pos:position pos:line="17" pos:column="37"/></operator> <operator pos:line="17" pos:column="38">!<pos:position pos:line="17" pos:column="39"/></operator><call><name pos:line="17" pos:column="39">apr_isdigit<pos:position pos:line="17" pos:column="50"/></name><argument_list pos:line="17" pos:column="50">(<argument><expr><name><name pos:line="17" pos:column="51">response<pos:position pos:line="17" pos:column="59"/></name><index pos:line="17" pos:column="59">[<expr><literal type="number" pos:line="17" pos:column="60">1<pos:position pos:line="17" pos:column="61"/></literal></expr>]<pos:position pos:line="17" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call> <operator pos:line="17" pos:column="64">||<pos:position pos:line="17" pos:column="66"/></operator>
    <operator pos:line="18" pos:column="5">!<pos:position pos:line="18" pos:column="6"/></operator><call><name pos:line="18" pos:column="6">apr_isdigit<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name><name pos:line="18" pos:column="18">response<pos:position pos:line="18" pos:column="26"/></name><index pos:line="18" pos:column="26">[<expr><literal type="number" pos:line="18" pos:column="27">2<pos:position pos:line="18" pos:column="28"/></literal></expr>]<pos:position pos:line="18" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call> <operator pos:line="18" pos:column="31">||<pos:position pos:line="18" pos:column="33"/></operator> <operator pos:line="18" pos:column="34">(<pos:position pos:line="18" pos:column="35"/></operator><name><name pos:line="18" pos:column="35">response<pos:position pos:line="18" pos:column="43"/></name><index pos:line="18" pos:column="43">[<expr><literal type="number" pos:line="18" pos:column="44">3<pos:position pos:line="18" pos:column="45"/></literal></expr>]<pos:position pos:line="18" pos:column="46"/></index></name> <operator pos:line="18" pos:column="47">!=<pos:position pos:line="18" pos:column="49"/></operator> <literal type="char" pos:line="18" pos:column="50">' '<pos:position pos:line="18" pos:column="53"/></literal> <operator pos:line="18" pos:column="54">&amp;&amp;<pos:position pos:line="18" pos:column="64"/></operator> <name><name pos:line="18" pos:column="57">response<pos:position pos:line="18" pos:column="65"/></name><index pos:line="18" pos:column="65">[<expr><literal type="number" pos:line="18" pos:column="66">3<pos:position pos:line="18" pos:column="67"/></literal></expr>]<pos:position pos:line="18" pos:column="68"/></index></name> <operator pos:line="18" pos:column="69">!=<pos:position pos:line="18" pos:column="71"/></operator> <literal type="char" pos:line="18" pos:column="72">'-'<pos:position pos:line="18" pos:column="75"/></literal><operator pos:line="18" pos:column="75">)<pos:position pos:line="18" pos:column="76"/></operator></expr>)<pos:position pos:line="18" pos:column="77"/></condition><then pos:line="18" pos:column="77">
        <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="9">status<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt></block></then>
    <else pos:line="20" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="9">status<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">100<pos:position pos:line="21" pos:column="21"/></literal> <operator pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></operator> <name><name pos:line="21" pos:column="24">response<pos:position pos:line="21" pos:column="32"/></name><index pos:line="21" pos:column="32">[<expr><literal type="number" pos:line="21" pos:column="33">0<pos:position pos:line="21" pos:column="34"/></literal></expr>]<pos:position pos:line="21" pos:column="35"/></index></name> <operator pos:line="21" pos:column="36">+<pos:position pos:line="21" pos:column="37"/></operator> <literal type="number" pos:line="21" pos:column="38">10<pos:position pos:line="21" pos:column="40"/></literal> <operator pos:line="21" pos:column="41">*<pos:position pos:line="21" pos:column="42"/></operator> <name><name pos:line="21" pos:column="43">response<pos:position pos:line="21" pos:column="51"/></name><index pos:line="21" pos:column="51">[<expr><literal type="number" pos:line="21" pos:column="52">1<pos:position pos:line="21" pos:column="53"/></literal></expr>]<pos:position pos:line="21" pos:column="54"/></index></name> <operator pos:line="21" pos:column="55">+<pos:position pos:line="21" pos:column="56"/></operator> <name><name pos:line="21" pos:column="57">response<pos:position pos:line="21" pos:column="65"/></name><index pos:line="21" pos:column="65">[<expr><literal type="number" pos:line="21" pos:column="66">2<pos:position pos:line="21" pos:column="67"/></literal></expr>]<pos:position pos:line="21" pos:column="68"/></index></name> <operator pos:line="21" pos:column="69">-<pos:position pos:line="21" pos:column="70"/></operator> <literal type="number" pos:line="21" pos:column="71">111<pos:position pos:line="21" pos:column="74"/></literal> <operator pos:line="21" pos:column="75">*<pos:position pos:line="21" pos:column="76"/></operator> <literal type="char" pos:line="21" pos:column="77">'0'<pos:position pos:line="21" pos:column="80"/></literal></expr>;<pos:position pos:line="21" pos:column="81"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">mb<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <call><name pos:line="23" pos:column="10">apr_cpystrn<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">mb<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="26">response<pos:position pos:line="23" pos:column="34"/></name> <operator pos:line="23" pos:column="35">+<pos:position pos:line="23" pos:column="36"/></operator> <literal type="number" pos:line="23" pos:column="37">4<pos:position pos:line="23" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">me<pos:position pos:line="23" pos:column="42"/></name> <operator pos:line="23" pos:column="43">-<pos:position pos:line="23" pos:column="44"/></operator> <name pos:line="23" pos:column="45">mb<pos:position pos:line="23" pos:column="47"/></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">response<pos:position pos:line="25" pos:column="17"/></name><index pos:line="25" pos:column="17">[<expr><literal type="number" pos:line="25" pos:column="18">3<pos:position pos:line="25" pos:column="19"/></literal></expr>]<pos:position pos:line="25" pos:column="20"/></index></name> <operator pos:line="25" pos:column="21">==<pos:position pos:line="25" pos:column="23"/></operator> <literal type="char" pos:line="25" pos:column="24">'-'<pos:position pos:line="25" pos:column="27"/></literal></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28"> <block pos:line="25" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">memcpy<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">buff<pos:position pos:line="26" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="22">response<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="32">3<pos:position pos:line="26" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">buff<pos:position pos:line="27" pos:column="13"/></name><index pos:line="27" pos:column="13">[<expr><literal type="number" pos:line="27" pos:column="14">3<pos:position pos:line="27" pos:column="15"/></literal></expr>]<pos:position pos:line="27" pos:column="16"/></index></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <literal type="char" pos:line="27" pos:column="19">' '<pos:position pos:line="27" pos:column="22"/></literal></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
        <do pos:line="28" pos:column="9">do <block pos:line="28" pos:column="12">{
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name pos:line="29" pos:column="17">APR_SUCCESS<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">!=<pos:position pos:line="29" pos:column="31"/></operator> <operator pos:line="29" pos:column="32">(<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">rv<pos:position pos:line="29" pos:column="35"/></name> <operator pos:line="29" pos:column="36">=<pos:position pos:line="29" pos:column="37"/></operator> <call><name pos:line="29" pos:column="38">ap_proxy_string_read<pos:position pos:line="29" pos:column="58"/></name><argument_list pos:line="29" pos:column="58">(<argument><expr><name pos:line="29" pos:column="59">ftp_ctrl<pos:position pos:line="29" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="69">bb<pos:position pos:line="29" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="73">response<pos:position pos:line="29" pos:column="81"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="83">sizeof<argument_list pos:line="29" pos:column="89">(<argument><expr><name pos:line="29" pos:column="90">response<pos:position pos:line="29" pos:column="98"/></name></expr></argument>)<pos:position pos:line="29" pos:column="99"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="29" pos:column="101">&amp;<pos:position pos:line="29" pos:column="106"/></operator><name pos:line="29" pos:column="102">eos<pos:position pos:line="29" pos:column="105"/></name></expr></argument>)<pos:position pos:line="29" pos:column="106"/></argument_list></call><operator pos:line="29" pos:column="106">)<pos:position pos:line="29" pos:column="107"/></operator></expr>)<pos:position pos:line="29" pos:column="108"/></condition><then pos:line="29" pos:column="108"> <block pos:line="29" pos:column="109">{
                <return pos:line="30" pos:column="17">return <expr><operator pos:line="30" pos:column="24">-<pos:position pos:line="30" pos:column="25"/></operator><literal type="number" pos:line="30" pos:column="25">1<pos:position pos:line="30" pos:column="26"/></literal></expr>;<pos:position pos:line="30" pos:column="27"/></return>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="32" pos:column="13">mb<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <call><name pos:line="32" pos:column="18">apr_cpystrn<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">mb<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">response<pos:position pos:line="32" pos:column="42"/></name> <operator pos:line="32" pos:column="43">+<pos:position pos:line="32" pos:column="44"/></operator> <operator pos:line="32" pos:column="45">(<pos:position pos:line="32" pos:column="46"/></operator><ternary><condition><expr><literal type="char" pos:line="32" pos:column="46">' '<pos:position pos:line="32" pos:column="49"/></literal> <operator pos:line="32" pos:column="50">==<pos:position pos:line="32" pos:column="52"/></operator> <name><name pos:line="32" pos:column="53">response<pos:position pos:line="32" pos:column="61"/></name><index pos:line="32" pos:column="61">[<expr><literal type="number" pos:line="32" pos:column="62">0<pos:position pos:line="32" pos:column="63"/></literal></expr>]<pos:position pos:line="32" pos:column="64"/></index></name></expr> ?<pos:position pos:line="32" pos:column="66"/></condition><then pos:line="32" pos:column="66"> <expr><literal type="number" pos:line="32" pos:column="67">1<pos:position pos:line="32" pos:column="68"/></literal></expr> <pos:position pos:line="32" pos:column="69"/></then><else pos:line="32" pos:column="69">: <expr><literal type="number" pos:line="32" pos:column="71">4<pos:position pos:line="32" pos:column="72"/></literal></expr></else></ternary><operator pos:line="32" pos:column="72">)<pos:position pos:line="32" pos:column="73"/></operator></expr></argument>, <argument><expr><name pos:line="32" pos:column="75">me<pos:position pos:line="32" pos:column="77"/></name> <operator pos:line="32" pos:column="78">-<pos:position pos:line="32" pos:column="79"/></operator> <name pos:line="32" pos:column="80">mb<pos:position pos:line="32" pos:column="82"/></name></expr></argument>)<pos:position pos:line="32" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="84"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block> while <condition pos:line="33" pos:column="17">(<expr><call><name pos:line="33" pos:column="18">memcmp<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">response<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="35">buff<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="41">4<pos:position pos:line="33" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call> <operator pos:line="33" pos:column="44">!=<pos:position pos:line="33" pos:column="46"/></operator> <literal type="number" pos:line="33" pos:column="47">0<pos:position pos:line="33" pos:column="48"/></literal></expr>)<pos:position pos:line="33" pos:column="49"/></condition>;<pos:position pos:line="33" pos:column="50"/></do>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">status<pos:position pos:line="36" pos:column="18"/></name></expr>;<pos:position pos:line="36" pos:column="19"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">hex2sec<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">x<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="12">ch<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">j<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><expr><name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr><operator pos:line="6" pos:column="15">,<pos:position pos:line="6" pos:column="16"/></operator> <expr><name pos:line="6" pos:column="17">j<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr>;<pos:position pos:line="6" pos:column="23"/></init> <condition><expr><name pos:line="6" pos:column="24">i<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">&lt;<pos:position pos:line="6" pos:column="30"/></operator> <literal type="number" pos:line="6" pos:column="28">8<pos:position pos:line="6" pos:column="29"/></literal></expr>;<pos:position pos:line="6" pos:column="30"/></condition> <incr><expr><name pos:line="6" pos:column="31">i<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">++<pos:position pos:line="6" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="35"/></control> <block pos:line="6" pos:column="36">{
        <expr_stmt><expr><name pos:line="7" pos:column="9">ch<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name><name pos:line="7" pos:column="14">x<pos:position pos:line="7" pos:column="15"/></name><index pos:line="7" pos:column="15">[<expr><name pos:line="7" pos:column="16">i<pos:position pos:line="7" pos:column="17"/></name></expr>]<pos:position pos:line="7" pos:column="18"/></index></name></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="8" pos:column="9">j<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">&lt;&lt;=<pos:position pos:line="8" pos:column="20"/></operator> <literal type="number" pos:line="8" pos:column="15">4<pos:position pos:line="8" pos:column="16"/></literal></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">isdigit<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">ch<pos:position pos:line="9" pos:column="23"/></name></expr></argument>)<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="13">j<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">|=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">ch<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">-<pos:position pos:line="10" pos:column="22"/></operator> <literal type="char" pos:line="10" pos:column="23">'0'<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt></block></then>
        <elseif pos:line="11" pos:column="9">else <if pos:line="11" pos:column="14">if <condition pos:line="11" pos:column="17">(<expr><call><name pos:line="11" pos:column="18">isupper<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">ch<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
            <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="13">j<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">|=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">ch<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">-<pos:position pos:line="12" pos:column="22"/></operator> <operator pos:line="12" pos:column="23">(<pos:position pos:line="12" pos:column="24"/></operator><literal type="char" pos:line="12" pos:column="24">'A'<pos:position pos:line="12" pos:column="27"/></literal> <operator pos:line="12" pos:column="28">-<pos:position pos:line="12" pos:column="29"/></operator> <literal type="number" pos:line="12" pos:column="30">10<pos:position pos:line="12" pos:column="32"/></literal><operator pos:line="12" pos:column="32">)<pos:position pos:line="12" pos:column="33"/></operator></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt></block></then></if></elseif>
        <else pos:line="13" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="13">j<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">|=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">ch<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">-<pos:position pos:line="14" pos:column="22"/></operator> <operator pos:line="14" pos:column="23">(<pos:position pos:line="14" pos:column="24"/></operator><literal type="char" pos:line="14" pos:column="24">'a'<pos:position pos:line="14" pos:column="27"/></literal> <operator pos:line="14" pos:column="28">-<pos:position pos:line="14" pos:column="29"/></operator> <literal type="number" pos:line="14" pos:column="30">10<pos:position pos:line="14" pos:column="32"/></literal><operator pos:line="14" pos:column="32">)<pos:position pos:line="14" pos:column="33"/></operator></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt></block></else></if>
    }<pos:position pos:line="15" pos:column="6"/></block></for>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">j<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">==<pos:position pos:line="16" pos:column="13"/></operator> <literal type="number" pos:line="16" pos:column="14">0xffffffff<pos:position pos:line="16" pos:column="24"/></literal></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25">
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><operator pos:line="17" pos:column="16">-<pos:position pos:line="17" pos:column="17"/></operator><literal type="number" pos:line="17" pos:column="17">1<pos:position pos:line="17" pos:column="18"/></literal></expr>;<pos:position pos:line="17" pos:column="19"/></return></block></then>  <comment type="block" pos:line="17" pos:column="21">/* so that it works with 8-byte ints */</comment>
    <else pos:line="18" pos:column="5">else
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">j<pos:position pos:line="19" pos:column="17"/></name></expr>;<pos:position pos:line="19" pos:column="18"/></return></block></else></if>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

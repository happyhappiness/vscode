<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_182_httpd-2.2.15.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_generic_load_lock_record<pos:position pos:line="1" pos:column="48"/></name><parameter_list pos:line="1" pos:column="48">(<parameter><decl><type><name pos:line="1" pos:column="49">dav_lockdb<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">lockdb<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                                                <parameter><decl><type><name pos:line="2" pos:column="49">apr_datum_t<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">key<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                                                <parameter><decl><type><name pos:line="3" pos:column="49">int<pos:position pos:line="3" pos:column="52"/></name></type> <name pos:line="3" pos:column="53">add_method<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>,
                                                <parameter><decl><type><name pos:line="4" pos:column="49">dav_lock_discovery<pos:position pos:line="4" pos:column="67"/></name> <modifier pos:line="4" pos:column="68">*<pos:position pos:line="4" pos:column="69"/></modifier><modifier pos:line="4" pos:column="69">*<pos:position pos:line="4" pos:column="70"/></modifier></type><name pos:line="4" pos:column="70">direct<pos:position pos:line="4" pos:column="76"/></name></decl></parameter>,
                                                <parameter><decl><type><name pos:line="5" pos:column="49">dav_lock_indirect<pos:position pos:line="5" pos:column="66"/></name> <modifier pos:line="5" pos:column="67">*<pos:position pos:line="5" pos:column="68"/></modifier><modifier pos:line="5" pos:column="68">*<pos:position pos:line="5" pos:column="69"/></modifier></type><name pos:line="5" pos:column="69">indirect<pos:position pos:line="5" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="78"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_pool_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">p<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name><name pos:line="7" pos:column="21">lockdb<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">info<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">-&gt;<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="35">pool<pos:position pos:line="7" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">dav_error<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">err<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">status<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">offset<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><literal type="number" pos:line="10" pos:column="25">0<pos:position pos:line="10" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">need_save<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><name pos:line="11" pos:column="21">DAV_FALSE<pos:position pos:line="11" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_datum_t<pos:position pos:line="12" pos:column="16"/></name></type> <name pos:line="12" pos:column="17">val<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><block pos:line="12" pos:column="23">{ <expr><literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr> }<pos:position pos:line="12" pos:column="28"/></block></expr></init></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">dav_lock_discovery<pos:position pos:line="13" pos:column="23"/></name> <modifier pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></modifier></type><name pos:line="13" pos:column="25">dp<pos:position pos:line="13" pos:column="27"/></name></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">dav_lock_indirect<pos:position pos:line="14" pos:column="22"/></name> <modifier pos:line="14" pos:column="23">*<pos:position pos:line="14" pos:column="24"/></modifier></type><name pos:line="14" pos:column="24">ip<pos:position pos:line="14" pos:column="26"/></name></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">add_method<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">!=<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">DAV_APPEND_LIST<pos:position pos:line="16" pos:column="38"/></name></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39"> <block pos:line="16" pos:column="40">{
        <expr_stmt><expr><operator pos:line="17" pos:column="9">*<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">direct<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">NULL<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">indirect<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">NULL<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">err<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">dav_generic_really_open_lockdb<pos:position pos:line="21" pos:column="46"/></name><argument_list pos:line="21" pos:column="46">(<argument><expr><name pos:line="21" pos:column="47">lockdb<pos:position pos:line="21" pos:column="53"/></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call><operator pos:line="21" pos:column="54">)<pos:position pos:line="21" pos:column="55"/></operator> <operator pos:line="21" pos:column="56">!=<pos:position pos:line="21" pos:column="58"/></operator> <name pos:line="21" pos:column="59">NULL<pos:position pos:line="21" pos:column="63"/></name></expr>)<pos:position pos:line="21" pos:column="64"/></condition><then pos:line="21" pos:column="64"> <block pos:line="21" pos:column="65">{
        <comment type="block" pos:line="22" pos:column="9">/* ### add a higher-level error? */</comment>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">err<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/*
     * If we opened readonly and the db wasn't there, then there are no
     * locks for this resource. Just exit.
     */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name><name pos:line="30" pos:column="9">lockdb<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">info<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">-&gt;<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="23">db<pos:position pos:line="30" pos:column="25"/></name></name> <operator pos:line="30" pos:column="26">==<pos:position pos:line="30" pos:column="28"/></operator> <name pos:line="30" pos:column="29">NULL<pos:position pos:line="30" pos:column="33"/></name></expr>)<pos:position pos:line="30" pos:column="34"/></condition><then pos:line="30" pos:column="34"> <block pos:line="30" pos:column="35">{
        <return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">NULL<pos:position pos:line="31" pos:column="20"/></name></expr>;<pos:position pos:line="31" pos:column="21"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">status<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <call><name pos:line="34" pos:column="19">apr_dbm_fetch<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name><name pos:line="34" pos:column="33">lockdb<pos:position pos:line="34" pos:column="39"/></name><operator pos:line="34" pos:column="39">-&gt;<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="41">info<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">-&gt;<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="47">db<pos:position pos:line="34" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="51">key<pos:position pos:line="34" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="56">&amp;<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="57">val<pos:position pos:line="34" pos:column="60"/></name></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call><operator pos:line="34" pos:column="61">)<pos:position pos:line="34" pos:column="62"/></operator> <operator pos:line="34" pos:column="63">!=<pos:position pos:line="34" pos:column="65"/></operator> <name pos:line="34" pos:column="66">APR_SUCCESS<pos:position pos:line="34" pos:column="77"/></name></expr>)<pos:position pos:line="34" pos:column="78"/></condition><then pos:line="34" pos:column="78"> <block pos:line="34" pos:column="79">{
        <return pos:line="35" pos:column="9">return <expr><call><name pos:line="35" pos:column="16">dav_generic_dbm_new_error<pos:position pos:line="35" pos:column="41"/></name><argument_list pos:line="35" pos:column="41">(<argument><expr><name><name pos:line="35" pos:column="42">lockdb<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">-&gt;<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="50">info<pos:position pos:line="35" pos:column="54"/></name><operator pos:line="35" pos:column="54">-&gt;<pos:position pos:line="35" pos:column="59"/></operator><name pos:line="35" pos:column="56">db<pos:position pos:line="35" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="60">p<pos:position pos:line="35" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="63">status<pos:position pos:line="35" pos:column="69"/></name></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">!<pos:position pos:line="38" pos:column="10"/></operator><name><name pos:line="38" pos:column="10">val<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">.<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">dsize<pos:position pos:line="38" pos:column="19"/></name></name></expr>)<pos:position pos:line="38" pos:column="20"/></condition><then pos:line="38" pos:column="20"> <block pos:line="38" pos:column="21">{
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">NULL<pos:position pos:line="39" pos:column="20"/></name></expr>;<pos:position pos:line="39" pos:column="21"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <while pos:line="42" pos:column="5">while <condition pos:line="42" pos:column="11">(<expr><name pos:line="42" pos:column="12">offset<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">&lt;<pos:position pos:line="42" pos:column="23"/></operator> <name><name pos:line="42" pos:column="21">val<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">.<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="25">dsize<pos:position pos:line="42" pos:column="30"/></name></name></expr>)<pos:position pos:line="42" pos:column="31"/></condition> <block pos:line="42" pos:column="32">{
        <switch pos:line="43" pos:column="9">switch <condition pos:line="43" pos:column="16">(<expr><operator pos:line="43" pos:column="17">*<pos:position pos:line="43" pos:column="18"/></operator><operator pos:line="43" pos:column="18">(<pos:position pos:line="43" pos:column="19"/></operator><name><name pos:line="43" pos:column="19">val<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">.<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">dptr<pos:position pos:line="43" pos:column="27"/></name></name> <operator pos:line="43" pos:column="28">+<pos:position pos:line="43" pos:column="29"/></operator> <name pos:line="43" pos:column="30">offset<pos:position pos:line="43" pos:column="36"/></name><operator pos:line="43" pos:column="36">++<pos:position pos:line="43" pos:column="38"/></operator><operator pos:line="43" pos:column="38">)<pos:position pos:line="43" pos:column="39"/></operator></expr>)<pos:position pos:line="43" pos:column="40"/></condition> <block pos:line="43" pos:column="41">{
        <case pos:line="44" pos:column="9">case <expr><name pos:line="44" pos:column="14">DAV_LOCK_DIRECT<pos:position pos:line="44" pos:column="29"/></name></expr>:<pos:position pos:line="44" pos:column="30"/></case>
            <comment type="block" pos:line="45" pos:column="13">/* Create and fill a dav_lock_discovery structure */</comment>

            <expr_stmt><expr><name pos:line="47" pos:column="13">dp<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">=<pos:position pos:line="47" pos:column="17"/></operator> <call><name pos:line="47" pos:column="18">apr_pcalloc<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">p<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="33">sizeof<argument_list pos:line="47" pos:column="39">(<argument><expr><operator pos:line="47" pos:column="40">*<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="41">dp<pos:position pos:line="47" pos:column="43"/></name></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="46"/></expr_stmt>

            <comment type="block" pos:line="49" pos:column="13">/* Copy the dav_lock_discovery_fixed portion */</comment>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">memcpy<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><name pos:line="50" pos:column="20">dp<pos:position pos:line="50" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="24">val<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">.<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="28">dptr<pos:position pos:line="50" pos:column="32"/></name></name> <operator pos:line="50" pos:column="33">+<pos:position pos:line="50" pos:column="34"/></operator> <name pos:line="50" pos:column="35">offset<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="43">sizeof<argument_list pos:line="50" pos:column="49">(<argument><expr><name><name pos:line="50" pos:column="50">dp<pos:position pos:line="50" pos:column="52"/></name><operator pos:line="50" pos:column="52">-&gt;<pos:position pos:line="50" pos:column="57"/></operator><name pos:line="50" pos:column="54">f<pos:position pos:line="50" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name pos:line="51" pos:column="13">offset<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">+=<pos:position pos:line="51" pos:column="22"/></operator> <sizeof pos:line="51" pos:column="23">sizeof<argument_list pos:line="51" pos:column="29">(<argument><expr><name><name pos:line="51" pos:column="30">dp<pos:position pos:line="51" pos:column="32"/></name><operator pos:line="51" pos:column="32">-&gt;<pos:position pos:line="51" pos:column="37"/></operator><name pos:line="51" pos:column="34">f<pos:position pos:line="51" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></sizeof></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>

            <comment type="block" pos:line="53" pos:column="13">/* Copy the lock token. */</comment>
            <expr_stmt><expr><name><name pos:line="54" pos:column="13">dp<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">-&gt;<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="17">locktoken<pos:position pos:line="54" pos:column="26"/></name></name> <operator pos:line="54" pos:column="27">=<pos:position pos:line="54" pos:column="28"/></operator> <call><name pos:line="54" pos:column="29">apr_pmemdup<pos:position pos:line="54" pos:column="40"/></name><argument_list pos:line="54" pos:column="40">(<argument><expr><name pos:line="54" pos:column="41">p<pos:position pos:line="54" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="44">val<pos:position pos:line="54" pos:column="47"/></name><operator pos:line="54" pos:column="47">.<pos:position pos:line="54" pos:column="48"/></operator><name pos:line="54" pos:column="48">dptr<pos:position pos:line="54" pos:column="52"/></name></name> <operator pos:line="54" pos:column="53">+<pos:position pos:line="54" pos:column="54"/></operator> <name pos:line="54" pos:column="55">offset<pos:position pos:line="54" pos:column="61"/></name></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="63">sizeof<argument_list pos:line="54" pos:column="69">(<argument><expr><operator pos:line="54" pos:column="70">*<pos:position pos:line="54" pos:column="71"/></operator><name><name pos:line="54" pos:column="71">dp<pos:position pos:line="54" pos:column="73"/></name><operator pos:line="54" pos:column="73">-&gt;<pos:position pos:line="54" pos:column="78"/></operator><name pos:line="54" pos:column="75">locktoken<pos:position pos:line="54" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="85"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="54" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="87"/></expr_stmt>
            <expr_stmt><expr><name pos:line="55" pos:column="13">offset<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">+=<pos:position pos:line="55" pos:column="22"/></operator> <sizeof pos:line="55" pos:column="23">sizeof<argument_list pos:line="55" pos:column="29">(<argument><expr><operator pos:line="55" pos:column="30">*<pos:position pos:line="55" pos:column="31"/></operator><name><name pos:line="55" pos:column="31">dp<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">-&gt;<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="35">locktoken<pos:position pos:line="55" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="45"/></argument_list></sizeof></expr>;<pos:position pos:line="55" pos:column="46"/></expr_stmt>

            <comment type="block" pos:line="57" pos:column="13">/* Do we have an owner field? */</comment>
            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><operator pos:line="58" pos:column="17">*<pos:position pos:line="58" pos:column="18"/></operator><operator pos:line="58" pos:column="18">(<pos:position pos:line="58" pos:column="19"/></operator><name><name pos:line="58" pos:column="19">val<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">.<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="23">dptr<pos:position pos:line="58" pos:column="27"/></name></name> <operator pos:line="58" pos:column="28">+<pos:position pos:line="58" pos:column="29"/></operator> <name pos:line="58" pos:column="30">offset<pos:position pos:line="58" pos:column="36"/></name><operator pos:line="58" pos:column="36">)<pos:position pos:line="58" pos:column="37"/></operator> <operator pos:line="58" pos:column="38">==<pos:position pos:line="58" pos:column="40"/></operator> <literal type="char" pos:line="58" pos:column="41">'\0'<pos:position pos:line="58" pos:column="45"/></literal></expr>)<pos:position pos:line="58" pos:column="46"/></condition><then pos:line="58" pos:column="46"> <block pos:line="58" pos:column="47">{
                <expr_stmt><expr><operator pos:line="59" pos:column="17">++<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="19">offset<pos:position pos:line="59" pos:column="25"/></name></expr>;<pos:position pos:line="59" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="60" pos:column="14"/></block></then>
            <else pos:line="61" pos:column="13">else <block pos:line="61" pos:column="18">{
                <decl_stmt><decl><type><name pos:line="62" pos:column="17">apr_size_t<pos:position pos:line="62" pos:column="27"/></name></type> <name pos:line="62" pos:column="28">len<pos:position pos:line="62" pos:column="31"/></name> <init pos:line="62" pos:column="32">= <expr><call><name pos:line="62" pos:column="34">strlen<pos:position pos:line="62" pos:column="40"/></name><argument_list pos:line="62" pos:column="40">(<argument><expr><name><name pos:line="62" pos:column="41">val<pos:position pos:line="62" pos:column="44"/></name><operator pos:line="62" pos:column="44">.<pos:position pos:line="62" pos:column="45"/></operator><name pos:line="62" pos:column="45">dptr<pos:position pos:line="62" pos:column="49"/></name></name> <operator pos:line="62" pos:column="50">+<pos:position pos:line="62" pos:column="51"/></operator> <name pos:line="62" pos:column="52">offset<pos:position pos:line="62" pos:column="58"/></name></expr></argument>)<pos:position pos:line="62" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="62" pos:column="60"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="63" pos:column="17">dp<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">-&gt;<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="21">owner<pos:position pos:line="63" pos:column="26"/></name></name> <operator pos:line="63" pos:column="27">=<pos:position pos:line="63" pos:column="28"/></operator> <call><name pos:line="63" pos:column="29">apr_pstrmemdup<pos:position pos:line="63" pos:column="43"/></name><argument_list pos:line="63" pos:column="43">(<argument><expr><name pos:line="63" pos:column="44">p<pos:position pos:line="63" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="47">val<pos:position pos:line="63" pos:column="50"/></name><operator pos:line="63" pos:column="50">.<pos:position pos:line="63" pos:column="51"/></operator><name pos:line="63" pos:column="51">dptr<pos:position pos:line="63" pos:column="55"/></name></name> <operator pos:line="63" pos:column="56">+<pos:position pos:line="63" pos:column="57"/></operator> <name pos:line="63" pos:column="58">offset<pos:position pos:line="63" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="66">len<pos:position pos:line="63" pos:column="69"/></name></expr></argument>)<pos:position pos:line="63" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="71"/></expr_stmt>
                <expr_stmt><expr><name pos:line="64" pos:column="17">offset<pos:position pos:line="64" pos:column="23"/></name> <operator pos:line="64" pos:column="24">+=<pos:position pos:line="64" pos:column="26"/></operator> <name pos:line="64" pos:column="27">len<pos:position pos:line="64" pos:column="30"/></name> <operator pos:line="64" pos:column="31">+<pos:position pos:line="64" pos:column="32"/></operator> <literal type="number" pos:line="64" pos:column="33">1<pos:position pos:line="64" pos:column="34"/></literal></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="65" pos:column="14"/></block></else></if>

            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><operator pos:line="67" pos:column="17">*<pos:position pos:line="67" pos:column="18"/></operator><operator pos:line="67" pos:column="18">(<pos:position pos:line="67" pos:column="19"/></operator><name><name pos:line="67" pos:column="19">val<pos:position pos:line="67" pos:column="22"/></name><operator pos:line="67" pos:column="22">.<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="23">dptr<pos:position pos:line="67" pos:column="27"/></name></name> <operator pos:line="67" pos:column="28">+<pos:position pos:line="67" pos:column="29"/></operator> <name pos:line="67" pos:column="30">offset<pos:position pos:line="67" pos:column="36"/></name><operator pos:line="67" pos:column="36">)<pos:position pos:line="67" pos:column="37"/></operator> <operator pos:line="67" pos:column="38">==<pos:position pos:line="67" pos:column="40"/></operator> <literal type="char" pos:line="67" pos:column="41">'\0'<pos:position pos:line="67" pos:column="45"/></literal></expr>)<pos:position pos:line="67" pos:column="46"/></condition><then pos:line="67" pos:column="46"> <block pos:line="67" pos:column="47">{
                <expr_stmt><expr><operator pos:line="68" pos:column="17">++<pos:position pos:line="68" pos:column="19"/></operator><name pos:line="68" pos:column="19">offset<pos:position pos:line="68" pos:column="25"/></name></expr>;<pos:position pos:line="68" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="69" pos:column="14"/></block></then>
            <else pos:line="70" pos:column="13">else <block pos:line="70" pos:column="18">{
                <decl_stmt><decl><type><name pos:line="71" pos:column="17">apr_size_t<pos:position pos:line="71" pos:column="27"/></name></type> <name pos:line="71" pos:column="28">len<pos:position pos:line="71" pos:column="31"/></name> <init pos:line="71" pos:column="32">= <expr><call><name pos:line="71" pos:column="34">strlen<pos:position pos:line="71" pos:column="40"/></name><argument_list pos:line="71" pos:column="40">(<argument><expr><name><name pos:line="71" pos:column="41">val<pos:position pos:line="71" pos:column="44"/></name><operator pos:line="71" pos:column="44">.<pos:position pos:line="71" pos:column="45"/></operator><name pos:line="71" pos:column="45">dptr<pos:position pos:line="71" pos:column="49"/></name></name> <operator pos:line="71" pos:column="50">+<pos:position pos:line="71" pos:column="51"/></operator> <name pos:line="71" pos:column="52">offset<pos:position pos:line="71" pos:column="58"/></name></expr></argument>)<pos:position pos:line="71" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="71" pos:column="60"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="72" pos:column="17">dp<pos:position pos:line="72" pos:column="19"/></name><operator pos:line="72" pos:column="19">-&gt;<pos:position pos:line="72" pos:column="24"/></operator><name pos:line="72" pos:column="21">auth_user<pos:position pos:line="72" pos:column="30"/></name></name> <operator pos:line="72" pos:column="31">=<pos:position pos:line="72" pos:column="32"/></operator> <call><name pos:line="72" pos:column="33">apr_pstrmemdup<pos:position pos:line="72" pos:column="47"/></name><argument_list pos:line="72" pos:column="47">(<argument><expr><name pos:line="72" pos:column="48">p<pos:position pos:line="72" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="51">val<pos:position pos:line="72" pos:column="54"/></name><operator pos:line="72" pos:column="54">.<pos:position pos:line="72" pos:column="55"/></operator><name pos:line="72" pos:column="55">dptr<pos:position pos:line="72" pos:column="59"/></name></name> <operator pos:line="72" pos:column="60">+<pos:position pos:line="72" pos:column="61"/></operator> <name pos:line="72" pos:column="62">offset<pos:position pos:line="72" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="70">len<pos:position pos:line="72" pos:column="73"/></name></expr></argument>)<pos:position pos:line="72" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><name pos:line="73" pos:column="17">offset<pos:position pos:line="73" pos:column="23"/></name> <operator pos:line="73" pos:column="24">+=<pos:position pos:line="73" pos:column="26"/></operator> <name pos:line="73" pos:column="27">len<pos:position pos:line="73" pos:column="30"/></name> <operator pos:line="73" pos:column="31">+<pos:position pos:line="73" pos:column="32"/></operator> <literal type="number" pos:line="73" pos:column="33">1<pos:position pos:line="73" pos:column="34"/></literal></expr>;<pos:position pos:line="73" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="74" pos:column="14"/></block></else></if>

            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><operator pos:line="76" pos:column="17">!<pos:position pos:line="76" pos:column="18"/></operator><call><name pos:line="76" pos:column="18">dav_generic_lock_expired<pos:position pos:line="76" pos:column="42"/></name><argument_list pos:line="76" pos:column="42">(<argument><expr><name><name pos:line="76" pos:column="43">dp<pos:position pos:line="76" pos:column="45"/></name><operator pos:line="76" pos:column="45">-&gt;<pos:position pos:line="76" pos:column="50"/></operator><name pos:line="76" pos:column="47">f<pos:position pos:line="76" pos:column="48"/></name><operator pos:line="76" pos:column="48">.<pos:position pos:line="76" pos:column="49"/></operator><name pos:line="76" pos:column="49">timeout<pos:position pos:line="76" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="58"/></condition><then pos:line="76" pos:column="58"> <block pos:line="76" pos:column="59">{
                <expr_stmt><expr><name><name pos:line="77" pos:column="17">dp<pos:position pos:line="77" pos:column="19"/></name><operator pos:line="77" pos:column="19">-&gt;<pos:position pos:line="77" pos:column="24"/></operator><name pos:line="77" pos:column="21">next<pos:position pos:line="77" pos:column="25"/></name></name> <operator pos:line="77" pos:column="26">=<pos:position pos:line="77" pos:column="27"/></operator> <operator pos:line="77" pos:column="28">*<pos:position pos:line="77" pos:column="29"/></operator><name pos:line="77" pos:column="29">direct<pos:position pos:line="77" pos:column="35"/></name></expr>;<pos:position pos:line="77" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="78" pos:column="17">*<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="18">direct<pos:position pos:line="78" pos:column="24"/></name> <operator pos:line="78" pos:column="25">=<pos:position pos:line="78" pos:column="26"/></operator> <name pos:line="78" pos:column="27">dp<pos:position pos:line="78" pos:column="29"/></name></expr>;<pos:position pos:line="78" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="79" pos:column="14"/></block></then>
            <else pos:line="80" pos:column="13">else <block pos:line="80" pos:column="18">{
                <expr_stmt><expr><name pos:line="81" pos:column="17">need_save<pos:position pos:line="81" pos:column="26"/></name> <operator pos:line="81" pos:column="27">=<pos:position pos:line="81" pos:column="28"/></operator> <name pos:line="81" pos:column="29">DAV_TRUE<pos:position pos:line="81" pos:column="37"/></name></expr>;<pos:position pos:line="81" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="82" pos:column="14"/></block></else></if>
            <break pos:line="83" pos:column="13">break;<pos:position pos:line="83" pos:column="19"/></break>

        <case pos:line="85" pos:column="9">case <expr><name pos:line="85" pos:column="14">DAV_LOCK_INDIRECT<pos:position pos:line="85" pos:column="31"/></name></expr>:<pos:position pos:line="85" pos:column="32"/></case>
            <comment type="block" pos:line="86" pos:column="13">/* Create and fill a dav_lock_indirect structure */</comment>

            <expr_stmt><expr><name pos:line="88" pos:column="13">ip<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">=<pos:position pos:line="88" pos:column="17"/></operator> <call><name pos:line="88" pos:column="18">apr_pcalloc<pos:position pos:line="88" pos:column="29"/></name><argument_list pos:line="88" pos:column="29">(<argument><expr><name pos:line="88" pos:column="30">p<pos:position pos:line="88" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="88" pos:column="33">sizeof<argument_list pos:line="88" pos:column="39">(<argument><expr><operator pos:line="88" pos:column="40">*<pos:position pos:line="88" pos:column="41"/></operator><name pos:line="88" pos:column="41">ip<pos:position pos:line="88" pos:column="43"/></name></expr></argument>)<pos:position pos:line="88" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="88" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="89" pos:column="13">ip<pos:position pos:line="89" pos:column="15"/></name><operator pos:line="89" pos:column="15">-&gt;<pos:position pos:line="89" pos:column="20"/></operator><name pos:line="89" pos:column="17">locktoken<pos:position pos:line="89" pos:column="26"/></name></name> <operator pos:line="89" pos:column="27">=<pos:position pos:line="89" pos:column="28"/></operator> <call><name pos:line="89" pos:column="29">apr_pmemdup<pos:position pos:line="89" pos:column="40"/></name><argument_list pos:line="89" pos:column="40">(<argument><expr><name pos:line="89" pos:column="41">p<pos:position pos:line="89" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="44">val<pos:position pos:line="89" pos:column="47"/></name><operator pos:line="89" pos:column="47">.<pos:position pos:line="89" pos:column="48"/></operator><name pos:line="89" pos:column="48">dptr<pos:position pos:line="89" pos:column="52"/></name></name> <operator pos:line="89" pos:column="53">+<pos:position pos:line="89" pos:column="54"/></operator> <name pos:line="89" pos:column="55">offset<pos:position pos:line="89" pos:column="61"/></name></expr></argument>, <argument><expr><sizeof pos:line="89" pos:column="63">sizeof<argument_list pos:line="89" pos:column="69">(<argument><expr><operator pos:line="89" pos:column="70">*<pos:position pos:line="89" pos:column="71"/></operator><name><name pos:line="89" pos:column="71">ip<pos:position pos:line="89" pos:column="73"/></name><operator pos:line="89" pos:column="73">-&gt;<pos:position pos:line="89" pos:column="78"/></operator><name pos:line="89" pos:column="75">locktoken<pos:position pos:line="89" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="85"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="89" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="87"/></expr_stmt>
            <expr_stmt><expr><name pos:line="90" pos:column="13">offset<pos:position pos:line="90" pos:column="19"/></name> <operator pos:line="90" pos:column="20">+=<pos:position pos:line="90" pos:column="22"/></operator> <sizeof pos:line="90" pos:column="23">sizeof<argument_list pos:line="90" pos:column="29">(<argument><expr><operator pos:line="90" pos:column="30">*<pos:position pos:line="90" pos:column="31"/></operator><name><name pos:line="90" pos:column="31">ip<pos:position pos:line="90" pos:column="33"/></name><operator pos:line="90" pos:column="33">-&gt;<pos:position pos:line="90" pos:column="38"/></operator><name pos:line="90" pos:column="35">locktoken<pos:position pos:line="90" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="45"/></argument_list></sizeof></expr>;<pos:position pos:line="90" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="91" pos:column="13">memcpy<pos:position pos:line="91" pos:column="19"/></name><argument_list pos:line="91" pos:column="19">(<argument><expr><operator pos:line="91" pos:column="20">&amp;<pos:position pos:line="91" pos:column="25"/></operator><name><name pos:line="91" pos:column="21">ip<pos:position pos:line="91" pos:column="23"/></name><operator pos:line="91" pos:column="23">-&gt;<pos:position pos:line="91" pos:column="28"/></operator><name pos:line="91" pos:column="25">timeout<pos:position pos:line="91" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="34">val<pos:position pos:line="91" pos:column="37"/></name><operator pos:line="91" pos:column="37">.<pos:position pos:line="91" pos:column="38"/></operator><name pos:line="91" pos:column="38">dptr<pos:position pos:line="91" pos:column="42"/></name></name> <operator pos:line="91" pos:column="43">+<pos:position pos:line="91" pos:column="44"/></operator> <name pos:line="91" pos:column="45">offset<pos:position pos:line="91" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="91" pos:column="53">sizeof<argument_list pos:line="91" pos:column="59">(<argument><expr><name><name pos:line="91" pos:column="60">ip<pos:position pos:line="91" pos:column="62"/></name><operator pos:line="91" pos:column="62">-&gt;<pos:position pos:line="91" pos:column="67"/></operator><name pos:line="91" pos:column="64">timeout<pos:position pos:line="91" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="91" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><name pos:line="92" pos:column="13">offset<pos:position pos:line="92" pos:column="19"/></name> <operator pos:line="92" pos:column="20">+=<pos:position pos:line="92" pos:column="22"/></operator> <sizeof pos:line="92" pos:column="23">sizeof<argument_list pos:line="92" pos:column="29">(<argument><expr><name><name pos:line="92" pos:column="30">ip<pos:position pos:line="92" pos:column="32"/></name><operator pos:line="92" pos:column="32">-&gt;<pos:position pos:line="92" pos:column="37"/></operator><name pos:line="92" pos:column="34">timeout<pos:position pos:line="92" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="42"/></argument_list></sizeof></expr>;<pos:position pos:line="92" pos:column="43"/></expr_stmt>
            <comment type="block" pos:line="93" pos:column="13">/* length of datum */</comment>
            <expr_stmt><expr><name><name pos:line="94" pos:column="13">ip<pos:position pos:line="94" pos:column="15"/></name><operator pos:line="94" pos:column="15">-&gt;<pos:position pos:line="94" pos:column="20"/></operator><name pos:line="94" pos:column="17">key<pos:position pos:line="94" pos:column="20"/></name><operator pos:line="94" pos:column="20">.<pos:position pos:line="94" pos:column="21"/></operator><name pos:line="94" pos:column="21">dsize<pos:position pos:line="94" pos:column="26"/></name></name> <operator pos:line="94" pos:column="27">=<pos:position pos:line="94" pos:column="28"/></operator> <operator pos:line="94" pos:column="29">*<pos:position pos:line="94" pos:column="30"/></operator><operator pos:line="94" pos:column="30">(<pos:position pos:line="94" pos:column="31"/></operator><operator pos:line="94" pos:column="31">(<pos:position pos:line="94" pos:column="32"/></operator><name pos:line="94" pos:column="32">int<pos:position pos:line="94" pos:column="35"/></name> <operator pos:line="94" pos:column="36">*<pos:position pos:line="94" pos:column="37"/></operator><operator pos:line="94" pos:column="37">)<pos:position pos:line="94" pos:column="38"/></operator> <operator pos:line="94" pos:column="39">(<pos:position pos:line="94" pos:column="40"/></operator><name><name pos:line="94" pos:column="40">val<pos:position pos:line="94" pos:column="43"/></name><operator pos:line="94" pos:column="43">.<pos:position pos:line="94" pos:column="44"/></operator><name pos:line="94" pos:column="44">dptr<pos:position pos:line="94" pos:column="48"/></name></name> <operator pos:line="94" pos:column="49">+<pos:position pos:line="94" pos:column="50"/></operator> <name pos:line="94" pos:column="51">offset<pos:position pos:line="94" pos:column="57"/></name><operator pos:line="94" pos:column="57">)<pos:position pos:line="94" pos:column="58"/></operator><operator pos:line="94" pos:column="58">)<pos:position pos:line="94" pos:column="59"/></operator></expr>;<pos:position pos:line="94" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><name pos:line="95" pos:column="13">offset<pos:position pos:line="95" pos:column="19"/></name> <operator pos:line="95" pos:column="20">+=<pos:position pos:line="95" pos:column="22"/></operator> <sizeof pos:line="95" pos:column="23">sizeof<argument_list pos:line="95" pos:column="29">(<argument><expr><name><name pos:line="95" pos:column="30">ip<pos:position pos:line="95" pos:column="32"/></name><operator pos:line="95" pos:column="32">-&gt;<pos:position pos:line="95" pos:column="37"/></operator><name pos:line="95" pos:column="34">key<pos:position pos:line="95" pos:column="37"/></name><operator pos:line="95" pos:column="37">.<pos:position pos:line="95" pos:column="38"/></operator><name pos:line="95" pos:column="38">dsize<pos:position pos:line="95" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="44"/></argument_list></sizeof></expr>;<pos:position pos:line="95" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="96" pos:column="13">ip<pos:position pos:line="96" pos:column="15"/></name><operator pos:line="96" pos:column="15">-&gt;<pos:position pos:line="96" pos:column="20"/></operator><name pos:line="96" pos:column="17">key<pos:position pos:line="96" pos:column="20"/></name><operator pos:line="96" pos:column="20">.<pos:position pos:line="96" pos:column="21"/></operator><name pos:line="96" pos:column="21">dptr<pos:position pos:line="96" pos:column="25"/></name></name> <operator pos:line="96" pos:column="26">=<pos:position pos:line="96" pos:column="27"/></operator> <call><name pos:line="96" pos:column="28">apr_pmemdup<pos:position pos:line="96" pos:column="39"/></name><argument_list pos:line="96" pos:column="39">(<argument><expr><name pos:line="96" pos:column="40">p<pos:position pos:line="96" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="43">val<pos:position pos:line="96" pos:column="46"/></name><operator pos:line="96" pos:column="46">.<pos:position pos:line="96" pos:column="47"/></operator><name pos:line="96" pos:column="47">dptr<pos:position pos:line="96" pos:column="51"/></name></name> <operator pos:line="96" pos:column="52">+<pos:position pos:line="96" pos:column="53"/></operator> <name pos:line="96" pos:column="54">offset<pos:position pos:line="96" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="62">ip<pos:position pos:line="96" pos:column="64"/></name><operator pos:line="96" pos:column="64">-&gt;<pos:position pos:line="96" pos:column="69"/></operator><name pos:line="96" pos:column="66">key<pos:position pos:line="96" pos:column="69"/></name><operator pos:line="96" pos:column="69">.<pos:position pos:line="96" pos:column="70"/></operator><name pos:line="96" pos:column="70">dsize<pos:position pos:line="96" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><name pos:line="97" pos:column="13">offset<pos:position pos:line="97" pos:column="19"/></name> <operator pos:line="97" pos:column="20">+=<pos:position pos:line="97" pos:column="22"/></operator> <name><name pos:line="97" pos:column="23">ip<pos:position pos:line="97" pos:column="25"/></name><operator pos:line="97" pos:column="25">-&gt;<pos:position pos:line="97" pos:column="30"/></operator><name pos:line="97" pos:column="27">key<pos:position pos:line="97" pos:column="30"/></name><operator pos:line="97" pos:column="30">.<pos:position pos:line="97" pos:column="31"/></operator><name pos:line="97" pos:column="31">dsize<pos:position pos:line="97" pos:column="36"/></name></name></expr>;<pos:position pos:line="97" pos:column="37"/></expr_stmt>

            <if pos:line="99" pos:column="13">if <condition pos:line="99" pos:column="16">(<expr><operator pos:line="99" pos:column="17">!<pos:position pos:line="99" pos:column="18"/></operator><call><name pos:line="99" pos:column="18">dav_generic_lock_expired<pos:position pos:line="99" pos:column="42"/></name><argument_list pos:line="99" pos:column="42">(<argument><expr><name><name pos:line="99" pos:column="43">ip<pos:position pos:line="99" pos:column="45"/></name><operator pos:line="99" pos:column="45">-&gt;<pos:position pos:line="99" pos:column="50"/></operator><name pos:line="99" pos:column="47">timeout<pos:position pos:line="99" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="56"/></condition><then pos:line="99" pos:column="56"> <block pos:line="99" pos:column="57">{
                <expr_stmt><expr><name><name pos:line="100" pos:column="17">ip<pos:position pos:line="100" pos:column="19"/></name><operator pos:line="100" pos:column="19">-&gt;<pos:position pos:line="100" pos:column="24"/></operator><name pos:line="100" pos:column="21">next<pos:position pos:line="100" pos:column="25"/></name></name> <operator pos:line="100" pos:column="26">=<pos:position pos:line="100" pos:column="27"/></operator> <operator pos:line="100" pos:column="28">*<pos:position pos:line="100" pos:column="29"/></operator><name pos:line="100" pos:column="29">indirect<pos:position pos:line="100" pos:column="37"/></name></expr>;<pos:position pos:line="100" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="101" pos:column="17">*<pos:position pos:line="101" pos:column="18"/></operator><name pos:line="101" pos:column="18">indirect<pos:position pos:line="101" pos:column="26"/></name> <operator pos:line="101" pos:column="27">=<pos:position pos:line="101" pos:column="28"/></operator> <name pos:line="101" pos:column="29">ip<pos:position pos:line="101" pos:column="31"/></name></expr>;<pos:position pos:line="101" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="102" pos:column="14"/></block></then>
            <else pos:line="103" pos:column="13">else <block pos:line="103" pos:column="18">{
                <expr_stmt><expr><name pos:line="104" pos:column="17">need_save<pos:position pos:line="104" pos:column="26"/></name> <operator pos:line="104" pos:column="27">=<pos:position pos:line="104" pos:column="28"/></operator> <name pos:line="104" pos:column="29">DAV_TRUE<pos:position pos:line="104" pos:column="37"/></name></expr>;<pos:position pos:line="104" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="105" pos:column="14"/></block></else></if>

            <break pos:line="107" pos:column="13">break;<pos:position pos:line="107" pos:column="19"/></break>

        <default pos:line="109" pos:column="9">default:<pos:position pos:line="109" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="110" pos:column="13">apr_dbm_freedatum<pos:position pos:line="110" pos:column="30"/></name><argument_list pos:line="110" pos:column="30">(<argument><expr><name><name pos:line="110" pos:column="31">lockdb<pos:position pos:line="110" pos:column="37"/></name><operator pos:line="110" pos:column="37">-&gt;<pos:position pos:line="110" pos:column="42"/></operator><name pos:line="110" pos:column="39">info<pos:position pos:line="110" pos:column="43"/></name><operator pos:line="110" pos:column="43">-&gt;<pos:position pos:line="110" pos:column="48"/></operator><name pos:line="110" pos:column="45">db<pos:position pos:line="110" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="49">val<pos:position pos:line="110" pos:column="52"/></name></expr></argument>)<pos:position pos:line="110" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="54"/></expr_stmt>

            <comment type="block" pos:line="112" pos:column="13">/* ### should use a computed_desc and insert corrupt token data */</comment>
            <expr_stmt><expr><operator pos:line="113" pos:column="13">--<pos:position pos:line="113" pos:column="15"/></operator><name pos:line="113" pos:column="15">offset<pos:position pos:line="113" pos:column="21"/></name></expr>;<pos:position pos:line="113" pos:column="22"/></expr_stmt>
            <return pos:line="114" pos:column="13">return <expr><call><name pos:line="114" pos:column="20">dav_new_error<pos:position pos:line="114" pos:column="33"/></name><argument_list pos:line="114" pos:column="33">(<argument><expr><name pos:line="114" pos:column="34">p<pos:position pos:line="114" pos:column="35"/></name></expr></argument>,
                                 <argument><expr><name pos:line="115" pos:column="34">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="115" pos:column="60"/></name></expr></argument>,
                                 <argument><expr><name pos:line="116" pos:column="34">DAV_ERR_LOCK_CORRUPT_DB<pos:position pos:line="116" pos:column="57"/></name></expr></argument>,
                                 <argument><expr><call><name pos:line="117" pos:column="34">apr_psprintf<pos:position pos:line="117" pos:column="46"/></name><argument_list pos:line="117" pos:column="46">(<argument><expr><name pos:line="117" pos:column="47">p<pos:position pos:line="117" pos:column="48"/></name></expr></argument>,
                                             <argument><expr><literal type="string" pos:line="118" pos:column="46">"The lock database was found to "<pos:position pos:line="118" pos:column="79"/></literal>
                                             <literal type="string" pos:line="119" pos:column="46">"be corrupt. offset %"<pos:position pos:line="119" pos:column="68"/></literal>
                                             <name pos:line="120" pos:column="46">APR_SIZE_T_FMT<pos:position pos:line="120" pos:column="60"/></name> <literal type="string" pos:line="120" pos:column="61">", c=%02x"<pos:position pos:line="120" pos:column="71"/></literal></expr></argument>,
                                             <argument><expr><name pos:line="121" pos:column="46">offset<pos:position pos:line="121" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="54">val<pos:position pos:line="121" pos:column="57"/></name><operator pos:line="121" pos:column="57">.<pos:position pos:line="121" pos:column="58"/></operator><name pos:line="121" pos:column="58">dptr<pos:position pos:line="121" pos:column="62"/></name><index pos:line="121" pos:column="62">[<expr><name pos:line="121" pos:column="63">offset<pos:position pos:line="121" pos:column="69"/></name></expr>]<pos:position pos:line="121" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="121" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="73"/></return>
        }<pos:position pos:line="122" pos:column="10"/></block></switch>
    }<pos:position pos:line="123" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="125" pos:column="5">apr_dbm_freedatum<pos:position pos:line="125" pos:column="22"/></name><argument_list pos:line="125" pos:column="22">(<argument><expr><name><name pos:line="125" pos:column="23">lockdb<pos:position pos:line="125" pos:column="29"/></name><operator pos:line="125" pos:column="29">-&gt;<pos:position pos:line="125" pos:column="34"/></operator><name pos:line="125" pos:column="31">info<pos:position pos:line="125" pos:column="35"/></name><operator pos:line="125" pos:column="35">-&gt;<pos:position pos:line="125" pos:column="40"/></operator><name pos:line="125" pos:column="37">db<pos:position pos:line="125" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="41">val<pos:position pos:line="125" pos:column="44"/></name></expr></argument>)<pos:position pos:line="125" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="46"/></expr_stmt>

    <comment type="block" pos:line="127" pos:column="5">/* Clean up this record if we found expired locks */</comment>
    <comment type="block" pos:line="128" pos:column="5">/*
     * ### shouldn't do this if we've been opened READONLY. elide the
     * ### timed-out locks from the response, but don't save that info back
     */</comment>
    <if pos:line="132" pos:column="5">if <condition pos:line="132" pos:column="8">(<expr><name pos:line="132" pos:column="9">need_save<pos:position pos:line="132" pos:column="18"/></name> <operator pos:line="132" pos:column="19">==<pos:position pos:line="132" pos:column="21"/></operator> <name pos:line="132" pos:column="22">DAV_TRUE<pos:position pos:line="132" pos:column="30"/></name></expr>)<pos:position pos:line="132" pos:column="31"/></condition><then pos:line="132" pos:column="31"> <block pos:line="132" pos:column="32">{
        <return pos:line="133" pos:column="9">return <expr><call><name pos:line="133" pos:column="16">dav_generic_save_lock_record<pos:position pos:line="133" pos:column="44"/></name><argument_list pos:line="133" pos:column="44">(<argument><expr><name pos:line="133" pos:column="45">lockdb<pos:position pos:line="133" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="53">key<pos:position pos:line="133" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="133" pos:column="58">*<pos:position pos:line="133" pos:column="59"/></operator><name pos:line="133" pos:column="59">direct<pos:position pos:line="133" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="133" pos:column="67">*<pos:position pos:line="133" pos:column="68"/></operator><name pos:line="133" pos:column="68">indirect<pos:position pos:line="133" pos:column="76"/></name></expr></argument>)<pos:position pos:line="133" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="78"/></return>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if>

    <return pos:line="136" pos:column="5">return <expr><name pos:line="136" pos:column="12">NULL<pos:position pos:line="136" pos:column="16"/></name></expr>;<pos:position pos:line="136" pos:column="17"/></return>
}<pos:position pos:line="137" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1988_httpd-2.3.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">sed_destroy_eval<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">sed_eval_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">eval<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <comment type="block" pos:line="4" pos:column="5">/* eval-&gt;linebuf, eval-&gt;holdbuf, eval-&gt;genbuf and eval-&gt;inar are allocated
     * on pool. It will be freed when pool will be freed */</comment>
    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><expr><name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr>;<pos:position pos:line="6" pos:column="16"/></init> <condition><expr><name pos:line="6" pos:column="17">i<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&lt;<pos:position pos:line="6" pos:column="23"/></operator> <name><name pos:line="6" pos:column="21">eval<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">commands<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">nfiles<pos:position pos:line="6" pos:column="43"/></name></name></expr>;<pos:position pos:line="6" pos:column="44"/></condition> <incr><expr><name pos:line="6" pos:column="45">i<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">++<pos:position pos:line="6" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="49"/></control> <block pos:line="6" pos:column="50">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">eval<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">fcode<pos:position pos:line="7" pos:column="24"/></name><index pos:line="7" pos:column="24">[<expr><name pos:line="7" pos:column="25">i<pos:position pos:line="7" pos:column="26"/></name></expr>]<pos:position pos:line="7" pos:column="27"/></index></name> <operator pos:line="7" pos:column="28">!=<pos:position pos:line="7" pos:column="30"/></operator> <name pos:line="7" pos:column="31">NULL<pos:position pos:line="7" pos:column="35"/></name></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36"> <block pos:line="7" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="8" pos:column="13">apr_file_close<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name><name pos:line="8" pos:column="28">eval<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">fcode<pos:position pos:line="8" pos:column="39"/></name><index pos:line="8" pos:column="39">[<expr><name pos:line="8" pos:column="40">i<pos:position pos:line="8" pos:column="41"/></name></expr>]<pos:position pos:line="8" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="9" pos:column="13">eval<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">fcode<pos:position pos:line="9" pos:column="24"/></name><index pos:line="9" pos:column="24">[<expr><name pos:line="9" pos:column="25">i<pos:position pos:line="9" pos:column="26"/></name></expr>]<pos:position pos:line="9" pos:column="27"/></index></name> <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">NULL<pos:position pos:line="9" pos:column="34"/></name></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="10" pos:column="10"/></block></then></if>
    }<pos:position pos:line="11" pos:column="6"/></block></for>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6570.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">make_chunk<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">h2_task<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">task<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">apr_bucket_brigade<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">bb<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, 
                       <parameter><decl><type><name pos:line="2" pos:column="24">apr_bucket<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">first<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">apr_off_t<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">chunk_len<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, 
                       <parameter><decl><type><name pos:line="3" pos:column="24">apr_bucket<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">tail<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="41"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <comment type="block" pos:line="5" pos:column="5">/* Surround the buckets [first, tail[ with new buckets carrying the
     * HTTP/1.1 chunked encoding format. If tail is NULL, the chunk extends
     * to the end of the brigade. */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">buffer<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><literal type="number" pos:line="8" pos:column="17">128<pos:position pos:line="8" pos:column="20"/></literal></expr>]<pos:position pos:line="8" pos:column="21"/></index></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_bucket<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">c<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">len<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>
    
    <expr_stmt><expr><name pos:line="12" pos:column="5">len<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <call><name pos:line="12" pos:column="11">apr_snprintf<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">buffer<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="32">H2_ALEN<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">buffer<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr></argument>, 
                       <argument><expr><literal type="string" pos:line="13" pos:column="24">"%"<pos:position pos:line="13" pos:column="27"/></literal><name pos:line="13" pos:column="27">APR_UINT64_T_HEX_FMT<pos:position pos:line="13" pos:column="47"/></name><literal type="string" pos:line="13" pos:column="47">"\r\n"<pos:position pos:line="13" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="55">(<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="56">apr_uint64_t<pos:position pos:line="13" pos:column="68"/></name><operator pos:line="13" pos:column="68">)<pos:position pos:line="13" pos:column="69"/></operator><name pos:line="13" pos:column="69">chunk_len<pos:position pos:line="13" pos:column="78"/></name></expr></argument>)<pos:position pos:line="13" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">c<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">apr_bucket_heap_create<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">buffer<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">len<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">NULL<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="51">bb<pos:position pos:line="14" pos:column="53"/></name><operator pos:line="14" pos:column="53">-&gt;<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="55">bucket_alloc<pos:position pos:line="14" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">APR_BUCKET_INSERT_BEFORE<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">first<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="37">c<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">c<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">apr_bucket_heap_create<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><literal type="string" pos:line="16" pos:column="32">"\r\n"<pos:position pos:line="16" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="40">2<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="43">NULL<pos:position pos:line="16" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="49">bb<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">-&gt;<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="53">bucket_alloc<pos:position pos:line="16" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">tail<pos:position pos:line="17" pos:column="13"/></name></expr>)<pos:position pos:line="17" pos:column="14"/></condition><then pos:line="17" pos:column="14"> <block pos:line="17" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">APR_BUCKET_INSERT_BEFORE<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">tail<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">c<pos:position pos:line="18" pos:column="41"/></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
    <else pos:line="20" pos:column="5">else <block pos:line="20" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">bb<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">c<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">task<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">input<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">.<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">chunked_total<pos:position pos:line="23" pos:column="30"/></name></name> <operator pos:line="23" pos:column="31">+=<pos:position pos:line="23" pos:column="33"/></operator> <name pos:line="23" pos:column="34">chunk_len<pos:position pos:line="23" pos:column="43"/></name></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">ap_log_cerror<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">APLOG_MARK<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="31">APLOG_TRACE2<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="45">0<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="48">task<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">-&gt;<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="54">c<pos:position pos:line="24" pos:column="55"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="25" pos:column="19">"h2_task(%s): added chunk %ld, total %ld"<pos:position pos:line="25" pos:column="60"/></literal></expr></argument>, 
                  <argument><expr><name><name pos:line="26" pos:column="19">task<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">-&gt;<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="25">id<pos:position pos:line="26" pos:column="27"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="29">(<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">long<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">)<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">chunk_len<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="46">(<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="47">long<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">)<pos:position pos:line="26" pos:column="52"/></operator><name><name pos:line="26" pos:column="52">task<pos:position pos:line="26" pos:column="56"/></name><operator pos:line="26" pos:column="56">-&gt;<pos:position pos:line="26" pos:column="61"/></operator><name pos:line="26" pos:column="58">input<pos:position pos:line="26" pos:column="63"/></name><operator pos:line="26" pos:column="63">.<pos:position pos:line="26" pos:column="64"/></operator><name pos:line="26" pos:column="64">chunked_total<pos:position pos:line="26" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="79"/></expr_stmt>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

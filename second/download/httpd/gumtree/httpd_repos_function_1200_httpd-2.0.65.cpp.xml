<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1200_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_keep_alive<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">cmd_parms<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">cmd<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">void<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">dummy<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
				  <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">arg<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list> 
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">err<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><call><name pos:line="4" pos:column="23">ap_check_cmd_context<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><name pos:line="4" pos:column="44">cmd<pos:position pos:line="4" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="49">NOT_IN_DIR_LOC_FILE<pos:position pos:line="4" pos:column="68"/></name><operator pos:line="4" pos:column="68">|<pos:position pos:line="4" pos:column="69"/></operator><name pos:line="4" pos:column="69">NOT_IN_LIMIT<pos:position pos:line="4" pos:column="81"/></name></expr></argument>)<pos:position pos:line="4" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="83"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">err<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">!=<pos:position pos:line="5" pos:column="15"/></operator> <name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21"> <block pos:line="5" pos:column="22">{
        <return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">err<pos:position pos:line="6" pos:column="19"/></name></expr>;<pos:position pos:line="6" pos:column="20"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="9" pos:column="5">/* We've changed it to On/Off, but used to use numbers
     * so we accept anything but "Off" or "0" as "On"
     */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><call><name pos:line="12" pos:column="10">strcasecmp<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">arg<pos:position pos:line="12" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="26">"off"<pos:position pos:line="12" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call> <operator pos:line="12" pos:column="33">||<pos:position pos:line="12" pos:column="35"/></operator> <operator pos:line="12" pos:column="36">!<pos:position pos:line="12" pos:column="37"/></operator><call><name pos:line="12" pos:column="37">strcmp<pos:position pos:line="12" pos:column="43"/></name><argument_list pos:line="12" pos:column="43">(<argument><expr><name pos:line="12" pos:column="44">arg<pos:position pos:line="12" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="49">"0"<pos:position pos:line="12" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="54"/></condition><then pos:line="12" pos:column="54"> <block pos:line="12" pos:column="55">{
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">cmd<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">server<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">keep_alive<pos:position pos:line="13" pos:column="32"/></name></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <literal type="number" pos:line="13" pos:column="35">0<pos:position pos:line="13" pos:column="36"/></literal></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then>
    <else pos:line="15" pos:column="5">else <block pos:line="15" pos:column="10">{
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">cmd<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">server<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">keep_alive<pos:position pos:line="16" pos:column="32"/></name></name> <operator pos:line="16" pos:column="33">=<pos:position pos:line="16" pos:column="34"/></operator> <literal type="number" pos:line="16" pos:column="35">1<pos:position pos:line="16" pos:column="36"/></literal></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></else></if>
    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">NULL<pos:position pos:line="18" pos:column="16"/></name></expr>;<pos:position pos:line="18" pos:column="17"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

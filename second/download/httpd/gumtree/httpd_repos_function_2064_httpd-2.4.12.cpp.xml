<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2064_httpd-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">connection_cleanup<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">theconn<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">proxy_conn_rec<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">conn<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="29">proxy_conn_rec<pos:position pos:line="3" pos:column="43"/></name> <operator pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></operator><operator pos:line="3" pos:column="45">)<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="46">theconn<pos:position pos:line="3" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">proxy_worker<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">worker<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">worker<pos:position pos:line="4" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/*
     * If the connection pool is NULL the worker
     * cleanup has been run. Just return.
     */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name><name pos:line="10" pos:column="10">worker<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">cp<pos:position pos:line="10" pos:column="20"/></name></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <block pos:line="10" pos:column="22">{
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">APR_SUCCESS<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">conn<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">r<pos:position pos:line="14" pos:column="16"/></name></name></expr>)<pos:position pos:line="14" pos:column="17"/></condition><then pos:line="14" pos:column="17"> <block pos:line="14" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">apr_pool_destroy<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name><name pos:line="15" pos:column="26">conn<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">r<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">pool<pos:position pos:line="15" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">conn<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">r<pos:position pos:line="16" pos:column="16"/></name></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">NULL<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* Sanity check: Did we already return the pooled connection? */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">conn<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">inreslist<pos:position pos:line="20" pos:column="24"/></name></name></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25"> <block pos:line="20" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">ap_log_perror<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">APLOG_MARK<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">APLOG_ERR<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="46">0<pos:position pos:line="21" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="49">conn<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">-&gt;<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="55">pool<pos:position pos:line="21" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="61">APLOGNO<pos:position pos:line="21" pos:column="68"/></name><argument_list pos:line="21" pos:column="68">(<argument><expr><literal type="number" pos:line="21" pos:column="69">00923<pos:position pos:line="21" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call>
                      <literal type="string" pos:line="22" pos:column="23">"Pooled connection 0x%pp for worker %s has been"<pos:position pos:line="22" pos:column="71"/></literal>
                      <literal type="string" pos:line="23" pos:column="23">" already returned to the connection pool."<pos:position pos:line="23" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="68">conn<pos:position pos:line="23" pos:column="72"/></name></expr></argument>,
                      <argument><expr><call><name pos:line="24" pos:column="23">ap_proxy_worker_name<pos:position pos:line="24" pos:column="43"/></name><argument_list pos:line="24" pos:column="43">(<argument><expr><name><name pos:line="24" pos:column="44">conn<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">-&gt;<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="50">pool<pos:position pos:line="24" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="56">worker<pos:position pos:line="24" pos:column="62"/></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
        <return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">APR_SUCCESS<pos:position pos:line="25" pos:column="27"/></name></expr>;<pos:position pos:line="25" pos:column="28"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/* determine if the connection need to be closed */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">conn<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">-&gt;<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="15">close<pos:position pos:line="29" pos:column="20"/></name></name> <operator pos:line="29" pos:column="21">||<pos:position pos:line="29" pos:column="23"/></operator> <operator pos:line="29" pos:column="24">!<pos:position pos:line="29" pos:column="25"/></operator><name><name pos:line="29" pos:column="25">worker<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">s<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">-&gt;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="36">is_address_reusable<pos:position pos:line="29" pos:column="55"/></name></name> <operator pos:line="29" pos:column="56">||<pos:position pos:line="29" pos:column="58"/></operator> <name><name pos:line="29" pos:column="59">worker<pos:position pos:line="29" pos:column="65"/></name><operator pos:line="29" pos:column="65">-&gt;<pos:position pos:line="29" pos:column="70"/></operator><name pos:line="29" pos:column="67">s<pos:position pos:line="29" pos:column="68"/></name><operator pos:line="29" pos:column="68">-&gt;<pos:position pos:line="29" pos:column="73"/></operator><name pos:line="29" pos:column="70">disablereuse<pos:position pos:line="29" pos:column="82"/></name></name></expr>)<pos:position pos:line="29" pos:column="83"/></condition><then pos:line="29" pos:column="83"> <block pos:line="29" pos:column="84">{
        <decl_stmt><decl><type><name pos:line="30" pos:column="9">apr_pool_t<pos:position pos:line="30" pos:column="19"/></name> <modifier pos:line="30" pos:column="20">*<pos:position pos:line="30" pos:column="21"/></modifier></type><name pos:line="30" pos:column="21">p<pos:position pos:line="30" pos:column="22"/></name> <init pos:line="30" pos:column="23">= <expr><name><name pos:line="30" pos:column="25">conn<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">pool<pos:position pos:line="30" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="30" pos:column="36"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">apr_pool_clear<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">p<pos:position pos:line="31" pos:column="25"/></name></expr></argument>)<pos:position pos:line="31" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">conn<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <call><name pos:line="32" pos:column="16">apr_pcalloc<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">p<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="31">sizeof<argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">proxy_conn_rec<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">conn<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">pool<pos:position pos:line="33" pos:column="19"/></name></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="22">p<pos:position pos:line="33" pos:column="23"/></name></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">conn<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">worker<pos:position pos:line="34" pos:column="21"/></name></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">worker<pos:position pos:line="34" pos:column="30"/></name></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">apr_pool_create<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><operator pos:line="35" pos:column="25">&amp;<pos:position pos:line="35" pos:column="30"/></operator><operator pos:line="35" pos:column="26">(<pos:position pos:line="35" pos:column="27"/></operator><name><name pos:line="35" pos:column="27">conn<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">-&gt;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="33">scpool<pos:position pos:line="35" pos:column="39"/></name></name><operator pos:line="35" pos:column="39">)<pos:position pos:line="35" pos:column="40"/></operator></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">p<pos:position pos:line="35" pos:column="43"/></name></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">apr_pool_tag<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name><name pos:line="36" pos:column="22">conn<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">scpool<pos:position pos:line="36" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="36">"proxy_conn_scpool"<pos:position pos:line="36" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">worker<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">-&gt;<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="17">s<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">hmax<pos:position pos:line="39" pos:column="24"/></name></name> <operator pos:line="39" pos:column="25">&amp;&amp;<pos:position pos:line="39" pos:column="35"/></operator> <name><name pos:line="39" pos:column="28">worker<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">-&gt;<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="36">cp<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">-&gt;<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="40">res<pos:position pos:line="39" pos:column="43"/></name></name></expr>)<pos:position pos:line="39" pos:column="44"/></condition><then pos:line="39" pos:column="44"> <block pos:line="39" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">conn<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">inreslist<pos:position pos:line="40" pos:column="24"/></name></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <literal type="number" pos:line="40" pos:column="27">1<pos:position pos:line="40" pos:column="28"/></literal></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">apr_reslist_release<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name><name pos:line="41" pos:column="29">worker<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">-&gt;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="37">cp<pos:position pos:line="41" pos:column="39"/></name><operator pos:line="41" pos:column="39">-&gt;<pos:position pos:line="41" pos:column="44"/></operator><name pos:line="41" pos:column="41">res<pos:position pos:line="41" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="46">(<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="47">void<pos:position pos:line="41" pos:column="51"/></name> <operator pos:line="41" pos:column="52">*<pos:position pos:line="41" pos:column="53"/></operator><operator pos:line="41" pos:column="53">)<pos:position pos:line="41" pos:column="54"/></operator><name pos:line="41" pos:column="54">conn<pos:position pos:line="41" pos:column="58"/></name></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then>
    <else pos:line="43" pos:column="5">else
    <block pos:line="44" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">worker<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">-&gt;<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="17">cp<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">-&gt;<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="21">conn<pos:position pos:line="45" pos:column="25"/></name></name> <operator pos:line="45" pos:column="26">=<pos:position pos:line="45" pos:column="27"/></operator> <name pos:line="45" pos:column="28">conn<pos:position pos:line="45" pos:column="32"/></name></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="48" pos:column="5">/* Always return the SUCCESS */</comment>
    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">APR_SUCCESS<pos:position pos:line="49" pos:column="23"/></name></expr>;<pos:position pos:line="49" pos:column="24"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_584_httpd-2.2.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pphrase_array_clear<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">apr_array_header_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">arr<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name><name pos:line="3" pos:column="9">arr<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">-&gt;<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="14">nelts<pos:position pos:line="3" pos:column="19"/></name></name> <operator pos:line="3" pos:column="20">&gt;<pos:position pos:line="3" pos:column="24"/></operator> <literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr>)<pos:position pos:line="3" pos:column="24"/></condition><then pos:line="3" pos:column="24"> <block pos:line="3" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="4" pos:column="9">memset<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name><name pos:line="4" pos:column="16">arr<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">elts<pos:position pos:line="4" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="27">0<pos:position pos:line="4" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="30">arr<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">elt_size<pos:position pos:line="4" pos:column="43"/></name></name> <operator pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></operator> <name><name pos:line="4" pos:column="46">arr<pos:position pos:line="4" pos:column="49"/></name><operator pos:line="4" pos:column="49">-&gt;<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="51">nelts<pos:position pos:line="4" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="5" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">arr<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">-&gt;<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="10">nelts<pos:position pos:line="6" pos:column="15"/></name></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

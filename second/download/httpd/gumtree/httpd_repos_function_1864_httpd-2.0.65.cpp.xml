<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1864_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">alloc_listener<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">process_rec<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">process<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">addr<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">apr_port_t<pos:position pos:line="1" pos:column="79"/></name></type> <name pos:line="1" pos:column="80">port<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ap_listen_rec<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier><modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">walk<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><name pos:line="4" pos:column="5">ap_listen_rec<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></operator><operator pos:line="4" pos:column="20">new<pos:position pos:line="4" pos:column="23"/></operator></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_port_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">oldport<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_sockaddr_t<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">sa<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">addr<pos:position pos:line="9" pos:column="14"/></name></expr>)<pos:position pos:line="9" pos:column="15"/></condition><then pos:line="9" pos:column="15"> <block pos:line="9" pos:column="16">{ <comment type="block" pos:line="9" pos:column="18">/* don't bind to specific interface */</comment>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">find_default_family<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name><name pos:line="10" pos:column="29">process<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">pool<pos:position pos:line="10" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
        <switch pos:line="11" pos:column="9">switch<condition pos:line="11" pos:column="15">(<expr><name pos:line="11" pos:column="16">default_family<pos:position pos:line="11" pos:column="30"/></name></expr>)<pos:position pos:line="11" pos:column="31"/></condition> <block pos:line="11" pos:column="32">{
        <case pos:line="12" pos:column="9">case <expr><name pos:line="12" pos:column="14">APR_INET<pos:position pos:line="12" pos:column="22"/></name></expr>:<pos:position pos:line="12" pos:column="23"/></case>
            <expr_stmt><expr><name pos:line="13" pos:column="13">addr<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <literal type="string" pos:line="13" pos:column="20">"0.0.0.0"<pos:position pos:line="13" pos:column="29"/></literal></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
            <break pos:line="14" pos:column="13">break;<pos:position pos:line="14" pos:column="19"/></break>

<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><name pos:line="16" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="16" pos:column="18"/></name></expr></cpp:if>
        <case pos:line="17" pos:column="9">case <expr><name pos:line="17" pos:column="14">APR_INET6<pos:position pos:line="17" pos:column="23"/></name></expr>:<pos:position pos:line="17" pos:column="24"/></case>
            <expr_stmt><expr><name pos:line="18" pos:column="13">addr<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <literal type="string" pos:line="18" pos:column="20">"::"<pos:position pos:line="18" pos:column="24"/></literal></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
            <break pos:line="19" pos:column="13">break;<pos:position pos:line="19" pos:column="19"/></break>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>

        <default pos:line="22" pos:column="9">default:<pos:position pos:line="22" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">ap_assert<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><literal type="number" pos:line="23" pos:column="23">1<pos:position pos:line="23" pos:column="24"/></literal> <operator pos:line="23" pos:column="25">!=<pos:position pos:line="23" pos:column="27"/></operator> <literal type="number" pos:line="23" pos:column="28">1<pos:position pos:line="23" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt> <comment type="block" pos:line="23" pos:column="32">/* should not occur */</comment>
        }<pos:position pos:line="24" pos:column="10"/></block></switch>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="27" pos:column="5">/* see if we've got an old listener for this address:port */</comment>
    <for pos:line="28" pos:column="5">for <control pos:line="28" pos:column="9">(<init><expr><name pos:line="28" pos:column="10">walk<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <operator pos:line="28" pos:column="17">&amp;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="18">old_listeners<pos:position pos:line="28" pos:column="31"/></name></expr>;<pos:position pos:line="28" pos:column="32"/></init> <condition><expr><operator pos:line="28" pos:column="33">*<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">walk<pos:position pos:line="28" pos:column="38"/></name></expr>;<pos:position pos:line="28" pos:column="39"/></condition> <incr><expr><name pos:line="28" pos:column="40">walk<pos:position pos:line="28" pos:column="44"/></name> <operator pos:line="28" pos:column="45">=<pos:position pos:line="28" pos:column="46"/></operator> <operator pos:line="28" pos:column="47">&amp;<pos:position pos:line="28" pos:column="52"/></operator><name><operator pos:line="28" pos:column="48">(<pos:position pos:line="28" pos:column="49"/></operator><operator pos:line="28" pos:column="49">*<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="50">walk<pos:position pos:line="28" pos:column="54"/></name><operator pos:line="28" pos:column="54">)<pos:position pos:line="28" pos:column="55"/></operator><operator pos:line="28" pos:column="55">-&gt;<pos:position pos:line="28" pos:column="60"/></operator><name pos:line="28" pos:column="57">next<pos:position pos:line="28" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="28" pos:column="62"/></control> <block pos:line="28" pos:column="63">{
        <expr_stmt><expr><name pos:line="29" pos:column="9">sa<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <name><operator pos:line="29" pos:column="14">(<pos:position pos:line="29" pos:column="15"/></operator><operator pos:line="29" pos:column="15">*<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">walk<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">)<pos:position pos:line="29" pos:column="21"/></operator><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">bind_addr<pos:position pos:line="29" pos:column="32"/></name></name></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
        <comment type="block" pos:line="30" pos:column="9">/* Some listeners are not real so they will not have a bind_addr. */</comment>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">sa<pos:position pos:line="31" pos:column="15"/></name></expr>)<pos:position pos:line="31" pos:column="16"/></condition><then pos:line="31" pos:column="16"> <block pos:line="31" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">apr_sockaddr_port_get<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><operator pos:line="32" pos:column="35">&amp;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="36">oldport<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="45">sa<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><operator pos:line="33" pos:column="17">!<pos:position pos:line="33" pos:column="18"/></operator><call><name pos:line="33" pos:column="18">strcmp<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><name><name pos:line="33" pos:column="25">sa<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">hostname<pos:position pos:line="33" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">addr<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call> <operator pos:line="33" pos:column="45">&amp;&amp;<pos:position pos:line="33" pos:column="55"/></operator> <name pos:line="33" pos:column="48">port<pos:position pos:line="33" pos:column="52"/></name> <operator pos:line="33" pos:column="53">==<pos:position pos:line="33" pos:column="55"/></operator> <name pos:line="33" pos:column="56">oldport<pos:position pos:line="33" pos:column="63"/></name></expr>)<pos:position pos:line="33" pos:column="64"/></condition><then pos:line="33" pos:column="64"> <block pos:line="33" pos:column="65">{
                <comment type="block" pos:line="34" pos:column="17">/* re-use existing record */</comment>
                <expr_stmt><expr><operator pos:line="35" pos:column="17">new<pos:position pos:line="35" pos:column="20"/></operator> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <operator pos:line="35" pos:column="23">*<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="24">walk<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="36" pos:column="17">*<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">walk<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">=<pos:position pos:line="36" pos:column="24"/></operator> <operator pos:line="36" pos:column="25">new<pos:position pos:line="36" pos:column="28"/></operator><operator pos:line="36" pos:column="28">-&gt;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="30">next<pos:position pos:line="36" pos:column="34"/></name></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="37" pos:column="17">new<pos:position pos:line="37" pos:column="20"/></operator><operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="22">next<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">=<pos:position pos:line="37" pos:column="28"/></operator> <name pos:line="37" pos:column="29">ap_listeners<pos:position pos:line="37" pos:column="41"/></name></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><name pos:line="38" pos:column="17">ap_listeners<pos:position pos:line="38" pos:column="29"/></name> <operator pos:line="38" pos:column="30">=<pos:position pos:line="38" pos:column="31"/></operator> <operator pos:line="38" pos:column="32">new<pos:position pos:line="38" pos:column="35"/></operator></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt>
                <return pos:line="39" pos:column="17">return <expr><name pos:line="39" pos:column="24">NULL<pos:position pos:line="39" pos:column="28"/></name></expr>;<pos:position pos:line="39" pos:column="29"/></return>
            }<pos:position pos:line="40" pos:column="14"/></block></then></if>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></for>

    <comment type="block" pos:line="44" pos:column="5">/* this has to survive restarts */</comment>
    <expr_stmt><expr><operator pos:line="45" pos:column="5">new<pos:position pos:line="45" pos:column="8"/></operator> <operator pos:line="45" pos:column="9">=<pos:position pos:line="45" pos:column="10"/></operator> <call><name pos:line="45" pos:column="11">apr_palloc<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name><name pos:line="45" pos:column="22">process<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">-&gt;<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="31">pool<pos:position pos:line="45" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="37">sizeof<argument_list pos:line="45" pos:column="43">(<argument><expr><name pos:line="45" pos:column="44">ap_listen_rec<pos:position pos:line="45" pos:column="57"/></name></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="46" pos:column="5">new<pos:position pos:line="46" pos:column="8"/></operator><operator pos:line="46" pos:column="8">-&gt;<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="10">active<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <literal type="number" pos:line="46" pos:column="19">0<pos:position pos:line="46" pos:column="20"/></literal></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><operator pos:line="47" pos:column="9">(<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">status<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <call><name pos:line="47" pos:column="19">apr_sockaddr_info_get<pos:position pos:line="47" pos:column="40"/></name><argument_list pos:line="47" pos:column="40">(<argument><expr><operator pos:line="47" pos:column="41">&amp;<pos:position pos:line="47" pos:column="46"/></operator><operator pos:line="47" pos:column="42">new<pos:position pos:line="47" pos:column="45"/></operator><operator pos:line="47" pos:column="45">-&gt;<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="47">bind_addr<pos:position pos:line="47" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="58">addr<pos:position pos:line="47" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="64">APR_UNSPEC<pos:position pos:line="47" pos:column="74"/></name></expr></argument>,
                                        <argument><expr><name pos:line="48" pos:column="41">port<pos:position pos:line="48" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="47">0<pos:position pos:line="48" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="50">process<pos:position pos:line="48" pos:column="57"/></name><operator pos:line="48" pos:column="57">-&gt;<pos:position pos:line="48" pos:column="62"/></operator><name pos:line="48" pos:column="59">pool<pos:position pos:line="48" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call><operator pos:line="48" pos:column="64">)<pos:position pos:line="48" pos:column="65"/></operator>
        <operator pos:line="49" pos:column="9">!=<pos:position pos:line="49" pos:column="11"/></operator> <name pos:line="49" pos:column="12">APR_SUCCESS<pos:position pos:line="49" pos:column="23"/></name></expr>)<pos:position pos:line="49" pos:column="24"/></condition><then pos:line="49" pos:column="24"> <block pos:line="49" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">ap_log_perror<pos:position pos:line="50" pos:column="22"/></name><argument_list pos:line="50" pos:column="22">(<argument><expr><name pos:line="50" pos:column="23">APLOG_MARK<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="35">APLOG_CRIT<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">status<pos:position pos:line="50" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="55">process<pos:position pos:line="50" pos:column="62"/></name><operator pos:line="50" pos:column="62">-&gt;<pos:position pos:line="50" pos:column="67"/></operator><name pos:line="50" pos:column="64">pool<pos:position pos:line="50" pos:column="68"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="51" pos:column="23">"alloc_listener: failed to set up sockaddr for %s"<pos:position pos:line="51" pos:column="73"/></literal></expr></argument>,
                      <argument><expr><name pos:line="52" pos:column="23">addr<pos:position pos:line="52" pos:column="27"/></name></expr></argument>)<pos:position pos:line="52" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt>
        <return pos:line="53" pos:column="9">return <expr><literal type="string" pos:line="53" pos:column="16">"Listen setup failed"<pos:position pos:line="53" pos:column="37"/></literal></expr>;<pos:position pos:line="53" pos:column="38"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">(<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">status<pos:position pos:line="55" pos:column="16"/></name> <operator pos:line="55" pos:column="17">=<pos:position pos:line="55" pos:column="18"/></operator> <call><name pos:line="55" pos:column="19">apr_socket_create<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><operator pos:line="55" pos:column="37">&amp;<pos:position pos:line="55" pos:column="42"/></operator><operator pos:line="55" pos:column="38">new<pos:position pos:line="55" pos:column="41"/></operator><operator pos:line="55" pos:column="41">-&gt;<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="43">sd<pos:position pos:line="55" pos:column="45"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="56" pos:column="37">new<pos:position pos:line="56" pos:column="40"/></operator><operator pos:line="56" pos:column="40">-&gt;<pos:position pos:line="56" pos:column="45"/></operator><name><name pos:line="56" pos:column="42">bind_addr<pos:position pos:line="56" pos:column="51"/></name><operator pos:line="56" pos:column="51">-&gt;<pos:position pos:line="56" pos:column="56"/></operator><name pos:line="56" pos:column="53">family<pos:position pos:line="56" pos:column="59"/></name></name></expr></argument>,
                                    <argument><expr><name pos:line="57" pos:column="37">SOCK_STREAM<pos:position pos:line="57" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="50">process<pos:position pos:line="57" pos:column="57"/></name><operator pos:line="57" pos:column="57">-&gt;<pos:position pos:line="57" pos:column="62"/></operator><name pos:line="57" pos:column="59">pool<pos:position pos:line="57" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="64"/></argument_list></call><operator pos:line="57" pos:column="64">)<pos:position pos:line="57" pos:column="65"/></operator>
        <operator pos:line="58" pos:column="9">!=<pos:position pos:line="58" pos:column="11"/></operator> <name pos:line="58" pos:column="12">APR_SUCCESS<pos:position pos:line="58" pos:column="23"/></name></expr>)<pos:position pos:line="58" pos:column="24"/></condition><then pos:line="58" pos:column="24"> <block pos:line="58" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">ap_log_perror<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name pos:line="59" pos:column="23">APLOG_MARK<pos:position pos:line="59" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="35">APLOG_CRIT<pos:position pos:line="59" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="47">status<pos:position pos:line="59" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="55">process<pos:position pos:line="59" pos:column="62"/></name><operator pos:line="59" pos:column="62">-&gt;<pos:position pos:line="59" pos:column="67"/></operator><name pos:line="59" pos:column="64">pool<pos:position pos:line="59" pos:column="68"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="60" pos:column="23">"alloc_listener: failed to get a socket for %s"<pos:position pos:line="60" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="72">addr<pos:position pos:line="60" pos:column="76"/></name></expr></argument>)<pos:position pos:line="60" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="78"/></expr_stmt>
        <return pos:line="61" pos:column="9">return <expr><literal type="string" pos:line="61" pos:column="16">"Listen setup failed"<pos:position pos:line="61" pos:column="37"/></literal></expr>;<pos:position pos:line="61" pos:column="38"/></return>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="64" pos:column="5">new<pos:position pos:line="64" pos:column="8"/></operator><operator pos:line="64" pos:column="8">-&gt;<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="10">next<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <name pos:line="64" pos:column="17">ap_listeners<pos:position pos:line="64" pos:column="29"/></name></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="65" pos:column="5">ap_listeners<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">=<pos:position pos:line="65" pos:column="19"/></operator> <operator pos:line="65" pos:column="20">new<pos:position pos:line="65" pos:column="23"/></operator></expr>;<pos:position pos:line="65" pos:column="24"/></expr_stmt>
    <return pos:line="66" pos:column="5">return <expr><name pos:line="66" pos:column="12">NULL<pos:position pos:line="66" pos:column="16"/></name></expr>;<pos:position pos:line="66" pos:column="17"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

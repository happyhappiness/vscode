<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3305.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">authz_owner_get_file_group<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">request_rec<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">r<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">reason<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name pos:line="3" pos:column="20">NULL<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

    <comment type="block" pos:line="5" pos:column="5">/* file-group only figures out the file's group and lets
    * other modules do the actual authorization (against a group file/db).
    * Thus, these modules have to hook themselves after
    * mod_authz_owner and of course recognize 'file-group', too.
    */</comment>
<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><operator pos:line="10" pos:column="5">!<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">APR_HAS_USER<pos:position pos:line="10" pos:column="18"/></name></expr></cpp:if>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">NULL<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></return>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>  <comment type="block" pos:line="12" pos:column="8">/* APR_HAS_USER */</comment>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">group<pos:position pos:line="13" pos:column="16"/></name> <init pos:line="13" pos:column="17">= <expr><name pos:line="13" pos:column="19">NULL<pos:position pos:line="13" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_finfo_t<pos:position pos:line="14" pos:column="16"/></name></type> <name pos:line="14" pos:column="17">finfo<pos:position pos:line="14" pos:column="22"/></name></decl>;<pos:position pos:line="14" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_status_t<pos:position pos:line="15" pos:column="17"/></name></type> <name pos:line="15" pos:column="18">status<pos:position pos:line="15" pos:column="24"/></name> <init pos:line="15" pos:column="25">= <expr><literal type="number" pos:line="15" pos:column="27">0<pos:position pos:line="15" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="29"/></decl_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name><name pos:line="17" pos:column="10">r<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">filename<pos:position pos:line="17" pos:column="21"/></name></name></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22"> <block pos:line="17" pos:column="23">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">reason<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="string" pos:line="18" pos:column="18">"no filename available"<pos:position pos:line="18" pos:column="41"/></literal></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">ap_log_rerror<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">APLOG_MARK<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">APLOG_ERR<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">status<pos:position pos:line="19" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="54">r<pos:position pos:line="19" pos:column="55"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="20" pos:column="23">"Authorization of user %s to access %s failed, reason: %s"<pos:position pos:line="20" pos:column="81"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="21" pos:column="23">r<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">-&gt;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="26">user<pos:position pos:line="21" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="32">r<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">-&gt;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="35">uri<pos:position pos:line="21" pos:column="38"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="21" pos:column="40">reason<pos:position pos:line="21" pos:column="46"/></name></expr> ?<pos:position pos:line="21" pos:column="48"/></condition><then pos:line="21" pos:column="48"> <expr><name pos:line="21" pos:column="49">reason<pos:position pos:line="21" pos:column="55"/></name></expr> <pos:position pos:line="21" pos:column="56"/></then><else pos:line="21" pos:column="56">: <expr><literal type="string" pos:line="21" pos:column="58">"unknown"<pos:position pos:line="21" pos:column="67"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="69"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">NULL<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="25" pos:column="5">status<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">apr_stat<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><operator pos:line="25" pos:column="23">&amp;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="24">finfo<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="31">r<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">filename<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">APR_FINFO_GROUP<pos:position pos:line="25" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="61">r<pos:position pos:line="25" pos:column="62"/></name><operator pos:line="25" pos:column="62">-&gt;<pos:position pos:line="25" pos:column="67"/></operator><name pos:line="25" pos:column="64">pool<pos:position pos:line="25" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">status<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">!=<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="19">APR_SUCCESS<pos:position pos:line="26" pos:column="30"/></name></expr>)<pos:position pos:line="26" pos:column="31"/></condition><then pos:line="26" pos:column="31"> <block pos:line="26" pos:column="32">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">reason<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <call><name pos:line="27" pos:column="18">apr_pstrcat<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name><name pos:line="27" pos:column="30">r<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">pool<pos:position pos:line="27" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="39">"could not stat file "<pos:position pos:line="27" pos:column="61"/></literal></expr></argument>,
                                <argument><expr><name><name pos:line="28" pos:column="33">r<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">-&gt;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="36">filename<pos:position pos:line="28" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">NULL<pos:position pos:line="28" pos:column="50"/></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">ap_log_rerror<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">APLOG_MARK<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="35">APLOG_ERR<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">status<pos:position pos:line="29" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">r<pos:position pos:line="29" pos:column="55"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="30" pos:column="23">"Authorization of user %s to access %s failed, reason: %s"<pos:position pos:line="30" pos:column="81"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="31" pos:column="23">r<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">user<pos:position pos:line="31" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="32">r<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">uri<pos:position pos:line="31" pos:column="38"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="31" pos:column="40">reason<pos:position pos:line="31" pos:column="46"/></name></expr> ?<pos:position pos:line="31" pos:column="48"/></condition><then pos:line="31" pos:column="48"> <expr><name pos:line="31" pos:column="49">reason<pos:position pos:line="31" pos:column="55"/></name></expr> <pos:position pos:line="31" pos:column="56"/></then><else pos:line="31" pos:column="56">: <expr><literal type="string" pos:line="31" pos:column="58">"unknown"<pos:position pos:line="31" pos:column="67"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="69"/></expr_stmt>
        <return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">NULL<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><name><name pos:line="35" pos:column="11">finfo<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">.<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">valid<pos:position pos:line="35" pos:column="22"/></name></name> <operator pos:line="35" pos:column="23">&amp;<pos:position pos:line="35" pos:column="28"/></operator> <name pos:line="35" pos:column="25">APR_FINFO_GROUP<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">)<pos:position pos:line="35" pos:column="41"/></operator></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42"> <block pos:line="35" pos:column="43">{
        <expr_stmt><expr><name pos:line="36" pos:column="9">reason<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <literal type="string" pos:line="36" pos:column="18">"no file group information available"<pos:position pos:line="36" pos:column="55"/></literal></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">ap_log_rerror<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name pos:line="37" pos:column="23">APLOG_MARK<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="35">APLOG_ERR<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="46">status<pos:position pos:line="37" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="54">r<pos:position pos:line="37" pos:column="55"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="38" pos:column="23">"Authorization of user %s to access %s failed, reason: %s"<pos:position pos:line="38" pos:column="81"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="39" pos:column="23">r<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">-&gt;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="26">user<pos:position pos:line="39" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="32">r<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">-&gt;<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="35">uri<pos:position pos:line="39" pos:column="38"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="39" pos:column="40">reason<pos:position pos:line="39" pos:column="46"/></name></expr> ?<pos:position pos:line="39" pos:column="48"/></condition><then pos:line="39" pos:column="48"> <expr><name pos:line="39" pos:column="49">reason<pos:position pos:line="39" pos:column="55"/></name></expr> <pos:position pos:line="39" pos:column="56"/></then><else pos:line="39" pos:column="56">: <expr><literal type="string" pos:line="39" pos:column="58">"unknown"<pos:position pos:line="39" pos:column="67"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="69"/></expr_stmt>
        <return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">NULL<pos:position pos:line="40" pos:column="20"/></name></expr>;<pos:position pos:line="40" pos:column="21"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="43" pos:column="5">status<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <call><name pos:line="43" pos:column="14">apr_gid_name_get<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><operator pos:line="43" pos:column="31">&amp;<pos:position pos:line="43" pos:column="36"/></operator><name pos:line="43" pos:column="32">group<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="39">finfo<pos:position pos:line="43" pos:column="44"/></name><operator pos:line="43" pos:column="44">.<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="45">group<pos:position pos:line="43" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="52">r<pos:position pos:line="43" pos:column="53"/></name><operator pos:line="43" pos:column="53">-&gt;<pos:position pos:line="43" pos:column="58"/></operator><name pos:line="43" pos:column="55">pool<pos:position pos:line="43" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">status<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">!=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">APR_SUCCESS<pos:position pos:line="44" pos:column="30"/></name> <operator pos:line="44" pos:column="31">||<pos:position pos:line="44" pos:column="33"/></operator> <operator pos:line="44" pos:column="34">!<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="35">group<pos:position pos:line="44" pos:column="40"/></name></expr>)<pos:position pos:line="44" pos:column="41"/></condition><then pos:line="44" pos:column="41"> <block pos:line="44" pos:column="42">{
        <expr_stmt><expr><name pos:line="45" pos:column="9">reason<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <literal type="string" pos:line="45" pos:column="18">"could not get name of file group"<pos:position pos:line="45" pos:column="52"/></literal></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">ap_log_rerror<pos:position pos:line="46" pos:column="22"/></name><argument_list pos:line="46" pos:column="22">(<argument><expr><name pos:line="46" pos:column="23">APLOG_MARK<pos:position pos:line="46" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="35">APLOG_ERR<pos:position pos:line="46" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="46">status<pos:position pos:line="46" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="54">r<pos:position pos:line="46" pos:column="55"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="47" pos:column="23">"Authorization of user %s to access %s failed, reason: %s"<pos:position pos:line="47" pos:column="81"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="48" pos:column="23">r<pos:position pos:line="48" pos:column="24"/></name><operator pos:line="48" pos:column="24">-&gt;<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="26">user<pos:position pos:line="48" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="32">r<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">-&gt;<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="35">uri<pos:position pos:line="48" pos:column="38"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="48" pos:column="40">reason<pos:position pos:line="48" pos:column="46"/></name></expr> ?<pos:position pos:line="48" pos:column="48"/></condition><then pos:line="48" pos:column="48"> <expr><name pos:line="48" pos:column="49">reason<pos:position pos:line="48" pos:column="55"/></name></expr> <pos:position pos:line="48" pos:column="56"/></then><else pos:line="48" pos:column="56">: <expr><literal type="string" pos:line="48" pos:column="58">"unknown"<pos:position pos:line="48" pos:column="67"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="48" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="69"/></expr_stmt>
        <return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">NULL<pos:position pos:line="49" pos:column="20"/></name></expr>;<pos:position pos:line="49" pos:column="21"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <return pos:line="52" pos:column="5">return <expr><name pos:line="52" pos:column="12">group<pos:position pos:line="52" pos:column="17"/></name></expr>;<pos:position pos:line="52" pos:column="18"/></return>
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="53" pos:column="8">/* APR_HAS_USER */</comment>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

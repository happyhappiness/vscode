<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5032.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">process_socket<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">apr_thread_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">thd<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">apr_pool_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type> <name pos:line="1" pos:column="59">p<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">apr_socket_t<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type> <name pos:line="1" pos:column="77">sock<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">conn_state_t<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type> <name pos:line="2" pos:column="42">cs<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">int<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">my_child_num<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="3" pos:column="27">int<pos:position pos:line="3" pos:column="30"/></name></type> <name pos:line="3" pos:column="31">my_thread_num<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="45"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">conn_rec<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">c<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">listener_poll_type<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">pt<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">long<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">conn_id<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><call><name pos:line="7" pos:column="20">ID_FROM_CHILD_THREAD<pos:position pos:line="7" pos:column="40"/></name><argument_list pos:line="7" pos:column="40">(<argument><expr><name pos:line="7" pos:column="41">my_child_num<pos:position pos:line="7" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="55">my_thread_num<pos:position pos:line="7" pos:column="68"/></name></expr></argument>)<pos:position pos:line="7" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">rc<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ap_sb_handle_t<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">sbh<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ap_create_sb_handle<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><operator pos:line="11" pos:column="25">&amp;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="26">sbh<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="31">p<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">my_child_num<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">my_thread_num<pos:position pos:line="11" pos:column="61"/></name></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="63"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">cs<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">==<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">NULL<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20"> <block pos:line="13" pos:column="21">{           <comment type="block" pos:line="13" pos:column="33">/* This is a new connection */</comment>

        <expr_stmt><expr><name pos:line="15" pos:column="9">cs<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">apr_pcalloc<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">p<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="29">sizeof<argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">conn_state_t<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>

        <expr_stmt><expr><name pos:line="17" pos:column="9">pt<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">apr_pcalloc<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">p<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="29">sizeof<argument_list pos:line="17" pos:column="35">(<argument><expr><operator pos:line="17" pos:column="36">*<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">pt<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="19" pos:column="9">cs<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">bucket_alloc<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <call><name pos:line="19" pos:column="28">apr_bucket_alloc_create<pos:position pos:line="19" pos:column="51"/></name><argument_list pos:line="19" pos:column="51">(<argument><expr><name pos:line="19" pos:column="52">p<pos:position pos:line="19" pos:column="53"/></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">c<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <call><name pos:line="20" pos:column="13">ap_run_create_connection<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">p<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">ap_server_conf<pos:position pos:line="20" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="57">sock<pos:position pos:line="20" pos:column="61"/></name></expr></argument>,
                                     <argument><expr><name pos:line="21" pos:column="38">conn_id<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">sbh<pos:position pos:line="21" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="52">cs<pos:position pos:line="21" pos:column="54"/></name><operator pos:line="21" pos:column="54">-&gt;<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="56">bucket_alloc<pos:position pos:line="21" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">c<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">current_thread<pos:position pos:line="22" pos:column="26"/></name></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="29">thd<pos:position pos:line="22" pos:column="32"/></name></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">cs<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">c<pos:position pos:line="23" pos:column="14"/></name></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">c<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">c<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">cs<pos:position pos:line="24" pos:column="14"/></name></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">cs<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">cs<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">p<pos:position pos:line="25" pos:column="14"/></name></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">p<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">cs<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">pfd<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">.<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">desc_type<pos:position pos:line="26" pos:column="26"/></name></name> <operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator> <name pos:line="26" pos:column="29">APR_POLL_SOCKET<pos:position pos:line="26" pos:column="44"/></name></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">cs<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">pfd<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">.<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">reqevents<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <name pos:line="27" pos:column="29">APR_POLLIN<pos:position pos:line="27" pos:column="39"/></name></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">cs<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">pfd<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">.<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">desc<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">.<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">s<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <name pos:line="28" pos:column="26">sock<pos:position pos:line="28" pos:column="30"/></name></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">pt<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">type<pos:position pos:line="29" pos:column="17"/></name></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">PT_CSD<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">pt<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">bypass_push<pos:position pos:line="30" pos:column="24"/></name></name> <operator pos:line="30" pos:column="25">=<pos:position pos:line="30" pos:column="26"/></operator> <literal type="number" pos:line="30" pos:column="27">1<pos:position pos:line="30" pos:column="28"/></literal></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">pt<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">baton<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="21">cs<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="32" pos:column="9">cs<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">pfd<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">.<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">client_data<pos:position pos:line="32" pos:column="28"/></name></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="31">pt<pos:position pos:line="32" pos:column="33"/></name></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">APR_RING_ELEM_INIT<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">cs<pos:position pos:line="33" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="32">timeout_list<pos:position pos:line="33" pos:column="44"/></name></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ap_update_vhost_given_ip<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">c<pos:position pos:line="35" pos:column="35"/></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>

        <expr_stmt><expr><name pos:line="37" pos:column="9">rc<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <call><name pos:line="37" pos:column="14">ap_run_pre_connection<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">c<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="39">sock<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">rc<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">!=<pos:position pos:line="38" pos:column="18"/></operator> <name pos:line="38" pos:column="19">OK<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">&amp;&amp;<pos:position pos:line="38" pos:column="32"/></operator> <name pos:line="38" pos:column="25">rc<pos:position pos:line="38" pos:column="27"/></name> <operator pos:line="38" pos:column="28">!=<pos:position pos:line="38" pos:column="30"/></operator> <name pos:line="38" pos:column="31">DONE<pos:position pos:line="38" pos:column="35"/></name></expr>)<pos:position pos:line="38" pos:column="36"/></condition><then pos:line="38" pos:column="36"> <block pos:line="38" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">ap_log_error<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name pos:line="39" pos:column="26">APLOG_MARK<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">APLOG_DEBUG<pos:position pos:line="39" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="51">0<pos:position pos:line="39" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="54">ap_server_conf<pos:position pos:line="39" pos:column="68"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="40" pos:column="26">"process_socket: connection aborted"<pos:position pos:line="40" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">c<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">-&gt;<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="16">aborted<pos:position pos:line="41" pos:column="23"/></name></name> <operator pos:line="41" pos:column="24">=<pos:position pos:line="41" pos:column="25"/></operator> <literal type="number" pos:line="41" pos:column="26">1<pos:position pos:line="41" pos:column="27"/></literal></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>

        <comment type="block" format="doxygen" pos:line="44" pos:column="9">/**
         * XXX If the platform does not have a usable way of bundling
         * accept() with a socket readability check, like Win32,
         * and there are measurable delays before the
         * socket is readable due to the first data packet arriving,
         * it might be better to create the cs on the listener thread
         * with the state set to CONN_STATE_CHECK_REQUEST_LINE_READABLE
         *
         * FreeBSD users will want to enable the HTTP accept filter
         * module in their kernel for the highest performance
         * When the accept filter is active, sockets are kept in the
         * kernel until a HTTP request is received.
         */</comment>
        <expr_stmt><expr><name><name pos:line="57" pos:column="9">cs<pos:position pos:line="57" pos:column="11"/></name><operator pos:line="57" pos:column="11">-&gt;<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="13">state<pos:position pos:line="57" pos:column="18"/></name></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="21">CONN_STATE_READ_REQUEST_LINE<pos:position pos:line="57" pos:column="49"/></name></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt>

    }<pos:position pos:line="59" pos:column="6"/></block></then>
    <else pos:line="60" pos:column="5">else <block pos:line="60" pos:column="10">{
        <expr_stmt><expr><name pos:line="61" pos:column="9">c<pos:position pos:line="61" pos:column="10"/></name> <operator pos:line="61" pos:column="11">=<pos:position pos:line="61" pos:column="12"/></operator> <name><name pos:line="61" pos:column="13">cs<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">-&gt;<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="17">c<pos:position pos:line="61" pos:column="18"/></name></name></expr>;<pos:position pos:line="61" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">c<pos:position pos:line="62" pos:column="10"/></name><operator pos:line="62" pos:column="10">-&gt;<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="12">sbh<pos:position pos:line="62" pos:column="15"/></name></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <name pos:line="62" pos:column="18">sbh<pos:position pos:line="62" pos:column="21"/></name></expr>;<pos:position pos:line="62" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="63" pos:column="9">pt<pos:position pos:line="63" pos:column="11"/></name> <operator pos:line="63" pos:column="12">=<pos:position pos:line="63" pos:column="13"/></operator> <name><name pos:line="63" pos:column="14">cs<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">pfd<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">.<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="22">client_data<pos:position pos:line="63" pos:column="33"/></name></name></expr>;<pos:position pos:line="63" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="64" pos:column="9">c<pos:position pos:line="64" pos:column="10"/></name><operator pos:line="64" pos:column="10">-&gt;<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="12">current_thread<pos:position pos:line="64" pos:column="26"/></name></name> <operator pos:line="64" pos:column="27">=<pos:position pos:line="64" pos:column="28"/></operator> <name pos:line="64" pos:column="29">thd<pos:position pos:line="64" pos:column="32"/></name></expr>;<pos:position pos:line="64" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></else></if>

    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name><name pos:line="67" pos:column="9">c<pos:position pos:line="67" pos:column="10"/></name><operator pos:line="67" pos:column="10">-&gt;<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="12">clogging_input_filters<pos:position pos:line="67" pos:column="34"/></name></name> <operator pos:line="67" pos:column="35">&amp;&amp;<pos:position pos:line="67" pos:column="45"/></operator> <operator pos:line="67" pos:column="38">!<pos:position pos:line="67" pos:column="39"/></operator><name><name pos:line="67" pos:column="39">c<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">-&gt;<pos:position pos:line="67" pos:column="45"/></operator><name pos:line="67" pos:column="42">aborted<pos:position pos:line="67" pos:column="49"/></name></name></expr>)<pos:position pos:line="67" pos:column="50"/></condition><then pos:line="67" pos:column="50"> <block pos:line="67" pos:column="51">{
        <comment type="block" pos:line="68" pos:column="9">/* Since we have an input filter which 'cloggs' the input stream,
         * like mod_ssl, lets just do the normal read from input filters,
         * like the Worker MPM does.
         */</comment>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">ap_run_process_connection<pos:position pos:line="72" pos:column="34"/></name><argument_list pos:line="72" pos:column="34">(<argument><expr><name pos:line="72" pos:column="35">c<pos:position pos:line="72" pos:column="36"/></name></expr></argument>)<pos:position pos:line="72" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="38"/></expr_stmt>
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name><name pos:line="73" pos:column="13">cs<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">-&gt;<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="17">state<pos:position pos:line="73" pos:column="22"/></name></name> <operator pos:line="73" pos:column="23">!=<pos:position pos:line="73" pos:column="25"/></operator> <name pos:line="73" pos:column="26">CONN_STATE_SUSPENDED<pos:position pos:line="73" pos:column="46"/></name></expr>)<pos:position pos:line="73" pos:column="47"/></condition><then pos:line="73" pos:column="47"> <block pos:line="73" pos:column="48">{
            <expr_stmt><expr><name><name pos:line="74" pos:column="13">cs<pos:position pos:line="74" pos:column="15"/></name><operator pos:line="74" pos:column="15">-&gt;<pos:position pos:line="74" pos:column="20"/></operator><name pos:line="74" pos:column="17">state<pos:position pos:line="74" pos:column="22"/></name></name> <operator pos:line="74" pos:column="23">=<pos:position pos:line="74" pos:column="24"/></operator> <name pos:line="74" pos:column="25">CONN_STATE_LINGER<pos:position pos:line="74" pos:column="42"/></name></expr>;<pos:position pos:line="74" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="75" pos:column="10"/></block></then></if>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

<label><name pos:line="78" pos:column="1">read_request<pos:position pos:line="78" pos:column="13"/></name>:<pos:position pos:line="78" pos:column="14"/></label>
    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name><name pos:line="79" pos:column="9">cs<pos:position pos:line="79" pos:column="11"/></name><operator pos:line="79" pos:column="11">-&gt;<pos:position pos:line="79" pos:column="16"/></operator><name pos:line="79" pos:column="13">state<pos:position pos:line="79" pos:column="18"/></name></name> <operator pos:line="79" pos:column="19">==<pos:position pos:line="79" pos:column="21"/></operator> <name pos:line="79" pos:column="22">CONN_STATE_READ_REQUEST_LINE<pos:position pos:line="79" pos:column="50"/></name></expr>)<pos:position pos:line="79" pos:column="51"/></condition><then pos:line="79" pos:column="51"> <block pos:line="79" pos:column="52">{
        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><operator pos:line="80" pos:column="13">!<pos:position pos:line="80" pos:column="14"/></operator><name><name pos:line="80" pos:column="14">c<pos:position pos:line="80" pos:column="15"/></name><operator pos:line="80" pos:column="15">-&gt;<pos:position pos:line="80" pos:column="20"/></operator><name pos:line="80" pos:column="17">aborted<pos:position pos:line="80" pos:column="24"/></name></name></expr>)<pos:position pos:line="80" pos:column="25"/></condition><then pos:line="80" pos:column="25"> <block pos:line="80" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="81" pos:column="13">ap_run_process_connection<pos:position pos:line="81" pos:column="38"/></name><argument_list pos:line="81" pos:column="38">(<argument><expr><name pos:line="81" pos:column="39">c<pos:position pos:line="81" pos:column="40"/></name></expr></argument>)<pos:position pos:line="81" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="42"/></expr_stmt>

            <comment type="block" pos:line="83" pos:column="13">/* state will be updated upon return
             * fall thru to either wait for readability/timeout or
             * do lingering close
             */</comment>
        }<pos:position pos:line="87" pos:column="10"/></block></then>
        <else pos:line="88" pos:column="9">else <block pos:line="88" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="89" pos:column="13">cs<pos:position pos:line="89" pos:column="15"/></name><operator pos:line="89" pos:column="15">-&gt;<pos:position pos:line="89" pos:column="20"/></operator><name pos:line="89" pos:column="17">state<pos:position pos:line="89" pos:column="22"/></name></name> <operator pos:line="89" pos:column="23">=<pos:position pos:line="89" pos:column="24"/></operator> <name pos:line="89" pos:column="25">CONN_STATE_LINGER<pos:position pos:line="89" pos:column="42"/></name></expr>;<pos:position pos:line="89" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></else></if>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><name><name pos:line="93" pos:column="9">cs<pos:position pos:line="93" pos:column="11"/></name><operator pos:line="93" pos:column="11">-&gt;<pos:position pos:line="93" pos:column="16"/></operator><name pos:line="93" pos:column="13">state<pos:position pos:line="93" pos:column="18"/></name></name> <operator pos:line="93" pos:column="19">==<pos:position pos:line="93" pos:column="21"/></operator> <name pos:line="93" pos:column="22">CONN_STATE_WRITE_COMPLETION<pos:position pos:line="93" pos:column="49"/></name></expr>)<pos:position pos:line="93" pos:column="50"/></condition><then pos:line="93" pos:column="50"> <block pos:line="93" pos:column="51">{
        <decl_stmt><decl><type><name pos:line="94" pos:column="9">ap_filter_t<pos:position pos:line="94" pos:column="20"/></name> <modifier pos:line="94" pos:column="21">*<pos:position pos:line="94" pos:column="22"/></modifier></type><name pos:line="94" pos:column="22">output_filter<pos:position pos:line="94" pos:column="35"/></name> <init pos:line="94" pos:column="36">= <expr><name><name pos:line="94" pos:column="38">c<pos:position pos:line="94" pos:column="39"/></name><operator pos:line="94" pos:column="39">-&gt;<pos:position pos:line="94" pos:column="44"/></operator><name pos:line="94" pos:column="41">output_filters<pos:position pos:line="94" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="94" pos:column="56"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="95" pos:column="9">apr_status_t<pos:position pos:line="95" pos:column="21"/></name></type> <name pos:line="95" pos:column="22">rv<pos:position pos:line="95" pos:column="24"/></name></decl>;<pos:position pos:line="95" pos:column="25"/></decl_stmt>
        <while pos:line="96" pos:column="9">while <condition pos:line="96" pos:column="15">(<expr><name><name pos:line="96" pos:column="16">output_filter<pos:position pos:line="96" pos:column="29"/></name><operator pos:line="96" pos:column="29">-&gt;<pos:position pos:line="96" pos:column="34"/></operator><name pos:line="96" pos:column="31">next<pos:position pos:line="96" pos:column="35"/></name></name> <operator pos:line="96" pos:column="36">!=<pos:position pos:line="96" pos:column="38"/></operator> <name pos:line="96" pos:column="39">NULL<pos:position pos:line="96" pos:column="43"/></name></expr>)<pos:position pos:line="96" pos:column="44"/></condition> <block pos:line="96" pos:column="45">{
            <expr_stmt><expr><name pos:line="97" pos:column="13">output_filter<pos:position pos:line="97" pos:column="26"/></name> <operator pos:line="97" pos:column="27">=<pos:position pos:line="97" pos:column="28"/></operator> <name><name pos:line="97" pos:column="29">output_filter<pos:position pos:line="97" pos:column="42"/></name><operator pos:line="97" pos:column="42">-&gt;<pos:position pos:line="97" pos:column="47"/></operator><name pos:line="97" pos:column="44">next<pos:position pos:line="97" pos:column="48"/></name></name></expr>;<pos:position pos:line="97" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="98" pos:column="10"/></block></while>
        <expr_stmt><expr><name pos:line="99" pos:column="9">rv<pos:position pos:line="99" pos:column="11"/></name> <operator pos:line="99" pos:column="12">=<pos:position pos:line="99" pos:column="13"/></operator> <call><name><name pos:line="99" pos:column="14">output_filter<pos:position pos:line="99" pos:column="27"/></name><operator pos:line="99" pos:column="27">-&gt;<pos:position pos:line="99" pos:column="32"/></operator><name pos:line="99" pos:column="29">frec<pos:position pos:line="99" pos:column="33"/></name><operator pos:line="99" pos:column="33">-&gt;<pos:position pos:line="99" pos:column="38"/></operator><name pos:line="99" pos:column="35">filter_func<pos:position pos:line="99" pos:column="46"/></name><operator pos:line="99" pos:column="46">.<pos:position pos:line="99" pos:column="47"/></operator><name pos:line="99" pos:column="47">out_func<pos:position pos:line="99" pos:column="55"/></name></name><argument_list pos:line="99" pos:column="55">(<argument><expr><name pos:line="99" pos:column="56">output_filter<pos:position pos:line="99" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="71">NULL<pos:position pos:line="99" pos:column="75"/></name></expr></argument>)<pos:position pos:line="99" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="77"/></expr_stmt>
        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">rv<pos:position pos:line="100" pos:column="15"/></name> <operator pos:line="100" pos:column="16">!=<pos:position pos:line="100" pos:column="18"/></operator> <name pos:line="100" pos:column="19">APR_SUCCESS<pos:position pos:line="100" pos:column="30"/></name></expr>)<pos:position pos:line="100" pos:column="31"/></condition><then pos:line="100" pos:column="31"> <block pos:line="100" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">ap_log_error<pos:position pos:line="101" pos:column="25"/></name><argument_list pos:line="101" pos:column="25">(<argument><expr><name pos:line="101" pos:column="26">APLOG_MARK<pos:position pos:line="101" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="38">APLOG_WARNING<pos:position pos:line="101" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="53">rv<pos:position pos:line="101" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="57">ap_server_conf<pos:position pos:line="101" pos:column="71"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="102" pos:column="22">"network write failure in core output filter"<pos:position pos:line="102" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="103" pos:column="13">cs<pos:position pos:line="103" pos:column="15"/></name><operator pos:line="103" pos:column="15">-&gt;<pos:position pos:line="103" pos:column="20"/></operator><name pos:line="103" pos:column="17">state<pos:position pos:line="103" pos:column="22"/></name></name> <operator pos:line="103" pos:column="23">=<pos:position pos:line="103" pos:column="24"/></operator> <name pos:line="103" pos:column="25">CONN_STATE_LINGER<pos:position pos:line="103" pos:column="42"/></name></expr>;<pos:position pos:line="103" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="104" pos:column="10"/></block></then>
        <elseif pos:line="105" pos:column="9">else <if pos:line="105" pos:column="14">if <condition pos:line="105" pos:column="17">(<expr><name><name pos:line="105" pos:column="18">c<pos:position pos:line="105" pos:column="19"/></name><operator pos:line="105" pos:column="19">-&gt;<pos:position pos:line="105" pos:column="24"/></operator><name pos:line="105" pos:column="21">data_in_output_filters<pos:position pos:line="105" pos:column="43"/></name></name></expr>)<pos:position pos:line="105" pos:column="44"/></condition><then pos:line="105" pos:column="44"> <block pos:line="105" pos:column="45">{
            <comment type="block" pos:line="106" pos:column="13">/* Still in WRITE_COMPLETION_STATE:
             * Set a write timeout for this connection, and let the
             * event thread poll for writeability.
             */</comment>
            <expr_stmt><expr><name><name pos:line="110" pos:column="13">cs<pos:position pos:line="110" pos:column="15"/></name><operator pos:line="110" pos:column="15">-&gt;<pos:position pos:line="110" pos:column="20"/></operator><name pos:line="110" pos:column="17">expiration_time<pos:position pos:line="110" pos:column="32"/></name></name> <operator pos:line="110" pos:column="33">=<pos:position pos:line="110" pos:column="34"/></operator> <name><name pos:line="110" pos:column="35">ap_server_conf<pos:position pos:line="110" pos:column="49"/></name><operator pos:line="110" pos:column="49">-&gt;<pos:position pos:line="110" pos:column="54"/></operator><name pos:line="110" pos:column="51">timeout<pos:position pos:line="110" pos:column="58"/></name></name> <operator pos:line="110" pos:column="59">+<pos:position pos:line="110" pos:column="60"/></operator> <call><name pos:line="110" pos:column="61">apr_time_now<pos:position pos:line="110" pos:column="73"/></name><argument_list pos:line="110" pos:column="73">()<pos:position pos:line="110" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="111" pos:column="13">apr_thread_mutex_lock<pos:position pos:line="111" pos:column="34"/></name><argument_list pos:line="111" pos:column="34">(<argument><expr><name pos:line="111" pos:column="35">timeout_mutex<pos:position pos:line="111" pos:column="48"/></name></expr></argument>)<pos:position pos:line="111" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="112" pos:column="13">APR_RING_INSERT_TAIL<pos:position pos:line="112" pos:column="33"/></name><argument_list pos:line="112" pos:column="33">(<argument><expr><operator pos:line="112" pos:column="34">&amp;<pos:position pos:line="112" pos:column="39"/></operator><name pos:line="112" pos:column="35">timeout_head<pos:position pos:line="112" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="49">cs<pos:position pos:line="112" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="53">conn_state_t<pos:position pos:line="112" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="67">timeout_list<pos:position pos:line="112" pos:column="79"/></name></expr></argument>)<pos:position pos:line="112" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="113" pos:column="13">apr_thread_mutex_unlock<pos:position pos:line="113" pos:column="36"/></name><argument_list pos:line="113" pos:column="36">(<argument><expr><name pos:line="113" pos:column="37">timeout_mutex<pos:position pos:line="113" pos:column="50"/></name></expr></argument>)<pos:position pos:line="113" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="114" pos:column="13">pt<pos:position pos:line="114" pos:column="15"/></name><operator pos:line="114" pos:column="15">-&gt;<pos:position pos:line="114" pos:column="20"/></operator><name pos:line="114" pos:column="17">bypass_push<pos:position pos:line="114" pos:column="28"/></name></name> <operator pos:line="114" pos:column="29">=<pos:position pos:line="114" pos:column="30"/></operator> <literal type="number" pos:line="114" pos:column="31">0<pos:position pos:line="114" pos:column="32"/></literal></expr>;<pos:position pos:line="114" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="115" pos:column="13">cs<pos:position pos:line="115" pos:column="15"/></name><operator pos:line="115" pos:column="15">-&gt;<pos:position pos:line="115" pos:column="20"/></operator><name pos:line="115" pos:column="17">pfd<pos:position pos:line="115" pos:column="20"/></name><operator pos:line="115" pos:column="20">.<pos:position pos:line="115" pos:column="21"/></operator><name pos:line="115" pos:column="21">reqevents<pos:position pos:line="115" pos:column="30"/></name></name> <operator pos:line="115" pos:column="31">=<pos:position pos:line="115" pos:column="32"/></operator> <name pos:line="115" pos:column="33">APR_POLLOUT<pos:position pos:line="115" pos:column="44"/></name> <operator pos:line="115" pos:column="45">|<pos:position pos:line="115" pos:column="46"/></operator> <name pos:line="115" pos:column="47">APR_POLLHUP<pos:position pos:line="115" pos:column="58"/></name> <operator pos:line="115" pos:column="59">|<pos:position pos:line="115" pos:column="60"/></operator> <name pos:line="115" pos:column="61">APR_POLLERR<pos:position pos:line="115" pos:column="72"/></name></expr>;<pos:position pos:line="115" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><name pos:line="116" pos:column="13">rc<pos:position pos:line="116" pos:column="15"/></name> <operator pos:line="116" pos:column="16">=<pos:position pos:line="116" pos:column="17"/></operator> <call><name pos:line="116" pos:column="18">apr_pollset_add<pos:position pos:line="116" pos:column="33"/></name><argument_list pos:line="116" pos:column="33">(<argument><expr><name pos:line="116" pos:column="34">event_pollset<pos:position pos:line="116" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="116" pos:column="49">&amp;<pos:position pos:line="116" pos:column="54"/></operator><name><name pos:line="116" pos:column="50">cs<pos:position pos:line="116" pos:column="52"/></name><operator pos:line="116" pos:column="52">-&gt;<pos:position pos:line="116" pos:column="57"/></operator><name pos:line="116" pos:column="54">pfd<pos:position pos:line="116" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="59"/></expr_stmt>
            <return pos:line="117" pos:column="13">return <expr><literal type="number" pos:line="117" pos:column="20">1<pos:position pos:line="117" pos:column="21"/></literal></expr>;<pos:position pos:line="117" pos:column="22"/></return>
        }<pos:position pos:line="118" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="119" pos:column="9">else <if pos:line="119" pos:column="14">if <condition pos:line="119" pos:column="17">(<expr><name><name pos:line="119" pos:column="18">c<pos:position pos:line="119" pos:column="19"/></name><operator pos:line="119" pos:column="19">-&gt;<pos:position pos:line="119" pos:column="24"/></operator><name pos:line="119" pos:column="21">keepalive<pos:position pos:line="119" pos:column="30"/></name></name> <operator pos:line="119" pos:column="31">!=<pos:position pos:line="119" pos:column="33"/></operator> <name pos:line="119" pos:column="34">AP_CONN_KEEPALIVE<pos:position pos:line="119" pos:column="51"/></name> <operator pos:line="119" pos:column="52">||<pos:position pos:line="119" pos:column="54"/></operator> <name><name pos:line="119" pos:column="55">c<pos:position pos:line="119" pos:column="56"/></name><operator pos:line="119" pos:column="56">-&gt;<pos:position pos:line="119" pos:column="61"/></operator><name pos:line="119" pos:column="58">aborted<pos:position pos:line="119" pos:column="65"/></name></name> <operator pos:line="119" pos:column="66">||<pos:position pos:line="119" pos:column="68"/></operator>
            <name pos:line="120" pos:column="13">listener_may_exit<pos:position pos:line="120" pos:column="30"/></name></expr>)<pos:position pos:line="120" pos:column="31"/></condition><then pos:line="120" pos:column="31"> <block pos:line="120" pos:column="32">{
            <expr_stmt><expr><name><name pos:line="121" pos:column="13">c<pos:position pos:line="121" pos:column="14"/></name><operator pos:line="121" pos:column="14">-&gt;<pos:position pos:line="121" pos:column="19"/></operator><name pos:line="121" pos:column="16">cs<pos:position pos:line="121" pos:column="18"/></name><operator pos:line="121" pos:column="18">-&gt;<pos:position pos:line="121" pos:column="23"/></operator><name pos:line="121" pos:column="20">state<pos:position pos:line="121" pos:column="25"/></name></name> <operator pos:line="121" pos:column="26">=<pos:position pos:line="121" pos:column="27"/></operator> <name pos:line="121" pos:column="28">CONN_STATE_LINGER<pos:position pos:line="121" pos:column="45"/></name></expr>;<pos:position pos:line="121" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="122" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="123" pos:column="9">else <if pos:line="123" pos:column="14">if <condition pos:line="123" pos:column="17">(<expr><name><name pos:line="123" pos:column="18">c<pos:position pos:line="123" pos:column="19"/></name><operator pos:line="123" pos:column="19">-&gt;<pos:position pos:line="123" pos:column="24"/></operator><name pos:line="123" pos:column="21">data_in_input_filters<pos:position pos:line="123" pos:column="42"/></name></name></expr>)<pos:position pos:line="123" pos:column="43"/></condition><then pos:line="123" pos:column="43"> <block pos:line="123" pos:column="44">{
            <expr_stmt><expr><name><name pos:line="124" pos:column="13">cs<pos:position pos:line="124" pos:column="15"/></name><operator pos:line="124" pos:column="15">-&gt;<pos:position pos:line="124" pos:column="20"/></operator><name pos:line="124" pos:column="17">state<pos:position pos:line="124" pos:column="22"/></name></name> <operator pos:line="124" pos:column="23">=<pos:position pos:line="124" pos:column="24"/></operator> <name pos:line="124" pos:column="25">CONN_STATE_READ_REQUEST_LINE<pos:position pos:line="124" pos:column="53"/></name></expr>;<pos:position pos:line="124" pos:column="54"/></expr_stmt>
            <goto pos:line="125" pos:column="13">goto <name pos:line="125" pos:column="18">read_request<pos:position pos:line="125" pos:column="30"/></name>;<pos:position pos:line="125" pos:column="31"/></goto>
        }<pos:position pos:line="126" pos:column="10"/></block></then></if></elseif>
        <else pos:line="127" pos:column="9">else <block pos:line="127" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="128" pos:column="13">cs<pos:position pos:line="128" pos:column="15"/></name><operator pos:line="128" pos:column="15">-&gt;<pos:position pos:line="128" pos:column="20"/></operator><name pos:line="128" pos:column="17">state<pos:position pos:line="128" pos:column="22"/></name></name> <operator pos:line="128" pos:column="23">=<pos:position pos:line="128" pos:column="24"/></operator> <name pos:line="128" pos:column="25">CONN_STATE_CHECK_REQUEST_LINE_READABLE<pos:position pos:line="128" pos:column="63"/></name></expr>;<pos:position pos:line="128" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="129" pos:column="10"/></block></else></if>
    }<pos:position pos:line="130" pos:column="6"/></block></then></if>

    <if pos:line="132" pos:column="5">if <condition pos:line="132" pos:column="8">(<expr><name><name pos:line="132" pos:column="9">cs<pos:position pos:line="132" pos:column="11"/></name><operator pos:line="132" pos:column="11">-&gt;<pos:position pos:line="132" pos:column="16"/></operator><name pos:line="132" pos:column="13">state<pos:position pos:line="132" pos:column="18"/></name></name> <operator pos:line="132" pos:column="19">==<pos:position pos:line="132" pos:column="21"/></operator> <name pos:line="132" pos:column="22">CONN_STATE_LINGER<pos:position pos:line="132" pos:column="39"/></name></expr>)<pos:position pos:line="132" pos:column="40"/></condition><then pos:line="132" pos:column="40"> <block pos:line="132" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="133" pos:column="9">ap_lingering_close<pos:position pos:line="133" pos:column="27"/></name><argument_list pos:line="133" pos:column="27">(<argument><expr><name pos:line="133" pos:column="28">c<pos:position pos:line="133" pos:column="29"/></name></expr></argument>)<pos:position pos:line="133" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="134" pos:column="9">apr_pool_clear<pos:position pos:line="134" pos:column="23"/></name><argument_list pos:line="134" pos:column="23">(<argument><expr><name pos:line="134" pos:column="24">p<pos:position pos:line="134" pos:column="25"/></name></expr></argument>)<pos:position pos:line="134" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="135" pos:column="9">ap_push_pool<pos:position pos:line="135" pos:column="21"/></name><argument_list pos:line="135" pos:column="21">(<argument><expr><name pos:line="135" pos:column="22">worker_queue_info<pos:position pos:line="135" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="41">p<pos:position pos:line="135" pos:column="42"/></name></expr></argument>)<pos:position pos:line="135" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="44"/></expr_stmt>
        <return pos:line="136" pos:column="9">return <expr><literal type="number" pos:line="136" pos:column="16">0<pos:position pos:line="136" pos:column="17"/></literal></expr>;<pos:position pos:line="136" pos:column="18"/></return>
    }<pos:position pos:line="137" pos:column="6"/></block></then>
    <elseif pos:line="138" pos:column="5">else <if pos:line="138" pos:column="10">if <condition pos:line="138" pos:column="13">(<expr><name><name pos:line="138" pos:column="14">cs<pos:position pos:line="138" pos:column="16"/></name><operator pos:line="138" pos:column="16">-&gt;<pos:position pos:line="138" pos:column="21"/></operator><name pos:line="138" pos:column="18">state<pos:position pos:line="138" pos:column="23"/></name></name> <operator pos:line="138" pos:column="24">==<pos:position pos:line="138" pos:column="26"/></operator> <name pos:line="138" pos:column="27">CONN_STATE_CHECK_REQUEST_LINE_READABLE<pos:position pos:line="138" pos:column="65"/></name></expr>)<pos:position pos:line="138" pos:column="66"/></condition><then pos:line="138" pos:column="66"> <block pos:line="138" pos:column="67">{
        <decl_stmt><decl><type><name pos:line="139" pos:column="9">apr_status_t<pos:position pos:line="139" pos:column="21"/></name></type> <name pos:line="139" pos:column="22">rc<pos:position pos:line="139" pos:column="24"/></name></decl>;<pos:position pos:line="139" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="140" pos:column="9">listener_poll_type<pos:position pos:line="140" pos:column="27"/></name> <modifier pos:line="140" pos:column="28">*<pos:position pos:line="140" pos:column="29"/></modifier></type><name pos:line="140" pos:column="29">pt<pos:position pos:line="140" pos:column="31"/></name> <init pos:line="140" pos:column="32">= <expr><operator pos:line="140" pos:column="34">(<pos:position pos:line="140" pos:column="35"/></operator><name pos:line="140" pos:column="35">listener_poll_type<pos:position pos:line="140" pos:column="53"/></name> <operator pos:line="140" pos:column="54">*<pos:position pos:line="140" pos:column="55"/></operator><operator pos:line="140" pos:column="55">)<pos:position pos:line="140" pos:column="56"/></operator> <name><name pos:line="140" pos:column="57">cs<pos:position pos:line="140" pos:column="59"/></name><operator pos:line="140" pos:column="59">-&gt;<pos:position pos:line="140" pos:column="64"/></operator><name pos:line="140" pos:column="61">pfd<pos:position pos:line="140" pos:column="64"/></name><operator pos:line="140" pos:column="64">.<pos:position pos:line="140" pos:column="65"/></operator><name pos:line="140" pos:column="65">client_data<pos:position pos:line="140" pos:column="76"/></name></name></expr></init></decl>;<pos:position pos:line="140" pos:column="77"/></decl_stmt>

        <comment type="block" pos:line="142" pos:column="9">/* It greatly simplifies the logic to use a single timeout value here
         * because the new element can just be added to the end of the list and
         * it will stay sorted in expiration time sequence.  If brand new
         * sockets are sent to the event thread for a readability check, this
         * will be a slight behavior change - they use the non-keepalive
         * timeout today.  With a normal client, the socket will be readable in
         * a few milliseconds anyway.
         */</comment>
        <expr_stmt><expr><name><name pos:line="150" pos:column="9">cs<pos:position pos:line="150" pos:column="11"/></name><operator pos:line="150" pos:column="11">-&gt;<pos:position pos:line="150" pos:column="16"/></operator><name pos:line="150" pos:column="13">expiration_time<pos:position pos:line="150" pos:column="28"/></name></name> <operator pos:line="150" pos:column="29">=<pos:position pos:line="150" pos:column="30"/></operator> <name><name pos:line="150" pos:column="31">ap_server_conf<pos:position pos:line="150" pos:column="45"/></name><operator pos:line="150" pos:column="45">-&gt;<pos:position pos:line="150" pos:column="50"/></operator><name pos:line="150" pos:column="47">keep_alive_timeout<pos:position pos:line="150" pos:column="65"/></name></name> <operator pos:line="150" pos:column="66">+<pos:position pos:line="150" pos:column="67"/></operator>
                              <call><name pos:line="151" pos:column="31">apr_time_now<pos:position pos:line="151" pos:column="43"/></name><argument_list pos:line="151" pos:column="43">()<pos:position pos:line="151" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="152" pos:column="9">apr_thread_mutex_lock<pos:position pos:line="152" pos:column="30"/></name><argument_list pos:line="152" pos:column="30">(<argument><expr><name pos:line="152" pos:column="31">timeout_mutex<pos:position pos:line="152" pos:column="44"/></name></expr></argument>)<pos:position pos:line="152" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="153" pos:column="9">APR_RING_INSERT_TAIL<pos:position pos:line="153" pos:column="29"/></name><argument_list pos:line="153" pos:column="29">(<argument><expr><operator pos:line="153" pos:column="30">&amp;<pos:position pos:line="153" pos:column="35"/></operator><name pos:line="153" pos:column="31">keepalive_timeout_head<pos:position pos:line="153" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="55">cs<pos:position pos:line="153" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="59">conn_state_t<pos:position pos:line="153" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="73">timeout_list<pos:position pos:line="153" pos:column="85"/></name></expr></argument>)<pos:position pos:line="153" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="154" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="154" pos:column="32"/></name><argument_list pos:line="154" pos:column="32">(<argument><expr><name pos:line="154" pos:column="33">timeout_mutex<pos:position pos:line="154" pos:column="46"/></name></expr></argument>)<pos:position pos:line="154" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="48"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="156" pos:column="9">pt<pos:position pos:line="156" pos:column="11"/></name><operator pos:line="156" pos:column="11">-&gt;<pos:position pos:line="156" pos:column="16"/></operator><name pos:line="156" pos:column="13">bypass_push<pos:position pos:line="156" pos:column="24"/></name></name> <operator pos:line="156" pos:column="25">=<pos:position pos:line="156" pos:column="26"/></operator> <literal type="number" pos:line="156" pos:column="27">0<pos:position pos:line="156" pos:column="28"/></literal></expr>;<pos:position pos:line="156" pos:column="29"/></expr_stmt>
        <comment type="block" pos:line="157" pos:column="9">/* Add work to pollset. */</comment>
        <expr_stmt><expr><name><name pos:line="158" pos:column="9">cs<pos:position pos:line="158" pos:column="11"/></name><operator pos:line="158" pos:column="11">-&gt;<pos:position pos:line="158" pos:column="16"/></operator><name pos:line="158" pos:column="13">pfd<pos:position pos:line="158" pos:column="16"/></name><operator pos:line="158" pos:column="16">.<pos:position pos:line="158" pos:column="17"/></operator><name pos:line="158" pos:column="17">reqevents<pos:position pos:line="158" pos:column="26"/></name></name> <operator pos:line="158" pos:column="27">=<pos:position pos:line="158" pos:column="28"/></operator> <name pos:line="158" pos:column="29">APR_POLLIN<pos:position pos:line="158" pos:column="39"/></name></expr>;<pos:position pos:line="158" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="159" pos:column="9">rc<pos:position pos:line="159" pos:column="11"/></name> <operator pos:line="159" pos:column="12">=<pos:position pos:line="159" pos:column="13"/></operator> <call><name pos:line="159" pos:column="14">apr_pollset_add<pos:position pos:line="159" pos:column="29"/></name><argument_list pos:line="159" pos:column="29">(<argument><expr><name pos:line="159" pos:column="30">event_pollset<pos:position pos:line="159" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="159" pos:column="45">&amp;<pos:position pos:line="159" pos:column="50"/></operator><name><name pos:line="159" pos:column="46">cs<pos:position pos:line="159" pos:column="48"/></name><operator pos:line="159" pos:column="48">-&gt;<pos:position pos:line="159" pos:column="53"/></operator><name pos:line="159" pos:column="50">pfd<pos:position pos:line="159" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="159" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="55"/></expr_stmt>

        <if pos:line="161" pos:column="9">if <condition pos:line="161" pos:column="12">(<expr><name pos:line="161" pos:column="13">rc<pos:position pos:line="161" pos:column="15"/></name> <operator pos:line="161" pos:column="16">!=<pos:position pos:line="161" pos:column="18"/></operator> <name pos:line="161" pos:column="19">APR_SUCCESS<pos:position pos:line="161" pos:column="30"/></name></expr>)<pos:position pos:line="161" pos:column="31"/></condition><then pos:line="161" pos:column="31"> <block pos:line="161" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="162" pos:column="13">ap_log_error<pos:position pos:line="162" pos:column="25"/></name><argument_list pos:line="162" pos:column="25">(<argument><expr><name pos:line="162" pos:column="26">APLOG_MARK<pos:position pos:line="162" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="38">APLOG_ERR<pos:position pos:line="162" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="49">rc<pos:position pos:line="162" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="53">ap_server_conf<pos:position pos:line="162" pos:column="67"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="163" pos:column="26">"process_socket: apr_pollset_add failure"<pos:position pos:line="163" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="164" pos:column="13">AP_DEBUG_ASSERT<pos:position pos:line="164" pos:column="28"/></name><argument_list pos:line="164" pos:column="28">(<argument><expr><name pos:line="164" pos:column="29">rc<pos:position pos:line="164" pos:column="31"/></name> <operator pos:line="164" pos:column="32">==<pos:position pos:line="164" pos:column="34"/></operator> <name pos:line="164" pos:column="35">APR_SUCCESS<pos:position pos:line="164" pos:column="46"/></name></expr></argument>)<pos:position pos:line="164" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="165" pos:column="10"/></block></then></if>
    }<pos:position pos:line="166" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="167" pos:column="5">return <expr><literal type="number" pos:line="167" pos:column="12">1<pos:position pos:line="167" pos:column="13"/></literal></expr>;<pos:position pos:line="167" pos:column="14"/></return>
}<pos:position pos:line="168" pos:column="2"/></block></function></unit>

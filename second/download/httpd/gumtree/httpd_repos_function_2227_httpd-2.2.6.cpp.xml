<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2227_httpd-2.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">LRESULT<pos:position pos:line="1" pos:column="15"/></name> <name pos:line="1" pos:column="16">CALLBACK<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">WndProc<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">HWND<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">hwnd<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">UINT<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">msg<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">WPARAM<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">wParam<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">LPARAM<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">lParam<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">WNDPROC<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">origproc<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><operator pos:line="4" pos:column="24">(<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">WNDPROC<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">)<pos:position pos:line="4" pos:column="33"/></operator> <call><name pos:line="4" pos:column="34">GetProp<pos:position pos:line="4" pos:column="41"/></name><argument_list pos:line="4" pos:column="41">(<argument><expr><name pos:line="4" pos:column="42">hwnd<pos:position pos:line="4" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="48">origwndprop<pos:position pos:line="4" pos:column="59"/></name></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="61"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">origproc<pos:position pos:line="5" pos:column="18"/></name></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return></block></then></if>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">msg<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">==<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">WM_NCDESTROY<pos:position pos:line="8" pos:column="28"/></name>
        <operator pos:line="9" pos:column="9">||<pos:position pos:line="9" pos:column="11"/></operator> <operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">msg<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">==<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">hookwndmsg<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">&amp;&amp;<pos:position pos:line="9" pos:column="41"/></operator> <operator pos:line="9" pos:column="34">!<pos:position pos:line="9" pos:column="35"/></operator><call><name pos:line="9" pos:column="35">LOWORD<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name pos:line="9" pos:column="42">wParam<pos:position pos:line="9" pos:column="48"/></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call> <operator pos:line="9" pos:column="50">&amp;&amp;<pos:position pos:line="9" pos:column="60"/></operator> <operator pos:line="9" pos:column="53">(<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="54">HWND<pos:position pos:line="9" pos:column="58"/></name><operator pos:line="9" pos:column="58">)<pos:position pos:line="9" pos:column="59"/></operator><name pos:line="9" pos:column="59">lParam<pos:position pos:line="9" pos:column="65"/></name> <operator pos:line="9" pos:column="66">==<pos:position pos:line="9" pos:column="68"/></operator> <name pos:line="9" pos:column="69">hwnd<pos:position pos:line="9" pos:column="73"/></name><operator pos:line="9" pos:column="73">)<pos:position pos:line="9" pos:column="74"/></operator></expr>)<pos:position pos:line="9" pos:column="75"/></condition><then pos:line="9" pos:column="75">
    <block pos:line="10" pos:column="5">{
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">is_subclassed<pos:position pos:line="11" pos:column="26"/></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27"> <block pos:line="11" pos:column="28">{
<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">DBG<pos:position pos:line="12" pos:column="11"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">DbgPrintf<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><literal type="string" pos:line="13" pos:column="23">"W proc %08x hwnd:%08x Subclass removed\r\n"<pos:position pos:line="13" pos:column="67"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="14" pos:column="23">GetCurrentProcessId<pos:position pos:line="14" pos:column="42"/></name><argument_list pos:line="14" pos:column="42">()<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="46">hwnd<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><name pos:line="16" pos:column="17">is_service<pos:position pos:line="16" pos:column="27"/></name></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">RegisterWindows9xService<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><name pos:line="17" pos:column="42">FALSE<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">SetWindowLong<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">hwnd<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">GWL_WNDPROC<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="46">(<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="47">LONG<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">)<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="52">origproc<pos:position pos:line="18" pos:column="60"/></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">RemoveProp<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">hwnd<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">origwndprop<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">RemoveProp<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">hwnd<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="30">hookwndprop<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name pos:line="21" pos:column="13">is_subclassed<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">FALSE<pos:position pos:line="21" pos:column="34"/></name></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
            <comment type="line" pos:line="22" pos:column="13">//if (hmodLock)</comment>
            <comment type="line" pos:line="23" pos:column="13">//    FreeLibrary(hmodLock);</comment>
            <comment type="line" pos:line="24" pos:column="13">//hmodLock = NULL;</comment>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><name pos:line="27" pos:column="14">msg<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">==<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">WM_CLOSE<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">||<pos:position pos:line="27" pos:column="32"/></operator> <name pos:line="27" pos:column="33">msg<pos:position pos:line="27" pos:column="36"/></name> <operator pos:line="27" pos:column="37">==<pos:position pos:line="27" pos:column="39"/></operator> <name pos:line="27" pos:column="40">WM_ENDSESSION<pos:position pos:line="27" pos:column="53"/></name>
                             <operator pos:line="28" pos:column="30">||<pos:position pos:line="28" pos:column="32"/></operator> <name pos:line="28" pos:column="33">msg<pos:position pos:line="28" pos:column="36"/></name> <operator pos:line="28" pos:column="37">==<pos:position pos:line="28" pos:column="39"/></operator> <name pos:line="28" pos:column="40">WM_QUERYENDSESSION<pos:position pos:line="28" pos:column="58"/></name></expr>)<pos:position pos:line="28" pos:column="59"/></condition><then pos:line="28" pos:column="59">
    <block pos:line="29" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="30" pos:column="9">HWND<pos:position pos:line="30" pos:column="13"/></name></type> <name pos:line="30" pos:column="14">child<pos:position pos:line="30" pos:column="19"/></name> <init pos:line="30" pos:column="20">= <expr><operator pos:line="30" pos:column="22">(<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="23">HWND<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">)<pos:position pos:line="30" pos:column="28"/></operator><call><name pos:line="30" pos:column="28">GetProp<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name pos:line="30" pos:column="36">hwnd<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="42">hookwndprop<pos:position pos:line="30" pos:column="53"/></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="55"/></decl_stmt>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">child<pos:position pos:line="31" pos:column="18"/></name></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19"> <block pos:line="31" pos:column="20">{
<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef<pos:position pos:line="32" pos:column="7"/></cpp:directive> <name pos:line="32" pos:column="8">DBG<pos:position pos:line="32" pos:column="11"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">DbgPrintf<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><literal type="string" pos:line="33" pos:column="23">"W proc %08x hwnd:%08x forwarded msg:%d\r\n"<pos:position pos:line="33" pos:column="67"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="34" pos:column="23">GetCurrentProcessId<pos:position pos:line="34" pos:column="42"/></name><argument_list pos:line="34" pos:column="42">()<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">hwnd<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="52">msg<pos:position pos:line="34" pos:column="55"/></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
            <return pos:line="36" pos:column="13">return <expr><call><name pos:line="36" pos:column="20">SendMessage<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">child<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="39">msg<pos:position pos:line="36" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="44">wParam<pos:position pos:line="36" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="52">lParam<pos:position pos:line="36" pos:column="58"/></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></return>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="39" pos:column="5">return <expr><call><name pos:line="39" pos:column="12">CallWindowProc<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">origproc<pos:position pos:line="39" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="37">hwnd<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">msg<pos:position pos:line="39" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="48">wParam<pos:position pos:line="39" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="56">lParam<pos:position pos:line="39" pos:column="62"/></name></expr></argument>)<pos:position pos:line="39" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="64"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3358_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">warrsztoastr<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier> <specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">retarr<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">wchar_t<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type> <name pos:line="2" pos:column="41">arrsz<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">args<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">apr_wchar_t<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">wch<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">totlen<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">newlen<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">wsize<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier><modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">newarr<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">arg<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">args<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&lt;<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18"> <block pos:line="11" pos:column="19">{
        <for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">args<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <literal type="number" pos:line="12" pos:column="21">1<pos:position pos:line="12" pos:column="22"/></literal></expr><operator pos:line="12" pos:column="22">,<pos:position pos:line="12" pos:column="23"/></operator> <expr><name pos:line="12" pos:column="24">wch<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">=<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">arrsz<pos:position pos:line="12" pos:column="35"/></name></expr>;<pos:position pos:line="12" pos:column="36"/></init> <condition><expr><name><name pos:line="12" pos:column="37">wch<pos:position pos:line="12" pos:column="40"/></name><index pos:line="12" pos:column="40">[<expr><literal type="number" pos:line="12" pos:column="41">0<pos:position pos:line="12" pos:column="42"/></literal></expr>]<pos:position pos:line="12" pos:column="43"/></index></name> <operator pos:line="12" pos:column="44">||<pos:position pos:line="12" pos:column="46"/></operator> <name><name pos:line="12" pos:column="47">wch<pos:position pos:line="12" pos:column="50"/></name><index pos:line="12" pos:column="50">[<expr><literal type="number" pos:line="12" pos:column="51">1<pos:position pos:line="12" pos:column="52"/></literal></expr>]<pos:position pos:line="12" pos:column="53"/></index></name></expr>;<pos:position pos:line="12" pos:column="54"/></condition> <incr><expr><operator pos:line="12" pos:column="55">++<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="57">wch<pos:position pos:line="12" pos:column="60"/></name></expr></incr>)<pos:position pos:line="12" pos:column="61"/></control>
            <block type="pseudo"><if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><operator pos:line="13" pos:column="17">!<pos:position pos:line="13" pos:column="18"/></operator><operator pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">wch<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="17">++<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">args<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt></block></then></if></block></for>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="16" pos:column="5">wsize<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal> <operator pos:line="16" pos:column="15">+<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">wch<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">-<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">arrsz<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">newarr<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">apr_malloc_dbg<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><operator pos:line="18" pos:column="29">(<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">args<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">+<pos:position pos:line="18" pos:column="36"/></operator> <literal type="number" pos:line="18" pos:column="37">1<pos:position pos:line="18" pos:column="38"/></literal><operator pos:line="18" pos:column="38">)<pos:position pos:line="18" pos:column="39"/></operator> <operator pos:line="18" pos:column="40">*<pos:position pos:line="18" pos:column="41"/></operator> <sizeof pos:line="18" pos:column="42">sizeof<argument_list pos:line="18" pos:column="48">(<argument><expr><name pos:line="18" pos:column="49">char<pos:position pos:line="18" pos:column="53"/></name> <operator pos:line="18" pos:column="54">*<pos:position pos:line="18" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></sizeof></expr></argument>,
                            <argument><expr><name pos:line="19" pos:column="29">__FILE__<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">__LINE__<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* This is a safe max allocation, we will realloc after
     * processing and return the excess to the free store.
     * 3 ucs bytes hold any single wchar_t value (16 bits)
     * 4 ucs bytes will hold a wchar_t pair value (20 bits)
     */</comment>
    <expr_stmt><expr><name pos:line="26" pos:column="5">newlen<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">totlen<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">wsize<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">*<pos:position pos:line="26" pos:column="30"/></operator> <literal type="number" pos:line="26" pos:column="31">3<pos:position pos:line="26" pos:column="32"/></literal> <operator pos:line="26" pos:column="33">+<pos:position pos:line="26" pos:column="34"/></operator> <literal type="number" pos:line="26" pos:column="35">1<pos:position pos:line="26" pos:column="36"/></literal></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">newarr<pos:position pos:line="27" pos:column="11"/></name><index pos:line="27" pos:column="11">[<expr><literal type="number" pos:line="27" pos:column="12">0<pos:position pos:line="27" pos:column="13"/></literal></expr>]<pos:position pos:line="27" pos:column="14"/></index></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <call><name pos:line="27" pos:column="17">apr_malloc_dbg<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">newlen<pos:position pos:line="27" pos:column="38"/></name> <operator pos:line="27" pos:column="39">*<pos:position pos:line="27" pos:column="40"/></operator> <sizeof pos:line="27" pos:column="41">sizeof<argument_list pos:line="27" pos:column="47">(<argument><expr><name pos:line="27" pos:column="48">char<pos:position pos:line="27" pos:column="52"/></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></sizeof></expr></argument>,
                               <argument><expr><name pos:line="28" pos:column="32">__FILE__<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">__LINE__<pos:position pos:line="28" pos:column="50"/></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="30" pos:column="5">(<pos:position pos:line="30" pos:column="6"/></operator><name pos:line="30" pos:column="6">void<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">)<pos:position pos:line="30" pos:column="11"/></operator><call><name pos:line="30" pos:column="11">apr_conv_ucs2_to_utf8<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name pos:line="30" pos:column="33">arrsz<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="40">&amp;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="41">wsize<pos:position pos:line="30" pos:column="46"/></name></expr></argument>,
                                <argument><expr><name><name pos:line="31" pos:column="33">newarr<pos:position pos:line="31" pos:column="39"/></name><index pos:line="31" pos:column="39">[<expr><literal type="number" pos:line="31" pos:column="40">0<pos:position pos:line="31" pos:column="41"/></literal></expr>]<pos:position pos:line="31" pos:column="42"/></index></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="44">&amp;<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="45">newlen<pos:position pos:line="31" pos:column="51"/></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">assert<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><name pos:line="33" pos:column="12">newlen<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">&amp;&amp;<pos:position pos:line="33" pos:column="29"/></operator> <operator pos:line="33" pos:column="22">!<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">wsize<pos:position pos:line="33" pos:column="28"/></name></expr></argument>)<pos:position pos:line="33" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
    <comment type="block" pos:line="34" pos:column="5">/* Return to the free store if the heap realloc is the least bit optimized
     */</comment>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">newarr<pos:position pos:line="36" pos:column="11"/></name><index pos:line="36" pos:column="11">[<expr><literal type="number" pos:line="36" pos:column="12">0<pos:position pos:line="36" pos:column="13"/></literal></expr>]<pos:position pos:line="36" pos:column="14"/></index></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">apr_realloc_dbg<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name><name pos:line="36" pos:column="33">newarr<pos:position pos:line="36" pos:column="39"/></name><index pos:line="36" pos:column="39">[<expr><literal type="number" pos:line="36" pos:column="40">0<pos:position pos:line="36" pos:column="41"/></literal></expr>]<pos:position pos:line="36" pos:column="42"/></index></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="44">totlen<pos:position pos:line="36" pos:column="50"/></name> <operator pos:line="36" pos:column="51">-<pos:position pos:line="36" pos:column="52"/></operator> <name pos:line="36" pos:column="53">newlen<pos:position pos:line="36" pos:column="59"/></name></expr></argument>,
                                <argument><expr><name pos:line="37" pos:column="33">__FILE__<pos:position pos:line="37" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="43">__LINE__<pos:position pos:line="37" pos:column="51"/></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>

    <for pos:line="39" pos:column="5">for <control pos:line="39" pos:column="9">(<init><expr><name pos:line="39" pos:column="10">arg<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <literal type="number" pos:line="39" pos:column="16">1<pos:position pos:line="39" pos:column="17"/></literal></expr>;<pos:position pos:line="39" pos:column="18"/></init> <condition><expr><name pos:line="39" pos:column="19">arg<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">&lt;<pos:position pos:line="39" pos:column="27"/></operator> <name pos:line="39" pos:column="25">args<pos:position pos:line="39" pos:column="29"/></name></expr>;<pos:position pos:line="39" pos:column="30"/></condition> <incr><expr><operator pos:line="39" pos:column="31">++<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="33">arg<pos:position pos:line="39" pos:column="36"/></name></expr></incr>)<pos:position pos:line="39" pos:column="37"/></control> <block pos:line="39" pos:column="38">{
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">newarr<pos:position pos:line="40" pos:column="15"/></name><index pos:line="40" pos:column="15">[<expr><name pos:line="40" pos:column="16">arg<pos:position pos:line="40" pos:column="19"/></name></expr>]<pos:position pos:line="40" pos:column="20"/></index></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <name><name pos:line="40" pos:column="23">newarr<pos:position pos:line="40" pos:column="29"/></name><index pos:line="40" pos:column="29">[<expr><name pos:line="40" pos:column="30">arg<pos:position pos:line="40" pos:column="33"/></name> <operator pos:line="40" pos:column="34">-<pos:position pos:line="40" pos:column="35"/></operator> <literal type="number" pos:line="40" pos:column="36">1<pos:position pos:line="40" pos:column="37"/></literal></expr>]<pos:position pos:line="40" pos:column="38"/></index></name> <operator pos:line="40" pos:column="39">+<pos:position pos:line="40" pos:column="40"/></operator> <literal type="number" pos:line="40" pos:column="41">2<pos:position pos:line="40" pos:column="42"/></literal></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
        <while pos:line="41" pos:column="9">while <condition pos:line="41" pos:column="15">(<expr><operator pos:line="41" pos:column="16">*<pos:position pos:line="41" pos:column="17"/></operator><operator pos:line="41" pos:column="17">(<pos:position pos:line="41" pos:column="18"/></operator><name><name pos:line="41" pos:column="18">newarr<pos:position pos:line="41" pos:column="24"/></name><index pos:line="41" pos:column="24">[<expr><name pos:line="41" pos:column="25">arg<pos:position pos:line="41" pos:column="28"/></name></expr>]<pos:position pos:line="41" pos:column="29"/></index></name><operator pos:line="41" pos:column="29">++<pos:position pos:line="41" pos:column="31"/></operator><operator pos:line="41" pos:column="31">)<pos:position pos:line="41" pos:column="32"/></operator></expr>)<pos:position pos:line="41" pos:column="33"/></condition> <block pos:line="41" pos:column="34">{
            <comment type="block" pos:line="42" pos:column="13">/* continue */</comment><empty_stmt pos:line="42" pos:column="27">;<pos:position pos:line="42" pos:column="28"/></empty_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></while>
    }<pos:position pos:line="44" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="46" pos:column="5">newarr<pos:position pos:line="46" pos:column="11"/></name><index pos:line="46" pos:column="11">[<expr><name pos:line="46" pos:column="12">arg<pos:position pos:line="46" pos:column="15"/></name></expr>]<pos:position pos:line="46" pos:column="16"/></index></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <name pos:line="46" pos:column="19">NULL<pos:position pos:line="46" pos:column="23"/></name></expr>;<pos:position pos:line="46" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="48" pos:column="5">*<pos:position pos:line="48" pos:column="6"/></operator><name pos:line="48" pos:column="6">retarr<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <name pos:line="48" pos:column="15">newarr<pos:position pos:line="48" pos:column="21"/></name></expr>;<pos:position pos:line="48" pos:column="22"/></expr_stmt>
    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">args<pos:position pos:line="49" pos:column="16"/></name></expr>;<pos:position pos:line="49" pos:column="17"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

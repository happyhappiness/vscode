<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1793_httpd-2.0.63.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">os_check_server<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">server<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list> <block pos:line="1" pos:column="35">{
<cpp:ifndef pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">ifndef<pos:position pos:line="2" pos:column="8"/></cpp:directive> <name pos:line="2" pos:column="9">USE_TPF_DAEMON<pos:position pos:line="2" pos:column="23"/></name></cpp:ifndef>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">rv<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">current_acn<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <if pos:line="5" pos:column="5">if<condition pos:line="5" pos:column="7">(<expr><operator pos:line="5" pos:column="8">(<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">rv<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <call><name pos:line="5" pos:column="14">inetd_getServerStatus<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">(<argument><expr><name pos:line="5" pos:column="36">server<pos:position pos:line="5" pos:column="42"/></name></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call><operator pos:line="5" pos:column="43">)<pos:position pos:line="5" pos:column="44"/></operator> <operator pos:line="5" pos:column="45">==<pos:position pos:line="5" pos:column="47"/></operator> <name pos:line="5" pos:column="48">INETD_SERVER_STATUS_INACTIVE<pos:position pos:line="5" pos:column="76"/></name></expr>)<pos:position pos:line="5" pos:column="77"/></condition><then pos:line="5" pos:column="77">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return></block></then>
    <else pos:line="7" pos:column="5">else <block pos:line="7" pos:column="10">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">current_acn<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">int<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></operator><operator pos:line="8" pos:column="29">)<pos:position pos:line="8" pos:column="30"/></operator><call><name pos:line="8" pos:column="30">cinfc_fast<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">(<argument><expr><name pos:line="8" pos:column="41">CINFC_CMMACNUM<pos:position pos:line="8" pos:column="55"/></name></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="57"/></expr_stmt>
        <if pos:line="9" pos:column="9">if<condition pos:line="9" pos:column="11">(<expr><call><name pos:line="9" pos:column="12">ecbp2<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">()<pos:position pos:line="9" pos:column="19"/></argument_list></call><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">ce2acn<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">!=<pos:position pos:line="9" pos:column="30"/></operator> <operator pos:line="9" pos:column="31">*<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">current_acn<pos:position pos:line="9" pos:column="43"/></name></expr>)<pos:position pos:line="9" pos:column="44"/></condition><then pos:line="9" pos:column="44">
            <block type="pseudo"><return pos:line="10" pos:column="13">return <expr><literal type="number" pos:line="10" pos:column="20">1<pos:position pos:line="10" pos:column="21"/></literal></expr>;<pos:position pos:line="10" pos:column="22"/></return></block></then></if>
    }<pos:position pos:line="11" pos:column="6"/></block></else></if>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

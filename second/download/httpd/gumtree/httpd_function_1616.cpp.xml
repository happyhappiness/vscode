<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1616.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_request_line<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">request_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">r<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">apr_bucket_brigade<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">bb<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <enum pos:line="3" pos:column="5">enum <block pos:line="3" pos:column="10">{
        <decl><name pos:line="4" pos:column="9">rrl_none<pos:position pos:line="4" pos:column="17"/></name></decl>, <decl><name pos:line="4" pos:column="19">rrl_badmethod<pos:position pos:line="4" pos:column="32"/></name></decl>, <decl><name pos:line="4" pos:column="34">rrl_badwhitespace<pos:position pos:line="4" pos:column="51"/></name></decl>, <decl><name pos:line="4" pos:column="53">rrl_excesswhitespace<pos:position pos:line="4" pos:column="73"/></name></decl>,
        <decl><name pos:line="5" pos:column="9">rrl_missinguri<pos:position pos:line="5" pos:column="23"/></name></decl>, <decl><name pos:line="5" pos:column="25">rrl_baduri<pos:position pos:line="5" pos:column="35"/></name></decl>, <decl><name pos:line="5" pos:column="37">rrl_badprotocol<pos:position pos:line="5" pos:column="52"/></name></decl>, <decl><name pos:line="5" pos:column="54">rrl_trailingtext<pos:position pos:line="5" pos:column="70"/></name></decl>,
        <decl><name pos:line="6" pos:column="9">rrl_badmethod09<pos:position pos:line="6" pos:column="24"/></name></decl>, <decl><name pos:line="6" pos:column="26">rrl_reject09<pos:position pos:line="6" pos:column="38"/></name></decl>
    }<pos:position pos:line="7" pos:column="6"/></block> <decl><name pos:line="7" pos:column="7">deferred_error<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><name pos:line="7" pos:column="24">rrl_none<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></enum>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">ll<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">uri<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">len<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">num_blank_lines<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><name pos:line="11" pos:column="27">DEFAULT_LIMIT_BLANK_LINES<pos:position pos:line="11" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">core_server_config<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">conf<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">=
        <expr><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">core_server_config<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></operator><operator pos:line="13" pos:column="30">)<pos:position pos:line="13" pos:column="31"/></operator><call><name pos:line="13" pos:column="31">ap_get_module_config<pos:position pos:line="13" pos:column="51"/></name><argument_list pos:line="13" pos:column="51">(<argument><expr><name><name pos:line="13" pos:column="52">r<pos:position pos:line="13" pos:column="53"/></name><operator pos:line="13" pos:column="53">-&gt;<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="55">server<pos:position pos:line="13" pos:column="61"/></name><operator pos:line="13" pos:column="61">-&gt;<pos:position pos:line="13" pos:column="66"/></operator><name pos:line="13" pos:column="63">module_config<pos:position pos:line="13" pos:column="76"/></name></name></expr></argument>,
                                                   <argument><expr><operator pos:line="14" pos:column="52">&amp;<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="53">core_module<pos:position pos:line="14" pos:column="64"/></name></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">strict<pos:position pos:line="15" pos:column="15"/></name> <init pos:line="15" pos:column="16">= <expr><operator pos:line="15" pos:column="18">(<pos:position pos:line="15" pos:column="19"/></operator><name><name pos:line="15" pos:column="19">conf<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">http_conformance<pos:position pos:line="15" pos:column="41"/></name></name> <operator pos:line="15" pos:column="42">!=<pos:position pos:line="15" pos:column="44"/></operator> <name pos:line="15" pos:column="45">AP_HTTP_CONFORMANCE_UNSAFE<pos:position pos:line="15" pos:column="71"/></name><operator pos:line="15" pos:column="71">)<pos:position pos:line="15" pos:column="72"/></operator></expr></init></decl>;<pos:position pos:line="15" pos:column="73"/></decl_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* Read past empty lines until we get a real request line,
     * a read error, the connection closes (EOF), or we timeout.
     *
     * We skip empty lines because browsers have to tack a CRLF on to the end
     * of POSTs to support old CERN webservers.  But note that we may not
     * have flushed any previous response completely to the client yet.
     * We delay the flush as long as possible so that we can improve
     * performance for clients that are pipelining requests.  If a request
     * is pipelined then we won't block during the (implicit) read() below.
     * If the requests aren't pipelined, then the client is still waiting
     * for the final buffer flush from us, and we will block in the implicit
     * read().  B_SAFEREAD ensures that the BUFF layer flushes if it will
     * have to block during a read.
     */</comment>

    <do pos:line="32" pos:column="5">do <block pos:line="32" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">apr_status_t<pos:position pos:line="33" pos:column="21"/></name></type> <name pos:line="33" pos:column="22">rv<pos:position pos:line="33" pos:column="24"/></name></decl>;<pos:position pos:line="33" pos:column="25"/></decl_stmt>

        <comment type="block" pos:line="35" pos:column="9">/* ensure ap_rgetline allocates memory each time thru the loop
         * if there are empty lines
         */</comment>
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">r<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">the_request<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <name pos:line="38" pos:column="26">NULL<pos:position pos:line="38" pos:column="30"/></name></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="39" pos:column="9">rv<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <call><name pos:line="39" pos:column="14">ap_rgetline<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><operator pos:line="39" pos:column="26">&amp;<pos:position pos:line="39" pos:column="31"/></operator><operator pos:line="39" pos:column="27">(<pos:position pos:line="39" pos:column="28"/></operator><name><name pos:line="39" pos:column="28">r<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">-&gt;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="31">the_request<pos:position pos:line="39" pos:column="42"/></name></name><operator pos:line="39" pos:column="42">)<pos:position pos:line="39" pos:column="43"/></operator></expr></argument>, <argument><expr><call pos:line="39" pos:column="45">(<name pos:line="39" pos:column="46">apr_size_t<pos:position pos:line="39" pos:column="56"/></name>)<argument_list pos:line="39" pos:column="57">(<argument><expr><name><name pos:line="39" pos:column="58">r<pos:position pos:line="39" pos:column="59"/></name><operator pos:line="39" pos:column="59">-&gt;<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="61">server<pos:position pos:line="39" pos:column="67"/></name><operator pos:line="39" pos:column="67">-&gt;<pos:position pos:line="39" pos:column="72"/></operator><name pos:line="39" pos:column="69">limit_req_line<pos:position pos:line="39" pos:column="83"/></name></name> <operator pos:line="39" pos:column="84">+<pos:position pos:line="39" pos:column="85"/></operator> <literal type="number" pos:line="39" pos:column="86">2<pos:position pos:line="39" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="88"/></argument_list></call></expr></argument>,
                         <argument><expr><operator pos:line="40" pos:column="26">&amp;<pos:position pos:line="40" pos:column="31"/></operator><name pos:line="40" pos:column="27">len<pos:position pos:line="40" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="32">r<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="40" pos:column="35">strict<pos:position pos:line="40" pos:column="41"/></name></expr> ?<pos:position pos:line="40" pos:column="43"/></condition><then pos:line="40" pos:column="43"> <expr><name pos:line="40" pos:column="44">AP_GETLINE_CRLF<pos:position pos:line="40" pos:column="59"/></name></expr> <pos:position pos:line="40" pos:column="60"/></then><else pos:line="40" pos:column="60">: <expr><literal type="number" pos:line="40" pos:column="62">0<pos:position pos:line="40" pos:column="63"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="40" pos:column="65">bb<pos:position pos:line="40" pos:column="67"/></name></expr></argument>)<pos:position pos:line="40" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="69"/></expr_stmt>

        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">rv<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">!=<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">APR_SUCCESS<pos:position pos:line="42" pos:column="30"/></name></expr>)<pos:position pos:line="42" pos:column="31"/></condition><then pos:line="42" pos:column="31"> <block pos:line="42" pos:column="32">{
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">r<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">request_time<pos:position pos:line="43" pos:column="28"/></name></name> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <call><name pos:line="43" pos:column="31">apr_time_now<pos:position pos:line="43" pos:column="43"/></name><argument_list pos:line="43" pos:column="43">()<pos:position pos:line="43" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="46"/></expr_stmt>

            <comment type="block" pos:line="45" pos:column="13">/* ap_rgetline returns APR_ENOSPC if it fills up the
             * buffer before finding the end-of-line.  This is only going to
             * happen if it exceeds the configured limit for a request-line.
             */</comment>
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><call><name pos:line="49" pos:column="17">APR_STATUS_IS_ENOSPC<pos:position pos:line="49" pos:column="37"/></name><argument_list pos:line="49" pos:column="37">(<argument><expr><name pos:line="49" pos:column="38">rv<pos:position pos:line="49" pos:column="40"/></name></expr></argument>)<pos:position pos:line="49" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="42"/></condition><then pos:line="49" pos:column="42"> <block pos:line="49" pos:column="43">{
                <expr_stmt><expr><name><name pos:line="50" pos:column="17">r<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">-&gt;<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="20">status<pos:position pos:line="50" pos:column="26"/></name></name> <operator pos:line="50" pos:column="27">=<pos:position pos:line="50" pos:column="28"/></operator> <name pos:line="50" pos:column="29">HTTP_REQUEST_URI_TOO_LARGE<pos:position pos:line="50" pos:column="55"/></name></expr>;<pos:position pos:line="50" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="51" pos:column="14"/></block></then>
            <elseif pos:line="52" pos:column="13">else <if pos:line="52" pos:column="18">if <condition pos:line="52" pos:column="21">(<expr><call><name pos:line="52" pos:column="22">APR_STATUS_IS_TIMEUP<pos:position pos:line="52" pos:column="42"/></name><argument_list pos:line="52" pos:column="42">(<argument><expr><name pos:line="52" pos:column="43">rv<pos:position pos:line="52" pos:column="45"/></name></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="47"/></condition><then pos:line="52" pos:column="47"> <block pos:line="52" pos:column="48">{
                <expr_stmt><expr><name><name pos:line="53" pos:column="17">r<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">-&gt;<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="20">status<pos:position pos:line="53" pos:column="26"/></name></name> <operator pos:line="53" pos:column="27">=<pos:position pos:line="53" pos:column="28"/></operator> <name pos:line="53" pos:column="29">HTTP_REQUEST_TIME_OUT<pos:position pos:line="53" pos:column="50"/></name></expr>;<pos:position pos:line="53" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="54" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="55" pos:column="13">else <if pos:line="55" pos:column="18">if <condition pos:line="55" pos:column="21">(<expr><call><name pos:line="55" pos:column="22">APR_STATUS_IS_EINVAL<pos:position pos:line="55" pos:column="42"/></name><argument_list pos:line="55" pos:column="42">(<argument><expr><name pos:line="55" pos:column="43">rv<pos:position pos:line="55" pos:column="45"/></name></expr></argument>)<pos:position pos:line="55" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="47"/></condition><then pos:line="55" pos:column="47"> <block pos:line="55" pos:column="48">{
                <expr_stmt><expr><name><name pos:line="56" pos:column="17">r<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">-&gt;<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="20">status<pos:position pos:line="56" pos:column="26"/></name></name> <operator pos:line="56" pos:column="27">=<pos:position pos:line="56" pos:column="28"/></operator> <name pos:line="56" pos:column="29">HTTP_BAD_REQUEST<pos:position pos:line="56" pos:column="45"/></name></expr>;<pos:position pos:line="56" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="57" pos:column="14"/></block></then></if></elseif></if>
            <expr_stmt><expr><name><name pos:line="58" pos:column="13">r<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">-&gt;<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="16">proto_num<pos:position pos:line="58" pos:column="25"/></name></name> <operator pos:line="58" pos:column="26">=<pos:position pos:line="58" pos:column="27"/></operator> <call><name pos:line="58" pos:column="28">HTTP_VERSION<pos:position pos:line="58" pos:column="40"/></name><argument_list pos:line="58" pos:column="40">(<argument><expr><literal type="number" pos:line="58" pos:column="41">1<pos:position pos:line="58" pos:column="42"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="58" pos:column="43">0<pos:position pos:line="58" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="59" pos:column="13">r<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">protocol<pos:position pos:line="59" pos:column="24"/></name></name>  <operator pos:line="59" pos:column="26">=<pos:position pos:line="59" pos:column="27"/></operator> <call><name pos:line="59" pos:column="28">apr_pstrdup<pos:position pos:line="59" pos:column="39"/></name><argument_list pos:line="59" pos:column="39">(<argument><expr><name><name pos:line="59" pos:column="40">r<pos:position pos:line="59" pos:column="41"/></name><operator pos:line="59" pos:column="41">-&gt;<pos:position pos:line="59" pos:column="46"/></operator><name pos:line="59" pos:column="43">pool<pos:position pos:line="59" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="49">"HTTP/1.0"<pos:position pos:line="59" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="61"/></expr_stmt>
            <return pos:line="60" pos:column="13">return <expr><literal type="number" pos:line="60" pos:column="20">0<pos:position pos:line="60" pos:column="21"/></literal></expr>;<pos:position pos:line="60" pos:column="22"/></return>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block> while <condition pos:line="62" pos:column="13">(<expr><operator pos:line="62" pos:column="14">(<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="15">len<pos:position pos:line="62" pos:column="18"/></name> <operator pos:line="62" pos:column="19">&lt;=<pos:position pos:line="62" pos:column="24"/></operator> <literal type="number" pos:line="62" pos:column="22">0<pos:position pos:line="62" pos:column="23"/></literal><operator pos:line="62" pos:column="23">)<pos:position pos:line="62" pos:column="24"/></operator> <operator pos:line="62" pos:column="25">&amp;&amp;<pos:position pos:line="62" pos:column="35"/></operator> <operator pos:line="62" pos:column="28">(<pos:position pos:line="62" pos:column="29"/></operator><operator pos:line="62" pos:column="29">--<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="31">num_blank_lines<pos:position pos:line="62" pos:column="46"/></name> <operator pos:line="62" pos:column="47">&gt;=<pos:position pos:line="62" pos:column="52"/></operator> <literal type="number" pos:line="62" pos:column="50">0<pos:position pos:line="62" pos:column="51"/></literal><operator pos:line="62" pos:column="51">)<pos:position pos:line="62" pos:column="52"/></operator></expr>)<pos:position pos:line="62" pos:column="53"/></condition>;<pos:position pos:line="62" pos:column="54"/></do>

    <expr_stmt><expr><name><name pos:line="64" pos:column="5">r<pos:position pos:line="64" pos:column="6"/></name><operator pos:line="64" pos:column="6">-&gt;<pos:position pos:line="64" pos:column="11"/></operator><name pos:line="64" pos:column="8">request_time<pos:position pos:line="64" pos:column="20"/></name></name> <operator pos:line="64" pos:column="21">=<pos:position pos:line="64" pos:column="22"/></operator> <call><name pos:line="64" pos:column="23">apr_time_now<pos:position pos:line="64" pos:column="35"/></name><argument_list pos:line="64" pos:column="35">()<pos:position pos:line="64" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="66" pos:column="5">r<pos:position pos:line="66" pos:column="6"/></name><operator pos:line="66" pos:column="6">-&gt;<pos:position pos:line="66" pos:column="11"/></operator><name pos:line="66" pos:column="8">method<pos:position pos:line="66" pos:column="14"/></name></name> <operator pos:line="66" pos:column="15">=<pos:position pos:line="66" pos:column="16"/></operator> <name><name pos:line="66" pos:column="17">r<pos:position pos:line="66" pos:column="18"/></name><operator pos:line="66" pos:column="18">-&gt;<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="20">the_request<pos:position pos:line="66" pos:column="31"/></name></name></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="68" pos:column="5">/* If there is whitespace before a method, skip it and mark in error */</comment>
    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><call><name pos:line="69" pos:column="9">apr_isspace<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><operator pos:line="69" pos:column="21">*<pos:position pos:line="69" pos:column="22"/></operator><name><name pos:line="69" pos:column="22">r<pos:position pos:line="69" pos:column="23"/></name><operator pos:line="69" pos:column="23">-&gt;<pos:position pos:line="69" pos:column="28"/></operator><name pos:line="69" pos:column="25">method<pos:position pos:line="69" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="33"/></condition><then pos:line="69" pos:column="33"> <block pos:line="69" pos:column="34">{
        <expr_stmt><expr><name pos:line="70" pos:column="9">deferred_error<pos:position pos:line="70" pos:column="23"/></name> <operator pos:line="70" pos:column="24">=<pos:position pos:line="70" pos:column="25"/></operator> <name pos:line="70" pos:column="26">rrl_badwhitespace<pos:position pos:line="70" pos:column="43"/></name></expr>;<pos:position pos:line="70" pos:column="44"/></expr_stmt> 
        <for pos:line="71" pos:column="9">for <control pos:line="71" pos:column="13">( <init pos:line="71" pos:column="15">;<pos:position pos:line="71" pos:column="16"/></init> <condition><expr><call><name pos:line="71" pos:column="17">apr_isspace<pos:position pos:line="71" pos:column="28"/></name><argument_list pos:line="71" pos:column="28">(<argument><expr><operator pos:line="71" pos:column="29">*<pos:position pos:line="71" pos:column="30"/></operator><name><name pos:line="71" pos:column="30">r<pos:position pos:line="71" pos:column="31"/></name><operator pos:line="71" pos:column="31">-&gt;<pos:position pos:line="71" pos:column="36"/></operator><name pos:line="71" pos:column="33">method<pos:position pos:line="71" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="41"/></condition> <incr><expr><operator pos:line="71" pos:column="42">++<pos:position pos:line="71" pos:column="44"/></operator><name><name pos:line="71" pos:column="44">r<pos:position pos:line="71" pos:column="45"/></name><operator pos:line="71" pos:column="45">-&gt;<pos:position pos:line="71" pos:column="50"/></operator><name pos:line="71" pos:column="47">method<pos:position pos:line="71" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="71" pos:column="54"/></control>
            <block type="pseudo"><empty_stmt pos:line="72" pos:column="13">;<pos:position pos:line="72" pos:column="14"/></empty_stmt></block></for> 
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="75" pos:column="5">/* Scan the method up to the next whitespace, ensure it contains only
     * valid http-token characters, otherwise mark in error
     */</comment>
    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><name pos:line="78" pos:column="9">strict<pos:position pos:line="78" pos:column="15"/></name></expr>)<pos:position pos:line="78" pos:column="16"/></condition><then pos:line="78" pos:column="16"> <block pos:line="78" pos:column="17">{
        <expr_stmt><expr><name pos:line="79" pos:column="9">ll<pos:position pos:line="79" pos:column="11"/></name> <operator pos:line="79" pos:column="12">=<pos:position pos:line="79" pos:column="13"/></operator> <operator pos:line="79" pos:column="14">(<pos:position pos:line="79" pos:column="15"/></operator><name pos:line="79" pos:column="15">char<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">*<pos:position pos:line="79" pos:column="20"/></operator><operator pos:line="79" pos:column="20">)<pos:position pos:line="79" pos:column="21"/></operator> <call><name pos:line="79" pos:column="22">ap_scan_http_token<pos:position pos:line="79" pos:column="40"/></name><argument_list pos:line="79" pos:column="40">(<argument><expr><name><name pos:line="79" pos:column="41">r<pos:position pos:line="79" pos:column="42"/></name><operator pos:line="79" pos:column="42">-&gt;<pos:position pos:line="79" pos:column="47"/></operator><name pos:line="79" pos:column="44">method<pos:position pos:line="79" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></then>
    <else pos:line="81" pos:column="5">else <block pos:line="81" pos:column="10">{
        <expr_stmt><expr><name pos:line="82" pos:column="9">ll<pos:position pos:line="82" pos:column="11"/></name> <operator pos:line="82" pos:column="12">=<pos:position pos:line="82" pos:column="13"/></operator> <operator pos:line="82" pos:column="14">(<pos:position pos:line="82" pos:column="15"/></operator><name pos:line="82" pos:column="15">char<pos:position pos:line="82" pos:column="19"/></name><operator pos:line="82" pos:column="19">*<pos:position pos:line="82" pos:column="20"/></operator><operator pos:line="82" pos:column="20">)<pos:position pos:line="82" pos:column="21"/></operator> <call><name pos:line="82" pos:column="22">ap_scan_vchar_obstext<pos:position pos:line="82" pos:column="43"/></name><argument_list pos:line="82" pos:column="43">(<argument><expr><name><name pos:line="82" pos:column="44">r<pos:position pos:line="82" pos:column="45"/></name><operator pos:line="82" pos:column="45">-&gt;<pos:position pos:line="82" pos:column="50"/></operator><name pos:line="82" pos:column="47">method<pos:position pos:line="82" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></else></if>

    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><operator pos:line="85" pos:column="9">(<pos:position pos:line="85" pos:column="10"/></operator><operator pos:line="85" pos:column="10">(<pos:position pos:line="85" pos:column="11"/></operator><name pos:line="85" pos:column="11">ll<pos:position pos:line="85" pos:column="13"/></name> <operator pos:line="85" pos:column="14">==<pos:position pos:line="85" pos:column="16"/></operator> <name><name pos:line="85" pos:column="17">r<pos:position pos:line="85" pos:column="18"/></name><operator pos:line="85" pos:column="18">-&gt;<pos:position pos:line="85" pos:column="23"/></operator><name pos:line="85" pos:column="20">method<pos:position pos:line="85" pos:column="26"/></name></name><operator pos:line="85" pos:column="26">)<pos:position pos:line="85" pos:column="27"/></operator> <operator pos:line="85" pos:column="28">||<pos:position pos:line="85" pos:column="30"/></operator> <operator pos:line="85" pos:column="31">(<pos:position pos:line="85" pos:column="32"/></operator><operator pos:line="85" pos:column="32">*<pos:position pos:line="85" pos:column="33"/></operator><name pos:line="85" pos:column="33">ll<pos:position pos:line="85" pos:column="35"/></name> <operator pos:line="85" pos:column="36">&amp;&amp;<pos:position pos:line="85" pos:column="46"/></operator> <operator pos:line="85" pos:column="39">!<pos:position pos:line="85" pos:column="40"/></operator><call><name pos:line="85" pos:column="40">apr_isspace<pos:position pos:line="85" pos:column="51"/></name><argument_list pos:line="85" pos:column="51">(<argument><expr><operator pos:line="85" pos:column="52">*<pos:position pos:line="85" pos:column="53"/></operator><name pos:line="85" pos:column="53">ll<pos:position pos:line="85" pos:column="55"/></name></expr></argument>)<pos:position pos:line="85" pos:column="56"/></argument_list></call><operator pos:line="85" pos:column="56">)<pos:position pos:line="85" pos:column="57"/></operator><operator pos:line="85" pos:column="57">)<pos:position pos:line="85" pos:column="58"/></operator>
            <operator pos:line="86" pos:column="13">&amp;&amp;<pos:position pos:line="86" pos:column="23"/></operator> <name pos:line="86" pos:column="16">deferred_error<pos:position pos:line="86" pos:column="30"/></name> <operator pos:line="86" pos:column="31">==<pos:position pos:line="86" pos:column="33"/></operator> <name pos:line="86" pos:column="34">rrl_none<pos:position pos:line="86" pos:column="42"/></name></expr>)<pos:position pos:line="86" pos:column="43"/></condition><then pos:line="86" pos:column="43"> <block pos:line="86" pos:column="44">{
        <expr_stmt><expr><name pos:line="87" pos:column="9">deferred_error<pos:position pos:line="87" pos:column="23"/></name> <operator pos:line="87" pos:column="24">=<pos:position pos:line="87" pos:column="25"/></operator> <name pos:line="87" pos:column="26">rrl_badmethod<pos:position pos:line="87" pos:column="39"/></name></expr>;<pos:position pos:line="87" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="88" pos:column="9">ll<pos:position pos:line="88" pos:column="11"/></name> <operator pos:line="88" pos:column="12">=<pos:position pos:line="88" pos:column="13"/></operator> <call><name pos:line="88" pos:column="14">strpbrk<pos:position pos:line="88" pos:column="21"/></name><argument_list pos:line="88" pos:column="21">(<argument><expr><name pos:line="88" pos:column="22">ll<pos:position pos:line="88" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="26">"\t\n\v\f\r "<pos:position pos:line="88" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="91" pos:column="5">/* Verify method terminated with a single SP, or mark as specific error */</comment>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><operator pos:line="92" pos:column="9">!<pos:position pos:line="92" pos:column="10"/></operator><name pos:line="92" pos:column="10">ll<pos:position pos:line="92" pos:column="12"/></name></expr>)<pos:position pos:line="92" pos:column="13"/></condition><then pos:line="92" pos:column="13"> <block pos:line="92" pos:column="14">{
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">deferred_error<pos:position pos:line="93" pos:column="27"/></name> <operator pos:line="93" pos:column="28">==<pos:position pos:line="93" pos:column="30"/></operator> <name pos:line="93" pos:column="31">rrl_none<pos:position pos:line="93" pos:column="39"/></name></expr>)<pos:position pos:line="93" pos:column="40"/></condition><then pos:line="93" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="13">deferred_error<pos:position pos:line="94" pos:column="27"/></name> <operator pos:line="94" pos:column="28">=<pos:position pos:line="94" pos:column="29"/></operator> <name pos:line="94" pos:column="30">rrl_missinguri<pos:position pos:line="94" pos:column="44"/></name></expr>;<pos:position pos:line="94" pos:column="45"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="95" pos:column="9">r<pos:position pos:line="95" pos:column="10"/></name><operator pos:line="95" pos:column="10">-&gt;<pos:position pos:line="95" pos:column="15"/></operator><name pos:line="95" pos:column="12">protocol<pos:position pos:line="95" pos:column="20"/></name></name> <operator pos:line="95" pos:column="21">=<pos:position pos:line="95" pos:column="22"/></operator> <name pos:line="95" pos:column="23">uri<pos:position pos:line="95" pos:column="26"/></name> <operator pos:line="95" pos:column="27">=<pos:position pos:line="95" pos:column="28"/></operator> <literal type="string" pos:line="95" pos:column="29">""<pos:position pos:line="95" pos:column="31"/></literal></expr>;<pos:position pos:line="95" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="96" pos:column="9">len<pos:position pos:line="96" pos:column="12"/></name> <operator pos:line="96" pos:column="13">=<pos:position pos:line="96" pos:column="14"/></operator> <literal type="number" pos:line="96" pos:column="15">0<pos:position pos:line="96" pos:column="16"/></literal></expr>;<pos:position pos:line="96" pos:column="17"/></expr_stmt>
        <goto pos:line="97" pos:column="9">goto <name pos:line="97" pos:column="14">rrl_done<pos:position pos:line="97" pos:column="22"/></name>;<pos:position pos:line="97" pos:column="23"/></goto>
    }<pos:position pos:line="98" pos:column="6"/></block></then>
    <elseif pos:line="99" pos:column="5">else <if pos:line="99" pos:column="10">if <condition pos:line="99" pos:column="13">(<expr><name pos:line="99" pos:column="14">strict<pos:position pos:line="99" pos:column="20"/></name> <operator pos:line="99" pos:column="21">&amp;&amp;<pos:position pos:line="99" pos:column="31"/></operator> <name><name pos:line="99" pos:column="24">ll<pos:position pos:line="99" pos:column="26"/></name><index pos:line="99" pos:column="26">[<expr><literal type="number" pos:line="99" pos:column="27">0<pos:position pos:line="99" pos:column="28"/></literal></expr>]<pos:position pos:line="99" pos:column="29"/></index></name> <operator pos:line="99" pos:column="30">&amp;&amp;<pos:position pos:line="99" pos:column="40"/></operator> <call><name pos:line="99" pos:column="33">apr_isspace<pos:position pos:line="99" pos:column="44"/></name><argument_list pos:line="99" pos:column="44">(<argument><expr><name><name pos:line="99" pos:column="45">ll<pos:position pos:line="99" pos:column="47"/></name><index pos:line="99" pos:column="47">[<expr><literal type="number" pos:line="99" pos:column="48">1<pos:position pos:line="99" pos:column="49"/></literal></expr>]<pos:position pos:line="99" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="99" pos:column="51"/></argument_list></call>
             <operator pos:line="100" pos:column="14">&amp;&amp;<pos:position pos:line="100" pos:column="24"/></operator> <name pos:line="100" pos:column="17">deferred_error<pos:position pos:line="100" pos:column="31"/></name> <operator pos:line="100" pos:column="32">==<pos:position pos:line="100" pos:column="34"/></operator> <name pos:line="100" pos:column="35">rrl_none<pos:position pos:line="100" pos:column="43"/></name></expr>)<pos:position pos:line="100" pos:column="44"/></condition><then pos:line="100" pos:column="44"> <block pos:line="100" pos:column="45">{
        <expr_stmt><expr><name pos:line="101" pos:column="9">deferred_error<pos:position pos:line="101" pos:column="23"/></name> <operator pos:line="101" pos:column="24">=<pos:position pos:line="101" pos:column="25"/></operator> <name pos:line="101" pos:column="26">rrl_excesswhitespace<pos:position pos:line="101" pos:column="46"/></name></expr>;<pos:position pos:line="101" pos:column="47"/></expr_stmt> 
    }<pos:position pos:line="102" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="104" pos:column="5">/* Advance uri pointer over leading whitespace, NUL terminate the method
     * If non-SP whitespace is encountered, mark as specific error
     */</comment>
    <for pos:line="107" pos:column="5">for <control pos:line="107" pos:column="9">(<init><expr><name pos:line="107" pos:column="10">uri<pos:position pos:line="107" pos:column="13"/></name> <operator pos:line="107" pos:column="14">=<pos:position pos:line="107" pos:column="15"/></operator> <name pos:line="107" pos:column="16">ll<pos:position pos:line="107" pos:column="18"/></name></expr>;<pos:position pos:line="107" pos:column="19"/></init> <condition><expr><call><name pos:line="107" pos:column="20">apr_isspace<pos:position pos:line="107" pos:column="31"/></name><argument_list pos:line="107" pos:column="31">(<argument><expr><operator pos:line="107" pos:column="32">*<pos:position pos:line="107" pos:column="33"/></operator><name pos:line="107" pos:column="33">uri<pos:position pos:line="107" pos:column="36"/></name></expr></argument>)<pos:position pos:line="107" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="38"/></condition> <incr><expr><operator pos:line="107" pos:column="39">++<pos:position pos:line="107" pos:column="41"/></operator><name pos:line="107" pos:column="41">uri<pos:position pos:line="107" pos:column="44"/></name></expr></incr>)<pos:position pos:line="107" pos:column="45"/></control> 
        <block type="pseudo"><if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><operator pos:line="108" pos:column="13">*<pos:position pos:line="108" pos:column="14"/></operator><name pos:line="108" pos:column="14">uri<pos:position pos:line="108" pos:column="17"/></name> <operator pos:line="108" pos:column="18">!=<pos:position pos:line="108" pos:column="20"/></operator> <literal type="char" pos:line="108" pos:column="21">' '<pos:position pos:line="108" pos:column="24"/></literal> <operator pos:line="108" pos:column="25">&amp;&amp;<pos:position pos:line="108" pos:column="35"/></operator> <name pos:line="108" pos:column="28">deferred_error<pos:position pos:line="108" pos:column="42"/></name> <operator pos:line="108" pos:column="43">==<pos:position pos:line="108" pos:column="45"/></operator> <name pos:line="108" pos:column="46">rrl_none<pos:position pos:line="108" pos:column="54"/></name></expr>)<pos:position pos:line="108" pos:column="55"/></condition><then pos:line="108" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><name pos:line="109" pos:column="13">deferred_error<pos:position pos:line="109" pos:column="27"/></name> <operator pos:line="109" pos:column="28">=<pos:position pos:line="109" pos:column="29"/></operator> <name pos:line="109" pos:column="30">rrl_badwhitespace<pos:position pos:line="109" pos:column="47"/></name></expr>;<pos:position pos:line="109" pos:column="48"/></expr_stmt></block></then></if></block></for> 
    <expr_stmt><expr><operator pos:line="110" pos:column="5">*<pos:position pos:line="110" pos:column="6"/></operator><name pos:line="110" pos:column="6">ll<pos:position pos:line="110" pos:column="8"/></name> <operator pos:line="110" pos:column="9">=<pos:position pos:line="110" pos:column="10"/></operator> <literal type="char" pos:line="110" pos:column="11">'\0'<pos:position pos:line="110" pos:column="15"/></literal></expr>;<pos:position pos:line="110" pos:column="16"/></expr_stmt>

    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><operator pos:line="112" pos:column="9">!<pos:position pos:line="112" pos:column="10"/></operator><operator pos:line="112" pos:column="10">*<pos:position pos:line="112" pos:column="11"/></operator><name pos:line="112" pos:column="11">uri<pos:position pos:line="112" pos:column="14"/></name> <operator pos:line="112" pos:column="15">&amp;&amp;<pos:position pos:line="112" pos:column="25"/></operator> <name pos:line="112" pos:column="18">deferred_error<pos:position pos:line="112" pos:column="32"/></name> <operator pos:line="112" pos:column="33">==<pos:position pos:line="112" pos:column="35"/></operator> <name pos:line="112" pos:column="36">rrl_none<pos:position pos:line="112" pos:column="44"/></name></expr>)<pos:position pos:line="112" pos:column="45"/></condition><then pos:line="112" pos:column="45">
        <block type="pseudo"><expr_stmt><expr><name pos:line="113" pos:column="9">deferred_error<pos:position pos:line="113" pos:column="23"/></name> <operator pos:line="113" pos:column="24">=<pos:position pos:line="113" pos:column="25"/></operator> <name pos:line="113" pos:column="26">rrl_missinguri<pos:position pos:line="113" pos:column="40"/></name></expr>;<pos:position pos:line="113" pos:column="41"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="115" pos:column="5">/* Scan the URI up to the next whitespace, ensure it contains no raw
     * control characters, otherwise mark in error
     */</comment>
    <expr_stmt><expr><name pos:line="118" pos:column="5">ll<pos:position pos:line="118" pos:column="7"/></name> <operator pos:line="118" pos:column="8">=<pos:position pos:line="118" pos:column="9"/></operator> <operator pos:line="118" pos:column="10">(<pos:position pos:line="118" pos:column="11"/></operator><name pos:line="118" pos:column="11">char<pos:position pos:line="118" pos:column="15"/></name><operator pos:line="118" pos:column="15">*<pos:position pos:line="118" pos:column="16"/></operator><operator pos:line="118" pos:column="16">)<pos:position pos:line="118" pos:column="17"/></operator> <call><name pos:line="118" pos:column="18">ap_scan_vchar_obstext<pos:position pos:line="118" pos:column="39"/></name><argument_list pos:line="118" pos:column="39">(<argument><expr><name pos:line="118" pos:column="40">uri<pos:position pos:line="118" pos:column="43"/></name></expr></argument>)<pos:position pos:line="118" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="45"/></expr_stmt>
    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><name pos:line="119" pos:column="9">ll<pos:position pos:line="119" pos:column="11"/></name> <operator pos:line="119" pos:column="12">==<pos:position pos:line="119" pos:column="14"/></operator> <name pos:line="119" pos:column="15">uri<pos:position pos:line="119" pos:column="18"/></name> <operator pos:line="119" pos:column="19">||<pos:position pos:line="119" pos:column="21"/></operator> <operator pos:line="119" pos:column="22">(<pos:position pos:line="119" pos:column="23"/></operator><operator pos:line="119" pos:column="23">*<pos:position pos:line="119" pos:column="24"/></operator><name pos:line="119" pos:column="24">ll<pos:position pos:line="119" pos:column="26"/></name> <operator pos:line="119" pos:column="27">&amp;&amp;<pos:position pos:line="119" pos:column="37"/></operator> <operator pos:line="119" pos:column="30">!<pos:position pos:line="119" pos:column="31"/></operator><call><name pos:line="119" pos:column="31">apr_isspace<pos:position pos:line="119" pos:column="42"/></name><argument_list pos:line="119" pos:column="42">(<argument><expr><operator pos:line="119" pos:column="43">*<pos:position pos:line="119" pos:column="44"/></operator><name pos:line="119" pos:column="44">ll<pos:position pos:line="119" pos:column="46"/></name></expr></argument>)<pos:position pos:line="119" pos:column="47"/></argument_list></call><operator pos:line="119" pos:column="47">)<pos:position pos:line="119" pos:column="48"/></operator></expr>)<pos:position pos:line="119" pos:column="49"/></condition><then pos:line="119" pos:column="49"> <block pos:line="119" pos:column="50">{
        <expr_stmt><expr><name pos:line="120" pos:column="9">deferred_error<pos:position pos:line="120" pos:column="23"/></name> <operator pos:line="120" pos:column="24">=<pos:position pos:line="120" pos:column="25"/></operator> <name pos:line="120" pos:column="26">rrl_baduri<pos:position pos:line="120" pos:column="36"/></name></expr>;<pos:position pos:line="120" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="121" pos:column="9">ll<pos:position pos:line="121" pos:column="11"/></name> <operator pos:line="121" pos:column="12">=<pos:position pos:line="121" pos:column="13"/></operator> <call><name pos:line="121" pos:column="14">strpbrk<pos:position pos:line="121" pos:column="21"/></name><argument_list pos:line="121" pos:column="21">(<argument><expr><name pos:line="121" pos:column="22">ll<pos:position pos:line="121" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="26">"\t\n\v\f\r "<pos:position pos:line="121" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="122" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="124" pos:column="5">/* Verify URI terminated with a single SP, or mark as specific error */</comment>
    <if pos:line="125" pos:column="5">if <condition pos:line="125" pos:column="8">(<expr><operator pos:line="125" pos:column="9">!<pos:position pos:line="125" pos:column="10"/></operator><name pos:line="125" pos:column="10">ll<pos:position pos:line="125" pos:column="12"/></name></expr>)<pos:position pos:line="125" pos:column="13"/></condition><then pos:line="125" pos:column="13"> <block pos:line="125" pos:column="14">{
        <expr_stmt><expr><name><name pos:line="126" pos:column="9">r<pos:position pos:line="126" pos:column="10"/></name><operator pos:line="126" pos:column="10">-&gt;<pos:position pos:line="126" pos:column="15"/></operator><name pos:line="126" pos:column="12">protocol<pos:position pos:line="126" pos:column="20"/></name></name> <operator pos:line="126" pos:column="21">=<pos:position pos:line="126" pos:column="22"/></operator> <literal type="string" pos:line="126" pos:column="23">""<pos:position pos:line="126" pos:column="25"/></literal></expr>;<pos:position pos:line="126" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="127" pos:column="9">len<pos:position pos:line="127" pos:column="12"/></name> <operator pos:line="127" pos:column="13">=<pos:position pos:line="127" pos:column="14"/></operator> <literal type="number" pos:line="127" pos:column="15">0<pos:position pos:line="127" pos:column="16"/></literal></expr>;<pos:position pos:line="127" pos:column="17"/></expr_stmt>
        <goto pos:line="128" pos:column="9">goto <name pos:line="128" pos:column="14">rrl_done<pos:position pos:line="128" pos:column="22"/></name>;<pos:position pos:line="128" pos:column="23"/></goto>
    }<pos:position pos:line="129" pos:column="6"/></block></then>
    <elseif pos:line="130" pos:column="5">else <if pos:line="130" pos:column="10">if <condition pos:line="130" pos:column="13">(<expr><name pos:line="130" pos:column="14">strict<pos:position pos:line="130" pos:column="20"/></name> <operator pos:line="130" pos:column="21">&amp;&amp;<pos:position pos:line="130" pos:column="31"/></operator> <name><name pos:line="130" pos:column="24">ll<pos:position pos:line="130" pos:column="26"/></name><index pos:line="130" pos:column="26">[<expr><literal type="number" pos:line="130" pos:column="27">0<pos:position pos:line="130" pos:column="28"/></literal></expr>]<pos:position pos:line="130" pos:column="29"/></index></name> <operator pos:line="130" pos:column="30">&amp;&amp;<pos:position pos:line="130" pos:column="40"/></operator> <call><name pos:line="130" pos:column="33">apr_isspace<pos:position pos:line="130" pos:column="44"/></name><argument_list pos:line="130" pos:column="44">(<argument><expr><name><name pos:line="130" pos:column="45">ll<pos:position pos:line="130" pos:column="47"/></name><index pos:line="130" pos:column="47">[<expr><literal type="number" pos:line="130" pos:column="48">1<pos:position pos:line="130" pos:column="49"/></literal></expr>]<pos:position pos:line="130" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="130" pos:column="51"/></argument_list></call>
             <operator pos:line="131" pos:column="14">&amp;&amp;<pos:position pos:line="131" pos:column="24"/></operator> <name pos:line="131" pos:column="17">deferred_error<pos:position pos:line="131" pos:column="31"/></name> <operator pos:line="131" pos:column="32">==<pos:position pos:line="131" pos:column="34"/></operator> <name pos:line="131" pos:column="35">rrl_none<pos:position pos:line="131" pos:column="43"/></name></expr>)<pos:position pos:line="131" pos:column="44"/></condition><then pos:line="131" pos:column="44"> <block pos:line="131" pos:column="45">{
        <expr_stmt><expr><name pos:line="132" pos:column="9">deferred_error<pos:position pos:line="132" pos:column="23"/></name> <operator pos:line="132" pos:column="24">=<pos:position pos:line="132" pos:column="25"/></operator> <name pos:line="132" pos:column="26">rrl_excesswhitespace<pos:position pos:line="132" pos:column="46"/></name></expr>;<pos:position pos:line="132" pos:column="47"/></expr_stmt> 
    }<pos:position pos:line="133" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="135" pos:column="5">/* Advance protocol pointer over leading whitespace, NUL terminate the uri
     * If non-SP whitespace is encountered, mark as specific error
     */</comment>
    <for pos:line="138" pos:column="5">for <control pos:line="138" pos:column="9">(<init><expr><name><name pos:line="138" pos:column="10">r<pos:position pos:line="138" pos:column="11"/></name><operator pos:line="138" pos:column="11">-&gt;<pos:position pos:line="138" pos:column="16"/></operator><name pos:line="138" pos:column="13">protocol<pos:position pos:line="138" pos:column="21"/></name></name> <operator pos:line="138" pos:column="22">=<pos:position pos:line="138" pos:column="23"/></operator> <name pos:line="138" pos:column="24">ll<pos:position pos:line="138" pos:column="26"/></name></expr>;<pos:position pos:line="138" pos:column="27"/></init> <condition><expr><call><name pos:line="138" pos:column="28">apr_isspace<pos:position pos:line="138" pos:column="39"/></name><argument_list pos:line="138" pos:column="39">(<argument><expr><operator pos:line="138" pos:column="40">*<pos:position pos:line="138" pos:column="41"/></operator><name><name pos:line="138" pos:column="41">r<pos:position pos:line="138" pos:column="42"/></name><operator pos:line="138" pos:column="42">-&gt;<pos:position pos:line="138" pos:column="47"/></operator><name pos:line="138" pos:column="44">protocol<pos:position pos:line="138" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="138" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="54"/></condition> <incr><expr><operator pos:line="138" pos:column="55">++<pos:position pos:line="138" pos:column="57"/></operator><name><name pos:line="138" pos:column="57">r<pos:position pos:line="138" pos:column="58"/></name><operator pos:line="138" pos:column="58">-&gt;<pos:position pos:line="138" pos:column="63"/></operator><name pos:line="138" pos:column="60">protocol<pos:position pos:line="138" pos:column="68"/></name></name></expr></incr>)<pos:position pos:line="138" pos:column="69"/></control> 
        <block type="pseudo"><if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><operator pos:line="139" pos:column="13">*<pos:position pos:line="139" pos:column="14"/></operator><name><name pos:line="139" pos:column="14">r<pos:position pos:line="139" pos:column="15"/></name><operator pos:line="139" pos:column="15">-&gt;<pos:position pos:line="139" pos:column="20"/></operator><name pos:line="139" pos:column="17">protocol<pos:position pos:line="139" pos:column="25"/></name></name> <operator pos:line="139" pos:column="26">!=<pos:position pos:line="139" pos:column="28"/></operator> <literal type="char" pos:line="139" pos:column="29">' '<pos:position pos:line="139" pos:column="32"/></literal> <operator pos:line="139" pos:column="33">&amp;&amp;<pos:position pos:line="139" pos:column="43"/></operator> <name pos:line="139" pos:column="36">deferred_error<pos:position pos:line="139" pos:column="50"/></name> <operator pos:line="139" pos:column="51">==<pos:position pos:line="139" pos:column="53"/></operator> <name pos:line="139" pos:column="54">rrl_none<pos:position pos:line="139" pos:column="62"/></name></expr>)<pos:position pos:line="139" pos:column="63"/></condition><then pos:line="139" pos:column="63">
            <block type="pseudo"><expr_stmt><expr><name pos:line="140" pos:column="13">deferred_error<pos:position pos:line="140" pos:column="27"/></name> <operator pos:line="140" pos:column="28">=<pos:position pos:line="140" pos:column="29"/></operator> <name pos:line="140" pos:column="30">rrl_badwhitespace<pos:position pos:line="140" pos:column="47"/></name></expr>;<pos:position pos:line="140" pos:column="48"/></expr_stmt></block></then></if></block></for> 
    <expr_stmt><expr><operator pos:line="141" pos:column="5">*<pos:position pos:line="141" pos:column="6"/></operator><name pos:line="141" pos:column="6">ll<pos:position pos:line="141" pos:column="8"/></name> <operator pos:line="141" pos:column="9">=<pos:position pos:line="141" pos:column="10"/></operator> <literal type="char" pos:line="141" pos:column="11">'\0'<pos:position pos:line="141" pos:column="15"/></literal></expr>;<pos:position pos:line="141" pos:column="16"/></expr_stmt>

    <comment type="block" pos:line="143" pos:column="5">/* Scan the protocol up to the next whitespace, validation comes later */</comment>
    <if pos:line="144" pos:column="5">if <condition pos:line="144" pos:column="8">(<expr><operator pos:line="144" pos:column="9">!<pos:position pos:line="144" pos:column="10"/></operator><operator pos:line="144" pos:column="10">(<pos:position pos:line="144" pos:column="11"/></operator><name pos:line="144" pos:column="11">ll<pos:position pos:line="144" pos:column="13"/></name> <operator pos:line="144" pos:column="14">=<pos:position pos:line="144" pos:column="15"/></operator> <operator pos:line="144" pos:column="16">(<pos:position pos:line="144" pos:column="17"/></operator><name pos:line="144" pos:column="17">char<pos:position pos:line="144" pos:column="21"/></name><operator pos:line="144" pos:column="21">*<pos:position pos:line="144" pos:column="22"/></operator><operator pos:line="144" pos:column="22">)<pos:position pos:line="144" pos:column="23"/></operator> <call><name pos:line="144" pos:column="24">ap_scan_vchar_obstext<pos:position pos:line="144" pos:column="45"/></name><argument_list pos:line="144" pos:column="45">(<argument><expr><name><name pos:line="144" pos:column="46">r<pos:position pos:line="144" pos:column="47"/></name><operator pos:line="144" pos:column="47">-&gt;<pos:position pos:line="144" pos:column="52"/></operator><name pos:line="144" pos:column="49">protocol<pos:position pos:line="144" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="144" pos:column="58"/></argument_list></call><operator pos:line="144" pos:column="58">)<pos:position pos:line="144" pos:column="59"/></operator></expr>)<pos:position pos:line="144" pos:column="60"/></condition><then pos:line="144" pos:column="60"> <block pos:line="144" pos:column="61">{
        <expr_stmt><expr><name pos:line="145" pos:column="9">len<pos:position pos:line="145" pos:column="12"/></name> <operator pos:line="145" pos:column="13">=<pos:position pos:line="145" pos:column="14"/></operator> <call><name pos:line="145" pos:column="15">strlen<pos:position pos:line="145" pos:column="21"/></name><argument_list pos:line="145" pos:column="21">(<argument><expr><name><name pos:line="145" pos:column="22">r<pos:position pos:line="145" pos:column="23"/></name><operator pos:line="145" pos:column="23">-&gt;<pos:position pos:line="145" pos:column="28"/></operator><name pos:line="145" pos:column="25">protocol<pos:position pos:line="145" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="35"/></expr_stmt>
        <goto pos:line="146" pos:column="9">goto <name pos:line="146" pos:column="14">rrl_done<pos:position pos:line="146" pos:column="22"/></name>;<pos:position pos:line="146" pos:column="23"/></goto>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="148" pos:column="5">len<pos:position pos:line="148" pos:column="8"/></name> <operator pos:line="148" pos:column="9">=<pos:position pos:line="148" pos:column="10"/></operator> <name pos:line="148" pos:column="11">ll<pos:position pos:line="148" pos:column="13"/></name> <operator pos:line="148" pos:column="14">-<pos:position pos:line="148" pos:column="15"/></operator> <name><name pos:line="148" pos:column="16">r<pos:position pos:line="148" pos:column="17"/></name><operator pos:line="148" pos:column="17">-&gt;<pos:position pos:line="148" pos:column="22"/></operator><name pos:line="148" pos:column="19">protocol<pos:position pos:line="148" pos:column="27"/></name></name></expr>;<pos:position pos:line="148" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="150" pos:column="5">/* Advance over trailing whitespace, if found mark in error,
     * determine if trailing text is found, unconditionally mark in error,
     * finally NUL terminate the protocol string
     */</comment>
    <if pos:line="154" pos:column="5">if <condition pos:line="154" pos:column="8">(<expr><operator pos:line="154" pos:column="9">*<pos:position pos:line="154" pos:column="10"/></operator><name pos:line="154" pos:column="10">ll<pos:position pos:line="154" pos:column="12"/></name> <operator pos:line="154" pos:column="13">&amp;&amp;<pos:position pos:line="154" pos:column="23"/></operator> <operator pos:line="154" pos:column="16">!<pos:position pos:line="154" pos:column="17"/></operator><call><name pos:line="154" pos:column="17">apr_isspace<pos:position pos:line="154" pos:column="28"/></name><argument_list pos:line="154" pos:column="28">(<argument><expr><operator pos:line="154" pos:column="29">*<pos:position pos:line="154" pos:column="30"/></operator><name pos:line="154" pos:column="30">ll<pos:position pos:line="154" pos:column="32"/></name></expr></argument>)<pos:position pos:line="154" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="154" pos:column="34"/></condition><then pos:line="154" pos:column="34"> <block pos:line="154" pos:column="35">{
        <expr_stmt><expr><name pos:line="155" pos:column="9">deferred_error<pos:position pos:line="155" pos:column="23"/></name> <operator pos:line="155" pos:column="24">=<pos:position pos:line="155" pos:column="25"/></operator> <name pos:line="155" pos:column="26">rrl_badprotocol<pos:position pos:line="155" pos:column="41"/></name></expr>;<pos:position pos:line="155" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="156" pos:column="6"/></block></then>
    <elseif pos:line="157" pos:column="5">else <if pos:line="157" pos:column="10">if <condition pos:line="157" pos:column="13">(<expr><name pos:line="157" pos:column="14">strict<pos:position pos:line="157" pos:column="20"/></name> <operator pos:line="157" pos:column="21">&amp;&amp;<pos:position pos:line="157" pos:column="31"/></operator> <operator pos:line="157" pos:column="24">*<pos:position pos:line="157" pos:column="25"/></operator><name pos:line="157" pos:column="25">ll<pos:position pos:line="157" pos:column="27"/></name></expr>)<pos:position pos:line="157" pos:column="28"/></condition><then pos:line="157" pos:column="28"> <block pos:line="157" pos:column="29">{
        <expr_stmt><expr><name pos:line="158" pos:column="9">deferred_error<pos:position pos:line="158" pos:column="23"/></name> <operator pos:line="158" pos:column="24">=<pos:position pos:line="158" pos:column="25"/></operator> <name pos:line="158" pos:column="26">rrl_excesswhitespace<pos:position pos:line="158" pos:column="46"/></name></expr>;<pos:position pos:line="158" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="159" pos:column="6"/></block></then></if></elseif>
    <else pos:line="160" pos:column="5">else <block pos:line="160" pos:column="10">{
        <for pos:line="161" pos:column="9">for <control pos:line="161" pos:column="13">( <init pos:line="161" pos:column="15">;<pos:position pos:line="161" pos:column="16"/></init> <condition><expr><call><name pos:line="161" pos:column="17">apr_isspace<pos:position pos:line="161" pos:column="28"/></name><argument_list pos:line="161" pos:column="28">(<argument><expr><operator pos:line="161" pos:column="29">*<pos:position pos:line="161" pos:column="30"/></operator><name pos:line="161" pos:column="30">ll<pos:position pos:line="161" pos:column="32"/></name></expr></argument>)<pos:position pos:line="161" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="34"/></condition> <incr><expr><operator pos:line="161" pos:column="35">++<pos:position pos:line="161" pos:column="37"/></operator><name pos:line="161" pos:column="37">ll<pos:position pos:line="161" pos:column="39"/></name></expr></incr>)<pos:position pos:line="161" pos:column="40"/></control>
            <block type="pseudo"><if pos:line="162" pos:column="13">if <condition pos:line="162" pos:column="16">(<expr><operator pos:line="162" pos:column="17">*<pos:position pos:line="162" pos:column="18"/></operator><name pos:line="162" pos:column="18">ll<pos:position pos:line="162" pos:column="20"/></name> <operator pos:line="162" pos:column="21">!=<pos:position pos:line="162" pos:column="23"/></operator> <literal type="char" pos:line="162" pos:column="24">' '<pos:position pos:line="162" pos:column="27"/></literal> <operator pos:line="162" pos:column="28">&amp;&amp;<pos:position pos:line="162" pos:column="38"/></operator> <name pos:line="162" pos:column="31">deferred_error<pos:position pos:line="162" pos:column="45"/></name> <operator pos:line="162" pos:column="46">==<pos:position pos:line="162" pos:column="48"/></operator> <name pos:line="162" pos:column="49">rrl_none<pos:position pos:line="162" pos:column="57"/></name></expr>)<pos:position pos:line="162" pos:column="58"/></condition><then pos:line="162" pos:column="58">
                <block type="pseudo"><expr_stmt><expr><name pos:line="163" pos:column="17">deferred_error<pos:position pos:line="163" pos:column="31"/></name> <operator pos:line="163" pos:column="32">=<pos:position pos:line="163" pos:column="33"/></operator> <name pos:line="163" pos:column="34">rrl_badwhitespace<pos:position pos:line="163" pos:column="51"/></name></expr>;<pos:position pos:line="163" pos:column="52"/></expr_stmt></block></then></if></block></for> 
        <if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><operator pos:line="164" pos:column="13">*<pos:position pos:line="164" pos:column="14"/></operator><name pos:line="164" pos:column="14">ll<pos:position pos:line="164" pos:column="16"/></name> <operator pos:line="164" pos:column="17">&amp;&amp;<pos:position pos:line="164" pos:column="27"/></operator> <name pos:line="164" pos:column="20">deferred_error<pos:position pos:line="164" pos:column="34"/></name> <operator pos:line="164" pos:column="35">==<pos:position pos:line="164" pos:column="37"/></operator> <name pos:line="164" pos:column="38">rrl_none<pos:position pos:line="164" pos:column="46"/></name></expr>)<pos:position pos:line="164" pos:column="47"/></condition><then pos:line="164" pos:column="47">
            <block type="pseudo"><expr_stmt><expr><name pos:line="165" pos:column="13">deferred_error<pos:position pos:line="165" pos:column="27"/></name> <operator pos:line="165" pos:column="28">=<pos:position pos:line="165" pos:column="29"/></operator> <name pos:line="165" pos:column="30">rrl_trailingtext<pos:position pos:line="165" pos:column="46"/></name></expr>;<pos:position pos:line="165" pos:column="47"/></expr_stmt></block></then></if>
    }<pos:position pos:line="166" pos:column="6"/></block></else></if>
    <expr_stmt><expr><operator pos:line="167" pos:column="5">*<pos:position pos:line="167" pos:column="6"/></operator><operator pos:line="167" pos:column="6">(<pos:position pos:line="167" pos:column="7"/></operator><operator pos:line="167" pos:column="7">(<pos:position pos:line="167" pos:column="8"/></operator><name pos:line="167" pos:column="8">char<pos:position pos:line="167" pos:column="12"/></name> <operator pos:line="167" pos:column="13">*<pos:position pos:line="167" pos:column="14"/></operator><operator pos:line="167" pos:column="14">)<pos:position pos:line="167" pos:column="15"/></operator><name><name pos:line="167" pos:column="15">r<pos:position pos:line="167" pos:column="16"/></name><operator pos:line="167" pos:column="16">-&gt;<pos:position pos:line="167" pos:column="21"/></operator><name pos:line="167" pos:column="18">protocol<pos:position pos:line="167" pos:column="26"/></name></name> <operator pos:line="167" pos:column="27">+<pos:position pos:line="167" pos:column="28"/></operator> <name pos:line="167" pos:column="29">len<pos:position pos:line="167" pos:column="32"/></name><operator pos:line="167" pos:column="32">)<pos:position pos:line="167" pos:column="33"/></operator> <operator pos:line="167" pos:column="34">=<pos:position pos:line="167" pos:column="35"/></operator> <literal type="char" pos:line="167" pos:column="36">'\0'<pos:position pos:line="167" pos:column="40"/></literal></expr>;<pos:position pos:line="167" pos:column="41"/></expr_stmt>

<label><name pos:line="169" pos:column="1">rrl_done<pos:position pos:line="169" pos:column="9"/></name>:<pos:position pos:line="169" pos:column="10"/></label>
    <comment type="block" pos:line="170" pos:column="5">/* For internal integrety and palloc efficiency, reconstruct the_request
     * in one palloc, using only single SP characters, per spec.
     */</comment>
    <expr_stmt><expr><name><name pos:line="173" pos:column="5">r<pos:position pos:line="173" pos:column="6"/></name><operator pos:line="173" pos:column="6">-&gt;<pos:position pos:line="173" pos:column="11"/></operator><name pos:line="173" pos:column="8">the_request<pos:position pos:line="173" pos:column="19"/></name></name> <operator pos:line="173" pos:column="20">=<pos:position pos:line="173" pos:column="21"/></operator> <call><name pos:line="173" pos:column="22">apr_pstrcat<pos:position pos:line="173" pos:column="33"/></name><argument_list pos:line="173" pos:column="33">(<argument><expr><name><name pos:line="173" pos:column="34">r<pos:position pos:line="173" pos:column="35"/></name><operator pos:line="173" pos:column="35">-&gt;<pos:position pos:line="173" pos:column="40"/></operator><name pos:line="173" pos:column="37">pool<pos:position pos:line="173" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="173" pos:column="43">r<pos:position pos:line="173" pos:column="44"/></name><operator pos:line="173" pos:column="44">-&gt;<pos:position pos:line="173" pos:column="49"/></operator><name pos:line="173" pos:column="46">method<pos:position pos:line="173" pos:column="52"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="173" pos:column="54">*<pos:position pos:line="173" pos:column="55"/></operator><name pos:line="173" pos:column="55">uri<pos:position pos:line="173" pos:column="58"/></name></expr> ?<pos:position pos:line="173" pos:column="60"/></condition><then pos:line="173" pos:column="60"> <expr><literal type="string" pos:line="173" pos:column="61">" "<pos:position pos:line="173" pos:column="64"/></literal></expr> <pos:position pos:line="173" pos:column="65"/></then><else pos:line="173" pos:column="65">: <expr><name pos:line="173" pos:column="67">NULL<pos:position pos:line="173" pos:column="71"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="173" pos:column="73">uri<pos:position pos:line="173" pos:column="76"/></name></expr></argument>,
                                 <argument><expr><ternary><condition><expr><operator pos:line="174" pos:column="34">*<pos:position pos:line="174" pos:column="35"/></operator><name><name pos:line="174" pos:column="35">r<pos:position pos:line="174" pos:column="36"/></name><operator pos:line="174" pos:column="36">-&gt;<pos:position pos:line="174" pos:column="41"/></operator><name pos:line="174" pos:column="38">protocol<pos:position pos:line="174" pos:column="46"/></name></name></expr> ?<pos:position pos:line="174" pos:column="48"/></condition><then pos:line="174" pos:column="48"> <expr><literal type="string" pos:line="174" pos:column="49">" "<pos:position pos:line="174" pos:column="52"/></literal></expr> <pos:position pos:line="174" pos:column="53"/></then><else pos:line="174" pos:column="53">: <expr><name pos:line="174" pos:column="55">NULL<pos:position pos:line="174" pos:column="59"/></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="174" pos:column="61">r<pos:position pos:line="174" pos:column="62"/></name><operator pos:line="174" pos:column="62">-&gt;<pos:position pos:line="174" pos:column="67"/></operator><name pos:line="174" pos:column="64">protocol<pos:position pos:line="174" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="74">NULL<pos:position pos:line="174" pos:column="78"/></name></expr></argument>)<pos:position pos:line="174" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="80"/></expr_stmt>

    <if pos:line="176" pos:column="5">if <condition pos:line="176" pos:column="8">(<expr><name pos:line="176" pos:column="9">len<pos:position pos:line="176" pos:column="12"/></name> <operator pos:line="176" pos:column="13">==<pos:position pos:line="176" pos:column="15"/></operator> <literal type="number" pos:line="176" pos:column="16">8<pos:position pos:line="176" pos:column="17"/></literal>
            <operator pos:line="177" pos:column="13">&amp;&amp;<pos:position pos:line="177" pos:column="23"/></operator> <name><name pos:line="177" pos:column="16">r<pos:position pos:line="177" pos:column="17"/></name><operator pos:line="177" pos:column="17">-&gt;<pos:position pos:line="177" pos:column="22"/></operator><name pos:line="177" pos:column="19">protocol<pos:position pos:line="177" pos:column="27"/></name><index pos:line="177" pos:column="27">[<expr><literal type="number" pos:line="177" pos:column="28">0<pos:position pos:line="177" pos:column="29"/></literal></expr>]<pos:position pos:line="177" pos:column="30"/></index></name> <operator pos:line="177" pos:column="31">==<pos:position pos:line="177" pos:column="33"/></operator> <literal type="char" pos:line="177" pos:column="34">'H'<pos:position pos:line="177" pos:column="37"/></literal> <operator pos:line="177" pos:column="38">&amp;&amp;<pos:position pos:line="177" pos:column="48"/></operator> <name><name pos:line="177" pos:column="41">r<pos:position pos:line="177" pos:column="42"/></name><operator pos:line="177" pos:column="42">-&gt;<pos:position pos:line="177" pos:column="47"/></operator><name pos:line="177" pos:column="44">protocol<pos:position pos:line="177" pos:column="52"/></name><index pos:line="177" pos:column="52">[<expr><literal type="number" pos:line="177" pos:column="53">1<pos:position pos:line="177" pos:column="54"/></literal></expr>]<pos:position pos:line="177" pos:column="55"/></index></name> <operator pos:line="177" pos:column="56">==<pos:position pos:line="177" pos:column="58"/></operator> <literal type="char" pos:line="177" pos:column="59">'T'<pos:position pos:line="177" pos:column="62"/></literal>
            <operator pos:line="178" pos:column="13">&amp;&amp;<pos:position pos:line="178" pos:column="23"/></operator> <name><name pos:line="178" pos:column="16">r<pos:position pos:line="178" pos:column="17"/></name><operator pos:line="178" pos:column="17">-&gt;<pos:position pos:line="178" pos:column="22"/></operator><name pos:line="178" pos:column="19">protocol<pos:position pos:line="178" pos:column="27"/></name><index pos:line="178" pos:column="27">[<expr><literal type="number" pos:line="178" pos:column="28">2<pos:position pos:line="178" pos:column="29"/></literal></expr>]<pos:position pos:line="178" pos:column="30"/></index></name> <operator pos:line="178" pos:column="31">==<pos:position pos:line="178" pos:column="33"/></operator> <literal type="char" pos:line="178" pos:column="34">'T'<pos:position pos:line="178" pos:column="37"/></literal> <operator pos:line="178" pos:column="38">&amp;&amp;<pos:position pos:line="178" pos:column="48"/></operator> <name><name pos:line="178" pos:column="41">r<pos:position pos:line="178" pos:column="42"/></name><operator pos:line="178" pos:column="42">-&gt;<pos:position pos:line="178" pos:column="47"/></operator><name pos:line="178" pos:column="44">protocol<pos:position pos:line="178" pos:column="52"/></name><index pos:line="178" pos:column="52">[<expr><literal type="number" pos:line="178" pos:column="53">3<pos:position pos:line="178" pos:column="54"/></literal></expr>]<pos:position pos:line="178" pos:column="55"/></index></name> <operator pos:line="178" pos:column="56">==<pos:position pos:line="178" pos:column="58"/></operator> <literal type="char" pos:line="178" pos:column="59">'P'<pos:position pos:line="178" pos:column="62"/></literal>
            <operator pos:line="179" pos:column="13">&amp;&amp;<pos:position pos:line="179" pos:column="23"/></operator> <name><name pos:line="179" pos:column="16">r<pos:position pos:line="179" pos:column="17"/></name><operator pos:line="179" pos:column="17">-&gt;<pos:position pos:line="179" pos:column="22"/></operator><name pos:line="179" pos:column="19">protocol<pos:position pos:line="179" pos:column="27"/></name><index pos:line="179" pos:column="27">[<expr><literal type="number" pos:line="179" pos:column="28">4<pos:position pos:line="179" pos:column="29"/></literal></expr>]<pos:position pos:line="179" pos:column="30"/></index></name> <operator pos:line="179" pos:column="31">==<pos:position pos:line="179" pos:column="33"/></operator> <literal type="char" pos:line="179" pos:column="34">'/'<pos:position pos:line="179" pos:column="37"/></literal> <operator pos:line="179" pos:column="38">&amp;&amp;<pos:position pos:line="179" pos:column="48"/></operator> <call><name pos:line="179" pos:column="41">apr_isdigit<pos:position pos:line="179" pos:column="52"/></name><argument_list pos:line="179" pos:column="52">(<argument><expr><name><name pos:line="179" pos:column="53">r<pos:position pos:line="179" pos:column="54"/></name><operator pos:line="179" pos:column="54">-&gt;<pos:position pos:line="179" pos:column="59"/></operator><name pos:line="179" pos:column="56">protocol<pos:position pos:line="179" pos:column="64"/></name><index pos:line="179" pos:column="64">[<expr><literal type="number" pos:line="179" pos:column="65">5<pos:position pos:line="179" pos:column="66"/></literal></expr>]<pos:position pos:line="179" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="179" pos:column="68"/></argument_list></call>
            <operator pos:line="180" pos:column="13">&amp;&amp;<pos:position pos:line="180" pos:column="23"/></operator> <name><name pos:line="180" pos:column="16">r<pos:position pos:line="180" pos:column="17"/></name><operator pos:line="180" pos:column="17">-&gt;<pos:position pos:line="180" pos:column="22"/></operator><name pos:line="180" pos:column="19">protocol<pos:position pos:line="180" pos:column="27"/></name><index pos:line="180" pos:column="27">[<expr><literal type="number" pos:line="180" pos:column="28">6<pos:position pos:line="180" pos:column="29"/></literal></expr>]<pos:position pos:line="180" pos:column="30"/></index></name> <operator pos:line="180" pos:column="31">==<pos:position pos:line="180" pos:column="33"/></operator> <literal type="char" pos:line="180" pos:column="34">'.'<pos:position pos:line="180" pos:column="37"/></literal> <operator pos:line="180" pos:column="38">&amp;&amp;<pos:position pos:line="180" pos:column="48"/></operator> <call><name pos:line="180" pos:column="41">apr_isdigit<pos:position pos:line="180" pos:column="52"/></name><argument_list pos:line="180" pos:column="52">(<argument><expr><name><name pos:line="180" pos:column="53">r<pos:position pos:line="180" pos:column="54"/></name><operator pos:line="180" pos:column="54">-&gt;<pos:position pos:line="180" pos:column="59"/></operator><name pos:line="180" pos:column="56">protocol<pos:position pos:line="180" pos:column="64"/></name><index pos:line="180" pos:column="64">[<expr><literal type="number" pos:line="180" pos:column="65">7<pos:position pos:line="180" pos:column="66"/></literal></expr>]<pos:position pos:line="180" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="180" pos:column="68"/></argument_list></call>
            <operator pos:line="181" pos:column="13">&amp;&amp;<pos:position pos:line="181" pos:column="23"/></operator> <name><name pos:line="181" pos:column="16">r<pos:position pos:line="181" pos:column="17"/></name><operator pos:line="181" pos:column="17">-&gt;<pos:position pos:line="181" pos:column="22"/></operator><name pos:line="181" pos:column="19">protocol<pos:position pos:line="181" pos:column="27"/></name><index pos:line="181" pos:column="27">[<expr><literal type="number" pos:line="181" pos:column="28">5<pos:position pos:line="181" pos:column="29"/></literal></expr>]<pos:position pos:line="181" pos:column="30"/></index></name> <operator pos:line="181" pos:column="31">!=<pos:position pos:line="181" pos:column="33"/></operator> <literal type="char" pos:line="181" pos:column="34">'0'<pos:position pos:line="181" pos:column="37"/></literal></expr>)<pos:position pos:line="181" pos:column="38"/></condition><then pos:line="181" pos:column="38"> <block pos:line="181" pos:column="39">{
        <expr_stmt><expr><name><name pos:line="182" pos:column="9">r<pos:position pos:line="182" pos:column="10"/></name><operator pos:line="182" pos:column="10">-&gt;<pos:position pos:line="182" pos:column="15"/></operator><name pos:line="182" pos:column="12">assbackwards<pos:position pos:line="182" pos:column="24"/></name></name> <operator pos:line="182" pos:column="25">=<pos:position pos:line="182" pos:column="26"/></operator> <literal type="number" pos:line="182" pos:column="27">0<pos:position pos:line="182" pos:column="28"/></literal></expr>;<pos:position pos:line="182" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="183" pos:column="9">r<pos:position pos:line="183" pos:column="10"/></name><operator pos:line="183" pos:column="10">-&gt;<pos:position pos:line="183" pos:column="15"/></operator><name pos:line="183" pos:column="12">proto_num<pos:position pos:line="183" pos:column="21"/></name></name> <operator pos:line="183" pos:column="22">=<pos:position pos:line="183" pos:column="23"/></operator> <call><name pos:line="183" pos:column="24">HTTP_VERSION<pos:position pos:line="183" pos:column="36"/></name><argument_list pos:line="183" pos:column="36">(<argument><expr><name><name pos:line="183" pos:column="37">r<pos:position pos:line="183" pos:column="38"/></name><operator pos:line="183" pos:column="38">-&gt;<pos:position pos:line="183" pos:column="43"/></operator><name pos:line="183" pos:column="40">protocol<pos:position pos:line="183" pos:column="48"/></name><index pos:line="183" pos:column="48">[<expr><literal type="number" pos:line="183" pos:column="49">5<pos:position pos:line="183" pos:column="50"/></literal></expr>]<pos:position pos:line="183" pos:column="51"/></index></name> <operator pos:line="183" pos:column="52">-<pos:position pos:line="183" pos:column="53"/></operator> <literal type="char" pos:line="183" pos:column="54">'0'<pos:position pos:line="183" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="183" pos:column="59">r<pos:position pos:line="183" pos:column="60"/></name><operator pos:line="183" pos:column="60">-&gt;<pos:position pos:line="183" pos:column="65"/></operator><name pos:line="183" pos:column="62">protocol<pos:position pos:line="183" pos:column="70"/></name><index pos:line="183" pos:column="70">[<expr><literal type="number" pos:line="183" pos:column="71">7<pos:position pos:line="183" pos:column="72"/></literal></expr>]<pos:position pos:line="183" pos:column="73"/></index></name> <operator pos:line="183" pos:column="74">-<pos:position pos:line="183" pos:column="75"/></operator> <literal type="char" pos:line="183" pos:column="76">'0'<pos:position pos:line="183" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="184" pos:column="6"/></block></then>
    <elseif pos:line="185" pos:column="5">else <if pos:line="185" pos:column="10">if <condition pos:line="185" pos:column="13">(<expr><name pos:line="185" pos:column="14">len<pos:position pos:line="185" pos:column="17"/></name> <operator pos:line="185" pos:column="18">==<pos:position pos:line="185" pos:column="20"/></operator> <literal type="number" pos:line="185" pos:column="21">8<pos:position pos:line="185" pos:column="22"/></literal>
                 <operator pos:line="186" pos:column="18">&amp;&amp;<pos:position pos:line="186" pos:column="28"/></operator> <operator pos:line="186" pos:column="21">(<pos:position pos:line="186" pos:column="22"/></operator><name><name pos:line="186" pos:column="22">r<pos:position pos:line="186" pos:column="23"/></name><operator pos:line="186" pos:column="23">-&gt;<pos:position pos:line="186" pos:column="28"/></operator><name pos:line="186" pos:column="25">protocol<pos:position pos:line="186" pos:column="33"/></name><index pos:line="186" pos:column="33">[<expr><literal type="number" pos:line="186" pos:column="34">0<pos:position pos:line="186" pos:column="35"/></literal></expr>]<pos:position pos:line="186" pos:column="36"/></index></name> <operator pos:line="186" pos:column="37">==<pos:position pos:line="186" pos:column="39"/></operator> <literal type="char" pos:line="186" pos:column="40">'H'<pos:position pos:line="186" pos:column="43"/></literal> <operator pos:line="186" pos:column="44">||<pos:position pos:line="186" pos:column="46"/></operator> <name><name pos:line="186" pos:column="47">r<pos:position pos:line="186" pos:column="48"/></name><operator pos:line="186" pos:column="48">-&gt;<pos:position pos:line="186" pos:column="53"/></operator><name pos:line="186" pos:column="50">protocol<pos:position pos:line="186" pos:column="58"/></name><index pos:line="186" pos:column="58">[<expr><literal type="number" pos:line="186" pos:column="59">0<pos:position pos:line="186" pos:column="60"/></literal></expr>]<pos:position pos:line="186" pos:column="61"/></index></name> <operator pos:line="186" pos:column="62">==<pos:position pos:line="186" pos:column="64"/></operator> <literal type="char" pos:line="186" pos:column="65">'h'<pos:position pos:line="186" pos:column="68"/></literal><operator pos:line="186" pos:column="68">)<pos:position pos:line="186" pos:column="69"/></operator>
                 <operator pos:line="187" pos:column="18">&amp;&amp;<pos:position pos:line="187" pos:column="28"/></operator> <operator pos:line="187" pos:column="21">(<pos:position pos:line="187" pos:column="22"/></operator><name><name pos:line="187" pos:column="22">r<pos:position pos:line="187" pos:column="23"/></name><operator pos:line="187" pos:column="23">-&gt;<pos:position pos:line="187" pos:column="28"/></operator><name pos:line="187" pos:column="25">protocol<pos:position pos:line="187" pos:column="33"/></name><index pos:line="187" pos:column="33">[<expr><literal type="number" pos:line="187" pos:column="34">1<pos:position pos:line="187" pos:column="35"/></literal></expr>]<pos:position pos:line="187" pos:column="36"/></index></name> <operator pos:line="187" pos:column="37">==<pos:position pos:line="187" pos:column="39"/></operator> <literal type="char" pos:line="187" pos:column="40">'T'<pos:position pos:line="187" pos:column="43"/></literal> <operator pos:line="187" pos:column="44">||<pos:position pos:line="187" pos:column="46"/></operator> <name><name pos:line="187" pos:column="47">r<pos:position pos:line="187" pos:column="48"/></name><operator pos:line="187" pos:column="48">-&gt;<pos:position pos:line="187" pos:column="53"/></operator><name pos:line="187" pos:column="50">protocol<pos:position pos:line="187" pos:column="58"/></name><index pos:line="187" pos:column="58">[<expr><literal type="number" pos:line="187" pos:column="59">1<pos:position pos:line="187" pos:column="60"/></literal></expr>]<pos:position pos:line="187" pos:column="61"/></index></name> <operator pos:line="187" pos:column="62">==<pos:position pos:line="187" pos:column="64"/></operator> <literal type="char" pos:line="187" pos:column="65">'t'<pos:position pos:line="187" pos:column="68"/></literal><operator pos:line="187" pos:column="68">)<pos:position pos:line="187" pos:column="69"/></operator>
                 <operator pos:line="188" pos:column="18">&amp;&amp;<pos:position pos:line="188" pos:column="28"/></operator> <operator pos:line="188" pos:column="21">(<pos:position pos:line="188" pos:column="22"/></operator><name><name pos:line="188" pos:column="22">r<pos:position pos:line="188" pos:column="23"/></name><operator pos:line="188" pos:column="23">-&gt;<pos:position pos:line="188" pos:column="28"/></operator><name pos:line="188" pos:column="25">protocol<pos:position pos:line="188" pos:column="33"/></name><index pos:line="188" pos:column="33">[<expr><literal type="number" pos:line="188" pos:column="34">2<pos:position pos:line="188" pos:column="35"/></literal></expr>]<pos:position pos:line="188" pos:column="36"/></index></name> <operator pos:line="188" pos:column="37">==<pos:position pos:line="188" pos:column="39"/></operator> <literal type="char" pos:line="188" pos:column="40">'T'<pos:position pos:line="188" pos:column="43"/></literal> <operator pos:line="188" pos:column="44">||<pos:position pos:line="188" pos:column="46"/></operator> <name><name pos:line="188" pos:column="47">r<pos:position pos:line="188" pos:column="48"/></name><operator pos:line="188" pos:column="48">-&gt;<pos:position pos:line="188" pos:column="53"/></operator><name pos:line="188" pos:column="50">protocol<pos:position pos:line="188" pos:column="58"/></name><index pos:line="188" pos:column="58">[<expr><literal type="number" pos:line="188" pos:column="59">2<pos:position pos:line="188" pos:column="60"/></literal></expr>]<pos:position pos:line="188" pos:column="61"/></index></name> <operator pos:line="188" pos:column="62">==<pos:position pos:line="188" pos:column="64"/></operator> <literal type="char" pos:line="188" pos:column="65">'t'<pos:position pos:line="188" pos:column="68"/></literal><operator pos:line="188" pos:column="68">)<pos:position pos:line="188" pos:column="69"/></operator>
                 <operator pos:line="189" pos:column="18">&amp;&amp;<pos:position pos:line="189" pos:column="28"/></operator> <operator pos:line="189" pos:column="21">(<pos:position pos:line="189" pos:column="22"/></operator><name><name pos:line="189" pos:column="22">r<pos:position pos:line="189" pos:column="23"/></name><operator pos:line="189" pos:column="23">-&gt;<pos:position pos:line="189" pos:column="28"/></operator><name pos:line="189" pos:column="25">protocol<pos:position pos:line="189" pos:column="33"/></name><index pos:line="189" pos:column="33">[<expr><literal type="number" pos:line="189" pos:column="34">3<pos:position pos:line="189" pos:column="35"/></literal></expr>]<pos:position pos:line="189" pos:column="36"/></index></name> <operator pos:line="189" pos:column="37">==<pos:position pos:line="189" pos:column="39"/></operator> <literal type="char" pos:line="189" pos:column="40">'P'<pos:position pos:line="189" pos:column="43"/></literal> <operator pos:line="189" pos:column="44">||<pos:position pos:line="189" pos:column="46"/></operator> <name><name pos:line="189" pos:column="47">r<pos:position pos:line="189" pos:column="48"/></name><operator pos:line="189" pos:column="48">-&gt;<pos:position pos:line="189" pos:column="53"/></operator><name pos:line="189" pos:column="50">protocol<pos:position pos:line="189" pos:column="58"/></name><index pos:line="189" pos:column="58">[<expr><literal type="number" pos:line="189" pos:column="59">3<pos:position pos:line="189" pos:column="60"/></literal></expr>]<pos:position pos:line="189" pos:column="61"/></index></name> <operator pos:line="189" pos:column="62">==<pos:position pos:line="189" pos:column="64"/></operator> <literal type="char" pos:line="189" pos:column="65">'p'<pos:position pos:line="189" pos:column="68"/></literal><operator pos:line="189" pos:column="68">)<pos:position pos:line="189" pos:column="69"/></operator>
                 <operator pos:line="190" pos:column="18">&amp;&amp;<pos:position pos:line="190" pos:column="28"/></operator> <name><name pos:line="190" pos:column="21">r<pos:position pos:line="190" pos:column="22"/></name><operator pos:line="190" pos:column="22">-&gt;<pos:position pos:line="190" pos:column="27"/></operator><name pos:line="190" pos:column="24">protocol<pos:position pos:line="190" pos:column="32"/></name><index pos:line="190" pos:column="32">[<expr><literal type="number" pos:line="190" pos:column="33">4<pos:position pos:line="190" pos:column="34"/></literal></expr>]<pos:position pos:line="190" pos:column="35"/></index></name> <operator pos:line="190" pos:column="36">==<pos:position pos:line="190" pos:column="38"/></operator> <literal type="char" pos:line="190" pos:column="39">'/'<pos:position pos:line="190" pos:column="42"/></literal> <operator pos:line="190" pos:column="43">&amp;&amp;<pos:position pos:line="190" pos:column="53"/></operator> <call><name pos:line="190" pos:column="46">apr_isdigit<pos:position pos:line="190" pos:column="57"/></name><argument_list pos:line="190" pos:column="57">(<argument><expr><name><name pos:line="190" pos:column="58">r<pos:position pos:line="190" pos:column="59"/></name><operator pos:line="190" pos:column="59">-&gt;<pos:position pos:line="190" pos:column="64"/></operator><name pos:line="190" pos:column="61">protocol<pos:position pos:line="190" pos:column="69"/></name><index pos:line="190" pos:column="69">[<expr><literal type="number" pos:line="190" pos:column="70">5<pos:position pos:line="190" pos:column="71"/></literal></expr>]<pos:position pos:line="190" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="190" pos:column="73"/></argument_list></call>
                 <operator pos:line="191" pos:column="18">&amp;&amp;<pos:position pos:line="191" pos:column="28"/></operator> <name><name pos:line="191" pos:column="21">r<pos:position pos:line="191" pos:column="22"/></name><operator pos:line="191" pos:column="22">-&gt;<pos:position pos:line="191" pos:column="27"/></operator><name pos:line="191" pos:column="24">protocol<pos:position pos:line="191" pos:column="32"/></name><index pos:line="191" pos:column="32">[<expr><literal type="number" pos:line="191" pos:column="33">6<pos:position pos:line="191" pos:column="34"/></literal></expr>]<pos:position pos:line="191" pos:column="35"/></index></name> <operator pos:line="191" pos:column="36">==<pos:position pos:line="191" pos:column="38"/></operator> <literal type="char" pos:line="191" pos:column="39">'.'<pos:position pos:line="191" pos:column="42"/></literal> <operator pos:line="191" pos:column="43">&amp;&amp;<pos:position pos:line="191" pos:column="53"/></operator> <call><name pos:line="191" pos:column="46">apr_isdigit<pos:position pos:line="191" pos:column="57"/></name><argument_list pos:line="191" pos:column="57">(<argument><expr><name><name pos:line="191" pos:column="58">r<pos:position pos:line="191" pos:column="59"/></name><operator pos:line="191" pos:column="59">-&gt;<pos:position pos:line="191" pos:column="64"/></operator><name pos:line="191" pos:column="61">protocol<pos:position pos:line="191" pos:column="69"/></name><index pos:line="191" pos:column="69">[<expr><literal type="number" pos:line="191" pos:column="70">7<pos:position pos:line="191" pos:column="71"/></literal></expr>]<pos:position pos:line="191" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="191" pos:column="73"/></argument_list></call>
                 <operator pos:line="192" pos:column="18">&amp;&amp;<pos:position pos:line="192" pos:column="28"/></operator> <name><name pos:line="192" pos:column="21">r<pos:position pos:line="192" pos:column="22"/></name><operator pos:line="192" pos:column="22">-&gt;<pos:position pos:line="192" pos:column="27"/></operator><name pos:line="192" pos:column="24">protocol<pos:position pos:line="192" pos:column="32"/></name><index pos:line="192" pos:column="32">[<expr><literal type="number" pos:line="192" pos:column="33">5<pos:position pos:line="192" pos:column="34"/></literal></expr>]<pos:position pos:line="192" pos:column="35"/></index></name> <operator pos:line="192" pos:column="36">!=<pos:position pos:line="192" pos:column="38"/></operator> <literal type="char" pos:line="192" pos:column="39">'0'<pos:position pos:line="192" pos:column="42"/></literal></expr>)<pos:position pos:line="192" pos:column="43"/></condition><then pos:line="192" pos:column="43"> <block pos:line="192" pos:column="44">{
        <expr_stmt><expr><name><name pos:line="193" pos:column="9">r<pos:position pos:line="193" pos:column="10"/></name><operator pos:line="193" pos:column="10">-&gt;<pos:position pos:line="193" pos:column="15"/></operator><name pos:line="193" pos:column="12">assbackwards<pos:position pos:line="193" pos:column="24"/></name></name> <operator pos:line="193" pos:column="25">=<pos:position pos:line="193" pos:column="26"/></operator> <literal type="number" pos:line="193" pos:column="27">0<pos:position pos:line="193" pos:column="28"/></literal></expr>;<pos:position pos:line="193" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="194" pos:column="9">r<pos:position pos:line="194" pos:column="10"/></name><operator pos:line="194" pos:column="10">-&gt;<pos:position pos:line="194" pos:column="15"/></operator><name pos:line="194" pos:column="12">proto_num<pos:position pos:line="194" pos:column="21"/></name></name> <operator pos:line="194" pos:column="22">=<pos:position pos:line="194" pos:column="23"/></operator> <call><name pos:line="194" pos:column="24">HTTP_VERSION<pos:position pos:line="194" pos:column="36"/></name><argument_list pos:line="194" pos:column="36">(<argument><expr><name><name pos:line="194" pos:column="37">r<pos:position pos:line="194" pos:column="38"/></name><operator pos:line="194" pos:column="38">-&gt;<pos:position pos:line="194" pos:column="43"/></operator><name pos:line="194" pos:column="40">protocol<pos:position pos:line="194" pos:column="48"/></name><index pos:line="194" pos:column="48">[<expr><literal type="number" pos:line="194" pos:column="49">5<pos:position pos:line="194" pos:column="50"/></literal></expr>]<pos:position pos:line="194" pos:column="51"/></index></name> <operator pos:line="194" pos:column="52">-<pos:position pos:line="194" pos:column="53"/></operator> <literal type="char" pos:line="194" pos:column="54">'0'<pos:position pos:line="194" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="194" pos:column="59">r<pos:position pos:line="194" pos:column="60"/></name><operator pos:line="194" pos:column="60">-&gt;<pos:position pos:line="194" pos:column="65"/></operator><name pos:line="194" pos:column="62">protocol<pos:position pos:line="194" pos:column="70"/></name><index pos:line="194" pos:column="70">[<expr><literal type="number" pos:line="194" pos:column="71">7<pos:position pos:line="194" pos:column="72"/></literal></expr>]<pos:position pos:line="194" pos:column="73"/></index></name> <operator pos:line="194" pos:column="74">-<pos:position pos:line="194" pos:column="75"/></operator> <literal type="char" pos:line="194" pos:column="76">'0'<pos:position pos:line="194" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="194" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="81"/></expr_stmt>
        <if pos:line="195" pos:column="9">if <condition pos:line="195" pos:column="12">(<expr><name pos:line="195" pos:column="13">strict<pos:position pos:line="195" pos:column="19"/></name> <operator pos:line="195" pos:column="20">&amp;&amp;<pos:position pos:line="195" pos:column="30"/></operator> <name pos:line="195" pos:column="23">deferred_error<pos:position pos:line="195" pos:column="37"/></name> <operator pos:line="195" pos:column="38">==<pos:position pos:line="195" pos:column="40"/></operator> <name pos:line="195" pos:column="41">rrl_none<pos:position pos:line="195" pos:column="49"/></name></expr>)<pos:position pos:line="195" pos:column="50"/></condition><then pos:line="195" pos:column="50">
            <block type="pseudo"><expr_stmt><expr><name pos:line="196" pos:column="13">deferred_error<pos:position pos:line="196" pos:column="27"/></name> <operator pos:line="196" pos:column="28">=<pos:position pos:line="196" pos:column="29"/></operator> <name pos:line="196" pos:column="30">rrl_badprotocol<pos:position pos:line="196" pos:column="45"/></name></expr>;<pos:position pos:line="196" pos:column="46"/></expr_stmt></block></then>
        <else pos:line="197" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="198" pos:column="13">memcpy<pos:position pos:line="198" pos:column="19"/></name><argument_list pos:line="198" pos:column="19">(<argument><expr><operator pos:line="198" pos:column="20">(<pos:position pos:line="198" pos:column="21"/></operator><name pos:line="198" pos:column="21">char<pos:position pos:line="198" pos:column="25"/></name><operator pos:line="198" pos:column="25">*<pos:position pos:line="198" pos:column="26"/></operator><operator pos:line="198" pos:column="26">)<pos:position pos:line="198" pos:column="27"/></operator><name><name pos:line="198" pos:column="27">r<pos:position pos:line="198" pos:column="28"/></name><operator pos:line="198" pos:column="28">-&gt;<pos:position pos:line="198" pos:column="33"/></operator><name pos:line="198" pos:column="30">protocol<pos:position pos:line="198" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="40">"HTTP"<pos:position pos:line="198" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="198" pos:column="48">4<pos:position pos:line="198" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="51"/></expr_stmt></block></else></if>
    }<pos:position pos:line="199" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="200" pos:column="5">else <if pos:line="200" pos:column="10">if <condition pos:line="200" pos:column="13">(<expr><name><name pos:line="200" pos:column="14">r<pos:position pos:line="200" pos:column="15"/></name><operator pos:line="200" pos:column="15">-&gt;<pos:position pos:line="200" pos:column="20"/></operator><name pos:line="200" pos:column="17">protocol<pos:position pos:line="200" pos:column="25"/></name><index pos:line="200" pos:column="25">[<expr><literal type="number" pos:line="200" pos:column="26">0<pos:position pos:line="200" pos:column="27"/></literal></expr>]<pos:position pos:line="200" pos:column="28"/></index></name></expr>)<pos:position pos:line="200" pos:column="29"/></condition><then pos:line="200" pos:column="29"> <block pos:line="200" pos:column="30">{
        <expr_stmt><expr><name><name pos:line="201" pos:column="9">r<pos:position pos:line="201" pos:column="10"/></name><operator pos:line="201" pos:column="10">-&gt;<pos:position pos:line="201" pos:column="15"/></operator><name pos:line="201" pos:column="12">proto_num<pos:position pos:line="201" pos:column="21"/></name></name> <operator pos:line="201" pos:column="22">=<pos:position pos:line="201" pos:column="23"/></operator> <call><name pos:line="201" pos:column="24">HTTP_VERSION<pos:position pos:line="201" pos:column="36"/></name><argument_list pos:line="201" pos:column="36">(<argument><expr><literal type="number" pos:line="201" pos:column="37">0<pos:position pos:line="201" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="201" pos:column="40">9<pos:position pos:line="201" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="43"/></expr_stmt>
        <comment type="block" pos:line="202" pos:column="9">/* Defer setting the r-&gt;protocol string till error msg is composed */</comment>
        <if pos:line="203" pos:column="9">if <condition pos:line="203" pos:column="12">(<expr><name pos:line="203" pos:column="13">deferred_error<pos:position pos:line="203" pos:column="27"/></name> <operator pos:line="203" pos:column="28">==<pos:position pos:line="203" pos:column="30"/></operator> <name pos:line="203" pos:column="31">rrl_none<pos:position pos:line="203" pos:column="39"/></name></expr>)<pos:position pos:line="203" pos:column="40"/></condition><then pos:line="203" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name pos:line="204" pos:column="13">deferred_error<pos:position pos:line="204" pos:column="27"/></name> <operator pos:line="204" pos:column="28">=<pos:position pos:line="204" pos:column="29"/></operator> <name pos:line="204" pos:column="30">rrl_badprotocol<pos:position pos:line="204" pos:column="45"/></name></expr>;<pos:position pos:line="204" pos:column="46"/></expr_stmt></block></then></if>
    }<pos:position pos:line="205" pos:column="6"/></block></then></if></elseif>
    <else pos:line="206" pos:column="5">else <block pos:line="206" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="207" pos:column="9">r<pos:position pos:line="207" pos:column="10"/></name><operator pos:line="207" pos:column="10">-&gt;<pos:position pos:line="207" pos:column="15"/></operator><name pos:line="207" pos:column="12">assbackwards<pos:position pos:line="207" pos:column="24"/></name></name> <operator pos:line="207" pos:column="25">=<pos:position pos:line="207" pos:column="26"/></operator> <literal type="number" pos:line="207" pos:column="27">1<pos:position pos:line="207" pos:column="28"/></literal></expr>;<pos:position pos:line="207" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="208" pos:column="9">r<pos:position pos:line="208" pos:column="10"/></name><operator pos:line="208" pos:column="10">-&gt;<pos:position pos:line="208" pos:column="15"/></operator><name pos:line="208" pos:column="12">protocol<pos:position pos:line="208" pos:column="20"/></name></name>  <operator pos:line="208" pos:column="22">=<pos:position pos:line="208" pos:column="23"/></operator> <call><name pos:line="208" pos:column="24">apr_pstrdup<pos:position pos:line="208" pos:column="35"/></name><argument_list pos:line="208" pos:column="35">(<argument><expr><name><name pos:line="208" pos:column="36">r<pos:position pos:line="208" pos:column="37"/></name><operator pos:line="208" pos:column="37">-&gt;<pos:position pos:line="208" pos:column="42"/></operator><name pos:line="208" pos:column="39">pool<pos:position pos:line="208" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="45">"HTTP/0.9"<pos:position pos:line="208" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="209" pos:column="9">r<pos:position pos:line="209" pos:column="10"/></name><operator pos:line="209" pos:column="10">-&gt;<pos:position pos:line="209" pos:column="15"/></operator><name pos:line="209" pos:column="12">proto_num<pos:position pos:line="209" pos:column="21"/></name></name> <operator pos:line="209" pos:column="22">=<pos:position pos:line="209" pos:column="23"/></operator> <call><name pos:line="209" pos:column="24">HTTP_VERSION<pos:position pos:line="209" pos:column="36"/></name><argument_list pos:line="209" pos:column="36">(<argument><expr><literal type="number" pos:line="209" pos:column="37">0<pos:position pos:line="209" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="209" pos:column="40">9<pos:position pos:line="209" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="209" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="210" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="212" pos:column="5">/* Determine the method_number and parse the uri prior to invoking error
     * handling, such that these fields are available for subsitution
     */</comment>
    <expr_stmt><expr><name><name pos:line="215" pos:column="5">r<pos:position pos:line="215" pos:column="6"/></name><operator pos:line="215" pos:column="6">-&gt;<pos:position pos:line="215" pos:column="11"/></operator><name pos:line="215" pos:column="8">method_number<pos:position pos:line="215" pos:column="21"/></name></name> <operator pos:line="215" pos:column="22">=<pos:position pos:line="215" pos:column="23"/></operator> <call><name pos:line="215" pos:column="24">ap_method_number_of<pos:position pos:line="215" pos:column="43"/></name><argument_list pos:line="215" pos:column="43">(<argument><expr><name><name pos:line="215" pos:column="44">r<pos:position pos:line="215" pos:column="45"/></name><operator pos:line="215" pos:column="45">-&gt;<pos:position pos:line="215" pos:column="50"/></operator><name pos:line="215" pos:column="47">method<pos:position pos:line="215" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="215" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="55"/></expr_stmt>
    <if pos:line="216" pos:column="5">if <condition pos:line="216" pos:column="8">(<expr><name><name pos:line="216" pos:column="9">r<pos:position pos:line="216" pos:column="10"/></name><operator pos:line="216" pos:column="10">-&gt;<pos:position pos:line="216" pos:column="15"/></operator><name pos:line="216" pos:column="12">method_number<pos:position pos:line="216" pos:column="25"/></name></name> <operator pos:line="216" pos:column="26">==<pos:position pos:line="216" pos:column="28"/></operator> <name pos:line="216" pos:column="29">M_GET<pos:position pos:line="216" pos:column="34"/></name> <operator pos:line="216" pos:column="35">&amp;&amp;<pos:position pos:line="216" pos:column="45"/></operator> <name><name pos:line="216" pos:column="38">r<pos:position pos:line="216" pos:column="39"/></name><operator pos:line="216" pos:column="39">-&gt;<pos:position pos:line="216" pos:column="44"/></operator><name pos:line="216" pos:column="41">method<pos:position pos:line="216" pos:column="47"/></name><index pos:line="216" pos:column="47">[<expr><literal type="number" pos:line="216" pos:column="48">0<pos:position pos:line="216" pos:column="49"/></literal></expr>]<pos:position pos:line="216" pos:column="50"/></index></name> <operator pos:line="216" pos:column="51">==<pos:position pos:line="216" pos:column="53"/></operator> <literal type="char" pos:line="216" pos:column="54">'H'<pos:position pos:line="216" pos:column="57"/></literal></expr>)<pos:position pos:line="216" pos:column="58"/></condition><then pos:line="216" pos:column="58">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="217" pos:column="9">r<pos:position pos:line="217" pos:column="10"/></name><operator pos:line="217" pos:column="10">-&gt;<pos:position pos:line="217" pos:column="15"/></operator><name pos:line="217" pos:column="12">header_only<pos:position pos:line="217" pos:column="23"/></name></name> <operator pos:line="217" pos:column="24">=<pos:position pos:line="217" pos:column="25"/></operator> <literal type="number" pos:line="217" pos:column="26">1<pos:position pos:line="217" pos:column="27"/></literal></expr>;<pos:position pos:line="217" pos:column="28"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="219" pos:column="5">ap_parse_uri<pos:position pos:line="219" pos:column="17"/></name><argument_list pos:line="219" pos:column="17">(<argument><expr><name pos:line="219" pos:column="18">r<pos:position pos:line="219" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="21">uri<pos:position pos:line="219" pos:column="24"/></name></expr></argument>)<pos:position pos:line="219" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="221" pos:column="5">/* With the request understood, we can consider HTTP/0.9 specific errors */</comment>
    <if pos:line="222" pos:column="5">if <condition pos:line="222" pos:column="8">(<expr><name><name pos:line="222" pos:column="9">r<pos:position pos:line="222" pos:column="10"/></name><operator pos:line="222" pos:column="10">-&gt;<pos:position pos:line="222" pos:column="15"/></operator><name pos:line="222" pos:column="12">proto_num<pos:position pos:line="222" pos:column="21"/></name></name> <operator pos:line="222" pos:column="22">==<pos:position pos:line="222" pos:column="24"/></operator> <call><name pos:line="222" pos:column="25">HTTP_VERSION<pos:position pos:line="222" pos:column="37"/></name><argument_list pos:line="222" pos:column="37">(<argument><expr><literal type="number" pos:line="222" pos:column="38">0<pos:position pos:line="222" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="222" pos:column="41">9<pos:position pos:line="222" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="43"/></argument_list></call> <operator pos:line="222" pos:column="44">&amp;&amp;<pos:position pos:line="222" pos:column="54"/></operator> <name pos:line="222" pos:column="47">deferred_error<pos:position pos:line="222" pos:column="61"/></name> <operator pos:line="222" pos:column="62">==<pos:position pos:line="222" pos:column="64"/></operator> <name pos:line="222" pos:column="65">rrl_none<pos:position pos:line="222" pos:column="73"/></name></expr>)<pos:position pos:line="222" pos:column="74"/></condition><then pos:line="222" pos:column="74"> <block pos:line="222" pos:column="75">{
        <if pos:line="223" pos:column="9">if <condition pos:line="223" pos:column="12">(<expr><name><name pos:line="223" pos:column="13">conf<pos:position pos:line="223" pos:column="17"/></name><operator pos:line="223" pos:column="17">-&gt;<pos:position pos:line="223" pos:column="22"/></operator><name pos:line="223" pos:column="19">http09_enable<pos:position pos:line="223" pos:column="32"/></name></name> <operator pos:line="223" pos:column="33">==<pos:position pos:line="223" pos:column="35"/></operator> <name pos:line="223" pos:column="36">AP_HTTP09_DISABLE<pos:position pos:line="223" pos:column="53"/></name></expr>)<pos:position pos:line="223" pos:column="54"/></condition><then pos:line="223" pos:column="54">
            <block type="pseudo"><expr_stmt><expr><name pos:line="224" pos:column="13">deferred_error<pos:position pos:line="224" pos:column="27"/></name> <operator pos:line="224" pos:column="28">=<pos:position pos:line="224" pos:column="29"/></operator> <name pos:line="224" pos:column="30">rrl_reject09<pos:position pos:line="224" pos:column="42"/></name></expr>;<pos:position pos:line="224" pos:column="43"/></expr_stmt></block></then>
        <elseif pos:line="225" pos:column="9">else <if pos:line="225" pos:column="14">if <condition pos:line="225" pos:column="17">(<expr><name pos:line="225" pos:column="18">strict<pos:position pos:line="225" pos:column="24"/></name> <operator pos:line="225" pos:column="25">&amp;&amp;<pos:position pos:line="225" pos:column="35"/></operator> <operator pos:line="225" pos:column="28">(<pos:position pos:line="225" pos:column="29"/></operator><name><name pos:line="225" pos:column="29">r<pos:position pos:line="225" pos:column="30"/></name><operator pos:line="225" pos:column="30">-&gt;<pos:position pos:line="225" pos:column="35"/></operator><name pos:line="225" pos:column="32">method_number<pos:position pos:line="225" pos:column="45"/></name></name> <operator pos:line="225" pos:column="46">!=<pos:position pos:line="225" pos:column="48"/></operator> <name pos:line="225" pos:column="49">M_GET<pos:position pos:line="225" pos:column="54"/></name> <operator pos:line="225" pos:column="55">||<pos:position pos:line="225" pos:column="57"/></operator> <name><name pos:line="225" pos:column="58">r<pos:position pos:line="225" pos:column="59"/></name><operator pos:line="225" pos:column="59">-&gt;<pos:position pos:line="225" pos:column="64"/></operator><name pos:line="225" pos:column="61">header_only<pos:position pos:line="225" pos:column="72"/></name></name><operator pos:line="225" pos:column="72">)<pos:position pos:line="225" pos:column="73"/></operator></expr>)<pos:position pos:line="225" pos:column="74"/></condition><then pos:line="225" pos:column="74">
            <block type="pseudo"><expr_stmt><expr><name pos:line="226" pos:column="13">deferred_error<pos:position pos:line="226" pos:column="27"/></name> <operator pos:line="226" pos:column="28">=<pos:position pos:line="226" pos:column="29"/></operator> <name pos:line="226" pos:column="30">rrl_badmethod09<pos:position pos:line="226" pos:column="45"/></name></expr>;<pos:position pos:line="226" pos:column="46"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="227" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="229" pos:column="5">/* Now that the method, uri and protocol are all processed,
     * we can safely resume any deferred error reporting
     */</comment>
    <if pos:line="232" pos:column="5">if <condition pos:line="232" pos:column="8">(<expr><name pos:line="232" pos:column="9">deferred_error<pos:position pos:line="232" pos:column="23"/></name> <operator pos:line="232" pos:column="24">!=<pos:position pos:line="232" pos:column="26"/></operator> <name pos:line="232" pos:column="27">rrl_none<pos:position pos:line="232" pos:column="35"/></name></expr>)<pos:position pos:line="232" pos:column="36"/></condition><then pos:line="232" pos:column="36"> <block pos:line="232" pos:column="37">{
        <if pos:line="233" pos:column="9">if <condition pos:line="233" pos:column="12">(<expr><name pos:line="233" pos:column="13">deferred_error<pos:position pos:line="233" pos:column="27"/></name> <operator pos:line="233" pos:column="28">==<pos:position pos:line="233" pos:column="30"/></operator> <name pos:line="233" pos:column="31">rrl_badmethod<pos:position pos:line="233" pos:column="44"/></name></expr>)<pos:position pos:line="233" pos:column="45"/></condition><then pos:line="233" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="234" pos:column="13">ap_log_rerror<pos:position pos:line="234" pos:column="26"/></name><argument_list pos:line="234" pos:column="26">(<argument><expr><name pos:line="234" pos:column="27">APLOG_MARK<pos:position pos:line="234" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="39">APLOG_DEBUG<pos:position pos:line="234" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="234" pos:column="52">0<pos:position pos:line="234" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="234" pos:column="55">r<pos:position pos:line="234" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="235" pos:column="27">"HTTP Request Line; Invalid method token: '%.*s'"<pos:position pos:line="235" pos:column="76"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="236" pos:column="27">field_name_len<pos:position pos:line="236" pos:column="41"/></name><argument_list pos:line="236" pos:column="41">(<argument><expr><name><name pos:line="236" pos:column="42">r<pos:position pos:line="236" pos:column="43"/></name><operator pos:line="236" pos:column="43">-&gt;<pos:position pos:line="236" pos:column="48"/></operator><name pos:line="236" pos:column="45">method<pos:position pos:line="236" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="236" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="236" pos:column="54">r<pos:position pos:line="236" pos:column="55"/></name><operator pos:line="236" pos:column="55">-&gt;<pos:position pos:line="236" pos:column="60"/></operator><name pos:line="236" pos:column="57">method<pos:position pos:line="236" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="236" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="65"/></expr_stmt></block></then>
        <elseif pos:line="237" pos:column="9">else <if pos:line="237" pos:column="14">if <condition pos:line="237" pos:column="17">(<expr><name pos:line="237" pos:column="18">deferred_error<pos:position pos:line="237" pos:column="32"/></name> <operator pos:line="237" pos:column="33">==<pos:position pos:line="237" pos:column="35"/></operator> <name pos:line="237" pos:column="36">rrl_badmethod09<pos:position pos:line="237" pos:column="51"/></name></expr>)<pos:position pos:line="237" pos:column="52"/></condition><then pos:line="237" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="238" pos:column="13">ap_log_rerror<pos:position pos:line="238" pos:column="26"/></name><argument_list pos:line="238" pos:column="26">(<argument><expr><name pos:line="238" pos:column="27">APLOG_MARK<pos:position pos:line="238" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="39">APLOG_DEBUG<pos:position pos:line="238" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="238" pos:column="52">0<pos:position pos:line="238" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="238" pos:column="55">r<pos:position pos:line="238" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="239" pos:column="27">"HTTP Request Line; Invalid method token: '%.*s'"<pos:position pos:line="239" pos:column="76"/></literal>
                          <literal type="string" pos:line="240" pos:column="27">" (only GET is allowed for HTTP/0.9 requests)"<pos:position pos:line="240" pos:column="73"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="241" pos:column="27">field_name_len<pos:position pos:line="241" pos:column="41"/></name><argument_list pos:line="241" pos:column="41">(<argument><expr><name><name pos:line="241" pos:column="42">r<pos:position pos:line="241" pos:column="43"/></name><operator pos:line="241" pos:column="43">-&gt;<pos:position pos:line="241" pos:column="48"/></operator><name pos:line="241" pos:column="45">method<pos:position pos:line="241" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="241" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="241" pos:column="54">r<pos:position pos:line="241" pos:column="55"/></name><operator pos:line="241" pos:column="55">-&gt;<pos:position pos:line="241" pos:column="60"/></operator><name pos:line="241" pos:column="57">method<pos:position pos:line="241" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="241" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="65"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="242" pos:column="9">else <if pos:line="242" pos:column="14">if <condition pos:line="242" pos:column="17">(<expr><name pos:line="242" pos:column="18">deferred_error<pos:position pos:line="242" pos:column="32"/></name> <operator pos:line="242" pos:column="33">==<pos:position pos:line="242" pos:column="35"/></operator> <name pos:line="242" pos:column="36">rrl_missinguri<pos:position pos:line="242" pos:column="50"/></name></expr>)<pos:position pos:line="242" pos:column="51"/></condition><then pos:line="242" pos:column="51">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="243" pos:column="13">ap_log_rerror<pos:position pos:line="243" pos:column="26"/></name><argument_list pos:line="243" pos:column="26">(<argument><expr><name pos:line="243" pos:column="27">APLOG_MARK<pos:position pos:line="243" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="39">APLOG_DEBUG<pos:position pos:line="243" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="243" pos:column="52">0<pos:position pos:line="243" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="243" pos:column="55">r<pos:position pos:line="243" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="244" pos:column="27">"HTTP Request Line; Missing URI"<pos:position pos:line="244" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="244" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="61"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="245" pos:column="9">else <if pos:line="245" pos:column="14">if <condition pos:line="245" pos:column="17">(<expr><name pos:line="245" pos:column="18">deferred_error<pos:position pos:line="245" pos:column="32"/></name> <operator pos:line="245" pos:column="33">==<pos:position pos:line="245" pos:column="35"/></operator> <name pos:line="245" pos:column="36">rrl_baduri<pos:position pos:line="245" pos:column="46"/></name></expr>)<pos:position pos:line="245" pos:column="47"/></condition><then pos:line="245" pos:column="47">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="246" pos:column="13">ap_log_rerror<pos:position pos:line="246" pos:column="26"/></name><argument_list pos:line="246" pos:column="26">(<argument><expr><name pos:line="246" pos:column="27">APLOG_MARK<pos:position pos:line="246" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="39">APLOG_DEBUG<pos:position pos:line="246" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="246" pos:column="52">0<pos:position pos:line="246" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="246" pos:column="55">r<pos:position pos:line="246" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="247" pos:column="27">"HTTP Request Line; URI incorrectly encoded: '%.*s'"<pos:position pos:line="247" pos:column="79"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="248" pos:column="27">field_name_len<pos:position pos:line="248" pos:column="41"/></name><argument_list pos:line="248" pos:column="41">(<argument><expr><name><name pos:line="248" pos:column="42">r<pos:position pos:line="248" pos:column="43"/></name><operator pos:line="248" pos:column="43">-&gt;<pos:position pos:line="248" pos:column="48"/></operator><name pos:line="248" pos:column="45">uri<pos:position pos:line="248" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="248" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="248" pos:column="51">r<pos:position pos:line="248" pos:column="52"/></name><operator pos:line="248" pos:column="52">-&gt;<pos:position pos:line="248" pos:column="57"/></operator><name pos:line="248" pos:column="54">uri<pos:position pos:line="248" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="248" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="59"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="249" pos:column="9">else <if pos:line="249" pos:column="14">if <condition pos:line="249" pos:column="17">(<expr><name pos:line="249" pos:column="18">deferred_error<pos:position pos:line="249" pos:column="32"/></name> <operator pos:line="249" pos:column="33">==<pos:position pos:line="249" pos:column="35"/></operator> <name pos:line="249" pos:column="36">rrl_badwhitespace<pos:position pos:line="249" pos:column="53"/></name></expr>)<pos:position pos:line="249" pos:column="54"/></condition><then pos:line="249" pos:column="54">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="250" pos:column="13">ap_log_rerror<pos:position pos:line="250" pos:column="26"/></name><argument_list pos:line="250" pos:column="26">(<argument><expr><name pos:line="250" pos:column="27">APLOG_MARK<pos:position pos:line="250" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="39">APLOG_DEBUG<pos:position pos:line="250" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="250" pos:column="52">0<pos:position pos:line="250" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="250" pos:column="55">r<pos:position pos:line="250" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="251" pos:column="27">"HTTP Request Line; Invalid whitespace"<pos:position pos:line="251" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="251" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="68"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="252" pos:column="9">else <if pos:line="252" pos:column="14">if <condition pos:line="252" pos:column="17">(<expr><name pos:line="252" pos:column="18">deferred_error<pos:position pos:line="252" pos:column="32"/></name> <operator pos:line="252" pos:column="33">==<pos:position pos:line="252" pos:column="35"/></operator> <name pos:line="252" pos:column="36">rrl_excesswhitespace<pos:position pos:line="252" pos:column="56"/></name></expr>)<pos:position pos:line="252" pos:column="57"/></condition><then pos:line="252" pos:column="57">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="253" pos:column="13">ap_log_rerror<pos:position pos:line="253" pos:column="26"/></name><argument_list pos:line="253" pos:column="26">(<argument><expr><name pos:line="253" pos:column="27">APLOG_MARK<pos:position pos:line="253" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="39">APLOG_DEBUG<pos:position pos:line="253" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="253" pos:column="52">0<pos:position pos:line="253" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="253" pos:column="55">r<pos:position pos:line="253" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="254" pos:column="27">"HTTP Request Line; Excess whitespace "<pos:position pos:line="254" pos:column="66"/></literal>
                          <literal type="string" pos:line="255" pos:column="27">"(disallowed by HttpProtocolOptions Strict"<pos:position pos:line="255" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="255" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="72"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="256" pos:column="9">else <if pos:line="256" pos:column="14">if <condition pos:line="256" pos:column="17">(<expr><name pos:line="256" pos:column="18">deferred_error<pos:position pos:line="256" pos:column="32"/></name> <operator pos:line="256" pos:column="33">==<pos:position pos:line="256" pos:column="35"/></operator> <name pos:line="256" pos:column="36">rrl_trailingtext<pos:position pos:line="256" pos:column="52"/></name></expr>)<pos:position pos:line="256" pos:column="53"/></condition><then pos:line="256" pos:column="53">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="257" pos:column="13">ap_log_rerror<pos:position pos:line="257" pos:column="26"/></name><argument_list pos:line="257" pos:column="26">(<argument><expr><name pos:line="257" pos:column="27">APLOG_MARK<pos:position pos:line="257" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="39">APLOG_DEBUG<pos:position pos:line="257" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="257" pos:column="52">0<pos:position pos:line="257" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="257" pos:column="55">r<pos:position pos:line="257" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="258" pos:column="27">"HTTP Request Line; Extraneous text found '%.*s' "<pos:position pos:line="258" pos:column="77"/></literal>
                          <literal type="string" pos:line="259" pos:column="27">"(perhaps whitespace was injected?)"<pos:position pos:line="259" pos:column="63"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="260" pos:column="27">field_name_len<pos:position pos:line="260" pos:column="41"/></name><argument_list pos:line="260" pos:column="41">(<argument><expr><name pos:line="260" pos:column="42">ll<pos:position pos:line="260" pos:column="44"/></name></expr></argument>)<pos:position pos:line="260" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="260" pos:column="47">ll<pos:position pos:line="260" pos:column="49"/></name></expr></argument>)<pos:position pos:line="260" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="51"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="261" pos:column="9">else <if pos:line="261" pos:column="14">if <condition pos:line="261" pos:column="17">(<expr><name pos:line="261" pos:column="18">deferred_error<pos:position pos:line="261" pos:column="32"/></name> <operator pos:line="261" pos:column="33">==<pos:position pos:line="261" pos:column="35"/></operator> <name pos:line="261" pos:column="36">rrl_reject09<pos:position pos:line="261" pos:column="48"/></name></expr>)<pos:position pos:line="261" pos:column="49"/></condition><then pos:line="261" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="262" pos:column="13">ap_log_rerror<pos:position pos:line="262" pos:column="26"/></name><argument_list pos:line="262" pos:column="26">(<argument><expr><name pos:line="262" pos:column="27">APLOG_MARK<pos:position pos:line="262" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="39">APLOG_DEBUG<pos:position pos:line="262" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="262" pos:column="52">0<pos:position pos:line="262" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="262" pos:column="55">r<pos:position pos:line="262" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="263" pos:column="27">"HTTP Request Line; Rejected HTTP/0.9 request"<pos:position pos:line="263" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="263" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="75"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="264" pos:column="9">else <if pos:line="264" pos:column="14">if <condition pos:line="264" pos:column="17">(<expr><name pos:line="264" pos:column="18">deferred_error<pos:position pos:line="264" pos:column="32"/></name> <operator pos:line="264" pos:column="33">==<pos:position pos:line="264" pos:column="35"/></operator> <name pos:line="264" pos:column="36">rrl_badprotocol<pos:position pos:line="264" pos:column="51"/></name></expr>)<pos:position pos:line="264" pos:column="52"/></condition><then pos:line="264" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="265" pos:column="13">ap_log_rerror<pos:position pos:line="265" pos:column="26"/></name><argument_list pos:line="265" pos:column="26">(<argument><expr><name pos:line="265" pos:column="27">APLOG_MARK<pos:position pos:line="265" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="39">APLOG_DEBUG<pos:position pos:line="265" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="265" pos:column="52">0<pos:position pos:line="265" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="265" pos:column="55">r<pos:position pos:line="265" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="266" pos:column="27">"HTTP Request Line; Unrecognized protocol '%.*s' "<pos:position pos:line="266" pos:column="77"/></literal>
                          <literal type="string" pos:line="267" pos:column="27">"(perhaps whitespace was injected?)"<pos:position pos:line="267" pos:column="63"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="268" pos:column="27">field_name_len<pos:position pos:line="268" pos:column="41"/></name><argument_list pos:line="268" pos:column="41">(<argument><expr><name><name pos:line="268" pos:column="42">r<pos:position pos:line="268" pos:column="43"/></name><operator pos:line="268" pos:column="43">-&gt;<pos:position pos:line="268" pos:column="48"/></operator><name pos:line="268" pos:column="45">protocol<pos:position pos:line="268" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="268" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="268" pos:column="56">r<pos:position pos:line="268" pos:column="57"/></name><operator pos:line="268" pos:column="57">-&gt;<pos:position pos:line="268" pos:column="62"/></operator><name pos:line="268" pos:column="59">protocol<pos:position pos:line="268" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="268" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="69"/></expr_stmt></block></then></if></elseif></if>
        <expr_stmt><expr><name><name pos:line="269" pos:column="9">r<pos:position pos:line="269" pos:column="10"/></name><operator pos:line="269" pos:column="10">-&gt;<pos:position pos:line="269" pos:column="15"/></operator><name pos:line="269" pos:column="12">status<pos:position pos:line="269" pos:column="18"/></name></name> <operator pos:line="269" pos:column="19">=<pos:position pos:line="269" pos:column="20"/></operator> <name pos:line="269" pos:column="21">HTTP_BAD_REQUEST<pos:position pos:line="269" pos:column="37"/></name></expr>;<pos:position pos:line="269" pos:column="38"/></expr_stmt>
        <goto pos:line="270" pos:column="9">goto <name pos:line="270" pos:column="14">rrl_failed<pos:position pos:line="270" pos:column="24"/></name>;<pos:position pos:line="270" pos:column="25"/></goto>
    }<pos:position pos:line="271" pos:column="6"/></block></then></if>

    <if pos:line="273" pos:column="5">if <condition pos:line="273" pos:column="8">(<expr><name><name pos:line="273" pos:column="9">conf<pos:position pos:line="273" pos:column="13"/></name><operator pos:line="273" pos:column="13">-&gt;<pos:position pos:line="273" pos:column="18"/></operator><name pos:line="273" pos:column="15">http_methods<pos:position pos:line="273" pos:column="27"/></name></name> <operator pos:line="273" pos:column="28">==<pos:position pos:line="273" pos:column="30"/></operator> <name pos:line="273" pos:column="31">AP_HTTP_METHODS_REGISTERED<pos:position pos:line="273" pos:column="57"/></name>
            <operator pos:line="274" pos:column="13">&amp;&amp;<pos:position pos:line="274" pos:column="23"/></operator> <name><name pos:line="274" pos:column="16">r<pos:position pos:line="274" pos:column="17"/></name><operator pos:line="274" pos:column="17">-&gt;<pos:position pos:line="274" pos:column="22"/></operator><name pos:line="274" pos:column="19">method_number<pos:position pos:line="274" pos:column="32"/></name></name> <operator pos:line="274" pos:column="33">==<pos:position pos:line="274" pos:column="35"/></operator> <name pos:line="274" pos:column="36">M_INVALID<pos:position pos:line="274" pos:column="45"/></name></expr>)<pos:position pos:line="274" pos:column="46"/></condition><then pos:line="274" pos:column="46"> <block pos:line="274" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="275" pos:column="9">ap_log_rerror<pos:position pos:line="275" pos:column="22"/></name><argument_list pos:line="275" pos:column="22">(<argument><expr><name pos:line="275" pos:column="23">APLOG_MARK<pos:position pos:line="275" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="275" pos:column="35">APLOG_DEBUG<pos:position pos:line="275" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="275" pos:column="48">0<pos:position pos:line="275" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="275" pos:column="51">r<pos:position pos:line="275" pos:column="52"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="276" pos:column="23">"HTTP Request Line; Unrecognized HTTP method: '%.*s' "<pos:position pos:line="276" pos:column="77"/></literal>
                      <literal type="string" pos:line="277" pos:column="23">"(disallowed by RegisteredMethods)"<pos:position pos:line="277" pos:column="58"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="278" pos:column="23">field_name_len<pos:position pos:line="278" pos:column="37"/></name><argument_list pos:line="278" pos:column="37">(<argument><expr><name><name pos:line="278" pos:column="38">r<pos:position pos:line="278" pos:column="39"/></name><operator pos:line="278" pos:column="39">-&gt;<pos:position pos:line="278" pos:column="44"/></operator><name pos:line="278" pos:column="41">method<pos:position pos:line="278" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="278" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="278" pos:column="50">r<pos:position pos:line="278" pos:column="51"/></name><operator pos:line="278" pos:column="51">-&gt;<pos:position pos:line="278" pos:column="56"/></operator><name pos:line="278" pos:column="53">method<pos:position pos:line="278" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="278" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="279" pos:column="9">r<pos:position pos:line="279" pos:column="10"/></name><operator pos:line="279" pos:column="10">-&gt;<pos:position pos:line="279" pos:column="15"/></operator><name pos:line="279" pos:column="12">status<pos:position pos:line="279" pos:column="18"/></name></name> <operator pos:line="279" pos:column="19">=<pos:position pos:line="279" pos:column="20"/></operator> <name pos:line="279" pos:column="21">HTTP_NOT_IMPLEMENTED<pos:position pos:line="279" pos:column="41"/></name></expr>;<pos:position pos:line="279" pos:column="42"/></expr_stmt>
        <comment type="block" pos:line="280" pos:column="9">/* This can't happen in an HTTP/0.9 request, we verified GET above */</comment>
        <return pos:line="281" pos:column="9">return <expr><literal type="number" pos:line="281" pos:column="16">0<pos:position pos:line="281" pos:column="17"/></literal></expr>;<pos:position pos:line="281" pos:column="18"/></return>
    }<pos:position pos:line="282" pos:column="6"/></block></then></if>

    <if pos:line="284" pos:column="5">if <condition pos:line="284" pos:column="8">(<expr><name><name pos:line="284" pos:column="9">r<pos:position pos:line="284" pos:column="10"/></name><operator pos:line="284" pos:column="10">-&gt;<pos:position pos:line="284" pos:column="15"/></operator><name pos:line="284" pos:column="12">status<pos:position pos:line="284" pos:column="18"/></name></name> <operator pos:line="284" pos:column="19">!=<pos:position pos:line="284" pos:column="21"/></operator> <name pos:line="284" pos:column="22">HTTP_OK<pos:position pos:line="284" pos:column="29"/></name></expr>)<pos:position pos:line="284" pos:column="30"/></condition><then pos:line="284" pos:column="30"> <block pos:line="284" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="285" pos:column="9">ap_log_rerror<pos:position pos:line="285" pos:column="22"/></name><argument_list pos:line="285" pos:column="22">(<argument><expr><name pos:line="285" pos:column="23">APLOG_MARK<pos:position pos:line="285" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="35">APLOG_DEBUG<pos:position pos:line="285" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="285" pos:column="48">0<pos:position pos:line="285" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="285" pos:column="51">r<pos:position pos:line="285" pos:column="52"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="286" pos:column="23">"HTTP Request Line; Unable to parse URI: '%.*s'"<pos:position pos:line="286" pos:column="71"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="287" pos:column="23">field_name_len<pos:position pos:line="287" pos:column="37"/></name><argument_list pos:line="287" pos:column="37">(<argument><expr><name><name pos:line="287" pos:column="38">r<pos:position pos:line="287" pos:column="39"/></name><operator pos:line="287" pos:column="39">-&gt;<pos:position pos:line="287" pos:column="44"/></operator><name pos:line="287" pos:column="41">uri<pos:position pos:line="287" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="287" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="287" pos:column="47">r<pos:position pos:line="287" pos:column="48"/></name><operator pos:line="287" pos:column="48">-&gt;<pos:position pos:line="287" pos:column="53"/></operator><name pos:line="287" pos:column="50">uri<pos:position pos:line="287" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="287" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="55"/></expr_stmt>
        <goto pos:line="288" pos:column="9">goto <name pos:line="288" pos:column="14">rrl_failed<pos:position pos:line="288" pos:column="24"/></name>;<pos:position pos:line="288" pos:column="25"/></goto>
    }<pos:position pos:line="289" pos:column="6"/></block></then></if>

    <if pos:line="291" pos:column="5">if <condition pos:line="291" pos:column="8">(<expr><name pos:line="291" pos:column="9">strict<pos:position pos:line="291" pos:column="15"/></name></expr>)<pos:position pos:line="291" pos:column="16"/></condition><then pos:line="291" pos:column="16"> <block pos:line="291" pos:column="17">{
        <if pos:line="292" pos:column="9">if <condition pos:line="292" pos:column="12">(<expr><name><name pos:line="292" pos:column="13">r<pos:position pos:line="292" pos:column="14"/></name><operator pos:line="292" pos:column="14">-&gt;<pos:position pos:line="292" pos:column="19"/></operator><name pos:line="292" pos:column="16">parsed_uri<pos:position pos:line="292" pos:column="26"/></name><operator pos:line="292" pos:column="26">.<pos:position pos:line="292" pos:column="27"/></operator><name pos:line="292" pos:column="27">fragment<pos:position pos:line="292" pos:column="35"/></name></name></expr>)<pos:position pos:line="292" pos:column="36"/></condition><then pos:line="292" pos:column="36"> <block pos:line="292" pos:column="37">{
            <comment type="block" pos:line="293" pos:column="13">/* RFC3986 3.5: no fragment */</comment>
            <expr_stmt><expr><call><name pos:line="294" pos:column="13">ap_log_rerror<pos:position pos:line="294" pos:column="26"/></name><argument_list pos:line="294" pos:column="26">(<argument><expr><name pos:line="294" pos:column="27">APLOG_MARK<pos:position pos:line="294" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="39">APLOG_DEBUG<pos:position pos:line="294" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="294" pos:column="52">0<pos:position pos:line="294" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="294" pos:column="55">r<pos:position pos:line="294" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="295" pos:column="27">"HTTP Request Line; URI must not contain a fragment"<pos:position pos:line="295" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="295" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="296" pos:column="13">r<pos:position pos:line="296" pos:column="14"/></name><operator pos:line="296" pos:column="14">-&gt;<pos:position pos:line="296" pos:column="19"/></operator><name pos:line="296" pos:column="16">status<pos:position pos:line="296" pos:column="22"/></name></name> <operator pos:line="296" pos:column="23">=<pos:position pos:line="296" pos:column="24"/></operator> <name pos:line="296" pos:column="25">HTTP_BAD_REQUEST<pos:position pos:line="296" pos:column="41"/></name></expr>;<pos:position pos:line="296" pos:column="42"/></expr_stmt>
            <goto pos:line="297" pos:column="13">goto <name pos:line="297" pos:column="18">rrl_failed<pos:position pos:line="297" pos:column="28"/></name>;<pos:position pos:line="297" pos:column="29"/></goto>
        }<pos:position pos:line="298" pos:column="10"/></block></then></if>
        <if pos:line="299" pos:column="9">if <condition pos:line="299" pos:column="12">(<expr><name><name pos:line="299" pos:column="13">r<pos:position pos:line="299" pos:column="14"/></name><operator pos:line="299" pos:column="14">-&gt;<pos:position pos:line="299" pos:column="19"/></operator><name pos:line="299" pos:column="16">parsed_uri<pos:position pos:line="299" pos:column="26"/></name><operator pos:line="299" pos:column="26">.<pos:position pos:line="299" pos:column="27"/></operator><name pos:line="299" pos:column="27">user<pos:position pos:line="299" pos:column="31"/></name></name> <operator pos:line="299" pos:column="32">||<pos:position pos:line="299" pos:column="34"/></operator> <name><name pos:line="299" pos:column="35">r<pos:position pos:line="299" pos:column="36"/></name><operator pos:line="299" pos:column="36">-&gt;<pos:position pos:line="299" pos:column="41"/></operator><name pos:line="299" pos:column="38">parsed_uri<pos:position pos:line="299" pos:column="48"/></name><operator pos:line="299" pos:column="48">.<pos:position pos:line="299" pos:column="49"/></operator><name pos:line="299" pos:column="49">password<pos:position pos:line="299" pos:column="57"/></name></name></expr>)<pos:position pos:line="299" pos:column="58"/></condition><then pos:line="299" pos:column="58"> <block pos:line="299" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="300" pos:column="13">ap_log_rerror<pos:position pos:line="300" pos:column="26"/></name><argument_list pos:line="300" pos:column="26">(<argument><expr><name pos:line="300" pos:column="27">APLOG_MARK<pos:position pos:line="300" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="300" pos:column="39">APLOG_DEBUG<pos:position pos:line="300" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="300" pos:column="52">0<pos:position pos:line="300" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="300" pos:column="55">r<pos:position pos:line="300" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="301" pos:column="27">"HTTP Request Line; URI must not contain a "<pos:position pos:line="301" pos:column="71"/></literal>
                          <literal type="string" pos:line="302" pos:column="27">"username/password"<pos:position pos:line="302" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="302" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="303" pos:column="13">r<pos:position pos:line="303" pos:column="14"/></name><operator pos:line="303" pos:column="14">-&gt;<pos:position pos:line="303" pos:column="19"/></operator><name pos:line="303" pos:column="16">status<pos:position pos:line="303" pos:column="22"/></name></name> <operator pos:line="303" pos:column="23">=<pos:position pos:line="303" pos:column="24"/></operator> <name pos:line="303" pos:column="25">HTTP_BAD_REQUEST<pos:position pos:line="303" pos:column="41"/></name></expr>;<pos:position pos:line="303" pos:column="42"/></expr_stmt>
            <goto pos:line="304" pos:column="13">goto <name pos:line="304" pos:column="18">rrl_failed<pos:position pos:line="304" pos:column="28"/></name>;<pos:position pos:line="304" pos:column="29"/></goto>
        }<pos:position pos:line="305" pos:column="10"/></block></then></if>
    }<pos:position pos:line="306" pos:column="6"/></block></then></if>

    <return pos:line="308" pos:column="5">return <expr><literal type="number" pos:line="308" pos:column="12">1<pos:position pos:line="308" pos:column="13"/></literal></expr>;<pos:position pos:line="308" pos:column="14"/></return>

<label><name pos:line="310" pos:column="1">rrl_failed<pos:position pos:line="310" pos:column="11"/></name>:<pos:position pos:line="310" pos:column="12"/></label>
    <if pos:line="311" pos:column="5">if <condition pos:line="311" pos:column="8">(<expr><name><name pos:line="311" pos:column="9">r<pos:position pos:line="311" pos:column="10"/></name><operator pos:line="311" pos:column="10">-&gt;<pos:position pos:line="311" pos:column="15"/></operator><name pos:line="311" pos:column="12">proto_num<pos:position pos:line="311" pos:column="21"/></name></name> <operator pos:line="311" pos:column="22">==<pos:position pos:line="311" pos:column="24"/></operator> <call><name pos:line="311" pos:column="25">HTTP_VERSION<pos:position pos:line="311" pos:column="37"/></name><argument_list pos:line="311" pos:column="37">(<argument><expr><literal type="number" pos:line="311" pos:column="38">0<pos:position pos:line="311" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="311" pos:column="41">9<pos:position pos:line="311" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="311" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="311" pos:column="44"/></condition><then pos:line="311" pos:column="44"> <block pos:line="311" pos:column="45">{
        <comment type="block" pos:line="312" pos:column="9">/* Send all parsing and protocol error response with 1.x behavior,
         * and reserve 505 errors for actual HTTP protocols presented.
         * As called out in RFC7230 3.5, any errors parsing the protocol
         * from the request line are nearly always misencoded HTTP/1.x
         * requests. Only a valid 0.9 request with no parsing errors
         * at all may be treated as a simple request, if allowed.
         */</comment>
        <expr_stmt><expr><name><name pos:line="319" pos:column="9">r<pos:position pos:line="319" pos:column="10"/></name><operator pos:line="319" pos:column="10">-&gt;<pos:position pos:line="319" pos:column="15"/></operator><name pos:line="319" pos:column="12">assbackwards<pos:position pos:line="319" pos:column="24"/></name></name> <operator pos:line="319" pos:column="25">=<pos:position pos:line="319" pos:column="26"/></operator> <literal type="number" pos:line="319" pos:column="27">0<pos:position pos:line="319" pos:column="28"/></literal></expr>;<pos:position pos:line="319" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="320" pos:column="9">r<pos:position pos:line="320" pos:column="10"/></name><operator pos:line="320" pos:column="10">-&gt;<pos:position pos:line="320" pos:column="15"/></operator><name pos:line="320" pos:column="12">connection<pos:position pos:line="320" pos:column="22"/></name><operator pos:line="320" pos:column="22">-&gt;<pos:position pos:line="320" pos:column="27"/></operator><name pos:line="320" pos:column="24">keepalive<pos:position pos:line="320" pos:column="33"/></name></name> <operator pos:line="320" pos:column="34">=<pos:position pos:line="320" pos:column="35"/></operator> <name pos:line="320" pos:column="36">AP_CONN_CLOSE<pos:position pos:line="320" pos:column="49"/></name></expr>;<pos:position pos:line="320" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="321" pos:column="9">r<pos:position pos:line="321" pos:column="10"/></name><operator pos:line="321" pos:column="10">-&gt;<pos:position pos:line="321" pos:column="15"/></operator><name pos:line="321" pos:column="12">proto_num<pos:position pos:line="321" pos:column="21"/></name></name> <operator pos:line="321" pos:column="22">=<pos:position pos:line="321" pos:column="23"/></operator> <call><name pos:line="321" pos:column="24">HTTP_VERSION<pos:position pos:line="321" pos:column="36"/></name><argument_list pos:line="321" pos:column="36">(<argument><expr><literal type="number" pos:line="321" pos:column="37">1<pos:position pos:line="321" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="321" pos:column="40">0<pos:position pos:line="321" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="321" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="322" pos:column="9">r<pos:position pos:line="322" pos:column="10"/></name><operator pos:line="322" pos:column="10">-&gt;<pos:position pos:line="322" pos:column="15"/></operator><name pos:line="322" pos:column="12">protocol<pos:position pos:line="322" pos:column="20"/></name></name>  <operator pos:line="322" pos:column="22">=<pos:position pos:line="322" pos:column="23"/></operator> <call><name pos:line="322" pos:column="24">apr_pstrdup<pos:position pos:line="322" pos:column="35"/></name><argument_list pos:line="322" pos:column="35">(<argument><expr><name><name pos:line="322" pos:column="36">r<pos:position pos:line="322" pos:column="37"/></name><operator pos:line="322" pos:column="37">-&gt;<pos:position pos:line="322" pos:column="42"/></operator><name pos:line="322" pos:column="39">pool<pos:position pos:line="322" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="322" pos:column="45">"HTTP/1.0"<pos:position pos:line="322" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="322" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="323" pos:column="6"/></block></then></if>
    <return pos:line="324" pos:column="5">return <expr><literal type="number" pos:line="324" pos:column="12">0<pos:position pos:line="324" pos:column="13"/></literal></expr>;<pos:position pos:line="324" pos:column="14"/></return>
}<pos:position pos:line="325" pos:column="2"/></block></function></unit>

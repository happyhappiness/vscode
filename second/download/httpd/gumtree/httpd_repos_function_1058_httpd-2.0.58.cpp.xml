<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1058_httpd-2.0.58.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_language_quality<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">negotiation_state<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">neg<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">var_rec<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">variant<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">forcepriority<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><name><name pos:line="3" pos:column="25">neg<pos:position pos:line="3" pos:column="28"/></name><operator pos:line="3" pos:column="28">-&gt;<pos:position pos:line="3" pos:column="33"/></operator><name pos:line="3" pos:column="30">conf<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">forcelangpriority<pos:position pos:line="3" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="54"/></decl_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">forcepriority<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">==<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="26">FLP_UNDEF<pos:position pos:line="4" pos:column="35"/></name></expr>)<pos:position pos:line="4" pos:column="36"/></condition><then pos:line="4" pos:column="36"> <block pos:line="4" pos:column="37">{
        <expr_stmt><expr><name pos:line="5" pos:column="9">forcepriority<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">=<pos:position pos:line="5" pos:column="24"/></operator> <name pos:line="5" pos:column="25">FLP_DEFAULT<pos:position pos:line="5" pos:column="36"/></name></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="6" pos:column="6"/></block></then></if>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">variant<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">content_languages<pos:position pos:line="8" pos:column="36"/></name></name> <operator pos:line="8" pos:column="37">||<pos:position pos:line="8" pos:column="39"/></operator> <operator pos:line="8" pos:column="40">!<pos:position pos:line="8" pos:column="41"/></operator><name><name pos:line="8" pos:column="41">variant<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">content_languages<pos:position pos:line="8" pos:column="67"/></name><operator pos:line="8" pos:column="67">-&gt;<pos:position pos:line="8" pos:column="72"/></operator><name pos:line="8" pos:column="69">nelts<pos:position pos:line="8" pos:column="74"/></name></name></expr>)<pos:position pos:line="8" pos:column="75"/></condition><then pos:line="8" pos:column="75"> <block pos:line="8" pos:column="76">{
        <comment type="block" pos:line="9" pos:column="9">/* This variant has no content-language, so use the default
         * quality factor for variants with no content-language
         * (previously set by set_default_lang_quality()).
         * Leave the factor alone (it remains at 1.0) when we may not fiddle
         * with the headers.
         */</comment>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name><name pos:line="15" pos:column="14">neg<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">dont_fiddle_headers<pos:position pos:line="15" pos:column="38"/></name></name></expr>)<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39"> <block pos:line="15" pos:column="40">{
            <expr_stmt><expr><name><name pos:line="16" pos:column="13">variant<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">lang_quality<pos:position pos:line="16" pos:column="34"/></name></name> <operator pos:line="16" pos:column="35">=<pos:position pos:line="16" pos:column="36"/></operator> <name><name pos:line="16" pos:column="37">neg<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">-&gt;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="42">default_lang_quality<pos:position pos:line="16" pos:column="62"/></name></name></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name><name pos:line="18" pos:column="14">neg<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">accept_langs<pos:position pos:line="18" pos:column="31"/></name></name></expr>)<pos:position pos:line="18" pos:column="32"/></condition><then pos:line="18" pos:column="32"> <block pos:line="18" pos:column="33">{
            <return pos:line="19" pos:column="13">return;<pos:position pos:line="19" pos:column="20"/></return>             <comment type="block" pos:line="19" pos:column="33">/* no accept-language header */</comment>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        <return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then>
    <else pos:line="23" pos:column="5">else <block pos:line="23" pos:column="10">{
        <comment type="block" pos:line="24" pos:column="9">/* Variant has one (or more) languages.  Look for the best
         * match. We do this by going through each language on the
         * variant description looking for a match on the
         * Accept-Language header. The best match is the longest
         * matching language on the header. The final result is the
         * best q value from all the languages on the variant
         * description.
         */</comment>

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><name><name pos:line="33" pos:column="14">neg<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">accept_langs<pos:position pos:line="33" pos:column="31"/></name></name></expr>)<pos:position pos:line="33" pos:column="32"/></condition><then pos:line="33" pos:column="32"> <block pos:line="33" pos:column="33">{
            <comment type="block" pos:line="34" pos:column="13">/* no accept-language header makes the variant indefinite */</comment>
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">variant<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">definite<pos:position pos:line="35" pos:column="30"/></name></name> <operator pos:line="35" pos:column="31">=<pos:position pos:line="35" pos:column="32"/></operator> <literal type="number" pos:line="35" pos:column="33">0<pos:position pos:line="35" pos:column="34"/></literal></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then>
        <else pos:line="37" pos:column="9">else <block pos:line="37" pos:column="14">{    <comment type="block" pos:line="37" pos:column="19">/* There is an accept-language with 0 or more items */</comment>
            <decl_stmt><decl><type><name pos:line="38" pos:column="13">accept_rec<pos:position pos:line="38" pos:column="23"/></name> <modifier pos:line="38" pos:column="24">*<pos:position pos:line="38" pos:column="25"/></modifier></type><name pos:line="38" pos:column="25">accs<pos:position pos:line="38" pos:column="29"/></name> <init pos:line="38" pos:column="30">= <expr><operator pos:line="38" pos:column="32">(<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="33">accept_rec<pos:position pos:line="38" pos:column="43"/></name> <operator pos:line="38" pos:column="44">*<pos:position pos:line="38" pos:column="45"/></operator><operator pos:line="38" pos:column="45">)<pos:position pos:line="38" pos:column="46"/></operator> <name><name pos:line="38" pos:column="47">neg<pos:position pos:line="38" pos:column="50"/></name><operator pos:line="38" pos:column="50">-&gt;<pos:position pos:line="38" pos:column="55"/></operator><name pos:line="38" pos:column="52">accept_langs<pos:position pos:line="38" pos:column="64"/></name><operator pos:line="38" pos:column="64">-&gt;<pos:position pos:line="38" pos:column="69"/></operator><name pos:line="38" pos:column="66">elts<pos:position pos:line="38" pos:column="70"/></name></name></expr></init></decl>;<pos:position pos:line="38" pos:column="71"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">accept_rec<pos:position pos:line="39" pos:column="23"/></name> <modifier pos:line="39" pos:column="24">*<pos:position pos:line="39" pos:column="25"/></modifier></type><name pos:line="39" pos:column="25">best<pos:position pos:line="39" pos:column="29"/></name> <init pos:line="39" pos:column="30">= <expr><name pos:line="39" pos:column="32">NULL<pos:position pos:line="39" pos:column="36"/></name></expr></init></decl>, <modifier pos:line="39" pos:column="38">*<pos:position pos:line="39" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="39" pos:column="39">star<pos:position pos:line="39" pos:column="43"/></name> <init pos:line="39" pos:column="44">= <expr><name pos:line="39" pos:column="46">NULL<pos:position pos:line="39" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="39" pos:column="51"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="40" pos:column="13">accept_rec<pos:position pos:line="40" pos:column="23"/></name> <modifier pos:line="40" pos:column="24">*<pos:position pos:line="40" pos:column="25"/></modifier></type><name pos:line="40" pos:column="25">bestthistag<pos:position pos:line="40" pos:column="36"/></name></decl>;<pos:position pos:line="40" pos:column="37"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="41" pos:column="13">char<pos:position pos:line="41" pos:column="17"/></name> <modifier pos:line="41" pos:column="18">*<pos:position pos:line="41" pos:column="19"/></modifier></type><name pos:line="41" pos:column="19">lang<pos:position pos:line="41" pos:column="23"/></name></decl>, <modifier pos:line="41" pos:column="25">*<pos:position pos:line="41" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="41" pos:column="26">p<pos:position pos:line="41" pos:column="27"/></name></decl>;<pos:position pos:line="41" pos:column="28"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="42" pos:column="13">float<pos:position pos:line="42" pos:column="18"/></name></type> <name pos:line="42" pos:column="19">fiddle_q<pos:position pos:line="42" pos:column="27"/></name> <init pos:line="42" pos:column="28">= <expr><literal type="number" pos:line="42" pos:column="30">0.0f<pos:position pos:line="42" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="35"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="43" pos:column="13">int<pos:position pos:line="43" pos:column="16"/></name></type> <name pos:line="43" pos:column="17">any_match_on_star<pos:position pos:line="43" pos:column="34"/></name> <init pos:line="43" pos:column="35">= <expr><literal type="number" pos:line="43" pos:column="37">0<pos:position pos:line="43" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="43" pos:column="39"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="44" pos:column="13">int<pos:position pos:line="44" pos:column="16"/></name></type> <name pos:line="44" pos:column="17">i<pos:position pos:line="44" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="44" pos:column="20">j<pos:position pos:line="44" pos:column="21"/></name></decl>;<pos:position pos:line="44" pos:column="22"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="45" pos:column="13">apr_size_t<pos:position pos:line="45" pos:column="23"/></name></type> <name pos:line="45" pos:column="24">alen<pos:position pos:line="45" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="45" pos:column="30">longest_lang_range_len<pos:position pos:line="45" pos:column="52"/></name></decl>;<pos:position pos:line="45" pos:column="53"/></decl_stmt>

            <for pos:line="47" pos:column="13">for <control pos:line="47" pos:column="17">(<init><expr><name pos:line="47" pos:column="18">j<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <literal type="number" pos:line="47" pos:column="22">0<pos:position pos:line="47" pos:column="23"/></literal></expr>;<pos:position pos:line="47" pos:column="24"/></init> <condition><expr><name pos:line="47" pos:column="25">j<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">&lt;<pos:position pos:line="47" pos:column="31"/></operator> <name><name pos:line="47" pos:column="29">variant<pos:position pos:line="47" pos:column="36"/></name><operator pos:line="47" pos:column="36">-&gt;<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="38">content_languages<pos:position pos:line="47" pos:column="55"/></name><operator pos:line="47" pos:column="55">-&gt;<pos:position pos:line="47" pos:column="60"/></operator><name pos:line="47" pos:column="57">nelts<pos:position pos:line="47" pos:column="62"/></name></name></expr>;<pos:position pos:line="47" pos:column="63"/></condition> <incr><expr><operator pos:line="47" pos:column="64">++<pos:position pos:line="47" pos:column="66"/></operator><name pos:line="47" pos:column="66">j<pos:position pos:line="47" pos:column="67"/></name></expr></incr>)<pos:position pos:line="47" pos:column="68"/></control> <block pos:line="47" pos:column="69">{
                <expr_stmt><expr><name pos:line="48" pos:column="17">p<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">=<pos:position pos:line="48" pos:column="20"/></operator> <name pos:line="48" pos:column="21">NULL<pos:position pos:line="48" pos:column="25"/></name></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
                <expr_stmt><expr><name pos:line="49" pos:column="17">bestthistag<pos:position pos:line="49" pos:column="28"/></name> <operator pos:line="49" pos:column="29">=<pos:position pos:line="49" pos:column="30"/></operator> <name pos:line="49" pos:column="31">NULL<pos:position pos:line="49" pos:column="35"/></name></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><name pos:line="50" pos:column="17">longest_lang_range_len<pos:position pos:line="50" pos:column="39"/></name> <operator pos:line="50" pos:column="40">=<pos:position pos:line="50" pos:column="41"/></operator> <literal type="number" pos:line="50" pos:column="42">0<pos:position pos:line="50" pos:column="43"/></literal></expr>;<pos:position pos:line="50" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name pos:line="51" pos:column="17">alen<pos:position pos:line="51" pos:column="21"/></name> <operator pos:line="51" pos:column="22">=<pos:position pos:line="51" pos:column="23"/></operator> <literal type="number" pos:line="51" pos:column="24">0<pos:position pos:line="51" pos:column="25"/></literal></expr>;<pos:position pos:line="51" pos:column="26"/></expr_stmt>

                <comment type="block" pos:line="53" pos:column="17">/* lang is the variant's language-tag, which is the one
                 * we are allowed to use the prefix of in HTTP/1.1
                 */</comment>
                <expr_stmt><expr><name pos:line="56" pos:column="17">lang<pos:position pos:line="56" pos:column="21"/></name> <operator pos:line="56" pos:column="22">=<pos:position pos:line="56" pos:column="23"/></operator> <operator pos:line="56" pos:column="24">(<pos:position pos:line="56" pos:column="25"/></operator><operator pos:line="56" pos:column="25">(<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="26">char<pos:position pos:line="56" pos:column="30"/></name> <operator pos:line="56" pos:column="31">*<pos:position pos:line="56" pos:column="32"/></operator><operator pos:line="56" pos:column="32">*<pos:position pos:line="56" pos:column="33"/></operator><operator pos:line="56" pos:column="33">)<pos:position pos:line="56" pos:column="34"/></operator> <operator pos:line="56" pos:column="35">(<pos:position pos:line="56" pos:column="36"/></operator><name><name pos:line="56" pos:column="36">variant<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">-&gt;<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="45">content_languages<pos:position pos:line="56" pos:column="62"/></name><operator pos:line="56" pos:column="62">-&gt;<pos:position pos:line="56" pos:column="67"/></operator><name pos:line="56" pos:column="64">elts<pos:position pos:line="56" pos:column="68"/></name></name><operator pos:line="56" pos:column="68">)<pos:position pos:line="56" pos:column="69"/></operator><operator pos:line="56" pos:column="69">)<pos:position pos:line="56" pos:column="70"/></operator><index pos:line="56" pos:column="70">[<expr><name pos:line="56" pos:column="71">j<pos:position pos:line="56" pos:column="72"/></name></expr>]<pos:position pos:line="56" pos:column="73"/></index></expr>;<pos:position pos:line="56" pos:column="74"/></expr_stmt>

                <comment type="block" pos:line="58" pos:column="17">/* now find the best (i.e. longest) matching
                 * Accept-Language header language. We put the best match
                 * for this tag in bestthistag. We cannot update the
                 * overall best (based on q value) because the best match
                 * for this tag is the longest language item on the accept
                 * header, not necessarily the highest q.
                 */</comment>
                <for pos:line="65" pos:column="17">for <control pos:line="65" pos:column="21">(<init><expr><name pos:line="65" pos:column="22">i<pos:position pos:line="65" pos:column="23"/></name> <operator pos:line="65" pos:column="24">=<pos:position pos:line="65" pos:column="25"/></operator> <literal type="number" pos:line="65" pos:column="26">0<pos:position pos:line="65" pos:column="27"/></literal></expr>;<pos:position pos:line="65" pos:column="28"/></init> <condition><expr><name pos:line="65" pos:column="29">i<pos:position pos:line="65" pos:column="30"/></name> <operator pos:line="65" pos:column="31">&lt;<pos:position pos:line="65" pos:column="35"/></operator> <name><name pos:line="65" pos:column="33">neg<pos:position pos:line="65" pos:column="36"/></name><operator pos:line="65" pos:column="36">-&gt;<pos:position pos:line="65" pos:column="41"/></operator><name pos:line="65" pos:column="38">accept_langs<pos:position pos:line="65" pos:column="50"/></name><operator pos:line="65" pos:column="50">-&gt;<pos:position pos:line="65" pos:column="55"/></operator><name pos:line="65" pos:column="52">nelts<pos:position pos:line="65" pos:column="57"/></name></name></expr>;<pos:position pos:line="65" pos:column="58"/></condition> <incr><expr><operator pos:line="65" pos:column="59">++<pos:position pos:line="65" pos:column="61"/></operator><name pos:line="65" pos:column="61">i<pos:position pos:line="65" pos:column="62"/></name></expr></incr>)<pos:position pos:line="65" pos:column="63"/></control> <block pos:line="65" pos:column="64">{
                    <if pos:line="66" pos:column="21">if <condition pos:line="66" pos:column="24">(<expr><operator pos:line="66" pos:column="25">!<pos:position pos:line="66" pos:column="26"/></operator><call><name pos:line="66" pos:column="26">strcmp<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">(<argument><expr><name><name pos:line="66" pos:column="33">accs<pos:position pos:line="66" pos:column="37"/></name><index pos:line="66" pos:column="37">[<expr><name pos:line="66" pos:column="38">i<pos:position pos:line="66" pos:column="39"/></name></expr>]<pos:position pos:line="66" pos:column="40"/></index></name><operator pos:line="66" pos:column="40">.<pos:position pos:line="66" pos:column="41"/></operator><name pos:line="66" pos:column="41">name<pos:position pos:line="66" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="47">"*"<pos:position pos:line="66" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="52"/></condition><then pos:line="66" pos:column="52"> <block pos:line="66" pos:column="53">{
                        <if pos:line="67" pos:column="25">if <condition pos:line="67" pos:column="28">(<expr><operator pos:line="67" pos:column="29">!<pos:position pos:line="67" pos:column="30"/></operator><name pos:line="67" pos:column="30">star<pos:position pos:line="67" pos:column="34"/></name></expr>)<pos:position pos:line="67" pos:column="35"/></condition><then pos:line="67" pos:column="35"> <block pos:line="67" pos:column="36">{
                            <expr_stmt><expr><name pos:line="68" pos:column="29">star<pos:position pos:line="68" pos:column="33"/></name> <operator pos:line="68" pos:column="34">=<pos:position pos:line="68" pos:column="35"/></operator> <operator pos:line="68" pos:column="36">&amp;<pos:position pos:line="68" pos:column="41"/></operator><name><name pos:line="68" pos:column="37">accs<pos:position pos:line="68" pos:column="41"/></name><index pos:line="68" pos:column="41">[<expr><name pos:line="68" pos:column="42">i<pos:position pos:line="68" pos:column="43"/></name></expr>]<pos:position pos:line="68" pos:column="44"/></index></name></expr>;<pos:position pos:line="68" pos:column="45"/></expr_stmt>
                        }<pos:position pos:line="69" pos:column="26"/></block></then></if>
                        <continue pos:line="70" pos:column="25">continue;<pos:position pos:line="70" pos:column="34"/></continue>
                    }<pos:position pos:line="71" pos:column="22"/></block></then></if>
                    <comment type="block" pos:line="72" pos:column="21">/* Find language. We match if either the variant
                     * language tag exactly matches the language range
                     * from the accept header, or a prefix of the variant
                     * language tag up to a '-' character matches the
                     * whole of the language range in the Accept-Language
                     * header.  Note that HTTP/1.x allows any number of
                     * '-' characters in a tag or range, currently only
                     * tags with zero or one '-' characters are defined
                     * for general use (see rfc1766).
                     *
                     * We only use language range in the Accept-Language
                     * header the best match for the variant language tag
                     * if it is longer than the previous best match.
                     */</comment>

                    <expr_stmt><expr><name pos:line="87" pos:column="21">alen<pos:position pos:line="87" pos:column="25"/></name> <operator pos:line="87" pos:column="26">=<pos:position pos:line="87" pos:column="27"/></operator> <call><name pos:line="87" pos:column="28">strlen<pos:position pos:line="87" pos:column="34"/></name><argument_list pos:line="87" pos:column="34">(<argument><expr><name><name pos:line="87" pos:column="35">accs<pos:position pos:line="87" pos:column="39"/></name><index pos:line="87" pos:column="39">[<expr><name pos:line="87" pos:column="40">i<pos:position pos:line="87" pos:column="41"/></name></expr>]<pos:position pos:line="87" pos:column="42"/></index></name><operator pos:line="87" pos:column="42">.<pos:position pos:line="87" pos:column="43"/></operator><name pos:line="87" pos:column="43">name<pos:position pos:line="87" pos:column="47"/></name></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="49"/></expr_stmt>

                    <if pos:line="89" pos:column="21">if <condition pos:line="89" pos:column="24">(<expr><operator pos:line="89" pos:column="25">(<pos:position pos:line="89" pos:column="26"/></operator><call><name pos:line="89" pos:column="26">strlen<pos:position pos:line="89" pos:column="32"/></name><argument_list pos:line="89" pos:column="32">(<argument><expr><name pos:line="89" pos:column="33">lang<pos:position pos:line="89" pos:column="37"/></name></expr></argument>)<pos:position pos:line="89" pos:column="38"/></argument_list></call> <operator pos:line="89" pos:column="39">&gt;=<pos:position pos:line="89" pos:column="44"/></operator> <name pos:line="89" pos:column="42">alen<pos:position pos:line="89" pos:column="46"/></name><operator pos:line="89" pos:column="46">)<pos:position pos:line="89" pos:column="47"/></operator> <operator pos:line="89" pos:column="48">&amp;&amp;<pos:position pos:line="89" pos:column="58"/></operator>
                        <operator pos:line="90" pos:column="25">!<pos:position pos:line="90" pos:column="26"/></operator><call><name pos:line="90" pos:column="26">strncmp<pos:position pos:line="90" pos:column="33"/></name><argument_list pos:line="90" pos:column="33">(<argument><expr><name pos:line="90" pos:column="34">lang<pos:position pos:line="90" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="40">accs<pos:position pos:line="90" pos:column="44"/></name><index pos:line="90" pos:column="44">[<expr><name pos:line="90" pos:column="45">i<pos:position pos:line="90" pos:column="46"/></name></expr>]<pos:position pos:line="90" pos:column="47"/></index></name><operator pos:line="90" pos:column="47">.<pos:position pos:line="90" pos:column="48"/></operator><name pos:line="90" pos:column="48">name<pos:position pos:line="90" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="54">alen<pos:position pos:line="90" pos:column="58"/></name></expr></argument>)<pos:position pos:line="90" pos:column="59"/></argument_list></call> <operator pos:line="90" pos:column="60">&amp;&amp;<pos:position pos:line="90" pos:column="70"/></operator>
                        <operator pos:line="91" pos:column="25">(<pos:position pos:line="91" pos:column="26"/></operator><operator pos:line="91" pos:column="26">(<pos:position pos:line="91" pos:column="27"/></operator><name><name pos:line="91" pos:column="27">lang<pos:position pos:line="91" pos:column="31"/></name><index pos:line="91" pos:column="31">[<expr><name pos:line="91" pos:column="32">alen<pos:position pos:line="91" pos:column="36"/></name></expr>]<pos:position pos:line="91" pos:column="37"/></index></name> <operator pos:line="91" pos:column="38">==<pos:position pos:line="91" pos:column="40"/></operator> <literal type="number" pos:line="91" pos:column="41">0<pos:position pos:line="91" pos:column="42"/></literal><operator pos:line="91" pos:column="42">)<pos:position pos:line="91" pos:column="43"/></operator> <operator pos:line="91" pos:column="44">||<pos:position pos:line="91" pos:column="46"/></operator> <operator pos:line="91" pos:column="47">(<pos:position pos:line="91" pos:column="48"/></operator><name><name pos:line="91" pos:column="48">lang<pos:position pos:line="91" pos:column="52"/></name><index pos:line="91" pos:column="52">[<expr><name pos:line="91" pos:column="53">alen<pos:position pos:line="91" pos:column="57"/></name></expr>]<pos:position pos:line="91" pos:column="58"/></index></name> <operator pos:line="91" pos:column="59">==<pos:position pos:line="91" pos:column="61"/></operator> <literal type="char" pos:line="91" pos:column="62">'-'<pos:position pos:line="91" pos:column="65"/></literal><operator pos:line="91" pos:column="65">)<pos:position pos:line="91" pos:column="66"/></operator><operator pos:line="91" pos:column="66">)<pos:position pos:line="91" pos:column="67"/></operator></expr> )<pos:position pos:line="91" pos:column="69"/></condition><then pos:line="91" pos:column="69"> <block pos:line="91" pos:column="70">{

                        <if pos:line="93" pos:column="25">if <condition pos:line="93" pos:column="28">(<expr><name pos:line="93" pos:column="29">alen<pos:position pos:line="93" pos:column="33"/></name> <operator pos:line="93" pos:column="34">&gt;<pos:position pos:line="93" pos:column="38"/></operator> <name pos:line="93" pos:column="36">longest_lang_range_len<pos:position pos:line="93" pos:column="58"/></name></expr>)<pos:position pos:line="93" pos:column="59"/></condition><then pos:line="93" pos:column="59"> <block pos:line="93" pos:column="60">{
                            <expr_stmt><expr><name pos:line="94" pos:column="29">longest_lang_range_len<pos:position pos:line="94" pos:column="51"/></name> <operator pos:line="94" pos:column="52">=<pos:position pos:line="94" pos:column="53"/></operator> <name pos:line="94" pos:column="54">alen<pos:position pos:line="94" pos:column="58"/></name></expr>;<pos:position pos:line="94" pos:column="59"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="95" pos:column="29">bestthistag<pos:position pos:line="95" pos:column="40"/></name> <operator pos:line="95" pos:column="41">=<pos:position pos:line="95" pos:column="42"/></operator> <operator pos:line="95" pos:column="43">&amp;<pos:position pos:line="95" pos:column="48"/></operator><name><name pos:line="95" pos:column="44">accs<pos:position pos:line="95" pos:column="48"/></name><index pos:line="95" pos:column="48">[<expr><name pos:line="95" pos:column="49">i<pos:position pos:line="95" pos:column="50"/></name></expr>]<pos:position pos:line="95" pos:column="51"/></index></name></expr>;<pos:position pos:line="95" pos:column="52"/></expr_stmt>
                        }<pos:position pos:line="96" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="97" pos:column="22"/></block></then></if>

                    <if pos:line="99" pos:column="21">if <condition pos:line="99" pos:column="24">(<expr><operator pos:line="99" pos:column="25">!<pos:position pos:line="99" pos:column="26"/></operator><name pos:line="99" pos:column="26">bestthistag<pos:position pos:line="99" pos:column="37"/></name> <operator pos:line="99" pos:column="38">&amp;&amp;<pos:position pos:line="99" pos:column="48"/></operator> <operator pos:line="99" pos:column="41">!<pos:position pos:line="99" pos:column="42"/></operator><name><name pos:line="99" pos:column="42">neg<pos:position pos:line="99" pos:column="45"/></name><operator pos:line="99" pos:column="45">-&gt;<pos:position pos:line="99" pos:column="50"/></operator><name pos:line="99" pos:column="47">dont_fiddle_headers<pos:position pos:line="99" pos:column="66"/></name></name></expr>)<pos:position pos:line="99" pos:column="67"/></condition><then pos:line="99" pos:column="67"> <block pos:line="99" pos:column="68">{
                        <comment type="block" pos:line="100" pos:column="25">/* The next bit is a fiddle. Some browsers might
                         * be configured to send more specific language
                         * ranges than desirable. For example, an
                         * Accept-Language of en-US should never match
                         * variants with languages en or en-GB. But US
                         * English speakers might pick en-US as their
                         * language choice.  So this fiddle checks if the
                         * language range has a prefix, and if so, it
                         * matches variants which match that prefix with a
                         * priority of 0.001. So a request for en-US would
                         * match variants of types en and en-GB, but at
                         * much lower priority than matches of en-US
                         * directly, or of any other language listed on
                         * the Accept-Language header. Note that this
                         * fiddle does not handle multi-level prefixes.
                         */</comment>
                        <if pos:line="116" pos:column="25">if <condition pos:line="116" pos:column="28">(<expr><operator pos:line="116" pos:column="29">(<pos:position pos:line="116" pos:column="30"/></operator><name pos:line="116" pos:column="30">p<pos:position pos:line="116" pos:column="31"/></name> <operator pos:line="116" pos:column="32">=<pos:position pos:line="116" pos:column="33"/></operator> <call><name pos:line="116" pos:column="34">strchr<pos:position pos:line="116" pos:column="40"/></name><argument_list pos:line="116" pos:column="40">(<argument><expr><name><name pos:line="116" pos:column="41">accs<pos:position pos:line="116" pos:column="45"/></name><index pos:line="116" pos:column="45">[<expr><name pos:line="116" pos:column="46">i<pos:position pos:line="116" pos:column="47"/></name></expr>]<pos:position pos:line="116" pos:column="48"/></index></name><operator pos:line="116" pos:column="48">.<pos:position pos:line="116" pos:column="49"/></operator><name pos:line="116" pos:column="49">name<pos:position pos:line="116" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="116" pos:column="55">'-'<pos:position pos:line="116" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="59"/></argument_list></call><operator pos:line="116" pos:column="59">)<pos:position pos:line="116" pos:column="60"/></operator></expr>)<pos:position pos:line="116" pos:column="61"/></condition><then pos:line="116" pos:column="61"> <block pos:line="116" pos:column="62">{
                            <decl_stmt><decl><type><name pos:line="117" pos:column="29">int<pos:position pos:line="117" pos:column="32"/></name></type> <name pos:line="117" pos:column="33">plen<pos:position pos:line="117" pos:column="37"/></name> <init pos:line="117" pos:column="38">= <expr><name pos:line="117" pos:column="40">p<pos:position pos:line="117" pos:column="41"/></name> <operator pos:line="117" pos:column="42">-<pos:position pos:line="117" pos:column="43"/></operator> <name><name pos:line="117" pos:column="44">accs<pos:position pos:line="117" pos:column="48"/></name><index pos:line="117" pos:column="48">[<expr><name pos:line="117" pos:column="49">i<pos:position pos:line="117" pos:column="50"/></name></expr>]<pos:position pos:line="117" pos:column="51"/></index></name><operator pos:line="117" pos:column="51">.<pos:position pos:line="117" pos:column="52"/></operator><name pos:line="117" pos:column="52">name<pos:position pos:line="117" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="117" pos:column="57"/></decl_stmt>

                            <if pos:line="119" pos:column="29">if <condition pos:line="119" pos:column="32">(<expr><operator pos:line="119" pos:column="33">!<pos:position pos:line="119" pos:column="34"/></operator><call><name pos:line="119" pos:column="34">strncmp<pos:position pos:line="119" pos:column="41"/></name><argument_list pos:line="119" pos:column="41">(<argument><expr><name pos:line="119" pos:column="42">lang<pos:position pos:line="119" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="48">accs<pos:position pos:line="119" pos:column="52"/></name><index pos:line="119" pos:column="52">[<expr><name pos:line="119" pos:column="53">i<pos:position pos:line="119" pos:column="54"/></name></expr>]<pos:position pos:line="119" pos:column="55"/></index></name><operator pos:line="119" pos:column="55">.<pos:position pos:line="119" pos:column="56"/></operator><name pos:line="119" pos:column="56">name<pos:position pos:line="119" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="62">plen<pos:position pos:line="119" pos:column="66"/></name></expr></argument>)<pos:position pos:line="119" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="119" pos:column="68"/></condition><then pos:line="119" pos:column="68"> <block pos:line="119" pos:column="69">{
                                <expr_stmt><expr><name pos:line="120" pos:column="33">fiddle_q<pos:position pos:line="120" pos:column="41"/></name> <operator pos:line="120" pos:column="42">=<pos:position pos:line="120" pos:column="43"/></operator> <literal type="number" pos:line="120" pos:column="44">0.001f<pos:position pos:line="120" pos:column="50"/></literal></expr>;<pos:position pos:line="120" pos:column="51"/></expr_stmt>
                            }<pos:position pos:line="121" pos:column="30"/></block></then></if>
                        }<pos:position pos:line="122" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="123" pos:column="22"/></block></then></if>
                }<pos:position pos:line="124" pos:column="18"/></block></for>
                <comment type="block" pos:line="125" pos:column="17">/* Finished looking at Accept-Language headers, the best
                 * (longest) match is in bestthistag, or NULL if no match
                 */</comment>
                <if pos:line="128" pos:column="17">if <condition pos:line="128" pos:column="20">(<expr><operator pos:line="128" pos:column="21">!<pos:position pos:line="128" pos:column="22"/></operator><name pos:line="128" pos:column="22">best<pos:position pos:line="128" pos:column="26"/></name> <operator pos:line="128" pos:column="27">||<pos:position pos:line="128" pos:column="29"/></operator>
                    <operator pos:line="129" pos:column="21">(<pos:position pos:line="129" pos:column="22"/></operator><name pos:line="129" pos:column="22">bestthistag<pos:position pos:line="129" pos:column="33"/></name> <operator pos:line="129" pos:column="34">&amp;&amp;<pos:position pos:line="129" pos:column="44"/></operator> <name><name pos:line="129" pos:column="37">bestthistag<pos:position pos:line="129" pos:column="48"/></name><operator pos:line="129" pos:column="48">-&gt;<pos:position pos:line="129" pos:column="53"/></operator><name pos:line="129" pos:column="50">quality<pos:position pos:line="129" pos:column="57"/></name></name> <operator pos:line="129" pos:column="58">&gt;<pos:position pos:line="129" pos:column="62"/></operator> <name><name pos:line="129" pos:column="60">best<pos:position pos:line="129" pos:column="64"/></name><operator pos:line="129" pos:column="64">-&gt;<pos:position pos:line="129" pos:column="69"/></operator><name pos:line="129" pos:column="66">quality<pos:position pos:line="129" pos:column="73"/></name></name><operator pos:line="129" pos:column="73">)<pos:position pos:line="129" pos:column="74"/></operator></expr>)<pos:position pos:line="129" pos:column="75"/></condition><then pos:line="129" pos:column="75"> <block pos:line="129" pos:column="76">{
                    <expr_stmt><expr><name pos:line="130" pos:column="21">best<pos:position pos:line="130" pos:column="25"/></name> <operator pos:line="130" pos:column="26">=<pos:position pos:line="130" pos:column="27"/></operator> <name pos:line="130" pos:column="28">bestthistag<pos:position pos:line="130" pos:column="39"/></name></expr>;<pos:position pos:line="130" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="131" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="133" pos:column="17">/* See if the tag matches on a * in the Accept-Language
                 * header. If so, record this fact for later use
                 */</comment>
                <if pos:line="136" pos:column="17">if <condition pos:line="136" pos:column="20">(<expr><operator pos:line="136" pos:column="21">!<pos:position pos:line="136" pos:column="22"/></operator><name pos:line="136" pos:column="22">bestthistag<pos:position pos:line="136" pos:column="33"/></name> <operator pos:line="136" pos:column="34">&amp;&amp;<pos:position pos:line="136" pos:column="44"/></operator> <name pos:line="136" pos:column="37">star<pos:position pos:line="136" pos:column="41"/></name></expr>)<pos:position pos:line="136" pos:column="42"/></condition><then pos:line="136" pos:column="42"> <block pos:line="136" pos:column="43">{
                    <expr_stmt><expr><name pos:line="137" pos:column="21">any_match_on_star<pos:position pos:line="137" pos:column="38"/></name> <operator pos:line="137" pos:column="39">=<pos:position pos:line="137" pos:column="40"/></operator> <literal type="number" pos:line="137" pos:column="41">1<pos:position pos:line="137" pos:column="42"/></literal></expr>;<pos:position pos:line="137" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="138" pos:column="18"/></block></then></if>
            }<pos:position pos:line="139" pos:column="14"/></block></for>

            <comment type="block" pos:line="141" pos:column="13">/* If one of the language tags of the variant matched on *, we
             * need to see if its q is better than that of any non-* match
             * on any other tag of the variant.  If so the * match takes
             * precedence and the overall match is not definite.
             */</comment>
            <if pos:line="146" pos:column="13">if <condition pos:line="146" pos:column="16">( <expr><name pos:line="146" pos:column="18">any_match_on_star<pos:position pos:line="146" pos:column="35"/></name> <operator pos:line="146" pos:column="36">&amp;&amp;<pos:position pos:line="146" pos:column="46"/></operator>
                <operator pos:line="147" pos:column="17">(<pos:position pos:line="147" pos:column="18"/></operator><operator pos:line="147" pos:column="18">(<pos:position pos:line="147" pos:column="19"/></operator><name pos:line="147" pos:column="19">best<pos:position pos:line="147" pos:column="23"/></name> <operator pos:line="147" pos:column="24">&amp;&amp;<pos:position pos:line="147" pos:column="34"/></operator> <name><name pos:line="147" pos:column="27">star<pos:position pos:line="147" pos:column="31"/></name><operator pos:line="147" pos:column="31">-&gt;<pos:position pos:line="147" pos:column="36"/></operator><name pos:line="147" pos:column="33">quality<pos:position pos:line="147" pos:column="40"/></name></name> <operator pos:line="147" pos:column="41">&gt;<pos:position pos:line="147" pos:column="45"/></operator> <name><name pos:line="147" pos:column="43">best<pos:position pos:line="147" pos:column="47"/></name><operator pos:line="147" pos:column="47">-&gt;<pos:position pos:line="147" pos:column="52"/></operator><name pos:line="147" pos:column="49">quality<pos:position pos:line="147" pos:column="56"/></name></name><operator pos:line="147" pos:column="56">)<pos:position pos:line="147" pos:column="57"/></operator> <operator pos:line="147" pos:column="58">||<pos:position pos:line="147" pos:column="60"/></operator>
                 <operator pos:line="148" pos:column="18">(<pos:position pos:line="148" pos:column="19"/></operator><operator pos:line="148" pos:column="19">!<pos:position pos:line="148" pos:column="20"/></operator><name pos:line="148" pos:column="20">best<pos:position pos:line="148" pos:column="24"/></name><operator pos:line="148" pos:column="24">)<pos:position pos:line="148" pos:column="25"/></operator><operator pos:line="148" pos:column="25">)<pos:position pos:line="148" pos:column="26"/></operator></expr> )<pos:position pos:line="148" pos:column="28"/></condition><then pos:line="148" pos:column="28"> <block pos:line="148" pos:column="29">{
                <expr_stmt><expr><name pos:line="149" pos:column="17">best<pos:position pos:line="149" pos:column="21"/></name> <operator pos:line="149" pos:column="22">=<pos:position pos:line="149" pos:column="23"/></operator> <name pos:line="149" pos:column="24">star<pos:position pos:line="149" pos:column="28"/></name></expr>;<pos:position pos:line="149" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="150" pos:column="17">variant<pos:position pos:line="150" pos:column="24"/></name><operator pos:line="150" pos:column="24">-&gt;<pos:position pos:line="150" pos:column="29"/></operator><name pos:line="150" pos:column="26">definite<pos:position pos:line="150" pos:column="34"/></name></name> <operator pos:line="150" pos:column="35">=<pos:position pos:line="150" pos:column="36"/></operator> <literal type="number" pos:line="150" pos:column="37">0<pos:position pos:line="150" pos:column="38"/></literal></expr>;<pos:position pos:line="150" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="151" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="153" pos:column="13">variant<pos:position pos:line="153" pos:column="20"/></name><operator pos:line="153" pos:column="20">-&gt;<pos:position pos:line="153" pos:column="25"/></operator><name pos:line="153" pos:column="22">lang_quality<pos:position pos:line="153" pos:column="34"/></name></name> <operator pos:line="153" pos:column="35">=<pos:position pos:line="153" pos:column="36"/></operator> <ternary><condition><expr><name pos:line="153" pos:column="37">best<pos:position pos:line="153" pos:column="41"/></name></expr> ?<pos:position pos:line="153" pos:column="43"/></condition><then pos:line="153" pos:column="43"> <expr><name><name pos:line="153" pos:column="44">best<pos:position pos:line="153" pos:column="48"/></name><operator pos:line="153" pos:column="48">-&gt;<pos:position pos:line="153" pos:column="53"/></operator><name pos:line="153" pos:column="50">quality<pos:position pos:line="153" pos:column="57"/></name></name></expr> <pos:position pos:line="153" pos:column="58"/></then><else pos:line="153" pos:column="58">: <expr><name pos:line="153" pos:column="60">fiddle_q<pos:position pos:line="153" pos:column="68"/></name></expr></else></ternary></expr>;<pos:position pos:line="153" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="154" pos:column="10"/></block></else></if>
    }<pos:position pos:line="155" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="157" pos:column="5">/* Handle the ForceDefaultLanguage overrides, based on the best match
     * to LanguagePriority order.  The best match is the lowest index of
     * any LanguagePriority match.
     */</comment>
    <if pos:line="161" pos:column="5">if <condition pos:line="161" pos:column="8">(<expr><operator pos:line="161" pos:column="9">(<pos:position pos:line="161" pos:column="10"/></operator><operator pos:line="161" pos:column="10">(<pos:position pos:line="161" pos:column="11"/></operator><name pos:line="161" pos:column="11">forcepriority<pos:position pos:line="161" pos:column="24"/></name> <operator pos:line="161" pos:column="25">&amp;<pos:position pos:line="161" pos:column="30"/></operator> <name pos:line="161" pos:column="27">FLP_PREFER<pos:position pos:line="161" pos:column="37"/></name><operator pos:line="161" pos:column="37">)<pos:position pos:line="161" pos:column="38"/></operator>
             <operator pos:line="162" pos:column="14">&amp;&amp;<pos:position pos:line="162" pos:column="24"/></operator> <operator pos:line="162" pos:column="17">(<pos:position pos:line="162" pos:column="18"/></operator><name><name pos:line="162" pos:column="18">variant<pos:position pos:line="162" pos:column="25"/></name><operator pos:line="162" pos:column="25">-&gt;<pos:position pos:line="162" pos:column="30"/></operator><name pos:line="162" pos:column="27">lang_index<pos:position pos:line="162" pos:column="37"/></name></name> <operator pos:line="162" pos:column="38">&lt;<pos:position pos:line="162" pos:column="42"/></operator> <literal type="number" pos:line="162" pos:column="40">0<pos:position pos:line="162" pos:column="41"/></literal><operator pos:line="162" pos:column="41">)<pos:position pos:line="162" pos:column="42"/></operator><operator pos:line="162" pos:column="42">)<pos:position pos:line="162" pos:column="43"/></operator>
     <operator pos:line="163" pos:column="6">||<pos:position pos:line="163" pos:column="8"/></operator> <operator pos:line="163" pos:column="9">(<pos:position pos:line="163" pos:column="10"/></operator><operator pos:line="163" pos:column="10">(<pos:position pos:line="163" pos:column="11"/></operator><name pos:line="163" pos:column="11">forcepriority<pos:position pos:line="163" pos:column="24"/></name> <operator pos:line="163" pos:column="25">&amp;<pos:position pos:line="163" pos:column="30"/></operator> <name pos:line="163" pos:column="27">FLP_FALLBACK<pos:position pos:line="163" pos:column="39"/></name><operator pos:line="163" pos:column="39">)<pos:position pos:line="163" pos:column="40"/></operator>
             <operator pos:line="164" pos:column="14">&amp;&amp;<pos:position pos:line="164" pos:column="24"/></operator> <operator pos:line="164" pos:column="17">!<pos:position pos:line="164" pos:column="18"/></operator><name><name pos:line="164" pos:column="18">variant<pos:position pos:line="164" pos:column="25"/></name><operator pos:line="164" pos:column="25">-&gt;<pos:position pos:line="164" pos:column="30"/></operator><name pos:line="164" pos:column="27">lang_quality<pos:position pos:line="164" pos:column="39"/></name></name><operator pos:line="164" pos:column="39">)<pos:position pos:line="164" pos:column="40"/></operator></expr>)<pos:position pos:line="164" pos:column="41"/></condition><then pos:line="164" pos:column="41">
    <block pos:line="165" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="166" pos:column="9">int<pos:position pos:line="166" pos:column="12"/></name></type> <name pos:line="166" pos:column="13">bestidx<pos:position pos:line="166" pos:column="20"/></name> <init pos:line="166" pos:column="21">= <expr><operator pos:line="166" pos:column="23">-<pos:position pos:line="166" pos:column="24"/></operator><literal type="number" pos:line="166" pos:column="24">1<pos:position pos:line="166" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="166" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="167" pos:column="9">int<pos:position pos:line="167" pos:column="12"/></name></type> <name pos:line="167" pos:column="13">j<pos:position pos:line="167" pos:column="14"/></name></decl>;<pos:position pos:line="167" pos:column="15"/></decl_stmt>

        <for pos:line="169" pos:column="9">for <control pos:line="169" pos:column="13">(<init><expr><name pos:line="169" pos:column="14">j<pos:position pos:line="169" pos:column="15"/></name> <operator pos:line="169" pos:column="16">=<pos:position pos:line="169" pos:column="17"/></operator> <literal type="number" pos:line="169" pos:column="18">0<pos:position pos:line="169" pos:column="19"/></literal></expr>;<pos:position pos:line="169" pos:column="20"/></init> <condition><expr><name pos:line="169" pos:column="21">j<pos:position pos:line="169" pos:column="22"/></name> <operator pos:line="169" pos:column="23">&lt;<pos:position pos:line="169" pos:column="27"/></operator> <name><name pos:line="169" pos:column="25">variant<pos:position pos:line="169" pos:column="32"/></name><operator pos:line="169" pos:column="32">-&gt;<pos:position pos:line="169" pos:column="37"/></operator><name pos:line="169" pos:column="34">content_languages<pos:position pos:line="169" pos:column="51"/></name><operator pos:line="169" pos:column="51">-&gt;<pos:position pos:line="169" pos:column="56"/></operator><name pos:line="169" pos:column="53">nelts<pos:position pos:line="169" pos:column="58"/></name></name></expr>;<pos:position pos:line="169" pos:column="59"/></condition> <incr><expr><operator pos:line="169" pos:column="60">++<pos:position pos:line="169" pos:column="62"/></operator><name pos:line="169" pos:column="62">j<pos:position pos:line="169" pos:column="63"/></name></expr></incr>)<pos:position pos:line="169" pos:column="64"/></control>
        <block pos:line="170" pos:column="9">{
            <comment type="block" pos:line="171" pos:column="13">/* lang is the variant's language-tag, which is the one
             * we are allowed to use the prefix of in HTTP/1.1
             */</comment>
            <decl_stmt><decl><type><name pos:line="174" pos:column="13">char<pos:position pos:line="174" pos:column="17"/></name> <modifier pos:line="174" pos:column="18">*<pos:position pos:line="174" pos:column="19"/></modifier></type><name pos:line="174" pos:column="19">lang<pos:position pos:line="174" pos:column="23"/></name> <init pos:line="174" pos:column="24">= <expr><operator pos:line="174" pos:column="26">(<pos:position pos:line="174" pos:column="27"/></operator><operator pos:line="174" pos:column="27">(<pos:position pos:line="174" pos:column="28"/></operator><name pos:line="174" pos:column="28">char<pos:position pos:line="174" pos:column="32"/></name> <operator pos:line="174" pos:column="33">*<pos:position pos:line="174" pos:column="34"/></operator><operator pos:line="174" pos:column="34">*<pos:position pos:line="174" pos:column="35"/></operator><operator pos:line="174" pos:column="35">)<pos:position pos:line="174" pos:column="36"/></operator> <operator pos:line="174" pos:column="37">(<pos:position pos:line="174" pos:column="38"/></operator><name><name pos:line="174" pos:column="38">variant<pos:position pos:line="174" pos:column="45"/></name><operator pos:line="174" pos:column="45">-&gt;<pos:position pos:line="174" pos:column="50"/></operator><name pos:line="174" pos:column="47">content_languages<pos:position pos:line="174" pos:column="64"/></name><operator pos:line="174" pos:column="64">-&gt;<pos:position pos:line="174" pos:column="69"/></operator><name pos:line="174" pos:column="66">elts<pos:position pos:line="174" pos:column="70"/></name></name><operator pos:line="174" pos:column="70">)<pos:position pos:line="174" pos:column="71"/></operator><operator pos:line="174" pos:column="71">)<pos:position pos:line="174" pos:column="72"/></operator><index pos:line="174" pos:column="72">[<expr><name pos:line="174" pos:column="73">j<pos:position pos:line="174" pos:column="74"/></name></expr>]<pos:position pos:line="174" pos:column="75"/></index></expr></init></decl>;<pos:position pos:line="174" pos:column="76"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="175" pos:column="13">int<pos:position pos:line="175" pos:column="16"/></name></type> <name pos:line="175" pos:column="17">idx<pos:position pos:line="175" pos:column="20"/></name> <init pos:line="175" pos:column="21">= <expr><operator pos:line="175" pos:column="23">-<pos:position pos:line="175" pos:column="24"/></operator><literal type="number" pos:line="175" pos:column="24">1<pos:position pos:line="175" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="175" pos:column="26"/></decl_stmt>

            <comment type="block" pos:line="177" pos:column="13">/* If we wish to fallback or
             * we use our own LanguagePriority index.
             */</comment>
            <expr_stmt><expr><name pos:line="180" pos:column="13">idx<pos:position pos:line="180" pos:column="16"/></name> <operator pos:line="180" pos:column="17">=<pos:position pos:line="180" pos:column="18"/></operator> <call><name pos:line="180" pos:column="19">find_lang_index<pos:position pos:line="180" pos:column="34"/></name><argument_list pos:line="180" pos:column="34">(<argument><expr><name><name pos:line="180" pos:column="35">neg<pos:position pos:line="180" pos:column="38"/></name><operator pos:line="180" pos:column="38">-&gt;<pos:position pos:line="180" pos:column="43"/></operator><name pos:line="180" pos:column="40">conf<pos:position pos:line="180" pos:column="44"/></name><operator pos:line="180" pos:column="44">-&gt;<pos:position pos:line="180" pos:column="49"/></operator><name pos:line="180" pos:column="46">language_priority<pos:position pos:line="180" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="65">lang<pos:position pos:line="180" pos:column="69"/></name></expr></argument>)<pos:position pos:line="180" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="71"/></expr_stmt>
            <if pos:line="181" pos:column="13">if <condition pos:line="181" pos:column="16">(<expr><operator pos:line="181" pos:column="17">(<pos:position pos:line="181" pos:column="18"/></operator><name pos:line="181" pos:column="18">idx<pos:position pos:line="181" pos:column="21"/></name> <operator pos:line="181" pos:column="22">&gt;=<pos:position pos:line="181" pos:column="27"/></operator> <literal type="number" pos:line="181" pos:column="25">0<pos:position pos:line="181" pos:column="26"/></literal><operator pos:line="181" pos:column="26">)<pos:position pos:line="181" pos:column="27"/></operator> <operator pos:line="181" pos:column="28">&amp;&amp;<pos:position pos:line="181" pos:column="38"/></operator> <operator pos:line="181" pos:column="31">(<pos:position pos:line="181" pos:column="32"/></operator><operator pos:line="181" pos:column="32">(<pos:position pos:line="181" pos:column="33"/></operator><name pos:line="181" pos:column="33">bestidx<pos:position pos:line="181" pos:column="40"/></name> <operator pos:line="181" pos:column="41">==<pos:position pos:line="181" pos:column="43"/></operator> <operator pos:line="181" pos:column="44">-<pos:position pos:line="181" pos:column="45"/></operator><literal type="number" pos:line="181" pos:column="45">1<pos:position pos:line="181" pos:column="46"/></literal><operator pos:line="181" pos:column="46">)<pos:position pos:line="181" pos:column="47"/></operator> <operator pos:line="181" pos:column="48">||<pos:position pos:line="181" pos:column="50"/></operator> <operator pos:line="181" pos:column="51">(<pos:position pos:line="181" pos:column="52"/></operator><name pos:line="181" pos:column="52">idx<pos:position pos:line="181" pos:column="55"/></name> <operator pos:line="181" pos:column="56">&lt;<pos:position pos:line="181" pos:column="60"/></operator> <name pos:line="181" pos:column="58">bestidx<pos:position pos:line="181" pos:column="65"/></name><operator pos:line="181" pos:column="65">)<pos:position pos:line="181" pos:column="66"/></operator><operator pos:line="181" pos:column="66">)<pos:position pos:line="181" pos:column="67"/></operator></expr>)<pos:position pos:line="181" pos:column="68"/></condition><then pos:line="181" pos:column="68"> <block pos:line="181" pos:column="69">{
                <expr_stmt><expr><name pos:line="182" pos:column="17">bestidx<pos:position pos:line="182" pos:column="24"/></name> <operator pos:line="182" pos:column="25">=<pos:position pos:line="182" pos:column="26"/></operator> <name pos:line="182" pos:column="27">idx<pos:position pos:line="182" pos:column="30"/></name></expr>;<pos:position pos:line="182" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="183" pos:column="14"/></block></then></if>
        }<pos:position pos:line="184" pos:column="10"/></block></for>

        <if pos:line="186" pos:column="9">if <condition pos:line="186" pos:column="12">(<expr><name pos:line="186" pos:column="13">bestidx<pos:position pos:line="186" pos:column="20"/></name> <operator pos:line="186" pos:column="21">&gt;=<pos:position pos:line="186" pos:column="26"/></operator> <literal type="number" pos:line="186" pos:column="24">0<pos:position pos:line="186" pos:column="25"/></literal></expr>)<pos:position pos:line="186" pos:column="26"/></condition><then pos:line="186" pos:column="26"> <block pos:line="186" pos:column="27">{
            <if pos:line="187" pos:column="13">if <condition pos:line="187" pos:column="16">(<expr><name><name pos:line="187" pos:column="17">variant<pos:position pos:line="187" pos:column="24"/></name><operator pos:line="187" pos:column="24">-&gt;<pos:position pos:line="187" pos:column="29"/></operator><name pos:line="187" pos:column="26">lang_quality<pos:position pos:line="187" pos:column="38"/></name></name></expr>)<pos:position pos:line="187" pos:column="39"/></condition><then pos:line="187" pos:column="39"> <block pos:line="187" pos:column="40">{
                <if pos:line="188" pos:column="17">if <condition pos:line="188" pos:column="20">(<expr><name pos:line="188" pos:column="21">forcepriority<pos:position pos:line="188" pos:column="34"/></name> <operator pos:line="188" pos:column="35">&amp;<pos:position pos:line="188" pos:column="40"/></operator> <name pos:line="188" pos:column="37">FLP_PREFER<pos:position pos:line="188" pos:column="47"/></name></expr>)<pos:position pos:line="188" pos:column="48"/></condition><then pos:line="188" pos:column="48"> <block pos:line="188" pos:column="49">{
                    <expr_stmt><expr><name><name pos:line="189" pos:column="21">variant<pos:position pos:line="189" pos:column="28"/></name><operator pos:line="189" pos:column="28">-&gt;<pos:position pos:line="189" pos:column="33"/></operator><name pos:line="189" pos:column="30">lang_index<pos:position pos:line="189" pos:column="40"/></name></name> <operator pos:line="189" pos:column="41">=<pos:position pos:line="189" pos:column="42"/></operator> <name pos:line="189" pos:column="43">bestidx<pos:position pos:line="189" pos:column="50"/></name></expr>;<pos:position pos:line="189" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="190" pos:column="18"/></block></then></if>
            }<pos:position pos:line="191" pos:column="14"/></block></then>
            <else pos:line="192" pos:column="13">else <block pos:line="192" pos:column="18">{
                <if pos:line="193" pos:column="17">if <condition pos:line="193" pos:column="20">(<expr><name pos:line="193" pos:column="21">forcepriority<pos:position pos:line="193" pos:column="34"/></name> <operator pos:line="193" pos:column="35">&amp;<pos:position pos:line="193" pos:column="40"/></operator> <name pos:line="193" pos:column="37">FLP_FALLBACK<pos:position pos:line="193" pos:column="49"/></name></expr>)<pos:position pos:line="193" pos:column="50"/></condition><then pos:line="193" pos:column="50"> <block pos:line="193" pos:column="51">{
                    <expr_stmt><expr><name><name pos:line="194" pos:column="21">variant<pos:position pos:line="194" pos:column="28"/></name><operator pos:line="194" pos:column="28">-&gt;<pos:position pos:line="194" pos:column="33"/></operator><name pos:line="194" pos:column="30">lang_index<pos:position pos:line="194" pos:column="40"/></name></name> <operator pos:line="194" pos:column="41">=<pos:position pos:line="194" pos:column="42"/></operator> <name pos:line="194" pos:column="43">bestidx<pos:position pos:line="194" pos:column="50"/></name></expr>;<pos:position pos:line="194" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="195" pos:column="21">variant<pos:position pos:line="195" pos:column="28"/></name><operator pos:line="195" pos:column="28">-&gt;<pos:position pos:line="195" pos:column="33"/></operator><name pos:line="195" pos:column="30">lang_quality<pos:position pos:line="195" pos:column="42"/></name></name> <operator pos:line="195" pos:column="43">=<pos:position pos:line="195" pos:column="44"/></operator> <literal type="number" pos:line="195" pos:column="45">.0001f<pos:position pos:line="195" pos:column="51"/></literal></expr>;<pos:position pos:line="195" pos:column="52"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="196" pos:column="21">variant<pos:position pos:line="196" pos:column="28"/></name><operator pos:line="196" pos:column="28">-&gt;<pos:position pos:line="196" pos:column="33"/></operator><name pos:line="196" pos:column="30">definite<pos:position pos:line="196" pos:column="38"/></name></name> <operator pos:line="196" pos:column="39">=<pos:position pos:line="196" pos:column="40"/></operator> <literal type="number" pos:line="196" pos:column="41">0<pos:position pos:line="196" pos:column="42"/></literal></expr>;<pos:position pos:line="196" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="197" pos:column="18"/></block></then></if>
            }<pos:position pos:line="198" pos:column="14"/></block></else></if>
        }<pos:position pos:line="199" pos:column="10"/></block></then></if>
    }<pos:position pos:line="200" pos:column="6"/></block></then></if>
    <return pos:line="201" pos:column="5">return;<pos:position pos:line="201" pos:column="12"/></return>
}<pos:position pos:line="202" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1853_httpd-2.2.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">x_child_init<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">apr_pool_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">p<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">server_rec<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">s<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">note<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">sname<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name><name pos:line="4" pos:column="19">s<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">server_hostname<pos:position pos:line="4" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/*
     * Set up any module cells that ought to be initialised.
     */</comment>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">setup_module_cells<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">()<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
    <comment type="block" pos:line="10" pos:column="5">/*
     * The arbitrary text we add to our trace entry indicates for which server
     * we're being called.
     */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">sname<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <ternary><condition><expr><operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">sname<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">!=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">NULL<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr> ?<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30"> <expr><name pos:line="14" pos:column="31">sname<pos:position pos:line="14" pos:column="36"/></name></expr> <pos:position pos:line="14" pos:column="37"/></then><else pos:line="14" pos:column="37">: <expr><literal type="string" pos:line="14" pos:column="39">""<pos:position pos:line="14" pos:column="41"/></literal></expr></else></ternary></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">note<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">apr_pstrcat<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">p<pos:position pos:line="15" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="27">"x_child_init("<pos:position pos:line="15" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">sname<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="51">")"<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="56">NULL<pos:position pos:line="15" pos:column="60"/></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">trace_add<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">s<pos:position pos:line="16" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="18">NULL<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="24">NULL<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="30">note<pos:position pos:line="16" pos:column="34"/></name></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">p<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">s<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="37">x_child_exit<pos:position pos:line="18" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="51">x_child_exit<pos:position pos:line="18" pos:column="63"/></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="65"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2654_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">getpage<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">apr_sdbm_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">db<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">long<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">hash<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">register<pos:position pos:line="3" pos:column="13"/></specifier> <name pos:line="3" pos:column="14">int<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">hbit<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">register<pos:position pos:line="4" pos:column="13"/></specifier> <name pos:line="4" pos:column="14">long<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">dbit<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">register<pos:position pos:line="5" pos:column="13"/></specifier> <name pos:line="5" pos:column="14">long<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">pagb<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">status<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">dbit<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">hbit<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></expr_stmt>
    <while pos:line="10" pos:column="5">while <condition pos:line="10" pos:column="11">(<expr><name pos:line="10" pos:column="12">dbit<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&lt;<pos:position pos:line="10" pos:column="21"/></operator> <name><name pos:line="10" pos:column="19">db<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">maxbno<pos:position pos:line="10" pos:column="29"/></name></name> <operator pos:line="10" pos:column="30">&amp;&amp;<pos:position pos:line="10" pos:column="40"/></operator> <call><name pos:line="10" pos:column="33">getdbit<pos:position pos:line="10" pos:column="40"/></name><argument_list pos:line="10" pos:column="40">(<argument><expr><name pos:line="10" pos:column="41">db<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="45">dbit<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="51"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="5">dbit<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <literal type="number" pos:line="11" pos:column="12">2<pos:position pos:line="11" pos:column="13"/></literal> <operator pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">dbit<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">+<pos:position pos:line="11" pos:column="22"/></operator> <operator pos:line="11" pos:column="23">(<pos:position pos:line="11" pos:column="24"/></operator><ternary><condition><expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">hash<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">&amp;<pos:position pos:line="11" pos:column="35"/></operator> <operator pos:line="11" pos:column="32">(<pos:position pos:line="11" pos:column="33"/></operator><literal type="number" pos:line="11" pos:column="33">1<pos:position pos:line="11" pos:column="34"/></literal> <operator pos:line="11" pos:column="35">&lt;&lt;<pos:position pos:line="11" pos:column="43"/></operator> <name pos:line="11" pos:column="38">hbit<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">++<pos:position pos:line="11" pos:column="44"/></operator><operator pos:line="11" pos:column="44">)<pos:position pos:line="11" pos:column="45"/></operator><operator pos:line="11" pos:column="45">)<pos:position pos:line="11" pos:column="46"/></operator></expr> ?<pos:position pos:line="11" pos:column="48"/></condition><then pos:line="11" pos:column="48"> <expr><literal type="number" pos:line="11" pos:column="49">2<pos:position pos:line="11" pos:column="50"/></literal></expr> <pos:position pos:line="11" pos:column="51"/></then><else pos:line="11" pos:column="51">: <expr><literal type="number" pos:line="11" pos:column="53">1<pos:position pos:line="11" pos:column="54"/></literal></expr></else></ternary><operator pos:line="11" pos:column="54">)<pos:position pos:line="11" pos:column="55"/></operator></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt></block></while>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debug<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><operator pos:line="13" pos:column="11">(<pos:position pos:line="13" pos:column="12"/></operator><literal type="string" pos:line="13" pos:column="12">"dbit: %d..."<pos:position pos:line="13" pos:column="25"/></literal><operator pos:line="13" pos:column="25">,<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">dbit<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">)<pos:position pos:line="13" pos:column="32"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="15" pos:column="5">db<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">curbit<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">dbit<pos:position pos:line="15" pos:column="22"/></name></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">db<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">hmask<pos:position pos:line="16" pos:column="14"/></name></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name><name pos:line="16" pos:column="17">masks<pos:position pos:line="16" pos:column="22"/></name><index pos:line="16" pos:column="22">[<expr><name pos:line="16" pos:column="23">hbit<pos:position pos:line="16" pos:column="27"/></name></expr>]<pos:position pos:line="16" pos:column="28"/></index></name></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">pagb<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <name pos:line="18" pos:column="12">hash<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">&amp;<pos:position pos:line="18" pos:column="22"/></operator> <name><name pos:line="18" pos:column="19">db<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">hmask<pos:position pos:line="18" pos:column="28"/></name></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
    <comment type="block" pos:line="19" pos:column="5">/*
     * see if the block we need is already in memory.
     * note: this lookaside cache has about 10% hit rate.
     */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">pagb<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">!=<pos:position pos:line="23" pos:column="16"/></operator> <name><name pos:line="23" pos:column="17">db<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">pagbno<pos:position pos:line="23" pos:column="27"/></name></name></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28"> <block pos:line="23" pos:column="29">{ 
        <comment type="block" pos:line="24" pos:column="9">/*
         * note: here, we assume a "hole" is read as 0s.
         * if not, must zero pagbuf first.
         * ### joe: this assumption was surely never correct? but
         * ### we make it so in read_from anyway.
         */</comment>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">(<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">status<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <call><name pos:line="30" pos:column="23">read_from<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name><name pos:line="30" pos:column="33">db<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">pagf<pos:position pos:line="30" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="43">db<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">-&gt;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="47">pagbuf<pos:position pos:line="30" pos:column="53"/></name></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="55">OFF_PAG<pos:position pos:line="30" pos:column="62"/></name><argument_list pos:line="30" pos:column="62">(<argument><expr><name pos:line="30" pos:column="63">pagb<pos:position pos:line="30" pos:column="67"/></name></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="70">PBLKSIZ<pos:position pos:line="30" pos:column="77"/></name></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></call><operator pos:line="30" pos:column="78">)<pos:position pos:line="30" pos:column="79"/></operator> 
                    <operator pos:line="31" pos:column="21">!=<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="24">APR_SUCCESS<pos:position pos:line="31" pos:column="35"/></name></expr>)<pos:position pos:line="31" pos:column="36"/></condition><then pos:line="31" pos:column="36">
            <block type="pseudo"><return pos:line="32" pos:column="13">return <expr><name pos:line="32" pos:column="20">status<pos:position pos:line="32" pos:column="26"/></name></expr>;<pos:position pos:line="32" pos:column="27"/></return></block></then></if>

        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><call><name pos:line="34" pos:column="14">chkpage<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name><name pos:line="34" pos:column="22">db<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">pagbuf<pos:position pos:line="34" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="34"/></condition><then pos:line="34" pos:column="34">
            <block type="pseudo"><return pos:line="35" pos:column="13">return <expr><name pos:line="35" pos:column="20">APR_ENOSPC<pos:position pos:line="35" pos:column="30"/></name></expr>;<pos:position pos:line="35" pos:column="31"/></return></block></then></if> <comment type="block" pos:line="35" pos:column="32">/* ### better error? */</comment>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">db<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">-&gt;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="13">pagbno<pos:position pos:line="36" pos:column="19"/></name></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">pagb<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="38" pos:column="9">debug<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><operator pos:line="38" pos:column="15">(<pos:position pos:line="38" pos:column="16"/></operator><literal type="string" pos:line="38" pos:column="16">"pag read: %d\n"<pos:position pos:line="38" pos:column="32"/></literal><operator pos:line="38" pos:column="32">,<pos:position pos:line="38" pos:column="33"/></operator> <name pos:line="38" pos:column="34">pagb<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">)<pos:position pos:line="38" pos:column="39"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">APR_SUCCESS<pos:position pos:line="40" pos:column="23"/></name></expr>;<pos:position pos:line="40" pos:column="24"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

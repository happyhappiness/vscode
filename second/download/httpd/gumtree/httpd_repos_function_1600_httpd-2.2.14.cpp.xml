<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1600_httpd-2.2.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">scgi_handler<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">request_rec<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">r<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">proxy_worker<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">worker<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="2" pos:column="25">proxy_server_conf<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">conf<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">url<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="3" pos:column="25">const<pos:position pos:line="3" pos:column="30"/></specifier> <name pos:line="3" pos:column="31">char<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">proxyname<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="48">apr_port_t<pos:position pos:line="3" pos:column="58"/></name></type> <name pos:line="3" pos:column="59">proxyport<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="69"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">status<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">proxy_conn_rec<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">backend<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><name pos:line="6" pos:column="31">NULL<pos:position pos:line="6" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_pool_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">p<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name><name pos:line="7" pos:column="21">r<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">-&gt;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="24">pool<pos:position pos:line="7" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_uri_t<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">uri<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><call><name pos:line="8" pos:column="22">apr_palloc<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name><name pos:line="8" pos:column="33">r<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">pool<pos:position pos:line="8" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="42">sizeof<argument_list pos:line="8" pos:column="48">(<argument><expr><operator pos:line="8" pos:column="49">*<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="50">uri<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">dummy<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">strncasecmp<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">url<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="26">SCHEME<pos:position pos:line="11" pos:column="32"/></name> <literal type="string" pos:line="11" pos:column="33">"://"<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="40">sizeof<argument_list pos:line="11" pos:column="46">(<argument><expr><name pos:line="11" pos:column="47">SCHEME<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></sizeof> <operator pos:line="11" pos:column="55">+<pos:position pos:line="11" pos:column="56"/></operator> <literal type="number" pos:line="11" pos:column="57">2<pos:position pos:line="11" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="60"/></condition><then pos:line="11" pos:column="60"> <block pos:line="11" pos:column="61">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ap_log_rerror<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">APLOG_MARK<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">APLOG_DEBUG<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="48">0<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="51">r<pos:position pos:line="12" pos:column="52"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="13" pos:column="23">"proxy: "<pos:position pos:line="13" pos:column="32"/></literal> <name pos:line="13" pos:column="33">PROXY_FUNCTION<pos:position pos:line="13" pos:column="47"/></name> <literal type="string" pos:line="13" pos:column="48">": declining URL %s"<pos:position pos:line="13" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="70">url<pos:position pos:line="13" pos:column="73"/></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">DECLINED<pos:position pos:line="14" pos:column="24"/></name></expr>;<pos:position pos:line="14" pos:column="25"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="16" pos:column="5">url<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">+=<pos:position pos:line="16" pos:column="11"/></operator> <sizeof pos:line="16" pos:column="12">sizeof<argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">SCHEME<pos:position pos:line="16" pos:column="25"/></name></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></sizeof></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt> <comment type="block" pos:line="16" pos:column="28">/* keep the slashes */</comment>
    
    <comment type="block" pos:line="18" pos:column="5">/* Create space for state information */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">status<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">ap_proxy_acquire_connection<pos:position pos:line="19" pos:column="41"/></name><argument_list pos:line="19" pos:column="41">(<argument><expr><name pos:line="19" pos:column="42">PROXY_FUNCTION<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="58">&amp;<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="59">backend<pos:position pos:line="19" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="68">worker<pos:position pos:line="19" pos:column="74"/></name></expr></argument>,
                                         <argument><expr><name><name pos:line="20" pos:column="42">r<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">server<pos:position pos:line="20" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">status<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">!=<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">OK<pos:position pos:line="21" pos:column="21"/></name></expr>)<pos:position pos:line="21" pos:column="22"/></condition><then pos:line="21" pos:column="22"> <block pos:line="21" pos:column="23">{
        <goto pos:line="22" pos:column="9">goto <name pos:line="22" pos:column="14">cleanup<pos:position pos:line="22" pos:column="21"/></name>;<pos:position pos:line="22" pos:column="22"/></goto>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">backend<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">is_ssl<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <literal type="number" pos:line="24" pos:column="23">0<pos:position pos:line="24" pos:column="24"/></literal></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="26" pos:column="5">/* Step One: Determine Who To Connect To */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">status<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">ap_proxy_determine_connection<pos:position pos:line="27" pos:column="43"/></name><argument_list pos:line="27" pos:column="43">(<argument><expr><name pos:line="27" pos:column="44">p<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">r<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">conf<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">worker<pos:position pos:line="27" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="64">backend<pos:position pos:line="27" pos:column="71"/></name></expr></argument>,
                                           <argument><expr><name pos:line="28" pos:column="44">uri<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="49">&amp;<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="50">url<pos:position pos:line="28" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="55">proxyname<pos:position pos:line="28" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="66">proxyport<pos:position pos:line="28" pos:column="75"/></name></expr></argument>,
                                           <argument><expr><operator pos:line="29" pos:column="44">&amp;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="45">dummy<pos:position pos:line="29" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="52">1<pos:position pos:line="29" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">status<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">!=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">OK<pos:position pos:line="30" pos:column="21"/></name></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22"> <block pos:line="30" pos:column="23">{
        <goto pos:line="31" pos:column="9">goto <name pos:line="31" pos:column="14">cleanup<pos:position pos:line="31" pos:column="21"/></name>;<pos:position pos:line="31" pos:column="22"/></goto>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/* Step Two: Make the Connection */</comment>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><call><name pos:line="35" pos:column="9">ap_proxy_connect_backend<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">PROXY_FUNCTION<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">backend<pos:position pos:line="35" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="59">worker<pos:position pos:line="35" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="67">r<pos:position pos:line="35" pos:column="68"/></name><operator pos:line="35" pos:column="68">-&gt;<pos:position pos:line="35" pos:column="73"/></operator><name pos:line="35" pos:column="70">server<pos:position pos:line="35" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="78"/></condition><then pos:line="35" pos:column="78"> <block pos:line="35" pos:column="79">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_error<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">APLOG_MARK<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">APLOG_ERR<pos:position pos:line="36" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="45">0<pos:position pos:line="36" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="48">r<pos:position pos:line="36" pos:column="49"/></name><operator pos:line="36" pos:column="49">-&gt;<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="51">server<pos:position pos:line="36" pos:column="57"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="37" pos:column="22">"proxy: "<pos:position pos:line="37" pos:column="31"/></literal> <name pos:line="37" pos:column="32">PROXY_FUNCTION<pos:position pos:line="37" pos:column="46"/></name> <literal type="string" pos:line="37" pos:column="47">": failed to make connection "<pos:position pos:line="37" pos:column="77"/></literal>
                     <literal type="string" pos:line="38" pos:column="22">"to backend: %s:%u"<pos:position pos:line="38" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="43">backend<pos:position pos:line="38" pos:column="50"/></name><operator pos:line="38" pos:column="50">-&gt;<pos:position pos:line="38" pos:column="55"/></operator><name pos:line="38" pos:column="52">hostname<pos:position pos:line="38" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="62">backend<pos:position pos:line="38" pos:column="69"/></name><operator pos:line="38" pos:column="69">-&gt;<pos:position pos:line="38" pos:column="74"/></operator><name pos:line="38" pos:column="71">port<pos:position pos:line="38" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><name pos:line="39" pos:column="9">status<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <name pos:line="39" pos:column="18">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="39" pos:column="42"/></name></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
        <goto pos:line="40" pos:column="9">goto <name pos:line="40" pos:column="14">cleanup<pos:position pos:line="40" pos:column="21"/></name>;<pos:position pos:line="40" pos:column="22"/></goto>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="43" pos:column="5">/* Step Three: Process the Request */</comment>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(   <expr><operator pos:line="44" pos:column="12">(<pos:position pos:line="44" pos:column="13"/></operator><operator pos:line="44" pos:column="13">(<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">status<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <call><name pos:line="44" pos:column="23">ap_setup_client_block<pos:position pos:line="44" pos:column="44"/></name><argument_list pos:line="44" pos:column="44">(<argument><expr><name pos:line="44" pos:column="45">r<pos:position pos:line="44" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="48">REQUEST_CHUNKED_ERROR<pos:position pos:line="44" pos:column="69"/></name></expr></argument>)<pos:position pos:line="44" pos:column="70"/></argument_list></call><operator pos:line="44" pos:column="70">)<pos:position pos:line="44" pos:column="71"/></operator> <operator pos:line="44" pos:column="72">!=<pos:position pos:line="44" pos:column="74"/></operator> <name pos:line="44" pos:column="75">OK<pos:position pos:line="44" pos:column="77"/></name><operator pos:line="44" pos:column="77">)<pos:position pos:line="44" pos:column="78"/></operator>
        <operator pos:line="45" pos:column="9">||<pos:position pos:line="45" pos:column="11"/></operator> <operator pos:line="45" pos:column="12">(<pos:position pos:line="45" pos:column="13"/></operator><operator pos:line="45" pos:column="13">(<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">status<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">=<pos:position pos:line="45" pos:column="22"/></operator> <call><name pos:line="45" pos:column="23">send_headers<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">r<pos:position pos:line="45" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="39">backend<pos:position pos:line="45" pos:column="46"/></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call><operator pos:line="45" pos:column="47">)<pos:position pos:line="45" pos:column="48"/></operator> <operator pos:line="45" pos:column="49">!=<pos:position pos:line="45" pos:column="51"/></operator> <name pos:line="45" pos:column="52">OK<pos:position pos:line="45" pos:column="54"/></name><operator pos:line="45" pos:column="54">)<pos:position pos:line="45" pos:column="55"/></operator>
        <operator pos:line="46" pos:column="9">||<pos:position pos:line="46" pos:column="11"/></operator> <operator pos:line="46" pos:column="12">(<pos:position pos:line="46" pos:column="13"/></operator><operator pos:line="46" pos:column="13">(<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">status<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <call><name pos:line="46" pos:column="23">send_request_body<pos:position pos:line="46" pos:column="40"/></name><argument_list pos:line="46" pos:column="40">(<argument><expr><name pos:line="46" pos:column="41">r<pos:position pos:line="46" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="44">backend<pos:position pos:line="46" pos:column="51"/></name></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call><operator pos:line="46" pos:column="52">)<pos:position pos:line="46" pos:column="53"/></operator> <operator pos:line="46" pos:column="54">!=<pos:position pos:line="46" pos:column="56"/></operator> <name pos:line="46" pos:column="57">OK<pos:position pos:line="46" pos:column="59"/></name><operator pos:line="46" pos:column="59">)<pos:position pos:line="46" pos:column="60"/></operator>
        <operator pos:line="47" pos:column="9">||<pos:position pos:line="47" pos:column="11"/></operator> <operator pos:line="47" pos:column="12">(<pos:position pos:line="47" pos:column="13"/></operator><operator pos:line="47" pos:column="13">(<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">status<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <call><name pos:line="47" pos:column="23">pass_response<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">r<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="40">backend<pos:position pos:line="47" pos:column="47"/></name></expr></argument>)<pos:position pos:line="47" pos:column="48"/></argument_list></call><operator pos:line="47" pos:column="48">)<pos:position pos:line="47" pos:column="49"/></operator> <operator pos:line="47" pos:column="50">!=<pos:position pos:line="47" pos:column="52"/></operator> <name pos:line="47" pos:column="53">OK<pos:position pos:line="47" pos:column="55"/></name><operator pos:line="47" pos:column="55">)<pos:position pos:line="47" pos:column="56"/></operator></expr>)<pos:position pos:line="47" pos:column="57"/></condition><then pos:line="47" pos:column="57"> <block pos:line="47" pos:column="58">{
        <goto pos:line="48" pos:column="9">goto <name pos:line="48" pos:column="14">cleanup<pos:position pos:line="48" pos:column="21"/></name>;<pos:position pos:line="48" pos:column="22"/></goto>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

<label><name pos:line="51" pos:column="1">cleanup<pos:position pos:line="51" pos:column="8"/></name>:<pos:position pos:line="51" pos:column="9"/></label>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">backend<pos:position pos:line="52" pos:column="16"/></name></expr>)<pos:position pos:line="52" pos:column="17"/></condition><then pos:line="52" pos:column="17"> <block pos:line="52" pos:column="18">{
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">backend<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">-&gt;<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="18">close<pos:position pos:line="53" pos:column="23"/></name></name> <operator pos:line="53" pos:column="24">=<pos:position pos:line="53" pos:column="25"/></operator> <literal type="number" pos:line="53" pos:column="26">1<pos:position pos:line="53" pos:column="27"/></literal></expr>;<pos:position pos:line="53" pos:column="28"/></expr_stmt> <comment type="block" pos:line="53" pos:column="29">/* always close the socket */</comment>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">ap_proxy_release_connection<pos:position pos:line="54" pos:column="36"/></name><argument_list pos:line="54" pos:column="36">(<argument><expr><name pos:line="54" pos:column="37">PROXY_FUNCTION<pos:position pos:line="54" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="53">backend<pos:position pos:line="54" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="62">r<pos:position pos:line="54" pos:column="63"/></name><operator pos:line="54" pos:column="63">-&gt;<pos:position pos:line="54" pos:column="68"/></operator><name pos:line="54" pos:column="65">server<pos:position pos:line="54" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <return pos:line="56" pos:column="5">return <expr><name pos:line="56" pos:column="12">status<pos:position pos:line="56" pos:column="18"/></name></expr>;<pos:position pos:line="56" pos:column="19"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7174.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">session_crypto_init<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">apr_pool_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">p<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">apr_pool_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">plog<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2" pos:column="9">apr_pool_t<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">ptemp<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">server_rec<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">s<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">apr_crypto_driver_t<pos:position pos:line="4" pos:column="30"/></name> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type><name pos:line="4" pos:column="32">driver<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><name pos:line="4" pos:column="41">NULL<pos:position pos:line="4" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_crypto_t<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">f<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">session_crypto_conf<pos:position pos:line="7" pos:column="24"/></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">conf<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><call><name pos:line="7" pos:column="33">ap_get_module_config<pos:position pos:line="7" pos:column="53"/></name><argument_list pos:line="7" pos:column="53">(<argument><expr><name><name pos:line="7" pos:column="54">s<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">-&gt;<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="57">module_config<pos:position pos:line="7" pos:column="70"/></name></name></expr></argument>,
            <argument><expr><operator pos:line="8" pos:column="13">&amp;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="14">session_crypto_module<pos:position pos:line="8" pos:column="35"/></name></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* session_crypto_init() will be called twice. Don't bother
     * going through all of the initialization on the first call
     * because it will just be thrown away.*/</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">ap_state_query<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">AP_SQ_MAIN_STATE<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call> <operator pos:line="13" pos:column="42">==<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">AP_SQ_MS_CREATE_PRE_CONFIG<pos:position pos:line="13" pos:column="71"/></name></expr>)<pos:position pos:line="13" pos:column="72"/></condition><then pos:line="13" pos:column="72"> <block pos:line="13" pos:column="73">{
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">OK<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">conf<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">library<pos:position pos:line="17" pos:column="22"/></name></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23"> <block pos:line="17" pos:column="24">{

        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">const<pos:position pos:line="19" pos:column="14"/></specifier> <name pos:line="19" pos:column="15">apu_err_t<pos:position pos:line="19" pos:column="24"/></name> <modifier pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></modifier></type><name pos:line="19" pos:column="26">err<pos:position pos:line="19" pos:column="29"/></name> <init pos:line="19" pos:column="30">= <expr><name pos:line="19" pos:column="32">NULL<pos:position pos:line="19" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">apr_status_t<pos:position pos:line="20" pos:column="21"/></name></type> <name pos:line="20" pos:column="22">rv<pos:position pos:line="20" pos:column="24"/></name></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>

        <expr_stmt><expr><name pos:line="22" pos:column="9">rv<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">apr_crypto_init<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">p<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">APR_SUCCESS<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">!=<pos:position pos:line="23" pos:column="27"/></operator> <name pos:line="23" pos:column="28">rv<pos:position pos:line="23" pos:column="30"/></name></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31"> <block pos:line="23" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">ap_log_error<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">APLOG_MARK<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="38">APLOG_ERR<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="49">rv<pos:position pos:line="24" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">s<pos:position pos:line="24" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="56">APLOGNO<pos:position pos:line="24" pos:column="63"/></name><argument_list pos:line="24" pos:column="63">(<argument><expr><literal type="number" pos:line="24" pos:column="64">01843<pos:position pos:line="24" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call>
                    <literal type="string" pos:line="25" pos:column="21">"APR crypto could not be initialised"<pos:position pos:line="25" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
            <return pos:line="26" pos:column="13">return <expr><name pos:line="26" pos:column="20">rv<pos:position pos:line="26" pos:column="22"/></name></expr>;<pos:position pos:line="26" pos:column="23"/></return>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="29" pos:column="9">rv<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">apr_crypto_get_driver<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><operator pos:line="29" pos:column="36">&amp;<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="37">driver<pos:position pos:line="29" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="45">conf<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">-&gt;<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="51">library<pos:position pos:line="29" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="60">conf<pos:position pos:line="29" pos:column="64"/></name><operator pos:line="29" pos:column="64">-&gt;<pos:position pos:line="29" pos:column="69"/></operator><name pos:line="29" pos:column="66">params<pos:position pos:line="29" pos:column="72"/></name></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="74">&amp;<pos:position pos:line="29" pos:column="79"/></operator><name pos:line="29" pos:column="75">err<pos:position pos:line="29" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="80">p<pos:position pos:line="29" pos:column="81"/></name></expr></argument>)<pos:position pos:line="29" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="83"/></expr_stmt>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">APR_EREINIT<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">==<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">rv<pos:position pos:line="30" pos:column="30"/></name></expr>)<pos:position pos:line="30" pos:column="31"/></condition><then pos:line="30" pos:column="31"> <block pos:line="30" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">ap_log_error<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">APLOG_MARK<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">APLOG_WARNING<pos:position pos:line="31" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="53">rv<pos:position pos:line="31" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="57">s<pos:position pos:line="31" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="60">APLOGNO<pos:position pos:line="31" pos:column="67"/></name><argument_list pos:line="31" pos:column="67">(<argument><expr><literal type="number" pos:line="31" pos:column="68">01844<pos:position pos:line="31" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="74"/></argument_list></call>
                    <literal type="string" pos:line="32" pos:column="21">"warning: crypto for '%s' was already initialised, "<pos:position pos:line="32" pos:column="73"/></literal>
                    <literal type="string" pos:line="33" pos:column="21">"using existing configuration"<pos:position pos:line="33" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="53">conf<pos:position pos:line="33" pos:column="57"/></name><operator pos:line="33" pos:column="57">-&gt;<pos:position pos:line="33" pos:column="62"/></operator><name pos:line="33" pos:column="59">library<pos:position pos:line="33" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><name pos:line="34" pos:column="13">rv<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <name pos:line="34" pos:column="18">APR_SUCCESS<pos:position pos:line="34" pos:column="29"/></name></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">APR_SUCCESS<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">!=<pos:position pos:line="36" pos:column="27"/></operator> <name pos:line="36" pos:column="28">rv<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">&amp;&amp;<pos:position pos:line="36" pos:column="41"/></operator> <name pos:line="36" pos:column="34">err<pos:position pos:line="36" pos:column="37"/></name></expr>)<pos:position pos:line="36" pos:column="38"/></condition><then pos:line="36" pos:column="38"> <block pos:line="36" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">ap_log_error<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">APLOG_MARK<pos:position pos:line="37" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="38">APLOG_ERR<pos:position pos:line="37" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="49">rv<pos:position pos:line="37" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="53">s<pos:position pos:line="37" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="56">APLOGNO<pos:position pos:line="37" pos:column="63"/></name><argument_list pos:line="37" pos:column="63">(<argument><expr><literal type="number" pos:line="37" pos:column="64">01845<pos:position pos:line="37" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="70"/></argument_list></call>
                    <literal type="string" pos:line="38" pos:column="21">"%s"<pos:position pos:line="38" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="27">err<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">msg<pos:position pos:line="38" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
            <return pos:line="39" pos:column="13">return <expr><name pos:line="39" pos:column="20">rv<pos:position pos:line="39" pos:column="22"/></name></expr>;<pos:position pos:line="39" pos:column="23"/></return>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">APR_ENOTIMPL<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">==<pos:position pos:line="41" pos:column="28"/></operator> <name pos:line="41" pos:column="29">rv<pos:position pos:line="41" pos:column="31"/></name></expr>)<pos:position pos:line="41" pos:column="32"/></condition><then pos:line="41" pos:column="32"> <block pos:line="41" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">ap_log_error<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">APLOG_MARK<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="38">APLOG_ERR<pos:position pos:line="42" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="49">rv<pos:position pos:line="42" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="53">s<pos:position pos:line="42" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="56">APLOGNO<pos:position pos:line="42" pos:column="63"/></name><argument_list pos:line="42" pos:column="63">(<argument><expr><literal type="number" pos:line="42" pos:column="64">01846<pos:position pos:line="42" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="70"/></argument_list></call>
                    <literal type="string" pos:line="43" pos:column="21">"The crypto library '%s' could not be found"<pos:position pos:line="43" pos:column="65"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="44" pos:column="21">conf<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">-&gt;<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="27">library<pos:position pos:line="44" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
            <return pos:line="45" pos:column="13">return <expr><name pos:line="45" pos:column="20">rv<pos:position pos:line="45" pos:column="22"/></name></expr>;<pos:position pos:line="45" pos:column="23"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">APR_SUCCESS<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">!=<pos:position pos:line="47" pos:column="27"/></operator> <name pos:line="47" pos:column="28">rv<pos:position pos:line="47" pos:column="30"/></name> <operator pos:line="47" pos:column="31">||<pos:position pos:line="47" pos:column="33"/></operator> <operator pos:line="47" pos:column="34">!<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="35">driver<pos:position pos:line="47" pos:column="41"/></name></expr>)<pos:position pos:line="47" pos:column="42"/></condition><then pos:line="47" pos:column="42"> <block pos:line="47" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">ap_log_error<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">APLOG_MARK<pos:position pos:line="48" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="38">APLOG_ERR<pos:position pos:line="48" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="49">rv<pos:position pos:line="48" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="53">s<pos:position pos:line="48" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="56">APLOGNO<pos:position pos:line="48" pos:column="63"/></name><argument_list pos:line="48" pos:column="63">(<argument><expr><literal type="number" pos:line="48" pos:column="64">01847<pos:position pos:line="48" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="70"/></argument_list></call>
                    <literal type="string" pos:line="49" pos:column="21">"The crypto library '%s' could not be loaded"<pos:position pos:line="49" pos:column="66"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="50" pos:column="21">conf<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">-&gt;<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="27">library<pos:position pos:line="50" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="36"/></expr_stmt>
            <return pos:line="51" pos:column="13">return <expr><name pos:line="51" pos:column="20">rv<pos:position pos:line="51" pos:column="22"/></name></expr>;<pos:position pos:line="51" pos:column="23"/></return>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="54" pos:column="9">rv<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <call><name pos:line="54" pos:column="14">apr_crypto_make<pos:position pos:line="54" pos:column="29"/></name><argument_list pos:line="54" pos:column="29">(<argument><expr><operator pos:line="54" pos:column="30">&amp;<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="31">f<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="34">driver<pos:position pos:line="54" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="42">conf<pos:position pos:line="54" pos:column="46"/></name><operator pos:line="54" pos:column="46">-&gt;<pos:position pos:line="54" pos:column="51"/></operator><name pos:line="54" pos:column="48">params<pos:position pos:line="54" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="56">p<pos:position pos:line="54" pos:column="57"/></name></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="59"/></expr_stmt>
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">APR_SUCCESS<pos:position pos:line="55" pos:column="24"/></name> <operator pos:line="55" pos:column="25">!=<pos:position pos:line="55" pos:column="27"/></operator> <name pos:line="55" pos:column="28">rv<pos:position pos:line="55" pos:column="30"/></name></expr>)<pos:position pos:line="55" pos:column="31"/></condition><then pos:line="55" pos:column="31"> <block pos:line="55" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">ap_log_error<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><name pos:line="56" pos:column="26">APLOG_MARK<pos:position pos:line="56" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="38">APLOG_ERR<pos:position pos:line="56" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="49">rv<pos:position pos:line="56" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="53">s<pos:position pos:line="56" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="56">APLOGNO<pos:position pos:line="56" pos:column="63"/></name><argument_list pos:line="56" pos:column="63">(<argument><expr><literal type="number" pos:line="56" pos:column="64">01848<pos:position pos:line="56" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="70"/></argument_list></call>
                    <literal type="string" pos:line="57" pos:column="21">"The crypto library '%s' could not be initialised"<pos:position pos:line="57" pos:column="71"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="58" pos:column="21">conf<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">-&gt;<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="27">library<pos:position pos:line="58" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt>
            <return pos:line="59" pos:column="13">return <expr><name pos:line="59" pos:column="20">rv<pos:position pos:line="59" pos:column="22"/></name></expr>;<pos:position pos:line="59" pos:column="23"/></return>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="62" pos:column="9">ap_log_error<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">(<argument><expr><name pos:line="62" pos:column="22">APLOG_MARK<pos:position pos:line="62" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="34">APLOG_INFO<pos:position pos:line="62" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="46">rv<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="50">s<pos:position pos:line="62" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="53">APLOGNO<pos:position pos:line="62" pos:column="60"/></name><argument_list pos:line="62" pos:column="60">(<argument><expr><literal type="number" pos:line="62" pos:column="61">01849<pos:position pos:line="62" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="67"/></argument_list></call>
                <literal type="string" pos:line="63" pos:column="17">"The crypto library '%s' was loaded successfully"<pos:position pos:line="63" pos:column="66"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="64" pos:column="17">conf<pos:position pos:line="64" pos:column="21"/></name><operator pos:line="64" pos:column="21">-&gt;<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="23">library<pos:position pos:line="64" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="32"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="66" pos:column="9">apr_pool_userdata_set<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><operator pos:line="66" pos:column="31">(<pos:position pos:line="66" pos:column="32"/></operator><specifier pos:line="66" pos:column="32">const<pos:position pos:line="66" pos:column="37"/></specifier> <name pos:line="66" pos:column="38">void<pos:position pos:line="66" pos:column="42"/></name> <operator pos:line="66" pos:column="43">*<pos:position pos:line="66" pos:column="44"/></operator><operator pos:line="66" pos:column="44">)<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="45">f<pos:position pos:line="66" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="48">CRYPTO_KEY<pos:position pos:line="66" pos:column="58"/></name></expr></argument>,
                <argument><expr><name pos:line="67" pos:column="17">apr_pool_cleanup_null<pos:position pos:line="67" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="40">s<pos:position pos:line="67" pos:column="41"/></name><operator pos:line="67" pos:column="41">-&gt;<pos:position pos:line="67" pos:column="46"/></operator><name pos:line="67" pos:column="43">process<pos:position pos:line="67" pos:column="50"/></name><operator pos:line="67" pos:column="50">-&gt;<pos:position pos:line="67" pos:column="55"/></operator><name pos:line="67" pos:column="52">pconf<pos:position pos:line="67" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="59"/></expr_stmt>

    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <return pos:line="71" pos:column="5">return <expr><name pos:line="71" pos:column="12">OK<pos:position pos:line="71" pos:column="14"/></name></expr>;<pos:position pos:line="71" pos:column="15"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

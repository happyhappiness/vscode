<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1374_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">shmcb_subcache_iterate<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">ap_socache_instance_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">instance<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="2" pos:column="44">server_rec<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">s<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="3" pos:column="44">void<pos:position pos:line="3" pos:column="48"/></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type><name pos:line="3" pos:column="50">userctx<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="4" pos:column="44">SHMCBHeader<pos:position pos:line="4" pos:column="55"/></name> <modifier pos:line="4" pos:column="56">*<pos:position pos:line="4" pos:column="57"/></modifier></type><name pos:line="4" pos:column="57">header<pos:position pos:line="4" pos:column="63"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="5" pos:column="44">SHMCBSubcache<pos:position pos:line="5" pos:column="57"/></name> <modifier pos:line="5" pos:column="58">*<pos:position pos:line="5" pos:column="59"/></modifier></type><name pos:line="5" pos:column="59">subcache<pos:position pos:line="5" pos:column="67"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="6" pos:column="44">ap_socache_iterator_t<pos:position pos:line="6" pos:column="65"/></name> <modifier pos:line="6" pos:column="66">*<pos:position pos:line="6" pos:column="67"/></modifier></type><name pos:line="6" pos:column="67">iterator<pos:position pos:line="6" pos:column="75"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="7" pos:column="44">unsigned<pos:position pos:line="7" pos:column="52"/></name> <name pos:line="7" pos:column="53">char<pos:position pos:line="7" pos:column="57"/></name> <modifier pos:line="7" pos:column="58">*<pos:position pos:line="7" pos:column="59"/></modifier><modifier pos:line="7" pos:column="59">*<pos:position pos:line="7" pos:column="60"/></modifier></type><name pos:line="7" pos:column="60">buf<pos:position pos:line="7" pos:column="63"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="8" pos:column="44">apr_size_t<pos:position pos:line="8" pos:column="54"/></name> <modifier pos:line="8" pos:column="55">*<pos:position pos:line="8" pos:column="56"/></modifier></type><name pos:line="8" pos:column="56">buf_len<pos:position pos:line="8" pos:column="63"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="9" pos:column="44">apr_pool_t<pos:position pos:line="9" pos:column="54"/></name> <modifier pos:line="9" pos:column="55">*<pos:position pos:line="9" pos:column="56"/></modifier></type><name pos:line="9" pos:column="56">pool<pos:position pos:line="9" pos:column="60"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="10" pos:column="44">apr_time_t<pos:position pos:line="10" pos:column="54"/></name></type> <name pos:line="10" pos:column="55">now<pos:position pos:line="10" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="10" pos:column="59"/></parameter_list>
<block pos:line="11" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">unsigned<pos:position pos:line="12" pos:column="13"/></name> <name pos:line="12" pos:column="14">int<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">pos<pos:position pos:line="12" pos:column="21"/></name></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">unsigned<pos:position pos:line="13" pos:column="13"/></name> <name pos:line="13" pos:column="14">int<pos:position pos:line="13" pos:column="17"/></name></type> <name pos:line="13" pos:column="18">loop<pos:position pos:line="13" pos:column="22"/></name> <init pos:line="13" pos:column="23">= <expr><literal type="number" pos:line="13" pos:column="25">0<pos:position pos:line="13" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_status_t<pos:position pos:line="14" pos:column="17"/></name></type> <name pos:line="14" pos:column="18">rv<pos:position pos:line="14" pos:column="20"/></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="16" pos:column="5">pos<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <name><name pos:line="16" pos:column="11">subcache<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">idx_pos<pos:position pos:line="16" pos:column="28"/></name></name></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><name pos:line="17" pos:column="12">loop<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">&lt;<pos:position pos:line="17" pos:column="21"/></operator> <name><name pos:line="17" pos:column="19">subcache<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">-&gt;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="29">idx_used<pos:position pos:line="17" pos:column="37"/></name></name></expr>)<pos:position pos:line="17" pos:column="38"/></condition> <block pos:line="17" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">SHMCBIndex<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">idx<pos:position pos:line="18" pos:column="24"/></name> <init pos:line="18" pos:column="25">= <expr><call><name pos:line="18" pos:column="27">SHMCB_INDEX<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name pos:line="18" pos:column="39">subcache<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">pos<pos:position pos:line="18" pos:column="52"/></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="54"/></decl_stmt>

        <comment type="block" pos:line="20" pos:column="9">/* Only consider 'idx' if the "removed" flag isn't set. */</comment>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name><name pos:line="21" pos:column="14">idx<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">removed<pos:position pos:line="21" pos:column="26"/></name></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{

            <expr_stmt><expr><call><name pos:line="23" pos:column="13">ap_log_error<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">APLOG_MARK<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">APLOG_DEBUG<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="51">0<pos:position pos:line="23" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">s<pos:position pos:line="23" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="57">APLOGNO<pos:position pos:line="23" pos:column="64"/></name><argument_list pos:line="23" pos:column="64">(<argument><expr><literal type="number" pos:line="23" pos:column="65">00854<pos:position pos:line="23" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call>
                         <literal type="string" pos:line="24" pos:column="26">"iterating idx=%d, data=%d"<pos:position pos:line="24" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="55">pos<pos:position pos:line="24" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="60">idx<pos:position pos:line="24" pos:column="63"/></name><operator pos:line="24" pos:column="63">-&gt;<pos:position pos:line="24" pos:column="68"/></operator><name pos:line="24" pos:column="65">data_pos<pos:position pos:line="24" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="75"/></expr_stmt>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name><name pos:line="25" pos:column="17">idx<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">expires<pos:position pos:line="25" pos:column="29"/></name></name> <operator pos:line="25" pos:column="30">&gt;<pos:position pos:line="25" pos:column="34"/></operator> <name pos:line="25" pos:column="32">now<pos:position pos:line="25" pos:column="35"/></name></expr>)<pos:position pos:line="25" pos:column="36"/></condition><then pos:line="25" pos:column="36"> <block pos:line="25" pos:column="37">{
                <decl_stmt><decl><type><name pos:line="26" pos:column="17">unsigned<pos:position pos:line="26" pos:column="25"/></name> <name pos:line="26" pos:column="26">char<pos:position pos:line="26" pos:column="30"/></name> <modifier pos:line="26" pos:column="31">*<pos:position pos:line="26" pos:column="32"/></modifier></type><name pos:line="26" pos:column="32">id<pos:position pos:line="26" pos:column="34"/></name> <init pos:line="26" pos:column="35">= <expr><operator pos:line="26" pos:column="37">*<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">buf<pos:position pos:line="26" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="42"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="27" pos:column="17">unsigned<pos:position pos:line="27" pos:column="25"/></name> <name pos:line="27" pos:column="26">char<pos:position pos:line="27" pos:column="30"/></name> <modifier pos:line="27" pos:column="31">*<pos:position pos:line="27" pos:column="32"/></modifier></type><name pos:line="27" pos:column="32">dest<pos:position pos:line="27" pos:column="36"/></name></decl>;<pos:position pos:line="27" pos:column="37"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="28" pos:column="17">unsigned<pos:position pos:line="28" pos:column="25"/></name> <name pos:line="28" pos:column="26">int<pos:position pos:line="28" pos:column="29"/></name></type> <name pos:line="28" pos:column="30">data_offset<pos:position pos:line="28" pos:column="41"/></name></decl>, <decl><type ref="prev"/><name pos:line="28" pos:column="43">dest_len<pos:position pos:line="28" pos:column="51"/></name></decl>;<pos:position pos:line="28" pos:column="52"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="29" pos:column="17">apr_size_t<pos:position pos:line="29" pos:column="27"/></name></type> <name pos:line="29" pos:column="28">buf_req<pos:position pos:line="29" pos:column="35"/></name></decl>;<pos:position pos:line="29" pos:column="36"/></decl_stmt>

                <comment type="block" pos:line="31" pos:column="17">/* Find the offset of the data segment, after the id */</comment>
                <expr_stmt><expr><name pos:line="32" pos:column="17">data_offset<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <call><name pos:line="32" pos:column="31">SHMCB_CYCLIC_INCREMENT<pos:position pos:line="32" pos:column="53"/></name><argument_list pos:line="32" pos:column="53">(<argument><expr><name><name pos:line="32" pos:column="54">idx<pos:position pos:line="32" pos:column="57"/></name><operator pos:line="32" pos:column="57">-&gt;<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="59">data_pos<pos:position pos:line="32" pos:column="67"/></name></name></expr></argument>,
                                                     <argument><expr><name><name pos:line="33" pos:column="54">idx<pos:position pos:line="33" pos:column="57"/></name><operator pos:line="33" pos:column="57">-&gt;<pos:position pos:line="33" pos:column="62"/></operator><name pos:line="33" pos:column="59">id_len<pos:position pos:line="33" pos:column="65"/></name></name></expr></argument>,
                                                     <argument><expr><name><name pos:line="34" pos:column="54">header<pos:position pos:line="34" pos:column="60"/></name><operator pos:line="34" pos:column="60">-&gt;<pos:position pos:line="34" pos:column="65"/></operator><name pos:line="34" pos:column="62">subcache_data_size<pos:position pos:line="34" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="82"/></expr_stmt>

                <expr_stmt><expr><name pos:line="36" pos:column="17">dest_len<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">=<pos:position pos:line="36" pos:column="27"/></operator> <name><name pos:line="36" pos:column="28">idx<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">-&gt;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="33">data_used<pos:position pos:line="36" pos:column="42"/></name></name> <operator pos:line="36" pos:column="43">-<pos:position pos:line="36" pos:column="44"/></operator> <name><name pos:line="36" pos:column="45">idx<pos:position pos:line="36" pos:column="48"/></name><operator pos:line="36" pos:column="48">-&gt;<pos:position pos:line="36" pos:column="53"/></operator><name pos:line="36" pos:column="50">id_len<pos:position pos:line="36" pos:column="56"/></name></name></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt>

                <expr_stmt><expr><name pos:line="38" pos:column="17">buf_req<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <call><name pos:line="38" pos:column="27">APR_ALIGN_DEFAULT<pos:position pos:line="38" pos:column="44"/></name><argument_list pos:line="38" pos:column="44">(<argument><expr><name><name pos:line="38" pos:column="45">idx<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">-&gt;<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="50">id_len<pos:position pos:line="38" pos:column="56"/></name></name> <operator pos:line="38" pos:column="57">+<pos:position pos:line="38" pos:column="58"/></operator> <literal type="number" pos:line="38" pos:column="59">1<pos:position pos:line="38" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call>
                        <operator pos:line="39" pos:column="25">+<pos:position pos:line="39" pos:column="26"/></operator> <call><name pos:line="39" pos:column="27">APR_ALIGN_DEFAULT<pos:position pos:line="39" pos:column="44"/></name><argument_list pos:line="39" pos:column="44">(<argument><expr><name pos:line="39" pos:column="45">dest_len<pos:position pos:line="39" pos:column="53"/></name> <operator pos:line="39" pos:column="54">+<pos:position pos:line="39" pos:column="55"/></operator> <literal type="number" pos:line="39" pos:column="56">1<pos:position pos:line="39" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="59"/></expr_stmt>

                <if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">buf_req<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">&gt;<pos:position pos:line="41" pos:column="33"/></operator> <operator pos:line="41" pos:column="31">*<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="32">buf_len<pos:position pos:line="41" pos:column="39"/></name></expr>)<pos:position pos:line="41" pos:column="40"/></condition><then pos:line="41" pos:column="40"> <block pos:line="41" pos:column="41">{
                     <comment type="block" pos:line="42" pos:column="22">/* Grow to ~150% of this buffer requirement on resize
                      * always using APR_ALIGN_DEFAULT sized pages
                      */</comment>
                     <expr_stmt><expr><operator pos:line="45" pos:column="22">*<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="23">buf_len<pos:position pos:line="45" pos:column="30"/></name> <operator pos:line="45" pos:column="31">=<pos:position pos:line="45" pos:column="32"/></operator> <name pos:line="45" pos:column="33">buf_req<pos:position pos:line="45" pos:column="40"/></name> <operator pos:line="45" pos:column="41">+<pos:position pos:line="45" pos:column="42"/></operator> <call><name pos:line="45" pos:column="43">APR_ALIGN_DEFAULT<pos:position pos:line="45" pos:column="60"/></name><argument_list pos:line="45" pos:column="60">(<argument><expr><name pos:line="45" pos:column="61">buf_req<pos:position pos:line="45" pos:column="68"/></name> <operator pos:line="45" pos:column="69">/<pos:position pos:line="45" pos:column="70"/></operator> <literal type="number" pos:line="45" pos:column="71">2<pos:position pos:line="45" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="74"/></expr_stmt>
                     <expr_stmt><expr><operator pos:line="46" pos:column="22">*<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="23">buf<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <call><name pos:line="46" pos:column="29">apr_palloc<pos:position pos:line="46" pos:column="39"/></name><argument_list pos:line="46" pos:column="39">(<argument><expr><name pos:line="46" pos:column="40">pool<pos:position pos:line="46" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="46">*<pos:position pos:line="46" pos:column="47"/></operator><name pos:line="46" pos:column="47">buf_len<pos:position pos:line="46" pos:column="54"/></name></expr></argument>)<pos:position pos:line="46" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="56"/></expr_stmt>
                     <expr_stmt><expr><name pos:line="47" pos:column="22">id<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <operator pos:line="47" pos:column="27">*<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="28">buf<pos:position pos:line="47" pos:column="31"/></name></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="48" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="50" pos:column="17">dest<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <operator pos:line="50" pos:column="24">*<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="25">buf<pos:position pos:line="50" pos:column="28"/></name> <operator pos:line="50" pos:column="29">+<pos:position pos:line="50" pos:column="30"/></operator> <call><name pos:line="50" pos:column="31">APR_ALIGN_DEFAULT<pos:position pos:line="50" pos:column="48"/></name><argument_list pos:line="50" pos:column="48">(<argument><expr><name><name pos:line="50" pos:column="49">idx<pos:position pos:line="50" pos:column="52"/></name><operator pos:line="50" pos:column="52">-&gt;<pos:position pos:line="50" pos:column="57"/></operator><name pos:line="50" pos:column="54">id_len<pos:position pos:line="50" pos:column="60"/></name></name> <operator pos:line="50" pos:column="61">+<pos:position pos:line="50" pos:column="62"/></operator> <literal type="number" pos:line="50" pos:column="63">1<pos:position pos:line="50" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="66"/></expr_stmt>

                <comment type="block" pos:line="52" pos:column="17">/* Copy out the data, because it's potentially cyclic */</comment>
                <expr_stmt><expr><call><name pos:line="53" pos:column="17">shmcb_cyclic_cton_memcpy<pos:position pos:line="53" pos:column="41"/></name><argument_list pos:line="53" pos:column="41">(<argument><expr><name><name pos:line="53" pos:column="42">header<pos:position pos:line="53" pos:column="48"/></name><operator pos:line="53" pos:column="48">-&gt;<pos:position pos:line="53" pos:column="53"/></operator><name pos:line="53" pos:column="50">subcache_data_size<pos:position pos:line="53" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="70">id<pos:position pos:line="53" pos:column="72"/></name></expr></argument>,
                                         <argument><expr><call><name pos:line="54" pos:column="42">SHMCB_DATA<pos:position pos:line="54" pos:column="52"/></name><argument_list pos:line="54" pos:column="52">(<argument><expr><name pos:line="54" pos:column="53">header<pos:position pos:line="54" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="61">subcache<pos:position pos:line="54" pos:column="69"/></name></expr></argument>)<pos:position pos:line="54" pos:column="70"/></argument_list></call></expr></argument>,
                                         <argument><expr><name><name pos:line="55" pos:column="42">idx<pos:position pos:line="55" pos:column="45"/></name><operator pos:line="55" pos:column="45">-&gt;<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="47">data_pos<pos:position pos:line="55" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="57">idx<pos:position pos:line="55" pos:column="60"/></name><operator pos:line="55" pos:column="60">-&gt;<pos:position pos:line="55" pos:column="65"/></operator><name pos:line="55" pos:column="62">id_len<pos:position pos:line="55" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="70"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="56" pos:column="17">id<pos:position pos:line="56" pos:column="19"/></name><index pos:line="56" pos:column="19">[<expr><name><name pos:line="56" pos:column="20">idx<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">-&gt;<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="25">id_len<pos:position pos:line="56" pos:column="31"/></name></name></expr>]<pos:position pos:line="56" pos:column="32"/></index></name> <operator pos:line="56" pos:column="33">=<pos:position pos:line="56" pos:column="34"/></operator> <literal type="char" pos:line="56" pos:column="35">'\0'<pos:position pos:line="56" pos:column="39"/></literal></expr>;<pos:position pos:line="56" pos:column="40"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="58" pos:column="17">shmcb_cyclic_cton_memcpy<pos:position pos:line="58" pos:column="41"/></name><argument_list pos:line="58" pos:column="41">(<argument><expr><name><name pos:line="58" pos:column="42">header<pos:position pos:line="58" pos:column="48"/></name><operator pos:line="58" pos:column="48">-&gt;<pos:position pos:line="58" pos:column="53"/></operator><name pos:line="58" pos:column="50">subcache_data_size<pos:position pos:line="58" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="70">dest<pos:position pos:line="58" pos:column="74"/></name></expr></argument>,
                                         <argument><expr><call><name pos:line="59" pos:column="42">SHMCB_DATA<pos:position pos:line="59" pos:column="52"/></name><argument_list pos:line="59" pos:column="52">(<argument><expr><name pos:line="59" pos:column="53">header<pos:position pos:line="59" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="61">subcache<pos:position pos:line="59" pos:column="69"/></name></expr></argument>)<pos:position pos:line="59" pos:column="70"/></argument_list></call></expr></argument>,
                                         <argument><expr><name pos:line="60" pos:column="42">data_offset<pos:position pos:line="60" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="55">dest_len<pos:position pos:line="60" pos:column="63"/></name></expr></argument>)<pos:position pos:line="60" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="65"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="61" pos:column="17">dest<pos:position pos:line="61" pos:column="21"/></name><index pos:line="61" pos:column="21">[<expr><name pos:line="61" pos:column="22">dest_len<pos:position pos:line="61" pos:column="30"/></name></expr>]<pos:position pos:line="61" pos:column="31"/></index></name> <operator pos:line="61" pos:column="32">=<pos:position pos:line="61" pos:column="33"/></operator> <literal type="char" pos:line="61" pos:column="34">'\0'<pos:position pos:line="61" pos:column="38"/></literal></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>

                <expr_stmt><expr><name pos:line="63" pos:column="17">rv<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">=<pos:position pos:line="63" pos:column="21"/></operator> <call><name pos:line="63" pos:column="22">iterator<pos:position pos:line="63" pos:column="30"/></name><argument_list pos:line="63" pos:column="30">(<argument><expr><name pos:line="63" pos:column="31">instance<pos:position pos:line="63" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="41">s<pos:position pos:line="63" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="44">userctx<pos:position pos:line="63" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="53">id<pos:position pos:line="63" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="57">idx<pos:position pos:line="63" pos:column="60"/></name><operator pos:line="63" pos:column="60">-&gt;<pos:position pos:line="63" pos:column="65"/></operator><name pos:line="63" pos:column="62">id_len<pos:position pos:line="63" pos:column="68"/></name></name></expr></argument>,
                              <argument><expr><name pos:line="64" pos:column="31">dest<pos:position pos:line="64" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="37">dest_len<pos:position pos:line="64" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="47">pool<pos:position pos:line="64" pos:column="51"/></name></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="65" pos:column="17">ap_log_error<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><name pos:line="65" pos:column="30">APLOG_MARK<pos:position pos:line="65" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="42">APLOG_DEBUG<pos:position pos:line="65" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="55">rv<pos:position pos:line="65" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="59">s<pos:position pos:line="65" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="62">APLOGNO<pos:position pos:line="65" pos:column="69"/></name><argument_list pos:line="65" pos:column="69">(<argument><expr><literal type="number" pos:line="65" pos:column="70">00855<pos:position pos:line="65" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="76"/></argument_list></call>
                             <literal type="string" pos:line="66" pos:column="30">"shmcb entry iterated"<pos:position pos:line="66" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="54"/></expr_stmt>
                <if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name pos:line="67" pos:column="21">rv<pos:position pos:line="67" pos:column="23"/></name> <operator pos:line="67" pos:column="24">!=<pos:position pos:line="67" pos:column="26"/></operator> <name pos:line="67" pos:column="27">APR_SUCCESS<pos:position pos:line="67" pos:column="38"/></name></expr>)<pos:position pos:line="67" pos:column="39"/></condition><then pos:line="67" pos:column="39">
                    <block type="pseudo"><return pos:line="68" pos:column="21">return <expr><name pos:line="68" pos:column="28">rv<pos:position pos:line="68" pos:column="30"/></name></expr>;<pos:position pos:line="68" pos:column="31"/></return></block></then></if>
            }<pos:position pos:line="69" pos:column="14"/></block></then>
            <else pos:line="70" pos:column="13">else <block pos:line="70" pos:column="18">{
                <comment type="block" pos:line="71" pos:column="17">/* Already stale, quietly remove and treat as not-found */</comment>
                <expr_stmt><expr><name><name pos:line="72" pos:column="17">idx<pos:position pos:line="72" pos:column="20"/></name><operator pos:line="72" pos:column="20">-&gt;<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="22">removed<pos:position pos:line="72" pos:column="29"/></name></name> <operator pos:line="72" pos:column="30">=<pos:position pos:line="72" pos:column="31"/></operator> <literal type="number" pos:line="72" pos:column="32">1<pos:position pos:line="72" pos:column="33"/></literal></expr>;<pos:position pos:line="72" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="73" pos:column="17">header<pos:position pos:line="73" pos:column="23"/></name><operator pos:line="73" pos:column="23">-&gt;<pos:position pos:line="73" pos:column="28"/></operator><name pos:line="73" pos:column="25">stat_expiries<pos:position pos:line="73" pos:column="38"/></name></name><operator pos:line="73" pos:column="38">++<pos:position pos:line="73" pos:column="40"/></operator></expr>;<pos:position pos:line="73" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="74" pos:column="17">ap_log_error<pos:position pos:line="74" pos:column="29"/></name><argument_list pos:line="74" pos:column="29">(<argument><expr><name pos:line="74" pos:column="30">APLOG_MARK<pos:position pos:line="74" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="42">APLOG_DEBUG<pos:position pos:line="74" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="55">0<pos:position pos:line="74" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="58">s<pos:position pos:line="74" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="61">APLOGNO<pos:position pos:line="74" pos:column="68"/></name><argument_list pos:line="74" pos:column="68">(<argument><expr><literal type="number" pos:line="74" pos:column="69">00856<pos:position pos:line="74" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="75"/></argument_list></call>
                             <literal type="string" pos:line="75" pos:column="30">"shmcb_subcache_iterate discarding expired entry"<pos:position pos:line="75" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="81"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></else></if>
        }<pos:position pos:line="77" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="78" pos:column="9">/* Increment */</comment>
        <expr_stmt><expr><name pos:line="79" pos:column="9">loop<pos:position pos:line="79" pos:column="13"/></name><operator pos:line="79" pos:column="13">++<pos:position pos:line="79" pos:column="15"/></operator></expr>;<pos:position pos:line="79" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="80" pos:column="9">pos<pos:position pos:line="80" pos:column="12"/></name> <operator pos:line="80" pos:column="13">=<pos:position pos:line="80" pos:column="14"/></operator> <call><name pos:line="80" pos:column="15">SHMCB_CYCLIC_INCREMENT<pos:position pos:line="80" pos:column="37"/></name><argument_list pos:line="80" pos:column="37">(<argument><expr><name pos:line="80" pos:column="38">pos<pos:position pos:line="80" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="43">1<pos:position pos:line="80" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="46">header<pos:position pos:line="80" pos:column="52"/></name><operator pos:line="80" pos:column="52">-&gt;<pos:position pos:line="80" pos:column="57"/></operator><name pos:line="80" pos:column="54">index_num<pos:position pos:line="80" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></while>

    <return pos:line="83" pos:column="5">return <expr><name pos:line="83" pos:column="12">APR_SUCCESS<pos:position pos:line="83" pos:column="23"/></name></expr>;<pos:position pos:line="83" pos:column="24"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

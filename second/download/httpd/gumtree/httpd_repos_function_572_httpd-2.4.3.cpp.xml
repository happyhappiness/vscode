<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_572_httpd-2.4.3.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">add_envvars<pos:position pos:line="1" pos:column="31"/></name><argument_list pos:line="1" pos:column="31">(<argument><expr><name pos:line="1" pos:column="32">cmd_parms<pos:position pos:line="1" pos:column="41"/></name> <operator pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></operator><name pos:line="1" pos:column="43">cmd<pos:position pos:line="1" pos:column="46"/></name></expr></argument>, <argument><expr><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <operator pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></operator><name pos:line="1" pos:column="60">args<pos:position pos:line="1" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="66">sei_entry<pos:position pos:line="1" pos:column="75"/></name> <operator pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></operator><operator pos:line="1" pos:column="77">new<pos:position pos:line="1" pos:column="80"/></operator></expr></argument>)<pos:position pos:line="1" pos:column="81"/></argument_list>
<argument_list pos:line="2" pos:column="1">{
    <argument><expr><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <operator pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">feature<pos:position pos:line="3" pos:column="24"/></name></expr></argument>;
    <argument><expr><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name> <name pos:line="4" pos:column="9">beenhere<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">=<pos:position pos:line="4" pos:column="19"/></operator> <literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr></argument>;
    <argument><expr><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">var<pos:position pos:line="5" pos:column="14"/></name></expr></argument>;

    for <argument><expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator> ; ; <operator pos:line="7" pos:column="15">)<pos:position pos:line="7" pos:column="16"/></operator> <block pos:line="7" pos:column="17">{
        <expr><name pos:line="8" pos:column="9">feature<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">ap_getword_conf<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name><name pos:line="8" pos:column="35">cmd<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">pool<pos:position pos:line="8" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="46">&amp;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="47">args<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><operator pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">feature<pos:position pos:line="9" pos:column="22"/></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <expr_stmt><expr><block pos:line="9" pos:column="24">{
            <break pos:line="10" pos:column="13">break;<pos:position pos:line="10" pos:column="19"/></break>
        }<pos:position pos:line="11" pos:column="10"/></block>
        <name pos:line="12" pos:column="9">beenhere<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">++<pos:position pos:line="12" pos:column="19"/></operator></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt></then></if>

        <name pos:line="14" pos:column="9">var<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">ap_getword<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name><name pos:line="14" pos:column="26">cmd<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">pool<pos:position pos:line="14" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="37">&amp;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="38">feature<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="47">'='<pos:position pos:line="14" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></block></expr></argument>;
        if <argument><expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">*<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">feature<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">)<pos:position pos:line="15" pos:column="22"/></operator> <block pos:line="15" pos:column="23">{
            <expr><call><name pos:line="16" pos:column="13">apr_table_setn<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><operator pos:line="16" pos:column="28">new<pos:position pos:line="16" pos:column="31"/></operator><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">features<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="43">var<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">feature<pos:position pos:line="16" pos:column="55"/></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;
        }<pos:position pos:line="17" pos:column="10"/></block></expr></argument>
        <elseif pos:line="18" pos:column="9">else <if pos:line="18" pos:column="14">if <condition pos:line="18" pos:column="17">(<expr><operator pos:line="18" pos:column="18">*<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">var<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">==<pos:position pos:line="18" pos:column="25"/></operator> <literal type="char" pos:line="18" pos:column="26">'!'<pos:position pos:line="18" pos:column="29"/></literal></expr>)<pos:position pos:line="18" pos:column="30"/></condition><then pos:line="18" pos:column="30"> <expr_stmt><expr><block pos:line="18" pos:column="31">{
            <expr><call><name pos:line="19" pos:column="13">apr_table_setn<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><operator pos:line="19" pos:column="28">new<pos:position pos:line="19" pos:column="31"/></operator><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">features<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">var<pos:position pos:line="19" pos:column="46"/></name> <operator pos:line="19" pos:column="47">+<pos:position pos:line="19" pos:column="48"/></operator> <literal type="number" pos:line="19" pos:column="49">1<pos:position pos:line="19" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="52">"!"<pos:position pos:line="19" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>;
        }<pos:position pos:line="20" pos:column="10"/></block></expr></expr_stmt></then></if></elseif>
        <else pos:line="21" pos:column="9">else <expr_stmt><expr><block pos:line="21" pos:column="14">{
            <expr><call><name pos:line="22" pos:column="13">apr_table_setn<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><operator pos:line="22" pos:column="28">new<pos:position pos:line="22" pos:column="31"/></operator><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">features<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="43">var<pos:position pos:line="22" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="48">"1"<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;
        }<pos:position pos:line="23" pos:column="10"/></block></expr></expr_stmt></else>
    }<pos:position pos:line="24" pos:column="6"/></argument_list>

    if <argument_list pos:line="26" pos:column="8">(<argument><expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">beenhere<pos:position pos:line="26" pos:column="18"/></name></expr></argument>)<pos:position pos:line="26" pos:column="19"/></argument_list> <argument_list pos:line="26" pos:column="20">{
        return <argument><expr><call><name pos:line="27" pos:column="16">apr_pstrcat<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name><name pos:line="27" pos:column="28">cmd<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">pool<pos:position pos:line="27" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="39">"Missing envariable expression for "<pos:position pos:line="27" pos:column="75"/></literal></expr></argument>,
                           <argument><expr><name><name pos:line="28" pos:column="28">cmd<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">cmd<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">-&gt;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="38">name<pos:position pos:line="28" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="44">NULL<pos:position pos:line="28" pos:column="48"/></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr></argument>;
    }<pos:position pos:line="29" pos:column="6"/></argument_list>

    return <name pos:line="31" pos:column="12">NULL<pos:position pos:line="31" pos:column="16"/></name></decl>;<pos:position pos:line="31" pos:column="17"/></decl_stmt>
}</unit>

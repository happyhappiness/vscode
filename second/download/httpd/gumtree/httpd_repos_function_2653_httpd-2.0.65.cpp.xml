<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2653_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">doParseXmlDecl<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><function_decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">ENCODING<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type>(<modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier><name pos:line="2" pos:column="34">encodingFinder<pos:position pos:line="2" pos:column="48"/></name>)<parameter_list pos:line="2" pos:column="49">(<parameter><decl><type><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <name pos:line="2" pos:column="56">ENCODING<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type></decl></parameter>,
                                                 <parameter><decl><type><specifier pos:line="3" pos:column="50">const<pos:position pos:line="3" pos:column="55"/></specifier> <name pos:line="3" pos:column="56">char<pos:position pos:line="3" pos:column="60"/></name> <modifier pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></modifier></type></decl></parameter>,
                                                 <parameter><decl><type><specifier pos:line="4" pos:column="50">const<pos:position pos:line="4" pos:column="55"/></specifier> <name pos:line="4" pos:column="56">char<pos:position pos:line="4" pos:column="60"/></name> <modifier pos:line="4" pos:column="61">*<pos:position pos:line="4" pos:column="62"/></modifier></type></decl></parameter>)<pos:position pos:line="4" pos:column="63"/></parameter_list></function_decl></parameter>,
               <parameter><decl><type><name pos:line="5" pos:column="16">int<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">isGeneralTextEntity<pos:position pos:line="5" pos:column="39"/></name></decl></parameter>,
               <parameter><decl><type><specifier pos:line="6" pos:column="16">const<pos:position pos:line="6" pos:column="21"/></specifier> <name pos:line="6" pos:column="22">ENCODING<pos:position pos:line="6" pos:column="30"/></name> <modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier></type><name pos:line="6" pos:column="32">enc<pos:position pos:line="6" pos:column="35"/></name></decl></parameter>,
               <parameter><decl><type><specifier pos:line="7" pos:column="16">const<pos:position pos:line="7" pos:column="21"/></specifier> <name pos:line="7" pos:column="22">char<pos:position pos:line="7" pos:column="26"/></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">ptr<pos:position pos:line="7" pos:column="31"/></name></decl></parameter>,
               <parameter><decl><type><specifier pos:line="8" pos:column="16">const<pos:position pos:line="8" pos:column="21"/></specifier> <name pos:line="8" pos:column="22">char<pos:position pos:line="8" pos:column="26"/></name> <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier></type><name pos:line="8" pos:column="28">end<pos:position pos:line="8" pos:column="31"/></name></decl></parameter>,
               <parameter><decl><type><specifier pos:line="9" pos:column="16">const<pos:position pos:line="9" pos:column="21"/></specifier> <name pos:line="9" pos:column="22">char<pos:position pos:line="9" pos:column="26"/></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier><modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">badPtr<pos:position pos:line="9" pos:column="35"/></name></decl></parameter>,
               <parameter><decl><type><specifier pos:line="10" pos:column="16">const<pos:position pos:line="10" pos:column="21"/></specifier> <name pos:line="10" pos:column="22">char<pos:position pos:line="10" pos:column="26"/></name> <modifier pos:line="10" pos:column="27">*<pos:position pos:line="10" pos:column="28"/></modifier><modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">versionPtr<pos:position pos:line="10" pos:column="39"/></name></decl></parameter>,
               <parameter><decl><type><specifier pos:line="11" pos:column="16">const<pos:position pos:line="11" pos:column="21"/></specifier> <name pos:line="11" pos:column="22">char<pos:position pos:line="11" pos:column="26"/></name> <modifier pos:line="11" pos:column="27">*<pos:position pos:line="11" pos:column="28"/></modifier><modifier pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></modifier></type><name pos:line="11" pos:column="29">versionEndPtr<pos:position pos:line="11" pos:column="42"/></name></decl></parameter>,
               <parameter><decl><type><specifier pos:line="12" pos:column="16">const<pos:position pos:line="12" pos:column="21"/></specifier> <name pos:line="12" pos:column="22">char<pos:position pos:line="12" pos:column="26"/></name> <modifier pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></modifier><modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">encodingName<pos:position pos:line="12" pos:column="41"/></name></decl></parameter>,
               <parameter><decl><type><specifier pos:line="13" pos:column="16">const<pos:position pos:line="13" pos:column="21"/></specifier> <name pos:line="13" pos:column="22">ENCODING<pos:position pos:line="13" pos:column="30"/></name> <modifier pos:line="13" pos:column="31">*<pos:position pos:line="13" pos:column="32"/></modifier><modifier pos:line="13" pos:column="32">*<pos:position pos:line="13" pos:column="33"/></modifier></type><name pos:line="13" pos:column="33">encoding<pos:position pos:line="13" pos:column="41"/></name></decl></parameter>,
               <parameter><decl><type><name pos:line="14" pos:column="16">int<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">standalone<pos:position pos:line="14" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="14" pos:column="32"/></parameter_list>
<block pos:line="15" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="16" pos:column="3">const<pos:position pos:line="16" pos:column="8"/></specifier> <name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">val<pos:position pos:line="16" pos:column="18"/></name> <init pos:line="16" pos:column="19">= <expr><name pos:line="16" pos:column="21">NULL<pos:position pos:line="16" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="17" pos:column="3">const<pos:position pos:line="17" pos:column="8"/></specifier> <name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">name<pos:position pos:line="17" pos:column="19"/></name> <init pos:line="17" pos:column="20">= <expr><name pos:line="17" pos:column="22">NULL<pos:position pos:line="17" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="18" pos:column="3">const<pos:position pos:line="18" pos:column="8"/></specifier> <name pos:line="18" pos:column="9">char<pos:position pos:line="18" pos:column="13"/></name> <modifier pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></modifier></type><name pos:line="18" pos:column="15">nameEnd<pos:position pos:line="18" pos:column="22"/></name> <init pos:line="18" pos:column="23">= <expr><name pos:line="18" pos:column="25">NULL<pos:position pos:line="18" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="30"/></decl_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">ptr<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">+=<pos:position pos:line="19" pos:column="9"/></operator> <literal type="number" pos:line="19" pos:column="10">5<pos:position pos:line="19" pos:column="11"/></literal> <operator pos:line="19" pos:column="12">*<pos:position pos:line="19" pos:column="13"/></operator> <name><name pos:line="19" pos:column="14">enc<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">minBytesPerChar<pos:position pos:line="19" pos:column="34"/></name></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">end<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">-=<pos:position pos:line="20" pos:column="9"/></operator> <literal type="number" pos:line="20" pos:column="10">2<pos:position pos:line="20" pos:column="11"/></literal> <operator pos:line="20" pos:column="12">*<pos:position pos:line="20" pos:column="13"/></operator> <name><name pos:line="20" pos:column="14">enc<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">minBytesPerChar<pos:position pos:line="20" pos:column="34"/></name></name></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><call><name pos:line="21" pos:column="8">parsePseudoAttribute<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">enc<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">ptr<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">end<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="44">&amp;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="45">name<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="51">&amp;<pos:position pos:line="21" pos:column="56"/></operator><name pos:line="21" pos:column="52">nameEnd<pos:position pos:line="21" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="61">&amp;<pos:position pos:line="21" pos:column="66"/></operator><name pos:line="21" pos:column="62">val<pos:position pos:line="21" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="67">&amp;<pos:position pos:line="21" pos:column="72"/></operator><name pos:line="21" pos:column="68">ptr<pos:position pos:line="21" pos:column="71"/></name></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call>
      <operator pos:line="22" pos:column="7">||<pos:position pos:line="22" pos:column="9"/></operator> <operator pos:line="22" pos:column="10">!<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">name<pos:position pos:line="22" pos:column="15"/></name></expr>)<pos:position pos:line="22" pos:column="16"/></condition><then pos:line="22" pos:column="16"> <block pos:line="22" pos:column="17">{
    <expr_stmt><expr><operator pos:line="23" pos:column="5">*<pos:position pos:line="23" pos:column="6"/></operator><name pos:line="23" pos:column="6">badPtr<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">ptr<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><literal type="number" pos:line="24" pos:column="12">0<pos:position pos:line="24" pos:column="13"/></literal></expr>;<pos:position pos:line="24" pos:column="14"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><operator pos:line="26" pos:column="7">!<pos:position pos:line="26" pos:column="8"/></operator><call><name pos:line="26" pos:column="8">XmlNameMatchesAscii<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">enc<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="33">name<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">nameEnd<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="48">KW_version<pos:position pos:line="26" pos:column="58"/></name></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="60"/></condition><then pos:line="26" pos:column="60"> <block pos:line="26" pos:column="61">{
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">isGeneralTextEntity<pos:position pos:line="27" pos:column="29"/></name></expr>)<pos:position pos:line="27" pos:column="30"/></condition><then pos:line="27" pos:column="30"> <block pos:line="27" pos:column="31">{
      <expr_stmt><expr><operator pos:line="28" pos:column="7">*<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">badPtr<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">name<pos:position pos:line="28" pos:column="21"/></name></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
      <return pos:line="29" pos:column="7">return <expr><literal type="number" pos:line="29" pos:column="14">0<pos:position pos:line="29" pos:column="15"/></literal></expr>;<pos:position pos:line="29" pos:column="16"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then>
  <else pos:line="32" pos:column="3">else <block pos:line="32" pos:column="8">{
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">versionPtr<pos:position pos:line="33" pos:column="19"/></name></expr>)<pos:position pos:line="33" pos:column="20"/></condition><then pos:line="33" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="34" pos:column="7">*<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">versionPtr<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">val<pos:position pos:line="34" pos:column="24"/></name></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt></block></then></if>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">versionEndPtr<pos:position pos:line="35" pos:column="22"/></name></expr>)<pos:position pos:line="35" pos:column="23"/></condition><then pos:line="35" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="36" pos:column="7">*<pos:position pos:line="36" pos:column="8"/></operator><name pos:line="36" pos:column="8">versionEndPtr<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="24">ptr<pos:position pos:line="36" pos:column="27"/></name></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt></block></then></if>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">!<pos:position pos:line="37" pos:column="10"/></operator><call><name pos:line="37" pos:column="10">parsePseudoAttribute<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">enc<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="36">ptr<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="41">end<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="46">&amp;<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="47">name<pos:position pos:line="37" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="53">&amp;<pos:position pos:line="37" pos:column="58"/></operator><name pos:line="37" pos:column="54">nameEnd<pos:position pos:line="37" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="63">&amp;<pos:position pos:line="37" pos:column="68"/></operator><name pos:line="37" pos:column="64">val<pos:position pos:line="37" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="69">&amp;<pos:position pos:line="37" pos:column="74"/></operator><name pos:line="37" pos:column="70">ptr<pos:position pos:line="37" pos:column="73"/></name></expr></argument>)<pos:position pos:line="37" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="75"/></condition><then pos:line="37" pos:column="75"> <block pos:line="37" pos:column="76">{
      <expr_stmt><expr><operator pos:line="38" pos:column="7">*<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">badPtr<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <name pos:line="38" pos:column="17">ptr<pos:position pos:line="38" pos:column="20"/></name></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>
      <return pos:line="39" pos:column="7">return <expr><literal type="number" pos:line="39" pos:column="14">0<pos:position pos:line="39" pos:column="15"/></literal></expr>;<pos:position pos:line="39" pos:column="16"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">!<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">name<pos:position pos:line="41" pos:column="14"/></name></expr>)<pos:position pos:line="41" pos:column="15"/></condition><then pos:line="41" pos:column="15"> <block pos:line="41" pos:column="16">{
      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><name pos:line="42" pos:column="11">isGeneralTextEntity<pos:position pos:line="42" pos:column="30"/></name></expr>)<pos:position pos:line="42" pos:column="31"/></condition><then pos:line="42" pos:column="31"> <block pos:line="42" pos:column="32">{
        <comment type="block" pos:line="43" pos:column="9">/* a TextDecl must have an EncodingDecl */</comment>
        <expr_stmt><expr><operator pos:line="44" pos:column="9">*<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">badPtr<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">ptr<pos:position pos:line="44" pos:column="22"/></name></expr>;<pos:position pos:line="44" pos:column="23"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><literal type="number" pos:line="45" pos:column="16">0<pos:position pos:line="45" pos:column="17"/></literal></expr>;<pos:position pos:line="45" pos:column="18"/></return>
      }<pos:position pos:line="46" pos:column="8"/></block></then></if>
      <return pos:line="47" pos:column="7">return <expr><literal type="number" pos:line="47" pos:column="14">1<pos:position pos:line="47" pos:column="15"/></literal></expr>;<pos:position pos:line="47" pos:column="16"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>
  }<pos:position pos:line="49" pos:column="4"/></block></else></if>
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><call><name pos:line="50" pos:column="7">XmlNameMatchesAscii<pos:position pos:line="50" pos:column="26"/></name><argument_list pos:line="50" pos:column="26">(<argument><expr><name pos:line="50" pos:column="27">enc<pos:position pos:line="50" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="32">name<pos:position pos:line="50" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="38">nameEnd<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">KW_encoding<pos:position pos:line="50" pos:column="58"/></name></expr></argument>)<pos:position pos:line="50" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="60"/></condition><then pos:line="50" pos:column="60"> <block pos:line="50" pos:column="61">{
    <decl_stmt><decl><type><name pos:line="51" pos:column="5">int<pos:position pos:line="51" pos:column="8"/></name></type> <name pos:line="51" pos:column="9">c<pos:position pos:line="51" pos:column="10"/></name> <init pos:line="51" pos:column="11">= <expr><call><name pos:line="51" pos:column="13">toAscii<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">(<argument><expr><name pos:line="51" pos:column="21">enc<pos:position pos:line="51" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="26">val<pos:position pos:line="51" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="31">end<pos:position pos:line="51" pos:column="34"/></name></expr></argument>)<pos:position pos:line="51" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="36"/></decl_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><operator pos:line="52" pos:column="9">!<pos:position pos:line="52" pos:column="10"/></operator><operator pos:line="52" pos:column="10">(<pos:position pos:line="52" pos:column="11"/></operator><name pos:line="52" pos:column="11">ASCII_a<pos:position pos:line="52" pos:column="18"/></name> <operator pos:line="52" pos:column="19">&lt;=<pos:position pos:line="52" pos:column="24"/></operator> <name pos:line="52" pos:column="22">c<pos:position pos:line="52" pos:column="23"/></name> <operator pos:line="52" pos:column="24">&amp;&amp;<pos:position pos:line="52" pos:column="34"/></operator> <name pos:line="52" pos:column="27">c<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">&lt;=<pos:position pos:line="52" pos:column="34"/></operator> <name pos:line="52" pos:column="32">ASCII_z<pos:position pos:line="52" pos:column="39"/></name><operator pos:line="52" pos:column="39">)<pos:position pos:line="52" pos:column="40"/></operator> <operator pos:line="52" pos:column="41">&amp;&amp;<pos:position pos:line="52" pos:column="51"/></operator> <operator pos:line="52" pos:column="44">!<pos:position pos:line="52" pos:column="45"/></operator><operator pos:line="52" pos:column="45">(<pos:position pos:line="52" pos:column="46"/></operator><name pos:line="52" pos:column="46">ASCII_A<pos:position pos:line="52" pos:column="53"/></name> <operator pos:line="52" pos:column="54">&lt;=<pos:position pos:line="52" pos:column="59"/></operator> <name pos:line="52" pos:column="57">c<pos:position pos:line="52" pos:column="58"/></name> <operator pos:line="52" pos:column="59">&amp;&amp;<pos:position pos:line="52" pos:column="69"/></operator> <name pos:line="52" pos:column="62">c<pos:position pos:line="52" pos:column="63"/></name> <operator pos:line="52" pos:column="64">&lt;=<pos:position pos:line="52" pos:column="69"/></operator> <name pos:line="52" pos:column="67">ASCII_Z<pos:position pos:line="52" pos:column="74"/></name><operator pos:line="52" pos:column="74">)<pos:position pos:line="52" pos:column="75"/></operator></expr>)<pos:position pos:line="52" pos:column="76"/></condition><then pos:line="52" pos:column="76"> <block pos:line="52" pos:column="77">{
      <expr_stmt><expr><operator pos:line="53" pos:column="7">*<pos:position pos:line="53" pos:column="8"/></operator><name pos:line="53" pos:column="8">badPtr<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">=<pos:position pos:line="53" pos:column="16"/></operator> <name pos:line="53" pos:column="17">val<pos:position pos:line="53" pos:column="20"/></name></expr>;<pos:position pos:line="53" pos:column="21"/></expr_stmt>
      <return pos:line="54" pos:column="7">return <expr><literal type="number" pos:line="54" pos:column="14">0<pos:position pos:line="54" pos:column="15"/></literal></expr>;<pos:position pos:line="54" pos:column="16"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">encodingName<pos:position pos:line="56" pos:column="21"/></name></expr>)<pos:position pos:line="56" pos:column="22"/></condition><then pos:line="56" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="57" pos:column="7">*<pos:position pos:line="57" pos:column="8"/></operator><name pos:line="57" pos:column="8">encodingName<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <name pos:line="57" pos:column="23">val<pos:position pos:line="57" pos:column="26"/></name></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt></block></then></if>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">encoding<pos:position pos:line="58" pos:column="17"/></name></expr>)<pos:position pos:line="58" pos:column="18"/></condition><then pos:line="58" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="59" pos:column="7">*<pos:position pos:line="59" pos:column="8"/></operator><name pos:line="59" pos:column="8">encoding<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <call><name pos:line="59" pos:column="19">encodingFinder<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><name pos:line="59" pos:column="34">enc<pos:position pos:line="59" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="39">val<pos:position pos:line="59" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="44">ptr<pos:position pos:line="59" pos:column="47"/></name> <operator pos:line="59" pos:column="48">-<pos:position pos:line="59" pos:column="49"/></operator> <name><name pos:line="59" pos:column="50">enc<pos:position pos:line="59" pos:column="53"/></name><operator pos:line="59" pos:column="53">-&gt;<pos:position pos:line="59" pos:column="58"/></operator><name pos:line="59" pos:column="55">minBytesPerChar<pos:position pos:line="59" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="72"/></expr_stmt></block></then></if>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><operator pos:line="60" pos:column="9">!<pos:position pos:line="60" pos:column="10"/></operator><call><name pos:line="60" pos:column="10">parsePseudoAttribute<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><name pos:line="60" pos:column="31">enc<pos:position pos:line="60" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="36">ptr<pos:position pos:line="60" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="41">end<pos:position pos:line="60" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="46">&amp;<pos:position pos:line="60" pos:column="51"/></operator><name pos:line="60" pos:column="47">name<pos:position pos:line="60" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="53">&amp;<pos:position pos:line="60" pos:column="58"/></operator><name pos:line="60" pos:column="54">nameEnd<pos:position pos:line="60" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="63">&amp;<pos:position pos:line="60" pos:column="68"/></operator><name pos:line="60" pos:column="64">val<pos:position pos:line="60" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="69">&amp;<pos:position pos:line="60" pos:column="74"/></operator><name pos:line="60" pos:column="70">ptr<pos:position pos:line="60" pos:column="73"/></name></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="75"/></condition><then pos:line="60" pos:column="75"> <block pos:line="60" pos:column="76">{
      <expr_stmt><expr><operator pos:line="61" pos:column="7">*<pos:position pos:line="61" pos:column="8"/></operator><name pos:line="61" pos:column="8">badPtr<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">=<pos:position pos:line="61" pos:column="16"/></operator> <name pos:line="61" pos:column="17">ptr<pos:position pos:line="61" pos:column="20"/></name></expr>;<pos:position pos:line="61" pos:column="21"/></expr_stmt>
      <return pos:line="62" pos:column="7">return <expr><literal type="number" pos:line="62" pos:column="14">0<pos:position pos:line="62" pos:column="15"/></literal></expr>;<pos:position pos:line="62" pos:column="16"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><operator pos:line="64" pos:column="9">!<pos:position pos:line="64" pos:column="10"/></operator><name pos:line="64" pos:column="10">name<pos:position pos:line="64" pos:column="14"/></name></expr>)<pos:position pos:line="64" pos:column="15"/></condition><then pos:line="64" pos:column="15">
      <block type="pseudo"><return pos:line="65" pos:column="7">return <expr><literal type="number" pos:line="65" pos:column="14">1<pos:position pos:line="65" pos:column="15"/></literal></expr>;<pos:position pos:line="65" pos:column="16"/></return></block></then></if>
  }<pos:position pos:line="66" pos:column="4"/></block></then></if>
  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><operator pos:line="67" pos:column="7">!<pos:position pos:line="67" pos:column="8"/></operator><call><name pos:line="67" pos:column="8">XmlNameMatchesAscii<pos:position pos:line="67" pos:column="27"/></name><argument_list pos:line="67" pos:column="27">(<argument><expr><name pos:line="67" pos:column="28">enc<pos:position pos:line="67" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="33">name<pos:position pos:line="67" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="39">nameEnd<pos:position pos:line="67" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="48">KW_standalone<pos:position pos:line="67" pos:column="61"/></name></expr></argument>)<pos:position pos:line="67" pos:column="62"/></argument_list></call>
      <operator pos:line="68" pos:column="7">||<pos:position pos:line="68" pos:column="9"/></operator> <name pos:line="68" pos:column="10">isGeneralTextEntity<pos:position pos:line="68" pos:column="29"/></name></expr>)<pos:position pos:line="68" pos:column="30"/></condition><then pos:line="68" pos:column="30"> <block pos:line="68" pos:column="31">{
    <expr_stmt><expr><operator pos:line="69" pos:column="5">*<pos:position pos:line="69" pos:column="6"/></operator><name pos:line="69" pos:column="6">badPtr<pos:position pos:line="69" pos:column="12"/></name> <operator pos:line="69" pos:column="13">=<pos:position pos:line="69" pos:column="14"/></operator> <name pos:line="69" pos:column="15">name<pos:position pos:line="69" pos:column="19"/></name></expr>;<pos:position pos:line="69" pos:column="20"/></expr_stmt>
    <return pos:line="70" pos:column="5">return <expr><literal type="number" pos:line="70" pos:column="12">0<pos:position pos:line="70" pos:column="13"/></literal></expr>;<pos:position pos:line="70" pos:column="14"/></return>
  }<pos:position pos:line="71" pos:column="4"/></block></then></if>
  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><call><name pos:line="72" pos:column="7">XmlNameMatchesAscii<pos:position pos:line="72" pos:column="26"/></name><argument_list pos:line="72" pos:column="26">(<argument><expr><name pos:line="72" pos:column="27">enc<pos:position pos:line="72" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="32">val<pos:position pos:line="72" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="37">ptr<pos:position pos:line="72" pos:column="40"/></name> <operator pos:line="72" pos:column="41">-<pos:position pos:line="72" pos:column="42"/></operator> <name><name pos:line="72" pos:column="43">enc<pos:position pos:line="72" pos:column="46"/></name><operator pos:line="72" pos:column="46">-&gt;<pos:position pos:line="72" pos:column="51"/></operator><name pos:line="72" pos:column="48">minBytesPerChar<pos:position pos:line="72" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="65">KW_yes<pos:position pos:line="72" pos:column="71"/></name></expr></argument>)<pos:position pos:line="72" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="73"/></condition><then pos:line="72" pos:column="73"> <block pos:line="72" pos:column="74">{
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><name pos:line="73" pos:column="9">standalone<pos:position pos:line="73" pos:column="19"/></name></expr>)<pos:position pos:line="73" pos:column="20"/></condition><then pos:line="73" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="74" pos:column="7">*<pos:position pos:line="74" pos:column="8"/></operator><name pos:line="74" pos:column="8">standalone<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">=<pos:position pos:line="74" pos:column="20"/></operator> <literal type="number" pos:line="74" pos:column="21">1<pos:position pos:line="74" pos:column="22"/></literal></expr>;<pos:position pos:line="74" pos:column="23"/></expr_stmt></block></then></if>
  }<pos:position pos:line="75" pos:column="4"/></block></then>
  <elseif pos:line="76" pos:column="3">else <if pos:line="76" pos:column="8">if <condition pos:line="76" pos:column="11">(<expr><call><name pos:line="76" pos:column="12">XmlNameMatchesAscii<pos:position pos:line="76" pos:column="31"/></name><argument_list pos:line="76" pos:column="31">(<argument><expr><name pos:line="76" pos:column="32">enc<pos:position pos:line="76" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="37">val<pos:position pos:line="76" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="42">ptr<pos:position pos:line="76" pos:column="45"/></name> <operator pos:line="76" pos:column="46">-<pos:position pos:line="76" pos:column="47"/></operator> <name><name pos:line="76" pos:column="48">enc<pos:position pos:line="76" pos:column="51"/></name><operator pos:line="76" pos:column="51">-&gt;<pos:position pos:line="76" pos:column="56"/></operator><name pos:line="76" pos:column="53">minBytesPerChar<pos:position pos:line="76" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="70">KW_no<pos:position pos:line="76" pos:column="75"/></name></expr></argument>)<pos:position pos:line="76" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="77"/></condition><then pos:line="76" pos:column="77"> <block pos:line="76" pos:column="78">{
    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><name pos:line="77" pos:column="9">standalone<pos:position pos:line="77" pos:column="19"/></name></expr>)<pos:position pos:line="77" pos:column="20"/></condition><then pos:line="77" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="78" pos:column="7">*<pos:position pos:line="78" pos:column="8"/></operator><name pos:line="78" pos:column="8">standalone<pos:position pos:line="78" pos:column="18"/></name> <operator pos:line="78" pos:column="19">=<pos:position pos:line="78" pos:column="20"/></operator> <literal type="number" pos:line="78" pos:column="21">0<pos:position pos:line="78" pos:column="22"/></literal></expr>;<pos:position pos:line="78" pos:column="23"/></expr_stmt></block></then></if>
  }<pos:position pos:line="79" pos:column="4"/></block></then></if></elseif>
  <else pos:line="80" pos:column="3">else <block pos:line="80" pos:column="8">{
    <expr_stmt><expr><operator pos:line="81" pos:column="5">*<pos:position pos:line="81" pos:column="6"/></operator><name pos:line="81" pos:column="6">badPtr<pos:position pos:line="81" pos:column="12"/></name> <operator pos:line="81" pos:column="13">=<pos:position pos:line="81" pos:column="14"/></operator> <name pos:line="81" pos:column="15">val<pos:position pos:line="81" pos:column="18"/></name></expr>;<pos:position pos:line="81" pos:column="19"/></expr_stmt>
    <return pos:line="82" pos:column="5">return <expr><literal type="number" pos:line="82" pos:column="12">0<pos:position pos:line="82" pos:column="13"/></literal></expr>;<pos:position pos:line="82" pos:column="14"/></return>
  }<pos:position pos:line="83" pos:column="4"/></block></else></if>
  <while pos:line="84" pos:column="3">while <condition pos:line="84" pos:column="9">(<expr><call><name pos:line="84" pos:column="10">isSpace<pos:position pos:line="84" pos:column="17"/></name><argument_list pos:line="84" pos:column="17">(<argument><expr><call><name pos:line="84" pos:column="18">toAscii<pos:position pos:line="84" pos:column="25"/></name><argument_list pos:line="84" pos:column="25">(<argument><expr><name pos:line="84" pos:column="26">enc<pos:position pos:line="84" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="31">ptr<pos:position pos:line="84" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="36">end<pos:position pos:line="84" pos:column="39"/></name></expr></argument>)<pos:position pos:line="84" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="42"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="85" pos:column="5">ptr<pos:position pos:line="85" pos:column="8"/></name> <operator pos:line="85" pos:column="9">+=<pos:position pos:line="85" pos:column="11"/></operator> <name><name pos:line="85" pos:column="12">enc<pos:position pos:line="85" pos:column="15"/></name><operator pos:line="85" pos:column="15">-&gt;<pos:position pos:line="85" pos:column="20"/></operator><name pos:line="85" pos:column="17">minBytesPerChar<pos:position pos:line="85" pos:column="32"/></name></name></expr>;<pos:position pos:line="85" pos:column="33"/></expr_stmt></block></while>
  <if pos:line="86" pos:column="3">if <condition pos:line="86" pos:column="6">(<expr><name pos:line="86" pos:column="7">ptr<pos:position pos:line="86" pos:column="10"/></name> <operator pos:line="86" pos:column="11">!=<pos:position pos:line="86" pos:column="13"/></operator> <name pos:line="86" pos:column="14">end<pos:position pos:line="86" pos:column="17"/></name></expr>)<pos:position pos:line="86" pos:column="18"/></condition><then pos:line="86" pos:column="18"> <block pos:line="86" pos:column="19">{
    <expr_stmt><expr><operator pos:line="87" pos:column="5">*<pos:position pos:line="87" pos:column="6"/></operator><name pos:line="87" pos:column="6">badPtr<pos:position pos:line="87" pos:column="12"/></name> <operator pos:line="87" pos:column="13">=<pos:position pos:line="87" pos:column="14"/></operator> <name pos:line="87" pos:column="15">ptr<pos:position pos:line="87" pos:column="18"/></name></expr>;<pos:position pos:line="87" pos:column="19"/></expr_stmt>
    <return pos:line="88" pos:column="5">return <expr><literal type="number" pos:line="88" pos:column="12">0<pos:position pos:line="88" pos:column="13"/></literal></expr>;<pos:position pos:line="88" pos:column="14"/></return>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if>
  <return pos:line="90" pos:column="3">return <expr><literal type="number" pos:line="90" pos:column="10">1<pos:position pos:line="90" pos:column="11"/></literal></expr>;<pos:position pos:line="90" pos:column="12"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

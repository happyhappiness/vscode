<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1663_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">drive_serf<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">request_rec<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">r<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">serf_config_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">conf<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_pool_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">pool<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_sockaddr_t<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">address<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">s_baton_t<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">baton<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><call><name pos:line="6" pos:column="24">apr_palloc<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name><name pos:line="6" pos:column="35">r<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">pool<pos:position pos:line="6" pos:column="42"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="44">sizeof<argument_list pos:line="6" pos:column="50">(<argument><expr><name pos:line="6" pos:column="51">s_baton_t<pos:position pos:line="6" pos:column="60"/></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="63"/></decl_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* XXXXX: make persistent/per-process or something.*/</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">serf_context_t<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">serfme<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">serf_connection_t<pos:position pos:line="9" pos:column="22"/></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier></type><name pos:line="9" pos:column="24">conn<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">serf_request_t<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">srequest<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">serf_server_config_t<pos:position pos:line="11" pos:column="25"/></name> <modifier pos:line="11" pos:column="26">*<pos:position pos:line="11" pos:column="27"/></modifier></type><name pos:line="11" pos:column="27">ctx<pos:position pos:line="11" pos:column="30"/></name> <init pos:line="11" pos:column="31">= 
        <expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">serf_server_config_t<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">*<pos:position pos:line="12" pos:column="32"/></operator><operator pos:line="12" pos:column="32">)<pos:position pos:line="12" pos:column="33"/></operator><call><name pos:line="12" pos:column="33">ap_get_module_config<pos:position pos:line="12" pos:column="53"/></name><argument_list pos:line="12" pos:column="53">(<argument><expr><name><name pos:line="12" pos:column="54">r<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">-&gt;<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="57">server<pos:position pos:line="12" pos:column="63"/></name><operator pos:line="12" pos:column="63">-&gt;<pos:position pos:line="12" pos:column="68"/></operator><name pos:line="12" pos:column="65">module_config<pos:position pos:line="12" pos:column="78"/></name></name></expr></argument>,
                                                     <argument><expr><operator pos:line="13" pos:column="54">&amp;<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="55">serf_module<pos:position pos:line="13" pos:column="66"/></name></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="68"/></decl_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* Allocate everything out of a subpool, with a shorter lifetime than
     * the main request, so that we can cleanup safely and remove our events
     * from the main serf context in the async mpm mode.
     */</comment>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">apr_pool_create<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><operator pos:line="19" pos:column="21">&amp;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="22">pool<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="28">r<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">pool<pos:position pos:line="19" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">strcmp<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name><name pos:line="20" pos:column="16">conf<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">-&gt;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">url<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">.<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">scheme<pos:position pos:line="20" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="34">"cluster"<pos:position pos:line="20" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call> <operator pos:line="20" pos:column="45">==<pos:position pos:line="20" pos:column="47"/></operator> <literal type="number" pos:line="20" pos:column="48">0<pos:position pos:line="20" pos:column="49"/></literal></expr>)<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50"> <block pos:line="20" pos:column="51">{
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">int<pos:position pos:line="21" pos:column="12"/></name></type> <name pos:line="21" pos:column="13">rc<pos:position pos:line="21" pos:column="15"/></name></decl>;<pos:position pos:line="21" pos:column="16"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">ap_serf_cluster_provider_t<pos:position pos:line="22" pos:column="35"/></name> <modifier pos:line="22" pos:column="36">*<pos:position pos:line="22" pos:column="37"/></modifier></type><name pos:line="22" pos:column="37">cp<pos:position pos:line="22" pos:column="39"/></name></decl>;<pos:position pos:line="22" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">serf_cluster_t<pos:position pos:line="23" pos:column="23"/></name> <modifier pos:line="23" pos:column="24">*<pos:position pos:line="23" pos:column="25"/></modifier></type><name pos:line="23" pos:column="25">cluster<pos:position pos:line="23" pos:column="32"/></name></decl>;<pos:position pos:line="23" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">apr_array_header_t<pos:position pos:line="24" pos:column="27"/></name> <modifier pos:line="24" pos:column="28">*<pos:position pos:line="24" pos:column="29"/></modifier></type><name pos:line="24" pos:column="29">servers<pos:position pos:line="24" pos:column="36"/></name> <init pos:line="24" pos:column="37">= <expr><name pos:line="24" pos:column="39">NULL<pos:position pos:line="24" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="44"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">apr_uint32_t<pos:position pos:line="25" pos:column="21"/></name></type> <name pos:line="25" pos:column="22">pick<pos:position pos:line="25" pos:column="26"/></name> <init pos:line="25" pos:column="27">= <expr><literal type="number" pos:line="25" pos:column="29">0<pos:position pos:line="25" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">ap_serf_server_t<pos:position pos:line="26" pos:column="25"/></name> <modifier pos:line="26" pos:column="26">*<pos:position pos:line="26" pos:column="27"/></modifier></type><name pos:line="26" pos:column="27">choice<pos:position pos:line="26" pos:column="33"/></name></decl>;<pos:position pos:line="26" pos:column="34"/></decl_stmt>

        <comment type="block" pos:line="28" pos:column="9">/* TODO: could this be optimized in post-config to pre-setup the 
         * pointers to the right cluster inside the conf structure?
         */</comment>
        <expr_stmt><expr><name pos:line="31" pos:column="9">cluster<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <call><name pos:line="31" pos:column="19">apr_hash_get<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name><name pos:line="31" pos:column="32">ctx<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">-&gt;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="37">clusters<pos:position pos:line="31" pos:column="45"/></name></name></expr></argument>,
                               <argument><expr><name><name pos:line="32" pos:column="32">conf<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">url<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">.<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="42">hostname<pos:position pos:line="32" pos:column="50"/></name></name></expr></argument>,
                               <argument><expr><name pos:line="33" pos:column="32">APR_HASH_KEY_STRING<pos:position pos:line="33" pos:column="51"/></name></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">cluster<pos:position pos:line="34" pos:column="21"/></name></expr>)<pos:position pos:line="34" pos:column="22"/></condition><then pos:line="34" pos:column="22"> <block pos:line="34" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">ap_log_rerror<pos:position pos:line="35" pos:column="26"/></name><argument_list pos:line="35" pos:column="26">(<argument><expr><name pos:line="35" pos:column="27">APLOG_MARK<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">APLOG_ERR<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">rv<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="54">r<pos:position pos:line="35" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="36" pos:column="27">"SerfCluster: unable to find cluster %s"<pos:position pos:line="36" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="69">conf<pos:position pos:line="36" pos:column="73"/></name><operator pos:line="36" pos:column="73">-&gt;<pos:position pos:line="36" pos:column="78"/></operator><name pos:line="36" pos:column="75">url<pos:position pos:line="36" pos:column="78"/></name><operator pos:line="36" pos:column="78">.<pos:position pos:line="36" pos:column="79"/></operator><name pos:line="36" pos:column="79">hostname<pos:position pos:line="36" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="89"/></expr_stmt>
            <return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="37" pos:column="46"/></name></expr>;<pos:position pos:line="37" pos:column="47"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="40" pos:column="9">cp<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <call><name pos:line="40" pos:column="14">ap_lookup_provider<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">AP_SERF_CLUSTER_PROVIDER<pos:position pos:line="40" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="59">cluster<pos:position pos:line="40" pos:column="66"/></name><operator pos:line="40" pos:column="66">-&gt;<pos:position pos:line="40" pos:column="71"/></operator><name pos:line="40" pos:column="68">provider<pos:position pos:line="40" pos:column="76"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="78">"0"<pos:position pos:line="40" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="83"/></expr_stmt>
        
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">cp<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">==<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">NULL<pos:position pos:line="42" pos:column="23"/></name></expr>)<pos:position pos:line="42" pos:column="24"/></condition><then pos:line="42" pos:column="24"> <block pos:line="42" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">ap_log_rerror<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">APLOG_MARK<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="39">APLOG_ERR<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="50">rv<pos:position pos:line="43" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="54">r<pos:position pos:line="43" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="44" pos:column="27">"SerfCluster: unable to find provider %s"<pos:position pos:line="44" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="70">cluster<pos:position pos:line="44" pos:column="77"/></name><operator pos:line="44" pos:column="77">-&gt;<pos:position pos:line="44" pos:column="82"/></operator><name pos:line="44" pos:column="79">provider<pos:position pos:line="44" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="89"/></expr_stmt>
            <return pos:line="45" pos:column="13">return <expr><name pos:line="45" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="45" pos:column="46"/></name></expr>;<pos:position pos:line="45" pos:column="47"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>

        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">cp<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">-&gt;<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="17">list_servers<pos:position pos:line="48" pos:column="29"/></name></name> <operator pos:line="48" pos:column="30">==<pos:position pos:line="48" pos:column="32"/></operator> <name pos:line="48" pos:column="33">NULL<pos:position pos:line="48" pos:column="37"/></name></expr>)<pos:position pos:line="48" pos:column="38"/></condition><then pos:line="48" pos:column="38"> <block pos:line="48" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">ap_log_rerror<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><name pos:line="49" pos:column="27">APLOG_MARK<pos:position pos:line="49" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="39">APLOG_ERR<pos:position pos:line="49" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="50">rv<pos:position pos:line="49" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="54">r<pos:position pos:line="49" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="50" pos:column="27">"SerfCluster: %s is missing list servers provider."<pos:position pos:line="50" pos:column="78"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="80">cluster<pos:position pos:line="50" pos:column="87"/></name><operator pos:line="50" pos:column="87">-&gt;<pos:position pos:line="50" pos:column="92"/></operator><name pos:line="50" pos:column="89">provider<pos:position pos:line="50" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="99"/></expr_stmt>
            <return pos:line="51" pos:column="13">return <expr><name pos:line="51" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="51" pos:column="46"/></name></expr>;<pos:position pos:line="51" pos:column="47"/></return>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>
        
        <expr_stmt><expr><name pos:line="54" pos:column="9">rc<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <call><name><name pos:line="54" pos:column="14">cp<pos:position pos:line="54" pos:column="16"/></name><operator pos:line="54" pos:column="16">-&gt;<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="18">list_servers<pos:position pos:line="54" pos:column="30"/></name></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name><name pos:line="54" pos:column="31">cp<pos:position pos:line="54" pos:column="33"/></name><operator pos:line="54" pos:column="33">-&gt;<pos:position pos:line="54" pos:column="38"/></operator><name pos:line="54" pos:column="35">baton<pos:position pos:line="54" pos:column="40"/></name></name></expr></argument>,
                              <argument><expr><name pos:line="55" pos:column="31">r<pos:position pos:line="55" pos:column="32"/></name></expr></argument>,
                              <argument><expr><name><name pos:line="56" pos:column="31">cluster<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">-&gt;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="40">params<pos:position pos:line="56" pos:column="46"/></name></name></expr></argument>,
                              <argument><expr><operator pos:line="57" pos:column="31">&amp;<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="32">servers<pos:position pos:line="57" pos:column="39"/></name></expr></argument>)<pos:position pos:line="57" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="41"/></expr_stmt>

        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">rc<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">!=<pos:position pos:line="59" pos:column="18"/></operator> <name pos:line="59" pos:column="19">OK<pos:position pos:line="59" pos:column="21"/></name></expr>)<pos:position pos:line="59" pos:column="22"/></condition><then pos:line="59" pos:column="22"> <block pos:line="59" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">ap_log_rerror<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">APLOG_MARK<pos:position pos:line="60" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="39">APLOG_ERR<pos:position pos:line="60" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="50">rc<pos:position pos:line="60" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="54">r<pos:position pos:line="60" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="61" pos:column="27">"SerfCluster: %s list servers returned failure"<pos:position pos:line="61" pos:column="74"/></literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="76">cluster<pos:position pos:line="61" pos:column="83"/></name><operator pos:line="61" pos:column="83">-&gt;<pos:position pos:line="61" pos:column="88"/></operator><name pos:line="61" pos:column="85">provider<pos:position pos:line="61" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="95"/></expr_stmt>
            <return pos:line="62" pos:column="13">return <expr><name pos:line="62" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="62" pos:column="46"/></name></expr>;<pos:position pos:line="62" pos:column="47"/></return>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>

        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">servers<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">==<pos:position pos:line="65" pos:column="23"/></operator> <name pos:line="65" pos:column="24">NULL<pos:position pos:line="65" pos:column="28"/></name> <operator pos:line="65" pos:column="29">||<pos:position pos:line="65" pos:column="31"/></operator> <call><name pos:line="65" pos:column="32">apr_is_empty_array<pos:position pos:line="65" pos:column="50"/></name><argument_list pos:line="65" pos:column="50">(<argument><expr><name pos:line="65" pos:column="51">servers<pos:position pos:line="65" pos:column="58"/></name></expr></argument>)<pos:position pos:line="65" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="60"/></condition><then pos:line="65" pos:column="60"> <block pos:line="65" pos:column="61">{
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">ap_log_rerror<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">APLOG_MARK<pos:position pos:line="66" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="39">APLOG_ERR<pos:position pos:line="66" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="50">rc<pos:position pos:line="66" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="54">r<pos:position pos:line="66" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="67" pos:column="27">"SerfCluster: %s failed to provide a list of servers"<pos:position pos:line="67" pos:column="80"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="82">cluster<pos:position pos:line="67" pos:column="89"/></name><operator pos:line="67" pos:column="89">-&gt;<pos:position pos:line="67" pos:column="94"/></operator><name pos:line="67" pos:column="91">provider<pos:position pos:line="67" pos:column="99"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="101"/></expr_stmt>
            <return pos:line="68" pos:column="13">return <expr><name pos:line="68" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="68" pos:column="46"/></name></expr>;<pos:position pos:line="68" pos:column="47"/></return>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="71" pos:column="9">/* TOOD: restructure try all servers in the array !! */</comment>
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><call><name pos:line="72" pos:column="13">random_pick<pos:position pos:line="72" pos:column="24"/></name><argument_list pos:line="72" pos:column="24">(<argument><expr><operator pos:line="72" pos:column="25">&amp;<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="26">pick<pos:position pos:line="72" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="32">0<pos:position pos:line="72" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="35">servers<pos:position pos:line="72" pos:column="42"/></name><operator pos:line="72" pos:column="42">-&gt;<pos:position pos:line="72" pos:column="47"/></operator><name pos:line="72" pos:column="44">nelts<pos:position pos:line="72" pos:column="49"/></name></name><operator pos:line="72" pos:column="49">-<pos:position pos:line="72" pos:column="50"/></operator><literal type="number" pos:line="72" pos:column="50">1<pos:position pos:line="72" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="52"/></argument_list></call> <operator pos:line="72" pos:column="53">!=<pos:position pos:line="72" pos:column="55"/></operator> <name pos:line="72" pos:column="56">APR_SUCCESS<pos:position pos:line="72" pos:column="67"/></name></expr>)<pos:position pos:line="72" pos:column="68"/></condition><then pos:line="72" pos:column="68">
            <block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="13">pick<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">=<pos:position pos:line="73" pos:column="19"/></operator> <literal type="number" pos:line="73" pos:column="20">0<pos:position pos:line="73" pos:column="21"/></literal></expr>;<pos:position pos:line="73" pos:column="22"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="74" pos:column="9">choice<pos:position pos:line="74" pos:column="15"/></name> <operator pos:line="74" pos:column="16">=<pos:position pos:line="74" pos:column="17"/></operator> <call><name pos:line="74" pos:column="18">APR_ARRAY_IDX<pos:position pos:line="74" pos:column="31"/></name><argument_list pos:line="74" pos:column="31">(<argument><expr><name pos:line="74" pos:column="32">servers<pos:position pos:line="74" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="41">pick<pos:position pos:line="74" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="47">ap_serf_server_t<pos:position pos:line="74" pos:column="63"/></name> <operator pos:line="74" pos:column="64">*<pos:position pos:line="74" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="74" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="67"/></expr_stmt>

        <expr_stmt><expr><name pos:line="76" pos:column="9">rv<pos:position pos:line="76" pos:column="11"/></name> <operator pos:line="76" pos:column="12">=<pos:position pos:line="76" pos:column="13"/></operator> <call><name pos:line="76" pos:column="14">apr_sockaddr_info_get<pos:position pos:line="76" pos:column="35"/></name><argument_list pos:line="76" pos:column="35">(<argument><expr><operator pos:line="76" pos:column="36">&amp;<pos:position pos:line="76" pos:column="41"/></operator><name pos:line="76" pos:column="37">address<pos:position pos:line="76" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="46">choice<pos:position pos:line="76" pos:column="52"/></name><operator pos:line="76" pos:column="52">-&gt;<pos:position pos:line="76" pos:column="57"/></operator><name pos:line="76" pos:column="54">ip<pos:position pos:line="76" pos:column="56"/></name></name></expr></argument>,
                                   <argument><expr><name pos:line="77" pos:column="36">APR_UNSPEC<pos:position pos:line="77" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="48">choice<pos:position pos:line="77" pos:column="54"/></name><operator pos:line="77" pos:column="54">-&gt;<pos:position pos:line="77" pos:column="59"/></operator><name pos:line="77" pos:column="56">port<pos:position pos:line="77" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="62">0<pos:position pos:line="77" pos:column="63"/></literal></expr></argument>,
                                   <argument><expr><name pos:line="78" pos:column="36">pool<pos:position pos:line="78" pos:column="40"/></name></expr></argument>)<pos:position pos:line="78" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></then>
    <else pos:line="80" pos:column="5">else <block pos:line="80" pos:column="10">{
        <comment type="block" pos:line="81" pos:column="9">/* XXXXX: cache dns? */</comment>
        <expr_stmt><expr><name pos:line="82" pos:column="9">rv<pos:position pos:line="82" pos:column="11"/></name> <operator pos:line="82" pos:column="12">=<pos:position pos:line="82" pos:column="13"/></operator> <call><name pos:line="82" pos:column="14">apr_sockaddr_info_get<pos:position pos:line="82" pos:column="35"/></name><argument_list pos:line="82" pos:column="35">(<argument><expr><operator pos:line="82" pos:column="36">&amp;<pos:position pos:line="82" pos:column="41"/></operator><name pos:line="82" pos:column="37">address<pos:position pos:line="82" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="46">conf<pos:position pos:line="82" pos:column="50"/></name><operator pos:line="82" pos:column="50">-&gt;<pos:position pos:line="82" pos:column="55"/></operator><name pos:line="82" pos:column="52">url<pos:position pos:line="82" pos:column="55"/></name><operator pos:line="82" pos:column="55">.<pos:position pos:line="82" pos:column="56"/></operator><name pos:line="82" pos:column="56">hostname<pos:position pos:line="82" pos:column="64"/></name></name></expr></argument>,
                                   <argument><expr><name pos:line="83" pos:column="36">APR_UNSPEC<pos:position pos:line="83" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="48">conf<pos:position pos:line="83" pos:column="52"/></name><operator pos:line="83" pos:column="52">-&gt;<pos:position pos:line="83" pos:column="57"/></operator><name pos:line="83" pos:column="54">url<pos:position pos:line="83" pos:column="57"/></name><operator pos:line="83" pos:column="57">.<pos:position pos:line="83" pos:column="58"/></operator><name pos:line="83" pos:column="58">port<pos:position pos:line="83" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="64">0<pos:position pos:line="83" pos:column="65"/></literal></expr></argument>,
                                   <argument><expr><name pos:line="84" pos:column="36">pool<pos:position pos:line="84" pos:column="40"/></name></expr></argument>)<pos:position pos:line="84" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></else></if>

    <if pos:line="87" pos:column="5">if <condition pos:line="87" pos:column="8">(<expr><name pos:line="87" pos:column="9">rv<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">!=<pos:position pos:line="87" pos:column="14"/></operator> <name pos:line="87" pos:column="15">APR_SUCCESS<pos:position pos:line="87" pos:column="26"/></name></expr>)<pos:position pos:line="87" pos:column="27"/></condition><then pos:line="87" pos:column="27"> <block pos:line="87" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">ap_log_rerror<pos:position pos:line="88" pos:column="22"/></name><argument_list pos:line="88" pos:column="22">(<argument><expr><name pos:line="88" pos:column="23">APLOG_MARK<pos:position pos:line="88" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="35">APLOG_ERR<pos:position pos:line="88" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="46">rv<pos:position pos:line="88" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="50">r<pos:position pos:line="88" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="53">"Unable to resolve: %s"<pos:position pos:line="88" pos:column="76"/></literal></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="78">conf<pos:position pos:line="88" pos:column="82"/></name><operator pos:line="88" pos:column="82">-&gt;<pos:position pos:line="88" pos:column="87"/></operator><name pos:line="88" pos:column="84">url<pos:position pos:line="88" pos:column="87"/></name><operator pos:line="88" pos:column="87">.<pos:position pos:line="88" pos:column="88"/></operator><name pos:line="88" pos:column="88">hostname<pos:position pos:line="88" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="98"/></expr_stmt>
        <return pos:line="89" pos:column="9">return <expr><name pos:line="89" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="89" pos:column="42"/></name></expr>;<pos:position pos:line="89" pos:column="43"/></return>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>

    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name pos:line="92" pos:column="9">mpm_supprts_serf<pos:position pos:line="92" pos:column="25"/></name></expr>)<pos:position pos:line="92" pos:column="26"/></condition><then pos:line="92" pos:column="26"> <block pos:line="92" pos:column="27">{
        <expr_stmt><expr><name pos:line="93" pos:column="9">serfme<pos:position pos:line="93" pos:column="15"/></name> <operator pos:line="93" pos:column="16">=<pos:position pos:line="93" pos:column="17"/></operator> <call><name pos:line="93" pos:column="18">ap_lookup_provider<pos:position pos:line="93" pos:column="36"/></name><argument_list pos:line="93" pos:column="36">(<argument><expr><literal type="string" pos:line="93" pos:column="37">"mpm_serf"<pos:position pos:line="93" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="49">"instance"<pos:position pos:line="93" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="61">"0"<pos:position pos:line="93" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="66"/></expr_stmt>
        <if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><operator pos:line="94" pos:column="13">!<pos:position pos:line="94" pos:column="14"/></operator><name pos:line="94" pos:column="14">serfme<pos:position pos:line="94" pos:column="20"/></name></expr>)<pos:position pos:line="94" pos:column="21"/></condition><then pos:line="94" pos:column="21"> <block pos:line="94" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">ap_log_rerror<pos:position pos:line="95" pos:column="26"/></name><argument_list pos:line="95" pos:column="26">(<argument><expr><name pos:line="95" pos:column="27">APLOG_MARK<pos:position pos:line="95" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="39">APLOG_ERR<pos:position pos:line="95" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="50">rv<pos:position pos:line="95" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="54">r<pos:position pos:line="95" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="57">"mpm lied to us about supporting serf."<pos:position pos:line="95" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="98"/></expr_stmt>
            <return pos:line="96" pos:column="13">return <expr><name pos:line="96" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="96" pos:column="46"/></name></expr>;<pos:position pos:line="96" pos:column="47"/></return>
        }<pos:position pos:line="97" pos:column="10"/></block></then></if>
    }<pos:position pos:line="98" pos:column="6"/></block></then>
    <else pos:line="99" pos:column="5">else <block pos:line="99" pos:column="10">{
        <expr_stmt><expr><name pos:line="100" pos:column="9">serfme<pos:position pos:line="100" pos:column="15"/></name> <operator pos:line="100" pos:column="16">=<pos:position pos:line="100" pos:column="17"/></operator> <call><name pos:line="100" pos:column="18">serf_context_create<pos:position pos:line="100" pos:column="37"/></name><argument_list pos:line="100" pos:column="37">(<argument><expr><name pos:line="100" pos:column="38">pool<pos:position pos:line="100" pos:column="42"/></name></expr></argument>)<pos:position pos:line="100" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="103" pos:column="5">baton<pos:position pos:line="103" pos:column="10"/></name><operator pos:line="103" pos:column="10">-&gt;<pos:position pos:line="103" pos:column="15"/></operator><name pos:line="103" pos:column="12">r<pos:position pos:line="103" pos:column="13"/></name></name> <operator pos:line="103" pos:column="14">=<pos:position pos:line="103" pos:column="15"/></operator> <name pos:line="103" pos:column="16">r<pos:position pos:line="103" pos:column="17"/></name></expr>;<pos:position pos:line="103" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="104" pos:column="5">baton<pos:position pos:line="104" pos:column="10"/></name><operator pos:line="104" pos:column="10">-&gt;<pos:position pos:line="104" pos:column="15"/></operator><name pos:line="104" pos:column="12">conf<pos:position pos:line="104" pos:column="16"/></name></name> <operator pos:line="104" pos:column="17">=<pos:position pos:line="104" pos:column="18"/></operator> <name pos:line="104" pos:column="19">conf<pos:position pos:line="104" pos:column="23"/></name></expr>;<pos:position pos:line="104" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="105" pos:column="5">baton<pos:position pos:line="105" pos:column="10"/></name><operator pos:line="105" pos:column="10">-&gt;<pos:position pos:line="105" pos:column="15"/></operator><name pos:line="105" pos:column="12">serf_pool<pos:position pos:line="105" pos:column="21"/></name></name> <operator pos:line="105" pos:column="22">=<pos:position pos:line="105" pos:column="23"/></operator> <name pos:line="105" pos:column="24">pool<pos:position pos:line="105" pos:column="28"/></name></expr>;<pos:position pos:line="105" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="106" pos:column="5">baton<pos:position pos:line="106" pos:column="10"/></name><operator pos:line="106" pos:column="10">-&gt;<pos:position pos:line="106" pos:column="15"/></operator><name pos:line="106" pos:column="12">bkt_alloc<pos:position pos:line="106" pos:column="21"/></name></name> <operator pos:line="106" pos:column="22">=<pos:position pos:line="106" pos:column="23"/></operator> <call><name pos:line="106" pos:column="24">serf_bucket_allocator_create<pos:position pos:line="106" pos:column="52"/></name><argument_list pos:line="106" pos:column="52">(<argument><expr><name pos:line="106" pos:column="53">pool<pos:position pos:line="106" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="59">NULL<pos:position pos:line="106" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="65">NULL<pos:position pos:line="106" pos:column="69"/></name></expr></argument>)<pos:position pos:line="106" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="107" pos:column="5">baton<pos:position pos:line="107" pos:column="10"/></name><operator pos:line="107" pos:column="10">-&gt;<pos:position pos:line="107" pos:column="15"/></operator><name pos:line="107" pos:column="12">body_bkt<pos:position pos:line="107" pos:column="20"/></name></name> <operator pos:line="107" pos:column="21">=<pos:position pos:line="107" pos:column="22"/></operator> <name pos:line="107" pos:column="23">NULL<pos:position pos:line="107" pos:column="27"/></name></expr>;<pos:position pos:line="107" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="108" pos:column="5">baton<pos:position pos:line="108" pos:column="10"/></name><operator pos:line="108" pos:column="10">-&gt;<pos:position pos:line="108" pos:column="15"/></operator><name pos:line="108" pos:column="12">ssl_ctx<pos:position pos:line="108" pos:column="19"/></name></name> <operator pos:line="108" pos:column="20">=<pos:position pos:line="108" pos:column="21"/></operator> <name pos:line="108" pos:column="22">NULL<pos:position pos:line="108" pos:column="26"/></name></expr>;<pos:position pos:line="108" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="109" pos:column="5">baton<pos:position pos:line="109" pos:column="10"/></name><operator pos:line="109" pos:column="10">-&gt;<pos:position pos:line="109" pos:column="15"/></operator><name pos:line="109" pos:column="12">rstatus<pos:position pos:line="109" pos:column="19"/></name></name> <operator pos:line="109" pos:column="20">=<pos:position pos:line="109" pos:column="21"/></operator> <name pos:line="109" pos:column="22">OK<pos:position pos:line="109" pos:column="24"/></name></expr>;<pos:position pos:line="109" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="111" pos:column="5">baton<pos:position pos:line="111" pos:column="10"/></name><operator pos:line="111" pos:column="10">-&gt;<pos:position pos:line="111" pos:column="15"/></operator><name pos:line="111" pos:column="12">tmpbb<pos:position pos:line="111" pos:column="17"/></name></name> <operator pos:line="111" pos:column="18">=<pos:position pos:line="111" pos:column="19"/></operator> <call><name pos:line="111" pos:column="20">apr_brigade_create<pos:position pos:line="111" pos:column="38"/></name><argument_list pos:line="111" pos:column="38">(<argument><expr><name><name pos:line="111" pos:column="39">r<pos:position pos:line="111" pos:column="40"/></name><operator pos:line="111" pos:column="40">-&gt;<pos:position pos:line="111" pos:column="45"/></operator><name pos:line="111" pos:column="42">pool<pos:position pos:line="111" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="48">r<pos:position pos:line="111" pos:column="49"/></name><operator pos:line="111" pos:column="49">-&gt;<pos:position pos:line="111" pos:column="54"/></operator><name pos:line="111" pos:column="51">connection<pos:position pos:line="111" pos:column="61"/></name><operator pos:line="111" pos:column="61">-&gt;<pos:position pos:line="111" pos:column="66"/></operator><name pos:line="111" pos:column="63">bucket_alloc<pos:position pos:line="111" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="112" pos:column="5">baton<pos:position pos:line="112" pos:column="10"/></name><operator pos:line="112" pos:column="10">-&gt;<pos:position pos:line="112" pos:column="15"/></operator><name pos:line="112" pos:column="12">done_headers<pos:position pos:line="112" pos:column="24"/></name></name> <operator pos:line="112" pos:column="25">=<pos:position pos:line="112" pos:column="26"/></operator> <literal type="number" pos:line="112" pos:column="27">0<pos:position pos:line="112" pos:column="28"/></literal></expr>;<pos:position pos:line="112" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="113" pos:column="5">baton<pos:position pos:line="113" pos:column="10"/></name><operator pos:line="113" pos:column="10">-&gt;<pos:position pos:line="113" pos:column="15"/></operator><name pos:line="113" pos:column="12">keep_reading<pos:position pos:line="113" pos:column="24"/></name></name> <operator pos:line="113" pos:column="25">=<pos:position pos:line="113" pos:column="26"/></operator> <literal type="number" pos:line="113" pos:column="27">1<pos:position pos:line="113" pos:column="28"/></literal></expr>;<pos:position pos:line="113" pos:column="29"/></expr_stmt>

    <if pos:line="115" pos:column="5">if <condition pos:line="115" pos:column="8">(<expr><call><name pos:line="115" pos:column="9">strcasecmp<pos:position pos:line="115" pos:column="19"/></name><argument_list pos:line="115" pos:column="19">(<argument><expr><name><name pos:line="115" pos:column="20">conf<pos:position pos:line="115" pos:column="24"/></name><operator pos:line="115" pos:column="24">-&gt;<pos:position pos:line="115" pos:column="29"/></operator><name pos:line="115" pos:column="26">url<pos:position pos:line="115" pos:column="29"/></name><operator pos:line="115" pos:column="29">.<pos:position pos:line="115" pos:column="30"/></operator><name pos:line="115" pos:column="30">scheme<pos:position pos:line="115" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="38">"https"<pos:position pos:line="115" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="46"/></argument_list></call> <operator pos:line="115" pos:column="47">==<pos:position pos:line="115" pos:column="49"/></operator> <literal type="number" pos:line="115" pos:column="50">0<pos:position pos:line="115" pos:column="51"/></literal></expr>)<pos:position pos:line="115" pos:column="52"/></condition><then pos:line="115" pos:column="52"> <block pos:line="115" pos:column="53">{
        <expr_stmt><expr><name><name pos:line="116" pos:column="9">baton<pos:position pos:line="116" pos:column="14"/></name><operator pos:line="116" pos:column="14">-&gt;<pos:position pos:line="116" pos:column="19"/></operator><name pos:line="116" pos:column="16">want_ssl<pos:position pos:line="116" pos:column="24"/></name></name> <operator pos:line="116" pos:column="25">=<pos:position pos:line="116" pos:column="26"/></operator> <literal type="number" pos:line="116" pos:column="27">1<pos:position pos:line="116" pos:column="28"/></literal></expr>;<pos:position pos:line="116" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="117" pos:column="6"/></block></then>
    <else pos:line="118" pos:column="5">else <block pos:line="118" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="119" pos:column="9">baton<pos:position pos:line="119" pos:column="14"/></name><operator pos:line="119" pos:column="14">-&gt;<pos:position pos:line="119" pos:column="19"/></operator><name pos:line="119" pos:column="16">want_ssl<pos:position pos:line="119" pos:column="24"/></name></name> <operator pos:line="119" pos:column="25">=<pos:position pos:line="119" pos:column="26"/></operator> <literal type="number" pos:line="119" pos:column="27">0<pos:position pos:line="119" pos:column="28"/></literal></expr>;<pos:position pos:line="119" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="120" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="122" pos:column="5">rv<pos:position pos:line="122" pos:column="7"/></name> <operator pos:line="122" pos:column="8">=<pos:position pos:line="122" pos:column="9"/></operator> <call><name pos:line="122" pos:column="10">ap_setup_client_block<pos:position pos:line="122" pos:column="31"/></name><argument_list pos:line="122" pos:column="31">(<argument><expr><name><name pos:line="122" pos:column="32">baton<pos:position pos:line="122" pos:column="37"/></name><operator pos:line="122" pos:column="37">-&gt;<pos:position pos:line="122" pos:column="42"/></operator><name pos:line="122" pos:column="39">r<pos:position pos:line="122" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="42">REQUEST_CHUNKED_DECHUNK<pos:position pos:line="122" pos:column="65"/></name></expr></argument>)<pos:position pos:line="122" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="67"/></expr_stmt>
    <if pos:line="123" pos:column="5">if <condition pos:line="123" pos:column="8">(<expr><name pos:line="123" pos:column="9">rv<pos:position pos:line="123" pos:column="11"/></name></expr>)<pos:position pos:line="123" pos:column="12"/></condition><then pos:line="123" pos:column="12"> <block pos:line="123" pos:column="13">{
        <return pos:line="124" pos:column="9">return <expr><name pos:line="124" pos:column="16">rv<pos:position pos:line="124" pos:column="18"/></name></expr>;<pos:position pos:line="124" pos:column="19"/></return>
    }<pos:position pos:line="125" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="127" pos:column="5">/* TODO: create custom serf bucket, which does async request body reads */</comment>
    <if pos:line="128" pos:column="5">if <condition pos:line="128" pos:column="8">(<expr><call><name pos:line="128" pos:column="9">ap_should_client_block<pos:position pos:line="128" pos:column="31"/></name><argument_list pos:line="128" pos:column="31">(<argument><expr><name pos:line="128" pos:column="32">r<pos:position pos:line="128" pos:column="33"/></name></expr></argument>)<pos:position pos:line="128" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="35"/></condition><then pos:line="128" pos:column="35"> <block pos:line="128" pos:column="36">{
        <decl_stmt><decl><type><name pos:line="129" pos:column="9">apr_size_t<pos:position pos:line="129" pos:column="19"/></name></type> <name pos:line="129" pos:column="20">len<pos:position pos:line="129" pos:column="23"/></name></decl>;<pos:position pos:line="129" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="130" pos:column="9">apr_off_t<pos:position pos:line="130" pos:column="18"/></name></type> <name pos:line="130" pos:column="19">flen<pos:position pos:line="130" pos:column="23"/></name> <init pos:line="130" pos:column="24">= <expr><literal type="number" pos:line="130" pos:column="26">0<pos:position pos:line="130" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="130" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="131" pos:column="9">char<pos:position pos:line="131" pos:column="13"/></name></type> <name><name pos:line="131" pos:column="14">buf<pos:position pos:line="131" pos:column="17"/></name><index pos:line="131" pos:column="17">[<expr><name pos:line="131" pos:column="18">AP_IOBUFSIZE<pos:position pos:line="131" pos:column="30"/></name></expr>]<pos:position pos:line="131" pos:column="31"/></index></name></decl>;<pos:position pos:line="131" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="132" pos:column="9">apr_file_t<pos:position pos:line="132" pos:column="19"/></name> <modifier pos:line="132" pos:column="20">*<pos:position pos:line="132" pos:column="21"/></modifier></type><name pos:line="132" pos:column="21">fp<pos:position pos:line="132" pos:column="23"/></name></decl>;<pos:position pos:line="132" pos:column="24"/></decl_stmt>

        <expr_stmt><expr><name pos:line="134" pos:column="9">rv<pos:position pos:line="134" pos:column="11"/></name> <operator pos:line="134" pos:column="12">=<pos:position pos:line="134" pos:column="13"/></operator> <call><name pos:line="134" pos:column="14">apr_file_mktemp<pos:position pos:line="134" pos:column="29"/></name><argument_list pos:line="134" pos:column="29">(<argument><expr><operator pos:line="134" pos:column="30">&amp;<pos:position pos:line="134" pos:column="35"/></operator><name pos:line="134" pos:column="31">fp<pos:position pos:line="134" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="35">"mod_serf_buffer.XXXXXX"<pos:position pos:line="134" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="61">0<pos:position pos:line="134" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="134" pos:column="64">pool<pos:position pos:line="134" pos:column="68"/></name></expr></argument>)<pos:position pos:line="134" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="70"/></expr_stmt>
        <if pos:line="135" pos:column="9">if <condition pos:line="135" pos:column="12">(<expr><name pos:line="135" pos:column="13">rv<pos:position pos:line="135" pos:column="15"/></name> <operator pos:line="135" pos:column="16">!=<pos:position pos:line="135" pos:column="18"/></operator> <name pos:line="135" pos:column="19">APR_SUCCESS<pos:position pos:line="135" pos:column="30"/></name></expr>)<pos:position pos:line="135" pos:column="31"/></condition><then pos:line="135" pos:column="31"> <block pos:line="135" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="136" pos:column="13">ap_log_rerror<pos:position pos:line="136" pos:column="26"/></name><argument_list pos:line="136" pos:column="26">(<argument><expr><name pos:line="136" pos:column="27">APLOG_MARK<pos:position pos:line="136" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="39">APLOG_ERR<pos:position pos:line="136" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="50">rv<pos:position pos:line="136" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="54">r<pos:position pos:line="136" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="57">"mod_serf: Unable to create temp request body buffer file."<pos:position pos:line="136" pos:column="116"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="118"/></expr_stmt>
            <return pos:line="137" pos:column="13">return <expr><name pos:line="137" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="137" pos:column="46"/></name></expr>;<pos:position pos:line="137" pos:column="47"/></return>
        }<pos:position pos:line="138" pos:column="10"/></block></then></if>

        <do pos:line="140" pos:column="9">do <block pos:line="140" pos:column="12">{
            <expr_stmt><expr><name pos:line="141" pos:column="13">len<pos:position pos:line="141" pos:column="16"/></name> <operator pos:line="141" pos:column="17">=<pos:position pos:line="141" pos:column="18"/></operator> <sizeof pos:line="141" pos:column="19">sizeof<argument_list pos:line="141" pos:column="25">(<argument><expr><name pos:line="141" pos:column="26">buf<pos:position pos:line="141" pos:column="29"/></name></expr></argument>)<pos:position pos:line="141" pos:column="30"/></argument_list></sizeof></expr>;<pos:position pos:line="141" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="142" pos:column="13">rv<pos:position pos:line="142" pos:column="15"/></name> <operator pos:line="142" pos:column="16">=<pos:position pos:line="142" pos:column="17"/></operator> <call><name pos:line="142" pos:column="18">ap_get_client_block<pos:position pos:line="142" pos:column="37"/></name><argument_list pos:line="142" pos:column="37">(<argument><expr><name><name pos:line="142" pos:column="38">baton<pos:position pos:line="142" pos:column="43"/></name><operator pos:line="142" pos:column="43">-&gt;<pos:position pos:line="142" pos:column="48"/></operator><name pos:line="142" pos:column="45">r<pos:position pos:line="142" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="48">buf<pos:position pos:line="142" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="53">len<pos:position pos:line="142" pos:column="56"/></name></expr></argument>)<pos:position pos:line="142" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="58"/></expr_stmt>
            <if pos:line="143" pos:column="13">if <condition pos:line="143" pos:column="16">(<expr><name pos:line="143" pos:column="17">rv<pos:position pos:line="143" pos:column="19"/></name> <operator pos:line="143" pos:column="20">&gt;<pos:position pos:line="143" pos:column="24"/></operator> <literal type="number" pos:line="143" pos:column="22">0<pos:position pos:line="143" pos:column="23"/></literal></expr>)<pos:position pos:line="143" pos:column="24"/></condition><then pos:line="143" pos:column="24"> <block pos:line="143" pos:column="25">{
                <expr_stmt><expr><name pos:line="144" pos:column="17">rv<pos:position pos:line="144" pos:column="19"/></name> <operator pos:line="144" pos:column="20">=<pos:position pos:line="144" pos:column="21"/></operator> <call><name pos:line="144" pos:column="22">apr_file_write_full<pos:position pos:line="144" pos:column="41"/></name><argument_list pos:line="144" pos:column="41">(<argument><expr><name pos:line="144" pos:column="42">fp<pos:position pos:line="144" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="46">buf<pos:position pos:line="144" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="51">rv<pos:position pos:line="144" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="55">NULL<pos:position pos:line="144" pos:column="59"/></name></expr></argument>)<pos:position pos:line="144" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="61"/></expr_stmt>
                <if pos:line="145" pos:column="17">if <condition pos:line="145" pos:column="20">(<expr><name pos:line="145" pos:column="21">rv<pos:position pos:line="145" pos:column="23"/></name></expr>)<pos:position pos:line="145" pos:column="24"/></condition><then pos:line="145" pos:column="24"> <block pos:line="145" pos:column="25">{
                    <expr_stmt><expr><call><name pos:line="146" pos:column="21">ap_log_rerror<pos:position pos:line="146" pos:column="34"/></name><argument_list pos:line="146" pos:column="34">(<argument><expr><name pos:line="146" pos:column="35">APLOG_MARK<pos:position pos:line="146" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="47">APLOG_ERR<pos:position pos:line="146" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="58">rv<pos:position pos:line="146" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="62">r<pos:position pos:line="146" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="65">"mod_serf: failed to read request body"<pos:position pos:line="146" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="106"/></expr_stmt>
                    <return pos:line="147" pos:column="21">return <expr><name pos:line="147" pos:column="28">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="147" pos:column="54"/></name></expr>;<pos:position pos:line="147" pos:column="55"/></return>
                }<pos:position pos:line="148" pos:column="18"/></block></then></if>
            }<pos:position pos:line="149" pos:column="14"/></block></then></if>
        }<pos:position pos:line="150" pos:column="10"/></block> while<condition pos:line="150" pos:column="16">(<expr><name pos:line="150" pos:column="17">rv<pos:position pos:line="150" pos:column="19"/></name> <operator pos:line="150" pos:column="20">&gt;<pos:position pos:line="150" pos:column="24"/></operator> <literal type="number" pos:line="150" pos:column="22">0<pos:position pos:line="150" pos:column="23"/></literal></expr>)<pos:position pos:line="150" pos:column="24"/></condition>;<pos:position pos:line="150" pos:column="25"/></do>

        <if pos:line="152" pos:column="9">if <condition pos:line="152" pos:column="12">(<expr><name pos:line="152" pos:column="13">rv<pos:position pos:line="152" pos:column="15"/></name> <operator pos:line="152" pos:column="16">&lt;<pos:position pos:line="152" pos:column="20"/></operator> <literal type="number" pos:line="152" pos:column="18">0<pos:position pos:line="152" pos:column="19"/></literal></expr>)<pos:position pos:line="152" pos:column="20"/></condition><then pos:line="152" pos:column="20"> <block pos:line="152" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="153" pos:column="13">ap_log_rerror<pos:position pos:line="153" pos:column="26"/></name><argument_list pos:line="153" pos:column="26">(<argument><expr><name pos:line="153" pos:column="27">APLOG_MARK<pos:position pos:line="153" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="39">APLOG_ERR<pos:position pos:line="153" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="50">rv<pos:position pos:line="153" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="54">r<pos:position pos:line="153" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="57">"mod_serf: failed to read request body"<pos:position pos:line="153" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="98"/></expr_stmt>
            <return pos:line="154" pos:column="13">return <expr><name pos:line="154" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="154" pos:column="46"/></name></expr>;<pos:position pos:line="154" pos:column="47"/></return>
        }<pos:position pos:line="155" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="157" pos:column="9">apr_file_seek<pos:position pos:line="157" pos:column="22"/></name><argument_list pos:line="157" pos:column="22">(<argument><expr><name pos:line="157" pos:column="23">fp<pos:position pos:line="157" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="27">APR_SET<pos:position pos:line="157" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="157" pos:column="36">&amp;<pos:position pos:line="157" pos:column="41"/></operator><name pos:line="157" pos:column="37">flen<pos:position pos:line="157" pos:column="41"/></name></expr></argument>)<pos:position pos:line="157" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="158" pos:column="9">baton<pos:position pos:line="158" pos:column="14"/></name><operator pos:line="158" pos:column="14">-&gt;<pos:position pos:line="158" pos:column="19"/></operator><name pos:line="158" pos:column="16">body_bkt<pos:position pos:line="158" pos:column="24"/></name></name> <operator pos:line="158" pos:column="25">=<pos:position pos:line="158" pos:column="26"/></operator> <call><name pos:line="158" pos:column="27">serf_bucket_file_create<pos:position pos:line="158" pos:column="50"/></name><argument_list pos:line="158" pos:column="50">(<argument><expr><name pos:line="158" pos:column="51">fp<pos:position pos:line="158" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="158" pos:column="55">baton<pos:position pos:line="158" pos:column="60"/></name><operator pos:line="158" pos:column="60">-&gt;<pos:position pos:line="158" pos:column="65"/></operator><name pos:line="158" pos:column="62">bkt_alloc<pos:position pos:line="158" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="158" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="159" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="161" pos:column="5">conn<pos:position pos:line="161" pos:column="9"/></name> <operator pos:line="161" pos:column="10">=<pos:position pos:line="161" pos:column="11"/></operator> <call><name pos:line="161" pos:column="12">serf_connection_create<pos:position pos:line="161" pos:column="34"/></name><argument_list pos:line="161" pos:column="34">(<argument><expr><name pos:line="161" pos:column="35">serfme<pos:position pos:line="161" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="43">address<pos:position pos:line="161" pos:column="50"/></name></expr></argument>,
                                  <argument><expr><name pos:line="162" pos:column="35">conn_setup<pos:position pos:line="162" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="47">baton<pos:position pos:line="162" pos:column="52"/></name></expr></argument>,
                                  <argument><expr><name pos:line="163" pos:column="35">closed_connection<pos:position pos:line="163" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="54">baton<pos:position pos:line="163" pos:column="59"/></name></expr></argument>,
                                  <argument><expr><name pos:line="164" pos:column="35">pool<pos:position pos:line="164" pos:column="39"/></name></expr></argument>)<pos:position pos:line="164" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name pos:line="166" pos:column="5">srequest<pos:position pos:line="166" pos:column="13"/></name> <operator pos:line="166" pos:column="14">=<pos:position pos:line="166" pos:column="15"/></operator> <call><name pos:line="166" pos:column="16">serf_connection_request_create<pos:position pos:line="166" pos:column="46"/></name><argument_list pos:line="166" pos:column="46">(<argument><expr><name pos:line="166" pos:column="47">conn<pos:position pos:line="166" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="53">setup_request<pos:position pos:line="166" pos:column="66"/></name></expr></argument>,
                                              <argument><expr><name pos:line="167" pos:column="47">baton<pos:position pos:line="167" pos:column="52"/></name></expr></argument>)<pos:position pos:line="167" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="54"/></expr_stmt>

    <if pos:line="169" pos:column="5">if <condition pos:line="169" pos:column="8">(<expr><name pos:line="169" pos:column="9">mpm_supprts_serf<pos:position pos:line="169" pos:column="25"/></name></expr>)<pos:position pos:line="169" pos:column="26"/></condition><then pos:line="169" pos:column="26"> <block pos:line="169" pos:column="27">{
        <return pos:line="170" pos:column="9">return <expr><name pos:line="170" pos:column="16">SUSPENDED<pos:position pos:line="170" pos:column="25"/></name></expr>;<pos:position pos:line="170" pos:column="26"/></return>
    }<pos:position pos:line="171" pos:column="6"/></block></then>
    <else pos:line="172" pos:column="5">else <block pos:line="172" pos:column="10">{
        <do pos:line="173" pos:column="9">do <block pos:line="173" pos:column="12">{
            <expr_stmt><expr><name pos:line="174" pos:column="13">rv<pos:position pos:line="174" pos:column="15"/></name> <operator pos:line="174" pos:column="16">=<pos:position pos:line="174" pos:column="17"/></operator> <call><name pos:line="174" pos:column="18">serf_context_run<pos:position pos:line="174" pos:column="34"/></name><argument_list pos:line="174" pos:column="34">(<argument><expr><name pos:line="174" pos:column="35">serfme<pos:position pos:line="174" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="43">SERF_DURATION_FOREVER<pos:position pos:line="174" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="66">pool<pos:position pos:line="174" pos:column="70"/></name></expr></argument>)<pos:position pos:line="174" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="72"/></expr_stmt>
            
            <comment type="block" pos:line="176" pos:column="13">/* XXXX: Handle timeouts */</comment>
            <if pos:line="177" pos:column="13">if <condition pos:line="177" pos:column="16">(<expr><call><name pos:line="177" pos:column="17">APR_STATUS_IS_TIMEUP<pos:position pos:line="177" pos:column="37"/></name><argument_list pos:line="177" pos:column="37">(<argument><expr><name pos:line="177" pos:column="38">rv<pos:position pos:line="177" pos:column="40"/></name></expr></argument>)<pos:position pos:line="177" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="177" pos:column="42"/></condition><then pos:line="177" pos:column="42"> <block pos:line="177" pos:column="43">{
                <continue pos:line="178" pos:column="17">continue;<pos:position pos:line="178" pos:column="26"/></continue>
            }<pos:position pos:line="179" pos:column="14"/></block></then></if>
            
            <if pos:line="181" pos:column="13">if <condition pos:line="181" pos:column="16">(<expr><name pos:line="181" pos:column="17">rv<pos:position pos:line="181" pos:column="19"/></name> <operator pos:line="181" pos:column="20">!=<pos:position pos:line="181" pos:column="22"/></operator> <name pos:line="181" pos:column="23">APR_SUCCESS<pos:position pos:line="181" pos:column="34"/></name></expr>)<pos:position pos:line="181" pos:column="35"/></condition><then pos:line="181" pos:column="35"> <block pos:line="181" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="182" pos:column="17">ap_log_rerror<pos:position pos:line="182" pos:column="30"/></name><argument_list pos:line="182" pos:column="30">(<argument><expr><name pos:line="182" pos:column="31">APLOG_MARK<pos:position pos:line="182" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="43">APLOG_ERR<pos:position pos:line="182" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="54">rv<pos:position pos:line="182" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="58">r<pos:position pos:line="182" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="61">"serf_context_run() for %pI"<pos:position pos:line="182" pos:column="89"/></literal></expr></argument>, <argument><expr><name pos:line="182" pos:column="91">address<pos:position pos:line="182" pos:column="98"/></name></expr></argument>)<pos:position pos:line="182" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="100"/></expr_stmt>
                <return pos:line="183" pos:column="17">return <expr><name pos:line="183" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="183" pos:column="50"/></name></expr>;<pos:position pos:line="183" pos:column="51"/></return>       
            }<pos:position pos:line="184" pos:column="14"/></block></then></if>
            
            <expr_stmt><expr><call><name pos:line="186" pos:column="13">serf_debug__closed_conn<pos:position pos:line="186" pos:column="36"/></name><argument_list pos:line="186" pos:column="36">(<argument><expr><name><name pos:line="186" pos:column="37">baton<pos:position pos:line="186" pos:column="42"/></name><operator pos:line="186" pos:column="42">-&gt;<pos:position pos:line="186" pos:column="47"/></operator><name pos:line="186" pos:column="44">bkt_alloc<pos:position pos:line="186" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="186" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="187" pos:column="10"/></block> while <condition pos:line="187" pos:column="17">(<expr><name><name pos:line="187" pos:column="18">baton<pos:position pos:line="187" pos:column="23"/></name><operator pos:line="187" pos:column="23">-&gt;<pos:position pos:line="187" pos:column="28"/></operator><name pos:line="187" pos:column="25">keep_reading<pos:position pos:line="187" pos:column="37"/></name></name></expr>)<pos:position pos:line="187" pos:column="38"/></condition>;<pos:position pos:line="187" pos:column="39"/></do>
        
        <return pos:line="189" pos:column="9">return <expr><name><name pos:line="189" pos:column="16">baton<pos:position pos:line="189" pos:column="21"/></name><operator pos:line="189" pos:column="21">-&gt;<pos:position pos:line="189" pos:column="26"/></operator><name pos:line="189" pos:column="23">rstatus<pos:position pos:line="189" pos:column="30"/></name></name></expr>;<pos:position pos:line="189" pos:column="31"/></return>
    }<pos:position pos:line="190" pos:column="6"/></block></else></if>
}<pos:position pos:line="191" pos:column="2"/></block></function></unit>

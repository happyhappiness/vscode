<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3772.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">kept_body_filter<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">ap_filter_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">f<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">apr_bucket_brigade<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">b<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">ap_input_mode_t<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">mode<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">apr_read_type_e<pos:position pos:line="3" pos:column="53"/></name></type> <name pos:line="3" pos:column="54">block<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="4" pos:column="38">apr_off_t<pos:position pos:line="4" pos:column="47"/></name></type> <name pos:line="4" pos:column="48">readbytes<pos:position pos:line="4" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="58"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">request_rec<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">r<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name><name pos:line="6" pos:column="22">f<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">r<pos:position pos:line="6" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_bucket_brigade<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">kept_body<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><name><name pos:line="7" pos:column="37">r<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">-&gt;<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="40">kept_body<pos:position pos:line="7" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">kept_body_ctx_t<pos:position pos:line="8" pos:column="20"/></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">ctx<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name><name pos:line="8" pos:column="28">f<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">ctx<pos:position pos:line="8" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_bucket<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">ec<pos:position pos:line="9" pos:column="19"/></name></decl>, <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="22">e2<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_status_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">rv<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* just get out of the way of things we don't want. */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">kept_body<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">||<pos:position pos:line="13" pos:column="22"/></operator> <operator pos:line="13" pos:column="23">(<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">mode<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">!=<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">AP_MODE_READBYTES<pos:position pos:line="13" pos:column="49"/></name> <operator pos:line="13" pos:column="50">&amp;&amp;<pos:position pos:line="13" pos:column="60"/></operator> <name pos:line="13" pos:column="53">mode<pos:position pos:line="13" pos:column="57"/></name> <operator pos:line="13" pos:column="58">!=<pos:position pos:line="13" pos:column="60"/></operator> <name pos:line="13" pos:column="61">AP_MODE_GETLINE<pos:position pos:line="13" pos:column="76"/></name><operator pos:line="13" pos:column="76">)<pos:position pos:line="13" pos:column="77"/></operator></expr>)<pos:position pos:line="13" pos:column="78"/></condition><then pos:line="13" pos:column="78"> <block pos:line="13" pos:column="79">{
        <return pos:line="14" pos:column="9">return <expr><call><name pos:line="14" pos:column="16">ap_get_brigade<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name><name pos:line="14" pos:column="31">f<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">next<pos:position pos:line="14" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">b<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">mode<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="49">block<pos:position pos:line="14" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="56">readbytes<pos:position pos:line="14" pos:column="65"/></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* set up the context if it does not already exist */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">ctx<pos:position pos:line="18" pos:column="13"/></name></expr>)<pos:position pos:line="18" pos:column="14"/></condition><then pos:line="18" pos:column="14"> <block pos:line="18" pos:column="15">{
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">f<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">ctx<pos:position pos:line="19" pos:column="15"/></name></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">ctx<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <call><name pos:line="19" pos:column="24">apr_palloc<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><name><name pos:line="19" pos:column="35">f<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">r<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">pool<pos:position pos:line="19" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="47">sizeof<argument_list pos:line="19" pos:column="53">(<argument><expr><operator pos:line="19" pos:column="54">*<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="55">ctx<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">ctx<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">offset<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <literal type="number" pos:line="20" pos:column="23">0<pos:position pos:line="20" pos:column="24"/></literal></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">apr_brigade_length<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">kept_body<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="39">1<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="42">&amp;<pos:position pos:line="21" pos:column="47"/></operator><name><name pos:line="21" pos:column="43">ctx<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">-&gt;<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="48">remaining<pos:position pos:line="21" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="24" pos:column="5">/* kept_body is finished, send next filter */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">ctx<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">remaining<pos:position pos:line="25" pos:column="23"/></name></name> <operator pos:line="25" pos:column="24">&lt;=<pos:position pos:line="25" pos:column="29"/></operator> <literal type="number" pos:line="25" pos:column="27">0<pos:position pos:line="25" pos:column="28"/></literal></expr>)<pos:position pos:line="25" pos:column="29"/></condition><then pos:line="25" pos:column="29"> <block pos:line="25" pos:column="30">{
        <return pos:line="26" pos:column="9">return <expr><call><name pos:line="26" pos:column="16">ap_get_brigade<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name><name pos:line="26" pos:column="31">f<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">next<pos:position pos:line="26" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="40">b<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">mode<pos:position pos:line="26" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">block<pos:position pos:line="26" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="56">readbytes<pos:position pos:line="26" pos:column="65"/></name></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* send all of the kept_body, but no more */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">readbytes<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&gt;<pos:position pos:line="30" pos:column="23"/></operator> <name><name pos:line="30" pos:column="21">ctx<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">remaining<pos:position pos:line="30" pos:column="35"/></name></name></expr>)<pos:position pos:line="30" pos:column="36"/></condition><then pos:line="30" pos:column="36"> <block pos:line="30" pos:column="37">{
        <expr_stmt><expr><name pos:line="31" pos:column="9">readbytes<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <name><name pos:line="31" pos:column="21">ctx<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">remaining<pos:position pos:line="31" pos:column="35"/></name></name></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/* send part of the kept_body */</comment>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">(<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">rv<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">apr_brigade_partition<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">kept_body<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="48">ctx<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">-&gt;<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="53">offset<pos:position pos:line="35" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="61">&amp;<pos:position pos:line="35" pos:column="66"/></operator><name pos:line="35" pos:column="62">ec<pos:position pos:line="35" pos:column="64"/></name></expr></argument>)<pos:position pos:line="35" pos:column="65"/></argument_list></call><operator pos:line="35" pos:column="65">)<pos:position pos:line="35" pos:column="66"/></operator> <operator pos:line="35" pos:column="67">!=<pos:position pos:line="35" pos:column="69"/></operator> <name pos:line="35" pos:column="70">APR_SUCCESS<pos:position pos:line="35" pos:column="81"/></name></expr>)<pos:position pos:line="35" pos:column="82"/></condition><then pos:line="35" pos:column="82"> <block pos:line="35" pos:column="83">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_rerror<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">APLOG_MARK<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">APLOG_ERR<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">rv<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="50">r<pos:position pos:line="36" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="37" pos:column="23">"apr_brigade_partition() failed on kept_body at %"<pos:position pos:line="37" pos:column="73"/></literal> <name pos:line="37" pos:column="74">APR_OFF_T_FMT<pos:position pos:line="37" pos:column="87"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="89">ctx<pos:position pos:line="37" pos:column="92"/></name><operator pos:line="37" pos:column="92">-&gt;<pos:position pos:line="37" pos:column="97"/></operator><name pos:line="37" pos:column="94">offset<pos:position pos:line="37" pos:column="100"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="102"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">rv<pos:position pos:line="38" pos:column="18"/></name></expr>;<pos:position pos:line="38" pos:column="19"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">(<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">rv<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <call><name pos:line="40" pos:column="15">apr_brigade_partition<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><name pos:line="40" pos:column="37">kept_body<pos:position pos:line="40" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="48">ctx<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">-&gt;<pos:position pos:line="40" pos:column="56"/></operator><name pos:line="40" pos:column="53">offset<pos:position pos:line="40" pos:column="59"/></name></name> <operator pos:line="40" pos:column="60">+<pos:position pos:line="40" pos:column="61"/></operator> <name pos:line="40" pos:column="62">readbytes<pos:position pos:line="40" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="73">&amp;<pos:position pos:line="40" pos:column="78"/></operator><name pos:line="40" pos:column="74">e2<pos:position pos:line="40" pos:column="76"/></name></expr></argument>)<pos:position pos:line="40" pos:column="77"/></argument_list></call><operator pos:line="40" pos:column="77">)<pos:position pos:line="40" pos:column="78"/></operator> <operator pos:line="40" pos:column="79">!=<pos:position pos:line="40" pos:column="81"/></operator> <name pos:line="40" pos:column="82">APR_SUCCESS<pos:position pos:line="40" pos:column="93"/></name></expr>)<pos:position pos:line="40" pos:column="94"/></condition><then pos:line="40" pos:column="94"> <block pos:line="40" pos:column="95">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">ap_log_rerror<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">APLOG_MARK<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="35">APLOG_ERR<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">rv<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">r<pos:position pos:line="41" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="42" pos:column="23">"apr_brigade_partition() failed on kept_body at %"<pos:position pos:line="42" pos:column="73"/></literal> <name pos:line="42" pos:column="74">APR_OFF_T_FMT<pos:position pos:line="42" pos:column="87"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="89">ctx<pos:position pos:line="42" pos:column="92"/></name><operator pos:line="42" pos:column="92">-&gt;<pos:position pos:line="42" pos:column="97"/></operator><name pos:line="42" pos:column="94">offset<pos:position pos:line="42" pos:column="100"/></name></name> <operator pos:line="42" pos:column="101">+<pos:position pos:line="42" pos:column="102"/></operator> <name pos:line="42" pos:column="103">readbytes<pos:position pos:line="42" pos:column="112"/></name></expr></argument>)<pos:position pos:line="42" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="114"/></expr_stmt>
        <return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">rv<pos:position pos:line="43" pos:column="18"/></name></expr>;<pos:position pos:line="43" pos:column="19"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <do pos:line="46" pos:column="5">do <block pos:line="46" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="47" pos:column="9">apr_bucket<pos:position pos:line="47" pos:column="19"/></name> <modifier pos:line="47" pos:column="20">*<pos:position pos:line="47" pos:column="21"/></modifier></type><name pos:line="47" pos:column="21">foo<pos:position pos:line="47" pos:column="24"/></name></decl>;<pos:position pos:line="47" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="48" pos:column="9">const<pos:position pos:line="48" pos:column="14"/></specifier> <name pos:line="48" pos:column="15">char<pos:position pos:line="48" pos:column="19"/></name> <modifier pos:line="48" pos:column="20">*<pos:position pos:line="48" pos:column="21"/></modifier></type><name pos:line="48" pos:column="21">str<pos:position pos:line="48" pos:column="24"/></name></decl>;<pos:position pos:line="48" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="49" pos:column="9">apr_size_t<pos:position pos:line="49" pos:column="19"/></name></type> <name pos:line="49" pos:column="20">len<pos:position pos:line="49" pos:column="23"/></name></decl>;<pos:position pos:line="49" pos:column="24"/></decl_stmt>

        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><call><name pos:line="51" pos:column="13">apr_bucket_copy<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">ec<pos:position pos:line="51" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="33">&amp;<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="34">foo<pos:position pos:line="51" pos:column="37"/></name></expr></argument>)<pos:position pos:line="51" pos:column="38"/></argument_list></call> <operator pos:line="51" pos:column="39">!=<pos:position pos:line="51" pos:column="41"/></operator> <name pos:line="51" pos:column="42">APR_SUCCESS<pos:position pos:line="51" pos:column="53"/></name></expr>)<pos:position pos:line="51" pos:column="54"/></condition><then pos:line="51" pos:column="54"> <block pos:line="51" pos:column="55">{
            <comment type="block" pos:line="52" pos:column="13">/* As above; this should not fail since the bucket has
             * a known length, but just to be sure, this takes
             * care of uncopyable buckets that do somehow manage
             * to slip through.  */</comment>
            <comment type="block" pos:line="56" pos:column="13">/* XXX: check for failure? */</comment>
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">apr_bucket_read<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><name pos:line="57" pos:column="29">ec<pos:position pos:line="57" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="33">&amp;<pos:position pos:line="57" pos:column="38"/></operator><name pos:line="57" pos:column="34">str<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="39">&amp;<pos:position pos:line="57" pos:column="44"/></operator><name pos:line="57" pos:column="40">len<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="45">APR_BLOCK_READ<pos:position pos:line="57" pos:column="59"/></name></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">apr_bucket_copy<pos:position pos:line="58" pos:column="28"/></name><argument_list pos:line="58" pos:column="28">(<argument><expr><name pos:line="58" pos:column="29">ec<pos:position pos:line="58" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="33">&amp;<pos:position pos:line="58" pos:column="38"/></operator><name pos:line="58" pos:column="34">foo<pos:position pos:line="58" pos:column="37"/></name></expr></argument>)<pos:position pos:line="58" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="60" pos:column="32"/></name><argument_list pos:line="60" pos:column="32">(<argument><expr><name pos:line="60" pos:column="33">b<pos:position pos:line="60" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="36">foo<pos:position pos:line="60" pos:column="39"/></name></expr></argument>)<pos:position pos:line="60" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="61" pos:column="9">ec<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <call><name pos:line="61" pos:column="14">APR_BUCKET_NEXT<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">(<argument><expr><name pos:line="61" pos:column="30">ec<pos:position pos:line="61" pos:column="32"/></name></expr></argument>)<pos:position pos:line="61" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block> while <condition pos:line="62" pos:column="13">(<expr><name pos:line="62" pos:column="14">ec<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">!=<pos:position pos:line="62" pos:column="19"/></operator> <name pos:line="62" pos:column="20">e2<pos:position pos:line="62" pos:column="22"/></name></expr>)<pos:position pos:line="62" pos:column="23"/></condition>;<pos:position pos:line="62" pos:column="24"/></do>

    <expr_stmt><expr><name><name pos:line="64" pos:column="5">ctx<pos:position pos:line="64" pos:column="8"/></name><operator pos:line="64" pos:column="8">-&gt;<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="10">remaining<pos:position pos:line="64" pos:column="19"/></name></name> <operator pos:line="64" pos:column="20">-=<pos:position pos:line="64" pos:column="22"/></operator> <name pos:line="64" pos:column="23">readbytes<pos:position pos:line="64" pos:column="32"/></name></expr>;<pos:position pos:line="64" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="65" pos:column="5">ctx<pos:position pos:line="65" pos:column="8"/></name><operator pos:line="65" pos:column="8">-&gt;<pos:position pos:line="65" pos:column="13"/></operator><name pos:line="65" pos:column="10">offset<pos:position pos:line="65" pos:column="16"/></name></name> <operator pos:line="65" pos:column="17">+=<pos:position pos:line="65" pos:column="19"/></operator> <name pos:line="65" pos:column="20">readbytes<pos:position pos:line="65" pos:column="29"/></name></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>
    <return pos:line="66" pos:column="5">return <expr><name pos:line="66" pos:column="12">APR_SUCCESS<pos:position pos:line="66" pos:column="23"/></name></expr>;<pos:position pos:line="66" pos:column="24"/></return>

}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

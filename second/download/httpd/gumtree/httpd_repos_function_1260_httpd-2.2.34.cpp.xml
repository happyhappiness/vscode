<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1260_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_map_file<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">request_rec<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">r<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">negotiation_state<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">neg<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_file_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">map<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">var_rec<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">best<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">res<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">udir<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">new_req<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><call><name pos:line="10" pos:column="8">strcmp<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name><name pos:line="10" pos:column="15">r<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">handler<pos:position pos:line="10" pos:column="25"/></name></name></expr></argument>,<argument><expr><name pos:line="10" pos:column="26">MAP_FILE_MAGIC_TYPE<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call> <operator pos:line="10" pos:column="47">&amp;&amp;<pos:position pos:line="10" pos:column="57"/></operator> <call><name pos:line="10" pos:column="50">strcmp<pos:position pos:line="10" pos:column="56"/></name><argument_list pos:line="10" pos:column="56">(<argument><expr><name><name pos:line="10" pos:column="57">r<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">-&gt;<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="60">handler<pos:position pos:line="10" pos:column="67"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="10" pos:column="68">"type-map"<pos:position pos:line="10" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="80"/></condition><then pos:line="10" pos:column="80">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">DECLINED<pos:position pos:line="11" pos:column="24"/></name></expr>;<pos:position pos:line="11" pos:column="25"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="13" pos:column="5">neg<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">parse_accept_headers<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">r<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">res<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">read_type_map<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><operator pos:line="14" pos:column="30">&amp;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="31">map<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="36">neg<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">r<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call><operator pos:line="14" pos:column="43">)<pos:position pos:line="14" pos:column="44"/></operator></expr>)<pos:position pos:line="14" pos:column="45"/></condition><then pos:line="14" pos:column="45"> <block pos:line="14" pos:column="46">{
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">res<pos:position pos:line="15" pos:column="19"/></name></expr>;<pos:position pos:line="15" pos:column="20"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">res<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">do_negotiation<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">r<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="29">neg<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="34">&amp;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="35">best<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="41">0<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">res<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">!=<pos:position pos:line="19" pos:column="15"/></operator> <literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>)<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18"> <block type="pseudo"><return pos:line="19" pos:column="19">return <expr><name pos:line="19" pos:column="26">res<pos:position pos:line="19" pos:column="29"/></name></expr>;<pos:position pos:line="19" pos:column="30"/></return></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">best<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">body<pos:position pos:line="21" pos:column="19"/></name></name></expr>)<pos:position pos:line="21" pos:column="20"/></condition><then pos:line="21" pos:column="20">
    <block pos:line="22" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">conn_rec<pos:position pos:line="23" pos:column="17"/></name> <modifier pos:line="23" pos:column="18">*<pos:position pos:line="23" pos:column="19"/></modifier></type><name pos:line="23" pos:column="19">c<pos:position pos:line="23" pos:column="20"/></name> <init pos:line="23" pos:column="21">= <expr><name><name pos:line="23" pos:column="23">r<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">connection<pos:position pos:line="23" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="23" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">apr_bucket_brigade<pos:position pos:line="24" pos:column="27"/></name> <modifier pos:line="24" pos:column="28">*<pos:position pos:line="24" pos:column="29"/></modifier></type><name pos:line="24" pos:column="29">bb<pos:position pos:line="24" pos:column="31"/></name></decl>;<pos:position pos:line="24" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">apr_bucket<pos:position pos:line="25" pos:column="19"/></name> <modifier pos:line="25" pos:column="20">*<pos:position pos:line="25" pos:column="21"/></modifier></type><name pos:line="25" pos:column="21">e<pos:position pos:line="25" pos:column="22"/></name></decl>;<pos:position pos:line="25" pos:column="23"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="27" pos:column="9">ap_allow_standard_methods<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">r<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="38">REPLACE_ALLOW<pos:position pos:line="27" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="53">M_GET<pos:position pos:line="27" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="60">M_OPTIONS<pos:position pos:line="27" pos:column="69"/></name></expr></argument>,
                                  <argument><expr><name pos:line="28" pos:column="35">M_POST<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="43">-<pos:position pos:line="28" pos:column="44"/></operator><literal type="number" pos:line="28" pos:column="44">1<pos:position pos:line="28" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
        <comment type="block" pos:line="29" pos:column="9">/* XXX: ?
         * if (r-&gt;method_number == M_OPTIONS) {
         *    return ap_send_http_options(r);
         *}
         */</comment>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name><name pos:line="34" pos:column="13">r<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">-&gt;<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="16">method_number<pos:position pos:line="34" pos:column="29"/></name></name> <operator pos:line="34" pos:column="30">!=<pos:position pos:line="34" pos:column="32"/></operator> <name pos:line="34" pos:column="33">M_GET<pos:position pos:line="34" pos:column="38"/></name> <operator pos:line="34" pos:column="39">&amp;&amp;<pos:position pos:line="34" pos:column="49"/></operator> <name><name pos:line="34" pos:column="42">r<pos:position pos:line="34" pos:column="43"/></name><operator pos:line="34" pos:column="43">-&gt;<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="45">method_number<pos:position pos:line="34" pos:column="58"/></name></name> <operator pos:line="34" pos:column="59">!=<pos:position pos:line="34" pos:column="61"/></operator> <name pos:line="34" pos:column="62">M_POST<pos:position pos:line="34" pos:column="68"/></name></expr>)<pos:position pos:line="34" pos:column="69"/></condition><then pos:line="34" pos:column="69"> <block pos:line="34" pos:column="70">{
            <return pos:line="35" pos:column="13">return <expr><name pos:line="35" pos:column="20">HTTP_METHOD_NOT_ALLOWED<pos:position pos:line="35" pos:column="43"/></name></expr>;<pos:position pos:line="35" pos:column="44"/></return>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="38" pos:column="9">/* ### These may be implemented by adding some 'extra' info
         *     of the file offset onto the etag
         * ap_update_mtime(r, r-&gt;finfo.mtime);
         * ap_set_last_modified(r);
         * ap_set_etag(r);
         */</comment>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">ap_set_accept_ranges<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">r<pos:position pos:line="44" pos:column="31"/></name></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">ap_set_content_length<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">r<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="34">best<pos:position pos:line="45" pos:column="38"/></name><operator pos:line="45" pos:column="38">-&gt;<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="40">bytes<pos:position pos:line="45" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="47"/></expr_stmt>

        <comment type="block" pos:line="47" pos:column="9">/* set MIME type and charset as negotiated */</comment>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">best<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">-&gt;<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="19">mime_type<pos:position pos:line="48" pos:column="28"/></name></name> <operator pos:line="48" pos:column="29">&amp;&amp;<pos:position pos:line="48" pos:column="39"/></operator> <operator pos:line="48" pos:column="32">*<pos:position pos:line="48" pos:column="33"/></operator><name><name pos:line="48" pos:column="33">best<pos:position pos:line="48" pos:column="37"/></name><operator pos:line="48" pos:column="37">-&gt;<pos:position pos:line="48" pos:column="42"/></operator><name pos:line="48" pos:column="39">mime_type<pos:position pos:line="48" pos:column="48"/></name></name></expr>)<pos:position pos:line="48" pos:column="49"/></condition><then pos:line="48" pos:column="49"> <block pos:line="48" pos:column="50">{
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><name><name pos:line="49" pos:column="17">best<pos:position pos:line="49" pos:column="21"/></name><operator pos:line="49" pos:column="21">-&gt;<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="23">content_charset<pos:position pos:line="49" pos:column="38"/></name></name> <operator pos:line="49" pos:column="39">&amp;&amp;<pos:position pos:line="49" pos:column="49"/></operator> <operator pos:line="49" pos:column="42">*<pos:position pos:line="49" pos:column="43"/></operator><name><name pos:line="49" pos:column="43">best<pos:position pos:line="49" pos:column="47"/></name><operator pos:line="49" pos:column="47">-&gt;<pos:position pos:line="49" pos:column="52"/></operator><name pos:line="49" pos:column="49">content_charset<pos:position pos:line="49" pos:column="64"/></name></name></expr>)<pos:position pos:line="49" pos:column="65"/></condition><then pos:line="49" pos:column="65"> <block pos:line="49" pos:column="66">{
                <expr_stmt><expr><call><name pos:line="50" pos:column="17">ap_set_content_type<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><name pos:line="50" pos:column="37">r<pos:position pos:line="50" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="40">apr_pstrcat<pos:position pos:line="50" pos:column="51"/></name><argument_list pos:line="50" pos:column="51">(<argument><expr><name><name pos:line="50" pos:column="52">r<pos:position pos:line="50" pos:column="53"/></name><operator pos:line="50" pos:column="53">-&gt;<pos:position pos:line="50" pos:column="58"/></operator><name pos:line="50" pos:column="55">pool<pos:position pos:line="50" pos:column="59"/></name></name></expr></argument>,
                                                   <argument><expr><name><name pos:line="51" pos:column="52">best<pos:position pos:line="51" pos:column="56"/></name><operator pos:line="51" pos:column="56">-&gt;<pos:position pos:line="51" pos:column="61"/></operator><name pos:line="51" pos:column="58">mime_type<pos:position pos:line="51" pos:column="67"/></name></name></expr></argument>,
                                                   <argument><expr><literal type="string" pos:line="52" pos:column="52">"; charset="<pos:position pos:line="52" pos:column="64"/></literal></expr></argument>,
                                                   <argument><expr><name><name pos:line="53" pos:column="52">best<pos:position pos:line="53" pos:column="56"/></name><operator pos:line="53" pos:column="56">-&gt;<pos:position pos:line="53" pos:column="61"/></operator><name pos:line="53" pos:column="58">content_charset<pos:position pos:line="53" pos:column="73"/></name></name></expr></argument>,
                                                   <argument><expr><name pos:line="54" pos:column="52">NULL<pos:position pos:line="54" pos:column="56"/></name></expr></argument>)<pos:position pos:line="54" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="55" pos:column="14"/></block></then>
            <else pos:line="56" pos:column="13">else <block pos:line="56" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="57" pos:column="17">ap_set_content_type<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><name pos:line="57" pos:column="37">r<pos:position pos:line="57" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="40">apr_pstrdup<pos:position pos:line="57" pos:column="51"/></name><argument_list pos:line="57" pos:column="51">(<argument><expr><name><name pos:line="57" pos:column="52">r<pos:position pos:line="57" pos:column="53"/></name><operator pos:line="57" pos:column="53">-&gt;<pos:position pos:line="57" pos:column="58"/></operator><name pos:line="57" pos:column="55">pool<pos:position pos:line="57" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="61">best<pos:position pos:line="57" pos:column="65"/></name><operator pos:line="57" pos:column="65">-&gt;<pos:position pos:line="57" pos:column="70"/></operator><name pos:line="57" pos:column="67">mime_type<pos:position pos:line="57" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="79"/></expr_stmt>
            }<pos:position pos:line="58" pos:column="14"/></block></else></if>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="61" pos:column="9">/* set Content-language(s) as negotiated */</comment>
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name><name pos:line="62" pos:column="13">best<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">-&gt;<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="19">content_languages<pos:position pos:line="62" pos:column="36"/></name></name> <operator pos:line="62" pos:column="37">&amp;&amp;<pos:position pos:line="62" pos:column="47"/></operator> <name><name pos:line="62" pos:column="40">best<pos:position pos:line="62" pos:column="44"/></name><operator pos:line="62" pos:column="44">-&gt;<pos:position pos:line="62" pos:column="49"/></operator><name pos:line="62" pos:column="46">content_languages<pos:position pos:line="62" pos:column="63"/></name><operator pos:line="62" pos:column="63">-&gt;<pos:position pos:line="62" pos:column="68"/></operator><name pos:line="62" pos:column="65">nelts<pos:position pos:line="62" pos:column="70"/></name></name></expr>)<pos:position pos:line="62" pos:column="71"/></condition><then pos:line="62" pos:column="71"> <block pos:line="62" pos:column="72">{
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">r<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">-&gt;<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="16">content_languages<pos:position pos:line="63" pos:column="33"/></name></name> <operator pos:line="63" pos:column="34">=<pos:position pos:line="63" pos:column="35"/></operator> <call><name pos:line="63" pos:column="36">apr_array_copy<pos:position pos:line="63" pos:column="50"/></name><argument_list pos:line="63" pos:column="50">(<argument><expr><name><name pos:line="63" pos:column="51">r<pos:position pos:line="63" pos:column="52"/></name><operator pos:line="63" pos:column="52">-&gt;<pos:position pos:line="63" pos:column="57"/></operator><name pos:line="63" pos:column="54">pool<pos:position pos:line="63" pos:column="58"/></name></name></expr></argument>,
                                                  <argument><expr><name><name pos:line="64" pos:column="51">best<pos:position pos:line="64" pos:column="55"/></name><operator pos:line="64" pos:column="55">-&gt;<pos:position pos:line="64" pos:column="60"/></operator><name pos:line="64" pos:column="57">content_languages<pos:position pos:line="64" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="67" pos:column="9">/* set Content-Encoding as negotiated */</comment>
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name><name pos:line="68" pos:column="13">best<pos:position pos:line="68" pos:column="17"/></name><operator pos:line="68" pos:column="17">-&gt;<pos:position pos:line="68" pos:column="22"/></operator><name pos:line="68" pos:column="19">content_encoding<pos:position pos:line="68" pos:column="35"/></name></name> <operator pos:line="68" pos:column="36">&amp;&amp;<pos:position pos:line="68" pos:column="46"/></operator> <operator pos:line="68" pos:column="39">*<pos:position pos:line="68" pos:column="40"/></operator><name><name pos:line="68" pos:column="40">best<pos:position pos:line="68" pos:column="44"/></name><operator pos:line="68" pos:column="44">-&gt;<pos:position pos:line="68" pos:column="49"/></operator><name pos:line="68" pos:column="46">content_encoding<pos:position pos:line="68" pos:column="62"/></name></name></expr>)<pos:position pos:line="68" pos:column="63"/></condition><then pos:line="68" pos:column="63"> <block pos:line="68" pos:column="64">{
            <expr_stmt><expr><name><name pos:line="69" pos:column="13">r<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">-&gt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">content_encoding<pos:position pos:line="69" pos:column="32"/></name></name> <operator pos:line="69" pos:column="33">=<pos:position pos:line="69" pos:column="34"/></operator> <call><name pos:line="69" pos:column="35">apr_pstrdup<pos:position pos:line="69" pos:column="46"/></name><argument_list pos:line="69" pos:column="46">(<argument><expr><name><name pos:line="69" pos:column="47">r<pos:position pos:line="69" pos:column="48"/></name><operator pos:line="69" pos:column="48">-&gt;<pos:position pos:line="69" pos:column="53"/></operator><name pos:line="69" pos:column="50">pool<pos:position pos:line="69" pos:column="54"/></name></name></expr></argument>,
                                              <argument><expr><name><name pos:line="70" pos:column="47">best<pos:position pos:line="70" pos:column="51"/></name><operator pos:line="70" pos:column="51">-&gt;<pos:position pos:line="70" pos:column="56"/></operator><name pos:line="70" pos:column="53">content_encoding<pos:position pos:line="70" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>

        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><operator pos:line="73" pos:column="13">(<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="14">res<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">=<pos:position pos:line="73" pos:column="19"/></operator> <call><name pos:line="73" pos:column="20">ap_meets_conditions<pos:position pos:line="73" pos:column="39"/></name><argument_list pos:line="73" pos:column="39">(<argument><expr><name pos:line="73" pos:column="40">r<pos:position pos:line="73" pos:column="41"/></name></expr></argument>)<pos:position pos:line="73" pos:column="42"/></argument_list></call><operator pos:line="73" pos:column="42">)<pos:position pos:line="73" pos:column="43"/></operator> <operator pos:line="73" pos:column="44">!=<pos:position pos:line="73" pos:column="46"/></operator> <name pos:line="73" pos:column="47">OK<pos:position pos:line="73" pos:column="49"/></name></expr>)<pos:position pos:line="73" pos:column="50"/></condition><then pos:line="73" pos:column="50"> <block pos:line="73" pos:column="51">{
            <return pos:line="74" pos:column="13">return <expr><name pos:line="74" pos:column="20">res<pos:position pos:line="74" pos:column="23"/></name></expr>;<pos:position pos:line="74" pos:column="24"/></return>
        }<pos:position pos:line="75" pos:column="10"/></block></then></if>

        <if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><operator pos:line="77" pos:column="13">(<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="14">res<pos:position pos:line="77" pos:column="17"/></name> <operator pos:line="77" pos:column="18">=<pos:position pos:line="77" pos:column="19"/></operator> <call><name pos:line="77" pos:column="20">ap_discard_request_body<pos:position pos:line="77" pos:column="43"/></name><argument_list pos:line="77" pos:column="43">(<argument><expr><name pos:line="77" pos:column="44">r<pos:position pos:line="77" pos:column="45"/></name></expr></argument>)<pos:position pos:line="77" pos:column="46"/></argument_list></call><operator pos:line="77" pos:column="46">)<pos:position pos:line="77" pos:column="47"/></operator> <operator pos:line="77" pos:column="48">!=<pos:position pos:line="77" pos:column="50"/></operator> <name pos:line="77" pos:column="51">OK<pos:position pos:line="77" pos:column="53"/></name></expr>)<pos:position pos:line="77" pos:column="54"/></condition><then pos:line="77" pos:column="54"> <block pos:line="77" pos:column="55">{
            <return pos:line="78" pos:column="13">return <expr><name pos:line="78" pos:column="20">res<pos:position pos:line="78" pos:column="23"/></name></expr>;<pos:position pos:line="78" pos:column="24"/></return>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="80" pos:column="9">bb<pos:position pos:line="80" pos:column="11"/></name> <operator pos:line="80" pos:column="12">=<pos:position pos:line="80" pos:column="13"/></operator> <call><name pos:line="80" pos:column="14">apr_brigade_create<pos:position pos:line="80" pos:column="32"/></name><argument_list pos:line="80" pos:column="32">(<argument><expr><name><name pos:line="80" pos:column="33">r<pos:position pos:line="80" pos:column="34"/></name><operator pos:line="80" pos:column="34">-&gt;<pos:position pos:line="80" pos:column="39"/></operator><name pos:line="80" pos:column="36">pool<pos:position pos:line="80" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="42">c<pos:position pos:line="80" pos:column="43"/></name><operator pos:line="80" pos:column="43">-&gt;<pos:position pos:line="80" pos:column="48"/></operator><name pos:line="80" pos:column="45">bucket_alloc<pos:position pos:line="80" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><name pos:line="81" pos:column="9">e<pos:position pos:line="81" pos:column="10"/></name> <operator pos:line="81" pos:column="11">=<pos:position pos:line="81" pos:column="12"/></operator> <call><name pos:line="81" pos:column="13">apr_bucket_file_create<pos:position pos:line="81" pos:column="35"/></name><argument_list pos:line="81" pos:column="35">(<argument><expr><name pos:line="81" pos:column="36">map<pos:position pos:line="81" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="41">best<pos:position pos:line="81" pos:column="45"/></name><operator pos:line="81" pos:column="45">-&gt;<pos:position pos:line="81" pos:column="50"/></operator><name pos:line="81" pos:column="47">body<pos:position pos:line="81" pos:column="51"/></name></name></expr></argument>,
                                   <argument><expr><operator pos:line="82" pos:column="36">(<pos:position pos:line="82" pos:column="37"/></operator><name pos:line="82" pos:column="37">apr_size_t<pos:position pos:line="82" pos:column="47"/></name><operator pos:line="82" pos:column="47">)<pos:position pos:line="82" pos:column="48"/></operator><name><name pos:line="82" pos:column="48">best<pos:position pos:line="82" pos:column="52"/></name><operator pos:line="82" pos:column="52">-&gt;<pos:position pos:line="82" pos:column="57"/></operator><name pos:line="82" pos:column="54">bytes<pos:position pos:line="82" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="61">r<pos:position pos:line="82" pos:column="62"/></name><operator pos:line="82" pos:column="62">-&gt;<pos:position pos:line="82" pos:column="67"/></operator><name pos:line="82" pos:column="64">pool<pos:position pos:line="82" pos:column="68"/></name></name></expr></argument>,
                                   <argument><expr><name><name pos:line="83" pos:column="36">c<pos:position pos:line="83" pos:column="37"/></name><operator pos:line="83" pos:column="37">-&gt;<pos:position pos:line="83" pos:column="42"/></operator><name pos:line="83" pos:column="39">bucket_alloc<pos:position pos:line="83" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="84" pos:column="32"/></name><argument_list pos:line="84" pos:column="32">(<argument><expr><name pos:line="84" pos:column="33">bb<pos:position pos:line="84" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="37">e<pos:position pos:line="84" pos:column="38"/></name></expr></argument>)<pos:position pos:line="84" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="85" pos:column="9">e<pos:position pos:line="85" pos:column="10"/></name> <operator pos:line="85" pos:column="11">=<pos:position pos:line="85" pos:column="12"/></operator> <call><name pos:line="85" pos:column="13">apr_bucket_eos_create<pos:position pos:line="85" pos:column="34"/></name><argument_list pos:line="85" pos:column="34">(<argument><expr><name><name pos:line="85" pos:column="35">c<pos:position pos:line="85" pos:column="36"/></name><operator pos:line="85" pos:column="36">-&gt;<pos:position pos:line="85" pos:column="41"/></operator><name pos:line="85" pos:column="38">bucket_alloc<pos:position pos:line="85" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="86" pos:column="32"/></name><argument_list pos:line="86" pos:column="32">(<argument><expr><name pos:line="86" pos:column="33">bb<pos:position pos:line="86" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="37">e<pos:position pos:line="86" pos:column="38"/></name></expr></argument>)<pos:position pos:line="86" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="40"/></expr_stmt>

        <return pos:line="88" pos:column="9">return <expr><call><name pos:line="88" pos:column="16">ap_pass_brigade<pos:position pos:line="88" pos:column="31"/></name><argument_list pos:line="88" pos:column="31">(<argument><expr><name><name pos:line="88" pos:column="32">r<pos:position pos:line="88" pos:column="33"/></name><operator pos:line="88" pos:column="33">-&gt;<pos:position pos:line="88" pos:column="38"/></operator><name pos:line="88" pos:column="35">output_filters<pos:position pos:line="88" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="51">bb<pos:position pos:line="88" pos:column="53"/></name></expr></argument>)<pos:position pos:line="88" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="55"/></return>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>

    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><name><name pos:line="91" pos:column="9">r<pos:position pos:line="91" pos:column="10"/></name><operator pos:line="91" pos:column="10">-&gt;<pos:position pos:line="91" pos:column="15"/></operator><name pos:line="91" pos:column="12">path_info<pos:position pos:line="91" pos:column="21"/></name></name> <operator pos:line="91" pos:column="22">&amp;&amp;<pos:position pos:line="91" pos:column="32"/></operator> <operator pos:line="91" pos:column="25">*<pos:position pos:line="91" pos:column="26"/></operator><name><name pos:line="91" pos:column="26">r<pos:position pos:line="91" pos:column="27"/></name><operator pos:line="91" pos:column="27">-&gt;<pos:position pos:line="91" pos:column="32"/></operator><name pos:line="91" pos:column="29">path_info<pos:position pos:line="91" pos:column="38"/></name></name></expr>)<pos:position pos:line="91" pos:column="39"/></condition><then pos:line="91" pos:column="39"> <block pos:line="91" pos:column="40">{
        <comment type="block" pos:line="92" pos:column="9">/* remove any path_info from the end of the uri before trying
         * to change the filename.  r-&gt;path_info from the original
         * request is passed along on the redirect.
         */</comment>
        <expr_stmt><expr><name><name pos:line="96" pos:column="9">r<pos:position pos:line="96" pos:column="10"/></name><operator pos:line="96" pos:column="10">-&gt;<pos:position pos:line="96" pos:column="15"/></operator><name pos:line="96" pos:column="12">uri<pos:position pos:line="96" pos:column="15"/></name><index pos:line="96" pos:column="15">[<expr><call><name pos:line="96" pos:column="16">ap_find_path_info<pos:position pos:line="96" pos:column="33"/></name><argument_list pos:line="96" pos:column="33">(<argument><expr><name><name pos:line="96" pos:column="34">r<pos:position pos:line="96" pos:column="35"/></name><operator pos:line="96" pos:column="35">-&gt;<pos:position pos:line="96" pos:column="40"/></operator><name pos:line="96" pos:column="37">uri<pos:position pos:line="96" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="42">r<pos:position pos:line="96" pos:column="43"/></name><operator pos:line="96" pos:column="43">-&gt;<pos:position pos:line="96" pos:column="48"/></operator><name pos:line="96" pos:column="45">path_info<pos:position pos:line="96" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="55"/></argument_list></call></expr>]<pos:position pos:line="96" pos:column="56"/></index></name> <operator pos:line="96" pos:column="57">=<pos:position pos:line="96" pos:column="58"/></operator> <literal type="char" pos:line="96" pos:column="59">'\0'<pos:position pos:line="96" pos:column="63"/></literal></expr>;<pos:position pos:line="96" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="98" pos:column="5">udir<pos:position pos:line="98" pos:column="9"/></name> <operator pos:line="98" pos:column="10">=<pos:position pos:line="98" pos:column="11"/></operator> <call><name pos:line="98" pos:column="12">ap_make_dirstr_parent<pos:position pos:line="98" pos:column="33"/></name><argument_list pos:line="98" pos:column="33">(<argument><expr><name><name pos:line="98" pos:column="34">r<pos:position pos:line="98" pos:column="35"/></name><operator pos:line="98" pos:column="35">-&gt;<pos:position pos:line="98" pos:column="40"/></operator><name pos:line="98" pos:column="37">pool<pos:position pos:line="98" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="43">r<pos:position pos:line="98" pos:column="44"/></name><operator pos:line="98" pos:column="44">-&gt;<pos:position pos:line="98" pos:column="49"/></operator><name pos:line="98" pos:column="46">uri<pos:position pos:line="98" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="99" pos:column="5">udir<pos:position pos:line="99" pos:column="9"/></name> <operator pos:line="99" pos:column="10">=<pos:position pos:line="99" pos:column="11"/></operator> <call><name pos:line="99" pos:column="12">ap_escape_uri<pos:position pos:line="99" pos:column="25"/></name><argument_list pos:line="99" pos:column="25">(<argument><expr><name><name pos:line="99" pos:column="26">r<pos:position pos:line="99" pos:column="27"/></name><operator pos:line="99" pos:column="27">-&gt;<pos:position pos:line="99" pos:column="32"/></operator><name pos:line="99" pos:column="29">pool<pos:position pos:line="99" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="35">udir<pos:position pos:line="99" pos:column="39"/></name></expr></argument>)<pos:position pos:line="99" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="41"/></expr_stmt>
    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><name><name pos:line="100" pos:column="9">r<pos:position pos:line="100" pos:column="10"/></name><operator pos:line="100" pos:column="10">-&gt;<pos:position pos:line="100" pos:column="15"/></operator><name pos:line="100" pos:column="12">args<pos:position pos:line="100" pos:column="16"/></name></name></expr>)<pos:position pos:line="100" pos:column="17"/></condition><then pos:line="100" pos:column="17"> <block pos:line="100" pos:column="18">{
        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name><name pos:line="101" pos:column="13">r<pos:position pos:line="101" pos:column="14"/></name><operator pos:line="101" pos:column="14">-&gt;<pos:position pos:line="101" pos:column="19"/></operator><name pos:line="101" pos:column="16">path_info<pos:position pos:line="101" pos:column="25"/></name></name></expr>)<pos:position pos:line="101" pos:column="26"/></condition><then pos:line="101" pos:column="26"> <block pos:line="101" pos:column="27">{
            <expr_stmt><expr><name pos:line="102" pos:column="13">new_req<pos:position pos:line="102" pos:column="20"/></name> <operator pos:line="102" pos:column="21">=<pos:position pos:line="102" pos:column="22"/></operator> <call><name pos:line="102" pos:column="23">apr_pstrcat<pos:position pos:line="102" pos:column="34"/></name><argument_list pos:line="102" pos:column="34">(<argument><expr><name><name pos:line="102" pos:column="35">r<pos:position pos:line="102" pos:column="36"/></name><operator pos:line="102" pos:column="36">-&gt;<pos:position pos:line="102" pos:column="41"/></operator><name pos:line="102" pos:column="38">pool<pos:position pos:line="102" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="44">udir<pos:position pos:line="102" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="50">best<pos:position pos:line="102" pos:column="54"/></name><operator pos:line="102" pos:column="54">-&gt;<pos:position pos:line="102" pos:column="59"/></operator><name pos:line="102" pos:column="56">file_name<pos:position pos:line="102" pos:column="65"/></name></name></expr></argument>,
                                  <argument><expr><name><name pos:line="103" pos:column="35">r<pos:position pos:line="103" pos:column="36"/></name><operator pos:line="103" pos:column="36">-&gt;<pos:position pos:line="103" pos:column="41"/></operator><name pos:line="103" pos:column="38">path_info<pos:position pos:line="103" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="49">"?"<pos:position pos:line="103" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="54">r<pos:position pos:line="103" pos:column="55"/></name><operator pos:line="103" pos:column="55">-&gt;<pos:position pos:line="103" pos:column="60"/></operator><name pos:line="103" pos:column="57">args<pos:position pos:line="103" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="63">NULL<pos:position pos:line="103" pos:column="67"/></name></expr></argument>)<pos:position pos:line="103" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="104" pos:column="10"/></block></then>
        <else pos:line="105" pos:column="9">else <block pos:line="105" pos:column="14">{
            <expr_stmt><expr><name pos:line="106" pos:column="13">new_req<pos:position pos:line="106" pos:column="20"/></name> <operator pos:line="106" pos:column="21">=<pos:position pos:line="106" pos:column="22"/></operator> <call><name pos:line="106" pos:column="23">apr_pstrcat<pos:position pos:line="106" pos:column="34"/></name><argument_list pos:line="106" pos:column="34">(<argument><expr><name><name pos:line="106" pos:column="35">r<pos:position pos:line="106" pos:column="36"/></name><operator pos:line="106" pos:column="36">-&gt;<pos:position pos:line="106" pos:column="41"/></operator><name pos:line="106" pos:column="38">pool<pos:position pos:line="106" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="44">udir<pos:position pos:line="106" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="50">best<pos:position pos:line="106" pos:column="54"/></name><operator pos:line="106" pos:column="54">-&gt;<pos:position pos:line="106" pos:column="59"/></operator><name pos:line="106" pos:column="56">file_name<pos:position pos:line="106" pos:column="65"/></name></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="107" pos:column="35">"?"<pos:position pos:line="107" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="40">r<pos:position pos:line="107" pos:column="41"/></name><operator pos:line="107" pos:column="41">-&gt;<pos:position pos:line="107" pos:column="46"/></operator><name pos:line="107" pos:column="43">args<pos:position pos:line="107" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="49">NULL<pos:position pos:line="107" pos:column="53"/></name></expr></argument>)<pos:position pos:line="107" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="108" pos:column="10"/></block></else></if>
    }<pos:position pos:line="109" pos:column="6"/></block></then>
    <else pos:line="110" pos:column="5">else <block pos:line="110" pos:column="10">{
        <expr_stmt><expr><name pos:line="111" pos:column="9">new_req<pos:position pos:line="111" pos:column="16"/></name> <operator pos:line="111" pos:column="17">=<pos:position pos:line="111" pos:column="18"/></operator> <call><name pos:line="111" pos:column="19">apr_pstrcat<pos:position pos:line="111" pos:column="30"/></name><argument_list pos:line="111" pos:column="30">(<argument><expr><name><name pos:line="111" pos:column="31">r<pos:position pos:line="111" pos:column="32"/></name><operator pos:line="111" pos:column="32">-&gt;<pos:position pos:line="111" pos:column="37"/></operator><name pos:line="111" pos:column="34">pool<pos:position pos:line="111" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="40">udir<pos:position pos:line="111" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="46">best<pos:position pos:line="111" pos:column="50"/></name><operator pos:line="111" pos:column="50">-&gt;<pos:position pos:line="111" pos:column="55"/></operator><name pos:line="111" pos:column="52">file_name<pos:position pos:line="111" pos:column="61"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="112" pos:column="31">r<pos:position pos:line="112" pos:column="32"/></name><operator pos:line="112" pos:column="32">-&gt;<pos:position pos:line="112" pos:column="37"/></operator><name pos:line="112" pos:column="34">path_info<pos:position pos:line="112" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="45">NULL<pos:position pos:line="112" pos:column="49"/></name></expr></argument>)<pos:position pos:line="112" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="113" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="114" pos:column="5">ap_internal_redirect<pos:position pos:line="114" pos:column="25"/></name><argument_list pos:line="114" pos:column="25">(<argument><expr><name pos:line="114" pos:column="26">new_req<pos:position pos:line="114" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="35">r<pos:position pos:line="114" pos:column="36"/></name></expr></argument>)<pos:position pos:line="114" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="38"/></expr_stmt>
    <return pos:line="115" pos:column="5">return <expr><name pos:line="115" pos:column="12">OK<pos:position pos:line="115" pos:column="14"/></name></expr>;<pos:position pos:line="115" pos:column="15"/></return>
}<pos:position pos:line="116" pos:column="2"/></block></function></unit>

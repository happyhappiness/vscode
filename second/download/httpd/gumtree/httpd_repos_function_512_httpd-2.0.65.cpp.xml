<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_512_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">header_inout_cmd<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">cmd_parms<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">cmd<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">void<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">indirconf<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">action<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">inhdr<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name pos:line="3" pos:column="37">char<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">value<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="50">const<pos:position pos:line="3" pos:column="55"/></specifier> <name pos:line="3" pos:column="56">char<pos:position pos:line="3" pos:column="60"/></name><modifier pos:line="3" pos:column="60">*<pos:position pos:line="3" pos:column="61"/></modifier></type> <name pos:line="3" pos:column="62">envclause<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="72"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">headers_conf<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">dirconf<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">indirconf<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">condition_var<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><name pos:line="6" pos:column="33">NULL<pos:position pos:line="6" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">colon<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">hdr<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><call><name pos:line="8" pos:column="17">apr_pstrdup<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name><name pos:line="8" pos:column="29">cmd<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">pool<pos:position pos:line="8" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="40">inhdr<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">header_entry<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></operator><operator pos:line="9" pos:column="19">new<pos:position pos:line="9" pos:column="22"/></operator></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_array_header_t<pos:position pos:line="10" pos:column="23"/></name> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">fixup<pos:position pos:line="10" pos:column="30"/></name> <init pos:line="10" pos:column="31">= <expr><ternary><condition><expr><operator pos:line="10" pos:column="33">(<pos:position pos:line="10" pos:column="34"/></operator><name><name pos:line="10" pos:column="34">cmd<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-&gt;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="39">info<pos:position pos:line="10" pos:column="43"/></name></name> <operator pos:line="10" pos:column="44">==<pos:position pos:line="10" pos:column="46"/></operator> <operator pos:line="10" pos:column="47">&amp;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="48">hdr_in<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">)<pos:position pos:line="10" pos:column="55"/></operator></expr>
        ?<pos:position pos:line="11" pos:column="10"/></condition><then pos:line="11" pos:column="10"> <expr><name><name pos:line="11" pos:column="11">dirconf<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">fixup_in<pos:position pos:line="11" pos:column="28"/></name></name></expr>   <pos:position pos:line="11" pos:column="31"/></then><else pos:line="11" pos:column="31">: <expr><ternary><condition><expr><operator pos:line="11" pos:column="33">(<pos:position pos:line="11" pos:column="34"/></operator><name><name pos:line="11" pos:column="34">cmd<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">info<pos:position pos:line="11" pos:column="43"/></name></name> <operator pos:line="11" pos:column="44">==<pos:position pos:line="11" pos:column="46"/></operator> <operator pos:line="11" pos:column="47">&amp;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="48">hdr_err<pos:position pos:line="11" pos:column="55"/></name><operator pos:line="11" pos:column="55">)<pos:position pos:line="11" pos:column="56"/></operator></expr>
        ?<pos:position pos:line="12" pos:column="10"/></condition><then pos:line="12" pos:column="10"> <expr><name><name pos:line="12" pos:column="11">dirconf<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">fixup_err<pos:position pos:line="12" pos:column="29"/></name></name></expr>
        <pos:position pos:line="13" pos:column="9"/></then><else pos:line="13" pos:column="9">: <expr><name><name pos:line="13" pos:column="11">dirconf<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">fixup_out<pos:position pos:line="13" pos:column="29"/></name></name></expr></else></ternary></expr></else></ternary></expr></init></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="15" pos:column="5">new<pos:position pos:line="15" pos:column="8"/></operator> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <operator pos:line="15" pos:column="11">(<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">header_entry<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></operator><operator pos:line="15" pos:column="26">)<pos:position pos:line="15" pos:column="27"/></operator> <call><name pos:line="15" pos:column="28">apr_array_push<pos:position pos:line="15" pos:column="42"/></name><argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">fixup<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><call><name pos:line="17" pos:column="10">strcasecmp<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">action<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="29">"set"<pos:position pos:line="17" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="9">new<pos:position pos:line="18" pos:column="12"/></operator><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">action<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">hdr_set<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt></block></then>
    <elseif pos:line="19" pos:column="5">else <if pos:line="19" pos:column="10">if <condition pos:line="19" pos:column="13">(<expr><operator pos:line="19" pos:column="14">!<pos:position pos:line="19" pos:column="15"/></operator><call><name pos:line="19" pos:column="15">strcasecmp<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">action<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="34">"add"<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="41"/></condition><then pos:line="19" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="20" pos:column="9">new<pos:position pos:line="20" pos:column="12"/></operator><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">action<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">hdr_add<pos:position pos:line="20" pos:column="30"/></name></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><operator pos:line="21" pos:column="14">!<pos:position pos:line="21" pos:column="15"/></operator><call><name pos:line="21" pos:column="15">strcasecmp<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">action<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="34">"append"<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="44"/></condition><then pos:line="21" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="9">new<pos:position pos:line="22" pos:column="12"/></operator><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">action<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="23">hdr_append<pos:position pos:line="22" pos:column="33"/></name></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><operator pos:line="23" pos:column="14">!<pos:position pos:line="23" pos:column="15"/></operator><call><name pos:line="23" pos:column="15">strcasecmp<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">action<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="34">"unset"<pos:position pos:line="23" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="24" pos:column="9">new<pos:position pos:line="24" pos:column="12"/></operator><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">action<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">hdr_unset<pos:position pos:line="24" pos:column="32"/></name></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><operator pos:line="25" pos:column="14">!<pos:position pos:line="25" pos:column="15"/></operator><call><name pos:line="25" pos:column="15">strcasecmp<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">action<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="34">"echo"<pos:position pos:line="25" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="42"/></condition><then pos:line="25" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="26" pos:column="9">new<pos:position pos:line="26" pos:column="12"/></operator><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">action<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">hdr_echo<pos:position pos:line="26" pos:column="31"/></name></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt></block></then></if></elseif>
    <else pos:line="27" pos:column="5">else
        <block type="pseudo"><return pos:line="28" pos:column="9">return <expr><literal type="string" pos:line="28" pos:column="16">"first argument must be add, set, append, unset or echo."<pos:position pos:line="28" pos:column="73"/></literal></expr>;<pos:position pos:line="28" pos:column="74"/></return></block></else></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">new<pos:position pos:line="30" pos:column="12"/></operator><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">action<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">==<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">hdr_unset<pos:position pos:line="30" pos:column="33"/></name></expr>)<pos:position pos:line="30" pos:column="34"/></condition><then pos:line="30" pos:column="34"> <block pos:line="30" pos:column="35">{
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">value<pos:position pos:line="31" pos:column="18"/></name></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19">
            <block type="pseudo"><return pos:line="32" pos:column="13">return <expr><literal type="string" pos:line="32" pos:column="20">"header unset takes two arguments"<pos:position pos:line="32" pos:column="54"/></literal></expr>;<pos:position pos:line="32" pos:column="55"/></return></block></then></if>
    }<pos:position pos:line="33" pos:column="6"/></block></then>
    <elseif pos:line="34" pos:column="5">else <if pos:line="34" pos:column="10">if <condition pos:line="34" pos:column="13">(<expr><operator pos:line="34" pos:column="14">new<pos:position pos:line="34" pos:column="17"/></operator><operator pos:line="34" pos:column="17">-&gt;<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="19">action<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">==<pos:position pos:line="34" pos:column="28"/></operator> <name pos:line="34" pos:column="29">hdr_echo<pos:position pos:line="34" pos:column="37"/></name></expr>)<pos:position pos:line="34" pos:column="38"/></condition><then pos:line="34" pos:column="38"> <block pos:line="34" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">regex_t<pos:position pos:line="35" pos:column="16"/></name> <modifier pos:line="35" pos:column="17">*<pos:position pos:line="35" pos:column="18"/></modifier></type><name pos:line="35" pos:column="18">regex<pos:position pos:line="35" pos:column="23"/></name></decl>;<pos:position pos:line="35" pos:column="24"/></decl_stmt>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">value<pos:position pos:line="36" pos:column="18"/></name></expr>)<pos:position pos:line="36" pos:column="19"/></condition><then pos:line="36" pos:column="19">
            <block type="pseudo"><return pos:line="37" pos:column="13">return <expr><literal type="string" pos:line="37" pos:column="20">"Header echo takes two arguments"<pos:position pos:line="37" pos:column="53"/></literal></expr>;<pos:position pos:line="37" pos:column="54"/></return></block></then>
        <elseif pos:line="38" pos:column="9">else <if pos:line="38" pos:column="14">if <condition pos:line="38" pos:column="17">(<expr><name><name pos:line="38" pos:column="18">cmd<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">info<pos:position pos:line="38" pos:column="27"/></name></name> <operator pos:line="38" pos:column="28">==<pos:position pos:line="38" pos:column="30"/></operator> <operator pos:line="38" pos:column="31">&amp;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="32">hdr_in<pos:position pos:line="38" pos:column="38"/></name></expr>)<pos:position pos:line="38" pos:column="39"/></condition><then pos:line="38" pos:column="39">
            <block type="pseudo"><return pos:line="39" pos:column="13">return <expr><literal type="string" pos:line="39" pos:column="20">"Header echo only valid on Header directive"<pos:position pos:line="39" pos:column="64"/></literal></expr>;<pos:position pos:line="39" pos:column="65"/></return></block></then></if></elseif>
        <else pos:line="40" pos:column="9">else <block pos:line="40" pos:column="14">{
            <expr_stmt><expr><name pos:line="41" pos:column="13">regex<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <call><name pos:line="41" pos:column="21">ap_pregcomp<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name><name pos:line="41" pos:column="33">cmd<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">-&gt;<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="38">pool<pos:position pos:line="41" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">hdr<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">REG_EXTENDED<pos:position pos:line="41" pos:column="61"/></name> <operator pos:line="41" pos:column="62">|<pos:position pos:line="41" pos:column="63"/></operator> <name pos:line="41" pos:column="64">REG_NOSUB<pos:position pos:line="41" pos:column="73"/></name></expr></argument>)<pos:position pos:line="41" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="75"/></expr_stmt>
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><name pos:line="42" pos:column="17">regex<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">==<pos:position pos:line="42" pos:column="25"/></operator> <name pos:line="42" pos:column="26">NULL<pos:position pos:line="42" pos:column="30"/></name></expr>)<pos:position pos:line="42" pos:column="31"/></condition><then pos:line="42" pos:column="31"> <block pos:line="42" pos:column="32">{
                <return pos:line="43" pos:column="17">return <expr><literal type="string" pos:line="43" pos:column="24">"Header echo regex could not be compiled"<pos:position pos:line="43" pos:column="65"/></literal></expr>;<pos:position pos:line="43" pos:column="66"/></return>
            }<pos:position pos:line="44" pos:column="14"/></block></then></if>
        }<pos:position pos:line="45" pos:column="10"/></block></else></if>
        <expr_stmt><expr><operator pos:line="46" pos:column="9">new<pos:position pos:line="46" pos:column="12"/></operator><operator pos:line="46" pos:column="12">-&gt;<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="14">regex<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <name pos:line="46" pos:column="22">regex<pos:position pos:line="46" pos:column="27"/></name></expr>;<pos:position pos:line="46" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="48" pos:column="5">else <if pos:line="48" pos:column="10">if <condition pos:line="48" pos:column="13">(<expr><operator pos:line="48" pos:column="14">!<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="15">value<pos:position pos:line="48" pos:column="20"/></name></expr>)<pos:position pos:line="48" pos:column="21"/></condition><then pos:line="48" pos:column="21">
        <block type="pseudo"><return pos:line="49" pos:column="9">return <expr><literal type="string" pos:line="49" pos:column="16">"header requires three arguments"<pos:position pos:line="49" pos:column="49"/></literal></expr>;<pos:position pos:line="49" pos:column="50"/></return></block></then></if></elseif></if>

    <comment type="block" pos:line="51" pos:column="5">/* Handle the envclause on Header */</comment>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">envclause<pos:position pos:line="52" pos:column="18"/></name> <operator pos:line="52" pos:column="19">!=<pos:position pos:line="52" pos:column="21"/></operator> <name pos:line="52" pos:column="22">NULL<pos:position pos:line="52" pos:column="26"/></name></expr>)<pos:position pos:line="52" pos:column="27"/></condition><then pos:line="52" pos:column="27"> <block pos:line="52" pos:column="28">{
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><call><name pos:line="53" pos:column="13">strncasecmp<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><name pos:line="53" pos:column="25">envclause<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="36">"env="<pos:position pos:line="53" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="44">4<pos:position pos:line="53" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="46"/></argument_list></call> <operator pos:line="53" pos:column="47">!=<pos:position pos:line="53" pos:column="49"/></operator> <literal type="number" pos:line="53" pos:column="50">0<pos:position pos:line="53" pos:column="51"/></literal></expr>)<pos:position pos:line="53" pos:column="52"/></condition><then pos:line="53" pos:column="52"> <block pos:line="53" pos:column="53">{
            <return pos:line="54" pos:column="13">return <expr><literal type="string" pos:line="54" pos:column="20">"error: envclause should be in the form env=envar"<pos:position pos:line="54" pos:column="70"/></literal></expr>;<pos:position pos:line="54" pos:column="71"/></return>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">(<pos:position pos:line="56" pos:column="14"/></operator><name><name pos:line="56" pos:column="14">envclause<pos:position pos:line="56" pos:column="23"/></name><index pos:line="56" pos:column="23">[<expr><literal type="number" pos:line="56" pos:column="24">4<pos:position pos:line="56" pos:column="25"/></literal></expr>]<pos:position pos:line="56" pos:column="26"/></index></name> <operator pos:line="56" pos:column="27">==<pos:position pos:line="56" pos:column="29"/></operator> <literal type="char" pos:line="56" pos:column="30">'\0'<pos:position pos:line="56" pos:column="34"/></literal><operator pos:line="56" pos:column="34">)<pos:position pos:line="56" pos:column="35"/></operator>
            <operator pos:line="57" pos:column="13">||<pos:position pos:line="57" pos:column="15"/></operator> <operator pos:line="57" pos:column="16">(<pos:position pos:line="57" pos:column="17"/></operator><operator pos:line="57" pos:column="17">(<pos:position pos:line="57" pos:column="18"/></operator><name><name pos:line="57" pos:column="18">envclause<pos:position pos:line="57" pos:column="27"/></name><index pos:line="57" pos:column="27">[<expr><literal type="number" pos:line="57" pos:column="28">4<pos:position pos:line="57" pos:column="29"/></literal></expr>]<pos:position pos:line="57" pos:column="30"/></index></name> <operator pos:line="57" pos:column="31">==<pos:position pos:line="57" pos:column="33"/></operator> <literal type="char" pos:line="57" pos:column="34">'!'<pos:position pos:line="57" pos:column="37"/></literal><operator pos:line="57" pos:column="37">)<pos:position pos:line="57" pos:column="38"/></operator> <operator pos:line="57" pos:column="39">&amp;&amp;<pos:position pos:line="57" pos:column="49"/></operator> <operator pos:line="57" pos:column="42">(<pos:position pos:line="57" pos:column="43"/></operator><name><name pos:line="57" pos:column="43">envclause<pos:position pos:line="57" pos:column="52"/></name><index pos:line="57" pos:column="52">[<expr><literal type="number" pos:line="57" pos:column="53">5<pos:position pos:line="57" pos:column="54"/></literal></expr>]<pos:position pos:line="57" pos:column="55"/></index></name> <operator pos:line="57" pos:column="56">==<pos:position pos:line="57" pos:column="58"/></operator> <literal type="char" pos:line="57" pos:column="59">'\0'<pos:position pos:line="57" pos:column="63"/></literal><operator pos:line="57" pos:column="63">)<pos:position pos:line="57" pos:column="64"/></operator><operator pos:line="57" pos:column="64">)<pos:position pos:line="57" pos:column="65"/></operator></expr>)<pos:position pos:line="57" pos:column="66"/></condition><then pos:line="57" pos:column="66"> <block pos:line="57" pos:column="67">{
            <return pos:line="58" pos:column="13">return <expr><literal type="string" pos:line="58" pos:column="20">"error: missing environment variable name. envclause should be in the form env=envar "<pos:position pos:line="58" pos:column="106"/></literal></expr>;<pos:position pos:line="58" pos:column="107"/></return>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="60" pos:column="9">condition_var<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">=<pos:position pos:line="60" pos:column="24"/></operator> <call><name pos:line="60" pos:column="25">apr_pstrdup<pos:position pos:line="60" pos:column="36"/></name><argument_list pos:line="60" pos:column="36">(<argument><expr><name><name pos:line="60" pos:column="37">cmd<pos:position pos:line="60" pos:column="40"/></name><operator pos:line="60" pos:column="40">-&gt;<pos:position pos:line="60" pos:column="45"/></operator><name pos:line="60" pos:column="42">pool<pos:position pos:line="60" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="48">&amp;<pos:position pos:line="60" pos:column="53"/></operator><name><name pos:line="60" pos:column="49">envclause<pos:position pos:line="60" pos:column="58"/></name><index pos:line="60" pos:column="58">[<expr><literal type="number" pos:line="60" pos:column="59">4<pos:position pos:line="60" pos:column="60"/></literal></expr>]<pos:position pos:line="60" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="60" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
    
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><operator pos:line="63" pos:column="9">(<pos:position pos:line="63" pos:column="10"/></operator><name pos:line="63" pos:column="10">colon<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <call><name pos:line="63" pos:column="18">strchr<pos:position pos:line="63" pos:column="24"/></name><argument_list pos:line="63" pos:column="24">(<argument><expr><name pos:line="63" pos:column="25">hdr<pos:position pos:line="63" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="63" pos:column="30">':'<pos:position pos:line="63" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="34"/></argument_list></call><operator pos:line="63" pos:column="34">)<pos:position pos:line="63" pos:column="35"/></operator></expr>)<pos:position pos:line="63" pos:column="36"/></condition><then pos:line="63" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="64" pos:column="9">*<pos:position pos:line="64" pos:column="10"/></operator><name pos:line="64" pos:column="10">colon<pos:position pos:line="64" pos:column="15"/></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator> <literal type="char" pos:line="64" pos:column="18">'\0'<pos:position pos:line="64" pos:column="22"/></literal></expr>;<pos:position pos:line="64" pos:column="23"/></expr_stmt></block></then></if>

    <expr_stmt><expr><operator pos:line="66" pos:column="5">new<pos:position pos:line="66" pos:column="8"/></operator><operator pos:line="66" pos:column="8">-&gt;<pos:position pos:line="66" pos:column="13"/></operator><name pos:line="66" pos:column="10">header<pos:position pos:line="66" pos:column="16"/></name> <operator pos:line="66" pos:column="17">=<pos:position pos:line="66" pos:column="18"/></operator> <name pos:line="66" pos:column="19">hdr<pos:position pos:line="66" pos:column="22"/></name></expr>;<pos:position pos:line="66" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="67" pos:column="5">new<pos:position pos:line="67" pos:column="8"/></operator><operator pos:line="67" pos:column="8">-&gt;<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="10">condition_var<pos:position pos:line="67" pos:column="23"/></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <name pos:line="67" pos:column="26">condition_var<pos:position pos:line="67" pos:column="39"/></name></expr>;<pos:position pos:line="67" pos:column="40"/></expr_stmt>

    <return pos:line="69" pos:column="5">return <expr><call><name pos:line="69" pos:column="12">parse_format_string<pos:position pos:line="69" pos:column="31"/></name><argument_list pos:line="69" pos:column="31">(<argument><expr><name><name pos:line="69" pos:column="32">cmd<pos:position pos:line="69" pos:column="35"/></name><operator pos:line="69" pos:column="35">-&gt;<pos:position pos:line="69" pos:column="40"/></operator><name pos:line="69" pos:column="37">pool<pos:position pos:line="69" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="43">new<pos:position pos:line="69" pos:column="46"/></operator></expr></argument>, <argument><expr><name pos:line="69" pos:column="48">value<pos:position pos:line="69" pos:column="53"/></name></expr></argument>)<pos:position pos:line="69" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="55"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

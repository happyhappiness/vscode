<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1941_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_xlate_t<pos:position pos:line="1" pos:column="19"/></name><modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type> <name pos:line="1" pos:column="21">get_conv_set<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">request_rec<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">r<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">lang_line<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><operator pos:line="3" pos:column="23">(<pos:position pos:line="3" pos:column="24"/></operator><name pos:line="3" pos:column="24">char<pos:position pos:line="3" pos:column="28"/></name><operator pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></operator><operator pos:line="3" pos:column="29">)<pos:position pos:line="3" pos:column="30"/></operator><call><name pos:line="3" pos:column="30">apr_table_get<pos:position pos:line="3" pos:column="43"/></name><argument_list pos:line="3" pos:column="43">(<argument><expr><name><name pos:line="3" pos:column="44">r<pos:position pos:line="3" pos:column="45"/></name><operator pos:line="3" pos:column="45">-&gt;<pos:position pos:line="3" pos:column="50"/></operator><name pos:line="3" pos:column="47">headers_in<pos:position pos:line="3" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="59">"accept-language"<pos:position pos:line="3" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="78"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">lang<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_xlate_t<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">convset<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">lang_line<pos:position pos:line="7" pos:column="18"/></name></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19"> <block pos:line="7" pos:column="20">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">lang_line<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <call><name pos:line="8" pos:column="21">apr_pstrdup<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name><name pos:line="8" pos:column="33">r<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">pool<pos:position pos:line="8" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">lang_line<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>
        <for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">lang<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">lang_line<pos:position pos:line="9" pos:column="30"/></name></expr>;<pos:position pos:line="9" pos:column="31"/></init><condition><expr><operator pos:line="9" pos:column="31">*<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">lang<pos:position pos:line="9" pos:column="36"/></name></expr>;<pos:position pos:line="9" pos:column="37"/></condition><incr><expr><name pos:line="9" pos:column="37">lang<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">++<pos:position pos:line="9" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="44"/></control> <block pos:line="9" pos:column="45">{
            <if pos:line="10" pos:column="13">if <condition pos:line="10" pos:column="16">(<expr><operator pos:line="10" pos:column="17">(<pos:position pos:line="10" pos:column="18"/></operator><operator pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">lang<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">==<pos:position pos:line="10" pos:column="26"/></operator> <literal type="char" pos:line="10" pos:column="27">','<pos:position pos:line="10" pos:column="30"/></literal><operator pos:line="10" pos:column="30">)<pos:position pos:line="10" pos:column="31"/></operator> <operator pos:line="10" pos:column="32">||<pos:position pos:line="10" pos:column="34"/></operator> <operator pos:line="10" pos:column="35">(<pos:position pos:line="10" pos:column="36"/></operator><operator pos:line="10" pos:column="36">*<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="37">lang<pos:position pos:line="10" pos:column="41"/></name> <operator pos:line="10" pos:column="42">==<pos:position pos:line="10" pos:column="44"/></operator> <literal type="char" pos:line="10" pos:column="45">';'<pos:position pos:line="10" pos:column="48"/></literal><operator pos:line="10" pos:column="48">)<pos:position pos:line="10" pos:column="49"/></operator></expr>)<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50"> <block pos:line="10" pos:column="51">{
                <expr_stmt><expr><operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">lang<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <literal type="char" pos:line="11" pos:column="25">'\0'<pos:position pos:line="11" pos:column="29"/></literal></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
                <break pos:line="12" pos:column="17">break;<pos:position pos:line="12" pos:column="23"/></break>
            }<pos:position pos:line="13" pos:column="14"/></block></then></if>
        }<pos:position pos:line="14" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="15" pos:column="9">lang<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">derive_codepage_from_lang<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name><name pos:line="15" pos:column="42">r<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">-&gt;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="45">pool<pos:position pos:line="15" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="51">lang_line<pos:position pos:line="15" pos:column="60"/></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">lang<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">&amp;&amp;<pos:position pos:line="17" pos:column="28"/></operator> <operator pos:line="17" pos:column="21">(<pos:position pos:line="17" pos:column="22"/></operator><call><name pos:line="17" pos:column="22">apr_xlate_open<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><operator pos:line="17" pos:column="37">&amp;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="38">convset<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="47">to_charset<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">lang<pos:position pos:line="17" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="65">r<pos:position pos:line="17" pos:column="66"/></name><operator pos:line="17" pos:column="66">-&gt;<pos:position pos:line="17" pos:column="71"/></operator><name pos:line="17" pos:column="68">pool<pos:position pos:line="17" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call> <operator pos:line="17" pos:column="74">==<pos:position pos:line="17" pos:column="76"/></operator> <name pos:line="17" pos:column="77">APR_SUCCESS<pos:position pos:line="17" pos:column="88"/></name><operator pos:line="17" pos:column="88">)<pos:position pos:line="17" pos:column="89"/></operator></expr>)<pos:position pos:line="17" pos:column="90"/></condition><then pos:line="17" pos:column="90"> <block pos:line="17" pos:column="91">{
            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">convset<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">NULL<pos:position pos:line="22" pos:column="16"/></name></expr>;<pos:position pos:line="22" pos:column="17"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

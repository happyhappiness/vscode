<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_668.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_exec<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">include_ctx_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ctx<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">apr_bucket_brigade<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier><modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">bb<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="2" pos:column="24">request_rec<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">r<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">ap_filter_t<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">f<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">apr_bucket<pos:position pos:line="2" pos:column="66"/></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">head_ptr<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="3" pos:column="24">apr_bucket<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier><modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">inserted_head<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="51"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">tag<pos:position pos:line="5" pos:column="14"/></name>     <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">tag_val<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">file<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name><name pos:line="7" pos:column="18">r<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">filename<pos:position pos:line="7" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_bucket<pos:position pos:line="8" pos:column="15"/></name>  <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">tmp_buck<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">parsed_string<pos:position pos:line="9" pos:column="23"/></name><index pos:line="9" pos:column="23">[<expr><name pos:line="9" pos:column="24">MAX_STRING_LEN<pos:position pos:line="9" pos:column="38"/></name></expr>]<pos:position pos:line="9" pos:column="39"/></index></name></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="11" pos:column="5">*<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">inserted_head<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">NULL<pos:position pos:line="11" pos:column="26"/></name></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">ctx<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">flags<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">&amp;<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="22">FLAG_PRINTING<pos:position pos:line="12" pos:column="35"/></name></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36"> <block pos:line="12" pos:column="37">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">ctx<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">flags<pos:position pos:line="13" pos:column="23"/></name></name> <operator pos:line="13" pos:column="24">&amp;<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="26">FLAG_NO_EXEC<pos:position pos:line="13" pos:column="38"/></name></expr>)<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39"> <block pos:line="13" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">ap_log_rerror<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">APLOG_MARK<pos:position pos:line="14" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="39">APLOG_ERR<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="50">0<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="53">r<pos:position pos:line="14" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="15" pos:column="27">"exec used but not allowed in %s"<pos:position pos:line="15" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="62">r<pos:position pos:line="15" pos:column="63"/></name><operator pos:line="15" pos:column="63">-&gt;<pos:position pos:line="15" pos:column="68"/></operator><name pos:line="15" pos:column="65">filename<pos:position pos:line="15" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">CREATE_ERROR_BUCKET<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">ctx<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">tmp_buck<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">head_ptr<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="58">*<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="59">inserted_head<pos:position pos:line="16" pos:column="72"/></name></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then>
        <else pos:line="18" pos:column="9">else <block pos:line="18" pos:column="14">{
            <while pos:line="19" pos:column="13">while <condition pos:line="19" pos:column="19">(<expr><literal type="number" pos:line="19" pos:column="20">1<pos:position pos:line="19" pos:column="21"/></literal></expr>)<pos:position pos:line="19" pos:column="22"/></condition> <block pos:line="19" pos:column="23">{
                <expr_stmt><expr><call><name pos:line="20" pos:column="17">cgi_pfn_gtv<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">ctx<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="34">&amp;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="35">tag<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="40">&amp;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="41">tag_val<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="50">1<pos:position pos:line="20" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>
                <if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">tag_val<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">==<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="32">NULL<pos:position pos:line="21" pos:column="36"/></name></expr>)<pos:position pos:line="21" pos:column="37"/></condition><then pos:line="21" pos:column="37"> <block pos:line="21" pos:column="38">{
                    <if pos:line="22" pos:column="21">if <condition pos:line="22" pos:column="24">(<expr><name pos:line="22" pos:column="25">tag<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">==<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">NULL<pos:position pos:line="22" pos:column="36"/></name></expr>)<pos:position pos:line="22" pos:column="37"/></condition><then pos:line="22" pos:column="37"> <block pos:line="22" pos:column="38">{
                        <return pos:line="23" pos:column="25">return <expr><literal type="number" pos:line="23" pos:column="32">0<pos:position pos:line="23" pos:column="33"/></literal></expr>;<pos:position pos:line="23" pos:column="34"/></return>
                    }<pos:position pos:line="24" pos:column="22"/></block></then>
                    <else pos:line="25" pos:column="21">else <block pos:line="25" pos:column="26">{
                        <return pos:line="26" pos:column="25">return <expr><literal type="number" pos:line="26" pos:column="32">1<pos:position pos:line="26" pos:column="33"/></literal></expr>;<pos:position pos:line="26" pos:column="34"/></return>
                    }<pos:position pos:line="27" pos:column="22"/></block></else></if>
                }<pos:position pos:line="28" pos:column="18"/></block></then></if>
                <if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><call><name pos:line="29" pos:column="22">strcmp<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">tag<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="34">"cmd"<pos:position pos:line="29" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="41"/></condition><then pos:line="29" pos:column="41"> <block pos:line="29" pos:column="42">{
                    <expr_stmt><expr><call><name pos:line="30" pos:column="21">cgi_pfn_ps<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">r<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="35">ctx<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">tag_val<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">parsed_string<pos:position pos:line="30" pos:column="62"/></name></expr></argument>,
                               <argument><expr><sizeof pos:line="31" pos:column="32">sizeof<argument_list pos:line="31" pos:column="38">(<argument><expr><name pos:line="31" pos:column="39">parsed_string<pos:position pos:line="31" pos:column="52"/></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="55">1<pos:position pos:line="31" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt>
                    <if pos:line="32" pos:column="21">if <condition pos:line="32" pos:column="24">(<expr><call><name pos:line="32" pos:column="25">include_cmd<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><name pos:line="32" pos:column="37">ctx<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">bb<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">parsed_string<pos:position pos:line="32" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="61">r<pos:position pos:line="32" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="64">f<pos:position pos:line="32" pos:column="65"/></name></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call> <operator pos:line="32" pos:column="67">==<pos:position pos:line="32" pos:column="69"/></operator> <operator pos:line="32" pos:column="70">-<pos:position pos:line="32" pos:column="71"/></operator><literal type="number" pos:line="32" pos:column="71">1<pos:position pos:line="32" pos:column="72"/></literal></expr>)<pos:position pos:line="32" pos:column="73"/></condition><then pos:line="32" pos:column="73"> <block pos:line="32" pos:column="74">{
                        <expr_stmt><expr><call><name pos:line="33" pos:column="25">ap_log_rerror<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">APLOG_MARK<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">APLOG_ERR<pos:position pos:line="33" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="62">0<pos:position pos:line="33" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="65">r<pos:position pos:line="33" pos:column="66"/></name></expr></argument>,
                                    <argument><expr><literal type="string" pos:line="34" pos:column="37">"execution failure for parameter \"%s\" "<pos:position pos:line="34" pos:column="78"/></literal>
                                    <literal type="string" pos:line="35" pos:column="37">"to tag exec in file %s"<pos:position pos:line="35" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="63">tag<pos:position pos:line="35" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="68">r<pos:position pos:line="35" pos:column="69"/></name><operator pos:line="35" pos:column="69">-&gt;<pos:position pos:line="35" pos:column="74"/></operator><name pos:line="35" pos:column="71">filename<pos:position pos:line="35" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="81"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="36" pos:column="25">CREATE_ERROR_BUCKET<pos:position pos:line="36" pos:column="44"/></name><argument_list pos:line="36" pos:column="44">(<argument><expr><name pos:line="36" pos:column="45">ctx<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="50">tmp_buck<pos:position pos:line="36" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="60">head_ptr<pos:position pos:line="36" pos:column="68"/></name></expr></argument>,
                                            <argument><expr><operator pos:line="37" pos:column="45">*<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="46">inserted_head<pos:position pos:line="37" pos:column="59"/></name></expr></argument>)<pos:position pos:line="37" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="61"/></expr_stmt>
                    }<pos:position pos:line="38" pos:column="22"/></block></then></if>
                }<pos:position pos:line="39" pos:column="18"/></block></then>
                <elseif pos:line="40" pos:column="17">else <if pos:line="40" pos:column="22">if <condition pos:line="40" pos:column="25">(<expr><operator pos:line="40" pos:column="26">!<pos:position pos:line="40" pos:column="27"/></operator><call><name pos:line="40" pos:column="27">strcmp<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">tag<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="39">"cgi"<pos:position pos:line="40" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="46"/></condition><then pos:line="40" pos:column="46"> <block pos:line="40" pos:column="47">{
                    <decl_stmt><decl><type><name pos:line="41" pos:column="21">apr_status_t<pos:position pos:line="41" pos:column="33"/></name></type> <name pos:line="41" pos:column="34">retval<pos:position pos:line="41" pos:column="40"/></name> <init pos:line="41" pos:column="41">= <expr><name pos:line="41" pos:column="43">APR_SUCCESS<pos:position pos:line="41" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="41" pos:column="55"/></decl_stmt>

                    <expr_stmt><expr><call><name pos:line="43" pos:column="21">cgi_pfn_ps<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name pos:line="43" pos:column="32">r<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="35">ctx<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="40">tag_val<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="49">parsed_string<pos:position pos:line="43" pos:column="62"/></name></expr></argument>,
                               <argument><expr><sizeof pos:line="44" pos:column="32">sizeof<argument_list pos:line="44" pos:column="38">(<argument><expr><name pos:line="44" pos:column="39">parsed_string<pos:position pos:line="44" pos:column="52"/></name></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="55">0<pos:position pos:line="44" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="58"/></expr_stmt>

                    <expr_stmt><expr><call><name pos:line="46" pos:column="21">SPLIT_AND_PASS_PRETAG_BUCKETS<pos:position pos:line="46" pos:column="50"/></name><argument_list pos:line="46" pos:column="50">(<argument><expr><operator pos:line="46" pos:column="51">*<pos:position pos:line="46" pos:column="52"/></operator><name pos:line="46" pos:column="52">bb<pos:position pos:line="46" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="56">ctx<pos:position pos:line="46" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="61">f<pos:position pos:line="46" pos:column="62"/></name><operator pos:line="46" pos:column="62">-&gt;<pos:position pos:line="46" pos:column="67"/></operator><name pos:line="46" pos:column="64">next<pos:position pos:line="46" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="70">retval<pos:position pos:line="46" pos:column="76"/></name></expr></argument>)<pos:position pos:line="46" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="78"/></expr_stmt>
                    <if pos:line="47" pos:column="21">if <condition pos:line="47" pos:column="24">(<expr><name pos:line="47" pos:column="25">retval<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">!=<pos:position pos:line="47" pos:column="34"/></operator> <name pos:line="47" pos:column="35">APR_SUCCESS<pos:position pos:line="47" pos:column="46"/></name></expr>)<pos:position pos:line="47" pos:column="47"/></condition><then pos:line="47" pos:column="47"> <block pos:line="47" pos:column="48">{
                        <return pos:line="48" pos:column="25">return <expr><name pos:line="48" pos:column="32">retval<pos:position pos:line="48" pos:column="38"/></name></expr>;<pos:position pos:line="48" pos:column="39"/></return>
                    }<pos:position pos:line="49" pos:column="22"/></block></then></if>

                    <if pos:line="51" pos:column="21">if <condition pos:line="51" pos:column="24">(<expr><call><name pos:line="51" pos:column="25">include_cgi<pos:position pos:line="51" pos:column="36"/></name><argument_list pos:line="51" pos:column="36">(<argument><expr><name pos:line="51" pos:column="37">parsed_string<pos:position pos:line="51" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="52">r<pos:position pos:line="51" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="55">f<pos:position pos:line="51" pos:column="56"/></name><operator pos:line="51" pos:column="56">-&gt;<pos:position pos:line="51" pos:column="61"/></operator><name pos:line="51" pos:column="58">next<pos:position pos:line="51" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="64">head_ptr<pos:position pos:line="51" pos:column="72"/></name></expr></argument>,
                                    <argument><expr><name pos:line="52" pos:column="37">inserted_head<pos:position pos:line="52" pos:column="50"/></name></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></call> <operator pos:line="52" pos:column="52">==<pos:position pos:line="52" pos:column="54"/></operator> <operator pos:line="52" pos:column="55">-<pos:position pos:line="52" pos:column="56"/></operator><literal type="number" pos:line="52" pos:column="56">1<pos:position pos:line="52" pos:column="57"/></literal></expr>)<pos:position pos:line="52" pos:column="58"/></condition><then pos:line="52" pos:column="58"> <block pos:line="52" pos:column="59">{
                        <expr_stmt><expr><call><name pos:line="53" pos:column="25">ap_log_rerror<pos:position pos:line="53" pos:column="38"/></name><argument_list pos:line="53" pos:column="38">(<argument><expr><name pos:line="53" pos:column="39">APLOG_MARK<pos:position pos:line="53" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="51">APLOG_ERR<pos:position pos:line="53" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="62">0<pos:position pos:line="53" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="65">r<pos:position pos:line="53" pos:column="66"/></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="54" pos:column="39">"invalid CGI ref \"%s\" in %s"<pos:position pos:line="54" pos:column="69"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="55" pos:column="39">tag_val<pos:position pos:line="55" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="48">file<pos:position pos:line="55" pos:column="52"/></name></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="54"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="56" pos:column="25">CREATE_ERROR_BUCKET<pos:position pos:line="56" pos:column="44"/></name><argument_list pos:line="56" pos:column="44">(<argument><expr><name pos:line="56" pos:column="45">ctx<pos:position pos:line="56" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="50">tmp_buck<pos:position pos:line="56" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="60">head_ptr<pos:position pos:line="56" pos:column="68"/></name></expr></argument>,
                                            <argument><expr><operator pos:line="57" pos:column="45">*<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="46">inserted_head<pos:position pos:line="57" pos:column="59"/></name></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="61"/></expr_stmt>
                    }<pos:position pos:line="58" pos:column="22"/></block></then></if>
                }<pos:position pos:line="59" pos:column="18"/></block></then></if></elseif>
                <else pos:line="60" pos:column="17">else <block pos:line="60" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="61" pos:column="21">ap_log_rerror<pos:position pos:line="61" pos:column="34"/></name><argument_list pos:line="61" pos:column="34">(<argument><expr><name pos:line="61" pos:column="35">APLOG_MARK<pos:position pos:line="61" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="47">APLOG_ERR<pos:position pos:line="61" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="58">0<pos:position pos:line="61" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="61">r<pos:position pos:line="61" pos:column="62"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="62" pos:column="35">"unknown parameter \"%s\" to tag exec in %s"<pos:position pos:line="62" pos:column="79"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="63" pos:column="35">tag<pos:position pos:line="63" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="40">file<pos:position pos:line="63" pos:column="44"/></name></expr></argument>)<pos:position pos:line="63" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="64" pos:column="21">CREATE_ERROR_BUCKET<pos:position pos:line="64" pos:column="40"/></name><argument_list pos:line="64" pos:column="40">(<argument><expr><name pos:line="64" pos:column="41">ctx<pos:position pos:line="64" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="46">tmp_buck<pos:position pos:line="64" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="56">head_ptr<pos:position pos:line="64" pos:column="64"/></name></expr></argument>,
                                        <argument><expr><operator pos:line="65" pos:column="41">*<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="42">inserted_head<pos:position pos:line="65" pos:column="55"/></name></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="66" pos:column="18"/></block></else></if>
            }<pos:position pos:line="67" pos:column="14"/></block></while>
        }<pos:position pos:line="68" pos:column="10"/></block></else></if>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>
    <return pos:line="70" pos:column="5">return <expr><literal type="number" pos:line="70" pos:column="12">0<pos:position pos:line="70" pos:column="13"/></literal></expr>;<pos:position pos:line="70" pos:column="14"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

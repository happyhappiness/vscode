<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3803_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">impl_pollset_add<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">apr_pollset_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">pollset<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                     <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">apr_pollfd_t<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">descriptor<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_os_sock_t<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">fd<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">pollset<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">nelts<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">==<pos:position pos:line="6" pos:column="26"/></operator> <name><name pos:line="6" pos:column="27">pollset<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">nalloc<pos:position pos:line="6" pos:column="42"/></name></name></expr>)<pos:position pos:line="6" pos:column="43"/></condition><then pos:line="6" pos:column="43"> <block pos:line="6" pos:column="44">{
        <return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">APR_ENOMEM<pos:position pos:line="7" pos:column="26"/></name></expr>;<pos:position pos:line="7" pos:column="27"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="10" pos:column="5">pollset<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">p<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">query_set<pos:position pos:line="10" pos:column="26"/></name><index pos:line="10" pos:column="26">[<expr><name><name pos:line="10" pos:column="27">pollset<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">nelts<pos:position pos:line="10" pos:column="41"/></name></name></expr>]<pos:position pos:line="10" pos:column="42"/></index></name> <operator pos:line="10" pos:column="43">=<pos:position pos:line="10" pos:column="44"/></operator> <operator pos:line="10" pos:column="45">*<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="46">descriptor<pos:position pos:line="10" pos:column="56"/></name></expr>;<pos:position pos:line="10" pos:column="57"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">descriptor<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">desc_type<pos:position pos:line="12" pos:column="30"/></name></name> <operator pos:line="12" pos:column="31">==<pos:position pos:line="12" pos:column="33"/></operator> <name pos:line="12" pos:column="34">APR_POLL_SOCKET<pos:position pos:line="12" pos:column="49"/></name></expr>)<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50"> <block pos:line="12" pos:column="51">{
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">NETWARE<pos:position pos:line="13" pos:column="15"/></name></cpp:ifdef>
        <comment type="block" pos:line="14" pos:column="9">/* NetWare can't handle mixed descriptor types in select() */</comment>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">HAS_PIPES<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name><name pos:line="15" pos:column="23">pollset<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">p<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">set_type<pos:position pos:line="15" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45"> <block pos:line="15" pos:column="46">{
            <return pos:line="16" pos:column="13">return <expr><name pos:line="16" pos:column="20">APR_EBADF<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></return>
        }<pos:position pos:line="17" pos:column="10"/></block></then>
        <else pos:line="18" pos:column="9">else <block pos:line="18" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="19" pos:column="13">pollset<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">p<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">set_type<pos:position pos:line="19" pos:column="33"/></name></name> <operator pos:line="19" pos:column="34">=<pos:position pos:line="19" pos:column="35"/></operator> <name pos:line="19" pos:column="36">APR_POLL_SOCKET<pos:position pos:line="19" pos:column="51"/></name></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></else></if>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name pos:line="22" pos:column="9">fd<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <name><name pos:line="22" pos:column="14">descriptor<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">-&gt;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="26">desc<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">.<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">s<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">socketdes<pos:position pos:line="22" pos:column="43"/></name></name></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then>
    <else pos:line="24" pos:column="5">else <block pos:line="24" pos:column="10">{
<cpp:if pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">if<pos:position pos:line="25" pos:column="4"/></cpp:directive> <expr><operator pos:line="25" pos:column="5">!<pos:position pos:line="25" pos:column="6"/></operator><name pos:line="25" pos:column="6">APR_FILES_AS_SOCKETS<pos:position pos:line="25" pos:column="26"/></name></expr></cpp:if>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><name><name pos:line="26" pos:column="14">pollset<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">flags<pos:position pos:line="26" pos:column="28"/></name></name> <operator pos:line="26" pos:column="29">&amp;<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="31">APR_POLLSET_WAKEABLE<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">)<pos:position pos:line="26" pos:column="52"/></operator> <operator pos:line="26" pos:column="53">&amp;&amp;<pos:position pos:line="26" pos:column="63"/></operator>
            <name><name pos:line="27" pos:column="13">descriptor<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">-&gt;<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="25">desc<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">f<pos:position pos:line="27" pos:column="31"/></name></name> <operator pos:line="27" pos:column="32">==<pos:position pos:line="27" pos:column="34"/></operator> <name><name pos:line="27" pos:column="35">pollset<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">wakeup_pipe<pos:position pos:line="27" pos:column="55"/></name><index pos:line="27" pos:column="55">[<expr><literal type="number" pos:line="27" pos:column="56">0<pos:position pos:line="27" pos:column="57"/></literal></expr>]<pos:position pos:line="27" pos:column="58"/></index></name></expr>)<pos:position pos:line="27" pos:column="59"/></condition><then pos:line="27" pos:column="59">
            <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="13">fd<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <operator pos:line="28" pos:column="18">(<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">apr_os_sock_t<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">)<pos:position pos:line="28" pos:column="33"/></operator><name><name pos:line="28" pos:column="33">descriptor<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">-&gt;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="45">desc<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">.<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="50">f<pos:position pos:line="28" pos:column="51"/></name><operator pos:line="28" pos:column="51">-&gt;<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="53">filedes<pos:position pos:line="28" pos:column="60"/></name></name></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt></block></then>
        <else pos:line="29" pos:column="9">else
            <block type="pseudo"><return pos:line="30" pos:column="13">return <expr><name pos:line="30" pos:column="20">APR_EBADF<pos:position pos:line="30" pos:column="29"/></name></expr>;<pos:position pos:line="30" pos:column="30"/></return></block></else></if>
<cpp:else pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">else<pos:position pos:line="31" pos:column="6"/></cpp:directive></cpp:else>
<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef<pos:position pos:line="32" pos:column="7"/></cpp:directive> <name pos:line="32" pos:column="8">NETWARE<pos:position pos:line="32" pos:column="15"/></name></cpp:ifdef>
        <comment type="block" pos:line="33" pos:column="9">/* NetWare can't handle mixed descriptor types in select() */</comment>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name><name pos:line="34" pos:column="13">descriptor<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">-&gt;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="25">desc<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">.<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">f<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">-&gt;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="33">is_pipe<pos:position pos:line="34" pos:column="40"/></name></name> <operator pos:line="34" pos:column="41">&amp;&amp;<pos:position pos:line="34" pos:column="51"/></operator> <operator pos:line="34" pos:column="44">!<pos:position pos:line="34" pos:column="45"/></operator><call><name pos:line="34" pos:column="45">HAS_SOCKETS<pos:position pos:line="34" pos:column="56"/></name><argument_list pos:line="34" pos:column="56">(<argument><expr><name><name pos:line="34" pos:column="57">pollset<pos:position pos:line="34" pos:column="64"/></name><operator pos:line="34" pos:column="64">-&gt;<pos:position pos:line="34" pos:column="69"/></operator><name pos:line="34" pos:column="66">p<pos:position pos:line="34" pos:column="67"/></name><operator pos:line="34" pos:column="67">-&gt;<pos:position pos:line="34" pos:column="72"/></operator><name pos:line="34" pos:column="69">set_type<pos:position pos:line="34" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="79"/></condition><then pos:line="34" pos:column="79"> <block pos:line="34" pos:column="80">{
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">pollset<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">p<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">set_type<pos:position pos:line="35" pos:column="33"/></name></name> <operator pos:line="35" pos:column="34">=<pos:position pos:line="35" pos:column="35"/></operator> <name pos:line="35" pos:column="36">APR_POLL_FILE<pos:position pos:line="35" pos:column="49"/></name></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name pos:line="36" pos:column="13">fd<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <name><name pos:line="36" pos:column="18">descriptor<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">-&gt;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="30">desc<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">.<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="35">f<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">-&gt;<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="38">filedes<pos:position pos:line="36" pos:column="45"/></name></name></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then>
        <else pos:line="38" pos:column="9">else <block pos:line="38" pos:column="14">{
            <return pos:line="39" pos:column="13">return <expr><name pos:line="39" pos:column="20">APR_EBADF<pos:position pos:line="39" pos:column="29"/></name></expr>;<pos:position pos:line="39" pos:column="30"/></return>
        }<pos:position pos:line="40" pos:column="10"/></block></else></if>
<cpp:else pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">else<pos:position pos:line="41" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="42" pos:column="9">fd<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <name><name pos:line="42" pos:column="14">descriptor<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">-&gt;<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="26">desc<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">.<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="31">f<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">-&gt;<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="34">filedes<pos:position pos:line="42" pos:column="41"/></name></name></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="45" pos:column="6"/></block></else></if>
<cpp:if pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">if<pos:position pos:line="46" pos:column="4"/></cpp:directive> <expr><operator pos:line="46" pos:column="5">!<pos:position pos:line="46" pos:column="6"/></operator><call><name pos:line="46" pos:column="6">defined<pos:position pos:line="46" pos:column="13"/></name><argument_list pos:line="46" pos:column="13">(<argument><expr><name pos:line="46" pos:column="14">WIN32<pos:position pos:line="46" pos:column="19"/></name></expr></argument>)<pos:position pos:line="46" pos:column="20"/></argument_list></call> <operator pos:line="46" pos:column="21">&amp;&amp;<pos:position pos:line="46" pos:column="31"/></operator> <operator pos:line="46" pos:column="24">!<pos:position pos:line="46" pos:column="25"/></operator><call><name pos:line="46" pos:column="25">defined<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name pos:line="46" pos:column="33">NETWARE<pos:position pos:line="46" pos:column="40"/></name></expr></argument>)<pos:position pos:line="46" pos:column="41"/></argument_list></call></expr></cpp:if>        <comment type="block" pos:line="46" pos:column="49">/* socket sets handled with array of handles */</comment>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">fd<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">&gt;=<pos:position pos:line="47" pos:column="17"/></operator> <name pos:line="47" pos:column="15">FD_SETSIZE<pos:position pos:line="47" pos:column="25"/></name></expr>)<pos:position pos:line="47" pos:column="26"/></condition><then pos:line="47" pos:column="26"> <block pos:line="47" pos:column="27">{
        <comment type="block" pos:line="48" pos:column="9">/* XXX invent new error code so application has a clue */</comment>
        <return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">APR_EBADF<pos:position pos:line="49" pos:column="25"/></name></expr>;<pos:position pos:line="49" pos:column="26"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name><name pos:line="52" pos:column="9">descriptor<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">-&gt;<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="21">reqevents<pos:position pos:line="52" pos:column="30"/></name></name> <operator pos:line="52" pos:column="31">&amp;<pos:position pos:line="52" pos:column="36"/></operator> <name pos:line="52" pos:column="33">APR_POLLIN<pos:position pos:line="52" pos:column="43"/></name></expr>)<pos:position pos:line="52" pos:column="44"/></condition><then pos:line="52" pos:column="44"> <block pos:line="52" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">FD_SET<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><name pos:line="53" pos:column="16">fd<pos:position pos:line="53" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="20">&amp;<pos:position pos:line="53" pos:column="25"/></operator><operator pos:line="53" pos:column="21">(<pos:position pos:line="53" pos:column="22"/></operator><name><name pos:line="53" pos:column="22">pollset<pos:position pos:line="53" pos:column="29"/></name><operator pos:line="53" pos:column="29">-&gt;<pos:position pos:line="53" pos:column="34"/></operator><name pos:line="53" pos:column="31">p<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">-&gt;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="34">readset<pos:position pos:line="53" pos:column="41"/></name></name><operator pos:line="53" pos:column="41">)<pos:position pos:line="53" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="53" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">descriptor<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">-&gt;<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="21">reqevents<pos:position pos:line="55" pos:column="30"/></name></name> <operator pos:line="55" pos:column="31">&amp;<pos:position pos:line="55" pos:column="36"/></operator> <name pos:line="55" pos:column="33">APR_POLLOUT<pos:position pos:line="55" pos:column="44"/></name></expr>)<pos:position pos:line="55" pos:column="45"/></condition><then pos:line="55" pos:column="45"> <block pos:line="55" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">FD_SET<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><name pos:line="56" pos:column="16">fd<pos:position pos:line="56" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="20">&amp;<pos:position pos:line="56" pos:column="25"/></operator><operator pos:line="56" pos:column="21">(<pos:position pos:line="56" pos:column="22"/></operator><name><name pos:line="56" pos:column="22">pollset<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">-&gt;<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="31">p<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">-&gt;<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="34">writeset<pos:position pos:line="56" pos:column="42"/></name></name><operator pos:line="56" pos:column="42">)<pos:position pos:line="56" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="56" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name><name pos:line="58" pos:column="9">descriptor<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">-&gt;<pos:position pos:line="58" pos:column="24"/></operator><name pos:line="58" pos:column="21">reqevents<pos:position pos:line="58" pos:column="30"/></name></name> <operator pos:line="58" pos:column="31">&amp;<pos:position pos:line="58" pos:column="36"/></operator>
        <operator pos:line="59" pos:column="9">(<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">APR_POLLPRI<pos:position pos:line="59" pos:column="21"/></name> <operator pos:line="59" pos:column="22">|<pos:position pos:line="59" pos:column="23"/></operator> <name pos:line="59" pos:column="24">APR_POLLERR<pos:position pos:line="59" pos:column="35"/></name> <operator pos:line="59" pos:column="36">|<pos:position pos:line="59" pos:column="37"/></operator> <name pos:line="59" pos:column="38">APR_POLLHUP<pos:position pos:line="59" pos:column="49"/></name> <operator pos:line="59" pos:column="50">|<pos:position pos:line="59" pos:column="51"/></operator> <name pos:line="59" pos:column="52">APR_POLLNVAL<pos:position pos:line="59" pos:column="64"/></name><operator pos:line="59" pos:column="64">)<pos:position pos:line="59" pos:column="65"/></operator></expr>)<pos:position pos:line="59" pos:column="66"/></condition><then pos:line="59" pos:column="66"> <block pos:line="59" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">FD_SET<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">(<argument><expr><name pos:line="60" pos:column="16">fd<pos:position pos:line="60" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="20">&amp;<pos:position pos:line="60" pos:column="25"/></operator><operator pos:line="60" pos:column="21">(<pos:position pos:line="60" pos:column="22"/></operator><name><name pos:line="60" pos:column="22">pollset<pos:position pos:line="60" pos:column="29"/></name><operator pos:line="60" pos:column="29">-&gt;<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="31">p<pos:position pos:line="60" pos:column="32"/></name><operator pos:line="60" pos:column="32">-&gt;<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="34">exceptset<pos:position pos:line="60" pos:column="43"/></name></name><operator pos:line="60" pos:column="43">)<pos:position pos:line="60" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="60" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><operator pos:line="62" pos:column="9">(<pos:position pos:line="62" pos:column="10"/></operator><name pos:line="62" pos:column="10">int<pos:position pos:line="62" pos:column="13"/></name><operator pos:line="62" pos:column="13">)<pos:position pos:line="62" pos:column="14"/></operator> <name pos:line="62" pos:column="15">fd<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">&gt;<pos:position pos:line="62" pos:column="22"/></operator> <name><name pos:line="62" pos:column="20">pollset<pos:position pos:line="62" pos:column="27"/></name><operator pos:line="62" pos:column="27">-&gt;<pos:position pos:line="62" pos:column="32"/></operator><name pos:line="62" pos:column="29">p<pos:position pos:line="62" pos:column="30"/></name><operator pos:line="62" pos:column="30">-&gt;<pos:position pos:line="62" pos:column="35"/></operator><name pos:line="62" pos:column="32">maxfd<pos:position pos:line="62" pos:column="37"/></name></name></expr>)<pos:position pos:line="62" pos:column="38"/></condition><then pos:line="62" pos:column="38"> <block pos:line="62" pos:column="39">{
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">pollset<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">p<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">-&gt;<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="21">maxfd<pos:position pos:line="63" pos:column="26"/></name></name> <operator pos:line="63" pos:column="27">=<pos:position pos:line="63" pos:column="28"/></operator> <operator pos:line="63" pos:column="29">(<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="30">int<pos:position pos:line="63" pos:column="33"/></name><operator pos:line="63" pos:column="33">)<pos:position pos:line="63" pos:column="34"/></operator> <name pos:line="63" pos:column="35">fd<pos:position pos:line="63" pos:column="37"/></name></expr>;<pos:position pos:line="63" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="65" pos:column="5">pollset<pos:position pos:line="65" pos:column="12"/></name><operator pos:line="65" pos:column="12">-&gt;<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="14">nelts<pos:position pos:line="65" pos:column="19"/></name></name><operator pos:line="65" pos:column="19">++<pos:position pos:line="65" pos:column="21"/></operator></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt>
    <return pos:line="66" pos:column="5">return <expr><name pos:line="66" pos:column="12">APR_SUCCESS<pos:position pos:line="66" pos:column="23"/></name></expr>;<pos:position pos:line="66" pos:column="24"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

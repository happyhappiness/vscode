<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7056.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_providers<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">request_rec<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">r<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_array_header_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">groups<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><call><name pos:line="3" pos:column="34">ap_list_provider_groups<pos:position pos:line="3" pos:column="57"/></name><argument_list pos:line="3" pos:column="57">(<argument><expr><name><name pos:line="3" pos:column="58">r<pos:position pos:line="3" pos:column="59"/></name><operator pos:line="3" pos:column="59">-&gt;<pos:position pos:line="3" pos:column="64"/></operator><name pos:line="3" pos:column="61">pool<pos:position pos:line="3" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ap_list_provider_groups_t<pos:position pos:line="4" pos:column="30"/></name> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type><name pos:line="4" pos:column="32">group<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_array_header_t<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">names<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ap_list_provider_names_t<pos:position pos:line="6" pos:column="29"/></name> <modifier pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></modifier></type><name pos:line="6" pos:column="31">name<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>,<decl><type ref="prev"/><name pos:line="7" pos:column="11">j<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">cur_group<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name pos:line="8" pos:column="29">NULL<pos:position pos:line="8" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">qsort<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><name><name pos:line="10" pos:column="11">groups<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">elts<pos:position pos:line="10" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="25">groups<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">nelts<pos:position pos:line="10" pos:column="38"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="40">sizeof<argument_list pos:line="10" pos:column="46">(<argument><expr><name pos:line="10" pos:column="47">ap_list_provider_groups_t<pos:position pos:line="10" pos:column="72"/></name></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></sizeof></expr></argument>,
          <argument><expr><name pos:line="11" pos:column="11">cmp_provider_groups<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ap_rputs<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><literal type="string" pos:line="12" pos:column="14">"&lt;h2&gt;&lt;a name=\"providers\"&gt;Providers&lt;/a&gt;&lt;/h2&gt;\n&lt;dl&gt;"<pos:position pos:line="12" pos:column="96"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="68">r<pos:position pos:line="12" pos:column="69"/></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>

    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">i<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></init> <condition><expr><name pos:line="14" pos:column="17">i<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">&lt;<pos:position pos:line="14" pos:column="23"/></operator> <name><name pos:line="14" pos:column="21">groups<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">nelts<pos:position pos:line="14" pos:column="34"/></name></name></expr>;<pos:position pos:line="14" pos:column="35"/></condition> <incr><expr><name pos:line="14" pos:column="36">i<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">++<pos:position pos:line="14" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="40"/></control> <block pos:line="14" pos:column="41">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">group<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <operator pos:line="15" pos:column="17">&amp;<pos:position pos:line="15" pos:column="22"/></operator><call><name pos:line="15" pos:column="18">APR_ARRAY_IDX<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">groups<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="40">i<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="43">ap_list_provider_groups_t<pos:position pos:line="15" pos:column="68"/></name></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">cur_group<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">||<pos:position pos:line="16" pos:column="26"/></operator> <call><name pos:line="16" pos:column="27">strcmp<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">cur_group<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="45">group<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">provider_group<pos:position pos:line="16" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call> <operator pos:line="16" pos:column="68">!=<pos:position pos:line="16" pos:column="70"/></operator> <literal type="number" pos:line="16" pos:column="71">0<pos:position pos:line="16" pos:column="72"/></literal></expr>)<pos:position pos:line="16" pos:column="73"/></condition><then pos:line="16" pos:column="73"> <block pos:line="16" pos:column="74">{
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><name pos:line="17" pos:column="17">cur_group<pos:position pos:line="17" pos:column="26"/></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">ap_rputs<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><literal type="string" pos:line="18" pos:column="26">"\n&lt;/dt&gt;\n"<pos:position pos:line="18" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="39">r<pos:position pos:line="18" pos:column="40"/></name></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name pos:line="19" pos:column="13">cur_group<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name><name pos:line="19" pos:column="25">group<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">-&gt;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="32">provider_group<pos:position pos:line="19" pos:column="46"/></name></name></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">ap_rprintf<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">r<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="27">"&lt;dt&gt;&lt;strong&gt;%s&lt;/strong&gt; (version &lt;tt&gt;%s&lt;/tt&gt;):"<pos:position pos:line="20" pos:column="105"/></literal>
                          <literal type="string" pos:line="21" pos:column="27">"\n &lt;br /&gt;\n"<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">cur_group<pos:position pos:line="21" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="53">group<pos:position pos:line="21" pos:column="58"/></name><operator pos:line="21" pos:column="58">-&gt;<pos:position pos:line="21" pos:column="63"/></operator><name pos:line="21" pos:column="60">provider_version<pos:position pos:line="21" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="23" pos:column="9">names<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <call><name pos:line="23" pos:column="17">ap_list_provider_names<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><name><name pos:line="23" pos:column="40">r<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">-&gt;<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="43">pool<pos:position pos:line="23" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="49">group<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">-&gt;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="56">provider_group<pos:position pos:line="23" pos:column="70"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="24" pos:column="40">group<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">provider_version<pos:position pos:line="24" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">qsort<pos:position pos:line="25" pos:column="14"/></name><argument_list pos:line="25" pos:column="14">(<argument><expr><name><name pos:line="25" pos:column="15">names<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">elts<pos:position pos:line="25" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="28">names<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">nelts<pos:position pos:line="25" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="42">sizeof<argument_list pos:line="25" pos:column="48">(<argument><expr><name pos:line="25" pos:column="49">ap_list_provider_names_t<pos:position pos:line="25" pos:column="73"/></name></expr></argument>)<pos:position pos:line="25" pos:column="74"/></argument_list></sizeof></expr></argument>,
              <argument><expr><name pos:line="26" pos:column="15">cmp_provider_names<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
        <for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init><expr><name pos:line="27" pos:column="14">j<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></init> <condition><expr><name pos:line="27" pos:column="21">j<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">&lt;<pos:position pos:line="27" pos:column="27"/></operator> <name><name pos:line="27" pos:column="25">names<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">nelts<pos:position pos:line="27" pos:column="37"/></name></name></expr>;<pos:position pos:line="27" pos:column="38"/></condition> <incr><expr><name pos:line="27" pos:column="39">j<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">++<pos:position pos:line="27" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="43"/></control> <block pos:line="27" pos:column="44">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">name<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <operator pos:line="28" pos:column="20">&amp;<pos:position pos:line="28" pos:column="25"/></operator><call><name pos:line="28" pos:column="21">APR_ARRAY_IDX<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">names<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">j<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="45">ap_list_provider_names_t<pos:position pos:line="28" pos:column="69"/></name></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">ap_rprintf<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">r<pos:position pos:line="29" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="27">"&lt;tt&gt;&amp;nbsp;&amp;nbsp;%s&lt;/tt&gt;&lt;br/&gt;"<pos:position pos:line="29" pos:column="83"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="59">name<pos:position pos:line="29" pos:column="63"/></name><operator pos:line="29" pos:column="63">-&gt;<pos:position pos:line="29" pos:column="68"/></operator><name pos:line="29" pos:column="65">provider_name<pos:position pos:line="29" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></for>
    }<pos:position pos:line="31" pos:column="6"/></block></for>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">cur_group<pos:position pos:line="32" pos:column="18"/></name></expr>)<pos:position pos:line="32" pos:column="19"/></condition><then pos:line="32" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_rputs<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><literal type="string" pos:line="33" pos:column="18">"\n&lt;/dt&gt;\n"<pos:position pos:line="33" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="31">r<pos:position pos:line="33" pos:column="32"/></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ap_rputs<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><literal type="string" pos:line="34" pos:column="14">"&lt;/dl&gt;\n&lt;hr /&gt;\n"<pos:position pos:line="34" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="33">r<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

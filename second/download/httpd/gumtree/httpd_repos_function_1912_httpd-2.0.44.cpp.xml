<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1912_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">getsfunc_BRIGADE<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">buf<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">len<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">void<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">arg<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_bucket_brigade<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">bb<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><operator pos:line="3" pos:column="30">(<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="31">apr_bucket_brigade<pos:position pos:line="3" pos:column="49"/></name> <operator pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></operator><operator pos:line="3" pos:column="51">)<pos:position pos:line="3" pos:column="52"/></operator><name pos:line="3" pos:column="52">arg<pos:position pos:line="3" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">dst_end<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">buf<pos:position pos:line="4" pos:column="30"/></name> <operator pos:line="4" pos:column="31">+<pos:position pos:line="4" pos:column="32"/></operator> <name pos:line="4" pos:column="33">len<pos:position pos:line="4" pos:column="36"/></name> <operator pos:line="4" pos:column="37">-<pos:position pos:line="4" pos:column="38"/></operator> <literal type="number" pos:line="4" pos:column="39">1<pos:position pos:line="4" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt> <comment type="block" pos:line="4" pos:column="42">/* leave room for terminating null */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">dst<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><name pos:line="5" pos:column="17">buf<pos:position pos:line="5" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">e<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><call><name pos:line="6" pos:column="21">APR_BRIGADE_FIRST<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><name pos:line="6" pos:column="39">bb<pos:position pos:line="6" pos:column="41"/></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rv<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">done<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>

    <while pos:line="10" pos:column="5">while <condition pos:line="10" pos:column="11">(<expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">dst<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&lt;<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="19">dst_end<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">)<pos:position pos:line="10" pos:column="27"/></operator> <operator pos:line="10" pos:column="28">&amp;&amp;<pos:position pos:line="10" pos:column="38"/></operator> <operator pos:line="10" pos:column="31">!<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">done<pos:position pos:line="10" pos:column="36"/></name> <operator pos:line="10" pos:column="37">&amp;&amp;<pos:position pos:line="10" pos:column="47"/></operator> <operator pos:line="10" pos:column="40">!<pos:position pos:line="10" pos:column="41"/></operator><call><name pos:line="10" pos:column="41">APR_BUCKET_IS_EOS<pos:position pos:line="10" pos:column="58"/></name><argument_list pos:line="10" pos:column="58">(<argument><expr><name pos:line="10" pos:column="59">e<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="62"/></condition> <block pos:line="10" pos:column="63">{
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">bucket_data<pos:position pos:line="11" pos:column="32"/></name></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">apr_size_t<pos:position pos:line="12" pos:column="19"/></name></type> <name pos:line="12" pos:column="20">bucket_data_len<pos:position pos:line="12" pos:column="35"/></name></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">src<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">char<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">src_end<pos:position pos:line="14" pos:column="28"/></name></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">apr_bucket<pos:position pos:line="15" pos:column="19"/></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type> <name pos:line="15" pos:column="22">next<pos:position pos:line="15" pos:column="26"/></name></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>

        <expr_stmt><expr><name pos:line="17" pos:column="9">rv<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">apr_bucket_read<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">e<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="33">&amp;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="34">bucket_data<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="47">&amp;<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="48">bucket_data_len<pos:position pos:line="17" pos:column="63"/></name></expr></argument>,
                             <argument><expr><name pos:line="18" pos:column="30">APR_BLOCK_READ<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">APR_STATUS_IS_SUCCESS<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">rv<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call> <operator pos:line="19" pos:column="40">||<pos:position pos:line="19" pos:column="42"/></operator> <operator pos:line="19" pos:column="43">(<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="44">bucket_data_len<pos:position pos:line="19" pos:column="59"/></name> <operator pos:line="19" pos:column="60">==<pos:position pos:line="19" pos:column="62"/></operator> <literal type="number" pos:line="19" pos:column="63">0<pos:position pos:line="19" pos:column="64"/></literal><operator pos:line="19" pos:column="64">)<pos:position pos:line="19" pos:column="65"/></operator></expr>)<pos:position pos:line="19" pos:column="66"/></condition><then pos:line="19" pos:column="66"> <block pos:line="19" pos:column="67">{
            <return pos:line="20" pos:column="13">return <expr><literal type="number" pos:line="20" pos:column="20">0<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></return>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="22" pos:column="9">src<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">bucket_data<pos:position pos:line="22" pos:column="26"/></name></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">src_end<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">bucket_data<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">+<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="33">bucket_data_len<pos:position pos:line="23" pos:column="48"/></name></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
        <while pos:line="24" pos:column="9">while <condition pos:line="24" pos:column="15">(<expr><operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">src<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">&lt;<pos:position pos:line="24" pos:column="25"/></operator> <name pos:line="24" pos:column="23">src_end<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">)<pos:position pos:line="24" pos:column="31"/></operator> <operator pos:line="24" pos:column="32">&amp;&amp;<pos:position pos:line="24" pos:column="42"/></operator> <operator pos:line="24" pos:column="35">(<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="36">dst<pos:position pos:line="24" pos:column="39"/></name> <operator pos:line="24" pos:column="40">&lt;<pos:position pos:line="24" pos:column="44"/></operator> <name pos:line="24" pos:column="42">dst_end<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">)<pos:position pos:line="24" pos:column="50"/></operator> <operator pos:line="24" pos:column="51">&amp;&amp;<pos:position pos:line="24" pos:column="61"/></operator> <operator pos:line="24" pos:column="54">!<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="55">done<pos:position pos:line="24" pos:column="59"/></name></expr>)<pos:position pos:line="24" pos:column="60"/></condition> <block pos:line="24" pos:column="61">{
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><operator pos:line="25" pos:column="17">*<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">src<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">==<pos:position pos:line="25" pos:column="24"/></operator> <literal type="char" pos:line="25" pos:column="25">'\n'<pos:position pos:line="25" pos:column="29"/></literal></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30"> <block pos:line="25" pos:column="31">{
                <expr_stmt><expr><name pos:line="26" pos:column="17">done<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <literal type="number" pos:line="26" pos:column="24">1<pos:position pos:line="26" pos:column="25"/></literal></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></then>
            <elseif pos:line="28" pos:column="13">else <if pos:line="28" pos:column="18">if <condition pos:line="28" pos:column="21">(<expr><operator pos:line="28" pos:column="22">*<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">src<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">!=<pos:position pos:line="28" pos:column="29"/></operator> <literal type="char" pos:line="28" pos:column="30">'\r'<pos:position pos:line="28" pos:column="34"/></literal></expr>)<pos:position pos:line="28" pos:column="35"/></condition><then pos:line="28" pos:column="35"> <block pos:line="28" pos:column="36">{
                <expr_stmt><expr><operator pos:line="29" pos:column="17">*<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">dst<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">++<pos:position pos:line="29" pos:column="23"/></operator> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <operator pos:line="29" pos:column="26">*<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="27">src<pos:position pos:line="29" pos:column="30"/></name></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if></elseif></if>
            <expr_stmt><expr><name pos:line="31" pos:column="13">src<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">++<pos:position pos:line="31" pos:column="18"/></operator></expr>;<pos:position pos:line="31" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></while>

        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">src<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">&lt;<pos:position pos:line="34" pos:column="21"/></operator> <name pos:line="34" pos:column="19">src_end<pos:position pos:line="34" pos:column="26"/></name></expr>)<pos:position pos:line="34" pos:column="27"/></condition><then pos:line="34" pos:column="27"> <block pos:line="34" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">apr_bucket_split<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">e<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="33">src<pos:position pos:line="35" pos:column="36"/></name> <operator pos:line="35" pos:column="37">-<pos:position pos:line="35" pos:column="38"/></operator> <name pos:line="35" pos:column="39">bucket_data<pos:position pos:line="35" pos:column="50"/></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="37" pos:column="9">next<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">APR_BUCKET_NEXT<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name pos:line="37" pos:column="32">e<pos:position pos:line="37" pos:column="33"/></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">APR_BUCKET_REMOVE<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><name pos:line="38" pos:column="27">e<pos:position pos:line="38" pos:column="28"/></name></expr></argument>)<pos:position pos:line="38" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">apr_bucket_destroy<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">e<pos:position pos:line="39" pos:column="29"/></name></expr></argument>)<pos:position pos:line="39" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="40" pos:column="9">e<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <name pos:line="40" pos:column="13">next<pos:position pos:line="40" pos:column="17"/></name></expr>;<pos:position pos:line="40" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></while>
    <expr_stmt><expr><operator pos:line="42" pos:column="5">*<pos:position pos:line="42" pos:column="6"/></operator><name pos:line="42" pos:column="6">dst<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <literal type="number" pos:line="42" pos:column="12">0<pos:position pos:line="42" pos:column="13"/></literal></expr>;<pos:position pos:line="42" pos:column="14"/></expr_stmt>
    <return pos:line="43" pos:column="5">return <expr><literal type="number" pos:line="43" pos:column="12">1<pos:position pos:line="43" pos:column="13"/></literal></expr>;<pos:position pos:line="43" pos:column="14"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

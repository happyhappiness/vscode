<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_530_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_cookie_exp<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">cmd_parms<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">parms<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">void<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">dummy<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                                  <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">arg<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">cookie_log_state<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">cls<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">time_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">factor<pos:position pos:line="5" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="20">modifier<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><literal type="number" pos:line="5" pos:column="31">0<pos:position pos:line="5" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">time_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">num<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">word<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">cls<pos:position pos:line="9" pos:column="8"/></name>  <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <call><name pos:line="9" pos:column="12">ap_get_module_config<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name><name pos:line="9" pos:column="33">parms<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">server<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">-&gt;<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="48">module_config<pos:position pos:line="9" pos:column="61"/></name></name></expr></argument>,
                                <argument><expr><operator pos:line="10" pos:column="33">&amp;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="34">usertrack_module<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
    <comment type="block" pos:line="11" pos:column="5">/* The simple case first - all numbers (we assume) */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">apr_isdigit<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name><name pos:line="12" pos:column="21">arg<pos:position pos:line="12" pos:column="24"/></name><index pos:line="12" pos:column="24">[<expr><literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr>]<pos:position pos:line="12" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call> <operator pos:line="12" pos:column="29">&amp;&amp;<pos:position pos:line="12" pos:column="39"/></operator> <call><name pos:line="12" pos:column="32">apr_isdigit<pos:position pos:line="12" pos:column="43"/></name><argument_list pos:line="12" pos:column="43">(<argument><expr><name><name pos:line="12" pos:column="44">arg<pos:position pos:line="12" pos:column="47"/></name><index pos:line="12" pos:column="47">[<expr><call><name pos:line="12" pos:column="48">strlen<pos:position pos:line="12" pos:column="54"/></name><argument_list pos:line="12" pos:column="54">(<argument><expr><name pos:line="12" pos:column="55">arg<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call> <operator pos:line="12" pos:column="60">-<pos:position pos:line="12" pos:column="61"/></operator> <literal type="number" pos:line="12" pos:column="62">1<pos:position pos:line="12" pos:column="63"/></literal></expr>]<pos:position pos:line="12" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="66"/></condition><then pos:line="12" pos:column="66"> <block pos:line="12" pos:column="67">{
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">cls<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">expires<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <call><name pos:line="13" pos:column="24">atol<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">arg<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/*
     * The harder case - stolen from mod_expires
     *
     * CookieExpires "[plus] {&lt;num&gt; &lt;type&gt;}*"
     */</comment>

    <expr_stmt><expr><name pos:line="23" pos:column="5">word<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <call><name pos:line="23" pos:column="12">ap_getword_conf<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name><name pos:line="23" pos:column="28">parms<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">-&gt;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="35">pool<pos:position pos:line="23" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="41">&amp;<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="42">arg<pos:position pos:line="23" pos:column="45"/></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><call><name pos:line="24" pos:column="10">strncasecmp<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">word<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="28">"plus"<pos:position pos:line="24" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="36">1<pos:position pos:line="24" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="39"/></condition><then pos:line="24" pos:column="39"> <block pos:line="24" pos:column="40">{
        <expr_stmt><expr><name pos:line="25" pos:column="9">word<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">ap_getword_conf<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name><name pos:line="25" pos:column="32">parms<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">pool<pos:position pos:line="25" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="45">&amp;<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="46">arg<pos:position pos:line="25" pos:column="49"/></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if><empty_stmt pos:line="26" pos:column="6">;<pos:position pos:line="26" pos:column="7"/></empty_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* {&lt;num&gt; &lt;type&gt;}* */</comment>
    <while pos:line="29" pos:column="5">while <condition pos:line="29" pos:column="11">(<expr><name><name pos:line="29" pos:column="12">word<pos:position pos:line="29" pos:column="16"/></name><index pos:line="29" pos:column="16">[<expr><literal type="number" pos:line="29" pos:column="17">0<pos:position pos:line="29" pos:column="18"/></literal></expr>]<pos:position pos:line="29" pos:column="19"/></index></name></expr>)<pos:position pos:line="29" pos:column="20"/></condition> <block pos:line="29" pos:column="21">{
        <comment type="block" pos:line="30" pos:column="9">/* &lt;num&gt; */</comment>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">apr_isdigit<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name><name pos:line="31" pos:column="25">word<pos:position pos:line="31" pos:column="29"/></name><index pos:line="31" pos:column="29">[<expr><literal type="number" pos:line="31" pos:column="30">0<pos:position pos:line="31" pos:column="31"/></literal></expr>]<pos:position pos:line="31" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="34"/></condition><then pos:line="31" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="13">num<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <call><name pos:line="32" pos:column="19">atoi<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name pos:line="32" pos:column="24">word<pos:position pos:line="32" pos:column="28"/></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt></block></then>
        <else pos:line="33" pos:column="9">else
            <block type="pseudo"><return pos:line="34" pos:column="13">return <expr><literal type="string" pos:line="34" pos:column="20">"bad expires code, numeric value expected."<pos:position pos:line="34" pos:column="63"/></literal></expr>;<pos:position pos:line="34" pos:column="64"/></return></block></else></if>

        <comment type="block" pos:line="36" pos:column="9">/* &lt;type&gt; */</comment>
        <expr_stmt><expr><name pos:line="37" pos:column="9">word<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">ap_getword_conf<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name><name pos:line="37" pos:column="32">parms<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">pool<pos:position pos:line="37" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="45">&amp;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="46">arg<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><name><name pos:line="38" pos:column="14">word<pos:position pos:line="38" pos:column="18"/></name><index pos:line="38" pos:column="18">[<expr><literal type="number" pos:line="38" pos:column="19">0<pos:position pos:line="38" pos:column="20"/></literal></expr>]<pos:position pos:line="38" pos:column="21"/></index></name></expr>)<pos:position pos:line="38" pos:column="22"/></condition><then pos:line="38" pos:column="22">
            <block type="pseudo"><return pos:line="39" pos:column="13">return <expr><literal type="string" pos:line="39" pos:column="20">"bad expires code, missing &lt;type&gt;"<pos:position pos:line="39" pos:column="60"/></literal></expr>;<pos:position pos:line="39" pos:column="55"/></return></block></then></if>

        <expr_stmt><expr><name pos:line="41" pos:column="9">factor<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <literal type="number" pos:line="41" pos:column="18">0<pos:position pos:line="41" pos:column="19"/></literal></expr>;<pos:position pos:line="41" pos:column="20"/></expr_stmt>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><call><name pos:line="42" pos:column="14">strncasecmp<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">word<pos:position pos:line="42" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="32">"years"<pos:position pos:line="42" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="41">1<pos:position pos:line="42" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="44"/></condition><then pos:line="42" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="13">factor<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <literal type="number" pos:line="43" pos:column="22">60<pos:position pos:line="43" pos:column="24"/></literal> <operator pos:line="43" pos:column="25">*<pos:position pos:line="43" pos:column="26"/></operator> <literal type="number" pos:line="43" pos:column="27">60<pos:position pos:line="43" pos:column="29"/></literal> <operator pos:line="43" pos:column="30">*<pos:position pos:line="43" pos:column="31"/></operator> <literal type="number" pos:line="43" pos:column="32">24<pos:position pos:line="43" pos:column="34"/></literal> <operator pos:line="43" pos:column="35">*<pos:position pos:line="43" pos:column="36"/></operator> <literal type="number" pos:line="43" pos:column="37">365<pos:position pos:line="43" pos:column="40"/></literal></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt></block></then>
        <elseif pos:line="44" pos:column="9">else <if pos:line="44" pos:column="14">if <condition pos:line="44" pos:column="17">(<expr><operator pos:line="44" pos:column="18">!<pos:position pos:line="44" pos:column="19"/></operator><call><name pos:line="44" pos:column="19">strncasecmp<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">word<pos:position pos:line="44" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="37">"months"<pos:position pos:line="44" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="47">2<pos:position pos:line="44" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="50"/></condition><then pos:line="44" pos:column="50">
            <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="13">factor<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <literal type="number" pos:line="45" pos:column="22">60<pos:position pos:line="45" pos:column="24"/></literal> <operator pos:line="45" pos:column="25">*<pos:position pos:line="45" pos:column="26"/></operator> <literal type="number" pos:line="45" pos:column="27">60<pos:position pos:line="45" pos:column="29"/></literal> <operator pos:line="45" pos:column="30">*<pos:position pos:line="45" pos:column="31"/></operator> <literal type="number" pos:line="45" pos:column="32">24<pos:position pos:line="45" pos:column="34"/></literal> <operator pos:line="45" pos:column="35">*<pos:position pos:line="45" pos:column="36"/></operator> <literal type="number" pos:line="45" pos:column="37">30<pos:position pos:line="45" pos:column="39"/></literal></expr>;<pos:position pos:line="45" pos:column="40"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="46" pos:column="9">else <if pos:line="46" pos:column="14">if <condition pos:line="46" pos:column="17">(<expr><operator pos:line="46" pos:column="18">!<pos:position pos:line="46" pos:column="19"/></operator><call><name pos:line="46" pos:column="19">strncasecmp<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><name pos:line="46" pos:column="31">word<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="37">"weeks"<pos:position pos:line="46" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="46">1<pos:position pos:line="46" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="49"/></condition><then pos:line="46" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="13">factor<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <literal type="number" pos:line="47" pos:column="22">60<pos:position pos:line="47" pos:column="24"/></literal> <operator pos:line="47" pos:column="25">*<pos:position pos:line="47" pos:column="26"/></operator> <literal type="number" pos:line="47" pos:column="27">60<pos:position pos:line="47" pos:column="29"/></literal> <operator pos:line="47" pos:column="30">*<pos:position pos:line="47" pos:column="31"/></operator> <literal type="number" pos:line="47" pos:column="32">24<pos:position pos:line="47" pos:column="34"/></literal> <operator pos:line="47" pos:column="35">*<pos:position pos:line="47" pos:column="36"/></operator> <literal type="number" pos:line="47" pos:column="37">7<pos:position pos:line="47" pos:column="38"/></literal></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="48" pos:column="9">else <if pos:line="48" pos:column="14">if <condition pos:line="48" pos:column="17">(<expr><operator pos:line="48" pos:column="18">!<pos:position pos:line="48" pos:column="19"/></operator><call><name pos:line="48" pos:column="19">strncasecmp<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><name pos:line="48" pos:column="31">word<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="37">"days"<pos:position pos:line="48" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="45">1<pos:position pos:line="48" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="48"/></condition><then pos:line="48" pos:column="48">
            <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="13">factor<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">=<pos:position pos:line="49" pos:column="21"/></operator> <literal type="number" pos:line="49" pos:column="22">60<pos:position pos:line="49" pos:column="24"/></literal> <operator pos:line="49" pos:column="25">*<pos:position pos:line="49" pos:column="26"/></operator> <literal type="number" pos:line="49" pos:column="27">60<pos:position pos:line="49" pos:column="29"/></literal> <operator pos:line="49" pos:column="30">*<pos:position pos:line="49" pos:column="31"/></operator> <literal type="number" pos:line="49" pos:column="32">24<pos:position pos:line="49" pos:column="34"/></literal></expr>;<pos:position pos:line="49" pos:column="35"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="50" pos:column="9">else <if pos:line="50" pos:column="14">if <condition pos:line="50" pos:column="17">(<expr><operator pos:line="50" pos:column="18">!<pos:position pos:line="50" pos:column="19"/></operator><call><name pos:line="50" pos:column="19">strncasecmp<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">word<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="37">"hours"<pos:position pos:line="50" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="46">1<pos:position pos:line="50" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="49"/></condition><then pos:line="50" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="13">factor<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <literal type="number" pos:line="51" pos:column="22">60<pos:position pos:line="51" pos:column="24"/></literal> <operator pos:line="51" pos:column="25">*<pos:position pos:line="51" pos:column="26"/></operator> <literal type="number" pos:line="51" pos:column="27">60<pos:position pos:line="51" pos:column="29"/></literal></expr>;<pos:position pos:line="51" pos:column="30"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="52" pos:column="9">else <if pos:line="52" pos:column="14">if <condition pos:line="52" pos:column="17">(<expr><operator pos:line="52" pos:column="18">!<pos:position pos:line="52" pos:column="19"/></operator><call><name pos:line="52" pos:column="19">strncasecmp<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">word<pos:position pos:line="52" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="37">"minutes"<pos:position pos:line="52" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="48">2<pos:position pos:line="52" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="51"/></condition><then pos:line="52" pos:column="51">
            <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="13">factor<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">=<pos:position pos:line="53" pos:column="21"/></operator> <literal type="number" pos:line="53" pos:column="22">60<pos:position pos:line="53" pos:column="24"/></literal></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="54" pos:column="9">else <if pos:line="54" pos:column="14">if <condition pos:line="54" pos:column="17">(<expr><operator pos:line="54" pos:column="18">!<pos:position pos:line="54" pos:column="19"/></operator><call><name pos:line="54" pos:column="19">strncasecmp<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name pos:line="54" pos:column="31">word<pos:position pos:line="54" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="37">"seconds"<pos:position pos:line="54" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="48">1<pos:position pos:line="54" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="51"/></condition><then pos:line="54" pos:column="51">
            <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="13">factor<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">=<pos:position pos:line="55" pos:column="21"/></operator> <literal type="number" pos:line="55" pos:column="22">1<pos:position pos:line="55" pos:column="23"/></literal></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt></block></then></if></elseif>
        <else pos:line="56" pos:column="9">else
            <block type="pseudo"><return pos:line="57" pos:column="13">return <expr><literal type="string" pos:line="57" pos:column="20">"bad expires code, unrecognized type"<pos:position pos:line="57" pos:column="57"/></literal></expr>;<pos:position pos:line="57" pos:column="58"/></return></block></else></if>

        <expr_stmt><expr><name pos:line="59" pos:column="9">modifier<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">=<pos:position pos:line="59" pos:column="19"/></operator> <name pos:line="59" pos:column="20">modifier<pos:position pos:line="59" pos:column="28"/></name> <operator pos:line="59" pos:column="29">+<pos:position pos:line="59" pos:column="30"/></operator> <name pos:line="59" pos:column="31">factor<pos:position pos:line="59" pos:column="37"/></name> <operator pos:line="59" pos:column="38">*<pos:position pos:line="59" pos:column="39"/></operator> <name pos:line="59" pos:column="40">num<pos:position pos:line="59" pos:column="43"/></name></expr>;<pos:position pos:line="59" pos:column="44"/></expr_stmt>

        <comment type="block" pos:line="61" pos:column="9">/* next &lt;num&gt; */</comment>
        <expr_stmt><expr><name pos:line="62" pos:column="9">word<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <call><name pos:line="62" pos:column="16">ap_getword_conf<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name><name pos:line="62" pos:column="32">parms<pos:position pos:line="62" pos:column="37"/></name><operator pos:line="62" pos:column="37">-&gt;<pos:position pos:line="62" pos:column="42"/></operator><name pos:line="62" pos:column="39">pool<pos:position pos:line="62" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="45">&amp;<pos:position pos:line="62" pos:column="50"/></operator><name pos:line="62" pos:column="46">arg<pos:position pos:line="62" pos:column="49"/></name></expr></argument>)<pos:position pos:line="62" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></while>

    <expr_stmt><expr><name><name pos:line="65" pos:column="5">cls<pos:position pos:line="65" pos:column="8"/></name><operator pos:line="65" pos:column="8">-&gt;<pos:position pos:line="65" pos:column="13"/></operator><name pos:line="65" pos:column="10">expires<pos:position pos:line="65" pos:column="17"/></name></name> <operator pos:line="65" pos:column="18">=<pos:position pos:line="65" pos:column="19"/></operator> <name pos:line="65" pos:column="20">modifier<pos:position pos:line="65" pos:column="28"/></name></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>

    <return pos:line="67" pos:column="5">return <expr><name pos:line="67" pos:column="12">NULL<pos:position pos:line="67" pos:column="16"/></name></expr>;<pos:position pos:line="67" pos:column="17"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

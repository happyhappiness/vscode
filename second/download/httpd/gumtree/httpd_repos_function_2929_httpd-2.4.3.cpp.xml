<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2929_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">op_ipmatch<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">ap_expr_eval_ctx_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ctx<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">void<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">data<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="66">const<pos:position pos:line="1" pos:column="71"/></specifier> <name pos:line="1" pos:column="72">char<pos:position pos:line="1" pos:column="76"/></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">arg1<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>,
                <parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">arg2<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_ipsubnet_t<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">subnet<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">apr_ipsubnet_t<pos:position pos:line="4" pos:column="45"/></name> <operator pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></operator><operator pos:line="4" pos:column="47">)<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="48">data<pos:position pos:line="4" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_sockaddr_t<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">saddr<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">subnet<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">!=<pos:position pos:line="7" pos:column="30"/></operator> <name pos:line="7" pos:column="31">NULL<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* maybe log an error if this goes wrong? */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">apr_sockaddr_info_get<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><operator pos:line="10" pos:column="31">&amp;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="32">saddr<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">arg1<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="45">APR_UNSPEC<pos:position pos:line="10" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="57">0<pos:position pos:line="10" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="60">0<pos:position pos:line="10" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="63">ctx<pos:position pos:line="10" pos:column="66"/></name><operator pos:line="10" pos:column="66">-&gt;<pos:position pos:line="10" pos:column="71"/></operator><name pos:line="10" pos:column="68">p<pos:position pos:line="10" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call> <operator pos:line="10" pos:column="71">!=<pos:position pos:line="10" pos:column="73"/></operator> <name pos:line="10" pos:column="74">APR_SUCCESS<pos:position pos:line="10" pos:column="85"/></name></expr>)<pos:position pos:line="10" pos:column="86"/></condition><then pos:line="10" pos:column="86">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">FALSE<pos:position pos:line="11" pos:column="21"/></name></expr>;<pos:position pos:line="11" pos:column="22"/></return></block></then></if>

    <return pos:line="13" pos:column="5">return <expr><call><name pos:line="13" pos:column="12">apr_ipsubnet_test<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">subnet<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="38">saddr<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2230_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">pod_signal_internal<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">ap_pod_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">pod<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">graceful<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">char_of_death<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><ternary><condition><expr><name pos:line="4" pos:column="26">graceful<pos:position pos:line="4" pos:column="34"/></name></expr> ?<pos:position pos:line="4" pos:column="36"/></condition><then pos:line="4" pos:column="36"> <expr><name pos:line="4" pos:column="37">GRACEFUL_CHAR<pos:position pos:line="4" pos:column="50"/></name></expr> <pos:position pos:line="4" pos:column="51"/></then><else pos:line="4" pos:column="51">: <expr><name pos:line="4" pos:column="53">RESTART_CHAR<pos:position pos:line="4" pos:column="65"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">one<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">1<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

    <do pos:line="7" pos:column="5">do <block pos:line="7" pos:column="8">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">rv<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">apr_file_write<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name><name pos:line="8" pos:column="29">pod<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">pod_out<pos:position pos:line="8" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="43">&amp;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="44">char_of_death<pos:position pos:line="8" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="59">&amp;<pos:position pos:line="8" pos:column="64"/></operator><name pos:line="8" pos:column="60">one<pos:position pos:line="8" pos:column="63"/></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block> while <condition pos:line="9" pos:column="13">(<expr><call><name pos:line="9" pos:column="14">APR_STATUS_IS_EINTR<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">rv<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="38"/></condition>;<pos:position pos:line="9" pos:column="39"/></do>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">rv<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">!=<pos:position pos:line="10" pos:column="14"/></operator> <name pos:line="10" pos:column="15">APR_SUCCESS<pos:position pos:line="10" pos:column="26"/></name></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27"> <block pos:line="10" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ap_log_error<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">APLOG_MARK<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">APLOG_WARNING<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">rv<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">ap_server_conf<pos:position pos:line="11" pos:column="67"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="12" pos:column="22">"write pipe_of_death"<pos:position pos:line="12" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">rv<pos:position pos:line="14" pos:column="14"/></name></expr>;<pos:position pos:line="14" pos:column="15"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

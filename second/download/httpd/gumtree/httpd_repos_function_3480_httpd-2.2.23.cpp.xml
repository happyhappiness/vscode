<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3480_httpd-2.2.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">FARPROC<pos:position pos:line="1" pos:column="8"/></name></type> <name pos:line="1" pos:column="9">apr_load_dll_func<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">apr_dlltoken_e<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">fnLib<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name><modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type> <name pos:line="1" pos:column="55">fnName<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">ordinal<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><name><name pos:line="3" pos:column="10">lateDllHandle<pos:position pos:line="3" pos:column="23"/></name><index pos:line="3" pos:column="23">[<expr><name pos:line="3" pos:column="24">fnLib<pos:position pos:line="3" pos:column="29"/></name></expr>]<pos:position pos:line="3" pos:column="30"/></index></name></expr>)<pos:position pos:line="3" pos:column="31"/></condition><then pos:line="3" pos:column="31"> <block pos:line="3" pos:column="32">{ 
        <expr_stmt><expr><name><name pos:line="4" pos:column="9">lateDllHandle<pos:position pos:line="4" pos:column="22"/></name><index pos:line="4" pos:column="22">[<expr><name pos:line="4" pos:column="23">fnLib<pos:position pos:line="4" pos:column="28"/></name></expr>]<pos:position pos:line="4" pos:column="29"/></index></name> <operator pos:line="4" pos:column="30">=<pos:position pos:line="4" pos:column="31"/></operator> <call><name pos:line="4" pos:column="32">LoadLibraryA<pos:position pos:line="4" pos:column="44"/></name><argument_list pos:line="4" pos:column="44">(<argument><expr><name><name pos:line="4" pos:column="45">lateDllName<pos:position pos:line="4" pos:column="56"/></name><index pos:line="4" pos:column="56">[<expr><name pos:line="4" pos:column="57">fnLib<pos:position pos:line="4" pos:column="62"/></name></expr>]<pos:position pos:line="4" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="65"/></expr_stmt>
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name><name pos:line="5" pos:column="14">lateDllHandle<pos:position pos:line="5" pos:column="27"/></name><index pos:line="5" pos:column="27">[<expr><name pos:line="5" pos:column="28">fnLib<pos:position pos:line="5" pos:column="33"/></name></expr>]<pos:position pos:line="5" pos:column="34"/></index></name></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35">
            <block type="pseudo"><return pos:line="6" pos:column="13">return <expr><name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr>;<pos:position pos:line="6" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><call><name pos:line="8" pos:column="5">defined<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">_WIN32_WCE<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr></cpp:if>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">ordinal<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition><then pos:line="9" pos:column="17">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><call><name pos:line="10" pos:column="16">GetProcAddressA<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name><name pos:line="10" pos:column="32">lateDllHandle<pos:position pos:line="10" pos:column="45"/></name><index pos:line="10" pos:column="45">[<expr><name pos:line="10" pos:column="46">fnLib<pos:position pos:line="10" pos:column="51"/></name></expr>]<pos:position pos:line="10" pos:column="52"/></index></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="54">(<pos:position pos:line="10" pos:column="55"/></operator><specifier pos:line="10" pos:column="55">const<pos:position pos:line="10" pos:column="60"/></specifier> <name pos:line="10" pos:column="61">char<pos:position pos:line="10" pos:column="65"/></name> <operator pos:line="10" pos:column="66">*<pos:position pos:line="10" pos:column="67"/></operator><operator pos:line="10" pos:column="67">)<pos:position pos:line="10" pos:column="68"/></operator>
                                                     <operator pos:line="11" pos:column="54">(<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="55">apr_ssize_t<pos:position pos:line="11" pos:column="66"/></name><operator pos:line="11" pos:column="66">)<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="67">ordinal<pos:position pos:line="11" pos:column="74"/></name></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="76"/></return></block></then>
    <else pos:line="12" pos:column="5">else
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><call><name pos:line="13" pos:column="16">GetProcAddressA<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name><name pos:line="13" pos:column="32">lateDllHandle<pos:position pos:line="13" pos:column="45"/></name><index pos:line="13" pos:column="45">[<expr><name pos:line="13" pos:column="46">fnLib<pos:position pos:line="13" pos:column="51"/></name></expr>]<pos:position pos:line="13" pos:column="52"/></index></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="54">fnName<pos:position pos:line="13" pos:column="60"/></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="62"/></return></block></else></if>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">ordinal<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><call><name pos:line="16" pos:column="16">GetProcAddress<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name><name pos:line="16" pos:column="31">lateDllHandle<pos:position pos:line="16" pos:column="44"/></name><index pos:line="16" pos:column="44">[<expr><name pos:line="16" pos:column="45">fnLib<pos:position pos:line="16" pos:column="50"/></name></expr>]<pos:position pos:line="16" pos:column="51"/></index></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="53">(<pos:position pos:line="16" pos:column="54"/></operator><specifier pos:line="16" pos:column="54">const<pos:position pos:line="16" pos:column="59"/></specifier> <name pos:line="16" pos:column="60">char<pos:position pos:line="16" pos:column="64"/></name> <operator pos:line="16" pos:column="65">*<pos:position pos:line="16" pos:column="66"/></operator><operator pos:line="16" pos:column="66">)<pos:position pos:line="16" pos:column="67"/></operator>
                                                    <operator pos:line="17" pos:column="53">(<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="54">apr_ssize_t<pos:position pos:line="17" pos:column="65"/></name><operator pos:line="17" pos:column="65">)<pos:position pos:line="17" pos:column="66"/></operator><name pos:line="17" pos:column="66">ordinal<pos:position pos:line="17" pos:column="73"/></name></expr></argument>)<pos:position pos:line="17" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="75"/></return></block></then>
    <else pos:line="18" pos:column="5">else
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><call><name pos:line="19" pos:column="16">GetProcAddress<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name><name pos:line="19" pos:column="31">lateDllHandle<pos:position pos:line="19" pos:column="44"/></name><index pos:line="19" pos:column="44">[<expr><name pos:line="19" pos:column="45">fnLib<pos:position pos:line="19" pos:column="50"/></name></expr>]<pos:position pos:line="19" pos:column="51"/></index></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">fnName<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></return></block></else></if>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1818_httpd-2.0.61.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_hostalias<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">request_rec<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">r<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/*
     * Even if the request has a Host: header containing a port we ignore
     * that port.  We always use the physical port of the socket.  There
     * are a few reasons for this:
     *
     * - the default of 80 or 443 for SSL is easier to handle this way
     * - there is less of a possibility of a security problem
     * - it simplifies the data structure
     * - the client may have no idea that a proxy somewhere along the way
     *   translated the request to another ip:port
     * - except for the addresses from the VirtualHost line, none of the other
     *   names we'll match have ports associated with them
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="16" pos:column="5">const<pos:position pos:line="16" pos:column="10"/></specifier> <name pos:line="16" pos:column="11">char<pos:position pos:line="16" pos:column="15"/></name> <modifier pos:line="16" pos:column="16">*<pos:position pos:line="16" pos:column="17"/></modifier></type><name pos:line="16" pos:column="17">host<pos:position pos:line="16" pos:column="21"/></name> <init pos:line="16" pos:column="22">= <expr><name><name pos:line="16" pos:column="24">r<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">hostname<pos:position pos:line="16" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">apr_port_t<pos:position pos:line="17" pos:column="15"/></name></type> <name pos:line="17" pos:column="16">port<pos:position pos:line="17" pos:column="20"/></name></decl>;<pos:position pos:line="17" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">server_rec<pos:position pos:line="18" pos:column="15"/></name> <modifier pos:line="18" pos:column="16">*<pos:position pos:line="18" pos:column="17"/></modifier></type><name pos:line="18" pos:column="17">s<pos:position pos:line="18" pos:column="18"/></name></decl>;<pos:position pos:line="18" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">server_rec<pos:position pos:line="19" pos:column="15"/></name> <modifier pos:line="19" pos:column="16">*<pos:position pos:line="19" pos:column="17"/></modifier></type><name pos:line="19" pos:column="17">last_s<pos:position pos:line="19" pos:column="23"/></name></decl>;<pos:position pos:line="19" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">name_chain<pos:position pos:line="20" pos:column="15"/></name> <modifier pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></modifier></type><name pos:line="20" pos:column="17">src<pos:position pos:line="20" pos:column="20"/></name></decl>;<pos:position pos:line="20" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">last_s<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <name pos:line="22" pos:column="14">NULL<pos:position pos:line="22" pos:column="18"/></name></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">apr_sockaddr_port_get<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><operator pos:line="24" pos:column="27">&amp;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="28">port<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="34">r<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">connection<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">local_addr<pos:position pos:line="24" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>

    <comment type="block" pos:line="26" pos:column="5">/* Recall that the name_chain is a list of server_addr_recs, some of
     * whose ports may not match.  Also each server may appear more than
     * once in the chain -- specifically, it will appear once for each
     * address from its VirtualHost line which matched.  We only want to
     * do the full ServerName/ServerAlias comparisons once for each
     * server, fortunately we know that all the VirtualHost addresses for
     * a single server are adjacent to each other.
     */</comment>

    <for pos:line="35" pos:column="5">for <control pos:line="35" pos:column="9">(<init><expr><name pos:line="35" pos:column="10">src<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <name><name pos:line="35" pos:column="16">r<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">-&gt;<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="19">connection<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">vhost_lookup_data<pos:position pos:line="35" pos:column="48"/></name></name></expr>;<pos:position pos:line="35" pos:column="49"/></init> <condition><expr><name pos:line="35" pos:column="50">src<pos:position pos:line="35" pos:column="53"/></name></expr>;<pos:position pos:line="35" pos:column="54"/></condition> <incr><expr><name pos:line="35" pos:column="55">src<pos:position pos:line="35" pos:column="58"/></name> <operator pos:line="35" pos:column="59">=<pos:position pos:line="35" pos:column="60"/></operator> <name><name pos:line="35" pos:column="61">src<pos:position pos:line="35" pos:column="64"/></name><operator pos:line="35" pos:column="64">-&gt;<pos:position pos:line="35" pos:column="69"/></operator><name pos:line="35" pos:column="66">next<pos:position pos:line="35" pos:column="70"/></name></name></expr></incr>)<pos:position pos:line="35" pos:column="71"/></control> <block pos:line="35" pos:column="72">{
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">server_addr_rec<pos:position pos:line="36" pos:column="24"/></name> <modifier pos:line="36" pos:column="25">*<pos:position pos:line="36" pos:column="26"/></modifier></type><name pos:line="36" pos:column="26">sar<pos:position pos:line="36" pos:column="29"/></name></decl>;<pos:position pos:line="36" pos:column="30"/></decl_stmt>

        <comment type="block" pos:line="38" pos:column="9">/* We only consider addresses on the name_chain which have a matching
         * port
         */</comment>
        <expr_stmt><expr><name pos:line="41" pos:column="9">sar<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <name><name pos:line="41" pos:column="15">src<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">-&gt;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="20">sar<pos:position pos:line="41" pos:column="23"/></name></name></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name><name pos:line="42" pos:column="13">sar<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">host_port<pos:position pos:line="42" pos:column="27"/></name></name> <operator pos:line="42" pos:column="28">!=<pos:position pos:line="42" pos:column="30"/></operator> <literal type="number" pos:line="42" pos:column="31">0<pos:position pos:line="42" pos:column="32"/></literal> <operator pos:line="42" pos:column="33">&amp;&amp;<pos:position pos:line="42" pos:column="43"/></operator> <name pos:line="42" pos:column="36">port<pos:position pos:line="42" pos:column="40"/></name> <operator pos:line="42" pos:column="41">!=<pos:position pos:line="42" pos:column="43"/></operator> <name><name pos:line="42" pos:column="44">sar<pos:position pos:line="42" pos:column="47"/></name><operator pos:line="42" pos:column="47">-&gt;<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="49">host_port<pos:position pos:line="42" pos:column="58"/></name></name></expr>)<pos:position pos:line="42" pos:column="59"/></condition><then pos:line="42" pos:column="59"> <block pos:line="42" pos:column="60">{
            <continue pos:line="43" pos:column="13">continue;<pos:position pos:line="43" pos:column="22"/></continue>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="46" pos:column="9">s<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">=<pos:position pos:line="46" pos:column="12"/></operator> <name><name pos:line="46" pos:column="13">src<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">server<pos:position pos:line="46" pos:column="24"/></name></name></expr>;<pos:position pos:line="46" pos:column="25"/></expr_stmt>

        <comment type="block" pos:line="48" pos:column="9">/* does it match the virthost from the sar? */</comment>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><call><name pos:line="49" pos:column="14">strcasecmp<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><name pos:line="49" pos:column="25">host<pos:position pos:line="49" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="31">sar<pos:position pos:line="49" pos:column="34"/></name><operator pos:line="49" pos:column="34">-&gt;<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="36">virthost<pos:position pos:line="49" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="46"/></condition><then pos:line="49" pos:column="46"> <block pos:line="49" pos:column="47">{
            <goto pos:line="50" pos:column="13">goto <name pos:line="50" pos:column="18">found<pos:position pos:line="50" pos:column="23"/></name>;<pos:position pos:line="50" pos:column="24"/></goto>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>

        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">s<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">==<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="18">last_s<pos:position pos:line="53" pos:column="24"/></name></expr>)<pos:position pos:line="53" pos:column="25"/></condition><then pos:line="53" pos:column="25"> <block pos:line="53" pos:column="26">{
            <comment type="block" pos:line="54" pos:column="13">/* we've already done ServerName and ServerAlias checks for this
             * vhost
             */</comment>
            <continue pos:line="57" pos:column="13">continue;<pos:position pos:line="57" pos:column="22"/></continue>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="59" pos:column="9">last_s<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <name pos:line="59" pos:column="18">s<pos:position pos:line="59" pos:column="19"/></name></expr>;<pos:position pos:line="59" pos:column="20"/></expr_stmt>

        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><call><name pos:line="61" pos:column="13">matches_aliases<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><name pos:line="61" pos:column="29">s<pos:position pos:line="61" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="32">host<pos:position pos:line="61" pos:column="36"/></name></expr></argument>)<pos:position pos:line="61" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="38"/></condition><then pos:line="61" pos:column="38"> <block pos:line="61" pos:column="39">{
            <goto pos:line="62" pos:column="13">goto <name pos:line="62" pos:column="18">found<pos:position pos:line="62" pos:column="23"/></name>;<pos:position pos:line="62" pos:column="24"/></goto>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>
    }<pos:position pos:line="64" pos:column="6"/></block></for>
    <return pos:line="65" pos:column="5">return;<pos:position pos:line="65" pos:column="12"/></return>

<label><name pos:line="67" pos:column="1">found<pos:position pos:line="67" pos:column="6"/></name>:<pos:position pos:line="67" pos:column="7"/></label>
    <comment type="block" pos:line="68" pos:column="5">/* s is the first matching server, we're done */</comment>
    <expr_stmt><expr><name><name pos:line="69" pos:column="5">r<pos:position pos:line="69" pos:column="6"/></name><operator pos:line="69" pos:column="6">-&gt;<pos:position pos:line="69" pos:column="11"/></operator><name pos:line="69" pos:column="8">server<pos:position pos:line="69" pos:column="14"/></name></name> <operator pos:line="69" pos:column="15">=<pos:position pos:line="69" pos:column="16"/></operator> <name pos:line="69" pos:column="17">s<pos:position pos:line="69" pos:column="18"/></name></expr>;<pos:position pos:line="69" pos:column="19"/></expr_stmt>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1840_httpd-2.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name><modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type> <name pos:line="1" pos:column="14">derive_codepage_from_lang<pos:position pos:line="1" pos:column="39"/></name> <parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">apr_pool_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">p<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">language<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">lang_len<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">charset<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">language<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19">          <comment type="block" pos:line="6" pos:column="29">/* our default codepage */</comment>
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><call><name pos:line="7" pos:column="16">apr_pstrdup<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">p<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="31">"ISO-8859-1"<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></return></block></then>
    <else pos:line="8" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">lang_len<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <call><name pos:line="9" pos:column="20">strlen<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">language<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="11" pos:column="5">charset<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <operator pos:line="11" pos:column="15">(<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">char<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></operator><operator pos:line="11" pos:column="21">)<pos:position pos:line="11" pos:column="22"/></operator> <call><name pos:line="11" pos:column="23">apr_hash_get<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">charset_conversions<pos:position pos:line="11" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="57">language<pos:position pos:line="11" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="67">APR_HASH_KEY_STRING<pos:position pos:line="11" pos:column="86"/></name></expr></argument>)<pos:position pos:line="11" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="88"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">charset<pos:position pos:line="13" pos:column="17"/></name></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18"> <block pos:line="13" pos:column="19">{
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">language<pos:position pos:line="14" pos:column="17"/></name><index pos:line="14" pos:column="17">[<expr><literal type="number" pos:line="14" pos:column="18">2<pos:position pos:line="14" pos:column="19"/></literal></expr>]<pos:position pos:line="14" pos:column="20"/></index></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <literal type="char" pos:line="14" pos:column="23">'\0'<pos:position pos:line="14" pos:column="27"/></literal></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">charset<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <operator pos:line="15" pos:column="19">(<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">char<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">*<pos:position pos:line="15" pos:column="25"/></operator><operator pos:line="15" pos:column="25">)<pos:position pos:line="15" pos:column="26"/></operator> <call><name pos:line="15" pos:column="27">apr_hash_get<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">charset_conversions<pos:position pos:line="15" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="61">language<pos:position pos:line="15" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="71">APR_HASH_KEY_STRING<pos:position pos:line="15" pos:column="90"/></name></expr></argument>)<pos:position pos:line="15" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="92"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">charset<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17"> <block pos:line="18" pos:column="18">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">charset<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">apr_pstrdup<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">p<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">charset<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">charset<pos:position pos:line="22" pos:column="19"/></name></expr>;<pos:position pos:line="22" pos:column="20"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

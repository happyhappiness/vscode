<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_833_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">shmcb_expire_division<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(
    <parameter><decl><type><name pos:line="2" pos:column="5">server_rec<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">s<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="20">SHMCBQueue<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">queue<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">SHMCBCache<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">cache<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SHMCBIndex<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">idx<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">time_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">now<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">int<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">loop<pos:position pos:line="6" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="24">index_num<pos:position pos:line="6" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="35">pos_count<pos:position pos:line="6" pos:column="44"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="46">new_pos<pos:position pos:line="6" pos:column="53"/></name></decl>;<pos:position pos:line="6" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">SHMCBHeader<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">header<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ap_log_error<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><name pos:line="9" pos:column="18">APLOG_MARK<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="30">APLOG_DEBUG<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="43">0<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">s<pos:position pos:line="9" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="10" pos:column="18">"entering shmcb_expire_division"<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* We must calculate num and space ourselves based on expiry times. */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">now<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">time<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr></argument>)<pos:position pos:line="13" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">loop<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">new_pos<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">shmcb_get_safe_uint<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name><name pos:line="15" pos:column="35">queue<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">first_pos<pos:position pos:line="15" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* Cache useful values */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">header<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name><name pos:line="18" pos:column="14">queue<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">header<pos:position pos:line="18" pos:column="27"/></name></name></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">index_num<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <name><name pos:line="19" pos:column="17">header<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">index_num<pos:position pos:line="19" pos:column="34"/></name></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">pos_count<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <call><name pos:line="20" pos:column="17">shmcb_get_safe_uint<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name><name pos:line="20" pos:column="37">queue<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">pos_count<pos:position pos:line="20" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
    <while pos:line="21" pos:column="5">while <condition pos:line="21" pos:column="11">(<expr><name pos:line="21" pos:column="12">loop<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">&lt;<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="19">pos_count<pos:position pos:line="21" pos:column="28"/></name></expr>)<pos:position pos:line="21" pos:column="29"/></condition> <block pos:line="21" pos:column="30">{
        <expr_stmt><expr><name pos:line="22" pos:column="9">idx<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">shmcb_get_index<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">queue<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">new_pos<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">shmcb_get_safe_time<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><operator pos:line="23" pos:column="33">&amp;<pos:position pos:line="23" pos:column="38"/></operator><operator pos:line="23" pos:column="34">(<pos:position pos:line="23" pos:column="35"/></operator><name><name pos:line="23" pos:column="35">idx<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">-&gt;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="40">expires<pos:position pos:line="23" pos:column="47"/></name></name><operator pos:line="23" pos:column="47">)<pos:position pos:line="23" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call> <operator pos:line="23" pos:column="50">&gt;<pos:position pos:line="23" pos:column="54"/></operator> <name pos:line="23" pos:column="52">now<pos:position pos:line="23" pos:column="55"/></name></expr>)<pos:position pos:line="23" pos:column="56"/></condition><then pos:line="23" pos:column="56">
            <comment type="block" pos:line="24" pos:column="13">/* it hasn't expired yet, we're done iterating */</comment>
            <block type="pseudo"><break pos:line="25" pos:column="13">break;<pos:position pos:line="25" pos:column="19"/></break></block></then></if>
        <comment type="block" pos:line="26" pos:column="9">/* This one should be expired too. Shift to the next entry. */</comment>
        <expr_stmt><expr><name pos:line="27" pos:column="9">loop<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">++<pos:position pos:line="27" pos:column="15"/></operator></expr>;<pos:position pos:line="27" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">new_pos<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">shmcb_cyclic_increment<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">index_num<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="53">new_pos<pos:position pos:line="28" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="62">1<pos:position pos:line="28" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></while>

    <comment type="block" pos:line="31" pos:column="5">/* Find the new_offset and make the expiries happen. */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">loop<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">&gt;<pos:position pos:line="32" pos:column="18"/></operator> <literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>)<pos:position pos:line="32" pos:column="18"/></condition><then pos:line="32" pos:column="18"> <block pos:line="32" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_log_error<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">APLOG_MARK<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="34">APLOG_DEBUG<pos:position pos:line="33" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="47">0<pos:position pos:line="33" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="50">s<pos:position pos:line="33" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="34" pos:column="22">"will be expiring %u sessions"<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="54">loop<pos:position pos:line="34" pos:column="58"/></name></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt>
        <comment type="block" pos:line="35" pos:column="9">/* We calculate the new_offset by "peeking" (or in the
         * case it's the last entry, "sneaking" ;-). */</comment>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">loop<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">==<pos:position pos:line="37" pos:column="20"/></operator> <name pos:line="37" pos:column="21">pos_count<pos:position pos:line="37" pos:column="30"/></name></expr>)<pos:position pos:line="37" pos:column="31"/></condition><then pos:line="37" pos:column="31"> <block pos:line="37" pos:column="32">{
            <comment type="block" pos:line="38" pos:column="13">/* We are expiring everything! This is easy to do... */</comment>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">shmcb_set_safe_uint<pos:position pos:line="39" pos:column="32"/></name><argument_list pos:line="39" pos:column="32">(<argument><expr><name><name pos:line="39" pos:column="33">queue<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">-&gt;<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="40">pos_count<pos:position pos:line="39" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="51">0<pos:position pos:line="39" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">shmcb_set_safe_uint<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name><name pos:line="40" pos:column="33">cache<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">-&gt;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="40">pos_count<pos:position pos:line="40" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="51">0<pos:position pos:line="40" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then>
        <else pos:line="42" pos:column="9">else <block pos:line="42" pos:column="14">{
            <comment type="block" pos:line="43" pos:column="13">/* The Queue is easy to adjust */</comment>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">shmcb_set_safe_uint<pos:position pos:line="44" pos:column="32"/></name><argument_list pos:line="44" pos:column="32">(<argument><expr><name><name pos:line="44" pos:column="33">queue<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">-&gt;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="40">pos_count<pos:position pos:line="44" pos:column="49"/></name></name></expr></argument>,
                               <argument><expr><call><name pos:line="45" pos:column="32">shmcb_get_safe_uint<pos:position pos:line="45" pos:column="51"/></name><argument_list pos:line="45" pos:column="51">(<argument><expr><name><name pos:line="45" pos:column="52">queue<pos:position pos:line="45" pos:column="57"/></name><operator pos:line="45" pos:column="57">-&gt;<pos:position pos:line="45" pos:column="62"/></operator><name pos:line="45" pos:column="59">pos_count<pos:position pos:line="45" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="69"/></argument_list></call> <operator pos:line="45" pos:column="70">-<pos:position pos:line="45" pos:column="71"/></operator> <name pos:line="45" pos:column="72">loop<pos:position pos:line="45" pos:column="76"/></name></expr></argument>)<pos:position pos:line="45" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">shmcb_set_safe_uint<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name><name pos:line="46" pos:column="33">queue<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">-&gt;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="40">first_pos<pos:position pos:line="46" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="51">new_pos<pos:position pos:line="46" pos:column="58"/></name></expr></argument>)<pos:position pos:line="46" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="60"/></expr_stmt>
            <comment type="block" pos:line="47" pos:column="13">/* peek to the start of the next session */</comment>
            <expr_stmt><expr><name pos:line="48" pos:column="13">idx<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <call><name pos:line="48" pos:column="19">shmcb_get_index<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">queue<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="42">new_pos<pos:position pos:line="48" pos:column="49"/></name></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt>
            <comment type="block" pos:line="49" pos:column="13">/* We can use shmcb_cyclic_space because we've guaranteed 
             * we don't fit the ambiguous full/empty case. */</comment>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">shmcb_set_safe_uint<pos:position pos:line="51" pos:column="32"/></name><argument_list pos:line="51" pos:column="32">(<argument><expr><name><name pos:line="51" pos:column="33">cache<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">-&gt;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="40">pos_count<pos:position pos:line="51" pos:column="49"/></name></name></expr></argument>,
                               <argument><expr><call><name pos:line="52" pos:column="32">shmcb_get_safe_uint<pos:position pos:line="52" pos:column="51"/></name><argument_list pos:line="52" pos:column="51">(<argument><expr><name><name pos:line="52" pos:column="52">cache<pos:position pos:line="52" pos:column="57"/></name><operator pos:line="52" pos:column="57">-&gt;<pos:position pos:line="52" pos:column="62"/></operator><name pos:line="52" pos:column="59">pos_count<pos:position pos:line="52" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="69"/></argument_list></call> <operator pos:line="52" pos:column="70">-<pos:position pos:line="52" pos:column="71"/></operator>
                               <call><name pos:line="53" pos:column="32">shmcb_cyclic_space<pos:position pos:line="53" pos:column="50"/></name><argument_list pos:line="53" pos:column="50">(<argument><expr><name><name pos:line="53" pos:column="51">header<pos:position pos:line="53" pos:column="57"/></name><operator pos:line="53" pos:column="57">-&gt;<pos:position pos:line="53" pos:column="62"/></operator><name pos:line="53" pos:column="59">cache_data_size<pos:position pos:line="53" pos:column="74"/></name></name></expr></argument>,
                                                  <argument><expr><call><name pos:line="54" pos:column="51">shmcb_get_safe_uint<pos:position pos:line="54" pos:column="70"/></name><argument_list pos:line="54" pos:column="70">(<argument><expr><name><name pos:line="54" pos:column="71">cache<pos:position pos:line="54" pos:column="76"/></name><operator pos:line="54" pos:column="76">-&gt;<pos:position pos:line="54" pos:column="81"/></operator><name pos:line="54" pos:column="78">first_pos<pos:position pos:line="54" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="88"/></argument_list></call></expr></argument>,
                                                  <argument><expr><call><name pos:line="55" pos:column="51">shmcb_get_safe_uint<pos:position pos:line="55" pos:column="70"/></name><argument_list pos:line="55" pos:column="70">(<argument><expr><operator pos:line="55" pos:column="71">&amp;<pos:position pos:line="55" pos:column="76"/></operator><operator pos:line="55" pos:column="72">(<pos:position pos:line="55" pos:column="73"/></operator><name><name pos:line="55" pos:column="73">idx<pos:position pos:line="55" pos:column="76"/></name><operator pos:line="55" pos:column="76">-&gt;<pos:position pos:line="55" pos:column="81"/></operator><name pos:line="55" pos:column="78">offset<pos:position pos:line="55" pos:column="84"/></name></name><operator pos:line="55" pos:column="84">)<pos:position pos:line="55" pos:column="85"/></operator></expr></argument>)<pos:position pos:line="55" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="89"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">shmcb_set_safe_uint<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><name><name pos:line="56" pos:column="33">cache<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">-&gt;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="40">first_pos<pos:position pos:line="56" pos:column="49"/></name></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="51">shmcb_get_safe_uint<pos:position pos:line="56" pos:column="70"/></name><argument_list pos:line="56" pos:column="70">(<argument><expr><operator pos:line="56" pos:column="71">&amp;<pos:position pos:line="56" pos:column="76"/></operator><operator pos:line="56" pos:column="72">(<pos:position pos:line="56" pos:column="73"/></operator><name><name pos:line="56" pos:column="73">idx<pos:position pos:line="56" pos:column="76"/></name><operator pos:line="56" pos:column="76">-&gt;<pos:position pos:line="56" pos:column="81"/></operator><name pos:line="56" pos:column="78">offset<pos:position pos:line="56" pos:column="84"/></name></name><operator pos:line="56" pos:column="84">)<pos:position pos:line="56" pos:column="85"/></operator></expr></argument>)<pos:position pos:line="56" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="88"/></expr_stmt>
        }<pos:position pos:line="57" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">ap_log_error<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">APLOG_MARK<pos:position pos:line="58" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="34">APLOG_DEBUG<pos:position pos:line="58" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="47">0<pos:position pos:line="58" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="50">s<pos:position pos:line="58" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="59" pos:column="22">"we now have %u sessions"<pos:position pos:line="59" pos:column="47"/></literal></expr></argument>,
                     <argument><expr><call><name pos:line="60" pos:column="22">shmcb_get_safe_uint<pos:position pos:line="60" pos:column="41"/></name><argument_list pos:line="60" pos:column="41">(<argument><expr><name><name pos:line="60" pos:column="42">queue<pos:position pos:line="60" pos:column="47"/></name><operator pos:line="60" pos:column="47">-&gt;<pos:position pos:line="60" pos:column="52"/></operator><name pos:line="60" pos:column="49">pos_count<pos:position pos:line="60" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">header<pos:position pos:line="62" pos:column="11"/></name><operator pos:line="62" pos:column="11">-&gt;<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="13">num_expiries<pos:position pos:line="62" pos:column="25"/></name></name> <operator pos:line="62" pos:column="26">+=<pos:position pos:line="62" pos:column="28"/></operator> <name pos:line="62" pos:column="29">loop<pos:position pos:line="62" pos:column="33"/></name></expr>;<pos:position pos:line="62" pos:column="34"/></expr_stmt>
    <return pos:line="63" pos:column="5">return <expr><name pos:line="63" pos:column="12">loop<pos:position pos:line="63" pos:column="16"/></name></expr>;<pos:position pos:line="63" pos:column="17"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

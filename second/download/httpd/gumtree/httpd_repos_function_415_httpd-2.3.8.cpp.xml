<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_415_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">log_request_time<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">request_rec<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">r<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">a<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_time_exp_t<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">xt<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_time_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">request_time<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name><name pos:line="4" pos:column="31">r<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">request_time<pos:position pos:line="4" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">fmt_type<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name pos:line="5" pos:column="20">TIME_FMT_CUSTOM<pos:position pos:line="5" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">fmt<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><name pos:line="6" pos:column="17">a<pos:position pos:line="6" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">fmt<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">&amp;&amp;<pos:position pos:line="8" pos:column="23"/></operator> <operator pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">fmt<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21"> <block pos:line="8" pos:column="22">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">strncmp<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">fmt<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="27">"begin"<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="36">5<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39"> <block pos:line="9" pos:column="40">{
            <expr_stmt><expr><name pos:line="10" pos:column="13">fmt<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">+=<pos:position pos:line="10" pos:column="19"/></operator> <literal type="number" pos:line="10" pos:column="20">5<pos:position pos:line="10" pos:column="21"/></literal></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>
            <if pos:line="11" pos:column="13">if <condition pos:line="11" pos:column="16">(<expr><operator pos:line="11" pos:column="17">!<pos:position pos:line="11" pos:column="18"/></operator><operator pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">fmt<pos:position pos:line="11" pos:column="22"/></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
                <expr_stmt><expr><name pos:line="12" pos:column="17">fmt_type<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="28">TIME_FMT_CLF<pos:position pos:line="12" pos:column="40"/></name></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="13" pos:column="14"/></block></then>
            <elseif pos:line="14" pos:column="13">else <if pos:line="14" pos:column="18">if <condition pos:line="14" pos:column="21">(<expr><operator pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="23">fmt<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">==<pos:position pos:line="14" pos:column="29"/></operator> <literal type="char" pos:line="14" pos:column="30">':'<pos:position pos:line="14" pos:column="33"/></literal></expr>)<pos:position pos:line="14" pos:column="34"/></condition><then pos:line="14" pos:column="34"> <block pos:line="14" pos:column="35">{
                <expr_stmt><expr><name pos:line="15" pos:column="17">fmt<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">++<pos:position pos:line="15" pos:column="22"/></operator></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
                <expr_stmt><expr><name pos:line="16" pos:column="17">a<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">fmt<pos:position pos:line="16" pos:column="24"/></name></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="17" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="18" pos:column="10"/></block></then>
        <elseif pos:line="19" pos:column="9">else <if pos:line="19" pos:column="14">if <condition pos:line="19" pos:column="17">(<expr><operator pos:line="19" pos:column="18">!<pos:position pos:line="19" pos:column="19"/></operator><call><name pos:line="19" pos:column="19">strncmp<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">fmt<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="32">"end"<pos:position pos:line="19" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="39">3<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="42"/></condition><then pos:line="19" pos:column="42"> <block pos:line="19" pos:column="43">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">fmt<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">+=<pos:position pos:line="20" pos:column="19"/></operator> <literal type="number" pos:line="20" pos:column="20">3<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><operator pos:line="21" pos:column="17">!<pos:position pos:line="21" pos:column="18"/></operator><operator pos:line="21" pos:column="18">*<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">fmt<pos:position pos:line="21" pos:column="22"/></name></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23"> <block pos:line="21" pos:column="24">{
                <expr_stmt><expr><name pos:line="22" pos:column="17">request_time<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <call><name pos:line="22" pos:column="32">get_request_end_time<pos:position pos:line="22" pos:column="52"/></name><argument_list pos:line="22" pos:column="52">(<argument><expr><name pos:line="22" pos:column="53">r<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt>
                <expr_stmt><expr><name pos:line="23" pos:column="17">fmt_type<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">=<pos:position pos:line="23" pos:column="27"/></operator> <name pos:line="23" pos:column="28">TIME_FMT_CLF<pos:position pos:line="23" pos:column="40"/></name></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="24" pos:column="14"/></block></then>
            <elseif pos:line="25" pos:column="13">else <if pos:line="25" pos:column="18">if <condition pos:line="25" pos:column="21">(<expr><operator pos:line="25" pos:column="22">*<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">fmt<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">==<pos:position pos:line="25" pos:column="29"/></operator> <literal type="char" pos:line="25" pos:column="30">':'<pos:position pos:line="25" pos:column="33"/></literal></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34"> <block pos:line="25" pos:column="35">{
                <expr_stmt><expr><name pos:line="26" pos:column="17">fmt<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">++<pos:position pos:line="26" pos:column="22"/></operator></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
                <expr_stmt><expr><name pos:line="27" pos:column="17">a<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">fmt<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
                <expr_stmt><expr><name pos:line="28" pos:column="17">request_time<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">=<pos:position pos:line="28" pos:column="31"/></operator> <call><name pos:line="28" pos:column="32">get_request_end_time<pos:position pos:line="28" pos:column="52"/></name><argument_list pos:line="28" pos:column="52">(<argument><expr><name pos:line="28" pos:column="53">r<pos:position pos:line="28" pos:column="54"/></name></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if></elseif></if>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><call><name pos:line="31" pos:column="14">strncmp<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">fmt<pos:position pos:line="31" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="27">"msec"<pos:position pos:line="31" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="35">4<pos:position pos:line="31" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="38"/></condition><then pos:line="31" pos:column="38"> <block pos:line="31" pos:column="39">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">fmt<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">+=<pos:position pos:line="32" pos:column="19"/></operator> <literal type="number" pos:line="32" pos:column="20">4<pos:position pos:line="32" pos:column="21"/></literal></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><operator pos:line="33" pos:column="17">!<pos:position pos:line="33" pos:column="18"/></operator><operator pos:line="33" pos:column="18">*<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="19">fmt<pos:position pos:line="33" pos:column="22"/></name></expr>)<pos:position pos:line="33" pos:column="23"/></condition><then pos:line="33" pos:column="23"> <block pos:line="33" pos:column="24">{
                <expr_stmt><expr><name pos:line="34" pos:column="17">fmt_type<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">TIME_FMT_ABS_MSEC<pos:position pos:line="34" pos:column="45"/></name></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="35" pos:column="14"/></block></then>
            <elseif pos:line="36" pos:column="13">else <if pos:line="36" pos:column="18">if <condition pos:line="36" pos:column="21">(<expr><operator pos:line="36" pos:column="22">!<pos:position pos:line="36" pos:column="23"/></operator><call><name pos:line="36" pos:column="23">strcmp<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">fmt<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="35">"_frac"<pos:position pos:line="36" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="44"/></condition><then pos:line="36" pos:column="44"> <block pos:line="36" pos:column="45">{
                <expr_stmt><expr><name pos:line="37" pos:column="17">fmt_type<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="28">TIME_FMT_ABS_MSEC_FRAC<pos:position pos:line="37" pos:column="50"/></name></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="38" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="39" pos:column="10"/></block></then>
        <elseif pos:line="40" pos:column="9">else <if pos:line="40" pos:column="14">if <condition pos:line="40" pos:column="17">(<expr><operator pos:line="40" pos:column="18">!<pos:position pos:line="40" pos:column="19"/></operator><call><name pos:line="40" pos:column="19">strncmp<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">fmt<pos:position pos:line="40" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="32">"usec"<pos:position pos:line="40" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="40">4<pos:position pos:line="40" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="43"/></condition><then pos:line="40" pos:column="43"> <block pos:line="40" pos:column="44">{
            <expr_stmt><expr><name pos:line="41" pos:column="13">fmt<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">+=<pos:position pos:line="41" pos:column="19"/></operator> <literal type="number" pos:line="41" pos:column="20">4<pos:position pos:line="41" pos:column="21"/></literal></expr>;<pos:position pos:line="41" pos:column="22"/></expr_stmt>
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><operator pos:line="42" pos:column="17">!<pos:position pos:line="42" pos:column="18"/></operator><operator pos:line="42" pos:column="18">*<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="19">fmt<pos:position pos:line="42" pos:column="22"/></name></expr>)<pos:position pos:line="42" pos:column="23"/></condition><then pos:line="42" pos:column="23"> <block pos:line="42" pos:column="24">{
                <expr_stmt><expr><name pos:line="43" pos:column="17">fmt_type<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">=<pos:position pos:line="43" pos:column="27"/></operator> <name pos:line="43" pos:column="28">TIME_FMT_ABS_USEC<pos:position pos:line="43" pos:column="45"/></name></expr>;<pos:position pos:line="43" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="44" pos:column="14"/></block></then>
            <elseif pos:line="45" pos:column="13">else <if pos:line="45" pos:column="18">if <condition pos:line="45" pos:column="21">(<expr><operator pos:line="45" pos:column="22">!<pos:position pos:line="45" pos:column="23"/></operator><call><name pos:line="45" pos:column="23">strcmp<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">fmt<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="35">"_frac"<pos:position pos:line="45" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="44"/></condition><then pos:line="45" pos:column="44"> <block pos:line="45" pos:column="45">{
                <expr_stmt><expr><name pos:line="46" pos:column="17">fmt_type<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">=<pos:position pos:line="46" pos:column="27"/></operator> <name pos:line="46" pos:column="28">TIME_FMT_ABS_USEC_FRAC<pos:position pos:line="46" pos:column="50"/></name></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="47" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="49" pos:column="9">else <if pos:line="49" pos:column="14">if <condition pos:line="49" pos:column="17">(<expr><operator pos:line="49" pos:column="18">!<pos:position pos:line="49" pos:column="19"/></operator><call><name pos:line="49" pos:column="19">strcmp<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><name pos:line="49" pos:column="26">fmt<pos:position pos:line="49" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="31">"sec"<pos:position pos:line="49" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="38"/></condition><then pos:line="49" pos:column="38"> <block pos:line="49" pos:column="39">{
            <expr_stmt><expr><name pos:line="50" pos:column="13">fmt_type<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <name pos:line="50" pos:column="24">TIME_FMT_ABS_SEC<pos:position pos:line="50" pos:column="40"/></name></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="52" pos:column="9">else <if pos:line="52" pos:column="14">if <condition pos:line="52" pos:column="17">(<expr><operator pos:line="52" pos:column="18">!<pos:position pos:line="52" pos:column="19"/></operator><operator pos:line="52" pos:column="19">*<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">fmt<pos:position pos:line="52" pos:column="23"/></name></expr>)<pos:position pos:line="52" pos:column="24"/></condition><then pos:line="52" pos:column="24"> <block pos:line="52" pos:column="25">{
            <expr_stmt><expr><name pos:line="53" pos:column="13">fmt_type<pos:position pos:line="53" pos:column="21"/></name> <operator pos:line="53" pos:column="22">=<pos:position pos:line="53" pos:column="23"/></operator> <name pos:line="53" pos:column="24">TIME_FMT_CLF<pos:position pos:line="53" pos:column="36"/></name></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="55" pos:column="6"/></block></then>
    <else pos:line="56" pos:column="5">else <block pos:line="56" pos:column="10">{
        <expr_stmt><expr><name pos:line="57" pos:column="9">fmt_type<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">=<pos:position pos:line="57" pos:column="19"/></operator> <name pos:line="57" pos:column="20">TIME_FMT_CLF<pos:position pos:line="57" pos:column="32"/></name></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></else></if>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">fmt_type<pos:position pos:line="60" pos:column="17"/></name> <operator pos:line="60" pos:column="18">&gt;=<pos:position pos:line="60" pos:column="23"/></operator> <name pos:line="60" pos:column="21">TIME_FMT_ABS_SEC<pos:position pos:line="60" pos:column="37"/></name></expr>)<pos:position pos:line="60" pos:column="38"/></condition><then pos:line="60" pos:column="38"> <block pos:line="60" pos:column="39">{      <comment type="block" pos:line="60" pos:column="46">/* Absolute (micro-/milli-)second time
                                              * or msec/usec fraction
                                              */</comment>
        <decl_stmt><decl><type><name pos:line="63" pos:column="9">char<pos:position pos:line="63" pos:column="13"/></name><modifier pos:line="63" pos:column="13">*<pos:position pos:line="63" pos:column="14"/></modifier></type> <name pos:line="63" pos:column="15">buf<pos:position pos:line="63" pos:column="18"/></name> <init pos:line="63" pos:column="19">= <expr><call><name pos:line="63" pos:column="21">apr_palloc<pos:position pos:line="63" pos:column="31"/></name><argument_list pos:line="63" pos:column="31">(<argument><expr><name><name pos:line="63" pos:column="32">r<pos:position pos:line="63" pos:column="33"/></name><operator pos:line="63" pos:column="33">-&gt;<pos:position pos:line="63" pos:column="38"/></operator><name pos:line="63" pos:column="35">pool<pos:position pos:line="63" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="41">20<pos:position pos:line="63" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="63" pos:column="45"/></decl_stmt>
        <switch pos:line="64" pos:column="9">switch <condition pos:line="64" pos:column="16">(<expr><name pos:line="64" pos:column="17">fmt_type<pos:position pos:line="64" pos:column="25"/></name></expr>)<pos:position pos:line="64" pos:column="26"/></condition> <block pos:line="64" pos:column="27">{
        <case pos:line="65" pos:column="9">case <expr><name pos:line="65" pos:column="14">TIME_FMT_ABS_SEC<pos:position pos:line="65" pos:column="30"/></name></expr>:<pos:position pos:line="65" pos:column="31"/></case>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">apr_snprintf<pos:position pos:line="66" pos:column="25"/></name><argument_list pos:line="66" pos:column="25">(<argument><expr><name pos:line="66" pos:column="26">buf<pos:position pos:line="66" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="31">20<pos:position pos:line="66" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="35">"%"<pos:position pos:line="66" pos:column="38"/></literal> <name pos:line="66" pos:column="39">APR_TIME_T_FMT<pos:position pos:line="66" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="55">apr_time_sec<pos:position pos:line="66" pos:column="67"/></name><argument_list pos:line="66" pos:column="67">(<argument><expr><name pos:line="66" pos:column="68">request_time<pos:position pos:line="66" pos:column="80"/></name></expr></argument>)<pos:position pos:line="66" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="83"/></expr_stmt>
            <break pos:line="67" pos:column="13">break;<pos:position pos:line="67" pos:column="19"/></break>
        <case pos:line="68" pos:column="9">case <expr><name pos:line="68" pos:column="14">TIME_FMT_ABS_MSEC<pos:position pos:line="68" pos:column="31"/></name></expr>:<pos:position pos:line="68" pos:column="32"/></case>
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">apr_snprintf<pos:position pos:line="69" pos:column="25"/></name><argument_list pos:line="69" pos:column="25">(<argument><expr><name pos:line="69" pos:column="26">buf<pos:position pos:line="69" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="31">20<pos:position pos:line="69" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="35">"%"<pos:position pos:line="69" pos:column="38"/></literal> <name pos:line="69" pos:column="39">APR_TIME_T_FMT<pos:position pos:line="69" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="55">apr_time_as_msec<pos:position pos:line="69" pos:column="71"/></name><argument_list pos:line="69" pos:column="71">(<argument><expr><name pos:line="69" pos:column="72">request_time<pos:position pos:line="69" pos:column="84"/></name></expr></argument>)<pos:position pos:line="69" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="87"/></expr_stmt>
            <break pos:line="70" pos:column="13">break;<pos:position pos:line="70" pos:column="19"/></break>
        <case pos:line="71" pos:column="9">case <expr><name pos:line="71" pos:column="14">TIME_FMT_ABS_USEC<pos:position pos:line="71" pos:column="31"/></name></expr>:<pos:position pos:line="71" pos:column="32"/></case>
            <expr_stmt><expr><call><name pos:line="72" pos:column="13">apr_snprintf<pos:position pos:line="72" pos:column="25"/></name><argument_list pos:line="72" pos:column="25">(<argument><expr><name pos:line="72" pos:column="26">buf<pos:position pos:line="72" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="31">20<pos:position pos:line="72" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="35">"%"<pos:position pos:line="72" pos:column="38"/></literal> <name pos:line="72" pos:column="39">APR_TIME_T_FMT<pos:position pos:line="72" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="55">request_time<pos:position pos:line="72" pos:column="67"/></name></expr></argument>)<pos:position pos:line="72" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="69"/></expr_stmt>
            <break pos:line="73" pos:column="13">break;<pos:position pos:line="73" pos:column="19"/></break>
        <case pos:line="74" pos:column="9">case <expr><name pos:line="74" pos:column="14">TIME_FMT_ABS_MSEC_FRAC<pos:position pos:line="74" pos:column="36"/></name></expr>:<pos:position pos:line="74" pos:column="37"/></case>
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">apr_snprintf<pos:position pos:line="75" pos:column="25"/></name><argument_list pos:line="75" pos:column="25">(<argument><expr><name pos:line="75" pos:column="26">buf<pos:position pos:line="75" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="31">20<pos:position pos:line="75" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="35">"%03"<pos:position pos:line="75" pos:column="40"/></literal> <name pos:line="75" pos:column="41">APR_TIME_T_FMT<pos:position pos:line="75" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="75" pos:column="57">apr_time_msec<pos:position pos:line="75" pos:column="70"/></name><argument_list pos:line="75" pos:column="70">(<argument><expr><name pos:line="75" pos:column="71">request_time<pos:position pos:line="75" pos:column="83"/></name></expr></argument>)<pos:position pos:line="75" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="86"/></expr_stmt>
            <break pos:line="76" pos:column="13">break;<pos:position pos:line="76" pos:column="19"/></break>
        <case pos:line="77" pos:column="9">case <expr><name pos:line="77" pos:column="14">TIME_FMT_ABS_USEC_FRAC<pos:position pos:line="77" pos:column="36"/></name></expr>:<pos:position pos:line="77" pos:column="37"/></case>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">apr_snprintf<pos:position pos:line="78" pos:column="25"/></name><argument_list pos:line="78" pos:column="25">(<argument><expr><name pos:line="78" pos:column="26">buf<pos:position pos:line="78" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="31">20<pos:position pos:line="78" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="35">"%06"<pos:position pos:line="78" pos:column="40"/></literal> <name pos:line="78" pos:column="41">APR_TIME_T_FMT<pos:position pos:line="78" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="78" pos:column="57">apr_time_usec<pos:position pos:line="78" pos:column="70"/></name><argument_list pos:line="78" pos:column="70">(<argument><expr><name pos:line="78" pos:column="71">request_time<pos:position pos:line="78" pos:column="83"/></name></expr></argument>)<pos:position pos:line="78" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="86"/></expr_stmt>
            <break pos:line="79" pos:column="13">break;<pos:position pos:line="79" pos:column="19"/></break>
        <default pos:line="80" pos:column="9">default:<pos:position pos:line="80" pos:column="17"/></default>
            <return pos:line="81" pos:column="13">return <expr><literal type="string" pos:line="81" pos:column="20">"-"<pos:position pos:line="81" pos:column="23"/></literal></expr>;<pos:position pos:line="81" pos:column="24"/></return>
        }<pos:position pos:line="82" pos:column="10"/></block></switch>
        <return pos:line="83" pos:column="9">return <expr><name pos:line="83" pos:column="16">buf<pos:position pos:line="83" pos:column="19"/></name></expr>;<pos:position pos:line="83" pos:column="20"/></return>
    }<pos:position pos:line="84" pos:column="6"/></block></then>
    <elseif pos:line="85" pos:column="5">else <if pos:line="85" pos:column="10">if <condition pos:line="85" pos:column="13">(<expr><name pos:line="85" pos:column="14">fmt_type<pos:position pos:line="85" pos:column="22"/></name> <operator pos:line="85" pos:column="23">==<pos:position pos:line="85" pos:column="25"/></operator> <name pos:line="85" pos:column="26">TIME_FMT_CUSTOM<pos:position pos:line="85" pos:column="41"/></name></expr>)<pos:position pos:line="85" pos:column="42"/></condition><then pos:line="85" pos:column="42"> <block pos:line="85" pos:column="43">{  <comment type="block" pos:line="85" pos:column="46">/* Custom format */</comment>
        <comment type="block" pos:line="86" pos:column="9">/* The custom time formatting uses a very large temp buffer
         * on the stack.  To avoid using so much stack space in the
         * common case where we're not using a custom format, the code
         * for the custom format in a separate function.  (That's why
         * log_request_time_custom is not inlined right here.)
         */</comment>
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">ap_explode_recent_localtime<pos:position pos:line="92" pos:column="36"/></name><argument_list pos:line="92" pos:column="36">(<argument><expr><operator pos:line="92" pos:column="37">&amp;<pos:position pos:line="92" pos:column="42"/></operator><name pos:line="92" pos:column="38">xt<pos:position pos:line="92" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="42">request_time<pos:position pos:line="92" pos:column="54"/></name></expr></argument>)<pos:position pos:line="92" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="56"/></expr_stmt>
        <return pos:line="93" pos:column="9">return <expr><call><name pos:line="93" pos:column="16">log_request_time_custom<pos:position pos:line="93" pos:column="39"/></name><argument_list pos:line="93" pos:column="39">(<argument><expr><name pos:line="93" pos:column="40">r<pos:position pos:line="93" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="43">a<pos:position pos:line="93" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="46">&amp;<pos:position pos:line="93" pos:column="51"/></operator><name pos:line="93" pos:column="47">xt<pos:position pos:line="93" pos:column="49"/></name></expr></argument>)<pos:position pos:line="93" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="51"/></return>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if></elseif>
    <else pos:line="95" pos:column="5">else <block pos:line="95" pos:column="10">{                                   <comment type="block" pos:line="95" pos:column="46">/* CLF format */</comment>
        <comment type="block" pos:line="96" pos:column="9">/* This code uses the same technique as ap_explode_recent_localtime():
         * optimistic caching with logic to detect and correct race conditions.
         * See the comments in server/util_time.c for more information.
         */</comment>
        <decl_stmt><decl><type><name pos:line="100" pos:column="9">cached_request_time<pos:position pos:line="100" pos:column="28"/></name><modifier pos:line="100" pos:column="28">*<pos:position pos:line="100" pos:column="29"/></modifier></type> <name pos:line="100" pos:column="30">cached_time<pos:position pos:line="100" pos:column="41"/></name> <init pos:line="100" pos:column="42">= <expr><call><name pos:line="100" pos:column="44">apr_palloc<pos:position pos:line="100" pos:column="54"/></name><argument_list pos:line="100" pos:column="54">(<argument><expr><name><name pos:line="100" pos:column="55">r<pos:position pos:line="100" pos:column="56"/></name><operator pos:line="100" pos:column="56">-&gt;<pos:position pos:line="100" pos:column="61"/></operator><name pos:line="100" pos:column="58">pool<pos:position pos:line="100" pos:column="62"/></name></name></expr></argument>,
                                                      <argument><expr><sizeof pos:line="101" pos:column="55">sizeof<argument_list pos:line="101" pos:column="61">(<argument><expr><operator pos:line="101" pos:column="62">*<pos:position pos:line="101" pos:column="63"/></operator><name pos:line="101" pos:column="63">cached_time<pos:position pos:line="101" pos:column="74"/></name></expr></argument>)<pos:position pos:line="101" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="101" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="101" pos:column="77"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="102" pos:column="9">unsigned<pos:position pos:line="102" pos:column="17"/></name></type> <name pos:line="102" pos:column="18">t_seconds<pos:position pos:line="102" pos:column="27"/></name> <init pos:line="102" pos:column="28">= <expr><operator pos:line="102" pos:column="30">(<pos:position pos:line="102" pos:column="31"/></operator><name pos:line="102" pos:column="31">unsigned<pos:position pos:line="102" pos:column="39"/></name><operator pos:line="102" pos:column="39">)<pos:position pos:line="102" pos:column="40"/></operator><call><name pos:line="102" pos:column="40">apr_time_sec<pos:position pos:line="102" pos:column="52"/></name><argument_list pos:line="102" pos:column="52">(<argument><expr><name pos:line="102" pos:column="53">request_time<pos:position pos:line="102" pos:column="65"/></name></expr></argument>)<pos:position pos:line="102" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="102" pos:column="67"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="103" pos:column="9">unsigned<pos:position pos:line="103" pos:column="17"/></name></type> <name pos:line="103" pos:column="18">i<pos:position pos:line="103" pos:column="19"/></name> <init pos:line="103" pos:column="20">= <expr><name pos:line="103" pos:column="22">t_seconds<pos:position pos:line="103" pos:column="31"/></name> <operator pos:line="103" pos:column="32">&amp;<pos:position pos:line="103" pos:column="37"/></operator> <name pos:line="103" pos:column="34">TIME_CACHE_MASK<pos:position pos:line="103" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="103" pos:column="50"/></decl_stmt>
        <expr_stmt><expr><operator pos:line="104" pos:column="9">*<pos:position pos:line="104" pos:column="10"/></operator><name pos:line="104" pos:column="10">cached_time<pos:position pos:line="104" pos:column="21"/></name> <operator pos:line="104" pos:column="22">=<pos:position pos:line="104" pos:column="23"/></operator> <name><name pos:line="104" pos:column="24">request_time_cache<pos:position pos:line="104" pos:column="42"/></name><index pos:line="104" pos:column="42">[<expr><name pos:line="104" pos:column="43">i<pos:position pos:line="104" pos:column="44"/></name></expr>]<pos:position pos:line="104" pos:column="45"/></index></name></expr>;<pos:position pos:line="104" pos:column="46"/></expr_stmt>
        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><operator pos:line="105" pos:column="13">(<pos:position pos:line="105" pos:column="14"/></operator><name pos:line="105" pos:column="14">t_seconds<pos:position pos:line="105" pos:column="23"/></name> <operator pos:line="105" pos:column="24">!=<pos:position pos:line="105" pos:column="26"/></operator> <name><name pos:line="105" pos:column="27">cached_time<pos:position pos:line="105" pos:column="38"/></name><operator pos:line="105" pos:column="38">-&gt;<pos:position pos:line="105" pos:column="43"/></operator><name pos:line="105" pos:column="40">t<pos:position pos:line="105" pos:column="41"/></name></name><operator pos:line="105" pos:column="41">)<pos:position pos:line="105" pos:column="42"/></operator> <operator pos:line="105" pos:column="43">||<pos:position pos:line="105" pos:column="45"/></operator>
            <operator pos:line="106" pos:column="13">(<pos:position pos:line="106" pos:column="14"/></operator><name pos:line="106" pos:column="14">t_seconds<pos:position pos:line="106" pos:column="23"/></name> <operator pos:line="106" pos:column="24">!=<pos:position pos:line="106" pos:column="26"/></operator> <name><name pos:line="106" pos:column="27">cached_time<pos:position pos:line="106" pos:column="38"/></name><operator pos:line="106" pos:column="38">-&gt;<pos:position pos:line="106" pos:column="43"/></operator><name pos:line="106" pos:column="40">t_validate<pos:position pos:line="106" pos:column="50"/></name></name><operator pos:line="106" pos:column="50">)<pos:position pos:line="106" pos:column="51"/></operator></expr>)<pos:position pos:line="106" pos:column="52"/></condition><then pos:line="106" pos:column="52"> <block pos:line="106" pos:column="53">{

            <comment type="block" pos:line="108" pos:column="13">/* Invalid or old snapshot, so compute the proper time string
             * and store it in the cache
             */</comment>
            <decl_stmt><decl><type><name pos:line="111" pos:column="13">char<pos:position pos:line="111" pos:column="17"/></name></type> <name pos:line="111" pos:column="18">sign<pos:position pos:line="111" pos:column="22"/></name></decl>;<pos:position pos:line="111" pos:column="23"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="112" pos:column="13">int<pos:position pos:line="112" pos:column="16"/></name></type> <name pos:line="112" pos:column="17">timz<pos:position pos:line="112" pos:column="21"/></name></decl>;<pos:position pos:line="112" pos:column="22"/></decl_stmt>

            <expr_stmt><expr><call><name pos:line="114" pos:column="13">ap_explode_recent_localtime<pos:position pos:line="114" pos:column="40"/></name><argument_list pos:line="114" pos:column="40">(<argument><expr><operator pos:line="114" pos:column="41">&amp;<pos:position pos:line="114" pos:column="46"/></operator><name pos:line="114" pos:column="42">xt<pos:position pos:line="114" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="46">request_time<pos:position pos:line="114" pos:column="58"/></name></expr></argument>)<pos:position pos:line="114" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="60"/></expr_stmt></block></then></if></block></else></if></block></function>
  </unit>

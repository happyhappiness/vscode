<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_114.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ssl_io_input_read<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">bio_filter_in_ctx_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">inctx<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">buf<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="3" pos:column="39">apr_size_t<pos:position pos:line="3" pos:column="49"/></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">len<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="55"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">wanted<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><operator pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">len<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">bytes<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">rc<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">len<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></expr_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* If we have something leftover from last time, try that first. */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">bytes<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">char_buffer_read<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><operator pos:line="12" pos:column="35">&amp;<pos:position pos:line="12" pos:column="40"/></operator><name><name pos:line="12" pos:column="36">inctx<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">-&gt;<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="43">cbuf<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">buf<pos:position pos:line="12" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="54">wanted<pos:position pos:line="12" pos:column="60"/></name></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call><operator pos:line="12" pos:column="61">)<pos:position pos:line="12" pos:column="62"/></operator></expr>)<pos:position pos:line="12" pos:column="63"/></condition><then pos:line="12" pos:column="63"> <block pos:line="12" pos:column="64">{
        <expr_stmt><expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">len<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">bytes<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">inctx<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">mode<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">==<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="28">AP_MODE_SPECULATIVE<pos:position pos:line="14" pos:column="47"/></name></expr>)<pos:position pos:line="14" pos:column="48"/></condition><then pos:line="14" pos:column="48"> <block pos:line="14" pos:column="49">{
            <comment type="block" pos:line="15" pos:column="13">/* We want to rollback this read. */</comment>
            <expr_stmt><expr><name><name pos:line="16" pos:column="13">inctx<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">cbuf<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">.<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">value<pos:position pos:line="16" pos:column="30"/></name></name> <operator pos:line="16" pos:column="31">-=<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">bytes<pos:position pos:line="16" pos:column="39"/></name></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="17" pos:column="13">inctx<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">cbuf<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">.<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">length<pos:position pos:line="17" pos:column="31"/></name></name> <operator pos:line="17" pos:column="32">+=<pos:position pos:line="17" pos:column="34"/></operator> <name pos:line="17" pos:column="35">bytes<pos:position pos:line="17" pos:column="40"/></name></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">APR_SUCCESS<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="20" pos:column="9">/* This could probably be *len == wanted, but be safe from stray
         * photons.
         */</comment>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">*<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">len<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">&gt;=<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="21">wanted<pos:position pos:line="23" pos:column="27"/></name></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28"> <block pos:line="23" pos:column="29">{
            <return pos:line="24" pos:column="13">return <expr><name pos:line="24" pos:column="20">APR_SUCCESS<pos:position pos:line="24" pos:column="31"/></name></expr>;<pos:position pos:line="24" pos:column="32"/></return>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">inctx<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">mode<pos:position pos:line="26" pos:column="24"/></name></name> <operator pos:line="26" pos:column="25">==<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="28">AP_MODE_GETLINE<pos:position pos:line="26" pos:column="43"/></name></expr>)<pos:position pos:line="26" pos:column="44"/></condition><then pos:line="26" pos:column="44"> <block pos:line="26" pos:column="45">{
            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><call><name pos:line="27" pos:column="17">memchr<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">buf<pos:position pos:line="27" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="29">APR_ASCII_LF<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="43">*<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="44">len<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="49"/></condition><then pos:line="27" pos:column="49"> <block pos:line="27" pos:column="50">{
                <return pos:line="28" pos:column="17">return <expr><name pos:line="28" pos:column="24">APR_SUCCESS<pos:position pos:line="28" pos:column="35"/></name></expr>;<pos:position pos:line="28" pos:column="36"/></return>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if>
        }<pos:position pos:line="30" pos:column="10"/></block></then>
        <else pos:line="31" pos:column="9">else <block pos:line="31" pos:column="14">{
            <comment type="block" pos:line="32" pos:column="13">/* Down to a nonblock pattern as we have some data already
             */</comment>
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">inctx<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">block<pos:position pos:line="34" pos:column="25"/></name></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">APR_NONBLOCK_READ<pos:position pos:line="34" pos:column="45"/></name></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></else></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <while pos:line="38" pos:column="5">while <condition pos:line="38" pos:column="11">(<expr><literal type="number" pos:line="38" pos:column="12">1<pos:position pos:line="38" pos:column="13"/></literal></expr>)<pos:position pos:line="38" pos:column="14"/></condition> <block pos:line="38" pos:column="15">{

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><name><name pos:line="40" pos:column="14">inctx<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">filter_ctx<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">-&gt;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="33">pssl<pos:position pos:line="40" pos:column="37"/></name></name></expr>)<pos:position pos:line="40" pos:column="38"/></condition><then pos:line="40" pos:column="38"> <block pos:line="40" pos:column="39">{
            <break pos:line="41" pos:column="13">break;<pos:position pos:line="41" pos:column="19"/></break>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="44" pos:column="9">/* SSL_read may not read because we haven't taken enough data
         * from the stack.  This is where we want to consider all of
         * the blocking and SPECULATIVE semantics
         */</comment>
        <expr_stmt><expr><name pos:line="48" pos:column="9">rc<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <call><name pos:line="48" pos:column="14">SSL_read<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><name><name pos:line="48" pos:column="23">inctx<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">-&gt;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="30">filter_ctx<pos:position pos:line="48" pos:column="40"/></name><operator pos:line="48" pos:column="40">-&gt;<pos:position pos:line="48" pos:column="45"/></operator><name pos:line="48" pos:column="42">pssl<pos:position pos:line="48" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="48">buf<pos:position pos:line="48" pos:column="51"/></name> <operator pos:line="48" pos:column="52">+<pos:position pos:line="48" pos:column="53"/></operator> <name pos:line="48" pos:column="54">bytes<pos:position pos:line="48" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="61">wanted<pos:position pos:line="48" pos:column="67"/></name> <operator pos:line="48" pos:column="68">-<pos:position pos:line="48" pos:column="69"/></operator> <name pos:line="48" pos:column="70">bytes<pos:position pos:line="48" pos:column="75"/></name></expr></argument>)<pos:position pos:line="48" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="77"/></expr_stmt>

        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">rc<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">&gt;<pos:position pos:line="50" pos:column="20"/></operator> <literal type="number" pos:line="50" pos:column="18">0<pos:position pos:line="50" pos:column="19"/></literal></expr>)<pos:position pos:line="50" pos:column="20"/></condition><then pos:line="50" pos:column="20"> <block pos:line="50" pos:column="21">{
            <expr_stmt><expr><operator pos:line="51" pos:column="13">*<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">len<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">+=<pos:position pos:line="51" pos:column="20"/></operator> <name pos:line="51" pos:column="21">rc<pos:position pos:line="51" pos:column="23"/></name></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt>
            <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><name><name pos:line="52" pos:column="17">inctx<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">-&gt;<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="24">mode<pos:position pos:line="52" pos:column="28"/></name></name> <operator pos:line="52" pos:column="29">==<pos:position pos:line="52" pos:column="31"/></operator> <name pos:line="52" pos:column="32">AP_MODE_SPECULATIVE<pos:position pos:line="52" pos:column="51"/></name></expr>)<pos:position pos:line="52" pos:column="52"/></condition><then pos:line="52" pos:column="52"> <block pos:line="52" pos:column="53">{
                <comment type="block" pos:line="53" pos:column="17">/* We want to rollback this read. */</comment>
                <expr_stmt><expr><call><name pos:line="54" pos:column="17">char_buffer_write<pos:position pos:line="54" pos:column="34"/></name><argument_list pos:line="54" pos:column="34">(<argument><expr><operator pos:line="54" pos:column="35">&amp;<pos:position pos:line="54" pos:column="40"/></operator><name><name pos:line="54" pos:column="36">inctx<pos:position pos:line="54" pos:column="41"/></name><operator pos:line="54" pos:column="41">-&gt;<pos:position pos:line="54" pos:column="46"/></operator><name pos:line="54" pos:column="43">cbuf<pos:position pos:line="54" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="49">buf<pos:position pos:line="54" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="54">rc<pos:position pos:line="54" pos:column="56"/></name></expr></argument>)<pos:position pos:line="54" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="58"/></expr_stmt>
            }<pos:position pos:line="55" pos:column="14"/></block></then></if>
            <return pos:line="56" pos:column="13">return <expr><name><name pos:line="56" pos:column="20">inctx<pos:position pos:line="56" pos:column="25"/></name><operator pos:line="56" pos:column="25">-&gt;<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="27">rc<pos:position pos:line="56" pos:column="29"/></name></name></expr>;<pos:position pos:line="56" pos:column="30"/></return>
        }<pos:position pos:line="57" pos:column="10"/></block></then>
        <elseif pos:line="58" pos:column="9">else <if pos:line="58" pos:column="14">if <condition pos:line="58" pos:column="17">(<expr><name pos:line="58" pos:column="18">rc<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">==<pos:position pos:line="58" pos:column="23"/></operator> <literal type="number" pos:line="58" pos:column="24">0<pos:position pos:line="58" pos:column="25"/></literal></expr>)<pos:position pos:line="58" pos:column="26"/></condition><then pos:line="58" pos:column="26"> <block pos:line="58" pos:column="27">{
            <comment type="block" pos:line="59" pos:column="13">/* If EAGAIN, we will loop given a blocking read,
             * otherwise consider ourselves at EOF.
             */</comment>
            <if pos:line="62" pos:column="13">if <condition pos:line="62" pos:column="16">(<expr><call><name pos:line="62" pos:column="17">APR_STATUS_IS_EAGAIN<pos:position pos:line="62" pos:column="37"/></name><argument_list pos:line="62" pos:column="37">(<argument><expr><name><name pos:line="62" pos:column="38">inctx<pos:position pos:line="62" pos:column="43"/></name><operator pos:line="62" pos:column="43">-&gt;<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="45">rc<pos:position pos:line="62" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="48"/></argument_list></call>
                    <operator pos:line="63" pos:column="21">||<pos:position pos:line="63" pos:column="23"/></operator> <call><name pos:line="63" pos:column="24">APR_STATUS_IS_EINTR<pos:position pos:line="63" pos:column="43"/></name><argument_list pos:line="63" pos:column="43">(<argument><expr><name><name pos:line="63" pos:column="44">inctx<pos:position pos:line="63" pos:column="49"/></name><operator pos:line="63" pos:column="49">-&gt;<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="51">rc<pos:position pos:line="63" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="55"/></condition><then pos:line="63" pos:column="55"> <block pos:line="63" pos:column="56">{
                <comment type="block" pos:line="64" pos:column="17">/* Already read something, return APR_SUCCESS instead. 
                 * On win32 in particular, but perhaps on other kernels,
                 * a blocking call isn't 'always' blocking.
                 */</comment>
                <if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><operator pos:line="68" pos:column="21">*<pos:position pos:line="68" pos:column="22"/></operator><name pos:line="68" pos:column="22">len<pos:position pos:line="68" pos:column="25"/></name> <operator pos:line="68" pos:column="26">&gt;<pos:position pos:line="68" pos:column="30"/></operator> <literal type="number" pos:line="68" pos:column="28">0<pos:position pos:line="68" pos:column="29"/></literal></expr>)<pos:position pos:line="68" pos:column="30"/></condition><then pos:line="68" pos:column="30"> <block pos:line="68" pos:column="31">{
                    <expr_stmt><expr><name><name pos:line="69" pos:column="21">inctx<pos:position pos:line="69" pos:column="26"/></name><operator pos:line="69" pos:column="26">-&gt;<pos:position pos:line="69" pos:column="31"/></operator><name pos:line="69" pos:column="28">rc<pos:position pos:line="69" pos:column="30"/></name></name> <operator pos:line="69" pos:column="31">=<pos:position pos:line="69" pos:column="32"/></operator> <name pos:line="69" pos:column="33">APR_SUCCESS<pos:position pos:line="69" pos:column="44"/></name></expr>;<pos:position pos:line="69" pos:column="45"/></expr_stmt>
                    <break pos:line="70" pos:column="21">break;<pos:position pos:line="70" pos:column="27"/></break>
                }<pos:position pos:line="71" pos:column="18"/></block></then></if>
                <if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><name><name pos:line="72" pos:column="21">inctx<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">block<pos:position pos:line="72" pos:column="33"/></name></name> <operator pos:line="72" pos:column="34">==<pos:position pos:line="72" pos:column="36"/></operator> <name pos:line="72" pos:column="37">APR_NONBLOCK_READ<pos:position pos:line="72" pos:column="54"/></name></expr>)<pos:position pos:line="72" pos:column="55"/></condition><then pos:line="72" pos:column="55"> <block pos:line="72" pos:column="56">{
                    <break pos:line="73" pos:column="21">break;<pos:position pos:line="73" pos:column="27"/></break>
                }<pos:position pos:line="74" pos:column="18"/></block></then></if>
            }<pos:position pos:line="75" pos:column="14"/></block></then>
            <else pos:line="76" pos:column="13">else <block pos:line="76" pos:column="18">{
                <if pos:line="77" pos:column="17">if <condition pos:line="77" pos:column="20">(<expr><operator pos:line="77" pos:column="21">*<pos:position pos:line="77" pos:column="22"/></operator><name pos:line="77" pos:column="22">len<pos:position pos:line="77" pos:column="25"/></name> <operator pos:line="77" pos:column="26">&gt;<pos:position pos:line="77" pos:column="30"/></operator> <literal type="number" pos:line="77" pos:column="28">0<pos:position pos:line="77" pos:column="29"/></literal></expr>)<pos:position pos:line="77" pos:column="30"/></condition><then pos:line="77" pos:column="30"> <block pos:line="77" pos:column="31">{
                    <expr_stmt><expr><name><name pos:line="78" pos:column="21">inctx<pos:position pos:line="78" pos:column="26"/></name><operator pos:line="78" pos:column="26">-&gt;<pos:position pos:line="78" pos:column="31"/></operator><name pos:line="78" pos:column="28">rc<pos:position pos:line="78" pos:column="30"/></name></name> <operator pos:line="78" pos:column="31">=<pos:position pos:line="78" pos:column="32"/></operator> <name pos:line="78" pos:column="33">APR_SUCCESS<pos:position pos:line="78" pos:column="44"/></name></expr>;<pos:position pos:line="78" pos:column="45"/></expr_stmt>
                }<pos:position pos:line="79" pos:column="18"/></block></then>
                <else pos:line="80" pos:column="17">else <block pos:line="80" pos:column="22">{
                    <expr_stmt><expr><name><name pos:line="81" pos:column="21">inctx<pos:position pos:line="81" pos:column="26"/></name><operator pos:line="81" pos:column="26">-&gt;<pos:position pos:line="81" pos:column="31"/></operator><name pos:line="81" pos:column="28">rc<pos:position pos:line="81" pos:column="30"/></name></name> <operator pos:line="81" pos:column="31">=<pos:position pos:line="81" pos:column="32"/></operator> <name pos:line="81" pos:column="33">APR_EOF<pos:position pos:line="81" pos:column="40"/></name></expr>;<pos:position pos:line="81" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="82" pos:column="18"/></block></else></if>
                <break pos:line="83" pos:column="17">break;<pos:position pos:line="83" pos:column="23"/></break>
            }<pos:position pos:line="84" pos:column="14"/></block></else></if>
        }<pos:position pos:line="85" pos:column="10"/></block></then></if></elseif>
        <else pos:line="86" pos:column="9">else <comment type="block" pos:line="86" pos:column="14">/* (rc &lt; 0) */</comment> <block pos:line="86" pos:column="29">{
            <decl_stmt><decl><type><name pos:line="87" pos:column="13">int<pos:position pos:line="87" pos:column="16"/></name></type> <name pos:line="87" pos:column="17">ssl_err<pos:position pos:line="87" pos:column="24"/></name> <init pos:line="87" pos:column="25">= <expr><call><name pos:line="87" pos:column="27">SSL_get_error<pos:position pos:line="87" pos:column="40"/></name><argument_list pos:line="87" pos:column="40">(<argument><expr><name><name pos:line="87" pos:column="41">inctx<pos:position pos:line="87" pos:column="46"/></name><operator pos:line="87" pos:column="46">-&gt;<pos:position pos:line="87" pos:column="51"/></operator><name pos:line="87" pos:column="48">filter_ctx<pos:position pos:line="87" pos:column="58"/></name><operator pos:line="87" pos:column="58">-&gt;<pos:position pos:line="87" pos:column="63"/></operator><name pos:line="87" pos:column="60">pssl<pos:position pos:line="87" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="66">rc<pos:position pos:line="87" pos:column="68"/></name></expr></argument>)<pos:position pos:line="87" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="87" pos:column="70"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="88" pos:column="13">conn_rec<pos:position pos:line="88" pos:column="21"/></name> <modifier pos:line="88" pos:column="22">*<pos:position pos:line="88" pos:column="23"/></modifier></type><name pos:line="88" pos:column="23">c<pos:position pos:line="88" pos:column="24"/></name> <init pos:line="88" pos:column="25">= <expr><operator pos:line="88" pos:column="27">(<pos:position pos:line="88" pos:column="28"/></operator><name pos:line="88" pos:column="28">conn_rec<pos:position pos:line="88" pos:column="36"/></name><operator pos:line="88" pos:column="36">*<pos:position pos:line="88" pos:column="37"/></operator><operator pos:line="88" pos:column="37">)<pos:position pos:line="88" pos:column="38"/></operator><call><name pos:line="88" pos:column="38">SSL_get_app_data<pos:position pos:line="88" pos:column="54"/></name><argument_list pos:line="88" pos:column="54">(<argument><expr><name><name pos:line="88" pos:column="55">inctx<pos:position pos:line="88" pos:column="60"/></name><operator pos:line="88" pos:column="60">-&gt;<pos:position pos:line="88" pos:column="65"/></operator><name pos:line="88" pos:column="62">filter_ctx<pos:position pos:line="88" pos:column="72"/></name><operator pos:line="88" pos:column="72">-&gt;<pos:position pos:line="88" pos:column="77"/></operator><name pos:line="88" pos:column="74">pssl<pos:position pos:line="88" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="88" pos:column="80"/></decl_stmt>

            <if pos:line="90" pos:column="13">if <condition pos:line="90" pos:column="16">(<expr><name pos:line="90" pos:column="17">ssl_err<pos:position pos:line="90" pos:column="24"/></name> <operator pos:line="90" pos:column="25">==<pos:position pos:line="90" pos:column="27"/></operator> <name pos:line="90" pos:column="28">SSL_ERROR_WANT_READ<pos:position pos:line="90" pos:column="47"/></name></expr>)<pos:position pos:line="90" pos:column="48"/></condition><then pos:line="90" pos:column="48"> <block pos:line="90" pos:column="49">{
                <comment type="block" pos:line="91" pos:column="17">/*
                 * If OpenSSL wants to read more, and we were nonblocking,
                 * report as an EAGAIN.  Otherwise loop, pulling more
                 * data from network filter.
                 *
                 * (This is usually the case when the client forces an SSL
                 * renegotation which is handled implicitly by OpenSSL.)
                 */</comment>
                <expr_stmt><expr><name><name pos:line="99" pos:column="17">inctx<pos:position pos:line="99" pos:column="22"/></name><operator pos:line="99" pos:column="22">-&gt;<pos:position pos:line="99" pos:column="27"/></operator><name pos:line="99" pos:column="24">rc<pos:position pos:line="99" pos:column="26"/></name></name> <operator pos:line="99" pos:column="27">=<pos:position pos:line="99" pos:column="28"/></operator> <name pos:line="99" pos:column="29">APR_EAGAIN<pos:position pos:line="99" pos:column="39"/></name></expr>;<pos:position pos:line="99" pos:column="40"/></expr_stmt>

                <if pos:line="101" pos:column="17">if <condition pos:line="101" pos:column="20">(<expr><operator pos:line="101" pos:column="21">*<pos:position pos:line="101" pos:column="22"/></operator><name pos:line="101" pos:column="22">len<pos:position pos:line="101" pos:column="25"/></name> <operator pos:line="101" pos:column="26">&gt;<pos:position pos:line="101" pos:column="30"/></operator> <literal type="number" pos:line="101" pos:column="28">0<pos:position pos:line="101" pos:column="29"/></literal></expr>)<pos:position pos:line="101" pos:column="30"/></condition><then pos:line="101" pos:column="30"> <block pos:line="101" pos:column="31">{
                    <expr_stmt><expr><name><name pos:line="102" pos:column="21">inctx<pos:position pos:line="102" pos:column="26"/></name><operator pos:line="102" pos:column="26">-&gt;<pos:position pos:line="102" pos:column="31"/></operator><name pos:line="102" pos:column="28">rc<pos:position pos:line="102" pos:column="30"/></name></name> <operator pos:line="102" pos:column="31">=<pos:position pos:line="102" pos:column="32"/></operator> <name pos:line="102" pos:column="33">APR_SUCCESS<pos:position pos:line="102" pos:column="44"/></name></expr>;<pos:position pos:line="102" pos:column="45"/></expr_stmt>
                    <break pos:line="103" pos:column="21">break;<pos:position pos:line="103" pos:column="27"/></break>
                }<pos:position pos:line="104" pos:column="18"/></block></then></if>
                <if pos:line="105" pos:column="17">if <condition pos:line="105" pos:column="20">(<expr><name><name pos:line="105" pos:column="21">inctx<pos:position pos:line="105" pos:column="26"/></name><operator pos:line="105" pos:column="26">-&gt;<pos:position pos:line="105" pos:column="31"/></operator><name pos:line="105" pos:column="28">block<pos:position pos:line="105" pos:column="33"/></name></name> <operator pos:line="105" pos:column="34">==<pos:position pos:line="105" pos:column="36"/></operator> <name pos:line="105" pos:column="37">APR_NONBLOCK_READ<pos:position pos:line="105" pos:column="54"/></name></expr>)<pos:position pos:line="105" pos:column="55"/></condition><then pos:line="105" pos:column="55"> <block pos:line="105" pos:column="56">{
                    <break pos:line="106" pos:column="21">break;<pos:position pos:line="106" pos:column="27"/></break>
                }<pos:position pos:line="107" pos:column="18"/></block></then></if>
                <continue pos:line="108" pos:column="17">continue;<pos:position pos:line="108" pos:column="26"/></continue>  <comment type="block" pos:line="108" pos:column="28">/* Blocking and nothing yet?  Try again. */</comment>
            }<pos:position pos:line="109" pos:column="14"/></block></then>
            <elseif pos:line="110" pos:column="13">else <if pos:line="110" pos:column="18">if <condition pos:line="110" pos:column="21">(<expr><name pos:line="110" pos:column="22">ssl_err<pos:position pos:line="110" pos:column="29"/></name> <operator pos:line="110" pos:column="30">==<pos:position pos:line="110" pos:column="32"/></operator> <name pos:line="110" pos:column="33">SSL_ERROR_SYSCALL<pos:position pos:line="110" pos:column="50"/></name></expr>)<pos:position pos:line="110" pos:column="51"/></condition><then pos:line="110" pos:column="51"> <block pos:line="110" pos:column="52">{
                <if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><call><name pos:line="111" pos:column="21">APR_STATUS_IS_EAGAIN<pos:position pos:line="111" pos:column="41"/></name><argument_list pos:line="111" pos:column="41">(<argument><expr><name><name pos:line="111" pos:column="42">inctx<pos:position pos:line="111" pos:column="47"/></name><operator pos:line="111" pos:column="47">-&gt;<pos:position pos:line="111" pos:column="52"/></operator><name pos:line="111" pos:column="49">rc<pos:position pos:line="111" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="52"/></argument_list></call>
                        <operator pos:line="112" pos:column="25">||<pos:position pos:line="112" pos:column="27"/></operator> <call><name pos:line="112" pos:column="28">APR_STATUS_IS_EINTR<pos:position pos:line="112" pos:column="47"/></name><argument_list pos:line="112" pos:column="47">(<argument><expr><name><name pos:line="112" pos:column="48">inctx<pos:position pos:line="112" pos:column="53"/></name><operator pos:line="112" pos:column="53">-&gt;<pos:position pos:line="112" pos:column="58"/></operator><name pos:line="112" pos:column="55">rc<pos:position pos:line="112" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="112" pos:column="59"/></condition><then pos:line="112" pos:column="59"> <block pos:line="112" pos:column="60">{
                    <comment type="block" pos:line="113" pos:column="21">/* Already read something, return APR_SUCCESS instead. */</comment>
                    <if pos:line="114" pos:column="21">if <condition pos:line="114" pos:column="24">(<expr><operator pos:line="114" pos:column="25">*<pos:position pos:line="114" pos:column="26"/></operator><name pos:line="114" pos:column="26">len<pos:position pos:line="114" pos:column="29"/></name> <operator pos:line="114" pos:column="30">&gt;<pos:position pos:line="114" pos:column="34"/></operator> <literal type="number" pos:line="114" pos:column="32">0<pos:position pos:line="114" pos:column="33"/></literal></expr>)<pos:position pos:line="114" pos:column="34"/></condition><then pos:line="114" pos:column="34"> <block pos:line="114" pos:column="35">{
                        <expr_stmt><expr><name><name pos:line="115" pos:column="25">inctx<pos:position pos:line="115" pos:column="30"/></name><operator pos:line="115" pos:column="30">-&gt;<pos:position pos:line="115" pos:column="35"/></operator><name pos:line="115" pos:column="32">rc<pos:position pos:line="115" pos:column="34"/></name></name> <operator pos:line="115" pos:column="35">=<pos:position pos:line="115" pos:column="36"/></operator> <name pos:line="115" pos:column="37">APR_SUCCESS<pos:position pos:line="115" pos:column="48"/></name></expr>;<pos:position pos:line="115" pos:column="49"/></expr_stmt>
                        <break pos:line="116" pos:column="25">break;<pos:position pos:line="116" pos:column="31"/></break>
                    }<pos:position pos:line="117" pos:column="22"/></block></then></if>
                    <if pos:line="118" pos:column="21">if <condition pos:line="118" pos:column="24">(<expr><name><name pos:line="118" pos:column="25">inctx<pos:position pos:line="118" pos:column="30"/></name><operator pos:line="118" pos:column="30">-&gt;<pos:position pos:line="118" pos:column="35"/></operator><name pos:line="118" pos:column="32">block<pos:position pos:line="118" pos:column="37"/></name></name> <operator pos:line="118" pos:column="38">==<pos:position pos:line="118" pos:column="40"/></operator> <name pos:line="118" pos:column="41">APR_NONBLOCK_READ<pos:position pos:line="118" pos:column="58"/></name></expr>)<pos:position pos:line="118" pos:column="59"/></condition><then pos:line="118" pos:column="59"> <block pos:line="118" pos:column="60">{
                        <break pos:line="119" pos:column="25">break;<pos:position pos:line="119" pos:column="31"/></break>
                    }<pos:position pos:line="120" pos:column="22"/></block></then></if>
                    <continue pos:line="121" pos:column="21">continue;<pos:position pos:line="121" pos:column="30"/></continue>  <comment type="block" pos:line="121" pos:column="32">/* Blocking and nothing yet?  Try again. */</comment>
                }<pos:position pos:line="122" pos:column="18"/></block></then>
                <else pos:line="123" pos:column="17">else <block pos:line="123" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="124" pos:column="21">ap_log_error<pos:position pos:line="124" pos:column="33"/></name><argument_list pos:line="124" pos:column="33">(<argument><expr><name pos:line="124" pos:column="34">APLOG_MARK<pos:position pos:line="124" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="46">APLOG_INFO<pos:position pos:line="124" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="58">inctx<pos:position pos:line="124" pos:column="63"/></name><operator pos:line="124" pos:column="63">-&gt;<pos:position pos:line="124" pos:column="68"/></operator><name pos:line="124" pos:column="65">rc<pos:position pos:line="124" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="69">c<pos:position pos:line="124" pos:column="70"/></name><operator pos:line="124" pos:column="70">-&gt;<pos:position pos:line="124" pos:column="75"/></operator><name pos:line="124" pos:column="72">base_server<pos:position pos:line="124" pos:column="83"/></name></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="125" pos:column="33">"SSL input filter read failed."<pos:position pos:line="125" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="66"/></expr_stmt>
                }<pos:position pos:line="126" pos:column="18"/></block></else></if>
            }<pos:position pos:line="127" pos:column="14"/></block></then></if></elseif>
            <else pos:line="128" pos:column="13">else <comment type="block" pos:line="128" pos:column="18">/* if (ssl_err == SSL_ERROR_SSL) */</comment> <block pos:line="128" pos:column="54">{
                <comment type="block" pos:line="129" pos:column="17">/*
                 * Log SSL errors and any unexpected conditions.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="132" pos:column="17">ap_log_error<pos:position pos:line="132" pos:column="29"/></name><argument_list pos:line="132" pos:column="29">(<argument><expr><name pos:line="132" pos:column="30">APLOG_MARK<pos:position pos:line="132" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="42">APLOG_INFO<pos:position pos:line="132" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="54">inctx<pos:position pos:line="132" pos:column="59"/></name><operator pos:line="132" pos:column="59">-&gt;<pos:position pos:line="132" pos:column="64"/></operator><name pos:line="132" pos:column="61">rc<pos:position pos:line="132" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="65">c<pos:position pos:line="132" pos:column="66"/></name><operator pos:line="132" pos:column="66">-&gt;<pos:position pos:line="132" pos:column="71"/></operator><name pos:line="132" pos:column="68">base_server<pos:position pos:line="132" pos:column="79"/></name></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="133" pos:column="29">"SSL library error %d reading data"<pos:position pos:line="133" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="133" pos:column="66">ssl_err<pos:position pos:line="133" pos:column="73"/></name></expr></argument>)<pos:position pos:line="133" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="134" pos:column="17">ssl_log_ssl_error<pos:position pos:line="134" pos:column="34"/></name><argument_list pos:line="134" pos:column="34">(<argument><expr><name pos:line="134" pos:column="35">APLOG_MARK<pos:position pos:line="134" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="47">APLOG_INFO<pos:position pos:line="134" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="59">c<pos:position pos:line="134" pos:column="60"/></name><operator pos:line="134" pos:column="60">-&gt;<pos:position pos:line="134" pos:column="65"/></operator><name pos:line="134" pos:column="62">base_server<pos:position pos:line="134" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="134" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="75"/></expr_stmt>

            }<pos:position pos:line="136" pos:column="14"/></block></else></if>
            <if pos:line="137" pos:column="13">if <condition pos:line="137" pos:column="16">(<expr><name><name pos:line="137" pos:column="17">inctx<pos:position pos:line="137" pos:column="22"/></name><operator pos:line="137" pos:column="22">-&gt;<pos:position pos:line="137" pos:column="27"/></operator><name pos:line="137" pos:column="24">rc<pos:position pos:line="137" pos:column="26"/></name></name> <operator pos:line="137" pos:column="27">==<pos:position pos:line="137" pos:column="29"/></operator> <name pos:line="137" pos:column="30">APR_SUCCESS<pos:position pos:line="137" pos:column="41"/></name></expr>)<pos:position pos:line="137" pos:column="42"/></condition><then pos:line="137" pos:column="42"> <block pos:line="137" pos:column="43">{
                <expr_stmt><expr><name><name pos:line="138" pos:column="17">inctx<pos:position pos:line="138" pos:column="22"/></name><operator pos:line="138" pos:column="22">-&gt;<pos:position pos:line="138" pos:column="27"/></operator><name pos:line="138" pos:column="24">rc<pos:position pos:line="138" pos:column="26"/></name></name> <operator pos:line="138" pos:column="27">=<pos:position pos:line="138" pos:column="28"/></operator> <name pos:line="138" pos:column="29">APR_EGENERAL<pos:position pos:line="138" pos:column="41"/></name></expr>;<pos:position pos:line="138" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="139" pos:column="14"/></block></then></if>
            <break pos:line="140" pos:column="13">break;<pos:position pos:line="140" pos:column="19"/></break>
        }<pos:position pos:line="141" pos:column="10"/></block></else></if>
    }<pos:position pos:line="142" pos:column="6"/></block></while>
    <return pos:line="143" pos:column="5">return <expr><name><name pos:line="143" pos:column="12">inctx<pos:position pos:line="143" pos:column="17"/></name><operator pos:line="143" pos:column="17">-&gt;<pos:position pos:line="143" pos:column="22"/></operator><name pos:line="143" pos:column="19">rc<pos:position pos:line="143" pos:column="21"/></name></name></expr>;<pos:position pos:line="143" pos:column="22"/></return>
}<pos:position pos:line="144" pos:column="2"/></block></function></unit>

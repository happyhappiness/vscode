<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6232.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_socket_t<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">send_request<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">BIO<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">request<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">apr_uri_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">uri<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_interval_time_t<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">timeout<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">conn_rec<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">c<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="48">apr_pool_t<pos:position pos:line="3" pos:column="58"/></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">p<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_sockaddr_t<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">sa<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_socket_t<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">sd<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">buf<pos:position pos:line="8" pos:column="13"/></name><index pos:line="8" pos:column="13">[<expr><name pos:line="8" pos:column="14">HUGE_STRING_LEN<pos:position pos:line="8" pos:column="29"/></name></expr>]<pos:position pos:line="8" pos:column="30"/></index></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">len<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">rv<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">apr_sockaddr_info_get<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><operator pos:line="11" pos:column="32">&amp;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="33">sa<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="37">uri<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-&gt;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="42">hostname<pos:position pos:line="11" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">APR_UNSPEC<pos:position pos:line="11" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="64">uri<pos:position pos:line="11" pos:column="67"/></name><operator pos:line="11" pos:column="67">-&gt;<pos:position pos:line="11" pos:column="72"/></operator><name pos:line="11" pos:column="69">port<pos:position pos:line="11" pos:column="73"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="75">0<pos:position pos:line="11" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="78">p<pos:position pos:line="11" pos:column="79"/></name></expr></argument>)<pos:position pos:line="11" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="81"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">rv<pos:position pos:line="12" pos:column="11"/></name></expr>)<pos:position pos:line="12" pos:column="12"/></condition><then pos:line="12" pos:column="12"> <block pos:line="12" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_log_cerror<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">APLOG_MARK<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">APLOG_ERR<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">rv<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">c<pos:position pos:line="13" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="53">APLOGNO<pos:position pos:line="13" pos:column="60"/></name><argument_list pos:line="13" pos:column="60">(<argument><expr><literal type="number" pos:line="13" pos:column="61">01972<pos:position pos:line="13" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call>
                      <literal type="string" pos:line="14" pos:column="23">"could not resolve address of OCSP responder %s"<pos:position pos:line="14" pos:column="71"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="15" pos:column="23">uri<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">hostinfo<pos:position pos:line="15" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* establish a connection to the OCSP responder */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ap_log_cerror<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">APLOG_MARK<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">APLOG_DEBUG<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="44">0<pos:position pos:line="20" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">c<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="50">APLOGNO<pos:position pos:line="20" pos:column="57"/></name><argument_list pos:line="20" pos:column="57">(<argument><expr><literal type="number" pos:line="20" pos:column="58">01973<pos:position pos:line="20" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call>
                  <literal type="string" pos:line="21" pos:column="19">"connecting to OCSP responder '%s'"<pos:position pos:line="21" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="56">uri<pos:position pos:line="21" pos:column="59"/></name><operator pos:line="21" pos:column="59">-&gt;<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="61">hostinfo<pos:position pos:line="21" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* Cycle through address until a connect() succeeds. */</comment>
    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init pos:line="24" pos:column="10">;<pos:position pos:line="24" pos:column="11"/></init> <condition><expr><name pos:line="24" pos:column="12">sa<pos:position pos:line="24" pos:column="14"/></name></expr>;<pos:position pos:line="24" pos:column="15"/></condition> <incr><expr><name pos:line="24" pos:column="16">sa<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name><name pos:line="24" pos:column="21">sa<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">next<pos:position pos:line="24" pos:column="29"/></name></name></expr></incr>)<pos:position pos:line="24" pos:column="30"/></control> <block pos:line="24" pos:column="31">{
        <expr_stmt><expr><name pos:line="25" pos:column="9">rv<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">apr_socket_create<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><operator pos:line="25" pos:column="32">&amp;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="33">sd<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="37">sa<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">-&gt;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="41">family<pos:position pos:line="25" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">SOCK_STREAM<pos:position pos:line="25" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="62">APR_PROTO_TCP<pos:position pos:line="25" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="77">p<pos:position pos:line="25" pos:column="78"/></name></expr></argument>)<pos:position pos:line="25" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="80"/></expr_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">rv<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">==<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="19">APR_SUCCESS<pos:position pos:line="26" pos:column="30"/></name></expr>)<pos:position pos:line="26" pos:column="31"/></condition><then pos:line="26" pos:column="31"> <block pos:line="26" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">apr_socket_timeout_set<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name pos:line="27" pos:column="36">sd<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="40">timeout<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>

            <expr_stmt><expr><name pos:line="29" pos:column="13">rv<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">apr_socket_connect<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">sd<pos:position pos:line="29" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="41">sa<pos:position pos:line="29" pos:column="43"/></name></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><name pos:line="30" pos:column="17">rv<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">==<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">APR_SUCCESS<pos:position pos:line="30" pos:column="34"/></name></expr>)<pos:position pos:line="30" pos:column="35"/></condition><then pos:line="30" pos:column="35"> <block pos:line="30" pos:column="36">{
                <break pos:line="31" pos:column="17">break;<pos:position pos:line="31" pos:column="23"/></break>
            }<pos:position pos:line="32" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">apr_socket_close<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">sd<pos:position pos:line="33" pos:column="32"/></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></for>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">sa<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">==<pos:position pos:line="37" pos:column="14"/></operator> <name pos:line="37" pos:column="15">NULL<pos:position pos:line="37" pos:column="19"/></name></expr>)<pos:position pos:line="37" pos:column="20"/></condition><then pos:line="37" pos:column="20"> <block pos:line="37" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ap_log_cerror<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><name pos:line="38" pos:column="23">APLOG_MARK<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">APLOG_ERR<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="46">rv<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">c<pos:position pos:line="38" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="53">APLOGNO<pos:position pos:line="38" pos:column="60"/></name><argument_list pos:line="38" pos:column="60">(<argument><expr><literal type="number" pos:line="38" pos:column="61">01974<pos:position pos:line="38" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="67"/></argument_list></call>
                      <literal type="string" pos:line="39" pos:column="23">"could not connect to OCSP responder '%s'"<pos:position pos:line="39" pos:column="65"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="40" pos:column="23">uri<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">-&gt;<pos:position pos:line="40" pos:column="31"/></operator><name pos:line="40" pos:column="28">hostinfo<pos:position pos:line="40" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>
        <return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">NULL<pos:position pos:line="41" pos:column="20"/></name></expr>;<pos:position pos:line="41" pos:column="21"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="44" pos:column="5">/* send the request and get a response */</comment>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">ap_log_cerror<pos:position pos:line="45" pos:column="18"/></name><argument_list pos:line="45" pos:column="18">(<argument><expr><name pos:line="45" pos:column="19">APLOG_MARK<pos:position pos:line="45" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="31">APLOG_DEBUG<pos:position pos:line="45" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="44">0<pos:position pos:line="45" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="47">c<pos:position pos:line="45" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="50">APLOGNO<pos:position pos:line="45" pos:column="57"/></name><argument_list pos:line="45" pos:column="57">(<argument><expr><literal type="number" pos:line="45" pos:column="58">01975<pos:position pos:line="45" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="64"/></argument_list></call>
                 <literal type="string" pos:line="46" pos:column="18">"sending request to OCSP responder"<pos:position pos:line="46" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="55"/></expr_stmt>

    <while pos:line="48" pos:column="5">while <condition pos:line="48" pos:column="11">(<expr><operator pos:line="48" pos:column="12">(<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="13">len<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <call><name pos:line="48" pos:column="19">BIO_read<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><name pos:line="48" pos:column="28">request<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="37">buf<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="42">sizeof <name pos:line="48" pos:column="49">buf<pos:position pos:line="48" pos:column="52"/></name></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call><operator pos:line="48" pos:column="53">)<pos:position pos:line="48" pos:column="54"/></operator> <operator pos:line="48" pos:column="55">&gt;<pos:position pos:line="48" pos:column="59"/></operator> <literal type="number" pos:line="48" pos:column="57">0<pos:position pos:line="48" pos:column="58"/></literal></expr>)<pos:position pos:line="48" pos:column="59"/></condition> <block pos:line="48" pos:column="60">{
        <decl_stmt><decl><type><name pos:line="49" pos:column="9">char<pos:position pos:line="49" pos:column="13"/></name> <modifier pos:line="49" pos:column="14">*<pos:position pos:line="49" pos:column="15"/></modifier></type><name pos:line="49" pos:column="15">wbuf<pos:position pos:line="49" pos:column="19"/></name> <init pos:line="49" pos:column="20">= <expr><name pos:line="49" pos:column="22">buf<pos:position pos:line="49" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="49" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="50" pos:column="9">apr_size_t<pos:position pos:line="50" pos:column="19"/></name></type> <name pos:line="50" pos:column="20">remain<pos:position pos:line="50" pos:column="26"/></name> <init pos:line="50" pos:column="27">= <expr><name pos:line="50" pos:column="29">len<pos:position pos:line="50" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="50" pos:column="33"/></decl_stmt>

        <do pos:line="52" pos:column="9">do <block pos:line="52" pos:column="12">{
            <decl_stmt><decl><type><name pos:line="53" pos:column="13">apr_size_t<pos:position pos:line="53" pos:column="23"/></name></type> <name pos:line="53" pos:column="24">wlen<pos:position pos:line="53" pos:column="28"/></name> <init pos:line="53" pos:column="29">= <expr><name pos:line="53" pos:column="31">remain<pos:position pos:line="53" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="53" pos:column="38"/></decl_stmt>

            <expr_stmt><expr><name pos:line="55" pos:column="13">rv<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <call><name pos:line="55" pos:column="18">apr_socket_send<pos:position pos:line="55" pos:column="33"/></name><argument_list pos:line="55" pos:column="33">(<argument><expr><name pos:line="55" pos:column="34">sd<pos:position pos:line="55" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="38">wbuf<pos:position pos:line="55" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="44">&amp;<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="45">wlen<pos:position pos:line="55" pos:column="49"/></name></expr></argument>)<pos:position pos:line="55" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="56" pos:column="13">wbuf<pos:position pos:line="56" pos:column="17"/></name> <operator pos:line="56" pos:column="18">+=<pos:position pos:line="56" pos:column="20"/></operator> <name pos:line="56" pos:column="21">remain<pos:position pos:line="56" pos:column="27"/></name></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="57" pos:column="13">remain<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">-=<pos:position pos:line="57" pos:column="22"/></operator> <name pos:line="57" pos:column="23">wlen<pos:position pos:line="57" pos:column="27"/></name></expr>;<pos:position pos:line="57" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block> while <condition pos:line="58" pos:column="17">(<expr><name pos:line="58" pos:column="18">rv<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">==<pos:position pos:line="58" pos:column="23"/></operator> <name pos:line="58" pos:column="24">APR_SUCCESS<pos:position pos:line="58" pos:column="35"/></name> <operator pos:line="58" pos:column="36">&amp;&amp;<pos:position pos:line="58" pos:column="46"/></operator> <name pos:line="58" pos:column="39">remain<pos:position pos:line="58" pos:column="45"/></name> <operator pos:line="58" pos:column="46">&gt;<pos:position pos:line="58" pos:column="50"/></operator> <literal type="number" pos:line="58" pos:column="48">0<pos:position pos:line="58" pos:column="49"/></literal></expr>)<pos:position pos:line="58" pos:column="50"/></condition>;<pos:position pos:line="58" pos:column="51"/></do>

        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">rv<pos:position pos:line="60" pos:column="15"/></name></expr>)<pos:position pos:line="60" pos:column="16"/></condition><then pos:line="60" pos:column="16"> <block pos:line="60" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">apr_socket_close<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">(<argument><expr><name pos:line="61" pos:column="30">sd<pos:position pos:line="61" pos:column="32"/></name></expr></argument>)<pos:position pos:line="61" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">ap_log_cerror<pos:position pos:line="62" pos:column="26"/></name><argument_list pos:line="62" pos:column="26">(<argument><expr><name pos:line="62" pos:column="27">APLOG_MARK<pos:position pos:line="62" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="39">APLOG_ERR<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="50">rv<pos:position pos:line="62" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="54">c<pos:position pos:line="62" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="57">APLOGNO<pos:position pos:line="62" pos:column="64"/></name><argument_list pos:line="62" pos:column="64">(<argument><expr><literal type="number" pos:line="62" pos:column="65">01976<pos:position pos:line="62" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="71"/></argument_list></call>
                          <literal type="string" pos:line="63" pos:column="27">"failed to send request to OCSP responder '%s'"<pos:position pos:line="63" pos:column="74"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="64" pos:column="27">uri<pos:position pos:line="64" pos:column="30"/></name><operator pos:line="64" pos:column="30">-&gt;<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="32">hostinfo<pos:position pos:line="64" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="42"/></expr_stmt>
            <return pos:line="65" pos:column="13">return <expr><name pos:line="65" pos:column="20">NULL<pos:position pos:line="65" pos:column="24"/></name></expr>;<pos:position pos:line="65" pos:column="25"/></return>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>
    }<pos:position pos:line="67" pos:column="6"/></block></while>

    <return pos:line="69" pos:column="5">return <expr><name pos:line="69" pos:column="12">sd<pos:position pos:line="69" pos:column="14"/></name></expr>;<pos:position pos:line="69" pos:column="15"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

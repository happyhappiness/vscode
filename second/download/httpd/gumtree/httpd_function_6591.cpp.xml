<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6591.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_mplx_release_and_join<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">h2_mplx<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">m<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">apr_thread_cond_t<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">wait<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">acquired<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">h2_workers_unregister<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name><name pos:line="6" pos:column="27">m<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">workers<pos:position pos:line="6" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="39">m<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="42"/></expr_stmt>
    
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">status<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">enter_mutex<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">m<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="34">&amp;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="35">acquired<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call><operator pos:line="8" pos:column="44">)<pos:position pos:line="8" pos:column="45"/></operator> <operator pos:line="8" pos:column="46">==<pos:position pos:line="8" pos:column="48"/></operator> <name pos:line="8" pos:column="49">APR_SUCCESS<pos:position pos:line="8" pos:column="60"/></name></expr>)<pos:position pos:line="8" pos:column="61"/></condition><then pos:line="8" pos:column="61"> <block pos:line="8" pos:column="62">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="16">wait_secs<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><literal type="number" pos:line="9" pos:column="28">5<pos:position pos:line="9" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">h2_ihash_empty<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name><name pos:line="11" pos:column="29">m<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">streams<pos:position pos:line="11" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call> <operator pos:line="11" pos:column="41">&amp;&amp;<pos:position pos:line="11" pos:column="51"/></operator> <call><name pos:line="11" pos:column="44">APLOGctrace1<pos:position pos:line="11" pos:column="56"/></name><argument_list pos:line="11" pos:column="56">(<argument><expr><name><name pos:line="11" pos:column="57">m<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">-&gt;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="60">c<pos:position pos:line="11" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="63"/></condition><then pos:line="11" pos:column="63"> <block pos:line="11" pos:column="64">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">ap_log_cerror<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">APLOG_MARK<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="39">APLOG_TRACE1<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="53">0<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="56">m<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">-&gt;<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="59">c<pos:position pos:line="12" pos:column="60"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="13" pos:column="27">"h2_mplx(%ld): release_join with %d streams open, "<pos:position pos:line="13" pos:column="78"/></literal>
                          <literal type="string" pos:line="14" pos:column="27">"%d streams resume, %d streams ready, %d tasks"<pos:position pos:line="14" pos:column="74"/></literal></expr></argument>, 
                          <argument><expr><name><name pos:line="15" pos:column="27">m<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">id<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="34">(<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="35">int<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">)<pos:position pos:line="15" pos:column="39"/></operator><call><name pos:line="15" pos:column="39">h2_ihash_count<pos:position pos:line="15" pos:column="53"/></name><argument_list pos:line="15" pos:column="53">(<argument><expr><name><name pos:line="15" pos:column="54">m<pos:position pos:line="15" pos:column="55"/></name><operator pos:line="15" pos:column="55">-&gt;<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="57">streams<pos:position pos:line="15" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr></argument>,
                          <argument><expr><operator pos:line="16" pos:column="27">(<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="28">int<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">)<pos:position pos:line="16" pos:column="32"/></operator><call><name pos:line="16" pos:column="32">h2_ihash_count<pos:position pos:line="16" pos:column="46"/></name><argument_list pos:line="16" pos:column="46">(<argument><expr><name><name pos:line="16" pos:column="47">m<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">sresume<pos:position pos:line="16" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr></argument>, 
                          <argument><expr><operator pos:line="17" pos:column="27">(<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">int<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">)<pos:position pos:line="17" pos:column="32"/></operator><call><name pos:line="17" pos:column="32">h2_ihash_count<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><name><name pos:line="17" pos:column="47">m<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">-&gt;<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="50">sready<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr></argument>, 
                          <argument><expr><operator pos:line="18" pos:column="27">(<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">int<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">)<pos:position pos:line="18" pos:column="32"/></operator><call><name pos:line="18" pos:column="32">h2_ihash_count<pos:position pos:line="18" pos:column="46"/></name><argument_list pos:line="18" pos:column="46">(<argument><expr><name><name pos:line="18" pos:column="47">m<pos:position pos:line="18" pos:column="48"/></name><operator pos:line="18" pos:column="48">-&gt;<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="50">tasks<pos:position pos:line="18" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">h2_ihash_iter<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name><name pos:line="19" pos:column="27">m<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">streams<pos:position pos:line="19" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">report_stream_iter<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">m<pos:position pos:line="19" pos:column="60"/></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        
        <comment type="block" pos:line="22" pos:column="9">/* disable WINDOW_UPDATE callbacks */</comment>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">h2_mplx_set_consumed_cb<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">m<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">NULL<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">NULL<pos:position pos:line="23" pos:column="46"/></name></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>
        
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><call><name pos:line="25" pos:column="14">h2_ihash_empty<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name><name pos:line="25" pos:column="29">m<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">-&gt;<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="32">shold<pos:position pos:line="25" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="39"/></condition><then pos:line="25" pos:column="39"> <block pos:line="25" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">ap_log_cerror<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">APLOG_MARK<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">APLOG_TRACE2<pos:position pos:line="26" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="53">0<pos:position pos:line="26" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="56">m<pos:position pos:line="26" pos:column="57"/></name><operator pos:line="26" pos:column="57">-&gt;<pos:position pos:line="26" pos:column="62"/></operator><name pos:line="26" pos:column="59">c<pos:position pos:line="26" pos:column="60"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="27" pos:column="27">"h2_mplx(%ld): start release_join with %d streams in hold"<pos:position pos:line="27" pos:column="85"/></literal></expr></argument>, 
                          <argument><expr><name><name pos:line="28" pos:column="27">m<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">-&gt;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="30">id<pos:position pos:line="28" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="34">(<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="35">int<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">)<pos:position pos:line="28" pos:column="39"/></operator><call><name pos:line="28" pos:column="39">h2_ihash_count<pos:position pos:line="28" pos:column="53"/></name><argument_list pos:line="28" pos:column="53">(<argument><expr><name><name pos:line="28" pos:column="54">m<pos:position pos:line="28" pos:column="55"/></name><operator pos:line="28" pos:column="55">-&gt;<pos:position pos:line="28" pos:column="60"/></operator><name pos:line="28" pos:column="57">shold<pos:position pos:line="28" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><call><name pos:line="30" pos:column="14">h2_ihash_empty<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name><name pos:line="30" pos:column="29">m<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">-&gt;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="32">spurge<pos:position pos:line="30" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="40"/></condition><then pos:line="30" pos:column="40"> <block pos:line="30" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">ap_log_cerror<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">APLOG_MARK<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="39">APLOG_TRACE2<pos:position pos:line="31" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="53">0<pos:position pos:line="31" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="56">m<pos:position pos:line="31" pos:column="57"/></name><operator pos:line="31" pos:column="57">-&gt;<pos:position pos:line="31" pos:column="62"/></operator><name pos:line="31" pos:column="59">c<pos:position pos:line="31" pos:column="60"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="32" pos:column="27">"h2_mplx(%ld): start release_join with %d streams to purge"<pos:position pos:line="32" pos:column="86"/></literal></expr></argument>, 
                          <argument><expr><name><name pos:line="33" pos:column="27">m<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">-&gt;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="30">id<pos:position pos:line="33" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="34">(<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="35">int<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">)<pos:position pos:line="33" pos:column="39"/></operator><call><name pos:line="33" pos:column="39">h2_ihash_count<pos:position pos:line="33" pos:column="53"/></name><argument_list pos:line="33" pos:column="53">(<argument><expr><name><name pos:line="33" pos:column="54">m<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">-&gt;<pos:position pos:line="33" pos:column="60"/></operator><name pos:line="33" pos:column="57">spurge<pos:position pos:line="33" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">h2_iq_clear<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><name><name pos:line="36" pos:column="21">m<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">q<pos:position pos:line="36" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">apr_thread_cond_broadcast<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name><name pos:line="37" pos:column="35">m<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">-&gt;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="38">task_thawed<pos:position pos:line="37" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
        <while pos:line="38" pos:column="9">while <condition pos:line="38" pos:column="15">(<expr><operator pos:line="38" pos:column="16">!<pos:position pos:line="38" pos:column="17"/></operator><call><name pos:line="38" pos:column="17">h2_ihash_iter<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name><name pos:line="38" pos:column="31">m<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">streams<pos:position pos:line="38" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="43">stream_done_iter<pos:position pos:line="38" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="61">m<pos:position pos:line="38" pos:column="62"/></name></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="64"/></condition> <block pos:line="38" pos:column="65">{
            <comment type="block" pos:line="39" pos:column="13">/* iterate until all streams have been removed */</comment>
        }<pos:position pos:line="40" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">AP_DEBUG_ASSERT<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><call><name pos:line="41" pos:column="25">h2_ihash_empty<pos:position pos:line="41" pos:column="39"/></name><argument_list pos:line="41" pos:column="39">(<argument><expr><name><name pos:line="41" pos:column="40">m<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">-&gt;<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="43">streams<pos:position pos:line="41" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt>
    
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><call><name pos:line="43" pos:column="14">h2_ihash_empty<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><name><name pos:line="43" pos:column="29">m<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">-&gt;<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="32">shold<pos:position pos:line="43" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="39"/></condition><then pos:line="43" pos:column="39"> <block pos:line="43" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">ap_log_cerror<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name pos:line="44" pos:column="27">APLOG_MARK<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="39">APLOG_TRACE2<pos:position pos:line="44" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="53">0<pos:position pos:line="44" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="56">m<pos:position pos:line="44" pos:column="57"/></name><operator pos:line="44" pos:column="57">-&gt;<pos:position pos:line="44" pos:column="62"/></operator><name pos:line="44" pos:column="59">c<pos:position pos:line="44" pos:column="60"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="45" pos:column="27">"h2_mplx(%ld): 2. release_join with %d streams in hold"<pos:position pos:line="45" pos:column="82"/></literal></expr></argument>, 
                          <argument><expr><name><name pos:line="46" pos:column="27">m<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">-&gt;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="30">id<pos:position pos:line="46" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="34">(<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="35">int<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">)<pos:position pos:line="46" pos:column="39"/></operator><call><name pos:line="46" pos:column="39">h2_ihash_count<pos:position pos:line="46" pos:column="53"/></name><argument_list pos:line="46" pos:column="53">(<argument><expr><name><name pos:line="46" pos:column="54">m<pos:position pos:line="46" pos:column="55"/></name><operator pos:line="46" pos:column="55">-&gt;<pos:position pos:line="46" pos:column="60"/></operator><name pos:line="46" pos:column="57">shold<pos:position pos:line="46" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">!<pos:position pos:line="48" pos:column="14"/></operator><call><name pos:line="48" pos:column="14">h2_ihash_empty<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name><name pos:line="48" pos:column="29">m<pos:position pos:line="48" pos:column="30"/></name><operator pos:line="48" pos:column="30">-&gt;<pos:position pos:line="48" pos:column="35"/></operator><name pos:line="48" pos:column="32">spurge<pos:position pos:line="48" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="40"/></condition><then pos:line="48" pos:column="40"> <block pos:line="48" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">ap_log_cerror<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><name pos:line="49" pos:column="27">APLOG_MARK<pos:position pos:line="49" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="39">APLOG_TRACE2<pos:position pos:line="49" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="53">0<pos:position pos:line="49" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="56">m<pos:position pos:line="49" pos:column="57"/></name><operator pos:line="49" pos:column="57">-&gt;<pos:position pos:line="49" pos:column="62"/></operator><name pos:line="49" pos:column="59">c<pos:position pos:line="49" pos:column="60"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="50" pos:column="27">"h2_mplx(%ld): 2. release_join with %d streams to purge"<pos:position pos:line="50" pos:column="83"/></literal></expr></argument>, 
                          <argument><expr><name><name pos:line="51" pos:column="27">m<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">-&gt;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="30">id<pos:position pos:line="51" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="34">(<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="35">int<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">)<pos:position pos:line="51" pos:column="39"/></operator><call><name pos:line="51" pos:column="39">h2_ihash_count<pos:position pos:line="51" pos:column="53"/></name><argument_list pos:line="51" pos:column="53">(<argument><expr><name><name pos:line="51" pos:column="54">m<pos:position pos:line="51" pos:column="55"/></name><operator pos:line="51" pos:column="55">-&gt;<pos:position pos:line="51" pos:column="60"/></operator><name pos:line="51" pos:column="57">spurge<pos:position pos:line="51" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>
        
        <comment type="block" pos:line="54" pos:column="9">/* If we still have busy workers, we cannot release our memory
         * pool yet, as tasks have references to us.
         * Any operation on the task slave connection will from now on
         * be errored ECONNRESET/ABORTED, so processing them should fail 
         * and workers *should* return in a timely fashion.
         */</comment>
        <for pos:line="60" pos:column="9">for <control pos:line="60" pos:column="13">(<init><expr><name pos:line="60" pos:column="14">i<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">=<pos:position pos:line="60" pos:column="17"/></operator> <literal type="number" pos:line="60" pos:column="18">0<pos:position pos:line="60" pos:column="19"/></literal></expr>;<pos:position pos:line="60" pos:column="20"/></init> <condition><expr><name><name pos:line="60" pos:column="21">m<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">-&gt;<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="24">workers_busy<pos:position pos:line="60" pos:column="36"/></name></name> <operator pos:line="60" pos:column="37">&gt;<pos:position pos:line="60" pos:column="41"/></operator> <literal type="number" pos:line="60" pos:column="39">0<pos:position pos:line="60" pos:column="40"/></literal></expr>;<pos:position pos:line="60" pos:column="41"/></condition> <incr><expr><operator pos:line="60" pos:column="42">++<pos:position pos:line="60" pos:column="44"/></operator><name pos:line="60" pos:column="44">i<pos:position pos:line="60" pos:column="45"/></name></expr></incr>)<pos:position pos:line="60" pos:column="46"/></control> <block pos:line="60" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">h2_ihash_iter<pos:position pos:line="61" pos:column="26"/></name><argument_list pos:line="61" pos:column="26">(<argument><expr><name><name pos:line="61" pos:column="27">m<pos:position pos:line="61" pos:column="28"/></name><operator pos:line="61" pos:column="28">-&gt;<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="30">tasks<pos:position pos:line="61" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="37">task_abort_connection<pos:position pos:line="61" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="60">m<pos:position pos:line="61" pos:column="61"/></name></expr></argument>)<pos:position pos:line="61" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="63"/></expr_stmt>
            
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">m<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">-&gt;<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="16">join_wait<pos:position pos:line="63" pos:column="25"/></name></name> <operator pos:line="63" pos:column="26">=<pos:position pos:line="63" pos:column="27"/></operator> <name pos:line="63" pos:column="28">wait<pos:position pos:line="63" pos:column="32"/></name></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name pos:line="64" pos:column="13">status<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">=<pos:position pos:line="64" pos:column="21"/></operator> <call><name pos:line="64" pos:column="22">apr_thread_cond_timedwait<pos:position pos:line="64" pos:column="47"/></name><argument_list pos:line="64" pos:column="47">(<argument><expr><name pos:line="64" pos:column="48">wait<pos:position pos:line="64" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="54">m<pos:position pos:line="64" pos:column="55"/></name><operator pos:line="64" pos:column="55">-&gt;<pos:position pos:line="64" pos:column="60"/></operator><name pos:line="64" pos:column="57">lock<pos:position pos:line="64" pos:column="61"/></name></name></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="63">apr_time_from_sec<pos:position pos:line="64" pos:column="80"/></name><argument_list pos:line="64" pos:column="80">(<argument><expr><name pos:line="64" pos:column="81">wait_secs<pos:position pos:line="64" pos:column="90"/></name></expr></argument>)<pos:position pos:line="64" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="93"/></expr_stmt>
            
            <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><call><name pos:line="66" pos:column="17">APR_STATUS_IS_TIMEUP<pos:position pos:line="66" pos:column="37"/></name><argument_list pos:line="66" pos:column="37">(<argument><expr><name pos:line="66" pos:column="38">status<pos:position pos:line="66" pos:column="44"/></name></expr></argument>)<pos:position pos:line="66" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="46"/></condition><then pos:line="66" pos:column="46"> <block pos:line="66" pos:column="47">{
                <if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name pos:line="67" pos:column="21">i<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">&gt;<pos:position pos:line="67" pos:column="27"/></operator> <literal type="number" pos:line="67" pos:column="25">0<pos:position pos:line="67" pos:column="26"/></literal></expr>)<pos:position pos:line="67" pos:column="27"/></condition><then pos:line="67" pos:column="27"> <block pos:line="67" pos:column="28">{
                    <comment type="block" pos:line="68" pos:column="21">/* Oh, oh. Still we wait for assigned  workers to report that 
                     * they are done. Unless we have a bug, a worker seems to be hanging. 
                     * If we exit now, all will be deallocated and the worker, once 
                     * it does return, will walk all over freed memory...
                     */</comment>
                    <expr_stmt><expr><call><name pos:line="73" pos:column="21">ap_log_cerror<pos:position pos:line="73" pos:column="34"/></name><argument_list pos:line="73" pos:column="34">(<argument><expr><name pos:line="73" pos:column="35">APLOG_MARK<pos:position pos:line="73" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="47">APLOG_WARNING<pos:position pos:line="73" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="62">0<pos:position pos:line="73" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="65">m<pos:position pos:line="73" pos:column="66"/></name><operator pos:line="73" pos:column="66">-&gt;<pos:position pos:line="73" pos:column="71"/></operator><name pos:line="73" pos:column="68">c<pos:position pos:line="73" pos:column="69"/></name></name></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="71">APLOGNO<pos:position pos:line="73" pos:column="78"/></name><argument_list pos:line="73" pos:column="78">(<argument><expr><literal type="number" pos:line="73" pos:column="79">03198<pos:position pos:line="73" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="85"/></argument_list></call>
                                  <literal type="string" pos:line="74" pos:column="35">"h2_mplx(%ld): release, waiting for %d seconds now for "<pos:position pos:line="74" pos:column="91"/></literal>
                                  <literal type="string" pos:line="75" pos:column="35">"%d h2_workers to return, have still %d tasks outstanding"<pos:position pos:line="75" pos:column="93"/></literal></expr></argument>, 
                                  <argument><expr><name><name pos:line="76" pos:column="35">m<pos:position pos:line="76" pos:column="36"/></name><operator pos:line="76" pos:column="36">-&gt;<pos:position pos:line="76" pos:column="41"/></operator><name pos:line="76" pos:column="38">id<pos:position pos:line="76" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="42">i<pos:position pos:line="76" pos:column="43"/></name><operator pos:line="76" pos:column="43">*<pos:position pos:line="76" pos:column="44"/></operator><name pos:line="76" pos:column="44">wait_secs<pos:position pos:line="76" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="55">m<pos:position pos:line="76" pos:column="56"/></name><operator pos:line="76" pos:column="56">-&gt;<pos:position pos:line="76" pos:column="61"/></operator><name pos:line="76" pos:column="58">workers_busy<pos:position pos:line="76" pos:column="70"/></name></name></expr></argument>,
                                  <argument><expr><operator pos:line="77" pos:column="35">(<pos:position pos:line="77" pos:column="36"/></operator><name pos:line="77" pos:column="36">int<pos:position pos:line="77" pos:column="39"/></name><operator pos:line="77" pos:column="39">)<pos:position pos:line="77" pos:column="40"/></operator><call><name pos:line="77" pos:column="40">h2_ihash_count<pos:position pos:line="77" pos:column="54"/></name><argument_list pos:line="77" pos:column="54">(<argument><expr><name><name pos:line="77" pos:column="55">m<pos:position pos:line="77" pos:column="56"/></name><operator pos:line="77" pos:column="56">-&gt;<pos:position pos:line="77" pos:column="61"/></operator><name pos:line="77" pos:column="58">tasks<pos:position pos:line="77" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="66"/></expr_stmt>
                    <if pos:line="78" pos:column="21">if <condition pos:line="78" pos:column="24">(<expr><name pos:line="78" pos:column="25">i<pos:position pos:line="78" pos:column="26"/></name> <operator pos:line="78" pos:column="27">==<pos:position pos:line="78" pos:column="29"/></operator> <literal type="number" pos:line="78" pos:column="30">1<pos:position pos:line="78" pos:column="31"/></literal></expr>)<pos:position pos:line="78" pos:column="32"/></condition><then pos:line="78" pos:column="32"> <block pos:line="78" pos:column="33">{
                        <expr_stmt><expr><call><name pos:line="79" pos:column="25">h2_ihash_iter<pos:position pos:line="79" pos:column="38"/></name><argument_list pos:line="79" pos:column="38">(<argument><expr><name><name pos:line="79" pos:column="39">m<pos:position pos:line="79" pos:column="40"/></name><operator pos:line="79" pos:column="40">-&gt;<pos:position pos:line="79" pos:column="45"/></operator><name pos:line="79" pos:column="42">tasks<pos:position pos:line="79" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="49">task_print<pos:position pos:line="79" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="61">m<pos:position pos:line="79" pos:column="62"/></name></expr></argument>)<pos:position pos:line="79" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="64"/></expr_stmt>
                    }<pos:position pos:line="80" pos:column="22"/></block></then></if>
                }<pos:position pos:line="81" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="82" pos:column="17">h2_mplx_abort<pos:position pos:line="82" pos:column="30"/></name><argument_list pos:line="82" pos:column="30">(<argument><expr><name pos:line="82" pos:column="31">m<pos:position pos:line="82" pos:column="32"/></name></expr></argument>)<pos:position pos:line="82" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="83" pos:column="17">apr_thread_cond_broadcast<pos:position pos:line="83" pos:column="42"/></name><argument_list pos:line="83" pos:column="42">(<argument><expr><name><name pos:line="83" pos:column="43">m<pos:position pos:line="83" pos:column="44"/></name><operator pos:line="83" pos:column="44">-&gt;<pos:position pos:line="83" pos:column="49"/></operator><name pos:line="83" pos:column="46">task_thawed<pos:position pos:line="83" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="84" pos:column="14"/></block></then></if>
        }<pos:position pos:line="85" pos:column="10"/></block></for>
        
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">AP_DEBUG_ASSERT<pos:position pos:line="87" pos:column="24"/></name><argument_list pos:line="87" pos:column="24">(<argument><expr><call><name pos:line="87" pos:column="25">h2_ihash_empty<pos:position pos:line="87" pos:column="39"/></name><argument_list pos:line="87" pos:column="39">(<argument><expr><name><name pos:line="87" pos:column="40">m<pos:position pos:line="87" pos:column="41"/></name><operator pos:line="87" pos:column="41">-&gt;<pos:position pos:line="87" pos:column="46"/></operator><name pos:line="87" pos:column="43">shold<pos:position pos:line="87" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="51"/></expr_stmt>
        <if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><operator pos:line="88" pos:column="13">!<pos:position pos:line="88" pos:column="14"/></operator><call><name pos:line="88" pos:column="14">h2_ihash_empty<pos:position pos:line="88" pos:column="28"/></name><argument_list pos:line="88" pos:column="28">(<argument><expr><name><name pos:line="88" pos:column="29">m<pos:position pos:line="88" pos:column="30"/></name><operator pos:line="88" pos:column="30">-&gt;<pos:position pos:line="88" pos:column="35"/></operator><name pos:line="88" pos:column="32">spurge<pos:position pos:line="88" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="40"/></condition><then pos:line="88" pos:column="40"> <block pos:line="88" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">ap_log_cerror<pos:position pos:line="89" pos:column="26"/></name><argument_list pos:line="89" pos:column="26">(<argument><expr><name pos:line="89" pos:column="27">APLOG_MARK<pos:position pos:line="89" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="39">APLOG_TRACE2<pos:position pos:line="89" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="53">0<pos:position pos:line="89" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="56">m<pos:position pos:line="89" pos:column="57"/></name><operator pos:line="89" pos:column="57">-&gt;<pos:position pos:line="89" pos:column="62"/></operator><name pos:line="89" pos:column="59">c<pos:position pos:line="89" pos:column="60"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="90" pos:column="27">"h2_mplx(%ld): 3. release_join %d streams to purge"<pos:position pos:line="90" pos:column="78"/></literal></expr></argument>, 
                          <argument><expr><name><name pos:line="91" pos:column="27">m<pos:position pos:line="91" pos:column="28"/></name><operator pos:line="91" pos:column="28">-&gt;<pos:position pos:line="91" pos:column="33"/></operator><name pos:line="91" pos:column="30">id<pos:position pos:line="91" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="34">(<pos:position pos:line="91" pos:column="35"/></operator><name pos:line="91" pos:column="35">int<pos:position pos:line="91" pos:column="38"/></name><operator pos:line="91" pos:column="38">)<pos:position pos:line="91" pos:column="39"/></operator><call><name pos:line="91" pos:column="39">h2_ihash_count<pos:position pos:line="91" pos:column="53"/></name><argument_list pos:line="91" pos:column="53">(<argument><expr><name><name pos:line="91" pos:column="54">m<pos:position pos:line="91" pos:column="55"/></name><operator pos:line="91" pos:column="55">-&gt;<pos:position pos:line="91" pos:column="60"/></operator><name pos:line="91" pos:column="57">spurge<pos:position pos:line="91" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="92" pos:column="13">purge_streams<pos:position pos:line="92" pos:column="26"/></name><argument_list pos:line="92" pos:column="26">(<argument><expr><name pos:line="92" pos:column="27">m<pos:position pos:line="92" pos:column="28"/></name></expr></argument>)<pos:position pos:line="92" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="93" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="94" pos:column="9">AP_DEBUG_ASSERT<pos:position pos:line="94" pos:column="24"/></name><argument_list pos:line="94" pos:column="24">(<argument><expr><call><name pos:line="94" pos:column="25">h2_ihash_empty<pos:position pos:line="94" pos:column="39"/></name><argument_list pos:line="94" pos:column="39">(<argument><expr><name><name pos:line="94" pos:column="40">m<pos:position pos:line="94" pos:column="41"/></name><operator pos:line="94" pos:column="41">-&gt;<pos:position pos:line="94" pos:column="46"/></operator><name pos:line="94" pos:column="43">spurge<pos:position pos:line="94" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="52"/></expr_stmt>
        
        <if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><operator pos:line="96" pos:column="13">!<pos:position pos:line="96" pos:column="14"/></operator><call><name pos:line="96" pos:column="14">h2_ihash_empty<pos:position pos:line="96" pos:column="28"/></name><argument_list pos:line="96" pos:column="28">(<argument><expr><name><name pos:line="96" pos:column="29">m<pos:position pos:line="96" pos:column="30"/></name><operator pos:line="96" pos:column="30">-&gt;<pos:position pos:line="96" pos:column="35"/></operator><name pos:line="96" pos:column="32">tasks<pos:position pos:line="96" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="39"/></condition><then pos:line="96" pos:column="39"> <block pos:line="96" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="97" pos:column="13">ap_log_cerror<pos:position pos:line="97" pos:column="26"/></name><argument_list pos:line="97" pos:column="26">(<argument><expr><name pos:line="97" pos:column="27">APLOG_MARK<pos:position pos:line="97" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="39">APLOG_DEBUG<pos:position pos:line="97" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="52">0<pos:position pos:line="97" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="55">m<pos:position pos:line="97" pos:column="56"/></name><operator pos:line="97" pos:column="56">-&gt;<pos:position pos:line="97" pos:column="61"/></operator><name pos:line="97" pos:column="58">c<pos:position pos:line="97" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name pos:line="97" pos:column="61">APLOGNO<pos:position pos:line="97" pos:column="68"/></name><argument_list pos:line="97" pos:column="68">(<argument><expr><literal type="number" pos:line="97" pos:column="69">03056<pos:position pos:line="97" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="75"/></argument_list></call>
                          <literal type="string" pos:line="98" pos:column="27">"h2_mplx(%ld): release_join -&gt; destroy, "<pos:position pos:line="98" pos:column="71"/></literal>
                          <literal type="string" pos:line="99" pos:column="27">"%d tasks still present"<pos:position pos:line="99" pos:column="51"/></literal></expr></argument>, 
                          <argument><expr><name><name pos:line="100" pos:column="27">m<pos:position pos:line="100" pos:column="28"/></name><operator pos:line="100" pos:column="28">-&gt;<pos:position pos:line="100" pos:column="33"/></operator><name pos:line="100" pos:column="30">id<pos:position pos:line="100" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="34">(<pos:position pos:line="100" pos:column="35"/></operator><name pos:line="100" pos:column="35">int<pos:position pos:line="100" pos:column="38"/></name><operator pos:line="100" pos:column="38">)<pos:position pos:line="100" pos:column="39"/></operator><call><name pos:line="100" pos:column="39">h2_ihash_count<pos:position pos:line="100" pos:column="53"/></name><argument_list pos:line="100" pos:column="53">(<argument><expr><name><name pos:line="100" pos:column="54">m<pos:position pos:line="100" pos:column="55"/></name><operator pos:line="100" pos:column="55">-&gt;<pos:position pos:line="100" pos:column="60"/></operator><name pos:line="100" pos:column="57">tasks<pos:position pos:line="100" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="100" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="101" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="102" pos:column="9">leave_mutex<pos:position pos:line="102" pos:column="20"/></name><argument_list pos:line="102" pos:column="20">(<argument><expr><name pos:line="102" pos:column="21">m<pos:position pos:line="102" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="24">acquired<pos:position pos:line="102" pos:column="32"/></name></expr></argument>)<pos:position pos:line="102" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="103" pos:column="9">h2_mplx_destroy<pos:position pos:line="103" pos:column="24"/></name><argument_list pos:line="103" pos:column="24">(<argument><expr><name pos:line="103" pos:column="25">m<pos:position pos:line="103" pos:column="26"/></name></expr></argument>)<pos:position pos:line="103" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="28"/></expr_stmt>
        <comment type="block" pos:line="104" pos:column="9">/* all gone */</comment>
    }<pos:position pos:line="105" pos:column="6"/></block></then></if>
    <return pos:line="106" pos:column="5">return <expr><name pos:line="106" pos:column="12">status<pos:position pos:line="106" pos:column="18"/></name></expr>;<pos:position pos:line="106" pos:column="19"/></return>
}<pos:position pos:line="107" pos:column="2"/></block></function></unit>

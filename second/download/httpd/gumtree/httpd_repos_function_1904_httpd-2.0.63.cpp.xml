<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1904_httpd-2.0.63.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">get_server_name_for_url<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">request_rec<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">r<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">plain_server_name<pos:position pos:line="3" pos:column="34"/></name> <init pos:line="3" pos:column="35">= <expr><call><name pos:line="3" pos:column="37">ap_get_server_name<pos:position pos:line="3" pos:column="55"/></name><argument_list pos:line="3" pos:column="55">(<argument><expr><name pos:line="3" pos:column="56">r<pos:position pos:line="3" pos:column="57"/></name></expr></argument>)<pos:position pos:line="3" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="59"/></decl_stmt>

<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="5" pos:column="18"/></name></expr></cpp:if>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">ap_strchr_c<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">plain_server_name<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="6" pos:column="40">':'<pos:position pos:line="6" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="45"/></condition><then pos:line="6" pos:column="45"> <block pos:line="6" pos:column="46">{ <comment type="block" pos:line="6" pos:column="48">/* IPv6 literal? */</comment>
        <return pos:line="7" pos:column="9">return <expr><call><name pos:line="7" pos:column="16">apr_psprintf<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name><name pos:line="7" pos:column="29">r<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">pool<pos:position pos:line="7" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="38">"[%s]"<pos:position pos:line="7" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="46">plain_server_name<pos:position pos:line="7" pos:column="63"/></name></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="65"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">plain_server_name<pos:position pos:line="10" pos:column="29"/></name></expr>;<pos:position pos:line="10" pos:column="30"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

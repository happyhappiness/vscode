<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1051.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ap_signal_server<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">exit_status<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">apr_pool_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">pconf<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">pid_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">otherpid<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">running<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">have_pid_file<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">status<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">exit_status<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">rv<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">ap_read_pid<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">pconf<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="29">ap_pid_fname<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="43">&amp;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="44">otherpid<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">rv<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">!=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">APR_SUCCESS<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27"> <block pos:line="12" pos:column="28">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">rv<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">!=<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">APR_ENOENT<pos:position pos:line="13" pos:column="29"/></name></expr>)<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30"> <block pos:line="13" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">ap_log_error<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">APLOG_MARK<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="38">APLOG_STARTUP<pos:position pos:line="14" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="53">rv<pos:position pos:line="14" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="57">NULL<pos:position pos:line="14" pos:column="61"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="15" pos:column="26">"Error retrieving pid file %s"<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="58">ap_pid_fname<pos:position pos:line="15" pos:column="70"/></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">ap_log_error<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">APLOG_MARK<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">APLOG_STARTUP<pos:position pos:line="16" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="53">0<pos:position pos:line="16" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="56">NULL<pos:position pos:line="16" pos:column="60"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="17" pos:column="26">"Remove it before continuing if it is corrupted."<pos:position pos:line="17" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">exit_status<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <literal type="number" pos:line="18" pos:column="28">1<pos:position pos:line="18" pos:column="29"/></literal></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
            <return pos:line="19" pos:column="13">return <expr><literal type="number" pos:line="19" pos:column="20">1<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="21" pos:column="9">status<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="string" pos:line="21" pos:column="18">"httpd (no pid file) not running"<pos:position pos:line="21" pos:column="51"/></literal></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then>
    <else pos:line="23" pos:column="5">else <block pos:line="23" pos:column="10">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">have_pid_file<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <literal type="number" pos:line="24" pos:column="25">1<pos:position pos:line="24" pos:column="26"/></literal></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">kill<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><name pos:line="25" pos:column="18">otherpid<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="30"/></argument_list></call> <operator pos:line="25" pos:column="31">==<pos:position pos:line="25" pos:column="33"/></operator> <literal type="number" pos:line="25" pos:column="34">0<pos:position pos:line="25" pos:column="35"/></literal></expr>)<pos:position pos:line="25" pos:column="36"/></condition><then pos:line="25" pos:column="36"> <block pos:line="25" pos:column="37">{
            <expr_stmt><expr><name pos:line="26" pos:column="13">running<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <literal type="number" pos:line="26" pos:column="23">1<pos:position pos:line="26" pos:column="24"/></literal></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="27" pos:column="13">status<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <call><name pos:line="27" pos:column="22">apr_psprintf<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">pconf<pos:position pos:line="27" pos:column="40"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="28" pos:column="35">"httpd (pid %"<pos:position pos:line="28" pos:column="49"/></literal> <name pos:line="28" pos:column="50">APR_PID_T_FMT<pos:position pos:line="28" pos:column="63"/></name> <literal type="string" pos:line="28" pos:column="64">") already "<pos:position pos:line="28" pos:column="76"/></literal>
                                  <literal type="string" pos:line="29" pos:column="35">"running"<pos:position pos:line="29" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">otherpid<pos:position pos:line="29" pos:column="54"/></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then>
        <else pos:line="31" pos:column="9">else <block pos:line="31" pos:column="14">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">status<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <call><name pos:line="32" pos:column="22">apr_psprintf<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">pconf<pos:position pos:line="32" pos:column="40"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="33" pos:column="35">"httpd (pid %"<pos:position pos:line="33" pos:column="49"/></literal> <name pos:line="33" pos:column="50">APR_PID_T_FMT<pos:position pos:line="33" pos:column="63"/></name> <literal type="string" pos:line="33" pos:column="64">"?) not running"<pos:position pos:line="33" pos:column="80"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="34" pos:column="35">otherpid<pos:position pos:line="34" pos:column="43"/></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></else></if>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">!<pos:position pos:line="38" pos:column="10"/></operator><call><name pos:line="38" pos:column="10">strcmp<pos:position pos:line="38" pos:column="16"/></name><argument_list pos:line="38" pos:column="16">(<argument><expr><name pos:line="38" pos:column="17">dash_k_arg<pos:position pos:line="38" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="29">"start"<pos:position pos:line="38" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="38"/></condition><then pos:line="38" pos:column="38"> <block pos:line="38" pos:column="39">{
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">running<pos:position pos:line="39" pos:column="20"/></name></expr>)<pos:position pos:line="39" pos:column="21"/></condition><then pos:line="39" pos:column="21"> <block pos:line="39" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">printf<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><literal type="string" pos:line="40" pos:column="20">"%s\n"<pos:position pos:line="40" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="28">status<pos:position pos:line="40" pos:column="34"/></name></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>
            <return pos:line="41" pos:column="13">return <expr><literal type="number" pos:line="41" pos:column="20">1<pos:position pos:line="41" pos:column="21"/></literal></expr>;<pos:position pos:line="41" pos:column="22"/></return>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">!<pos:position pos:line="45" pos:column="10"/></operator><call><name pos:line="45" pos:column="10">strcmp<pos:position pos:line="45" pos:column="16"/></name><argument_list pos:line="45" pos:column="16">(<argument><expr><name pos:line="45" pos:column="17">dash_k_arg<pos:position pos:line="45" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="29">"stop"<pos:position pos:line="45" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="37"/></condition><then pos:line="45" pos:column="37"> <block pos:line="45" pos:column="38">{
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">!<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">running<pos:position pos:line="46" pos:column="21"/></name></expr>)<pos:position pos:line="46" pos:column="22"/></condition><then pos:line="46" pos:column="22"> <block pos:line="46" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">printf<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><literal type="string" pos:line="47" pos:column="20">"%s\n"<pos:position pos:line="47" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="28">status<pos:position pos:line="47" pos:column="34"/></name></expr></argument>)<pos:position pos:line="47" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then>
        <else pos:line="49" pos:column="9">else <block pos:line="49" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">send_signal<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">otherpid<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="35">SIGTERM<pos:position pos:line="50" pos:column="42"/></name></expr></argument>)<pos:position pos:line="50" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></else></if>
        <return pos:line="52" pos:column="9">return <expr><literal type="number" pos:line="52" pos:column="16">1<pos:position pos:line="52" pos:column="17"/></literal></expr>;<pos:position pos:line="52" pos:column="18"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">!<pos:position pos:line="55" pos:column="10"/></operator><call><name pos:line="55" pos:column="10">strcmp<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">dash_k_arg<pos:position pos:line="55" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="29">"restart"<pos:position pos:line="55" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="40"/></condition><then pos:line="55" pos:column="40"> <block pos:line="55" pos:column="41">{
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">!<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">running<pos:position pos:line="56" pos:column="21"/></name></expr>)<pos:position pos:line="56" pos:column="22"/></condition><then pos:line="56" pos:column="22"> <block pos:line="56" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">printf<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><literal type="string" pos:line="57" pos:column="20">"httpd not running, trying to start\n"<pos:position pos:line="57" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then>
        <else pos:line="59" pos:column="9">else <block pos:line="59" pos:column="14">{
            <expr_stmt><expr><operator pos:line="60" pos:column="13">*<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">exit_status<pos:position pos:line="60" pos:column="25"/></name> <operator pos:line="60" pos:column="26">=<pos:position pos:line="60" pos:column="27"/></operator> <call><name pos:line="60" pos:column="28">send_signal<pos:position pos:line="60" pos:column="39"/></name><argument_list pos:line="60" pos:column="39">(<argument><expr><name pos:line="60" pos:column="40">otherpid<pos:position pos:line="60" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="50">SIGHUP<pos:position pos:line="60" pos:column="56"/></name></expr></argument>)<pos:position pos:line="60" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="58"/></expr_stmt>
            <return pos:line="61" pos:column="13">return <expr><literal type="number" pos:line="61" pos:column="20">1<pos:position pos:line="61" pos:column="21"/></literal></expr>;<pos:position pos:line="61" pos:column="22"/></return>
        }<pos:position pos:line="62" pos:column="10"/></block></else></if>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><operator pos:line="65" pos:column="9">!<pos:position pos:line="65" pos:column="10"/></operator><call><name pos:line="65" pos:column="10">strcmp<pos:position pos:line="65" pos:column="16"/></name><argument_list pos:line="65" pos:column="16">(<argument><expr><name pos:line="65" pos:column="17">dash_k_arg<pos:position pos:line="65" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="29">"graceful"<pos:position pos:line="65" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="41"/></condition><then pos:line="65" pos:column="41"> <block pos:line="65" pos:column="42">{
        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><operator pos:line="66" pos:column="13">!<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="14">running<pos:position pos:line="66" pos:column="21"/></name></expr>)<pos:position pos:line="66" pos:column="22"/></condition><then pos:line="66" pos:column="22"> <block pos:line="66" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">printf<pos:position pos:line="67" pos:column="19"/></name><argument_list pos:line="67" pos:column="19">(<argument><expr><literal type="string" pos:line="67" pos:column="20">"httpd not running, trying to start\n"<pos:position pos:line="67" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></then>
        <else pos:line="69" pos:column="9">else <block pos:line="69" pos:column="14">{
            <expr_stmt><expr><operator pos:line="70" pos:column="13">*<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="14">exit_status<pos:position pos:line="70" pos:column="25"/></name> <operator pos:line="70" pos:column="26">=<pos:position pos:line="70" pos:column="27"/></operator> <call><name pos:line="70" pos:column="28">send_signal<pos:position pos:line="70" pos:column="39"/></name><argument_list pos:line="70" pos:column="39">(<argument><expr><name pos:line="70" pos:column="40">otherpid<pos:position pos:line="70" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="50">AP_SIG_GRACEFUL<pos:position pos:line="70" pos:column="65"/></name></expr></argument>)<pos:position pos:line="70" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="67"/></expr_stmt>
            <return pos:line="71" pos:column="13">return <expr><literal type="number" pos:line="71" pos:column="20">1<pos:position pos:line="71" pos:column="21"/></literal></expr>;<pos:position pos:line="71" pos:column="22"/></return>
        }<pos:position pos:line="72" pos:column="10"/></block></else></if>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><operator pos:line="75" pos:column="9">!<pos:position pos:line="75" pos:column="10"/></operator><call><name pos:line="75" pos:column="10">strcmp<pos:position pos:line="75" pos:column="16"/></name><argument_list pos:line="75" pos:column="16">(<argument><expr><name pos:line="75" pos:column="17">dash_k_arg<pos:position pos:line="75" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="29">"graceful-stop"<pos:position pos:line="75" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="46"/></condition><then pos:line="75" pos:column="46"> <block pos:line="75" pos:column="47">{
<cpp:ifdef pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">ifdef<pos:position pos:line="76" pos:column="7"/></cpp:directive> <name pos:line="76" pos:column="8">AP_MPM_WANT_SET_GRACEFUL_SHUTDOWN<pos:position pos:line="76" pos:column="41"/></name></cpp:ifdef>
        <if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><operator pos:line="77" pos:column="13">!<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="14">running<pos:position pos:line="77" pos:column="21"/></name></expr>)<pos:position pos:line="77" pos:column="22"/></condition><then pos:line="77" pos:column="22"> <block pos:line="77" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">printf<pos:position pos:line="78" pos:column="19"/></name><argument_list pos:line="78" pos:column="19">(<argument><expr><literal type="string" pos:line="78" pos:column="20">"%s\n"<pos:position pos:line="78" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="28">status<pos:position pos:line="78" pos:column="34"/></name></expr></argument>)<pos:position pos:line="78" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></then>
        <else pos:line="80" pos:column="9">else <block pos:line="80" pos:column="14">{
            <expr_stmt><expr><operator pos:line="81" pos:column="13">*<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">exit_status<pos:position pos:line="81" pos:column="25"/></name> <operator pos:line="81" pos:column="26">=<pos:position pos:line="81" pos:column="27"/></operator> <call><name pos:line="81" pos:column="28">send_signal<pos:position pos:line="81" pos:column="39"/></name><argument_list pos:line="81" pos:column="39">(<argument><expr><name pos:line="81" pos:column="40">otherpid<pos:position pos:line="81" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="50">AP_SIG_GRACEFUL_STOP<pos:position pos:line="81" pos:column="70"/></name></expr></argument>)<pos:position pos:line="81" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="82" pos:column="10"/></block></else></if>
<cpp:else pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">else<pos:position pos:line="83" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">printf<pos:position pos:line="84" pos:column="15"/></name><argument_list pos:line="84" pos:column="15">(<argument><expr><literal type="string" pos:line="84" pos:column="16">"httpd MPM \""<pos:position pos:line="84" pos:column="30"/></literal> <name pos:line="84" pos:column="31">MPM_NAME<pos:position pos:line="84" pos:column="39"/></name> <literal type="string" pos:line="84" pos:column="40">"\" does not support graceful-stop\n"<pos:position pos:line="84" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="79"/></expr_stmt>
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif<pos:position pos:line="85" pos:column="7"/></cpp:directive></cpp:endif>
        <return pos:line="86" pos:column="9">return <expr><literal type="number" pos:line="86" pos:column="16">1<pos:position pos:line="86" pos:column="17"/></literal></expr>;<pos:position pos:line="86" pos:column="18"/></return>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>

    <return pos:line="89" pos:column="5">return <expr><literal type="number" pos:line="89" pos:column="12">0<pos:position pos:line="89" pos:column="13"/></literal></expr>;<pos:position pos:line="89" pos:column="14"/></return>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3075_httpd-2.0.59.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">inet_ntop6<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">unsigned<pos:position pos:line="2" pos:column="26"/></name> <name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">src<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">dst<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">apr_size_t<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">size<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/*
     * Note that int32_t and int16_t need only be "at least" large enough
     * to contain a value of the specified size.  On some systems, like
     * Crays, there is no such thing as an integer variable with 16 bits.
     * Keep this in mind if you think this function should have been coded
     * to use pointer overlays.  All the world's not a VAX.
     */</comment>
    <expr_stmt><expr><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <name><name pos:line="11" pos:column="10">tmp<pos:position pos:line="11" pos:column="13"/></name><index pos:line="11" pos:column="13">[<expr><sizeof pos:line="11" pos:column="14">sizeof <name><pos:position pos:line="11" pos:column="21"/></name></sizeof></expr></index></name>"ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255"]<pos:position pos:line="11" pos:column="69"/></expr><operator pos:line="11" pos:column="69">,<pos:position pos:line="11" pos:column="70"/></operator> <expr><operator pos:line="11" pos:column="71">*<pos:position pos:line="11" pos:column="72"/></operator><name pos:line="11" pos:column="72">tp<pos:position pos:line="11" pos:column="74"/></name></expr>;<pos:position pos:line="11" pos:column="75"/></expr_stmt>
    <struct pos:line="12" pos:column="5">struct <block pos:line="12" pos:column="12">{<public type="default" pos:line="12" pos:column="13"> <decl_stmt><decl><type><name pos:line="12" pos:column="14">int<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">base<pos:position pos:line="12" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="24">len<pos:position pos:line="12" pos:column="27"/></name></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt> <pos:position pos:line="12" pos:column="29"/></public>}<pos:position pos:line="12" pos:column="30"/></block> <decl><name pos:line="12" pos:column="31">best<pos:position pos:line="12" pos:column="35"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="37">cur<pos:position pos:line="12" pos:column="40"/></name></decl>;<pos:position pos:line="12" pos:column="41"/></struct>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">unsigned<pos:position pos:line="13" pos:column="13"/></name> <name pos:line="13" pos:column="14">int<pos:position pos:line="13" pos:column="17"/></name></type> <name><name pos:line="13" pos:column="18">words<pos:position pos:line="13" pos:column="23"/></name><index pos:line="13" pos:column="23">[<expr><name pos:line="13" pos:column="24">IN6ADDRSZ<pos:position pos:line="13" pos:column="33"/></name> <operator pos:line="13" pos:column="34">/<pos:position pos:line="13" pos:column="35"/></operator> <name pos:line="13" pos:column="36">INT16SZ<pos:position pos:line="13" pos:column="43"/></name></expr>]<pos:position pos:line="13" pos:column="44"/></index></name></decl>;<pos:position pos:line="13" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">i<pos:position pos:line="14" pos:column="10"/></name></decl>;<pos:position pos:line="14" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">const<pos:position pos:line="15" pos:column="10"/></specifier> <name pos:line="15" pos:column="11">unsigned<pos:position pos:line="15" pos:column="19"/></name> <name pos:line="15" pos:column="20">char<pos:position pos:line="15" pos:column="24"/></name> <modifier pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></modifier></type><name pos:line="15" pos:column="26">next_src<pos:position pos:line="15" pos:column="34"/></name></decl>, <modifier pos:line="15" pos:column="36">*<pos:position pos:line="15" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="15" pos:column="37">src_end<pos:position pos:line="15" pos:column="44"/></name></decl>;<pos:position pos:line="15" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">unsigned<pos:position pos:line="16" pos:column="13"/></name> <name pos:line="16" pos:column="14">int<pos:position pos:line="16" pos:column="17"/></name> <modifier pos:line="16" pos:column="18">*<pos:position pos:line="16" pos:column="19"/></modifier></type><name pos:line="16" pos:column="19">next_dest<pos:position pos:line="16" pos:column="28"/></name></decl>;<pos:position pos:line="16" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="18" pos:column="5">/*
     * Preprocess:
     *	Copy the input (bytewise) array into a wordwise array.
     *	Find the longest run of 0x00's in src[] for :: shorthanding.
     */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">next_src<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">src<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">src_end<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">src<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">+<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">IN6ADDRSZ<pos:position pos:line="24" pos:column="30"/></name></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">next_dest<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">words<pos:position pos:line="25" pos:column="22"/></name></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">best<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">.<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">base<pos:position pos:line="26" pos:column="14"/></name></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <operator pos:line="26" pos:column="17">-<pos:position pos:line="26" pos:column="18"/></operator><literal type="number" pos:line="26" pos:column="18">1<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">cur<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">.<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">base<pos:position pos:line="27" pos:column="13"/></name></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <operator pos:line="27" pos:column="16">-<pos:position pos:line="27" pos:column="17"/></operator><literal type="number" pos:line="27" pos:column="17">1<pos:position pos:line="27" pos:column="18"/></literal></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">i<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <literal type="number" pos:line="28" pos:column="9">0<pos:position pos:line="28" pos:column="10"/></literal></expr>;<pos:position pos:line="28" pos:column="11"/></expr_stmt>
    <do pos:line="29" pos:column="5">do <block pos:line="29" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="30" pos:column="9">unsigned<pos:position pos:line="30" pos:column="17"/></name> <name pos:line="30" pos:column="18">int<pos:position pos:line="30" pos:column="21"/></name></type> <name pos:line="30" pos:column="22">next_word<pos:position pos:line="30" pos:column="31"/></name> <init pos:line="30" pos:column="32">= <expr><operator pos:line="30" pos:column="34">(<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="35">unsigned<pos:position pos:line="30" pos:column="43"/></name> <name pos:line="30" pos:column="44">int<pos:position pos:line="30" pos:column="47"/></name><operator pos:line="30" pos:column="47">)<pos:position pos:line="30" pos:column="48"/></operator><operator pos:line="30" pos:column="48">*<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="49">next_src<pos:position pos:line="30" pos:column="57"/></name><operator pos:line="30" pos:column="57">++<pos:position pos:line="30" pos:column="59"/></operator></expr></init></decl>;<pos:position pos:line="30" pos:column="60"/></decl_stmt>
        <expr_stmt><expr><name pos:line="31" pos:column="9">next_word<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">&lt;&lt;=<pos:position pos:line="31" pos:column="28"/></operator> <literal type="number" pos:line="31" pos:column="23">8<pos:position pos:line="31" pos:column="24"/></literal></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">next_word<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">|=<pos:position pos:line="32" pos:column="21"/></operator> <operator pos:line="32" pos:column="22">(<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">unsigned<pos:position pos:line="32" pos:column="31"/></name> <name pos:line="32" pos:column="32">int<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">)<pos:position pos:line="32" pos:column="36"/></operator><operator pos:line="32" pos:column="36">*<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="37">next_src<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">++<pos:position pos:line="32" pos:column="47"/></operator></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">next_dest<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">++<pos:position pos:line="33" pos:column="21"/></operator> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">next_word<pos:position pos:line="33" pos:column="33"/></name></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>

        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">next_word<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">==<pos:position pos:line="35" pos:column="25"/></operator> <literal type="number" pos:line="35" pos:column="26">0<pos:position pos:line="35" pos:column="27"/></literal></expr>)<pos:position pos:line="35" pos:column="28"/></condition><then pos:line="35" pos:column="28"> <block pos:line="35" pos:column="29">{
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name><name pos:line="36" pos:column="17">cur<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">.<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">base<pos:position pos:line="36" pos:column="25"/></name></name> <operator pos:line="36" pos:column="26">==<pos:position pos:line="36" pos:column="28"/></operator> <operator pos:line="36" pos:column="29">-<pos:position pos:line="36" pos:column="30"/></operator><literal type="number" pos:line="36" pos:column="30">1<pos:position pos:line="36" pos:column="31"/></literal></expr>)<pos:position pos:line="36" pos:column="32"/></condition><then pos:line="36" pos:column="32"> <block pos:line="36" pos:column="33">{
                <expr_stmt><expr><name><name pos:line="37" pos:column="17">cur<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">.<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="21">base<pos:position pos:line="37" pos:column="25"/></name></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="28">i<pos:position pos:line="37" pos:column="29"/></name></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="38" pos:column="17">cur<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">.<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">len<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <literal type="number" pos:line="38" pos:column="27">1<pos:position pos:line="38" pos:column="28"/></literal></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="39" pos:column="14"/></block></then>
            <else pos:line="40" pos:column="13">else <block pos:line="40" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="41" pos:column="17">cur<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">.<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">len<pos:position pos:line="41" pos:column="24"/></name></name><operator pos:line="41" pos:column="24">++<pos:position pos:line="41" pos:column="26"/></operator></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="42" pos:column="14"/></block></else></if>
        }<pos:position pos:line="43" pos:column="10"/></block></then> <else pos:line="43" pos:column="11">else <block pos:line="43" pos:column="16">{
            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><name><name pos:line="44" pos:column="17">cur<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">.<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">base<pos:position pos:line="44" pos:column="25"/></name></name> <operator pos:line="44" pos:column="26">!=<pos:position pos:line="44" pos:column="28"/></operator> <operator pos:line="44" pos:column="29">-<pos:position pos:line="44" pos:column="30"/></operator><literal type="number" pos:line="44" pos:column="30">1<pos:position pos:line="44" pos:column="31"/></literal></expr>)<pos:position pos:line="44" pos:column="32"/></condition><then pos:line="44" pos:column="32"> <block pos:line="44" pos:column="33">{
                <if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name><name pos:line="45" pos:column="21">best<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">.<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="26">base<pos:position pos:line="45" pos:column="30"/></name></name> <operator pos:line="45" pos:column="31">==<pos:position pos:line="45" pos:column="33"/></operator> <operator pos:line="45" pos:column="34">-<pos:position pos:line="45" pos:column="35"/></operator><literal type="number" pos:line="45" pos:column="35">1<pos:position pos:line="45" pos:column="36"/></literal> <operator pos:line="45" pos:column="37">||<pos:position pos:line="45" pos:column="39"/></operator> <name><name pos:line="45" pos:column="40">cur<pos:position pos:line="45" pos:column="43"/></name><operator pos:line="45" pos:column="43">.<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="44">len<pos:position pos:line="45" pos:column="47"/></name></name> <operator pos:line="45" pos:column="48">&gt;<pos:position pos:line="45" pos:column="52"/></operator> <name><name pos:line="45" pos:column="50">best<pos:position pos:line="45" pos:column="54"/></name><operator pos:line="45" pos:column="54">.<pos:position pos:line="45" pos:column="55"/></operator><name pos:line="45" pos:column="55">len<pos:position pos:line="45" pos:column="58"/></name></name></expr>)<pos:position pos:line="45" pos:column="59"/></condition><then pos:line="45" pos:column="59"> <block pos:line="45" pos:column="60">{
                    <expr_stmt><expr><name pos:line="46" pos:column="21">best<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">=<pos:position pos:line="46" pos:column="27"/></operator> <name pos:line="46" pos:column="28">cur<pos:position pos:line="46" pos:column="31"/></name></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="47" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name><name pos:line="48" pos:column="17">cur<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">.<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="21">base<pos:position pos:line="48" pos:column="25"/></name></name> <operator pos:line="48" pos:column="26">=<pos:position pos:line="48" pos:column="27"/></operator> <operator pos:line="48" pos:column="28">-<pos:position pos:line="48" pos:column="29"/></operator><literal type="number" pos:line="48" pos:column="29">1<pos:position pos:line="48" pos:column="30"/></literal></expr>;<pos:position pos:line="48" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>
        }<pos:position pos:line="50" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="52" pos:column="9">i<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">++<pos:position pos:line="52" pos:column="12"/></operator></expr>;<pos:position pos:line="52" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block> while <condition pos:line="53" pos:column="13">(<expr><name pos:line="53" pos:column="14">next_src<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">&lt;<pos:position pos:line="53" pos:column="27"/></operator> <name pos:line="53" pos:column="25">src_end<pos:position pos:line="53" pos:column="32"/></name></expr>)<pos:position pos:line="53" pos:column="33"/></condition>;<pos:position pos:line="53" pos:column="34"/></do>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">cur<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">.<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="13">base<pos:position pos:line="55" pos:column="17"/></name></name> <operator pos:line="55" pos:column="18">!=<pos:position pos:line="55" pos:column="20"/></operator> <operator pos:line="55" pos:column="21">-<pos:position pos:line="55" pos:column="22"/></operator><literal type="number" pos:line="55" pos:column="22">1<pos:position pos:line="55" pos:column="23"/></literal></expr>)<pos:position pos:line="55" pos:column="24"/></condition><then pos:line="55" pos:column="24"> <block pos:line="55" pos:column="25">{
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">best<pos:position pos:line="56" pos:column="17"/></name><operator pos:line="56" pos:column="17">.<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="18">base<pos:position pos:line="56" pos:column="22"/></name></name> <operator pos:line="56" pos:column="23">==<pos:position pos:line="56" pos:column="25"/></operator> <operator pos:line="56" pos:column="26">-<pos:position pos:line="56" pos:column="27"/></operator><literal type="number" pos:line="56" pos:column="27">1<pos:position pos:line="56" pos:column="28"/></literal> <operator pos:line="56" pos:column="29">||<pos:position pos:line="56" pos:column="31"/></operator> <name><name pos:line="56" pos:column="32">cur<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">.<pos:position pos:line="56" pos:column="36"/></operator><name pos:line="56" pos:column="36">len<pos:position pos:line="56" pos:column="39"/></name></name> <operator pos:line="56" pos:column="40">&gt;<pos:position pos:line="56" pos:column="44"/></operator> <name><name pos:line="56" pos:column="42">best<pos:position pos:line="56" pos:column="46"/></name><operator pos:line="56" pos:column="46">.<pos:position pos:line="56" pos:column="47"/></operator><name pos:line="56" pos:column="47">len<pos:position pos:line="56" pos:column="50"/></name></name></expr>)<pos:position pos:line="56" pos:column="51"/></condition><then pos:line="56" pos:column="51"> <block pos:line="56" pos:column="52">{
            <expr_stmt><expr><name pos:line="57" pos:column="13">best<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">=<pos:position pos:line="57" pos:column="19"/></operator> <name pos:line="57" pos:column="20">cur<pos:position pos:line="57" pos:column="23"/></name></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name><name pos:line="60" pos:column="9">best<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">.<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">base<pos:position pos:line="60" pos:column="18"/></name></name> <operator pos:line="60" pos:column="19">!=<pos:position pos:line="60" pos:column="21"/></operator> <operator pos:line="60" pos:column="22">-<pos:position pos:line="60" pos:column="23"/></operator><literal type="number" pos:line="60" pos:column="23">1<pos:position pos:line="60" pos:column="24"/></literal> <operator pos:line="60" pos:column="25">&amp;&amp;<pos:position pos:line="60" pos:column="35"/></operator> <name><name pos:line="60" pos:column="28">best<pos:position pos:line="60" pos:column="32"/></name><operator pos:line="60" pos:column="32">.<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="33">len<pos:position pos:line="60" pos:column="36"/></name></name> <operator pos:line="60" pos:column="37">&lt;<pos:position pos:line="60" pos:column="41"/></operator> <literal type="number" pos:line="60" pos:column="39">2<pos:position pos:line="60" pos:column="40"/></literal></expr>)<pos:position pos:line="60" pos:column="41"/></condition><then pos:line="60" pos:column="41"> <block pos:line="60" pos:column="42">{
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">best<pos:position pos:line="61" pos:column="13"/></name><operator pos:line="61" pos:column="13">.<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">base<pos:position pos:line="61" pos:column="18"/></name></name> <operator pos:line="61" pos:column="19">=<pos:position pos:line="61" pos:column="20"/></operator> <operator pos:line="61" pos:column="21">-<pos:position pos:line="61" pos:column="22"/></operator><literal type="number" pos:line="61" pos:column="22">1<pos:position pos:line="61" pos:column="23"/></literal></expr>;<pos:position pos:line="61" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="64" pos:column="5">/*
     * Format the result.
     */</comment>
    <expr_stmt><expr><name pos:line="67" pos:column="5">tp<pos:position pos:line="67" pos:column="7"/></name> <operator pos:line="67" pos:column="8">=<pos:position pos:line="67" pos:column="9"/></operator> <name pos:line="67" pos:column="10">tmp<pos:position pos:line="67" pos:column="13"/></name></expr>;<pos:position pos:line="67" pos:column="14"/></expr_stmt>
    <for pos:line="68" pos:column="5">for <control pos:line="68" pos:column="9">(<init><expr><name pos:line="68" pos:column="10">i<pos:position pos:line="68" pos:column="11"/></name> <operator pos:line="68" pos:column="12">=<pos:position pos:line="68" pos:column="13"/></operator> <literal type="number" pos:line="68" pos:column="14">0<pos:position pos:line="68" pos:column="15"/></literal></expr>;<pos:position pos:line="68" pos:column="16"/></init> <condition><expr><name pos:line="68" pos:column="17">i<pos:position pos:line="68" pos:column="18"/></name> <operator pos:line="68" pos:column="19">&lt;<pos:position pos:line="68" pos:column="23"/></operator> <operator pos:line="68" pos:column="21">(<pos:position pos:line="68" pos:column="22"/></operator><name pos:line="68" pos:column="22">IN6ADDRSZ<pos:position pos:line="68" pos:column="31"/></name> <operator pos:line="68" pos:column="32">/<pos:position pos:line="68" pos:column="33"/></operator> <name pos:line="68" pos:column="34">INT16SZ<pos:position pos:line="68" pos:column="41"/></name><operator pos:line="68" pos:column="41">)<pos:position pos:line="68" pos:column="42"/></operator></expr>;<pos:position pos:line="68" pos:column="43"/></condition><incr/>)<pos:position pos:line="68" pos:column="44"/></control> <block pos:line="68" pos:column="45">{
        <comment type="block" pos:line="69" pos:column="9">/* Are we inside the best run of 0x00's? */</comment>
        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">i<pos:position pos:line="70" pos:column="14"/></name> <operator pos:line="70" pos:column="15">==<pos:position pos:line="70" pos:column="17"/></operator> <name><name pos:line="70" pos:column="18">best<pos:position pos:line="70" pos:column="22"/></name><operator pos:line="70" pos:column="22">.<pos:position pos:line="70" pos:column="23"/></operator><name pos:line="70" pos:column="23">base<pos:position pos:line="70" pos:column="27"/></name></name></expr>)<pos:position pos:line="70" pos:column="28"/></condition><then pos:line="70" pos:column="28"> <block pos:line="70" pos:column="29">{
            <expr_stmt><expr><operator pos:line="71" pos:column="13">*<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="14">tp<pos:position pos:line="71" pos:column="16"/></name><operator pos:line="71" pos:column="16">++<pos:position pos:line="71" pos:column="18"/></operator> <operator pos:line="71" pos:column="19">=<pos:position pos:line="71" pos:column="20"/></operator> <literal type="char" pos:line="71" pos:column="21">':'<pos:position pos:line="71" pos:column="24"/></literal></expr>;<pos:position pos:line="71" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="72" pos:column="13">i<pos:position pos:line="72" pos:column="14"/></name> <operator pos:line="72" pos:column="15">+=<pos:position pos:line="72" pos:column="17"/></operator> <name><name pos:line="72" pos:column="18">best<pos:position pos:line="72" pos:column="22"/></name><operator pos:line="72" pos:column="22">.<pos:position pos:line="72" pos:column="23"/></operator><name pos:line="72" pos:column="23">len<pos:position pos:line="72" pos:column="26"/></name></name></expr>;<pos:position pos:line="72" pos:column="27"/></expr_stmt>
            <continue pos:line="73" pos:column="13">continue;<pos:position pos:line="73" pos:column="22"/></continue>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="75" pos:column="9">/* Are we following an initial run of 0x00s or any real hex? */</comment>
        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">i<pos:position pos:line="76" pos:column="14"/></name> <operator pos:line="76" pos:column="15">!=<pos:position pos:line="76" pos:column="17"/></operator> <literal type="number" pos:line="76" pos:column="18">0<pos:position pos:line="76" pos:column="19"/></literal></expr>)<pos:position pos:line="76" pos:column="20"/></condition><then pos:line="76" pos:column="20"> <block pos:line="76" pos:column="21">{
            <expr_stmt><expr><operator pos:line="77" pos:column="13">*<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="14">tp<pos:position pos:line="77" pos:column="16"/></name><operator pos:line="77" pos:column="16">++<pos:position pos:line="77" pos:column="18"/></operator> <operator pos:line="77" pos:column="19">=<pos:position pos:line="77" pos:column="20"/></operator> <literal type="char" pos:line="77" pos:column="21">':'<pos:position pos:line="77" pos:column="24"/></literal></expr>;<pos:position pos:line="77" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="78" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="79" pos:column="9">/* Is this address an encapsulated IPv4? */</comment>
        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name pos:line="80" pos:column="13">i<pos:position pos:line="80" pos:column="14"/></name> <operator pos:line="80" pos:column="15">==<pos:position pos:line="80" pos:column="17"/></operator> <literal type="number" pos:line="80" pos:column="18">6<pos:position pos:line="80" pos:column="19"/></literal> <operator pos:line="80" pos:column="20">&amp;&amp;<pos:position pos:line="80" pos:column="30"/></operator> <name><name pos:line="80" pos:column="23">best<pos:position pos:line="80" pos:column="27"/></name><operator pos:line="80" pos:column="27">.<pos:position pos:line="80" pos:column="28"/></operator><name pos:line="80" pos:column="28">base<pos:position pos:line="80" pos:column="32"/></name></name> <operator pos:line="80" pos:column="33">==<pos:position pos:line="80" pos:column="35"/></operator> <literal type="number" pos:line="80" pos:column="36">0<pos:position pos:line="80" pos:column="37"/></literal> <operator pos:line="80" pos:column="38">&amp;&amp;<pos:position pos:line="80" pos:column="48"/></operator>
            <operator pos:line="81" pos:column="13">(<pos:position pos:line="81" pos:column="14"/></operator><name><name pos:line="81" pos:column="14">best<pos:position pos:line="81" pos:column="18"/></name><operator pos:line="81" pos:column="18">.<pos:position pos:line="81" pos:column="19"/></operator><name pos:line="81" pos:column="19">len<pos:position pos:line="81" pos:column="22"/></name></name> <operator pos:line="81" pos:column="23">==<pos:position pos:line="81" pos:column="25"/></operator> <literal type="number" pos:line="81" pos:column="26">6<pos:position pos:line="81" pos:column="27"/></literal> <operator pos:line="81" pos:column="28">||<pos:position pos:line="81" pos:column="30"/></operator> <operator pos:line="81" pos:column="31">(<pos:position pos:line="81" pos:column="32"/></operator><name><name pos:line="81" pos:column="32">best<pos:position pos:line="81" pos:column="36"/></name><operator pos:line="81" pos:column="36">.<pos:position pos:line="81" pos:column="37"/></operator><name pos:line="81" pos:column="37">len<pos:position pos:line="81" pos:column="40"/></name></name> <operator pos:line="81" pos:column="41">==<pos:position pos:line="81" pos:column="43"/></operator> <literal type="number" pos:line="81" pos:column="44">5<pos:position pos:line="81" pos:column="45"/></literal> <operator pos:line="81" pos:column="46">&amp;&amp;<pos:position pos:line="81" pos:column="56"/></operator> <name><name pos:line="81" pos:column="49">words<pos:position pos:line="81" pos:column="54"/></name><index pos:line="81" pos:column="54">[<expr><literal type="number" pos:line="81" pos:column="55">5<pos:position pos:line="81" pos:column="56"/></literal></expr>]<pos:position pos:line="81" pos:column="57"/></index></name> <operator pos:line="81" pos:column="58">==<pos:position pos:line="81" pos:column="60"/></operator> <literal type="number" pos:line="81" pos:column="61">0xffff<pos:position pos:line="81" pos:column="67"/></literal><operator pos:line="81" pos:column="67">)<pos:position pos:line="81" pos:column="68"/></operator><operator pos:line="81" pos:column="68">)<pos:position pos:line="81" pos:column="69"/></operator></expr>)<pos:position pos:line="81" pos:column="70"/></condition><then pos:line="81" pos:column="70"> <block pos:line="81" pos:column="71">{
            <if pos:line="82" pos:column="13">if <condition pos:line="82" pos:column="16">(<expr><operator pos:line="82" pos:column="17">!<pos:position pos:line="82" pos:column="18"/></operator><call><name pos:line="82" pos:column="18">inet_ntop4<pos:position pos:line="82" pos:column="28"/></name><argument_list pos:line="82" pos:column="28">(<argument><expr><name pos:line="82" pos:column="29">src<pos:position pos:line="82" pos:column="32"/></name><operator pos:line="82" pos:column="32">+<pos:position pos:line="82" pos:column="33"/></operator><literal type="number" pos:line="82" pos:column="33">12<pos:position pos:line="82" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="37">tp<pos:position pos:line="82" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="41">sizeof <name pos:line="82" pos:column="48">tmp<pos:position pos:line="82" pos:column="51"/></name></sizeof> <operator pos:line="82" pos:column="52">-<pos:position pos:line="82" pos:column="53"/></operator> <operator pos:line="82" pos:column="54">(<pos:position pos:line="82" pos:column="55"/></operator><name pos:line="82" pos:column="55">tp<pos:position pos:line="82" pos:column="57"/></name> <operator pos:line="82" pos:column="58">-<pos:position pos:line="82" pos:column="59"/></operator> <name pos:line="82" pos:column="60">tmp<pos:position pos:line="82" pos:column="63"/></name><operator pos:line="82" pos:column="63">)<pos:position pos:line="82" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="82" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="66"/></condition><then pos:line="82" pos:column="66"> <block pos:line="82" pos:column="67">{
                <return pos:line="83" pos:column="17">return <expr><operator pos:line="83" pos:column="24">(<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="25">NULL<pos:position pos:line="83" pos:column="29"/></name><operator pos:line="83" pos:column="29">)<pos:position pos:line="83" pos:column="30"/></operator></expr>;<pos:position pos:line="83" pos:column="31"/></return>
            }<pos:position pos:line="84" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="85" pos:column="13">tp<pos:position pos:line="85" pos:column="15"/></name> <operator pos:line="85" pos:column="16">+=<pos:position pos:line="85" pos:column="18"/></operator> <call><name pos:line="85" pos:column="19">strlen<pos:position pos:line="85" pos:column="25"/></name><argument_list pos:line="85" pos:column="25">(<argument><expr><name pos:line="85" pos:column="26">tp<pos:position pos:line="85" pos:column="28"/></name></expr></argument>)<pos:position pos:line="85" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="30"/></expr_stmt>
            <break pos:line="86" pos:column="13">break;<pos:position pos:line="86" pos:column="19"/></break>
        }<pos:position pos:line="87" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="88" pos:column="9">tp<pos:position pos:line="88" pos:column="11"/></name> <operator pos:line="88" pos:column="12">+=<pos:position pos:line="88" pos:column="14"/></operator> <call><name pos:line="88" pos:column="15">apr_snprintf<pos:position pos:line="88" pos:column="27"/></name><argument_list pos:line="88" pos:column="27">(<argument><expr><name pos:line="88" pos:column="28">tp<pos:position pos:line="88" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="88" pos:column="32">sizeof <name pos:line="88" pos:column="39">tmp<pos:position pos:line="88" pos:column="42"/></name></sizeof> <operator pos:line="88" pos:column="43">-<pos:position pos:line="88" pos:column="44"/></operator> <operator pos:line="88" pos:column="45">(<pos:position pos:line="88" pos:column="46"/></operator><name pos:line="88" pos:column="46">tp<pos:position pos:line="88" pos:column="48"/></name> <operator pos:line="88" pos:column="49">-<pos:position pos:line="88" pos:column="50"/></operator> <name pos:line="88" pos:column="51">tmp<pos:position pos:line="88" pos:column="54"/></name><operator pos:line="88" pos:column="54">)<pos:position pos:line="88" pos:column="55"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="57">"%x"<pos:position pos:line="88" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="63">words<pos:position pos:line="88" pos:column="68"/></name><index pos:line="88" pos:column="68">[<expr><name pos:line="88" pos:column="69">i<pos:position pos:line="88" pos:column="70"/></name></expr>]<pos:position pos:line="88" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="88" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name pos:line="89" pos:column="9">i<pos:position pos:line="89" pos:column="10"/></name><operator pos:line="89" pos:column="10">++<pos:position pos:line="89" pos:column="12"/></operator></expr>;<pos:position pos:line="89" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></for>
    <comment type="block" pos:line="91" pos:column="5">/* Was it a trailing run of 0x00's? */</comment>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name><name pos:line="92" pos:column="9">best<pos:position pos:line="92" pos:column="13"/></name><operator pos:line="92" pos:column="13">.<pos:position pos:line="92" pos:column="14"/></operator><name pos:line="92" pos:column="14">base<pos:position pos:line="92" pos:column="18"/></name></name> <operator pos:line="92" pos:column="19">!=<pos:position pos:line="92" pos:column="21"/></operator> <operator pos:line="92" pos:column="22">-<pos:position pos:line="92" pos:column="23"/></operator><literal type="number" pos:line="92" pos:column="23">1<pos:position pos:line="92" pos:column="24"/></literal> <operator pos:line="92" pos:column="25">&amp;&amp;<pos:position pos:line="92" pos:column="35"/></operator> <operator pos:line="92" pos:column="28">(<pos:position pos:line="92" pos:column="29"/></operator><name><name pos:line="92" pos:column="29">best<pos:position pos:line="92" pos:column="33"/></name><operator pos:line="92" pos:column="33">.<pos:position pos:line="92" pos:column="34"/></operator><name pos:line="92" pos:column="34">base<pos:position pos:line="92" pos:column="38"/></name></name> <operator pos:line="92" pos:column="39">+<pos:position pos:line="92" pos:column="40"/></operator> <name><name pos:line="92" pos:column="41">best<pos:position pos:line="92" pos:column="45"/></name><operator pos:line="92" pos:column="45">.<pos:position pos:line="92" pos:column="46"/></operator><name pos:line="92" pos:column="46">len<pos:position pos:line="92" pos:column="49"/></name></name><operator pos:line="92" pos:column="49">)<pos:position pos:line="92" pos:column="50"/></operator> <operator pos:line="92" pos:column="51">==<pos:position pos:line="92" pos:column="53"/></operator> <operator pos:line="92" pos:column="54">(<pos:position pos:line="92" pos:column="55"/></operator><name pos:line="92" pos:column="55">IN6ADDRSZ<pos:position pos:line="92" pos:column="64"/></name> <operator pos:line="92" pos:column="65">/<pos:position pos:line="92" pos:column="66"/></operator> <name pos:line="92" pos:column="67">INT16SZ<pos:position pos:line="92" pos:column="74"/></name><operator pos:line="92" pos:column="74">)<pos:position pos:line="92" pos:column="75"/></operator></expr>)<pos:position pos:line="92" pos:column="76"/></condition><then pos:line="92" pos:column="76"> <block pos:line="92" pos:column="77">{
        <expr_stmt><expr><operator pos:line="93" pos:column="9">*<pos:position pos:line="93" pos:column="10"/></operator><name pos:line="93" pos:column="10">tp<pos:position pos:line="93" pos:column="12"/></name><operator pos:line="93" pos:column="12">++<pos:position pos:line="93" pos:column="14"/></operator> <operator pos:line="93" pos:column="15">=<pos:position pos:line="93" pos:column="16"/></operator> <literal type="char" pos:line="93" pos:column="17">':'<pos:position pos:line="93" pos:column="20"/></literal></expr>;<pos:position pos:line="93" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="95" pos:column="5">*<pos:position pos:line="95" pos:column="6"/></operator><name pos:line="95" pos:column="6">tp<pos:position pos:line="95" pos:column="8"/></name><operator pos:line="95" pos:column="8">++<pos:position pos:line="95" pos:column="10"/></operator> <operator pos:line="95" pos:column="11">=<pos:position pos:line="95" pos:column="12"/></operator> <literal type="char" pos:line="95" pos:column="13">'\0'<pos:position pos:line="95" pos:column="17"/></literal></expr>;<pos:position pos:line="95" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="97" pos:column="5">/*
     * Check for overflow, copy, and we're done.
     */</comment>
    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><call pos:line="100" pos:column="9">(<name pos:line="100" pos:column="10">apr_size_t<pos:position pos:line="100" pos:column="20"/></name>)<argument_list pos:line="100" pos:column="21">(<argument><expr><name pos:line="100" pos:column="22">tp<pos:position pos:line="100" pos:column="24"/></name> <operator pos:line="100" pos:column="25">-<pos:position pos:line="100" pos:column="26"/></operator> <name pos:line="100" pos:column="27">tmp<pos:position pos:line="100" pos:column="30"/></name></expr></argument>)<pos:position pos:line="100" pos:column="31"/></argument_list></call> <operator pos:line="100" pos:column="32">&gt;<pos:position pos:line="100" pos:column="36"/></operator> <name pos:line="100" pos:column="34">size<pos:position pos:line="100" pos:column="38"/></name></expr>)<pos:position pos:line="100" pos:column="39"/></condition><then pos:line="100" pos:column="39"> <block pos:line="100" pos:column="40">{
        <expr_stmt><expr><name pos:line="101" pos:column="9">errno<pos:position pos:line="101" pos:column="14"/></name> <operator pos:line="101" pos:column="15">=<pos:position pos:line="101" pos:column="16"/></operator> <name pos:line="101" pos:column="17">ENOSPC<pos:position pos:line="101" pos:column="23"/></name></expr>;<pos:position pos:line="101" pos:column="24"/></expr_stmt>
        <return pos:line="102" pos:column="9">return <expr><operator pos:line="102" pos:column="16">(<pos:position pos:line="102" pos:column="17"/></operator><name pos:line="102" pos:column="17">NULL<pos:position pos:line="102" pos:column="21"/></name><operator pos:line="102" pos:column="21">)<pos:position pos:line="102" pos:column="22"/></operator></expr>;<pos:position pos:line="102" pos:column="23"/></return>
    }<pos:position pos:line="103" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">strcpy<pos:position pos:line="104" pos:column="11"/></name><argument_list pos:line="104" pos:column="11">(<argument><expr><name pos:line="104" pos:column="12">dst<pos:position pos:line="104" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="17">tmp<pos:position pos:line="104" pos:column="20"/></name></expr></argument>)<pos:position pos:line="104" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="22"/></expr_stmt>
    <return pos:line="105" pos:column="5">return <expr><operator pos:line="105" pos:column="12">(<pos:position pos:line="105" pos:column="13"/></operator><name pos:line="105" pos:column="13">dst<pos:position pos:line="105" pos:column="16"/></name><operator pos:line="105" pos:column="16">)<pos:position pos:line="105" pos:column="17"/></operator></expr>;<pos:position pos:line="105" pos:column="18"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_589_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_expiresbytype<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">cmd_parms<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">cmd<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">void<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">in_dir_config<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
                                     <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">mime<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="56">const<pos:position pos:line="2" pos:column="61"/></specifier> <name pos:line="2" pos:column="62">char<pos:position pos:line="2" pos:column="66"/></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">code<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">expires_dir_config<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">dir_config<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><name pos:line="4" pos:column="38">in_dir_config<pos:position pos:line="4" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">response<pos:position pos:line="5" pos:column="19"/></name></decl>, <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="22">real_code<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">check<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">check<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <call><name pos:line="8" pos:column="13">ap_strrchr_c<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">mime<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="32">'/'<pos:position pos:line="8" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">check<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">==<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
        <return pos:line="10" pos:column="9">return <expr><literal type="string" pos:line="10" pos:column="16">"Invalid mimetype: should contain a slash"<pos:position pos:line="10" pos:column="58"/></literal></expr>;<pos:position pos:line="10" pos:column="59"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><call><name pos:line="12" pos:column="10">strlen<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><operator pos:line="12" pos:column="17">++<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">check<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call> <operator pos:line="12" pos:column="26">==<pos:position pos:line="12" pos:column="28"/></operator> <literal type="number" pos:line="12" pos:column="29">1<pos:position pos:line="12" pos:column="30"/></literal><operator pos:line="12" pos:column="30">)<pos:position pos:line="12" pos:column="31"/></operator> <operator pos:line="12" pos:column="32">&amp;&amp;<pos:position pos:line="12" pos:column="42"/></operator> <operator pos:line="12" pos:column="35">(<pos:position pos:line="12" pos:column="36"/></operator><operator pos:line="12" pos:column="36">*<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="37">check<pos:position pos:line="12" pos:column="42"/></name> <operator pos:line="12" pos:column="43">==<pos:position pos:line="12" pos:column="45"/></operator> <literal type="char" pos:line="12" pos:column="46">'*'<pos:position pos:line="12" pos:column="49"/></literal><operator pos:line="12" pos:column="49">)<pos:position pos:line="12" pos:column="50"/></operator></expr>)<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51"> <block pos:line="12" pos:column="52">{
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">dir_config<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">wildcards<pos:position pos:line="13" pos:column="30"/></name></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <literal type="number" pos:line="13" pos:column="33">1<pos:position pos:line="13" pos:column="34"/></literal></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">response<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <call><name pos:line="16" pos:column="21">check_code<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name><name pos:line="16" pos:column="32">cmd<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">pool<pos:position pos:line="16" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="43">code<pos:position pos:line="16" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="49">&amp;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="50">real_code<pos:position pos:line="16" pos:column="59"/></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call><operator pos:line="16" pos:column="60">)<pos:position pos:line="16" pos:column="61"/></operator> <operator pos:line="16" pos:column="62">==<pos:position pos:line="16" pos:column="64"/></operator> <name pos:line="16" pos:column="65">NULL<pos:position pos:line="16" pos:column="69"/></name></expr>)<pos:position pos:line="16" pos:column="70"/></condition><then pos:line="16" pos:column="70"> <block pos:line="16" pos:column="71">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">apr_table_setn<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name><name pos:line="17" pos:column="24">dir_config<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">expiresbytype<pos:position pos:line="17" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">mime<pos:position pos:line="17" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="57">real_code<pos:position pos:line="17" pos:column="66"/></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">NULL<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <return pos:line="20" pos:column="5">return <expr><call><name pos:line="20" pos:column="12">apr_pstrcat<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name><name pos:line="20" pos:column="24">cmd<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">-&gt;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="29">pool<pos:position pos:line="20" pos:column="33"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="21" pos:column="18">"'ExpiresByType "<pos:position pos:line="21" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">mime<pos:position pos:line="21" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="43">" "<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">code<pos:position pos:line="21" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="54">"': "<pos:position pos:line="21" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="61">response<pos:position pos:line="21" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="71">NULL<pos:position pos:line="21" pos:column="75"/></name></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="77"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2974.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">simple_io_process<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">simple_conn_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type> <name pos:line="1" pos:column="55">scon<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">simple_core_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">sc<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">conn_rec<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">c<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">conn_state_t<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">cs<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">scon<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">c<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">clogging_input_filters<pos:position pos:line="8" pos:column="40"/></name></name> <operator pos:line="8" pos:column="41">&amp;&amp;<pos:position pos:line="8" pos:column="51"/></operator> <operator pos:line="8" pos:column="44">!<pos:position pos:line="8" pos:column="45"/></operator><name><name pos:line="8" pos:column="45">scon<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">-&gt;<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="51">c<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">-&gt;<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="54">aborted<pos:position pos:line="8" pos:column="61"/></name></name></expr>)<pos:position pos:line="8" pos:column="62"/></condition><then pos:line="8" pos:column="62"> <block pos:line="8" pos:column="63">{
        <comment type="block" pos:line="9" pos:column="9">/* Since we have an input filter which 'cloggs' the input stream,
         * like mod_ssl, lets just do the normal read from input filters,
         * like the Worker MPM does.
         */</comment>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_run_process_connection<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name><name pos:line="13" pos:column="35">scon<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">c<pos:position pos:line="13" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">scon<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">c<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">cs<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">state<pos:position pos:line="14" pos:column="31"/></name></name> <operator pos:line="14" pos:column="32">!=<pos:position pos:line="14" pos:column="34"/></operator> <name pos:line="14" pos:column="35">CONN_STATE_SUSPENDED<pos:position pos:line="14" pos:column="55"/></name></expr>)<pos:position pos:line="14" pos:column="56"/></condition><then pos:line="14" pos:column="56"> <block pos:line="14" pos:column="57">{
            <expr_stmt><expr><name><name pos:line="15" pos:column="13">scon<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">c<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">cs<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">state<pos:position pos:line="15" pos:column="31"/></name></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <name pos:line="15" pos:column="34">CONN_STATE_LINGER<pos:position pos:line="15" pos:column="51"/></name></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="19" pos:column="5">sc<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <name><name pos:line="19" pos:column="10">scon<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">sc<pos:position pos:line="19" pos:column="18"/></name></name></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">c<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <name><name pos:line="20" pos:column="9">scon<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">c<pos:position pos:line="20" pos:column="16"/></name></name></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">cs<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <name><name pos:line="21" pos:column="10">c<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">cs<pos:position pos:line="21" pos:column="15"/></name></name></expr>;<pos:position pos:line="21" pos:column="16"/></expr_stmt>

    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><operator pos:line="23" pos:column="12">!<pos:position pos:line="23" pos:column="13"/></operator><name><name pos:line="23" pos:column="13">c<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">aborted<pos:position pos:line="23" pos:column="23"/></name></name></expr>)<pos:position pos:line="23" pos:column="24"/></condition> <block pos:line="23" pos:column="25">{

        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">cs<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">pfd<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">.<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">reqevents<pos:position pos:line="25" pos:column="30"/></name></name> <operator pos:line="25" pos:column="31">!=<pos:position pos:line="25" pos:column="33"/></operator> <literal type="number" pos:line="25" pos:column="34">0<pos:position pos:line="25" pos:column="35"/></literal></expr>)<pos:position pos:line="25" pos:column="36"/></condition><then pos:line="25" pos:column="36"> <block pos:line="25" pos:column="37">{
            <expr_stmt><expr><name pos:line="26" pos:column="13">rv<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <call><name pos:line="26" pos:column="18">apr_pollcb_remove<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><name><name pos:line="26" pos:column="36">sc<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">pollcb<pos:position pos:line="26" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="48">&amp;<pos:position pos:line="26" pos:column="53"/></operator><name><name pos:line="26" pos:column="49">cs<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">-&gt;<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="53">pfd<pos:position pos:line="26" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><name pos:line="27" pos:column="17">rv<pos:position pos:line="27" pos:column="19"/></name></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20"> <block pos:line="27" pos:column="21">{
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">ap_log_error<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">APLOG_MARK<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">APLOG_ERR<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="53">rv<pos:position pos:line="28" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="57">ap_server_conf<pos:position pos:line="28" pos:column="71"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="29" pos:column="30">"simple_io_process: apr_pollcb_remove failure"<pos:position pos:line="29" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="78"/></expr_stmt>
                <comment type="block" pos:line="30" pos:column="17">/*AP_DEBUG_ASSERT(rv == APR_SUCCESS);*/</comment>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="32" pos:column="13">cs<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">pfd<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">.<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">reqevents<pos:position pos:line="32" pos:column="30"/></name></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <literal type="number" pos:line="32" pos:column="33">0<pos:position pos:line="32" pos:column="34"/></literal></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>

        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name><name pos:line="35" pos:column="13">cs<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">state<pos:position pos:line="35" pos:column="22"/></name></name> <operator pos:line="35" pos:column="23">==<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="26">CONN_STATE_READ_REQUEST_LINE<pos:position pos:line="35" pos:column="54"/></name></expr>)<pos:position pos:line="35" pos:column="55"/></condition><then pos:line="35" pos:column="55"> <block pos:line="35" pos:column="56">{
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><operator pos:line="36" pos:column="17">!<pos:position pos:line="36" pos:column="18"/></operator><name><name pos:line="36" pos:column="18">c<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">-&gt;<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="21">aborted<pos:position pos:line="36" pos:column="28"/></name></name></expr>)<pos:position pos:line="36" pos:column="29"/></condition><then pos:line="36" pos:column="29"> <block pos:line="36" pos:column="30">{
                <expr_stmt><expr><call><name pos:line="37" pos:column="17">ap_run_process_connection<pos:position pos:line="37" pos:column="42"/></name><argument_list pos:line="37" pos:column="42">(<argument><expr><name pos:line="37" pos:column="43">c<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
                <comment type="block" pos:line="38" pos:column="17">/* state will be updated upon return
                 * fall thru to either wait for readability/timeout or
                 * do lingering close
                 */</comment>
            }<pos:position pos:line="42" pos:column="14"/></block></then>
            <else pos:line="43" pos:column="13">else <block pos:line="43" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="44" pos:column="17">cs<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">-&gt;<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="21">state<pos:position pos:line="44" pos:column="26"/></name></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <name pos:line="44" pos:column="29">CONN_STATE_LINGER<pos:position pos:line="44" pos:column="46"/></name></expr>;<pos:position pos:line="44" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="45" pos:column="14"/></block></else></if>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>

        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">cs<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">-&gt;<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="17">state<pos:position pos:line="48" pos:column="22"/></name></name> <operator pos:line="48" pos:column="23">==<pos:position pos:line="48" pos:column="25"/></operator> <name pos:line="48" pos:column="26">CONN_STATE_WRITE_COMPLETION<pos:position pos:line="48" pos:column="53"/></name></expr>)<pos:position pos:line="48" pos:column="54"/></condition><then pos:line="48" pos:column="54"> <block pos:line="48" pos:column="55">{
            <decl_stmt><decl><type><name pos:line="49" pos:column="13">ap_filter_t<pos:position pos:line="49" pos:column="24"/></name> <modifier pos:line="49" pos:column="25">*<pos:position pos:line="49" pos:column="26"/></modifier></type><name pos:line="49" pos:column="26">output_filter<pos:position pos:line="49" pos:column="39"/></name> <init pos:line="49" pos:column="40">= <expr><name><name pos:line="49" pos:column="42">c<pos:position pos:line="49" pos:column="43"/></name><operator pos:line="49" pos:column="43">-&gt;<pos:position pos:line="49" pos:column="48"/></operator><name pos:line="49" pos:column="45">output_filters<pos:position pos:line="49" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="49" pos:column="60"/></decl_stmt>
            <while pos:line="50" pos:column="13">while <condition pos:line="50" pos:column="19">(<expr><name><name pos:line="50" pos:column="20">output_filter<pos:position pos:line="50" pos:column="33"/></name><operator pos:line="50" pos:column="33">-&gt;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="35">next<pos:position pos:line="50" pos:column="39"/></name></name> <operator pos:line="50" pos:column="40">!=<pos:position pos:line="50" pos:column="42"/></operator> <name pos:line="50" pos:column="43">NULL<pos:position pos:line="50" pos:column="47"/></name></expr>)<pos:position pos:line="50" pos:column="48"/></condition> <block pos:line="50" pos:column="49">{
                <expr_stmt><expr><name pos:line="51" pos:column="17">output_filter<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">=<pos:position pos:line="51" pos:column="32"/></operator> <name><name pos:line="51" pos:column="33">output_filter<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">-&gt;<pos:position pos:line="51" pos:column="51"/></operator><name pos:line="51" pos:column="48">next<pos:position pos:line="51" pos:column="52"/></name></name></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="52" pos:column="14"/></block></while>

            <expr_stmt><expr><name pos:line="54" pos:column="13">rv<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <call><name><name pos:line="54" pos:column="18">output_filter<pos:position pos:line="54" pos:column="31"/></name><operator pos:line="54" pos:column="31">-&gt;<pos:position pos:line="54" pos:column="36"/></operator><name pos:line="54" pos:column="33">frec<pos:position pos:line="54" pos:column="37"/></name><operator pos:line="54" pos:column="37">-&gt;<pos:position pos:line="54" pos:column="42"/></operator><name pos:line="54" pos:column="39">filter_func<pos:position pos:line="54" pos:column="50"/></name><operator pos:line="54" pos:column="50">.<pos:position pos:line="54" pos:column="51"/></operator><name pos:line="54" pos:column="51">out_func<pos:position pos:line="54" pos:column="59"/></name></name><argument_list pos:line="54" pos:column="59">(<argument><expr><name pos:line="54" pos:column="60">output_filter<pos:position pos:line="54" pos:column="73"/></name></expr></argument>,
                                                           <argument><expr><name pos:line="55" pos:column="60">NULL<pos:position pos:line="55" pos:column="64"/></name></expr></argument>)<pos:position pos:line="55" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="66"/></expr_stmt>

            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><name pos:line="57" pos:column="17">rv<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">!=<pos:position pos:line="57" pos:column="22"/></operator> <name pos:line="57" pos:column="23">APR_SUCCESS<pos:position pos:line="57" pos:column="34"/></name></expr>)<pos:position pos:line="57" pos:column="35"/></condition><then pos:line="57" pos:column="35"> <block pos:line="57" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="58" pos:column="17">ap_log_error<pos:position pos:line="58" pos:column="29"/></name><argument_list pos:line="58" pos:column="29">(<argument><expr><name pos:line="58" pos:column="30">APLOG_MARK<pos:position pos:line="58" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="42">APLOG_WARNING<pos:position pos:line="58" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="57">rv<pos:position pos:line="58" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="61">ap_server_conf<pos:position pos:line="58" pos:column="75"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="59" pos:column="30">"network write failure in core output filter"<pos:position pos:line="59" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="60" pos:column="17">cs<pos:position pos:line="60" pos:column="19"/></name><operator pos:line="60" pos:column="19">-&gt;<pos:position pos:line="60" pos:column="24"/></operator><name pos:line="60" pos:column="21">state<pos:position pos:line="60" pos:column="26"/></name></name> <operator pos:line="60" pos:column="27">=<pos:position pos:line="60" pos:column="28"/></operator> <name pos:line="60" pos:column="29">CONN_STATE_LINGER<pos:position pos:line="60" pos:column="46"/></name></expr>;<pos:position pos:line="60" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="61" pos:column="14"/></block></then>
            <elseif pos:line="62" pos:column="13">else <if pos:line="62" pos:column="18">if <condition pos:line="62" pos:column="21">(<expr><name><name pos:line="62" pos:column="22">c<pos:position pos:line="62" pos:column="23"/></name><operator pos:line="62" pos:column="23">-&gt;<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="25">data_in_output_filters<pos:position pos:line="62" pos:column="47"/></name></name></expr>)<pos:position pos:line="62" pos:column="48"/></condition><then pos:line="62" pos:column="48"> <block pos:line="62" pos:column="49">{
                <comment type="block" pos:line="63" pos:column="17">/* Still in WRITE_COMPLETION_STATE:
                 * Set a write timeout for this connection, and let the
                 * event thread poll for writeability.
                 */</comment>

                <expr_stmt><expr><call><name pos:line="68" pos:column="17">simple_register_timer<pos:position pos:line="68" pos:column="38"/></name><argument_list pos:line="68" pos:column="38">(<argument><expr><name><name pos:line="68" pos:column="39">scon<pos:position pos:line="68" pos:column="43"/></name><operator pos:line="68" pos:column="43">-&gt;<pos:position pos:line="68" pos:column="48"/></operator><name pos:line="68" pos:column="45">sc<pos:position pos:line="68" pos:column="47"/></name></name></expr></argument>,
                                      <argument><expr><name pos:line="69" pos:column="39">simple_io_timeout_cb<pos:position pos:line="69" pos:column="59"/></name></expr></argument>,
                                      <argument><expr><name pos:line="70" pos:column="39">scon<pos:position pos:line="70" pos:column="43"/></name></expr></argument>,
                                      <argument><expr><ternary><condition><expr><name><name pos:line="71" pos:column="39">scon<pos:position pos:line="71" pos:column="43"/></name><operator pos:line="71" pos:column="43">-&gt;<pos:position pos:line="71" pos:column="48"/></operator><name pos:line="71" pos:column="45">c<pos:position pos:line="71" pos:column="46"/></name><operator pos:line="71" pos:column="46">-&gt;<pos:position pos:line="71" pos:column="51"/></operator><name pos:line="71" pos:column="48">base_server<pos:position pos:line="71" pos:column="59"/></name></name> <operator pos:line="71" pos:column="60">!=<pos:position pos:line="71" pos:column="62"/></operator>
                                      <name pos:line="72" pos:column="39">NULL<pos:position pos:line="72" pos:column="43"/></name></expr> ?<pos:position pos:line="72" pos:column="45"/></condition><then pos:line="72" pos:column="45"> <expr><name><name pos:line="72" pos:column="46">scon<pos:position pos:line="72" pos:column="50"/></name><operator pos:line="72" pos:column="50">-&gt;<pos:position pos:line="72" pos:column="55"/></operator><name pos:line="72" pos:column="52">c<pos:position pos:line="72" pos:column="53"/></name><operator pos:line="72" pos:column="53">-&gt;<pos:position pos:line="72" pos:column="58"/></operator><name pos:line="72" pos:column="55">base_server<pos:position pos:line="72" pos:column="66"/></name><operator pos:line="72" pos:column="66">-&gt;<pos:position pos:line="72" pos:column="71"/></operator>
                                      <name pos:line="73" pos:column="39">timeout<pos:position pos:line="73" pos:column="46"/></name></name></expr> <pos:position pos:line="73" pos:column="47"/></then><else pos:line="73" pos:column="47">: <expr><name><name pos:line="73" pos:column="49">ap_server_conf<pos:position pos:line="73" pos:column="63"/></name><operator pos:line="73" pos:column="63">-&gt;<pos:position pos:line="73" pos:column="68"/></operator><name pos:line="73" pos:column="65">timeout<pos:position pos:line="73" pos:column="72"/></name></name></expr></else></ternary></expr></argument>,
                                      <argument><expr><name><name pos:line="74" pos:column="39">scon<pos:position pos:line="74" pos:column="43"/></name><operator pos:line="74" pos:column="43">-&gt;<pos:position pos:line="74" pos:column="48"/></operator><name pos:line="74" pos:column="45">pool<pos:position pos:line="74" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="51"/></expr_stmt>

                <expr_stmt><expr><name><name pos:line="76" pos:column="17">cs<pos:position pos:line="76" pos:column="19"/></name><operator pos:line="76" pos:column="19">-&gt;<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="21">pfd<pos:position pos:line="76" pos:column="24"/></name><operator pos:line="76" pos:column="24">.<pos:position pos:line="76" pos:column="25"/></operator><name pos:line="76" pos:column="25">reqevents<pos:position pos:line="76" pos:column="34"/></name></name> <operator pos:line="76" pos:column="35">=<pos:position pos:line="76" pos:column="36"/></operator> <name pos:line="76" pos:column="37">APR_POLLOUT<pos:position pos:line="76" pos:column="48"/></name> <operator pos:line="76" pos:column="49">|<pos:position pos:line="76" pos:column="50"/></operator> <name pos:line="76" pos:column="51">APR_POLLHUP<pos:position pos:line="76" pos:column="62"/></name> <operator pos:line="76" pos:column="63">|<pos:position pos:line="76" pos:column="64"/></operator> <name pos:line="76" pos:column="65">APR_POLLERR<pos:position pos:line="76" pos:column="76"/></name></expr>;<pos:position pos:line="76" pos:column="77"/></expr_stmt>

                <expr_stmt><expr><name pos:line="78" pos:column="17">rv<pos:position pos:line="78" pos:column="19"/></name> <operator pos:line="78" pos:column="20">=<pos:position pos:line="78" pos:column="21"/></operator> <call><name pos:line="78" pos:column="22">apr_pollcb_add<pos:position pos:line="78" pos:column="36"/></name><argument_list pos:line="78" pos:column="36">(<argument><expr><name><name pos:line="78" pos:column="37">sc<pos:position pos:line="78" pos:column="39"/></name><operator pos:line="78" pos:column="39">-&gt;<pos:position pos:line="78" pos:column="44"/></operator><name pos:line="78" pos:column="41">pollcb<pos:position pos:line="78" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="49">&amp;<pos:position pos:line="78" pos:column="54"/></operator><name><name pos:line="78" pos:column="50">cs<pos:position pos:line="78" pos:column="52"/></name><operator pos:line="78" pos:column="52">-&gt;<pos:position pos:line="78" pos:column="57"/></operator><name pos:line="78" pos:column="54">pfd<pos:position pos:line="78" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="59"/></expr_stmt>

                <if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><name pos:line="80" pos:column="21">rv<pos:position pos:line="80" pos:column="23"/></name> <operator pos:line="80" pos:column="24">!=<pos:position pos:line="80" pos:column="26"/></operator> <name pos:line="80" pos:column="27">APR_SUCCESS<pos:position pos:line="80" pos:column="38"/></name></expr>)<pos:position pos:line="80" pos:column="39"/></condition><then pos:line="80" pos:column="39"> <block pos:line="80" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="81" pos:column="21">ap_log_error<pos:position pos:line="81" pos:column="33"/></name><argument_list pos:line="81" pos:column="33">(<argument><expr><name pos:line="81" pos:column="34">APLOG_MARK<pos:position pos:line="81" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="46">APLOG_WARNING<pos:position pos:line="81" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="61">rv<pos:position pos:line="81" pos:column="63"/></name></expr></argument>,
                                 <argument><expr><name pos:line="82" pos:column="34">ap_server_conf<pos:position pos:line="82" pos:column="48"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="83" pos:column="34">"apr_pollcb_add: failed in write completion"<pos:position pos:line="83" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="80"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="84" pos:column="21">AP_DEBUG_ASSERT<pos:position pos:line="84" pos:column="36"/></name><argument_list pos:line="84" pos:column="36">(<argument><expr><name pos:line="84" pos:column="37">rv<pos:position pos:line="84" pos:column="39"/></name> <operator pos:line="84" pos:column="40">==<pos:position pos:line="84" pos:column="42"/></operator> <name pos:line="84" pos:column="43">APR_SUCCESS<pos:position pos:line="84" pos:column="54"/></name></expr></argument>)<pos:position pos:line="84" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="56"/></expr_stmt>
                }<pos:position pos:line="85" pos:column="18"/></block></then></if>
                <return pos:line="86" pos:column="17">return <expr><name pos:line="86" pos:column="24">APR_SUCCESS<pos:position pos:line="86" pos:column="35"/></name></expr>;<pos:position pos:line="86" pos:column="36"/></return>
            }<pos:position pos:line="87" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="88" pos:column="13">else <if pos:line="88" pos:column="18">if <condition pos:line="88" pos:column="21">(<expr><name><name pos:line="88" pos:column="22">c<pos:position pos:line="88" pos:column="23"/></name><operator pos:line="88" pos:column="23">-&gt;<pos:position pos:line="88" pos:column="28"/></operator><name pos:line="88" pos:column="25">keepalive<pos:position pos:line="88" pos:column="34"/></name></name> <operator pos:line="88" pos:column="35">!=<pos:position pos:line="88" pos:column="37"/></operator> <name pos:line="88" pos:column="38">AP_CONN_KEEPALIVE<pos:position pos:line="88" pos:column="55"/></name> <operator pos:line="88" pos:column="56">||<pos:position pos:line="88" pos:column="58"/></operator> <name><name pos:line="88" pos:column="59">c<pos:position pos:line="88" pos:column="60"/></name><operator pos:line="88" pos:column="60">-&gt;<pos:position pos:line="88" pos:column="65"/></operator><name pos:line="88" pos:column="62">aborted<pos:position pos:line="88" pos:column="69"/></name></name></expr>)<pos:position pos:line="88" pos:column="70"/></condition><then pos:line="88" pos:column="70"> <block pos:line="88" pos:column="71">{
                <expr_stmt><expr><name><name pos:line="89" pos:column="17">c<pos:position pos:line="89" pos:column="18"/></name><operator pos:line="89" pos:column="18">-&gt;<pos:position pos:line="89" pos:column="23"/></operator><name pos:line="89" pos:column="20">cs<pos:position pos:line="89" pos:column="22"/></name><operator pos:line="89" pos:column="22">-&gt;<pos:position pos:line="89" pos:column="27"/></operator><name pos:line="89" pos:column="24">state<pos:position pos:line="89" pos:column="29"/></name></name> <operator pos:line="89" pos:column="30">=<pos:position pos:line="89" pos:column="31"/></operator> <name pos:line="89" pos:column="32">CONN_STATE_LINGER<pos:position pos:line="89" pos:column="49"/></name></expr>;<pos:position pos:line="89" pos:column="50"/></expr_stmt>
            }<pos:position pos:line="90" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="91" pos:column="13">else <if pos:line="91" pos:column="18">if <condition pos:line="91" pos:column="21">(<expr><name><name pos:line="91" pos:column="22">c<pos:position pos:line="91" pos:column="23"/></name><operator pos:line="91" pos:column="23">-&gt;<pos:position pos:line="91" pos:column="28"/></operator><name pos:line="91" pos:column="25">data_in_input_filters<pos:position pos:line="91" pos:column="46"/></name></name></expr>)<pos:position pos:line="91" pos:column="47"/></condition><then pos:line="91" pos:column="47"> <block pos:line="91" pos:column="48">{
                <expr_stmt><expr><name><name pos:line="92" pos:column="17">cs<pos:position pos:line="92" pos:column="19"/></name><operator pos:line="92" pos:column="19">-&gt;<pos:position pos:line="92" pos:column="24"/></operator><name pos:line="92" pos:column="21">state<pos:position pos:line="92" pos:column="26"/></name></name> <operator pos:line="92" pos:column="27">=<pos:position pos:line="92" pos:column="28"/></operator> <name pos:line="92" pos:column="29">CONN_STATE_READ_REQUEST_LINE<pos:position pos:line="92" pos:column="57"/></name></expr>;<pos:position pos:line="92" pos:column="58"/></expr_stmt>
            }<pos:position pos:line="93" pos:column="14"/></block></then></if></elseif>
            <else pos:line="94" pos:column="13">else <block pos:line="94" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="95" pos:column="17">cs<pos:position pos:line="95" pos:column="19"/></name><operator pos:line="95" pos:column="19">-&gt;<pos:position pos:line="95" pos:column="24"/></operator><name pos:line="95" pos:column="21">state<pos:position pos:line="95" pos:column="26"/></name></name> <operator pos:line="95" pos:column="27">=<pos:position pos:line="95" pos:column="28"/></operator> <name pos:line="95" pos:column="29">CONN_STATE_CHECK_REQUEST_LINE_READABLE<pos:position pos:line="95" pos:column="67"/></name></expr>;<pos:position pos:line="95" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="96" pos:column="14"/></block></else></if>
        }<pos:position pos:line="97" pos:column="10"/></block></then></if>

        <if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><name><name pos:line="99" pos:column="13">cs<pos:position pos:line="99" pos:column="15"/></name><operator pos:line="99" pos:column="15">-&gt;<pos:position pos:line="99" pos:column="20"/></operator><name pos:line="99" pos:column="17">state<pos:position pos:line="99" pos:column="22"/></name></name> <operator pos:line="99" pos:column="23">==<pos:position pos:line="99" pos:column="25"/></operator> <name pos:line="99" pos:column="26">CONN_STATE_LINGER<pos:position pos:line="99" pos:column="43"/></name></expr>)<pos:position pos:line="99" pos:column="44"/></condition><then pos:line="99" pos:column="44"> <block pos:line="99" pos:column="45">{
            <expr_stmt><expr><call><name pos:line="100" pos:column="13">ap_lingering_close<pos:position pos:line="100" pos:column="31"/></name><argument_list pos:line="100" pos:column="31">(<argument><expr><name pos:line="100" pos:column="32">c<pos:position pos:line="100" pos:column="33"/></name></expr></argument>)<pos:position pos:line="100" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">apr_pool_destroy<pos:position pos:line="101" pos:column="29"/></name><argument_list pos:line="101" pos:column="29">(<argument><expr><name><name pos:line="101" pos:column="30">scon<pos:position pos:line="101" pos:column="34"/></name><operator pos:line="101" pos:column="34">-&gt;<pos:position pos:line="101" pos:column="39"/></operator><name pos:line="101" pos:column="36">pool<pos:position pos:line="101" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="42"/></expr_stmt>
            <return pos:line="102" pos:column="13">return <expr><name pos:line="102" pos:column="20">APR_SUCCESS<pos:position pos:line="102" pos:column="31"/></name></expr>;<pos:position pos:line="102" pos:column="32"/></return>
        }<pos:position pos:line="103" pos:column="10"/></block></then></if>

        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name><name pos:line="105" pos:column="13">cs<pos:position pos:line="105" pos:column="15"/></name><operator pos:line="105" pos:column="15">-&gt;<pos:position pos:line="105" pos:column="20"/></operator><name pos:line="105" pos:column="17">state<pos:position pos:line="105" pos:column="22"/></name></name> <operator pos:line="105" pos:column="23">==<pos:position pos:line="105" pos:column="25"/></operator> <name pos:line="105" pos:column="26">CONN_STATE_CHECK_REQUEST_LINE_READABLE<pos:position pos:line="105" pos:column="64"/></name></expr>)<pos:position pos:line="105" pos:column="65"/></condition><then pos:line="105" pos:column="65"> <block pos:line="105" pos:column="66">{
            <expr_stmt><expr><call><name pos:line="106" pos:column="13">simple_register_timer<pos:position pos:line="106" pos:column="34"/></name><argument_list pos:line="106" pos:column="34">(<argument><expr><name><name pos:line="106" pos:column="35">scon<pos:position pos:line="106" pos:column="39"/></name><operator pos:line="106" pos:column="39">-&gt;<pos:position pos:line="106" pos:column="44"/></operator><name pos:line="106" pos:column="41">sc<pos:position pos:line="106" pos:column="43"/></name></name></expr></argument>,
                                  <argument><expr><name pos:line="107" pos:column="35">simple_io_timeout_cb<pos:position pos:line="107" pos:column="55"/></name></expr></argument>,
                                  <argument><expr><name pos:line="108" pos:column="35">scon<pos:position pos:line="108" pos:column="39"/></name></expr></argument>,
                                  <argument><expr><ternary><condition><expr><name><name pos:line="109" pos:column="35">scon<pos:position pos:line="109" pos:column="39"/></name><operator pos:line="109" pos:column="39">-&gt;<pos:position pos:line="109" pos:column="44"/></operator><name pos:line="109" pos:column="41">c<pos:position pos:line="109" pos:column="42"/></name><operator pos:line="109" pos:column="42">-&gt;<pos:position pos:line="109" pos:column="47"/></operator><name pos:line="109" pos:column="44">base_server<pos:position pos:line="109" pos:column="55"/></name></name> <operator pos:line="109" pos:column="56">!=<pos:position pos:line="109" pos:column="58"/></operator>
                                  <name pos:line="110" pos:column="35">NULL<pos:position pos:line="110" pos:column="39"/></name></expr> ?<pos:position pos:line="110" pos:column="41"/></condition><then pos:line="110" pos:column="41"> <expr><name><name pos:line="110" pos:column="42">scon<pos:position pos:line="110" pos:column="46"/></name><operator pos:line="110" pos:column="46">-&gt;<pos:position pos:line="110" pos:column="51"/></operator><name pos:line="110" pos:column="48">c<pos:position pos:line="110" pos:column="49"/></name><operator pos:line="110" pos:column="49">-&gt;<pos:position pos:line="110" pos:column="54"/></operator><name pos:line="110" pos:column="51">base_server<pos:position pos:line="110" pos:column="62"/></name><operator pos:line="110" pos:column="62">-&gt;<pos:position pos:line="110" pos:column="67"/></operator>
                                  <name pos:line="111" pos:column="35">timeout<pos:position pos:line="111" pos:column="42"/></name></name></expr> <pos:position pos:line="111" pos:column="43"/></then><else pos:line="111" pos:column="43">: <expr><name><name pos:line="111" pos:column="45">ap_server_conf<pos:position pos:line="111" pos:column="59"/></name><operator pos:line="111" pos:column="59">-&gt;<pos:position pos:line="111" pos:column="64"/></operator><name pos:line="111" pos:column="61">timeout<pos:position pos:line="111" pos:column="68"/></name></name></expr></else></ternary></expr></argument>,
                                  <argument><expr><name><name pos:line="112" pos:column="35">scon<pos:position pos:line="112" pos:column="39"/></name><operator pos:line="112" pos:column="39">-&gt;<pos:position pos:line="112" pos:column="44"/></operator><name pos:line="112" pos:column="41">pool<pos:position pos:line="112" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="47"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="114" pos:column="13">cs<pos:position pos:line="114" pos:column="15"/></name><operator pos:line="114" pos:column="15">-&gt;<pos:position pos:line="114" pos:column="20"/></operator><name pos:line="114" pos:column="17">pfd<pos:position pos:line="114" pos:column="20"/></name><operator pos:line="114" pos:column="20">.<pos:position pos:line="114" pos:column="21"/></operator><name pos:line="114" pos:column="21">reqevents<pos:position pos:line="114" pos:column="30"/></name></name> <operator pos:line="114" pos:column="31">=<pos:position pos:line="114" pos:column="32"/></operator> <name pos:line="114" pos:column="33">APR_POLLIN<pos:position pos:line="114" pos:column="43"/></name></expr>;<pos:position pos:line="114" pos:column="44"/></expr_stmt>

            <expr_stmt><expr><name pos:line="116" pos:column="13">rv<pos:position pos:line="116" pos:column="15"/></name> <operator pos:line="116" pos:column="16">=<pos:position pos:line="116" pos:column="17"/></operator> <call><name pos:line="116" pos:column="18">apr_pollcb_add<pos:position pos:line="116" pos:column="32"/></name><argument_list pos:line="116" pos:column="32">(<argument><expr><name><name pos:line="116" pos:column="33">sc<pos:position pos:line="116" pos:column="35"/></name><operator pos:line="116" pos:column="35">-&gt;<pos:position pos:line="116" pos:column="40"/></operator><name pos:line="116" pos:column="37">pollcb<pos:position pos:line="116" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="116" pos:column="45">&amp;<pos:position pos:line="116" pos:column="50"/></operator><name><name pos:line="116" pos:column="46">cs<pos:position pos:line="116" pos:column="48"/></name><operator pos:line="116" pos:column="48">-&gt;<pos:position pos:line="116" pos:column="53"/></operator><name pos:line="116" pos:column="50">pfd<pos:position pos:line="116" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="55"/></expr_stmt>

            <if pos:line="118" pos:column="13">if <condition pos:line="118" pos:column="16">(<expr><name pos:line="118" pos:column="17">rv<pos:position pos:line="118" pos:column="19"/></name></expr>)<pos:position pos:line="118" pos:column="20"/></condition><then pos:line="118" pos:column="20"> <block pos:line="118" pos:column="21">{
                <expr_stmt><expr><call><name pos:line="119" pos:column="17">ap_log_error<pos:position pos:line="119" pos:column="29"/></name><argument_list pos:line="119" pos:column="29">(<argument><expr><name pos:line="119" pos:column="30">APLOG_MARK<pos:position pos:line="119" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="42">APLOG_ERR<pos:position pos:line="119" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="53">rv<pos:position pos:line="119" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="57">ap_server_conf<pos:position pos:line="119" pos:column="71"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="120" pos:column="30">"process_socket: apr_pollcb_add failure in read request line"<pos:position pos:line="120" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="93"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="121" pos:column="17">AP_DEBUG_ASSERT<pos:position pos:line="121" pos:column="32"/></name><argument_list pos:line="121" pos:column="32">(<argument><expr><name pos:line="121" pos:column="33">rv<pos:position pos:line="121" pos:column="35"/></name> <operator pos:line="121" pos:column="36">==<pos:position pos:line="121" pos:column="38"/></operator> <name pos:line="121" pos:column="39">APR_SUCCESS<pos:position pos:line="121" pos:column="50"/></name></expr></argument>)<pos:position pos:line="121" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="122" pos:column="14"/></block></then></if>

            <return pos:line="124" pos:column="13">return <expr><name pos:line="124" pos:column="20">APR_SUCCESS<pos:position pos:line="124" pos:column="31"/></name></expr>;<pos:position pos:line="124" pos:column="32"/></return>
        }<pos:position pos:line="125" pos:column="10"/></block></then></if>
    }<pos:position pos:line="126" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="128" pos:column="5">ap_lingering_close<pos:position pos:line="128" pos:column="23"/></name><argument_list pos:line="128" pos:column="23">(<argument><expr><name pos:line="128" pos:column="24">c<pos:position pos:line="128" pos:column="25"/></name></expr></argument>)<pos:position pos:line="128" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="129" pos:column="5">apr_pool_destroy<pos:position pos:line="129" pos:column="21"/></name><argument_list pos:line="129" pos:column="21">(<argument><expr><name><name pos:line="129" pos:column="22">scon<pos:position pos:line="129" pos:column="26"/></name><operator pos:line="129" pos:column="26">-&gt;<pos:position pos:line="129" pos:column="31"/></operator><name pos:line="129" pos:column="28">pool<pos:position pos:line="129" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="34"/></expr_stmt>
    <return pos:line="130" pos:column="5">return <expr><name pos:line="130" pos:column="12">APR_SUCCESS<pos:position pos:line="130" pos:column="23"/></name></expr>;<pos:position pos:line="130" pos:column="24"/></return>
}<pos:position pos:line="131" pos:column="2"/></block></function></unit>

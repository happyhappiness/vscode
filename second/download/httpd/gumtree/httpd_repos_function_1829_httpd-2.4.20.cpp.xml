<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1829_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_array_header_t<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">get_sorted_modules<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name pos:line="1" pos:column="47">apr_pool_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">p<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_array_header_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">arr<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><call><name pos:line="3" pos:column="31">apr_array_make<pos:position pos:line="3" pos:column="45"/></name><argument_list pos:line="3" pos:column="45">(<argument><expr><name pos:line="3" pos:column="46">p<pos:position pos:line="3" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="49">64<pos:position pos:line="3" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="53">sizeof<argument_list pos:line="3" pos:column="59">(<argument><expr><name pos:line="3" pos:column="60">module<pos:position pos:line="3" pos:column="66"/></name> <operator pos:line="3" pos:column="67">*<pos:position pos:line="3" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="3" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">module<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">modp<pos:position pos:line="4" pos:column="17"/></name></decl>, <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier><modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="21">entry<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><expr><name pos:line="5" pos:column="10">modp<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">=<pos:position pos:line="5" pos:column="16"/></operator> <name pos:line="5" pos:column="17">ap_top_module<pos:position pos:line="5" pos:column="30"/></name></expr>;<pos:position pos:line="5" pos:column="31"/></init> <condition><expr><name pos:line="5" pos:column="32">modp<pos:position pos:line="5" pos:column="36"/></name></expr>;<pos:position pos:line="5" pos:column="37"/></condition> <incr><expr><name pos:line="5" pos:column="38">modp<pos:position pos:line="5" pos:column="42"/></name> <operator pos:line="5" pos:column="43">=<pos:position pos:line="5" pos:column="44"/></operator> <name><name pos:line="5" pos:column="45">modp<pos:position pos:line="5" pos:column="49"/></name><operator pos:line="5" pos:column="49">-&gt;<pos:position pos:line="5" pos:column="54"/></operator><name pos:line="5" pos:column="51">next<pos:position pos:line="5" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="5" pos:column="56"/></control> <block pos:line="5" pos:column="57">{
        <expr_stmt><expr><name pos:line="6" pos:column="9">entry<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <operator pos:line="6" pos:column="17">&amp;<pos:position pos:line="6" pos:column="22"/></operator><call><name pos:line="6" pos:column="18">APR_ARRAY_PUSH<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">arr<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="38">module<pos:position pos:line="6" pos:column="44"/></name> <operator pos:line="6" pos:column="45">*<pos:position pos:line="6" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">entry<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="18">modp<pos:position pos:line="7" pos:column="22"/></name></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">qsort<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><name><name pos:line="9" pos:column="11">arr<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">elts<pos:position pos:line="9" pos:column="20"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="22">arr<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">nelts<pos:position pos:line="9" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="34">sizeof<argument_list pos:line="9" pos:column="40">(<argument><expr><name pos:line="9" pos:column="41">module<pos:position pos:line="9" pos:column="47"/></name> <operator pos:line="9" pos:column="48">*<pos:position pos:line="9" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="9" pos:column="52">cmp_module_name<pos:position pos:line="9" pos:column="67"/></name></expr></argument>)<pos:position pos:line="9" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="69"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">arr<pos:position pos:line="10" pos:column="15"/></name></expr>;<pos:position pos:line="10" pos:column="16"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

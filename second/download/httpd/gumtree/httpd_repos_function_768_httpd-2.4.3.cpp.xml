<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_768_httpd-2.4.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_util_thread_setup<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">apr_pool_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">p<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="5" pos:column="5">lock_num_locks<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">=<pos:position pos:line="5" pos:column="21"/></operator> <call><name pos:line="5" pos:column="22">CRYPTO_num_locks<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">()<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">lock_cs<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <call><name pos:line="6" pos:column="15">apr_palloc<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">p<pos:position pos:line="6" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="29">lock_num_locks<pos:position pos:line="6" pos:column="43"/></name> <operator pos:line="6" pos:column="44">*<pos:position pos:line="6" pos:column="45"/></operator> <sizeof pos:line="6" pos:column="46">sizeof<argument_list pos:line="6" pos:column="52">(<argument><expr><operator pos:line="6" pos:column="53">*<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="54">lock_cs<pos:position pos:line="6" pos:column="61"/></name></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="64"/></expr_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><name pos:line="8" pos:column="17">i<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="21">lock_num_locks<pos:position pos:line="8" pos:column="35"/></name></expr>;<pos:position pos:line="8" pos:column="36"/></condition> <incr><expr><name pos:line="8" pos:column="37">i<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">++<pos:position pos:line="8" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="41"/></control> <block pos:line="8" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">apr_thread_mutex_create<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><operator pos:line="9" pos:column="33">&amp;<pos:position pos:line="9" pos:column="38"/></operator><operator pos:line="9" pos:column="34">(<pos:position pos:line="9" pos:column="35"/></operator><name><name pos:line="9" pos:column="35">lock_cs<pos:position pos:line="9" pos:column="42"/></name><index pos:line="9" pos:column="42">[<expr><name pos:line="9" pos:column="43">i<pos:position pos:line="9" pos:column="44"/></name></expr>]<pos:position pos:line="9" pos:column="45"/></index></name><operator pos:line="9" pos:column="45">)<pos:position pos:line="9" pos:column="46"/></operator></expr></argument>, <argument><expr><name pos:line="9" pos:column="48">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="9" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="74">p<pos:position pos:line="9" pos:column="75"/></name></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">CRYPTO_set_id_callback<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">ssl_util_thr_id<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">CRYPTO_set_locking_callback<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">ssl_util_thr_lock<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* Set up dynamic locking scaffolding for OpenSSL to use at its
     * convenience.
     */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">dynlockpool<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">p<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">CRYPTO_set_dynlock_create_callback<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">(<argument><expr><name pos:line="20" pos:column="40">ssl_dyn_create_function<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">CRYPTO_set_dynlock_lock_callback<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">ssl_dyn_lock_function<pos:position pos:line="21" pos:column="59"/></name></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">CRYPTO_set_dynlock_destroy_callback<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><name pos:line="22" pos:column="41">ssl_dyn_destroy_function<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">p<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">NULL<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="40">ssl_util_thread_cleanup<pos:position pos:line="24" pos:column="63"/></name></expr></argument>,
                                       <argument><expr><name pos:line="25" pos:column="40">apr_pool_cleanup_null<pos:position pos:line="25" pos:column="61"/></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3902_httpd-2.2.16.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_uint32_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_atomic_cas32<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">volatile<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">apr_uint32_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">mem<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">apr_uint32_t<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">swap<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>, 
                              <parameter><decl><type><name pos:line="2" pos:column="31">apr_uint32_t<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">cmp<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_uint32_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">old<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">cmp<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">__cs<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><operator pos:line="6" pos:column="10">&amp;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="11">old<pos:position pos:line="6" pos:column="14"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">cs_t<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></operator><operator pos:line="6" pos:column="23">)<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">mem<pos:position pos:line="6" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="29">swap<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">old<pos:position pos:line="7" pos:column="15"/></name></expr>;<pos:position pos:line="7" pos:column="16"/></return> <comment type="block" pos:line="7" pos:column="17">/* old is automatically updated from mem on cs failure */</comment>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

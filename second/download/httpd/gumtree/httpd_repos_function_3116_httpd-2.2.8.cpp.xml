<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3116_httpd-2.2.8.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_short_opt<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">arg<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">command_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">cmd_data<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><call><name pos:line="3" pos:column="9">strcmp<pos:position pos:line="3" pos:column="15"/></name><argument_list pos:line="3" pos:column="15">(<argument><expr><name pos:line="3" pos:column="16">arg<pos:position pos:line="3" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="21">"export-dynamic"<pos:position pos:line="3" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="38"/></argument_list></call> <operator pos:line="3" pos:column="39">==<pos:position pos:line="3" pos:column="41"/></operator> <literal type="number" pos:line="3" pos:column="42">0<pos:position pos:line="3" pos:column="43"/></literal></expr>)<pos:position pos:line="3" pos:column="44"/></condition><then pos:line="3" pos:column="44"> <block pos:line="3" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="4" pos:column="9">cmd_data<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">-&gt;<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="19">options<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">.<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">export_dynamic<pos:position pos:line="4" pos:column="41"/></name></name> <operator pos:line="4" pos:column="42">=<pos:position pos:line="4" pos:column="43"/></operator> <literal type="number" pos:line="4" pos:column="44">1<pos:position pos:line="4" pos:column="45"/></literal></expr>;<pos:position pos:line="4" pos:column="46"/></expr_stmt>
        <return pos:line="5" pos:column="9">return <expr><literal type="number" pos:line="5" pos:column="16">1<pos:position pos:line="5" pos:column="17"/></literal></expr>;<pos:position pos:line="5" pos:column="18"/></return>
    }<pos:position pos:line="6" pos:column="6"/></block></then></if>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">strcmp<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">arg<pos:position pos:line="8" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="21">"module"<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call> <operator pos:line="8" pos:column="31">==<pos:position pos:line="8" pos:column="33"/></operator> <literal type="number" pos:line="8" pos:column="34">0<pos:position pos:line="8" pos:column="35"/></literal></expr>)<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36"> <block pos:line="8" pos:column="37">{
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">cmd_data<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">output<pos:position pos:line="9" pos:column="25"/></name></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">otModule<pos:position pos:line="9" pos:column="36"/></name></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">1<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">strcmp<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">arg<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="21">"Zexe"<pos:position pos:line="13" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call> <operator pos:line="13" pos:column="29">==<pos:position pos:line="13" pos:column="31"/></operator> <literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr>)<pos:position pos:line="13" pos:column="34"/></condition><then pos:line="13" pos:column="34"> <block pos:line="13" pos:column="35">{
        <return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">1<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">strcmp<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">arg<pos:position pos:line="17" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="21">"avoid-version"<pos:position pos:line="17" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call> <operator pos:line="17" pos:column="38">==<pos:position pos:line="17" pos:column="40"/></operator> <literal type="number" pos:line="17" pos:column="41">0<pos:position pos:line="17" pos:column="42"/></literal></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43"> <block pos:line="17" pos:column="44">{
        <return pos:line="18" pos:column="9">return <expr><literal type="number" pos:line="18" pos:column="16">1<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">strcmp<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">arg<pos:position pos:line="21" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="21">"prefer-pic"<pos:position pos:line="21" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call> <operator pos:line="21" pos:column="35">==<pos:position pos:line="21" pos:column="37"/></operator> <literal type="number" pos:line="21" pos:column="38">0<pos:position pos:line="21" pos:column="39"/></literal></expr>)<pos:position pos:line="21" pos:column="40"/></condition><then pos:line="21" pos:column="40"> <block pos:line="21" pos:column="41">{
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">cmd_data<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">options<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">.<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">pic_mode<pos:position pos:line="22" pos:column="35"/></name></name> <operator pos:line="22" pos:column="36">=<pos:position pos:line="22" pos:column="37"/></operator> <name pos:line="22" pos:column="38">pic_PREFER<pos:position pos:line="22" pos:column="48"/></name></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><literal type="number" pos:line="23" pos:column="16">1<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">strcmp<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">arg<pos:position pos:line="26" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="21">"prefer-non-pic"<pos:position pos:line="26" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call> <operator pos:line="26" pos:column="39">==<pos:position pos:line="26" pos:column="41"/></operator> <literal type="number" pos:line="26" pos:column="42">0<pos:position pos:line="26" pos:column="43"/></literal></expr>)<pos:position pos:line="26" pos:column="44"/></condition><then pos:line="26" pos:column="44"> <block pos:line="26" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">cmd_data<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">options<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">.<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">pic_mode<pos:position pos:line="27" pos:column="35"/></name></name> <operator pos:line="27" pos:column="36">=<pos:position pos:line="27" pos:column="37"/></operator> <name pos:line="27" pos:column="38">pic_AVOID<pos:position pos:line="27" pos:column="47"/></name></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><literal type="number" pos:line="28" pos:column="16">1<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><call><name pos:line="31" pos:column="9">strcmp<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">arg<pos:position pos:line="31" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="21">"static"<pos:position pos:line="31" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call> <operator pos:line="31" pos:column="31">==<pos:position pos:line="31" pos:column="33"/></operator> <literal type="number" pos:line="31" pos:column="34">0<pos:position pos:line="31" pos:column="35"/></literal></expr>)<pos:position pos:line="31" pos:column="36"/></condition><then pos:line="31" pos:column="36"> <block pos:line="31" pos:column="37">{
        <comment type="block" pos:line="32" pos:column="9">/* Don't respect it for now. */</comment>
        <return pos:line="33" pos:column="9">return <expr><literal type="number" pos:line="33" pos:column="16">1<pos:position pos:line="33" pos:column="17"/></literal></expr>;<pos:position pos:line="33" pos:column="18"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">cmd_data<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">mode<pos:position pos:line="36" pos:column="23"/></name></name> <operator pos:line="36" pos:column="24">==<pos:position pos:line="36" pos:column="26"/></operator> <name pos:line="36" pos:column="27">mLink<pos:position pos:line="36" pos:column="32"/></name></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33"> <block pos:line="36" pos:column="34">{
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">strcmp<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><name pos:line="37" pos:column="20">arg<pos:position pos:line="37" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="25">"no-install"<pos:position pos:line="37" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call> <operator pos:line="37" pos:column="39">==<pos:position pos:line="37" pos:column="41"/></operator> <literal type="number" pos:line="37" pos:column="42">0<pos:position pos:line="37" pos:column="43"/></literal></expr>)<pos:position pos:line="37" pos:column="44"/></condition><then pos:line="37" pos:column="44"> <block pos:line="37" pos:column="45">{
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">cmd_data<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">options<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">.<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="31">no_install<pos:position pos:line="38" pos:column="41"/></name></name> <operator pos:line="38" pos:column="42">=<pos:position pos:line="38" pos:column="43"/></operator> <literal type="number" pos:line="38" pos:column="44">1<pos:position pos:line="38" pos:column="45"/></literal></expr>;<pos:position pos:line="38" pos:column="46"/></expr_stmt>
            <return pos:line="39" pos:column="13">return <expr><literal type="number" pos:line="39" pos:column="20">1<pos:position pos:line="39" pos:column="21"/></literal></expr>;<pos:position pos:line="39" pos:column="22"/></return>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name><name pos:line="41" pos:column="13">arg<pos:position pos:line="41" pos:column="16"/></name><index pos:line="41" pos:column="16">[<expr><literal type="number" pos:line="41" pos:column="17">0<pos:position pos:line="41" pos:column="18"/></literal></expr>]<pos:position pos:line="41" pos:column="19"/></index></name> <operator pos:line="41" pos:column="20">==<pos:position pos:line="41" pos:column="22"/></operator> <literal type="char" pos:line="41" pos:column="23">'L'<pos:position pos:line="41" pos:column="26"/></literal> <operator pos:line="41" pos:column="27">||<pos:position pos:line="41" pos:column="29"/></operator> <name><name pos:line="41" pos:column="30">arg<pos:position pos:line="41" pos:column="33"/></name><index pos:line="41" pos:column="33">[<expr><literal type="number" pos:line="41" pos:column="34">0<pos:position pos:line="41" pos:column="35"/></literal></expr>]<pos:position pos:line="41" pos:column="36"/></index></name> <operator pos:line="41" pos:column="37">==<pos:position pos:line="41" pos:column="39"/></operator> <literal type="char" pos:line="41" pos:column="40">'l'<pos:position pos:line="41" pos:column="43"/></literal></expr>)<pos:position pos:line="41" pos:column="44"/></condition><then pos:line="41" pos:column="44"> <block pos:line="41" pos:column="45">{
            <comment type="block" pos:line="42" pos:column="13">/* Hack... */</comment>
            <expr_stmt><expr><name pos:line="43" pos:column="13">arg<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">--<pos:position pos:line="43" pos:column="18"/></operator></expr>;<pos:position pos:line="43" pos:column="19"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">push_count_chars<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name><name pos:line="44" pos:column="30">cmd_data<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">-&gt;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="40">shared_opts<pos:position pos:line="44" pos:column="51"/></name><operator pos:line="44" pos:column="51">.<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="52">dependencies<pos:position pos:line="44" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="66">arg<pos:position pos:line="44" pos:column="69"/></name></expr></argument>)<pos:position pos:line="44" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="71"/></expr_stmt>
            <return pos:line="45" pos:column="13">return <expr><literal type="number" pos:line="45" pos:column="20">1<pos:position pos:line="45" pos:column="21"/></literal></expr>;<pos:position pos:line="45" pos:column="22"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then> <elseif pos:line="46" pos:column="11">else <if pos:line="46" pos:column="16">if <condition pos:line="46" pos:column="19">(<expr><name><name pos:line="46" pos:column="20">arg<pos:position pos:line="46" pos:column="23"/></name><index pos:line="46" pos:column="23">[<expr><literal type="number" pos:line="46" pos:column="24">0<pos:position pos:line="46" pos:column="25"/></literal></expr>]<pos:position pos:line="46" pos:column="26"/></index></name> <operator pos:line="46" pos:column="27">==<pos:position pos:line="46" pos:column="29"/></operator> <literal type="char" pos:line="46" pos:column="30">'R'<pos:position pos:line="46" pos:column="33"/></literal> <operator pos:line="46" pos:column="34">&amp;&amp;<pos:position pos:line="46" pos:column="44"/></operator> <name><name pos:line="46" pos:column="37">arg<pos:position pos:line="46" pos:column="40"/></name><index pos:line="46" pos:column="40">[<expr><literal type="number" pos:line="46" pos:column="41">1<pos:position pos:line="46" pos:column="42"/></literal></expr>]<pos:position pos:line="46" pos:column="43"/></index></name></expr>)<pos:position pos:line="46" pos:column="44"/></condition><then pos:line="46" pos:column="44"> <block pos:line="46" pos:column="45">{
            <comment type="block" pos:line="47" pos:column="13">/* -Rdir Add dir to runtime library search path. */</comment>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">add_runtimedirlib<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><operator pos:line="48" pos:column="31">&amp;<pos:position pos:line="48" pos:column="36"/></operator><name><name pos:line="48" pos:column="32">arg<pos:position pos:line="48" pos:column="35"/></name><index pos:line="48" pos:column="35">[<expr><literal type="number" pos:line="48" pos:column="36">1<pos:position pos:line="48" pos:column="37"/></literal></expr>]<pos:position pos:line="48" pos:column="38"/></index></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="40">cmd_data<pos:position pos:line="48" pos:column="48"/></name></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="50"/></expr_stmt>
            <return pos:line="49" pos:column="13">return <expr><literal type="number" pos:line="49" pos:column="20">1<pos:position pos:line="49" pos:column="21"/></literal></expr>;<pos:position pos:line="49" pos:column="22"/></return>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
    <return pos:line="52" pos:column="5">return <expr><literal type="number" pos:line="52" pos:column="12">0<pos:position pos:line="52" pos:column="13"/></literal></expr>;<pos:position pos:line="52" pos:column="14"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

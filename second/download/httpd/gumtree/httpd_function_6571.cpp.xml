<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6571.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">read_and_chunk<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">ap_filter_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">f<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">h2_task<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">task<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">apr_read_type_e<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">block<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list> <block pos:line="2" pos:column="59">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">request_rec<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">r<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name><name pos:line="3" pos:column="22">f<pos:position pos:line="3" pos:column="23"/></name><operator pos:line="3" pos:column="23">-&gt;<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="25">r<pos:position pos:line="3" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">status<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">APR_SUCCESS<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_bucket_brigade<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">bb<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name><name pos:line="5" pos:column="30">task<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">-&gt;<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="36">input<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">.<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">bbchunk<pos:position pos:line="5" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>
    
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">bb<pos:position pos:line="7" pos:column="12"/></name></expr>)<pos:position pos:line="7" pos:column="13"/></condition><then pos:line="7" pos:column="13"> <block pos:line="7" pos:column="14">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">bb<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">apr_brigade_create<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name><name pos:line="8" pos:column="33">r<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">pool<pos:position pos:line="8" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="42">f<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">c<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">-&gt;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="48">bucket_alloc<pos:position pos:line="8" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">task<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">input<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">.<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">bbchunk<pos:position pos:line="9" pos:column="28"/></name></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="31">bb<pos:position pos:line="9" pos:column="33"/></name></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">APR_BRIGADE_EMPTY<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">bb<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31"> <block pos:line="12" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">apr_bucket<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">b<pos:position pos:line="13" pos:column="22"/></name></decl>, <modifier pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="25">next<pos:position pos:line="13" pos:column="29"/></name></decl>, <modifier pos:line="13" pos:column="31">*<pos:position pos:line="13" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="32">first_data<pos:position pos:line="13" pos:column="42"/></name> <init pos:line="13" pos:column="43">= <expr><name pos:line="13" pos:column="45">NULL<pos:position pos:line="13" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="50"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">apr_bucket_brigade<pos:position pos:line="14" pos:column="27"/></name> <modifier pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></modifier></type><name pos:line="14" pos:column="29">tmp<pos:position pos:line="14" pos:column="32"/></name></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">apr_off_t<pos:position pos:line="15" pos:column="18"/></name></type> <name pos:line="15" pos:column="19">bblen<pos:position pos:line="15" pos:column="24"/></name> <init pos:line="15" pos:column="25">= <expr><literal type="number" pos:line="15" pos:column="27">0<pos:position pos:line="15" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="29"/></decl_stmt>

        <comment type="block" pos:line="17" pos:column="9">/* get more data from the lower layer filters. Always do this
         * in larger pieces, since we handle the read modes ourself. */</comment>
        <expr_stmt><expr><name pos:line="19" pos:column="9">status<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">ap_get_brigade<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name><name pos:line="19" pos:column="33">f<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">next<pos:position pos:line="19" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">bb<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, 
                                <argument><expr><name pos:line="20" pos:column="33">AP_MODE_READBYTES<pos:position pos:line="20" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="52">block<pos:position pos:line="20" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="59">32<pos:position pos:line="20" pos:column="61"/></literal><operator pos:line="20" pos:column="61">*<pos:position pos:line="20" pos:column="62"/></operator><literal type="number" pos:line="20" pos:column="62">1024<pos:position pos:line="20" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="68"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">status<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">==<pos:position pos:line="21" pos:column="22"/></operator> <name pos:line="21" pos:column="23">APR_EOF<pos:position pos:line="21" pos:column="30"/></name></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31"> <block pos:line="21" pos:column="32">{
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><operator pos:line="22" pos:column="17">!<pos:position pos:line="22" pos:column="18"/></operator><name><name pos:line="22" pos:column="18">task<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">input<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">.<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">eos<pos:position pos:line="22" pos:column="33"/></name></name></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34"> <block pos:line="22" pos:column="35">{
                <expr_stmt><expr><name pos:line="23" pos:column="17">status<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <call><name pos:line="23" pos:column="26">apr_brigade_puts<pos:position pos:line="23" pos:column="42"/></name><argument_list pos:line="23" pos:column="42">(<argument><expr><name pos:line="23" pos:column="43">bb<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">NULL<pos:position pos:line="23" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="53">NULL<pos:position pos:line="23" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="59">"0\r\n\r\n"<pos:position pos:line="23" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="72"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="24" pos:column="17">task<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">input<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">.<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="29">eos<pos:position pos:line="24" pos:column="32"/></name></name> <operator pos:line="24" pos:column="33">=<pos:position pos:line="24" pos:column="34"/></operator> <literal type="number" pos:line="24" pos:column="35">1<pos:position pos:line="24" pos:column="36"/></literal></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
                <return pos:line="25" pos:column="17">return <expr><name pos:line="25" pos:column="24">APR_SUCCESS<pos:position pos:line="25" pos:column="35"/></name></expr>;<pos:position pos:line="25" pos:column="36"/></return>
            }<pos:position pos:line="26" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">ap_remove_input_filter<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name pos:line="27" pos:column="36">f<pos:position pos:line="27" pos:column="37"/></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
            <return pos:line="28" pos:column="13">return <expr><name pos:line="28" pos:column="20">status<pos:position pos:line="28" pos:column="26"/></name></expr>;<pos:position pos:line="28" pos:column="27"/></return>
            
        }<pos:position pos:line="30" pos:column="10"/></block></then>
        <elseif pos:line="31" pos:column="9">else <if pos:line="31" pos:column="14">if <condition pos:line="31" pos:column="17">(<expr><name pos:line="31" pos:column="18">status<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">!=<pos:position pos:line="31" pos:column="27"/></operator> <name pos:line="31" pos:column="28">APR_SUCCESS<pos:position pos:line="31" pos:column="39"/></name></expr>)<pos:position pos:line="31" pos:column="40"/></condition><then pos:line="31" pos:column="40"> <block pos:line="31" pos:column="41">{
            <return pos:line="32" pos:column="13">return <expr><name pos:line="32" pos:column="20">status<pos:position pos:line="32" pos:column="26"/></name></expr>;<pos:position pos:line="32" pos:column="27"/></return>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if></elseif></if>

        <for pos:line="35" pos:column="9">for <control pos:line="35" pos:column="13">(<init><expr><name pos:line="35" pos:column="14">b<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <call><name pos:line="35" pos:column="18">APR_BRIGADE_FIRST<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name pos:line="35" pos:column="36">bb<pos:position pos:line="35" pos:column="38"/></name></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="40"/></init> 
             <condition><expr><name pos:line="36" pos:column="14">b<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">!=<pos:position pos:line="36" pos:column="18"/></operator> <call><name pos:line="36" pos:column="19">APR_BRIGADE_SENTINEL<pos:position pos:line="36" pos:column="39"/></name><argument_list pos:line="36" pos:column="39">(<argument><expr><name pos:line="36" pos:column="40">bb<pos:position pos:line="36" pos:column="42"/></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call> <operator pos:line="36" pos:column="44">&amp;&amp;<pos:position pos:line="36" pos:column="54"/></operator> <operator pos:line="36" pos:column="47">!<pos:position pos:line="36" pos:column="48"/></operator><name><name pos:line="36" pos:column="48">task<pos:position pos:line="36" pos:column="52"/></name><operator pos:line="36" pos:column="52">-&gt;<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="54">input<pos:position pos:line="36" pos:column="59"/></name><operator pos:line="36" pos:column="59">.<pos:position pos:line="36" pos:column="60"/></operator><name pos:line="36" pos:column="60">eos<pos:position pos:line="36" pos:column="63"/></name></name></expr>;<pos:position pos:line="36" pos:column="64"/></condition> 
             <incr><expr><name pos:line="37" pos:column="14">b<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <name pos:line="37" pos:column="18">next<pos:position pos:line="37" pos:column="22"/></name></expr></incr>)<pos:position pos:line="37" pos:column="23"/></control> <block pos:line="37" pos:column="24">{
            <expr_stmt><expr><name pos:line="38" pos:column="13">next<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <call><name pos:line="38" pos:column="20">APR_BUCKET_NEXT<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><name pos:line="38" pos:column="36">b<pos:position pos:line="38" pos:column="37"/></name></expr></argument>)<pos:position pos:line="38" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="39"/></expr_stmt>
            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><call><name pos:line="39" pos:column="17">APR_BUCKET_IS_METADATA<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><name pos:line="39" pos:column="40">b<pos:position pos:line="39" pos:column="41"/></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="43"/></condition><then pos:line="39" pos:column="43"> <block pos:line="39" pos:column="44">{
                <if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">first_data<pos:position pos:line="40" pos:column="31"/></name></expr>)<pos:position pos:line="40" pos:column="32"/></condition><then pos:line="40" pos:column="32"> <block pos:line="40" pos:column="33">{
                    <expr_stmt><expr><call><name pos:line="41" pos:column="21">make_chunk<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">task<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="38">bb<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="42">first_data<pos:position pos:line="41" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="54">bblen<pos:position pos:line="41" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="61">b<pos:position pos:line="41" pos:column="62"/></name></expr></argument>)<pos:position pos:line="41" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="64"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="42" pos:column="21">first_data<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">=<pos:position pos:line="42" pos:column="33"/></operator> <name pos:line="42" pos:column="34">NULL<pos:position pos:line="42" pos:column="38"/></name></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
                }<pos:position pos:line="43" pos:column="18"/></block></then></if>
                
                <if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><call><name pos:line="45" pos:column="21">H2_BUCKET_IS_HEADERS<pos:position pos:line="45" pos:column="41"/></name><argument_list pos:line="45" pos:column="41">(<argument><expr><name pos:line="45" pos:column="42">b<pos:position pos:line="45" pos:column="43"/></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="45"/></condition><then pos:line="45" pos:column="45"> <block pos:line="45" pos:column="46">{
                    <decl_stmt><decl><type><name pos:line="46" pos:column="21">h2_headers<pos:position pos:line="46" pos:column="31"/></name> <modifier pos:line="46" pos:column="32">*<pos:position pos:line="46" pos:column="33"/></modifier></type><name pos:line="46" pos:column="33">headers<pos:position pos:line="46" pos:column="40"/></name> <init pos:line="46" pos:column="41">= <expr><call><name pos:line="46" pos:column="43">h2_bucket_headers_get<pos:position pos:line="46" pos:column="64"/></name><argument_list pos:line="46" pos:column="64">(<argument><expr><name pos:line="46" pos:column="65">b<pos:position pos:line="46" pos:column="66"/></name></expr></argument>)<pos:position pos:line="46" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="68"/></decl_stmt>
                    
                    <expr_stmt><expr><call><name pos:line="48" pos:column="21">ap_assert<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><name pos:line="48" pos:column="31">headers<pos:position pos:line="48" pos:column="38"/></name></expr></argument>)<pos:position pos:line="48" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="49" pos:column="21">ap_log_rerror<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><name pos:line="49" pos:column="35">APLOG_MARK<pos:position pos:line="49" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="47">APLOG_TRACE2<pos:position pos:line="49" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="61">0<pos:position pos:line="49" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="64">r<pos:position pos:line="49" pos:column="65"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="50" pos:column="35">"h2_task(%s): receiving trailers"<pos:position pos:line="50" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="70">task<pos:position pos:line="50" pos:column="74"/></name><operator pos:line="50" pos:column="74">-&gt;<pos:position pos:line="50" pos:column="79"/></operator><name pos:line="50" pos:column="76">id<pos:position pos:line="50" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="80"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="51" pos:column="21">tmp<pos:position pos:line="51" pos:column="24"/></name> <operator pos:line="51" pos:column="25">=<pos:position pos:line="51" pos:column="26"/></operator> <call><name pos:line="51" pos:column="27">apr_brigade_split_ex<pos:position pos:line="51" pos:column="47"/></name><argument_list pos:line="51" pos:column="47">(<argument><expr><name pos:line="51" pos:column="48">bb<pos:position pos:line="51" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="52">b<pos:position pos:line="51" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="55">NULL<pos:position pos:line="51" pos:column="59"/></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="61"/></expr_stmt>
                    <if pos:line="52" pos:column="21">if <condition pos:line="52" pos:column="24">(<expr><operator pos:line="52" pos:column="25">!<pos:position pos:line="52" pos:column="26"/></operator><call><name pos:line="52" pos:column="26">apr_is_empty_table<pos:position pos:line="52" pos:column="44"/></name><argument_list pos:line="52" pos:column="44">(<argument><expr><name><name pos:line="52" pos:column="45">headers<pos:position pos:line="52" pos:column="52"/></name><operator pos:line="52" pos:column="52">-&gt;<pos:position pos:line="52" pos:column="57"/></operator><name pos:line="52" pos:column="54">headers<pos:position pos:line="52" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="63"/></condition><then pos:line="52" pos:column="63"> <block pos:line="52" pos:column="64">{
                        <expr_stmt><expr><name pos:line="53" pos:column="25">status<pos:position pos:line="53" pos:column="31"/></name> <operator pos:line="53" pos:column="32">=<pos:position pos:line="53" pos:column="33"/></operator> <call><name pos:line="53" pos:column="34">apr_brigade_puts<pos:position pos:line="53" pos:column="50"/></name><argument_list pos:line="53" pos:column="50">(<argument><expr><name pos:line="53" pos:column="51">bb<pos:position pos:line="53" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="55">NULL<pos:position pos:line="53" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="61">NULL<pos:position pos:line="53" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="67">"0\r\n"<pos:position pos:line="53" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="76"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="54" pos:column="25">apr_table_do<pos:position pos:line="54" pos:column="37"/></name><argument_list pos:line="54" pos:column="37">(<argument><expr><name pos:line="54" pos:column="38">ser_header<pos:position pos:line="54" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="50">bb<pos:position pos:line="54" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="54">headers<pos:position pos:line="54" pos:column="61"/></name><operator pos:line="54" pos:column="61">-&gt;<pos:position pos:line="54" pos:column="66"/></operator><name pos:line="54" pos:column="63">headers<pos:position pos:line="54" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="72">NULL<pos:position pos:line="54" pos:column="76"/></name></expr></argument>)<pos:position pos:line="54" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="78"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="55" pos:column="25">status<pos:position pos:line="55" pos:column="31"/></name> <operator pos:line="55" pos:column="32">=<pos:position pos:line="55" pos:column="33"/></operator> <call><name pos:line="55" pos:column="34">apr_brigade_puts<pos:position pos:line="55" pos:column="50"/></name><argument_list pos:line="55" pos:column="50">(<argument><expr><name pos:line="55" pos:column="51">bb<pos:position pos:line="55" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="55">NULL<pos:position pos:line="55" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="61">NULL<pos:position pos:line="55" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="67">"\r\n"<pos:position pos:line="55" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="75"/></expr_stmt>
                    }<pos:position pos:line="56" pos:column="22"/></block></then>
                    <else pos:line="57" pos:column="21">else <block pos:line="57" pos:column="26">{
                        <expr_stmt><expr><name pos:line="58" pos:column="25">status<pos:position pos:line="58" pos:column="31"/></name> <operator pos:line="58" pos:column="32">=<pos:position pos:line="58" pos:column="33"/></operator> <call><name pos:line="58" pos:column="34">apr_brigade_puts<pos:position pos:line="58" pos:column="50"/></name><argument_list pos:line="58" pos:column="50">(<argument><expr><name pos:line="58" pos:column="51">bb<pos:position pos:line="58" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="55">NULL<pos:position pos:line="58" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="61">NULL<pos:position pos:line="58" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="67">"0\r\n\r\n"<pos:position pos:line="58" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="80"/></expr_stmt>
                    }<pos:position pos:line="59" pos:column="22"/></block></else></if>
                    <expr_stmt><expr><name><name pos:line="60" pos:column="21">r<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">-&gt;<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="24">trailers_in<pos:position pos:line="60" pos:column="35"/></name></name> <operator pos:line="60" pos:column="36">=<pos:position pos:line="60" pos:column="37"/></operator> <call><name pos:line="60" pos:column="38">apr_table_clone<pos:position pos:line="60" pos:column="53"/></name><argument_list pos:line="60" pos:column="53">(<argument><expr><name><name pos:line="60" pos:column="54">r<pos:position pos:line="60" pos:column="55"/></name><operator pos:line="60" pos:column="55">-&gt;<pos:position pos:line="60" pos:column="60"/></operator><name pos:line="60" pos:column="57">pool<pos:position pos:line="60" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="63">headers<pos:position pos:line="60" pos:column="70"/></name><operator pos:line="60" pos:column="70">-&gt;<pos:position pos:line="60" pos:column="75"/></operator><name pos:line="60" pos:column="72">headers<pos:position pos:line="60" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="81"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="61" pos:column="21">APR_BUCKET_REMOVE<pos:position pos:line="61" pos:column="38"/></name><argument_list pos:line="61" pos:column="38">(<argument><expr><name pos:line="61" pos:column="39">b<pos:position pos:line="61" pos:column="40"/></name></expr></argument>)<pos:position pos:line="61" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="42"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="62" pos:column="21">apr_bucket_destroy<pos:position pos:line="62" pos:column="39"/></name><argument_list pos:line="62" pos:column="39">(<argument><expr><name pos:line="62" pos:column="40">b<pos:position pos:line="62" pos:column="41"/></name></expr></argument>)<pos:position pos:line="62" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="43"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="63" pos:column="21">APR_BRIGADE_CONCAT<pos:position pos:line="63" pos:column="39"/></name><argument_list pos:line="63" pos:column="39">(<argument><expr><name pos:line="63" pos:column="40">bb<pos:position pos:line="63" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="44">tmp<pos:position pos:line="63" pos:column="47"/></name></expr></argument>)<pos:position pos:line="63" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="49"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="64" pos:column="21">apr_brigade_destroy<pos:position pos:line="64" pos:column="40"/></name><argument_list pos:line="64" pos:column="40">(<argument><expr><name pos:line="64" pos:column="41">tmp<pos:position pos:line="64" pos:column="44"/></name></expr></argument>)<pos:position pos:line="64" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="65" pos:column="21">task<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">-&gt;<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="27">input<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">.<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="33">eos<pos:position pos:line="65" pos:column="36"/></name></name> <operator pos:line="65" pos:column="37">=<pos:position pos:line="65" pos:column="38"/></operator> <literal type="number" pos:line="65" pos:column="39">1<pos:position pos:line="65" pos:column="40"/></literal></expr>;<pos:position pos:line="65" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="66" pos:column="18"/></block></then>
                <elseif pos:line="67" pos:column="17">else <if pos:line="67" pos:column="22">if <condition pos:line="67" pos:column="25">(<expr><call><name pos:line="67" pos:column="26">APR_BUCKET_IS_EOS<pos:position pos:line="67" pos:column="43"/></name><argument_list pos:line="67" pos:column="43">(<argument><expr><name pos:line="67" pos:column="44">b<pos:position pos:line="67" pos:column="45"/></name></expr></argument>)<pos:position pos:line="67" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="47"/></condition><then pos:line="67" pos:column="47"> <block pos:line="67" pos:column="48">{
                    <expr_stmt><expr><name pos:line="68" pos:column="21">tmp<pos:position pos:line="68" pos:column="24"/></name> <operator pos:line="68" pos:column="25">=<pos:position pos:line="68" pos:column="26"/></operator> <call><name pos:line="68" pos:column="27">apr_brigade_split_ex<pos:position pos:line="68" pos:column="47"/></name><argument_list pos:line="68" pos:column="47">(<argument><expr><name pos:line="68" pos:column="48">bb<pos:position pos:line="68" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="52">b<pos:position pos:line="68" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="55">NULL<pos:position pos:line="68" pos:column="59"/></name></expr></argument>)<pos:position pos:line="68" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="61"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="69" pos:column="21">status<pos:position pos:line="69" pos:column="27"/></name> <operator pos:line="69" pos:column="28">=<pos:position pos:line="69" pos:column="29"/></operator> <call><name pos:line="69" pos:column="30">apr_brigade_puts<pos:position pos:line="69" pos:column="46"/></name><argument_list pos:line="69" pos:column="46">(<argument><expr><name pos:line="69" pos:column="47">bb<pos:position pos:line="69" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="51">NULL<pos:position pos:line="69" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="57">NULL<pos:position pos:line="69" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="63">"0\r\n\r\n"<pos:position pos:line="69" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="76"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="70" pos:column="21">APR_BRIGADE_CONCAT<pos:position pos:line="70" pos:column="39"/></name><argument_list pos:line="70" pos:column="39">(<argument><expr><name pos:line="70" pos:column="40">bb<pos:position pos:line="70" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="44">tmp<pos:position pos:line="70" pos:column="47"/></name></expr></argument>)<pos:position pos:line="70" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="49"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="71" pos:column="21">apr_brigade_destroy<pos:position pos:line="71" pos:column="40"/></name><argument_list pos:line="71" pos:column="40">(<argument><expr><name pos:line="71" pos:column="41">tmp<pos:position pos:line="71" pos:column="44"/></name></expr></argument>)<pos:position pos:line="71" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="72" pos:column="21">task<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">-&gt;<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="27">input<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">.<pos:position pos:line="72" pos:column="33"/></operator><name pos:line="72" pos:column="33">eos<pos:position pos:line="72" pos:column="36"/></name></name> <operator pos:line="72" pos:column="37">=<pos:position pos:line="72" pos:column="38"/></operator> <literal type="number" pos:line="72" pos:column="39">1<pos:position pos:line="72" pos:column="40"/></literal></expr>;<pos:position pos:line="72" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="73" pos:column="18"/></block></then></if></elseif></if>
            }<pos:position pos:line="74" pos:column="14"/></block></then>
            <elseif pos:line="75" pos:column="13">else <if pos:line="75" pos:column="18">if <condition pos:line="75" pos:column="21">(<expr><name><name pos:line="75" pos:column="22">b<pos:position pos:line="75" pos:column="23"/></name><operator pos:line="75" pos:column="23">-&gt;<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="25">length<pos:position pos:line="75" pos:column="31"/></name></name> <operator pos:line="75" pos:column="32">==<pos:position pos:line="75" pos:column="34"/></operator> <literal type="number" pos:line="75" pos:column="35">0<pos:position pos:line="75" pos:column="36"/></literal></expr>)<pos:position pos:line="75" pos:column="37"/></condition><then pos:line="75" pos:column="37"> <block pos:line="75" pos:column="38">{
                <expr_stmt><expr><call><name pos:line="76" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="76" pos:column="34"/></name><argument_list pos:line="76" pos:column="34">(<argument><expr><name pos:line="76" pos:column="35">b<pos:position pos:line="76" pos:column="36"/></name></expr></argument>)<pos:position pos:line="76" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="77" pos:column="17">apr_bucket_destroy<pos:position pos:line="77" pos:column="35"/></name><argument_list pos:line="77" pos:column="35">(<argument><expr><name pos:line="77" pos:column="36">b<pos:position pos:line="77" pos:column="37"/></name></expr></argument>)<pos:position pos:line="77" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="78" pos:column="14"/></block></then></if></elseif> 
            <else pos:line="79" pos:column="13">else <block pos:line="79" pos:column="18">{
                <if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><operator pos:line="80" pos:column="21">!<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="22">first_data<pos:position pos:line="80" pos:column="32"/></name></expr>)<pos:position pos:line="80" pos:column="33"/></condition><then pos:line="80" pos:column="33"> <block pos:line="80" pos:column="34">{
                    <expr_stmt><expr><name pos:line="81" pos:column="21">first_data<pos:position pos:line="81" pos:column="31"/></name> <operator pos:line="81" pos:column="32">=<pos:position pos:line="81" pos:column="33"/></operator> <name pos:line="81" pos:column="34">b<pos:position pos:line="81" pos:column="35"/></name></expr>;<pos:position pos:line="81" pos:column="36"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="82" pos:column="21">bblen<pos:position pos:line="82" pos:column="26"/></name> <operator pos:line="82" pos:column="27">=<pos:position pos:line="82" pos:column="28"/></operator> <literal type="number" pos:line="82" pos:column="29">0<pos:position pos:line="82" pos:column="30"/></literal></expr>;<pos:position pos:line="82" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="83" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="84" pos:column="17">bblen<pos:position pos:line="84" pos:column="22"/></name> <operator pos:line="84" pos:column="23">+=<pos:position pos:line="84" pos:column="25"/></operator> <name><name pos:line="84" pos:column="26">b<pos:position pos:line="84" pos:column="27"/></name><operator pos:line="84" pos:column="27">-&gt;<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="29">length<pos:position pos:line="84" pos:column="35"/></name></name></expr>;<pos:position pos:line="84" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="85" pos:column="14"/></block></else></if>    
        }<pos:position pos:line="86" pos:column="10"/></block></for>
        
        <if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><name pos:line="88" pos:column="13">first_data<pos:position pos:line="88" pos:column="23"/></name></expr>)<pos:position pos:line="88" pos:column="24"/></condition><then pos:line="88" pos:column="24"> <block pos:line="88" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">make_chunk<pos:position pos:line="89" pos:column="23"/></name><argument_list pos:line="89" pos:column="23">(<argument><expr><name pos:line="89" pos:column="24">task<pos:position pos:line="89" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="30">bb<pos:position pos:line="89" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="34">first_data<pos:position pos:line="89" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="46">bblen<pos:position pos:line="89" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="53">NULL<pos:position pos:line="89" pos:column="57"/></name></expr></argument>)<pos:position pos:line="89" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>            
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>
    <return pos:line="92" pos:column="5">return <expr><name pos:line="92" pos:column="12">status<pos:position pos:line="92" pos:column="18"/></name></expr>;<pos:position pos:line="92" pos:column="19"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

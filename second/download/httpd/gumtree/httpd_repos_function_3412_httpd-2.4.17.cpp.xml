<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3412_httpd-2.4.17.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">PSECURITY_ATTRIBUTES<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">GetNullACL<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">void<pos:position pos:line="1" pos:column="37"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">PSECURITY_DESCRIPTOR<pos:position pos:line="3" pos:column="25"/></name></type> <name pos:line="3" pos:column="26">pSD<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">PSECURITY_ATTRIBUTES<pos:position pos:line="4" pos:column="25"/></name></type> <name pos:line="4" pos:column="26">sa<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">sa<pos:position pos:line="6" pos:column="7"/></name>  <operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator> <operator pos:line="6" pos:column="11">(<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">PSECURITY_ATTRIBUTES<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">)<pos:position pos:line="6" pos:column="33"/></operator> <call><name pos:line="6" pos:column="34">LocalAlloc<pos:position pos:line="6" pos:column="44"/></name><argument_list pos:line="6" pos:column="44">(<argument><expr><name pos:line="6" pos:column="45">LPTR<pos:position pos:line="6" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="51">sizeof<argument_list pos:line="6" pos:column="57">(<argument><expr><name pos:line="6" pos:column="58">SECURITY_ATTRIBUTES<pos:position pos:line="6" pos:column="77"/></name></expr></argument>)<pos:position pos:line="6" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">sa<pos:position pos:line="7" pos:column="7"/></name><operator pos:line="7" pos:column="7">-&gt;<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="9">nLength<pos:position pos:line="7" pos:column="16"/></name></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <sizeof pos:line="7" pos:column="19">sizeof<argument_list pos:line="7" pos:column="25">(<argument><expr><name pos:line="7" pos:column="26">SECURITY_ATTRIBUTES<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></sizeof></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">pSD<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <operator pos:line="9" pos:column="11">(<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">PSECURITY_DESCRIPTOR<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">)<pos:position pos:line="9" pos:column="33"/></operator> <call><name pos:line="9" pos:column="34">LocalAlloc<pos:position pos:line="9" pos:column="44"/></name><argument_list pos:line="9" pos:column="44">(<argument><expr><name pos:line="9" pos:column="45">LPTR<pos:position pos:line="9" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="51">SECURITY_DESCRIPTOR_MIN_LENGTH<pos:position pos:line="9" pos:column="81"/></name></expr></argument>)<pos:position pos:line="9" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="83"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">sa<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">lpSecurityDescriptor<pos:position pos:line="10" pos:column="29"/></name></name> <operator pos:line="10" pos:column="30">=<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="32">pSD<pos:position pos:line="10" pos:column="35"/></name></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">pSD<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">==<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">NULL<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">||<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">sa<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">==<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">NULL<pos:position pos:line="12" pos:column="34"/></name></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35"> <block pos:line="12" pos:column="36">{
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">apr_set_os_error<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><call><name pos:line="16" pos:column="10">InitializeSecurityDescriptor<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">pSD<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">SECURITY_DESCRIPTOR_REVISION<pos:position pos:line="16" pos:column="72"/></name></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call>
        <operator pos:line="17" pos:column="9">||<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">apr_get_os_error<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">()<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31"> <block pos:line="17" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">LocalFree<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">( <argument><expr><name pos:line="18" pos:column="20">pSD<pos:position pos:line="18" pos:column="23"/></name></expr></argument> )<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">LocalFree<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">( <argument><expr><name pos:line="19" pos:column="20">sa<pos:position pos:line="19" pos:column="22"/></name></expr></argument> )<pos:position pos:line="19" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">NULL<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><call><name pos:line="22" pos:column="10">SetSecurityDescriptorDacl<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name pos:line="22" pos:column="36">pSD<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">TRUE<pos:position pos:line="22" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="47">(<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="48">PACL<pos:position pos:line="22" pos:column="52"/></name><operator pos:line="22" pos:column="52">)<pos:position pos:line="22" pos:column="53"/></operator> <name pos:line="22" pos:column="54">NULL<pos:position pos:line="22" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="60">FALSE<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call>
        <operator pos:line="23" pos:column="9">||<pos:position pos:line="23" pos:column="11"/></operator> <call><name pos:line="23" pos:column="12">apr_get_os_error<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">()<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31"> <block pos:line="23" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">LocalFree<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">( <argument><expr><name pos:line="24" pos:column="20">pSD<pos:position pos:line="24" pos:column="23"/></name></expr></argument> )<pos:position pos:line="24" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">LocalFree<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">( <argument><expr><name pos:line="25" pos:column="20">sa<pos:position pos:line="25" pos:column="22"/></name></expr></argument> )<pos:position pos:line="25" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">NULL<pos:position pos:line="26" pos:column="20"/></name></expr>;<pos:position pos:line="26" pos:column="21"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="29" pos:column="5">sa<pos:position pos:line="29" pos:column="7"/></name><operator pos:line="29" pos:column="7">-&gt;<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="9">bInheritHandle<pos:position pos:line="29" pos:column="23"/></name></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="26">FALSE<pos:position pos:line="29" pos:column="31"/></name></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">sa<pos:position pos:line="30" pos:column="14"/></name></expr>;<pos:position pos:line="30" pos:column="15"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

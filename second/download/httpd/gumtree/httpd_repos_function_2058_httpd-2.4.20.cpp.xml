<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2058_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">proxy_ftp_canon<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">request_rec<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">r<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">url<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">user<pos:position pos:line="3" pos:column="15"/></name></decl>, <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="18">password<pos:position pos:line="3" pos:column="26"/></name></decl>, <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="29">host<pos:position pos:line="3" pos:column="33"/></name></decl>, <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="36">path<pos:position pos:line="3" pos:column="40"/></name></decl>, <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="43">parms<pos:position pos:line="3" pos:column="48"/></name></decl>, <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="51">strp<pos:position pos:line="3" pos:column="55"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="57">sport<pos:position pos:line="3" pos:column="62"/></name><index pos:line="3" pos:column="62">[<expr><literal type="number" pos:line="3" pos:column="63">7<pos:position pos:line="3" pos:column="64"/></literal></expr>]<pos:position pos:line="3" pos:column="65"/></index></name></decl>;<pos:position pos:line="3" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_pool_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">p<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name><name pos:line="4" pos:column="21">r<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">-&gt;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="24">pool<pos:position pos:line="4" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">err<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_port_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">port<pos:position pos:line="6" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="22">def_port<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">strncasecmp<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">url<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="26">"ftp:"<pos:position pos:line="9" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="34">4<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call> <operator pos:line="9" pos:column="37">==<pos:position pos:line="9" pos:column="39"/></operator> <literal type="number" pos:line="9" pos:column="40">0<pos:position pos:line="9" pos:column="41"/></literal></expr>)<pos:position pos:line="9" pos:column="42"/></condition><then pos:line="9" pos:column="42"> <block pos:line="9" pos:column="43">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">url<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">+=<pos:position pos:line="10" pos:column="15"/></operator> <literal type="number" pos:line="10" pos:column="16">4<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then>
    <else pos:line="12" pos:column="5">else <block pos:line="12" pos:column="10">{
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">DECLINED<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="15" pos:column="5">def_port<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">apr_uri_port_of_scheme<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><literal type="string" pos:line="15" pos:column="39">"ftp"<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ap_log_rerror<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">APLOG_MARK<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="31">APLOG_TRACE1<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="45">0<pos:position pos:line="17" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">r<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="51">"canonicalising URL %s"<pos:position pos:line="17" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="76">url<pos:position pos:line="17" pos:column="79"/></name></expr></argument>)<pos:position pos:line="17" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="81"/></expr_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">port<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name pos:line="19" pos:column="12">def_port<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">err<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <call><name pos:line="20" pos:column="11">ap_proxy_canon_netloc<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">p<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="36">&amp;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="37">url<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="42">&amp;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="43">user<pos:position pos:line="20" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="49">&amp;<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="50">password<pos:position pos:line="20" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="60">&amp;<pos:position pos:line="20" pos:column="65"/></operator><name pos:line="20" pos:column="61">host<pos:position pos:line="20" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="67">&amp;<pos:position pos:line="20" pos:column="72"/></operator><name pos:line="20" pos:column="68">port<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="74"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">err<pos:position pos:line="21" pos:column="12"/></name></expr>)<pos:position pos:line="21" pos:column="13"/></condition><then pos:line="21" pos:column="13">
        <block type="pseudo"><return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="22" pos:column="32"/></name></expr>;<pos:position pos:line="22" pos:column="33"/></return></block></then></if>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">user<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">!=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">&amp;&amp;<pos:position pos:line="23" pos:column="32"/></operator> <operator pos:line="23" pos:column="25">!<pos:position pos:line="23" pos:column="26"/></operator><call><name pos:line="23" pos:column="26">ftp_check_string<pos:position pos:line="23" pos:column="42"/></name><argument_list pos:line="23" pos:column="42">(<argument><expr><name pos:line="23" pos:column="43">user<pos:position pos:line="23" pos:column="47"/></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="49"/></condition><then pos:line="23" pos:column="49">
        <block type="pseudo"><return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="24" pos:column="32"/></name></expr>;<pos:position pos:line="24" pos:column="33"/></return></block></then></if>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">password<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">!=<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">NULL<pos:position pos:line="25" pos:column="25"/></name> <operator pos:line="25" pos:column="26">&amp;&amp;<pos:position pos:line="25" pos:column="36"/></operator> <operator pos:line="25" pos:column="29">!<pos:position pos:line="25" pos:column="30"/></operator><call><name pos:line="25" pos:column="30">ftp_check_string<pos:position pos:line="25" pos:column="46"/></name><argument_list pos:line="25" pos:column="46">(<argument><expr><name pos:line="25" pos:column="47">password<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="57"/></condition><then pos:line="25" pos:column="57">
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="26" pos:column="32"/></name></expr>;<pos:position pos:line="26" pos:column="33"/></return></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/* now parse path/parameters args, according to rfc1738 */</comment>
    <comment type="block" pos:line="29" pos:column="5">/*
     * N.B. if this isn't a true proxy request, then the URL path (but not
     * query args) has already been decoded. This gives rise to the problem
     * of a ; being decoded into the path.
     */</comment>
    <expr_stmt><expr><name pos:line="34" pos:column="5">strp<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <call><name pos:line="34" pos:column="12">strchr<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><name pos:line="34" pos:column="19">url<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="34" pos:column="24">';'<pos:position pos:line="34" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">strp<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">!=<pos:position pos:line="35" pos:column="16"/></operator> <name pos:line="35" pos:column="17">NULL<pos:position pos:line="35" pos:column="21"/></name></expr>)<pos:position pos:line="35" pos:column="22"/></condition><then pos:line="35" pos:column="22"> <block pos:line="35" pos:column="23">{
        <expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><operator pos:line="36" pos:column="10">(<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">strp<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">++<pos:position pos:line="36" pos:column="17"/></operator><operator pos:line="36" pos:column="17">)<pos:position pos:line="36" pos:column="18"/></operator> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <literal type="char" pos:line="36" pos:column="21">'\0'<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">parms<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <call><name pos:line="37" pos:column="17">ap_proxy_canonenc<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">p<pos:position pos:line="37" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="38">strp<pos:position pos:line="37" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="44">strlen<pos:position pos:line="37" pos:column="50"/></name><argument_list pos:line="37" pos:column="50">(<argument><expr><name pos:line="37" pos:column="51">strp<pos:position pos:line="37" pos:column="55"/></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="37" pos:column="58">enc_parm<pos:position pos:line="37" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="68">0<pos:position pos:line="37" pos:column="69"/></literal></expr></argument>,
                                  <argument><expr><name><name pos:line="38" pos:column="35">r<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">proxyreq<pos:position pos:line="38" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">parms<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">==<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">NULL<pos:position pos:line="39" pos:column="26"/></name></expr>)<pos:position pos:line="39" pos:column="27"/></condition><then pos:line="39" pos:column="27">
            <block type="pseudo"><return pos:line="40" pos:column="13">return <expr><name pos:line="40" pos:column="20">HTTP_BAD_REQUEST<pos:position pos:line="40" pos:column="36"/></name></expr>;<pos:position pos:line="40" pos:column="37"/></return></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></then>
    <else pos:line="42" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="9">parms<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <literal type="string" pos:line="43" pos:column="17">""<pos:position pos:line="43" pos:column="19"/></literal></expr>;<pos:position pos:line="43" pos:column="20"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="45" pos:column="5">path<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">=<pos:position pos:line="45" pos:column="11"/></operator> <call><name pos:line="45" pos:column="12">ap_proxy_canonenc<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">p<pos:position pos:line="45" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="33">url<pos:position pos:line="45" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="38">strlen<pos:position pos:line="45" pos:column="44"/></name><argument_list pos:line="45" pos:column="44">(<argument><expr><name pos:line="45" pos:column="45">url<pos:position pos:line="45" pos:column="48"/></name></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="45" pos:column="51">enc_path<pos:position pos:line="45" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="61">0<pos:position pos:line="45" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="64">r<pos:position pos:line="45" pos:column="65"/></name><operator pos:line="45" pos:column="65">-&gt;<pos:position pos:line="45" pos:column="70"/></operator><name pos:line="45" pos:column="67">proxyreq<pos:position pos:line="45" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="77"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">path<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">==<pos:position pos:line="46" pos:column="16"/></operator> <name pos:line="46" pos:column="17">NULL<pos:position pos:line="46" pos:column="21"/></name></expr>)<pos:position pos:line="46" pos:column="22"/></condition><then pos:line="46" pos:column="22">
        <block type="pseudo"><return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="47" pos:column="32"/></name></expr>;<pos:position pos:line="47" pos:column="33"/></return></block></then></if>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><operator pos:line="48" pos:column="9">!<pos:position pos:line="48" pos:column="10"/></operator><call><name pos:line="48" pos:column="10">ftp_check_string<pos:position pos:line="48" pos:column="26"/></name><argument_list pos:line="48" pos:column="26">(<argument><expr><name pos:line="48" pos:column="27">path<pos:position pos:line="48" pos:column="31"/></name></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="33"/></condition><then pos:line="48" pos:column="33">
        <block type="pseudo"><return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="49" pos:column="32"/></name></expr>;<pos:position pos:line="49" pos:column="33"/></return></block></then></if>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name><name pos:line="51" pos:column="9">r<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">-&gt;<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="12">proxyreq<pos:position pos:line="51" pos:column="20"/></name></name> <operator pos:line="51" pos:column="21">&amp;&amp;<pos:position pos:line="51" pos:column="31"/></operator> <name><name pos:line="51" pos:column="24">r<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">-&gt;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="27">args<pos:position pos:line="51" pos:column="31"/></name></name> <operator pos:line="51" pos:column="32">!=<pos:position pos:line="51" pos:column="34"/></operator> <name pos:line="51" pos:column="35">NULL<pos:position pos:line="51" pos:column="39"/></name></expr>)<pos:position pos:line="51" pos:column="40"/></condition><then pos:line="51" pos:column="40"> <block pos:line="51" pos:column="41">{
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">strp<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">!=<pos:position pos:line="52" pos:column="20"/></operator> <name pos:line="52" pos:column="21">NULL<pos:position pos:line="52" pos:column="25"/></name></expr>)<pos:position pos:line="52" pos:column="26"/></condition><then pos:line="52" pos:column="26"> <block pos:line="52" pos:column="27">{
            <expr_stmt><expr><name pos:line="53" pos:column="13">strp<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <call><name pos:line="53" pos:column="20">ap_proxy_canonenc<pos:position pos:line="53" pos:column="37"/></name><argument_list pos:line="53" pos:column="37">(<argument><expr><name pos:line="53" pos:column="38">p<pos:position pos:line="53" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="41">r<pos:position pos:line="53" pos:column="42"/></name><operator pos:line="53" pos:column="42">-&gt;<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="44">args<pos:position pos:line="53" pos:column="48"/></name></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="50">strlen<pos:position pos:line="53" pos:column="56"/></name><argument_list pos:line="53" pos:column="56">(<argument><expr><name><name pos:line="53" pos:column="57">r<pos:position pos:line="53" pos:column="58"/></name><operator pos:line="53" pos:column="58">-&gt;<pos:position pos:line="53" pos:column="63"/></operator><name pos:line="53" pos:column="60">args<pos:position pos:line="53" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="53" pos:column="67">enc_parm<pos:position pos:line="53" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="77">1<pos:position pos:line="53" pos:column="78"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="80">r<pos:position pos:line="53" pos:column="81"/></name><operator pos:line="53" pos:column="81">-&gt;<pos:position pos:line="53" pos:column="86"/></operator><name pos:line="53" pos:column="83">proxyreq<pos:position pos:line="53" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="93"/></expr_stmt>
            <if pos:line="54" pos:column="13">if <condition pos:line="54" pos:column="16">(<expr><name pos:line="54" pos:column="17">strp<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">==<pos:position pos:line="54" pos:column="24"/></operator> <name pos:line="54" pos:column="25">NULL<pos:position pos:line="54" pos:column="29"/></name></expr>)<pos:position pos:line="54" pos:column="30"/></condition><then pos:line="54" pos:column="30">
                <block type="pseudo"><return pos:line="55" pos:column="17">return <expr><name pos:line="55" pos:column="24">HTTP_BAD_REQUEST<pos:position pos:line="55" pos:column="40"/></name></expr>;<pos:position pos:line="55" pos:column="41"/></return></block></then></if>
            <expr_stmt><expr><name pos:line="56" pos:column="13">parms<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <call><name pos:line="56" pos:column="21">apr_pstrcat<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><name pos:line="56" pos:column="33">p<pos:position pos:line="56" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="36">parms<pos:position pos:line="56" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="43">"?"<pos:position pos:line="56" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="48">strp<pos:position pos:line="56" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="54">NULL<pos:position pos:line="56" pos:column="58"/></name></expr></argument>)<pos:position pos:line="56" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="57" pos:column="10"/></block></then>
        <else pos:line="58" pos:column="9">else <block pos:line="58" pos:column="14">{
            <expr_stmt><expr><name pos:line="59" pos:column="13">strp<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">=<pos:position pos:line="59" pos:column="19"/></operator> <call><name pos:line="59" pos:column="20">ap_proxy_canonenc<pos:position pos:line="59" pos:column="37"/></name><argument_list pos:line="59" pos:column="37">(<argument><expr><name pos:line="59" pos:column="38">p<pos:position pos:line="59" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="41">r<pos:position pos:line="59" pos:column="42"/></name><operator pos:line="59" pos:column="42">-&gt;<pos:position pos:line="59" pos:column="47"/></operator><name pos:line="59" pos:column="44">args<pos:position pos:line="59" pos:column="48"/></name></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="50">strlen<pos:position pos:line="59" pos:column="56"/></name><argument_list pos:line="59" pos:column="56">(<argument><expr><name><name pos:line="59" pos:column="57">r<pos:position pos:line="59" pos:column="58"/></name><operator pos:line="59" pos:column="58">-&gt;<pos:position pos:line="59" pos:column="63"/></operator><name pos:line="59" pos:column="60">args<pos:position pos:line="59" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="59" pos:column="67">enc_fpath<pos:position pos:line="59" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="78">1<pos:position pos:line="59" pos:column="79"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="81">r<pos:position pos:line="59" pos:column="82"/></name><operator pos:line="59" pos:column="82">-&gt;<pos:position pos:line="59" pos:column="87"/></operator><name pos:line="59" pos:column="84">proxyreq<pos:position pos:line="59" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="94"/></expr_stmt>
            <if pos:line="60" pos:column="13">if <condition pos:line="60" pos:column="16">(<expr><name pos:line="60" pos:column="17">strp<pos:position pos:line="60" pos:column="21"/></name> <operator pos:line="60" pos:column="22">==<pos:position pos:line="60" pos:column="24"/></operator> <name pos:line="60" pos:column="25">NULL<pos:position pos:line="60" pos:column="29"/></name></expr>)<pos:position pos:line="60" pos:column="30"/></condition><then pos:line="60" pos:column="30">
                <block type="pseudo"><return pos:line="61" pos:column="17">return <expr><name pos:line="61" pos:column="24">HTTP_BAD_REQUEST<pos:position pos:line="61" pos:column="40"/></name></expr>;<pos:position pos:line="61" pos:column="41"/></return></block></then></if>
            <expr_stmt><expr><name pos:line="62" pos:column="13">path<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">=<pos:position pos:line="62" pos:column="19"/></operator> <call><name pos:line="62" pos:column="20">apr_pstrcat<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">p<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="35">path<pos:position pos:line="62" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="41">"?"<pos:position pos:line="62" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="46">strp<pos:position pos:line="62" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="52">NULL<pos:position pos:line="62" pos:column="56"/></name></expr></argument>)<pos:position pos:line="62" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name><name pos:line="64" pos:column="9">r<pos:position pos:line="64" pos:column="10"/></name><operator pos:line="64" pos:column="10">-&gt;<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="12">args<pos:position pos:line="64" pos:column="16"/></name></name> <operator pos:line="64" pos:column="17">=<pos:position pos:line="64" pos:column="18"/></operator> <name pos:line="64" pos:column="19">NULL<pos:position pos:line="64" pos:column="23"/></name></expr>;<pos:position pos:line="64" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>

<comment type="block" pos:line="67" pos:column="1">/* now, rebuild URL */</comment>

    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><name pos:line="69" pos:column="9">port<pos:position pos:line="69" pos:column="13"/></name> <operator pos:line="69" pos:column="14">!=<pos:position pos:line="69" pos:column="16"/></operator> <name pos:line="69" pos:column="17">def_port<pos:position pos:line="69" pos:column="25"/></name></expr>)<pos:position pos:line="69" pos:column="26"/></condition><then pos:line="69" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="9">apr_snprintf<pos:position pos:line="70" pos:column="21"/></name><argument_list pos:line="70" pos:column="21">(<argument><expr><name pos:line="70" pos:column="22">sport<pos:position pos:line="70" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="29">sizeof<argument_list pos:line="70" pos:column="35">(<argument><expr><name pos:line="70" pos:column="36">sport<pos:position pos:line="70" pos:column="41"/></name></expr></argument>)<pos:position pos:line="70" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="44">":%d"<pos:position pos:line="70" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="51">port<pos:position pos:line="70" pos:column="55"/></name></expr></argument>)<pos:position pos:line="70" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="57"/></expr_stmt></block></then>
    <else pos:line="71" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="72" pos:column="9">sport<pos:position pos:line="72" pos:column="14"/></name><index pos:line="72" pos:column="14">[<expr><literal type="number" pos:line="72" pos:column="15">0<pos:position pos:line="72" pos:column="16"/></literal></expr>]<pos:position pos:line="72" pos:column="17"/></index></name> <operator pos:line="72" pos:column="18">=<pos:position pos:line="72" pos:column="19"/></operator> <literal type="char" pos:line="72" pos:column="20">'\0'<pos:position pos:line="72" pos:column="24"/></literal></expr>;<pos:position pos:line="72" pos:column="25"/></expr_stmt></block></else></if>

    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><call><name pos:line="74" pos:column="9">ap_strchr_c<pos:position pos:line="74" pos:column="20"/></name><argument_list pos:line="74" pos:column="20">(<argument><expr><name pos:line="74" pos:column="21">host<pos:position pos:line="74" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="74" pos:column="27">':'<pos:position pos:line="74" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="32"/></condition><then pos:line="74" pos:column="32"> <block pos:line="74" pos:column="33">{ <comment type="block" pos:line="74" pos:column="35">/* if literal IPv6 address */</comment>
        <expr_stmt><expr><name pos:line="75" pos:column="9">host<pos:position pos:line="75" pos:column="13"/></name> <operator pos:line="75" pos:column="14">=<pos:position pos:line="75" pos:column="15"/></operator> <call><name pos:line="75" pos:column="16">apr_pstrcat<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><name pos:line="75" pos:column="28">p<pos:position pos:line="75" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="31">"["<pos:position pos:line="75" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="36">host<pos:position pos:line="75" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="42">"]"<pos:position pos:line="75" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="47">NULL<pos:position pos:line="75" pos:column="51"/></name></expr></argument>)<pos:position pos:line="75" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">r<pos:position pos:line="77" pos:column="6"/></name><operator pos:line="77" pos:column="6">-&gt;<pos:position pos:line="77" pos:column="11"/></operator><name pos:line="77" pos:column="8">filename<pos:position pos:line="77" pos:column="16"/></name></name> <operator pos:line="77" pos:column="17">=<pos:position pos:line="77" pos:column="18"/></operator> <call><name pos:line="77" pos:column="19">apr_pstrcat<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><name pos:line="77" pos:column="31">p<pos:position pos:line="77" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="34">"proxy:ftp://"<pos:position pos:line="77" pos:column="48"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="77" pos:column="50">(<pos:position pos:line="77" pos:column="51"/></operator><name pos:line="77" pos:column="51">user<pos:position pos:line="77" pos:column="55"/></name> <operator pos:line="77" pos:column="56">!=<pos:position pos:line="77" pos:column="58"/></operator> <name pos:line="77" pos:column="59">NULL<pos:position pos:line="77" pos:column="63"/></name><operator pos:line="77" pos:column="63">)<pos:position pos:line="77" pos:column="64"/></operator></expr> ?<pos:position pos:line="77" pos:column="66"/></condition><then pos:line="77" pos:column="66"> <expr><name pos:line="77" pos:column="67">user<pos:position pos:line="77" pos:column="71"/></name></expr> <pos:position pos:line="77" pos:column="72"/></then><else pos:line="77" pos:column="72">: <expr><literal type="string" pos:line="77" pos:column="74">""<pos:position pos:line="77" pos:column="76"/></literal></expr></else></ternary></expr></argument>,
                              <argument><expr><ternary><condition><expr><operator pos:line="78" pos:column="31">(<pos:position pos:line="78" pos:column="32"/></operator><name pos:line="78" pos:column="32">password<pos:position pos:line="78" pos:column="40"/></name> <operator pos:line="78" pos:column="41">!=<pos:position pos:line="78" pos:column="43"/></operator> <name pos:line="78" pos:column="44">NULL<pos:position pos:line="78" pos:column="48"/></name><operator pos:line="78" pos:column="48">)<pos:position pos:line="78" pos:column="49"/></operator></expr> ?<pos:position pos:line="78" pos:column="51"/></condition><then pos:line="78" pos:column="51"> <expr><literal type="string" pos:line="78" pos:column="52">":"<pos:position pos:line="78" pos:column="55"/></literal></expr> <pos:position pos:line="78" pos:column="56"/></then><else pos:line="78" pos:column="56">: <expr><literal type="string" pos:line="78" pos:column="58">""<pos:position pos:line="78" pos:column="60"/></literal></expr></else></ternary></expr></argument>,
                              <argument><expr><ternary><condition><expr><operator pos:line="79" pos:column="31">(<pos:position pos:line="79" pos:column="32"/></operator><name pos:line="79" pos:column="32">password<pos:position pos:line="79" pos:column="40"/></name> <operator pos:line="79" pos:column="41">!=<pos:position pos:line="79" pos:column="43"/></operator> <name pos:line="79" pos:column="44">NULL<pos:position pos:line="79" pos:column="48"/></name><operator pos:line="79" pos:column="48">)<pos:position pos:line="79" pos:column="49"/></operator></expr> ?<pos:position pos:line="79" pos:column="51"/></condition><then pos:line="79" pos:column="51"> <expr><name pos:line="79" pos:column="52">password<pos:position pos:line="79" pos:column="60"/></name></expr> <pos:position pos:line="79" pos:column="61"/></then><else pos:line="79" pos:column="61">: <expr><literal type="string" pos:line="79" pos:column="63">""<pos:position pos:line="79" pos:column="65"/></literal></expr></else></ternary></expr></argument>,
                          <argument><expr><ternary><condition><expr><operator pos:line="80" pos:column="27">(<pos:position pos:line="80" pos:column="28"/></operator><name pos:line="80" pos:column="28">user<pos:position pos:line="80" pos:column="32"/></name> <operator pos:line="80" pos:column="33">!=<pos:position pos:line="80" pos:column="35"/></operator> <name pos:line="80" pos:column="36">NULL<pos:position pos:line="80" pos:column="40"/></name><operator pos:line="80" pos:column="40">)<pos:position pos:line="80" pos:column="41"/></operator></expr> ?<pos:position pos:line="80" pos:column="43"/></condition><then pos:line="80" pos:column="43"> <expr><literal type="string" pos:line="80" pos:column="44">"@"<pos:position pos:line="80" pos:column="47"/></literal></expr> <pos:position pos:line="80" pos:column="48"/></then><else pos:line="80" pos:column="48">: <expr><literal type="string" pos:line="80" pos:column="50">""<pos:position pos:line="80" pos:column="52"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="80" pos:column="54">host<pos:position pos:line="80" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="60">sport<pos:position pos:line="80" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="67">"/"<pos:position pos:line="80" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="72">path<pos:position pos:line="80" pos:column="76"/></name></expr></argument>,
                              <argument><expr><ternary><condition><expr><operator pos:line="81" pos:column="31">(<pos:position pos:line="81" pos:column="32"/></operator><name><name pos:line="81" pos:column="32">parms<pos:position pos:line="81" pos:column="37"/></name><index pos:line="81" pos:column="37">[<expr><literal type="number" pos:line="81" pos:column="38">0<pos:position pos:line="81" pos:column="39"/></literal></expr>]<pos:position pos:line="81" pos:column="40"/></index></name> <operator pos:line="81" pos:column="41">!=<pos:position pos:line="81" pos:column="43"/></operator> <literal type="char" pos:line="81" pos:column="44">'\0'<pos:position pos:line="81" pos:column="48"/></literal><operator pos:line="81" pos:column="48">)<pos:position pos:line="81" pos:column="49"/></operator></expr> ?<pos:position pos:line="81" pos:column="51"/></condition><then pos:line="81" pos:column="51"> <expr><literal type="string" pos:line="81" pos:column="52">";"<pos:position pos:line="81" pos:column="55"/></literal></expr> <pos:position pos:line="81" pos:column="56"/></then><else pos:line="81" pos:column="56">: <expr><literal type="string" pos:line="81" pos:column="58">""<pos:position pos:line="81" pos:column="60"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="81" pos:column="62">parms<pos:position pos:line="81" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="69">NULL<pos:position pos:line="81" pos:column="73"/></name></expr></argument>)<pos:position pos:line="81" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="75"/></expr_stmt>

    <return pos:line="83" pos:column="5">return <expr><name pos:line="83" pos:column="12">OK<pos:position pos:line="83" pos:column="14"/></name></expr>;<pos:position pos:line="83" pos:column="15"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

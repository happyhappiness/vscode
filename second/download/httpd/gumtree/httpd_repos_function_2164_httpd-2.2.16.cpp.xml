<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2164_httpd-2.2.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">log_error_core<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">file<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">line<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">level<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">apr_status_t<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">status<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <name pos:line="2" pos:column="55">server_rec<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">s<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="3" pos:column="28">const<pos:position pos:line="3" pos:column="33"/></specifier> <name pos:line="3" pos:column="34">conn_rec<pos:position pos:line="3" pos:column="42"/></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier></type><name pos:line="3" pos:column="44">c<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="4" pos:column="28">const<pos:position pos:line="4" pos:column="33"/></specifier> <name pos:line="4" pos:column="34">request_rec<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier></type><name pos:line="4" pos:column="47">r<pos:position pos:line="4" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="50">apr_pool_t<pos:position pos:line="4" pos:column="60"/></name> <modifier pos:line="4" pos:column="61">*<pos:position pos:line="4" pos:column="62"/></modifier></type><name pos:line="4" pos:column="62">pool<pos:position pos:line="4" pos:column="66"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="5" pos:column="28">const<pos:position pos:line="5" pos:column="33"/></specifier> <name pos:line="5" pos:column="34">char<pos:position pos:line="5" pos:column="38"/></name> <modifier pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></modifier></type><name pos:line="5" pos:column="40">fmt<pos:position pos:line="5" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="45">va_list<pos:position pos:line="5" pos:column="52"/></name></type> <name pos:line="5" pos:column="53">args<pos:position pos:line="5" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="58"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">errstr<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><name pos:line="7" pos:column="17">MAX_STRING_LEN<pos:position pos:line="7" pos:column="31"/></name></expr>]<pos:position pos:line="7" pos:column="32"/></index></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef<pos:position pos:line="8" pos:column="8"/></cpp:directive> <name pos:line="8" pos:column="9">AP_UNSAFE_ERROR_LOG_UNESCAPED<pos:position pos:line="8" pos:column="38"/></name></cpp:ifndef>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">scratch<pos:position pos:line="9" pos:column="17"/></name><index pos:line="9" pos:column="17">[<expr><name pos:line="9" pos:column="18">MAX_STRING_LEN<pos:position pos:line="9" pos:column="32"/></name></expr>]<pos:position pos:line="9" pos:column="33"/></index></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_size_t<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">len<pos:position pos:line="11" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="21">errstrlen<pos:position pos:line="11" pos:column="30"/></name></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_file_t<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">logf<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><name pos:line="12" pos:column="24">NULL<pos:position pos:line="12" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">char<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">referer<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">level_and_mask<pos:position pos:line="14" pos:column="23"/></name> <init pos:line="14" pos:column="24">= <expr><name pos:line="14" pos:column="26">level<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">&amp;<pos:position pos:line="14" pos:column="37"/></operator> <name pos:line="14" pos:column="34">APLOG_LEVELMASK<pos:position pos:line="14" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="50"/></decl_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">r<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">&amp;&amp;<pos:position pos:line="16" pos:column="21"/></operator> <name><name pos:line="16" pos:column="14">r<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">connection<pos:position pos:line="16" pos:column="27"/></name></name></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28"> <block pos:line="16" pos:column="29">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">c<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <name><name pos:line="17" pos:column="13">r<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">connection<pos:position pos:line="17" pos:column="26"/></name></name></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">s<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">==<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">NULL<pos:position pos:line="20" pos:column="18"/></name></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19"> <block pos:line="20" pos:column="20">{
        <comment type="block" pos:line="21" pos:column="9">/*
         * If we are doing stderr logging (startup), don't log messages that are
         * above the default server log level unless it is a startup/shutdown
         * notice
         */</comment>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">level_and_mask<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">!=<pos:position pos:line="26" pos:column="31"/></operator> <name pos:line="26" pos:column="32">APLOG_NOTICE<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">)<pos:position pos:line="26" pos:column="45"/></operator>
            <operator pos:line="27" pos:column="13">&amp;&amp;<pos:position pos:line="27" pos:column="23"/></operator> <operator pos:line="27" pos:column="16">(<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">level_and_mask<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">&gt;<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="34">ap_default_loglevel<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">)<pos:position pos:line="27" pos:column="54"/></operator></expr>)<pos:position pos:line="27" pos:column="55"/></condition><then pos:line="27" pos:column="55"> <block pos:line="27" pos:column="56">{
            <return pos:line="28" pos:column="13">return;<pos:position pos:line="28" pos:column="20"/></return>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="31" pos:column="9">logf<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <name pos:line="31" pos:column="16">stderr_log<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if <condition pos:line="33" pos:column="13">(<expr><name><name pos:line="33" pos:column="14">s<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">error_log<pos:position pos:line="33" pos:column="26"/></name></name></expr>)<pos:position pos:line="33" pos:column="27"/></condition><then pos:line="33" pos:column="27"> <block pos:line="33" pos:column="28">{
        <comment type="block" pos:line="34" pos:column="9">/*
         * If we are doing normal logging, don't log messages that are
         * above the server log level unless it is a startup/shutdown notice
         */</comment>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">(<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">level_and_mask<pos:position pos:line="38" pos:column="28"/></name> <operator pos:line="38" pos:column="29">!=<pos:position pos:line="38" pos:column="31"/></operator> <name pos:line="38" pos:column="32">APLOG_NOTICE<pos:position pos:line="38" pos:column="44"/></name><operator pos:line="38" pos:column="44">)<pos:position pos:line="38" pos:column="45"/></operator>
            <operator pos:line="39" pos:column="13">&amp;&amp;<pos:position pos:line="39" pos:column="23"/></operator> <operator pos:line="39" pos:column="16">(<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">level_and_mask<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">&gt;<pos:position pos:line="39" pos:column="36"/></operator> <name><name pos:line="39" pos:column="34">s<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">-&gt;<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="37">loglevel<pos:position pos:line="39" pos:column="45"/></name></name><operator pos:line="39" pos:column="45">)<pos:position pos:line="39" pos:column="46"/></operator></expr>)<pos:position pos:line="39" pos:column="47"/></condition><then pos:line="39" pos:column="47"> <block pos:line="39" pos:column="48">{
            <return pos:line="40" pos:column="13">return;<pos:position pos:line="40" pos:column="20"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="43" pos:column="9">logf<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <name><name pos:line="43" pos:column="16">s<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">-&gt;<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="19">error_log<pos:position pos:line="43" pos:column="28"/></name></name></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if></elseif>
<cpp:ifdef pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">ifdef<pos:position pos:line="45" pos:column="7"/></cpp:directive> <name pos:line="45" pos:column="8">TPF<pos:position pos:line="45" pos:column="11"/></name></cpp:ifdef>
    <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><name pos:line="46" pos:column="14">tpf_child<pos:position pos:line="46" pos:column="23"/></name></expr>)<pos:position pos:line="46" pos:column="24"/></condition><then pos:line="46" pos:column="24"> <block pos:line="46" pos:column="25">{
        <comment type="block" pos:line="47" pos:column="9">/*
         * If we are doing normal logging, don't log messages that are
         * above the server log level unless it is a startup/shutdown notice
         */</comment>
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">(<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">level_and_mask<pos:position pos:line="51" pos:column="28"/></name> <operator pos:line="51" pos:column="29">!=<pos:position pos:line="51" pos:column="31"/></operator> <name pos:line="51" pos:column="32">APLOG_NOTICE<pos:position pos:line="51" pos:column="44"/></name><operator pos:line="51" pos:column="44">)<pos:position pos:line="51" pos:column="45"/></operator>
            <operator pos:line="52" pos:column="13">&amp;&amp;<pos:position pos:line="52" pos:column="23"/></operator> <operator pos:line="52" pos:column="16">(<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="17">level_and_mask<pos:position pos:line="52" pos:column="31"/></name> <operator pos:line="52" pos:column="32">&gt;<pos:position pos:line="52" pos:column="36"/></operator> <name><name pos:line="52" pos:column="34">s<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">-&gt;<pos:position pos:line="52" pos:column="40"/></operator><name pos:line="52" pos:column="37">loglevel<pos:position pos:line="52" pos:column="45"/></name></name><operator pos:line="52" pos:column="45">)<pos:position pos:line="52" pos:column="46"/></operator></expr>)<pos:position pos:line="52" pos:column="47"/></condition><then pos:line="52" pos:column="47"> <block pos:line="52" pos:column="48">{
            <return pos:line="53" pos:column="13">return;<pos:position pos:line="53" pos:column="20"/></return>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="56" pos:column="9">logf<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">=<pos:position pos:line="56" pos:column="15"/></operator> <name pos:line="56" pos:column="16">stderr<pos:position pos:line="56" pos:column="22"/></name></expr>;<pos:position pos:line="56" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if></elseif>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="58" pos:column="8">/* TPF */</comment>
    <else pos:line="59" pos:column="5">else <block pos:line="59" pos:column="10">{
        <comment type="block" pos:line="60" pos:column="9">/*
         * If we are doing syslog logging, don't log messages that are
         * above the server log level (including a startup/shutdown notice)
         */</comment>
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">level_and_mask<pos:position pos:line="64" pos:column="27"/></name> <operator pos:line="64" pos:column="28">&gt;<pos:position pos:line="64" pos:column="32"/></operator> <name><name pos:line="64" pos:column="30">s<pos:position pos:line="64" pos:column="31"/></name><operator pos:line="64" pos:column="31">-&gt;<pos:position pos:line="64" pos:column="36"/></operator><name pos:line="64" pos:column="33">loglevel<pos:position pos:line="64" pos:column="41"/></name></name></expr>)<pos:position pos:line="64" pos:column="42"/></condition><then pos:line="64" pos:column="42"> <block pos:line="64" pos:column="43">{
            <return pos:line="65" pos:column="13">return;<pos:position pos:line="65" pos:column="20"/></return>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>
    }<pos:position pos:line="67" pos:column="6"/></block></else></if>

    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><name pos:line="69" pos:column="9">logf<pos:position pos:line="69" pos:column="13"/></name> <operator pos:line="69" pos:column="14">&amp;&amp;<pos:position pos:line="69" pos:column="24"/></operator> <operator pos:line="69" pos:column="17">(<pos:position pos:line="69" pos:column="18"/></operator><operator pos:line="69" pos:column="18">(<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="19">level<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">&amp;<pos:position pos:line="69" pos:column="30"/></operator> <name pos:line="69" pos:column="27">APLOG_STARTUP<pos:position pos:line="69" pos:column="40"/></name><operator pos:line="69" pos:column="40">)<pos:position pos:line="69" pos:column="41"/></operator> <operator pos:line="69" pos:column="42">!=<pos:position pos:line="69" pos:column="44"/></operator> <name pos:line="69" pos:column="45">APLOG_STARTUP<pos:position pos:line="69" pos:column="58"/></name><operator pos:line="69" pos:column="58">)<pos:position pos:line="69" pos:column="59"/></operator></expr>)<pos:position pos:line="69" pos:column="60"/></condition><then pos:line="69" pos:column="60"> <block pos:line="69" pos:column="61">{
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">errstr<pos:position pos:line="70" pos:column="15"/></name><index pos:line="70" pos:column="15">[<expr><literal type="number" pos:line="70" pos:column="16">0<pos:position pos:line="70" pos:column="17"/></literal></expr>]<pos:position pos:line="70" pos:column="18"/></index></name> <operator pos:line="70" pos:column="19">=<pos:position pos:line="70" pos:column="20"/></operator> <literal type="char" pos:line="70" pos:column="21">'['<pos:position pos:line="70" pos:column="24"/></literal></expr>;<pos:position pos:line="70" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">ap_recent_ctime<pos:position pos:line="71" pos:column="24"/></name><argument_list pos:line="71" pos:column="24">(<argument><expr><name pos:line="71" pos:column="25">errstr<pos:position pos:line="71" pos:column="31"/></name> <operator pos:line="71" pos:column="32">+<pos:position pos:line="71" pos:column="33"/></operator> <literal type="number" pos:line="71" pos:column="34">1<pos:position pos:line="71" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="71" pos:column="37">apr_time_now<pos:position pos:line="71" pos:column="49"/></name><argument_list pos:line="71" pos:column="49">()<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">errstr<pos:position pos:line="72" pos:column="15"/></name><index pos:line="72" pos:column="15">[<expr><literal type="number" pos:line="72" pos:column="16">1<pos:position pos:line="72" pos:column="17"/></literal> <operator pos:line="72" pos:column="18">+<pos:position pos:line="72" pos:column="19"/></operator> <name pos:line="72" pos:column="20">APR_CTIME_LEN<pos:position pos:line="72" pos:column="33"/></name> <operator pos:line="72" pos:column="34">-<pos:position pos:line="72" pos:column="35"/></operator> <literal type="number" pos:line="72" pos:column="36">1<pos:position pos:line="72" pos:column="37"/></literal></expr>]<pos:position pos:line="72" pos:column="38"/></index></name> <operator pos:line="72" pos:column="39">=<pos:position pos:line="72" pos:column="40"/></operator> <literal type="char" pos:line="72" pos:column="41">']'<pos:position pos:line="72" pos:column="44"/></literal></expr>;<pos:position pos:line="72" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="73" pos:column="9">errstr<pos:position pos:line="73" pos:column="15"/></name><index pos:line="73" pos:column="15">[<expr><literal type="number" pos:line="73" pos:column="16">1<pos:position pos:line="73" pos:column="17"/></literal> <operator pos:line="73" pos:column="18">+<pos:position pos:line="73" pos:column="19"/></operator> <name pos:line="73" pos:column="20">APR_CTIME_LEN<pos:position pos:line="73" pos:column="33"/></name></expr>    ]<pos:position pos:line="73" pos:column="38"/></index></name> <operator pos:line="73" pos:column="39">=<pos:position pos:line="73" pos:column="40"/></operator> <literal type="char" pos:line="73" pos:column="41">' '<pos:position pos:line="73" pos:column="44"/></literal></expr>;<pos:position pos:line="73" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="74" pos:column="9">len<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">=<pos:position pos:line="74" pos:column="14"/></operator> <literal type="number" pos:line="74" pos:column="15">1<pos:position pos:line="74" pos:column="16"/></literal> <operator pos:line="74" pos:column="17">+<pos:position pos:line="74" pos:column="18"/></operator> <name pos:line="74" pos:column="19">APR_CTIME_LEN<pos:position pos:line="74" pos:column="32"/></name> <operator pos:line="74" pos:column="33">+<pos:position pos:line="74" pos:column="34"/></operator> <literal type="number" pos:line="74" pos:column="35">1<pos:position pos:line="74" pos:column="36"/></literal></expr>;<pos:position pos:line="74" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="75" pos:column="6"/></block></then> <else pos:line="75" pos:column="7">else <block pos:line="75" pos:column="12">{
        <expr_stmt><expr><name pos:line="76" pos:column="9">len<pos:position pos:line="76" pos:column="12"/></name> <operator pos:line="76" pos:column="13">=<pos:position pos:line="76" pos:column="14"/></operator> <literal type="number" pos:line="76" pos:column="15">0<pos:position pos:line="76" pos:column="16"/></literal></expr>;<pos:position pos:line="76" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></else></if>

    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><operator pos:line="79" pos:column="9">(<pos:position pos:line="79" pos:column="10"/></operator><name pos:line="79" pos:column="10">level<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">&amp;<pos:position pos:line="79" pos:column="21"/></operator> <name pos:line="79" pos:column="18">APLOG_STARTUP<pos:position pos:line="79" pos:column="31"/></name><operator pos:line="79" pos:column="31">)<pos:position pos:line="79" pos:column="32"/></operator> <operator pos:line="79" pos:column="33">!=<pos:position pos:line="79" pos:column="35"/></operator> <name pos:line="79" pos:column="36">APLOG_STARTUP<pos:position pos:line="79" pos:column="49"/></name></expr>)<pos:position pos:line="79" pos:column="50"/></condition><then pos:line="79" pos:column="50"> <block pos:line="79" pos:column="51">{
        <expr_stmt><expr><name pos:line="80" pos:column="9">len<pos:position pos:line="80" pos:column="12"/></name> <operator pos:line="80" pos:column="13">+=<pos:position pos:line="80" pos:column="15"/></operator> <call><name pos:line="80" pos:column="16">apr_snprintf<pos:position pos:line="80" pos:column="28"/></name><argument_list pos:line="80" pos:column="28">(<argument><expr><name pos:line="80" pos:column="29">errstr<pos:position pos:line="80" pos:column="35"/></name> <operator pos:line="80" pos:column="36">+<pos:position pos:line="80" pos:column="37"/></operator> <name pos:line="80" pos:column="38">len<pos:position pos:line="80" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="43">MAX_STRING_LEN<pos:position pos:line="80" pos:column="57"/></name> <operator pos:line="80" pos:column="58">-<pos:position pos:line="80" pos:column="59"/></operator> <name pos:line="80" pos:column="60">len<pos:position pos:line="80" pos:column="63"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="81" pos:column="29">"[%s] "<pos:position pos:line="81" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="38">priorities<pos:position pos:line="81" pos:column="48"/></name><index pos:line="81" pos:column="48">[<expr><name pos:line="81" pos:column="49">level_and_mask<pos:position pos:line="81" pos:column="63"/></name></expr>]<pos:position pos:line="81" pos:column="64"/></index></name><operator pos:line="81" pos:column="64">.<pos:position pos:line="81" pos:column="65"/></operator><name pos:line="81" pos:column="65">t_name<pos:position pos:line="81" pos:column="71"/></name></expr></argument>)<pos:position pos:line="81" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>

<cpp:ifndef pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">ifndef<pos:position pos:line="84" pos:column="8"/></cpp:directive> <name pos:line="84" pos:column="9">TPF<pos:position pos:line="84" pos:column="12"/></name></cpp:ifndef>
    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name pos:line="85" pos:column="9">file<pos:position pos:line="85" pos:column="13"/></name> <operator pos:line="85" pos:column="14">&amp;&amp;<pos:position pos:line="85" pos:column="24"/></operator> <name pos:line="85" pos:column="17">level_and_mask<pos:position pos:line="85" pos:column="31"/></name> <operator pos:line="85" pos:column="32">==<pos:position pos:line="85" pos:column="34"/></operator> <name pos:line="85" pos:column="35">APLOG_DEBUG<pos:position pos:line="85" pos:column="46"/></name></expr>)<pos:position pos:line="85" pos:column="47"/></condition><then pos:line="85" pos:column="47"> <block pos:line="85" pos:column="48">{
<cpp:if pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">if<pos:position pos:line="86" pos:column="4"/></cpp:directive> <expr><call><name pos:line="86" pos:column="5">defined<pos:position pos:line="86" pos:column="12"/></name><argument_list pos:line="86" pos:column="12">(<argument><expr><name pos:line="86" pos:column="13">_OSD_POSIX<pos:position pos:line="86" pos:column="23"/></name></expr></argument>)<pos:position pos:line="86" pos:column="24"/></argument_list></call> <operator pos:line="86" pos:column="25">||<pos:position pos:line="86" pos:column="27"/></operator> <call><name pos:line="86" pos:column="28">defined<pos:position pos:line="86" pos:column="35"/></name><argument_list pos:line="86" pos:column="35">(<argument><expr><name pos:line="86" pos:column="36">WIN32<pos:position pos:line="86" pos:column="41"/></name></expr></argument>)<pos:position pos:line="86" pos:column="42"/></argument_list></call> <operator pos:line="86" pos:column="43">||<pos:position pos:line="86" pos:column="45"/></operator> <call><name pos:line="86" pos:column="46">defined<pos:position pos:line="86" pos:column="53"/></name><argument_list pos:line="86" pos:column="53">(<argument><expr><name pos:line="86" pos:column="54">__MVS__<pos:position pos:line="86" pos:column="61"/></name></expr></argument>)<pos:position pos:line="86" pos:column="62"/></argument_list></call></expr></cpp:if>
        <decl_stmt><decl><type><name pos:line="87" pos:column="9">char<pos:position pos:line="87" pos:column="13"/></name></type> <name><name pos:line="87" pos:column="14">tmp<pos:position pos:line="87" pos:column="17"/></name><index pos:line="87" pos:column="17">[<expr><literal type="number" pos:line="87" pos:column="18">256<pos:position pos:line="87" pos:column="21"/></literal></expr>]<pos:position pos:line="87" pos:column="22"/></index></name></decl>;<pos:position pos:line="87" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="88" pos:column="9">char<pos:position pos:line="88" pos:column="13"/></name> <modifier pos:line="88" pos:column="14">*<pos:position pos:line="88" pos:column="15"/></modifier></type><name pos:line="88" pos:column="15">e<pos:position pos:line="88" pos:column="16"/></name> <init pos:line="88" pos:column="17">= <expr><call><name pos:line="88" pos:column="19">strrchr<pos:position pos:line="88" pos:column="26"/></name><argument_list pos:line="88" pos:column="26">(<argument><expr><name pos:line="88" pos:column="27">file<pos:position pos:line="88" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="88" pos:column="33">'/'<pos:position pos:line="88" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="88" pos:column="38"/></decl_stmt>
<cpp:ifdef pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">ifdef<pos:position pos:line="89" pos:column="7"/></cpp:directive> <name pos:line="89" pos:column="8">WIN32<pos:position pos:line="89" pos:column="13"/></name></cpp:ifdef>
        <if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><operator pos:line="90" pos:column="13">!<pos:position pos:line="90" pos:column="14"/></operator><name pos:line="90" pos:column="14">e<pos:position pos:line="90" pos:column="15"/></name></expr>)<pos:position pos:line="90" pos:column="16"/></condition><then pos:line="90" pos:column="16"> <block pos:line="90" pos:column="17">{
            <expr_stmt><expr><name pos:line="91" pos:column="13">e<pos:position pos:line="91" pos:column="14"/></name> <operator pos:line="91" pos:column="15">=<pos:position pos:line="91" pos:column="16"/></operator> <call><name pos:line="91" pos:column="17">strrchr<pos:position pos:line="91" pos:column="24"/></name><argument_list pos:line="91" pos:column="24">(<argument><expr><name pos:line="91" pos:column="25">file<pos:position pos:line="91" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="91" pos:column="31">'\\'<pos:position pos:line="91" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="92" pos:column="10"/></block></then></if>
<cpp:endif pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">endif<pos:position pos:line="93" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="block" pos:line="95" pos:column="9">/* In OSD/POSIX, the compiler returns for __FILE__
         * a string like: __FILE__="*POSIX(/usr/include/stdio.h)"
         * (it even returns an absolute path for sources in
         * the current directory). Here we try to strip this
         * down to the basename.
         */</comment>
        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name pos:line="101" pos:column="13">e<pos:position pos:line="101" pos:column="14"/></name> <operator pos:line="101" pos:column="15">!=<pos:position pos:line="101" pos:column="17"/></operator> <name pos:line="101" pos:column="18">NULL<pos:position pos:line="101" pos:column="22"/></name> <operator pos:line="101" pos:column="23">&amp;&amp;<pos:position pos:line="101" pos:column="33"/></operator> <name><name pos:line="101" pos:column="26">e<pos:position pos:line="101" pos:column="27"/></name><index pos:line="101" pos:column="27">[<expr><literal type="number" pos:line="101" pos:column="28">1<pos:position pos:line="101" pos:column="29"/></literal></expr>]<pos:position pos:line="101" pos:column="30"/></index></name> <operator pos:line="101" pos:column="31">!=<pos:position pos:line="101" pos:column="33"/></operator> <literal type="char" pos:line="101" pos:column="34">'\0'<pos:position pos:line="101" pos:column="38"/></literal></expr>)<pos:position pos:line="101" pos:column="39"/></condition><then pos:line="101" pos:column="39"> <block pos:line="101" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="102" pos:column="13">apr_snprintf<pos:position pos:line="102" pos:column="25"/></name><argument_list pos:line="102" pos:column="25">(<argument><expr><name pos:line="102" pos:column="26">tmp<pos:position pos:line="102" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="102" pos:column="31">sizeof<argument_list pos:line="102" pos:column="37">(<argument><expr><name pos:line="102" pos:column="38">tmp<pos:position pos:line="102" pos:column="41"/></name></expr></argument>)<pos:position pos:line="102" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="44">"%s"<pos:position pos:line="102" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="102" pos:column="50">&amp;<pos:position pos:line="102" pos:column="55"/></operator><name><name pos:line="102" pos:column="51">e<pos:position pos:line="102" pos:column="52"/></name><index pos:line="102" pos:column="52">[<expr><literal type="number" pos:line="102" pos:column="53">1<pos:position pos:line="102" pos:column="54"/></literal></expr>]<pos:position pos:line="102" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="102" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name pos:line="103" pos:column="13">e<pos:position pos:line="103" pos:column="14"/></name> <operator pos:line="103" pos:column="15">=<pos:position pos:line="103" pos:column="16"/></operator> <operator pos:line="103" pos:column="17">&amp;<pos:position pos:line="103" pos:column="22"/></operator><name><name pos:line="103" pos:column="18">tmp<pos:position pos:line="103" pos:column="21"/></name><index pos:line="103" pos:column="21">[<expr><call><name pos:line="103" pos:column="22">strlen<pos:position pos:line="103" pos:column="28"/></name><argument_list pos:line="103" pos:column="28">(<argument><expr><name pos:line="103" pos:column="29">tmp<pos:position pos:line="103" pos:column="32"/></name></expr></argument>)<pos:position pos:line="103" pos:column="33"/></argument_list></call><operator pos:line="103" pos:column="33">-<pos:position pos:line="103" pos:column="34"/></operator><literal type="number" pos:line="103" pos:column="34">1<pos:position pos:line="103" pos:column="35"/></literal></expr>]<pos:position pos:line="103" pos:column="36"/></index></name></expr>;<pos:position pos:line="103" pos:column="37"/></expr_stmt>
            <if pos:line="104" pos:column="13">if <condition pos:line="104" pos:column="16">(<expr><operator pos:line="104" pos:column="17">*<pos:position pos:line="104" pos:column="18"/></operator><name pos:line="104" pos:column="18">e<pos:position pos:line="104" pos:column="19"/></name> <operator pos:line="104" pos:column="20">==<pos:position pos:line="104" pos:column="22"/></operator> <literal type="char" pos:line="104" pos:column="23">')'<pos:position pos:line="104" pos:column="26"/></literal></expr>)<pos:position pos:line="104" pos:column="27"/></condition><then pos:line="104" pos:column="27"> <block pos:line="104" pos:column="28">{
                <expr_stmt><expr><operator pos:line="105" pos:column="17">*<pos:position pos:line="105" pos:column="18"/></operator><name pos:line="105" pos:column="18">e<pos:position pos:line="105" pos:column="19"/></name> <operator pos:line="105" pos:column="20">=<pos:position pos:line="105" pos:column="21"/></operator> <literal type="char" pos:line="105" pos:column="22">'\0'<pos:position pos:line="105" pos:column="26"/></literal></expr>;<pos:position pos:line="105" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="106" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="107" pos:column="13">file<pos:position pos:line="107" pos:column="17"/></name> <operator pos:line="107" pos:column="18">=<pos:position pos:line="107" pos:column="19"/></operator> <name pos:line="107" pos:column="20">tmp<pos:position pos:line="107" pos:column="23"/></name></expr>;<pos:position pos:line="107" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="108" pos:column="10"/></block></then></if>
<cpp:else pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">else<pos:position pos:line="109" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="109" pos:column="7">/* _OSD_POSIX || WIN32 */</comment>
        <decl_stmt><decl><type><specifier pos:line="110" pos:column="9">const<pos:position pos:line="110" pos:column="14"/></specifier> <name pos:line="110" pos:column="15">char<pos:position pos:line="110" pos:column="19"/></name> <modifier pos:line="110" pos:column="20">*<pos:position pos:line="110" pos:column="21"/></modifier></type><name pos:line="110" pos:column="21">p<pos:position pos:line="110" pos:column="22"/></name></decl>;<pos:position pos:line="110" pos:column="23"/></decl_stmt>
        <comment type="block" pos:line="111" pos:column="9">/* On Unix, __FILE__ may be an absolute path in a
         * VPATH build. */</comment>
        <if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name><name pos:line="113" pos:column="13">file<pos:position pos:line="113" pos:column="17"/></name><index pos:line="113" pos:column="17">[<expr><literal type="number" pos:line="113" pos:column="18">0<pos:position pos:line="113" pos:column="19"/></literal></expr>]<pos:position pos:line="113" pos:column="20"/></index></name> <operator pos:line="113" pos:column="21">==<pos:position pos:line="113" pos:column="23"/></operator> <literal type="char" pos:line="113" pos:column="24">'/'<pos:position pos:line="113" pos:column="27"/></literal> <operator pos:line="113" pos:column="28">&amp;&amp;<pos:position pos:line="113" pos:column="38"/></operator> <operator pos:line="113" pos:column="31">(<pos:position pos:line="113" pos:column="32"/></operator><name pos:line="113" pos:column="32">p<pos:position pos:line="113" pos:column="33"/></name> <operator pos:line="113" pos:column="34">=<pos:position pos:line="113" pos:column="35"/></operator> <call><name pos:line="113" pos:column="36">ap_strrchr_c<pos:position pos:line="113" pos:column="48"/></name><argument_list pos:line="113" pos:column="48">(<argument><expr><name pos:line="113" pos:column="49">file<pos:position pos:line="113" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="113" pos:column="55">'/'<pos:position pos:line="113" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="59"/></argument_list></call><operator pos:line="113" pos:column="59">)<pos:position pos:line="113" pos:column="60"/></operator> <operator pos:line="113" pos:column="61">!=<pos:position pos:line="113" pos:column="63"/></operator> <name pos:line="113" pos:column="64">NULL<pos:position pos:line="113" pos:column="68"/></name></expr>)<pos:position pos:line="113" pos:column="69"/></condition><then pos:line="113" pos:column="69"> <block pos:line="113" pos:column="70">{
            <expr_stmt><expr><name pos:line="114" pos:column="13">file<pos:position pos:line="114" pos:column="17"/></name> <operator pos:line="114" pos:column="18">=<pos:position pos:line="114" pos:column="19"/></operator> <name pos:line="114" pos:column="20">p<pos:position pos:line="114" pos:column="21"/></name> <operator pos:line="114" pos:column="22">+<pos:position pos:line="114" pos:column="23"/></operator> <literal type="number" pos:line="114" pos:column="24">1<pos:position pos:line="114" pos:column="25"/></literal></expr>;<pos:position pos:line="114" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="115" pos:column="10"/></block></then></if>
<cpp:endif pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">endif<pos:position pos:line="116" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="116" pos:column="8">/*_OSD_POSIX || WIN32 */</comment>
        <expr_stmt><expr><name pos:line="117" pos:column="9">len<pos:position pos:line="117" pos:column="12"/></name> <operator pos:line="117" pos:column="13">+=<pos:position pos:line="117" pos:column="15"/></operator> <call><name pos:line="117" pos:column="16">apr_snprintf<pos:position pos:line="117" pos:column="28"/></name><argument_list pos:line="117" pos:column="28">(<argument><expr><name pos:line="117" pos:column="29">errstr<pos:position pos:line="117" pos:column="35"/></name> <operator pos:line="117" pos:column="36">+<pos:position pos:line="117" pos:column="37"/></operator> <name pos:line="117" pos:column="38">len<pos:position pos:line="117" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="43">MAX_STRING_LEN<pos:position pos:line="117" pos:column="57"/></name> <operator pos:line="117" pos:column="58">-<pos:position pos:line="117" pos:column="59"/></operator> <name pos:line="117" pos:column="60">len<pos:position pos:line="117" pos:column="63"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="118" pos:column="29">"%s(%d): "<pos:position pos:line="118" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="118" pos:column="41">file<pos:position pos:line="118" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="47">line<pos:position pos:line="118" pos:column="51"/></name></expr></argument>)<pos:position pos:line="118" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="119" pos:column="6"/></block></then></if>
<cpp:endif pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">endif<pos:position pos:line="120" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="120" pos:column="8">/* TPF */</comment>

    <if pos:line="122" pos:column="5">if <condition pos:line="122" pos:column="8">(<expr><name pos:line="122" pos:column="9">c<pos:position pos:line="122" pos:column="10"/></name></expr>)<pos:position pos:line="122" pos:column="11"/></condition><then pos:line="122" pos:column="11"> <block pos:line="122" pos:column="12">{
        <comment type="block" pos:line="123" pos:column="9">/* XXX: TODO: add a method of selecting whether logged client
         * addresses are in dotted quad or resolved form... dotted
         * quad is the most secure, which is why I'm implementing it
         * first. -djg
         */</comment>
        <expr_stmt><expr><name pos:line="128" pos:column="9">len<pos:position pos:line="128" pos:column="12"/></name> <operator pos:line="128" pos:column="13">+=<pos:position pos:line="128" pos:column="15"/></operator> <macro><name pos:line="128" pos:column="16">apr_snprintf<pos:position pos:line="128" pos:column="28"/></name><argument_list pos:line="128" pos:column="28">(<argument pos:line="128" pos:column="29">errstr + len<pos:position pos:line="128" pos:column="41"/></argument>, <argument pos:line="128" pos:column="43">MAX_STRING_LEN - len<pos:position pos:line="128" pos:column="63"/></argument>,
                            <argument><literal type="string" pos:line="129" pos:column="29">"[client %s] "<pos:position pos:line="129" pos:column="43"/></literal></argument>, <argument pos:line="129" pos:column="45">c-&gt;rem<pos:position pos:line="129" pos:column="51"/></argument></argument_list></macro></expr></expr_stmt></block></then></if></block></function></unit>

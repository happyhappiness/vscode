<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2631_httpd-2.2.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dbd_sqlite3_prepare<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">apr_pool_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">pool<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">apr_dbd_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">sql<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                               <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">query<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">label<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="3" pos:column="32">apr_dbd_prepared_t<pos:position pos:line="3" pos:column="50"/></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier><modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">statement<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">sqlite3_stmt<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">stmt<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">p<pos:position pos:line="6" pos:column="12"/></name></decl>, <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="15">slquery<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><call><name pos:line="6" pos:column="25">apr_pstrdup<pos:position pos:line="6" pos:column="36"/></name><argument_list pos:line="6" pos:column="36">(<argument><expr><name pos:line="6" pos:column="37">pool<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="43">query<pos:position pos:line="6" pos:column="48"/></name></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">tail<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="31">q<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">ret<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>

    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><expr><name pos:line="10" pos:column="10">p<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">slquery<pos:position pos:line="10" pos:column="21"/></name></expr><operator pos:line="10" pos:column="21">,<pos:position pos:line="10" pos:column="22"/></operator> <expr><name pos:line="10" pos:column="23">q<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="27">query<pos:position pos:line="10" pos:column="32"/></name></expr>;<pos:position pos:line="10" pos:column="33"/></init> <condition><expr><operator pos:line="10" pos:column="34">*<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">q<pos:position pos:line="10" pos:column="36"/></name></expr>;<pos:position pos:line="10" pos:column="37"/></condition> <incr><expr><operator pos:line="10" pos:column="38">++<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">q<pos:position pos:line="10" pos:column="41"/></name></expr></incr>)<pos:position pos:line="10" pos:column="42"/></control> <block pos:line="10" pos:column="43">{
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">q<pos:position pos:line="11" pos:column="14"/></name><index pos:line="11" pos:column="14">[<expr><literal type="number" pos:line="11" pos:column="15">0<pos:position pos:line="11" pos:column="16"/></literal></expr>]<pos:position pos:line="11" pos:column="17"/></index></name> <operator pos:line="11" pos:column="18">==<pos:position pos:line="11" pos:column="20"/></operator> <literal type="char" pos:line="11" pos:column="21">'%'<pos:position pos:line="11" pos:column="24"/></literal></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25"> <block pos:line="11" pos:column="26">{
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><call><name pos:line="12" pos:column="17">isalpha<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name><name pos:line="12" pos:column="25">q<pos:position pos:line="12" pos:column="26"/></name><index pos:line="12" pos:column="26">[<expr><literal type="number" pos:line="12" pos:column="27">1<pos:position pos:line="12" pos:column="28"/></literal></expr>]<pos:position pos:line="12" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31"> <block pos:line="12" pos:column="32">{
                <expr_stmt><expr><operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">p<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">++<pos:position pos:line="13" pos:column="21"/></operator> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <literal type="char" pos:line="13" pos:column="24">'?'<pos:position pos:line="13" pos:column="27"/></literal></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="14" pos:column="17">++<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">q<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
            }<pos:position pos:line="15" pos:column="14"/></block></then>
            <elseif pos:line="16" pos:column="13">else <if pos:line="16" pos:column="18">if <condition pos:line="16" pos:column="21">(<expr><name><name pos:line="16" pos:column="22">q<pos:position pos:line="16" pos:column="23"/></name><index pos:line="16" pos:column="23">[<expr><literal type="number" pos:line="16" pos:column="24">1<pos:position pos:line="16" pos:column="25"/></literal></expr>]<pos:position pos:line="16" pos:column="26"/></index></name> <operator pos:line="16" pos:column="27">==<pos:position pos:line="16" pos:column="29"/></operator> <literal type="char" pos:line="16" pos:column="30">'%'<pos:position pos:line="16" pos:column="33"/></literal></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34"> <block pos:line="16" pos:column="35">{
                <comment type="block" pos:line="17" pos:column="17">/* reduce %% to % */</comment>
                <expr_stmt><expr><operator pos:line="18" pos:column="17">*<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">p<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">++<pos:position pos:line="18" pos:column="21"/></operator> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <operator pos:line="18" pos:column="24">*<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">q<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">++<pos:position pos:line="18" pos:column="28"/></operator></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="19" pos:column="14"/></block></then></if></elseif>
            <else pos:line="20" pos:column="13">else <block pos:line="20" pos:column="18">{
                <expr_stmt><expr><operator pos:line="21" pos:column="17">*<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">p<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">++<pos:position pos:line="21" pos:column="21"/></operator> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="24">*<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">q<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="22" pos:column="14"/></block></else></if>
        }<pos:position pos:line="23" pos:column="10"/></block></then>
        <else pos:line="24" pos:column="9">else <block pos:line="24" pos:column="14">{
            <expr_stmt><expr><operator pos:line="25" pos:column="13">*<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">p<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">++<pos:position pos:line="25" pos:column="17"/></operator> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <operator pos:line="25" pos:column="20">*<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">q<pos:position pos:line="25" pos:column="22"/></name></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></else></if>
    }<pos:position pos:line="27" pos:column="6"/></block></for>
    <expr_stmt><expr><operator pos:line="28" pos:column="5">*<pos:position pos:line="28" pos:column="6"/></operator><name pos:line="28" pos:column="6">p<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <literal type="number" pos:line="28" pos:column="10">0<pos:position pos:line="28" pos:column="11"/></literal></expr>;<pos:position pos:line="28" pos:column="12"/></expr_stmt>

<cpp:if pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">if<pos:position pos:line="30" pos:column="4"/></cpp:directive> <expr><name pos:line="30" pos:column="5">APR_HAS_THREADS<pos:position pos:line="30" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">apr_thread_mutex_lock<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name><name pos:line="31" pos:column="27">sql<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">-&gt;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="32">mutex<pos:position pos:line="31" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="34" pos:column="5">ret<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">=<pos:position pos:line="34" pos:column="10"/></operator> <call><name pos:line="34" pos:column="11">sqlite3_prepare<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name><name pos:line="34" pos:column="27">sql<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">-&gt;<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="32">conn<pos:position pos:line="34" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="38">slquery<pos:position pos:line="34" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="47">strlen<pos:position pos:line="34" pos:column="53"/></name><argument_list pos:line="34" pos:column="53">(<argument><expr><name pos:line="34" pos:column="54">query<pos:position pos:line="34" pos:column="59"/></name></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="34" pos:column="62">&amp;<pos:position pos:line="34" pos:column="67"/></operator><name pos:line="34" pos:column="63">stmt<pos:position pos:line="34" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="69">&amp;<pos:position pos:line="34" pos:column="74"/></operator><name pos:line="34" pos:column="70">tail<pos:position pos:line="34" pos:column="74"/></name></expr></argument>)<pos:position pos:line="34" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="76"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">ret<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">==<pos:position pos:line="35" pos:column="15"/></operator> <name pos:line="35" pos:column="16">SQLITE_OK<pos:position pos:line="35" pos:column="25"/></name></expr>)<pos:position pos:line="35" pos:column="26"/></condition><then pos:line="35" pos:column="26"> <block pos:line="35" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">apr_dbd_prepared_t<pos:position pos:line="36" pos:column="27"/></name> <modifier pos:line="36" pos:column="28">*<pos:position pos:line="36" pos:column="29"/></modifier></type><name pos:line="36" pos:column="29">prep<pos:position pos:line="36" pos:column="33"/></name></decl>;<pos:position pos:line="36" pos:column="34"/></decl_stmt> 

        <expr_stmt><expr><name pos:line="38" pos:column="9">prep<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">apr_pcalloc<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><name><name pos:line="38" pos:column="28">sql<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">-&gt;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="33">pool<pos:position pos:line="38" pos:column="37"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="39">sizeof<argument_list pos:line="38" pos:column="45">(<argument><expr><operator pos:line="38" pos:column="46">*<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="47">prep<pos:position pos:line="38" pos:column="51"/></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">prep<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">stmt<pos:position pos:line="39" pos:column="19"/></name></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">stmt<pos:position pos:line="39" pos:column="26"/></name></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">prep<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">next<pos:position pos:line="40" pos:column="19"/></name></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <name><name pos:line="40" pos:column="22">sql<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">-&gt;<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="27">prep<pos:position pos:line="40" pos:column="31"/></name></name></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>

        <comment type="block" pos:line="42" pos:column="9">/* link new statement to the handle */</comment>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">sql<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">-&gt;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="14">prep<pos:position pos:line="43" pos:column="18"/></name></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <name pos:line="43" pos:column="21">prep<pos:position pos:line="43" pos:column="25"/></name></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="45" pos:column="9">*<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">statement<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <name pos:line="45" pos:column="22">prep<pos:position pos:line="45" pos:column="26"/></name></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then> <else pos:line="46" pos:column="7">else <block pos:line="46" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">sqlite3_finalize<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">stmt<pos:position pos:line="47" pos:column="30"/></name></expr></argument>)<pos:position pos:line="47" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></else></if>
   
<cpp:if pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">if<pos:position pos:line="50" pos:column="4"/></cpp:directive> <expr><name pos:line="50" pos:column="5">APR_HAS_THREADS<pos:position pos:line="50" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">apr_thread_mutex_unlock<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name><name pos:line="51" pos:column="29">sql<pos:position pos:line="51" pos:column="32"/></name><operator pos:line="51" pos:column="32">-&gt;<pos:position pos:line="51" pos:column="37"/></operator><name pos:line="51" pos:column="34">mutex<pos:position pos:line="51" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">ret<pos:position pos:line="54" pos:column="15"/></name></expr>;<pos:position pos:line="54" pos:column="16"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

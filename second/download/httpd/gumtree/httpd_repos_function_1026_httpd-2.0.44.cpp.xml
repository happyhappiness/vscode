<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1026_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">store_cache_string<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">cache<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">c<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">res<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">cacheentry<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">ce<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">j<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">cachelist<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">l<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">cacheentry<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">e<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">cachetlbentry<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">t<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">found_list<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">APR_HAS_THREADS<pos:position pos:line="10" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">apr_thread_mutex_lock<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name><name pos:line="11" pos:column="27">c<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">lock<pos:position pos:line="11" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="14" pos:column="5">found_list<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
    <comment type="block" pos:line="15" pos:column="5">/* first try to edit an existing entry */</comment>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">i<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr>;<pos:position pos:line="16" pos:column="16"/></init> <condition><expr><name pos:line="16" pos:column="17">i<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">&lt;<pos:position pos:line="16" pos:column="23"/></operator> <name><name pos:line="16" pos:column="21">c<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">lists<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">nelts<pos:position pos:line="16" pos:column="36"/></name></name></expr>;<pos:position pos:line="16" pos:column="37"/></condition> <incr><expr><name pos:line="16" pos:column="38">i<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">++<pos:position pos:line="16" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="42"/></control> <block pos:line="16" pos:column="43">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">l<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <operator pos:line="17" pos:column="13">&amp;<pos:position pos:line="17" pos:column="18"/></operator><operator pos:line="17" pos:column="14">(<pos:position pos:line="17" pos:column="15"/></operator><operator pos:line="17" pos:column="15">(<pos:position pos:line="17" pos:column="16"/></operator><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">cachelist<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">*<pos:position pos:line="17" pos:column="28"/></operator><operator pos:line="17" pos:column="28">)<pos:position pos:line="17" pos:column="29"/></operator><name><name pos:line="17" pos:column="29">c<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">lists<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">elts<pos:position pos:line="17" pos:column="43"/></name></name><operator pos:line="17" pos:column="43">)<pos:position pos:line="17" pos:column="44"/></operator><index pos:line="17" pos:column="44">[<expr><name pos:line="17" pos:column="45">i<pos:position pos:line="17" pos:column="46"/></name></expr>]<pos:position pos:line="17" pos:column="47"/></index><operator pos:line="17" pos:column="47">)<pos:position pos:line="17" pos:column="48"/></operator></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">strcmp<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name><name pos:line="18" pos:column="20">l<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">resource<pos:position pos:line="18" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">res<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call> <operator pos:line="18" pos:column="38">==<pos:position pos:line="18" pos:column="40"/></operator> <literal type="number" pos:line="18" pos:column="41">0<pos:position pos:line="18" pos:column="42"/></literal></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43"> <block pos:line="18" pos:column="44">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">found_list<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <literal type="number" pos:line="19" pos:column="26">1<pos:position pos:line="19" pos:column="27"/></literal></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>

            <expr_stmt><expr><name pos:line="21" pos:column="13">e<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">cache_tlb_lookup<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><operator pos:line="21" pos:column="34">(<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">cachetlbentry<pos:position pos:line="21" pos:column="48"/></name> <operator pos:line="21" pos:column="49">*<pos:position pos:line="21" pos:column="50"/></operator><operator pos:line="21" pos:column="50">)<pos:position pos:line="21" pos:column="51"/></operator><name><name pos:line="21" pos:column="51">l<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">-&gt;<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="54">tlb<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">-&gt;<pos:position pos:line="21" pos:column="62"/></operator><name pos:line="21" pos:column="59">elts<pos:position pos:line="21" pos:column="63"/></name></name></expr></argument>,
                                 <argument><expr><operator pos:line="22" pos:column="34">(<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">cacheentry<pos:position pos:line="22" pos:column="45"/></name> <operator pos:line="22" pos:column="46">*<pos:position pos:line="22" pos:column="47"/></operator><operator pos:line="22" pos:column="47">)<pos:position pos:line="22" pos:column="48"/></operator><name><name pos:line="22" pos:column="48">l<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">-&gt;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="51">entries<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">-&gt;<pos:position pos:line="22" pos:column="63"/></operator><name pos:line="22" pos:column="60">elts<pos:position pos:line="22" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="66">ce<pos:position pos:line="22" pos:column="68"/></name><operator pos:line="22" pos:column="68">-&gt;<pos:position pos:line="22" pos:column="73"/></operator><name pos:line="22" pos:column="70">key<pos:position pos:line="22" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="75"/></expr_stmt>
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name pos:line="23" pos:column="17">e<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">!=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">NULL<pos:position pos:line="23" pos:column="26"/></name></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27"> <block pos:line="23" pos:column="28">{
                <expr_stmt><expr><name><name pos:line="24" pos:column="17">e<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">time<pos:position pos:line="24" pos:column="24"/></name></name>  <operator pos:line="24" pos:column="26">=<pos:position pos:line="24" pos:column="27"/></operator> <name><name pos:line="24" pos:column="28">ce<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">time<pos:position pos:line="24" pos:column="36"/></name></name></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="25" pos:column="17">e<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">value<pos:position pos:line="25" pos:column="25"/></name></name> <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <call><name pos:line="25" pos:column="28">apr_pstrdup<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><name><name pos:line="25" pos:column="40">c<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">pool<pos:position pos:line="25" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="49">ce<pos:position pos:line="25" pos:column="51"/></name><operator pos:line="25" pos:column="51">-&gt;<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="53">value<pos:position pos:line="25" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
<cpp:if pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">if<pos:position pos:line="26" pos:column="4"/></cpp:directive> <expr><name pos:line="26" pos:column="5">APR_HAS_THREADS<pos:position pos:line="26" pos:column="20"/></name></expr></cpp:if>
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">apr_thread_mutex_unlock<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name><name pos:line="27" pos:column="41">c<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">lock<pos:position pos:line="27" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
                <return pos:line="29" pos:column="17">return;<pos:position pos:line="29" pos:column="24"/></return>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if>

            <for pos:line="32" pos:column="13">for <control pos:line="32" pos:column="17">(<init><expr><name pos:line="32" pos:column="18">j<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <literal type="number" pos:line="32" pos:column="22">0<pos:position pos:line="32" pos:column="23"/></literal></expr>;<pos:position pos:line="32" pos:column="24"/></init> <condition><expr><name pos:line="32" pos:column="25">j<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">&lt;<pos:position pos:line="32" pos:column="31"/></operator> <name><name pos:line="32" pos:column="29">l<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">-&gt;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="32">entries<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">-&gt;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="41">nelts<pos:position pos:line="32" pos:column="46"/></name></name></expr>;<pos:position pos:line="32" pos:column="47"/></condition> <incr><expr><name pos:line="32" pos:column="48">j<pos:position pos:line="32" pos:column="49"/></name><operator pos:line="32" pos:column="49">++<pos:position pos:line="32" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="52"/></control> <block pos:line="32" pos:column="53">{
                <expr_stmt><expr><name pos:line="33" pos:column="17">e<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <operator pos:line="33" pos:column="21">&amp;<pos:position pos:line="33" pos:column="26"/></operator><operator pos:line="33" pos:column="22">(<pos:position pos:line="33" pos:column="23"/></operator><operator pos:line="33" pos:column="23">(<pos:position pos:line="33" pos:column="24"/></operator><operator pos:line="33" pos:column="24">(<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">cacheentry<pos:position pos:line="33" pos:column="35"/></name> <operator pos:line="33" pos:column="36">*<pos:position pos:line="33" pos:column="37"/></operator><operator pos:line="33" pos:column="37">)<pos:position pos:line="33" pos:column="38"/></operator><name><name pos:line="33" pos:column="38">l<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">-&gt;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="41">entries<pos:position pos:line="33" pos:column="48"/></name><operator pos:line="33" pos:column="48">-&gt;<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="50">elts<pos:position pos:line="33" pos:column="54"/></name></name><operator pos:line="33" pos:column="54">)<pos:position pos:line="33" pos:column="55"/></operator><index pos:line="33" pos:column="55">[<expr><name pos:line="33" pos:column="56">j<pos:position pos:line="33" pos:column="57"/></name></expr>]<pos:position pos:line="33" pos:column="58"/></index><operator pos:line="33" pos:column="58">)<pos:position pos:line="33" pos:column="59"/></operator></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>
                <if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><call><name pos:line="34" pos:column="21">strcmp<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name><name pos:line="34" pos:column="28">e<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">key<pos:position pos:line="34" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="36">ce<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">-&gt;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="40">key<pos:position pos:line="34" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call> <operator pos:line="34" pos:column="45">==<pos:position pos:line="34" pos:column="47"/></operator> <literal type="number" pos:line="34" pos:column="48">0<pos:position pos:line="34" pos:column="49"/></literal></expr>)<pos:position pos:line="34" pos:column="50"/></condition><then pos:line="34" pos:column="50"> <block pos:line="34" pos:column="51">{
                    <expr_stmt><expr><name><name pos:line="35" pos:column="21">e<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">-&gt;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="24">time<pos:position pos:line="35" pos:column="28"/></name></name>  <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <name><name pos:line="35" pos:column="32">ce<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">-&gt;<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="36">time<pos:position pos:line="35" pos:column="40"/></name></name></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="36" pos:column="21">e<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">value<pos:position pos:line="36" pos:column="29"/></name></name> <operator pos:line="36" pos:column="30">=<pos:position pos:line="36" pos:column="31"/></operator> <call><name pos:line="36" pos:column="32">apr_pstrdup<pos:position pos:line="36" pos:column="43"/></name><argument_list pos:line="36" pos:column="43">(<argument><expr><name><name pos:line="36" pos:column="44">c<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">-&gt;<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="47">pool<pos:position pos:line="36" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="53">ce<pos:position pos:line="36" pos:column="55"/></name><operator pos:line="36" pos:column="55">-&gt;<pos:position pos:line="36" pos:column="60"/></operator><name pos:line="36" pos:column="57">value<pos:position pos:line="36" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="37" pos:column="21">cache_tlb_replace<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><operator pos:line="37" pos:column="39">(<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="40">cachetlbentry<pos:position pos:line="37" pos:column="53"/></name> <operator pos:line="37" pos:column="54">*<pos:position pos:line="37" pos:column="55"/></operator><operator pos:line="37" pos:column="55">)<pos:position pos:line="37" pos:column="56"/></operator><name><name pos:line="37" pos:column="56">l<pos:position pos:line="37" pos:column="57"/></name><operator pos:line="37" pos:column="57">-&gt;<pos:position pos:line="37" pos:column="62"/></operator><name pos:line="37" pos:column="59">tlb<pos:position pos:line="37" pos:column="62"/></name><operator pos:line="37" pos:column="62">-&gt;<pos:position pos:line="37" pos:column="67"/></operator><name pos:line="37" pos:column="64">elts<pos:position pos:line="37" pos:column="68"/></name></name></expr></argument>,
                                      <argument><expr><operator pos:line="38" pos:column="39">(<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="40">cacheentry<pos:position pos:line="38" pos:column="50"/></name> <operator pos:line="38" pos:column="51">*<pos:position pos:line="38" pos:column="52"/></operator><operator pos:line="38" pos:column="52">)<pos:position pos:line="38" pos:column="53"/></operator><name><name pos:line="38" pos:column="53">l<pos:position pos:line="38" pos:column="54"/></name><operator pos:line="38" pos:column="54">-&gt;<pos:position pos:line="38" pos:column="59"/></operator><name pos:line="38" pos:column="56">entries<pos:position pos:line="38" pos:column="63"/></name><operator pos:line="38" pos:column="63">-&gt;<pos:position pos:line="38" pos:column="68"/></operator><name pos:line="38" pos:column="65">elts<pos:position pos:line="38" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="71">e<pos:position pos:line="38" pos:column="72"/></name></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="74"/></expr_stmt>
<cpp:if pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">if<pos:position pos:line="39" pos:column="4"/></cpp:directive> <expr><name pos:line="39" pos:column="5">APR_HAS_THREADS<pos:position pos:line="39" pos:column="20"/></name></expr></cpp:if>
                    <expr_stmt><expr><call><name pos:line="40" pos:column="21">apr_thread_mutex_unlock<pos:position pos:line="40" pos:column="44"/></name><argument_list pos:line="40" pos:column="44">(<argument><expr><name><name pos:line="40" pos:column="45">c<pos:position pos:line="40" pos:column="46"/></name><operator pos:line="40" pos:column="46">-&gt;<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="48">lock<pos:position pos:line="40" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>
                    <return pos:line="42" pos:column="21">return;<pos:position pos:line="42" pos:column="28"/></return>
                }<pos:position pos:line="43" pos:column="18"/></block></then></if>
            }<pos:position pos:line="44" pos:column="14"/></block></for>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></for>

    <comment type="block" pos:line="48" pos:column="5">/* create a needed new list */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">!<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">found_list<pos:position pos:line="49" pos:column="20"/></name></expr>)<pos:position pos:line="49" pos:column="21"/></condition><then pos:line="49" pos:column="21"> <block pos:line="49" pos:column="22">{
        <expr_stmt><expr><name pos:line="50" pos:column="9">l<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <call><name pos:line="50" pos:column="13">apr_array_push<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><name><name pos:line="50" pos:column="28">c<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">lists<pos:position pos:line="50" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="51" pos:column="9">l<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">-&gt;<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="12">resource<pos:position pos:line="51" pos:column="20"/></name></name> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <call><name pos:line="51" pos:column="23">apr_pstrdup<pos:position pos:line="51" pos:column="34"/></name><argument_list pos:line="51" pos:column="34">(<argument><expr><name><name pos:line="51" pos:column="35">c<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">-&gt;<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="38">pool<pos:position pos:line="51" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="44">res<pos:position pos:line="51" pos:column="47"/></name></expr></argument>)<pos:position pos:line="51" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">l<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">-&gt;<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="12">entries<pos:position pos:line="52" pos:column="19"/></name></name>  <operator pos:line="52" pos:column="21">=<pos:position pos:line="52" pos:column="22"/></operator> <call><name pos:line="52" pos:column="23">apr_array_make<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">(<argument><expr><name><name pos:line="52" pos:column="38">c<pos:position pos:line="52" pos:column="39"/></name><operator pos:line="52" pos:column="39">-&gt;<pos:position pos:line="52" pos:column="44"/></operator><name pos:line="52" pos:column="41">pool<pos:position pos:line="52" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="47">2<pos:position pos:line="52" pos:column="48"/></literal></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="50">sizeof<argument_list pos:line="52" pos:column="56">(<argument><expr><name pos:line="52" pos:column="57">cacheentry<pos:position pos:line="52" pos:column="67"/></name></expr></argument>)<pos:position pos:line="52" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">l<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">tlb<pos:position pos:line="53" pos:column="15"/></name></name>      <operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator> <call><name pos:line="53" pos:column="23">apr_array_make<pos:position pos:line="53" pos:column="37"/></name><argument_list pos:line="53" pos:column="37">(<argument><expr><name><name pos:line="53" pos:column="38">c<pos:position pos:line="53" pos:column="39"/></name><operator pos:line="53" pos:column="39">-&gt;<pos:position pos:line="53" pos:column="44"/></operator><name pos:line="53" pos:column="41">pool<pos:position pos:line="53" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="47">CACHE_TLB_ROWS<pos:position pos:line="53" pos:column="61"/></name></expr></argument>,
                                    <argument><expr><sizeof pos:line="54" pos:column="37">sizeof<argument_list pos:line="54" pos:column="43">(<argument><expr><name pos:line="54" pos:column="44">cachetlbentry<pos:position pos:line="54" pos:column="57"/></name></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="54" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="60"/></expr_stmt>
        <for pos:line="55" pos:column="9">for <control pos:line="55" pos:column="13">(<init><expr><name pos:line="55" pos:column="14">i<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">=<pos:position pos:line="55" pos:column="16"/></operator><literal type="number" pos:line="55" pos:column="16">0<pos:position pos:line="55" pos:column="17"/></literal></expr>;<pos:position pos:line="55" pos:column="18"/></init> <condition><expr><name pos:line="55" pos:column="19">i<pos:position pos:line="55" pos:column="20"/></name><operator pos:line="55" pos:column="20">&lt;<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="21">CACHE_TLB_ROWS<pos:position pos:line="55" pos:column="35"/></name></expr>;<pos:position pos:line="55" pos:column="36"/></condition> <incr><expr><operator pos:line="55" pos:column="37">++<pos:position pos:line="55" pos:column="39"/></operator><name pos:line="55" pos:column="39">i<pos:position pos:line="55" pos:column="40"/></name></expr></incr>)<pos:position pos:line="55" pos:column="41"/></control> <block pos:line="55" pos:column="42">{
            <expr_stmt><expr><name pos:line="56" pos:column="13">t<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">=<pos:position pos:line="56" pos:column="16"/></operator> <operator pos:line="56" pos:column="17">&amp;<pos:position pos:line="56" pos:column="22"/></operator><operator pos:line="56" pos:column="18">(<pos:position pos:line="56" pos:column="19"/></operator><operator pos:line="56" pos:column="19">(<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="20">cachetlbentry<pos:position pos:line="56" pos:column="33"/></name> <operator pos:line="56" pos:column="34">*<pos:position pos:line="56" pos:column="35"/></operator><operator pos:line="56" pos:column="35">)<pos:position pos:line="56" pos:column="36"/></operator><name><name pos:line="56" pos:column="36">l<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">-&gt;<pos:position pos:line="56" pos:column="42"/></operator><name pos:line="56" pos:column="39">tlb<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">-&gt;<pos:position pos:line="56" pos:column="47"/></operator><name pos:line="56" pos:column="44">elts<pos:position pos:line="56" pos:column="48"/></name></name><operator pos:line="56" pos:column="48">)<pos:position pos:line="56" pos:column="49"/></operator><index pos:line="56" pos:column="49">[<expr><name pos:line="56" pos:column="50">i<pos:position pos:line="56" pos:column="51"/></name></expr>]<pos:position pos:line="56" pos:column="52"/></index></expr>;<pos:position pos:line="56" pos:column="53"/></expr_stmt>
                <for pos:line="57" pos:column="17">for <control pos:line="57" pos:column="21">(<init><expr><name pos:line="57" pos:column="22">j<pos:position pos:line="57" pos:column="23"/></name><operator pos:line="57" pos:column="23">=<pos:position pos:line="57" pos:column="24"/></operator><literal type="number" pos:line="57" pos:column="24">0<pos:position pos:line="57" pos:column="25"/></literal></expr>;<pos:position pos:line="57" pos:column="26"/></init> <condition><expr><name pos:line="57" pos:column="27">j<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">&lt;<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="29">CACHE_TLB_COLS<pos:position pos:line="57" pos:column="43"/></name></expr>;<pos:position pos:line="57" pos:column="44"/></condition> <incr><expr><operator pos:line="57" pos:column="45">++<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="47">j<pos:position pos:line="57" pos:column="48"/></name></expr></incr>)<pos:position pos:line="57" pos:column="49"/></control>
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="21">t<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">-&gt;<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="24">t<pos:position pos:line="58" pos:column="25"/></name><index pos:line="58" pos:column="25">[<expr><name pos:line="58" pos:column="26">j<pos:position pos:line="58" pos:column="27"/></name></expr>]<pos:position pos:line="58" pos:column="28"/></index></name> <operator pos:line="58" pos:column="29">=<pos:position pos:line="58" pos:column="30"/></operator> <operator pos:line="58" pos:column="31">-<pos:position pos:line="58" pos:column="32"/></operator><literal type="number" pos:line="58" pos:column="32">1<pos:position pos:line="58" pos:column="33"/></literal></expr>;<pos:position pos:line="58" pos:column="34"/></expr_stmt></block></for>
        }<pos:position pos:line="59" pos:column="10"/></block></for>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="62" pos:column="5">/* create the new entry */</comment>
    <for pos:line="63" pos:column="5">for <control pos:line="63" pos:column="9">(<init><expr><name pos:line="63" pos:column="10">i<pos:position pos:line="63" pos:column="11"/></name> <operator pos:line="63" pos:column="12">=<pos:position pos:line="63" pos:column="13"/></operator> <literal type="number" pos:line="63" pos:column="14">0<pos:position pos:line="63" pos:column="15"/></literal></expr>;<pos:position pos:line="63" pos:column="16"/></init> <condition><expr><name pos:line="63" pos:column="17">i<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">&lt;<pos:position pos:line="63" pos:column="23"/></operator> <name><name pos:line="63" pos:column="21">c<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">-&gt;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="24">lists<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">-&gt;<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="31">nelts<pos:position pos:line="63" pos:column="36"/></name></name></expr>;<pos:position pos:line="63" pos:column="37"/></condition> <incr><expr><name pos:line="63" pos:column="38">i<pos:position pos:line="63" pos:column="39"/></name><operator pos:line="63" pos:column="39">++<pos:position pos:line="63" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="63" pos:column="42"/></control> <block pos:line="63" pos:column="43">{
        <expr_stmt><expr><name pos:line="64" pos:column="9">l<pos:position pos:line="64" pos:column="10"/></name> <operator pos:line="64" pos:column="11">=<pos:position pos:line="64" pos:column="12"/></operator> <operator pos:line="64" pos:column="13">&amp;<pos:position pos:line="64" pos:column="18"/></operator><operator pos:line="64" pos:column="14">(<pos:position pos:line="64" pos:column="15"/></operator><operator pos:line="64" pos:column="15">(<pos:position pos:line="64" pos:column="16"/></operator><operator pos:line="64" pos:column="16">(<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="17">cachelist<pos:position pos:line="64" pos:column="26"/></name> <operator pos:line="64" pos:column="27">*<pos:position pos:line="64" pos:column="28"/></operator><operator pos:line="64" pos:column="28">)<pos:position pos:line="64" pos:column="29"/></operator><name><name pos:line="64" pos:column="29">c<pos:position pos:line="64" pos:column="30"/></name><operator pos:line="64" pos:column="30">-&gt;<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="32">lists<pos:position pos:line="64" pos:column="37"/></name><operator pos:line="64" pos:column="37">-&gt;<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="39">elts<pos:position pos:line="64" pos:column="43"/></name></name><operator pos:line="64" pos:column="43">)<pos:position pos:line="64" pos:column="44"/></operator><index pos:line="64" pos:column="44">[<expr><name pos:line="64" pos:column="45">i<pos:position pos:line="64" pos:column="46"/></name></expr>]<pos:position pos:line="64" pos:column="47"/></index><operator pos:line="64" pos:column="47">)<pos:position pos:line="64" pos:column="48"/></operator></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><call><name pos:line="65" pos:column="13">strcmp<pos:position pos:line="65" pos:column="19"/></name><argument_list pos:line="65" pos:column="19">(<argument><expr><name><name pos:line="65" pos:column="20">l<pos:position pos:line="65" pos:column="21"/></name><operator pos:line="65" pos:column="21">-&gt;<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="23">resource<pos:position pos:line="65" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="33">res<pos:position pos:line="65" pos:column="36"/></name></expr></argument>)<pos:position pos:line="65" pos:column="37"/></argument_list></call> <operator pos:line="65" pos:column="38">==<pos:position pos:line="65" pos:column="40"/></operator> <literal type="number" pos:line="65" pos:column="41">0<pos:position pos:line="65" pos:column="42"/></literal></expr>)<pos:position pos:line="65" pos:column="43"/></condition><then pos:line="65" pos:column="43"> <block pos:line="65" pos:column="44">{
            <expr_stmt><expr><name pos:line="66" pos:column="13">e<pos:position pos:line="66" pos:column="14"/></name> <operator pos:line="66" pos:column="15">=<pos:position pos:line="66" pos:column="16"/></operator> <call><name pos:line="66" pos:column="17">apr_array_push<pos:position pos:line="66" pos:column="31"/></name><argument_list pos:line="66" pos:column="31">(<argument><expr><name><name pos:line="66" pos:column="32">l<pos:position pos:line="66" pos:column="33"/></name><operator pos:line="66" pos:column="33">-&gt;<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="35">entries<pos:position pos:line="66" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="67" pos:column="13">e<pos:position pos:line="67" pos:column="14"/></name><operator pos:line="67" pos:column="14">-&gt;<pos:position pos:line="67" pos:column="19"/></operator><name pos:line="67" pos:column="16">time<pos:position pos:line="67" pos:column="20"/></name></name>  <operator pos:line="67" pos:column="22">=<pos:position pos:line="67" pos:column="23"/></operator> <name><name pos:line="67" pos:column="24">ce<pos:position pos:line="67" pos:column="26"/></name><operator pos:line="67" pos:column="26">-&gt;<pos:position pos:line="67" pos:column="31"/></operator><name pos:line="67" pos:column="28">time<pos:position pos:line="67" pos:column="32"/></name></name></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="68" pos:column="13">e<pos:position pos:line="68" pos:column="14"/></name><operator pos:line="68" pos:column="14">-&gt;<pos:position pos:line="68" pos:column="19"/></operator><name pos:line="68" pos:column="16">key<pos:position pos:line="68" pos:column="19"/></name></name>   <operator pos:line="68" pos:column="22">=<pos:position pos:line="68" pos:column="23"/></operator> <call><name pos:line="68" pos:column="24">apr_pstrdup<pos:position pos:line="68" pos:column="35"/></name><argument_list pos:line="68" pos:column="35">(<argument><expr><name><name pos:line="68" pos:column="36">c<pos:position pos:line="68" pos:column="37"/></name><operator pos:line="68" pos:column="37">-&gt;<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="39">pool<pos:position pos:line="68" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="45">ce<pos:position pos:line="68" pos:column="47"/></name><operator pos:line="68" pos:column="47">-&gt;<pos:position pos:line="68" pos:column="52"/></operator><name pos:line="68" pos:column="49">key<pos:position pos:line="68" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="69" pos:column="13">e<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">-&gt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">value<pos:position pos:line="69" pos:column="21"/></name></name> <operator pos:line="69" pos:column="22">=<pos:position pos:line="69" pos:column="23"/></operator> <call><name pos:line="69" pos:column="24">apr_pstrdup<pos:position pos:line="69" pos:column="35"/></name><argument_list pos:line="69" pos:column="35">(<argument><expr><name><name pos:line="69" pos:column="36">c<pos:position pos:line="69" pos:column="37"/></name><operator pos:line="69" pos:column="37">-&gt;<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="39">pool<pos:position pos:line="69" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="45">ce<pos:position pos:line="69" pos:column="47"/></name><operator pos:line="69" pos:column="47">-&gt;<pos:position pos:line="69" pos:column="52"/></operator><name pos:line="69" pos:column="49">value<pos:position pos:line="69" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">cache_tlb_replace<pos:position pos:line="70" pos:column="30"/></name><argument_list pos:line="70" pos:column="30">(<argument><expr><operator pos:line="70" pos:column="31">(<pos:position pos:line="70" pos:column="32"/></operator><name pos:line="70" pos:column="32">cachetlbentry<pos:position pos:line="70" pos:column="45"/></name> <operator pos:line="70" pos:column="46">*<pos:position pos:line="70" pos:column="47"/></operator><operator pos:line="70" pos:column="47">)<pos:position pos:line="70" pos:column="48"/></operator><name><name pos:line="70" pos:column="48">l<pos:position pos:line="70" pos:column="49"/></name><operator pos:line="70" pos:column="49">-&gt;<pos:position pos:line="70" pos:column="54"/></operator><name pos:line="70" pos:column="51">tlb<pos:position pos:line="70" pos:column="54"/></name><operator pos:line="70" pos:column="54">-&gt;<pos:position pos:line="70" pos:column="59"/></operator><name pos:line="70" pos:column="56">elts<pos:position pos:line="70" pos:column="60"/></name></name></expr></argument>,
                              <argument><expr><operator pos:line="71" pos:column="31">(<pos:position pos:line="71" pos:column="32"/></operator><name pos:line="71" pos:column="32">cacheentry<pos:position pos:line="71" pos:column="42"/></name> <operator pos:line="71" pos:column="43">*<pos:position pos:line="71" pos:column="44"/></operator><operator pos:line="71" pos:column="44">)<pos:position pos:line="71" pos:column="45"/></operator><name><name pos:line="71" pos:column="45">l<pos:position pos:line="71" pos:column="46"/></name><operator pos:line="71" pos:column="46">-&gt;<pos:position pos:line="71" pos:column="51"/></operator><name pos:line="71" pos:column="48">entries<pos:position pos:line="71" pos:column="55"/></name><operator pos:line="71" pos:column="55">-&gt;<pos:position pos:line="71" pos:column="60"/></operator><name pos:line="71" pos:column="57">elts<pos:position pos:line="71" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="63">e<pos:position pos:line="71" pos:column="64"/></name></expr></argument>)<pos:position pos:line="71" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="66"/></expr_stmt>
<cpp:if pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">if<pos:position pos:line="72" pos:column="4"/></cpp:directive> <expr><name pos:line="72" pos:column="5">APR_HAS_THREADS<pos:position pos:line="72" pos:column="20"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">apr_thread_mutex_unlock<pos:position pos:line="73" pos:column="36"/></name><argument_list pos:line="73" pos:column="36">(<argument><expr><name><name pos:line="73" pos:column="37">c<pos:position pos:line="73" pos:column="38"/></name><operator pos:line="73" pos:column="38">-&gt;<pos:position pos:line="73" pos:column="43"/></operator><name pos:line="73" pos:column="40">lock<pos:position pos:line="73" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif<pos:position pos:line="74" pos:column="7"/></cpp:directive></cpp:endif>
            <return pos:line="75" pos:column="13">return;<pos:position pos:line="75" pos:column="20"/></return>
        }<pos:position pos:line="76" pos:column="10"/></block></then></if>
    }<pos:position pos:line="77" pos:column="6"/></block></for>

    <comment type="block" pos:line="79" pos:column="5">/* not reached, but when it is no problem... */</comment>
<cpp:if pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">if<pos:position pos:line="80" pos:column="4"/></cpp:directive> <expr><name pos:line="80" pos:column="5">APR_HAS_THREADS<pos:position pos:line="80" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">apr_thread_mutex_unlock<pos:position pos:line="81" pos:column="28"/></name><argument_list pos:line="81" pos:column="28">(<argument><expr><name><name pos:line="81" pos:column="29">c<pos:position pos:line="81" pos:column="30"/></name><operator pos:line="81" pos:column="30">-&gt;<pos:position pos:line="81" pos:column="35"/></operator><name pos:line="81" pos:column="32">lock<pos:position pos:line="81" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">endif<pos:position pos:line="82" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="83" pos:column="5">return;<pos:position pos:line="83" pos:column="12"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

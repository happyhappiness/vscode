<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1330_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_bucket<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">find_start_sequence<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">apr_bucket<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">dptr<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">include_ctx_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">ctx<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="2" pos:column="40">apr_bucket_brigade<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">bb<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">int<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">do_cleanup<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">len<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">c<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">buf<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">str<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name><name pos:line="7" pos:column="23">ctx<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">start_seq<pos:position pos:line="7" pos:column="37"/></name></name></expr></init></decl> ;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">slen<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><name><name pos:line="8" pos:column="23">ctx<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">start_seq_len<pos:position pos:line="8" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">pos<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="11" pos:column="5">*<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">do_cleanup<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>

    <do pos:line="13" pos:column="5">do <block pos:line="13" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">apr_status_t<pos:position pos:line="14" pos:column="21"/></name></type> <name pos:line="14" pos:column="22">rv<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><literal type="number" pos:line="14" pos:column="27">0<pos:position pos:line="14" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">read_done<pos:position pos:line="15" pos:column="22"/></name> <init pos:line="15" pos:column="23">= <expr><literal type="number" pos:line="15" pos:column="25">0<pos:position pos:line="15" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">dptr<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="37"/></condition><then pos:line="17" pos:column="37"> <block pos:line="17" pos:column="38">{
            <break pos:line="18" pos:column="13">break;<pos:position pos:line="18" pos:column="19"/></break>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>

<cpp:if pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">if<pos:position pos:line="21" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="21" pos:column="5">0<pos:position pos:line="21" pos:column="6"/></literal></expr></cpp:if>
        <comment type="block" pos:line="22" pos:column="9">/* XXX the bucket flush support is commented out for now
         * because it was causing a segfault */</comment>
        if (APR_BUCKET_IS_FLUSH(dptr)) {
            apr_bucket *old = dptr; 
            dptr = APR_BUCKET_NEXT(old);
            APR_BUCKET_REMOVE(old);
            ctx-&gt;output_now = 1;
            ctx-&gt;output_flush = 1;
        }
        else
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="32" pos:column="8">/* 0 */</comment>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">ctx<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">bytes_parsed<pos:position pos:line="33" pos:column="30"/></name></name> <operator pos:line="33" pos:column="31">&gt;=<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="34">BYTE_COUNT_THRESHOLD<pos:position pos:line="33" pos:column="54"/></name></expr>)<pos:position pos:line="33" pos:column="55"/></condition><then pos:line="33" pos:column="55"> <block pos:line="33" pos:column="56">{
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">ctx<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">output_now<pos:position pos:line="34" pos:column="28"/></name></name> <operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator> <literal type="number" pos:line="34" pos:column="31">1<pos:position pos:line="34" pos:column="32"/></literal></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then>
        <elseif pos:line="36" pos:column="9">else <if pos:line="36" pos:column="14">if <condition pos:line="36" pos:column="17">(<expr><name><name pos:line="36" pos:column="18">ctx<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">-&gt;<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="23">bytes_parsed<pos:position pos:line="36" pos:column="35"/></name></name> <operator pos:line="36" pos:column="36">&gt;<pos:position pos:line="36" pos:column="40"/></operator> <literal type="number" pos:line="36" pos:column="38">0<pos:position pos:line="36" pos:column="39"/></literal></expr>)<pos:position pos:line="36" pos:column="40"/></condition><then pos:line="36" pos:column="40"> <block pos:line="36" pos:column="41">{
            <expr_stmt><expr><name pos:line="37" pos:column="13">rv<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">apr_bucket_read<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">dptr<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="40">&amp;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="41">buf<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="46">&amp;<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="47">len<pos:position pos:line="37" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="52">APR_NONBLOCK_READ<pos:position pos:line="37" pos:column="69"/></name></expr></argument>)<pos:position pos:line="37" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><name pos:line="38" pos:column="13">read_done<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <literal type="number" pos:line="38" pos:column="25">1<pos:position pos:line="38" pos:column="26"/></literal></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><call><name pos:line="39" pos:column="17">APR_STATUS_IS_EAGAIN<pos:position pos:line="39" pos:column="37"/></name><argument_list pos:line="39" pos:column="37">(<argument><expr><name pos:line="39" pos:column="38">rv<pos:position pos:line="39" pos:column="40"/></name></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="42"/></condition><then pos:line="39" pos:column="42"> <block pos:line="39" pos:column="43">{
                <expr_stmt><expr><name><name pos:line="40" pos:column="17">ctx<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">-&gt;<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="22">output_now<pos:position pos:line="40" pos:column="32"/></name></name> <operator pos:line="40" pos:column="33">=<pos:position pos:line="40" pos:column="34"/></operator> <literal type="number" pos:line="40" pos:column="35">1<pos:position pos:line="40" pos:column="36"/></literal></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="41" pos:column="14"/></block></then></if>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">ctx<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">output_now<pos:position pos:line="44" pos:column="28"/></name></name></expr>)<pos:position pos:line="44" pos:column="29"/></condition><then pos:line="44" pos:column="29"> <block pos:line="44" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="45" pos:column="13">apr_bucket<pos:position pos:line="45" pos:column="23"/></name> <modifier pos:line="45" pos:column="24">*<pos:position pos:line="45" pos:column="25"/></modifier></type><name pos:line="45" pos:column="25">start_bucket<pos:position pos:line="45" pos:column="37"/></name></decl>;<pos:position pos:line="45" pos:column="38"/></decl_stmt>
            <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><name><name pos:line="46" pos:column="17">ctx<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">head_start_index<pos:position pos:line="46" pos:column="38"/></name></name> <operator pos:line="46" pos:column="39">&gt;<pos:position pos:line="46" pos:column="43"/></operator> <literal type="number" pos:line="46" pos:column="41">0<pos:position pos:line="46" pos:column="42"/></literal></expr>)<pos:position pos:line="46" pos:column="43"/></condition><then pos:line="46" pos:column="43"> <block pos:line="46" pos:column="44">{
                <expr_stmt><expr><name pos:line="47" pos:column="17">start_bucket<pos:position pos:line="47" pos:column="29"/></name> <operator pos:line="47" pos:column="30">=<pos:position pos:line="47" pos:column="31"/></operator> <name><name pos:line="47" pos:column="32">ctx<pos:position pos:line="47" pos:column="35"/></name><operator pos:line="47" pos:column="35">-&gt;<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="37">head_start_bucket<pos:position pos:line="47" pos:column="54"/></name></name></expr>;<pos:position pos:line="47" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="48" pos:column="17">apr_bucket_split<pos:position pos:line="48" pos:column="33"/></name><argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">start_bucket<pos:position pos:line="48" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="48">ctx<pos:position pos:line="48" pos:column="51"/></name><operator pos:line="48" pos:column="51">-&gt;<pos:position pos:line="48" pos:column="56"/></operator><name pos:line="48" pos:column="53">head_start_index<pos:position pos:line="48" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="71"/></expr_stmt>
                <expr_stmt><expr><name pos:line="49" pos:column="17">start_bucket<pos:position pos:line="49" pos:column="29"/></name> <operator pos:line="49" pos:column="30">=<pos:position pos:line="49" pos:column="31"/></operator> <call><name pos:line="49" pos:column="32">APR_BUCKET_NEXT<pos:position pos:line="49" pos:column="47"/></name><argument_list pos:line="49" pos:column="47">(<argument><expr><name pos:line="49" pos:column="48">start_bucket<pos:position pos:line="49" pos:column="60"/></name></expr></argument>)<pos:position pos:line="49" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="50" pos:column="17">ctx<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">-&gt;<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="22">head_start_index<pos:position pos:line="50" pos:column="38"/></name></name> <operator pos:line="50" pos:column="39">=<pos:position pos:line="50" pos:column="40"/></operator> <literal type="number" pos:line="50" pos:column="41">0<pos:position pos:line="50" pos:column="42"/></literal></expr>;<pos:position pos:line="50" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="51" pos:column="17">ctx<pos:position pos:line="51" pos:column="20"/></name><operator pos:line="51" pos:column="20">-&gt;<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="22">head_start_bucket<pos:position pos:line="51" pos:column="39"/></name></name> <operator pos:line="51" pos:column="40">=<pos:position pos:line="51" pos:column="41"/></operator> <name pos:line="51" pos:column="42">start_bucket<pos:position pos:line="51" pos:column="54"/></name></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="52" pos:column="17">ctx<pos:position pos:line="52" pos:column="20"/></name><operator pos:line="52" pos:column="20">-&gt;<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="22">parse_pos<pos:position pos:line="52" pos:column="31"/></name></name> <operator pos:line="52" pos:column="32">=<pos:position pos:line="52" pos:column="33"/></operator> <literal type="number" pos:line="52" pos:column="34">0<pos:position pos:line="52" pos:column="35"/></literal></expr>;<pos:position pos:line="52" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="53" pos:column="17">ctx<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">-&gt;<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="22">state<pos:position pos:line="53" pos:column="27"/></name></name> <operator pos:line="53" pos:column="28">=<pos:position pos:line="53" pos:column="29"/></operator> <name pos:line="53" pos:column="30">PRE_HEAD<pos:position pos:line="53" pos:column="38"/></name></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="54" pos:column="14"/></block></then>
            <else pos:line="55" pos:column="13">else <block pos:line="55" pos:column="18">{
                <expr_stmt><expr><name pos:line="56" pos:column="17">start_bucket<pos:position pos:line="56" pos:column="29"/></name> <operator pos:line="56" pos:column="30">=<pos:position pos:line="56" pos:column="31"/></operator> <name pos:line="56" pos:column="32">dptr<pos:position pos:line="56" pos:column="36"/></name></expr>;<pos:position pos:line="56" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="57" pos:column="14"/></block></else></if>
            <return pos:line="58" pos:column="13">return <expr><name pos:line="58" pos:column="20">start_bucket<pos:position pos:line="58" pos:column="32"/></name></expr>;<pos:position pos:line="58" pos:column="33"/></return>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>

        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">!<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">read_done<pos:position pos:line="61" pos:column="23"/></name></expr>)<pos:position pos:line="61" pos:column="24"/></condition><then pos:line="61" pos:column="24"> <block pos:line="61" pos:column="25">{
            <expr_stmt><expr><name pos:line="62" pos:column="13">rv<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <call><name pos:line="62" pos:column="18">apr_bucket_read<pos:position pos:line="62" pos:column="33"/></name><argument_list pos:line="62" pos:column="33">(<argument><expr><name pos:line="62" pos:column="34">dptr<pos:position pos:line="62" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="40">&amp;<pos:position pos:line="62" pos:column="45"/></operator><name pos:line="62" pos:column="41">buf<pos:position pos:line="62" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="46">&amp;<pos:position pos:line="62" pos:column="51"/></operator><name pos:line="62" pos:column="47">len<pos:position pos:line="62" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="52">APR_BLOCK_READ<pos:position pos:line="62" pos:column="66"/></name></expr></argument>)<pos:position pos:line="62" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">!<pos:position pos:line="64" pos:column="14"/></operator><call><name pos:line="64" pos:column="14">APR_STATUS_IS_SUCCESS<pos:position pos:line="64" pos:column="35"/></name><argument_list pos:line="64" pos:column="35">(<argument><expr><name pos:line="64" pos:column="36">rv<pos:position pos:line="64" pos:column="38"/></name></expr></argument>)<pos:position pos:line="64" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="40"/></condition><then pos:line="64" pos:column="40"> <block pos:line="64" pos:column="41">{
            <expr_stmt><expr><name><name pos:line="65" pos:column="13">ctx<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">-&gt;<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="18">status<pos:position pos:line="65" pos:column="24"/></name></name> <operator pos:line="65" pos:column="25">=<pos:position pos:line="65" pos:column="26"/></operator> <name pos:line="65" pos:column="27">rv<pos:position pos:line="65" pos:column="29"/></name></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>
            <return pos:line="66" pos:column="13">return <expr><name pos:line="66" pos:column="20">NULL<pos:position pos:line="66" pos:column="24"/></name></expr>;<pos:position pos:line="66" pos:column="25"/></return>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>

        <if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name pos:line="69" pos:column="13">len<pos:position pos:line="69" pos:column="16"/></name> <operator pos:line="69" pos:column="17">==<pos:position pos:line="69" pos:column="19"/></operator> <literal type="number" pos:line="69" pos:column="20">0<pos:position pos:line="69" pos:column="21"/></literal></expr>)<pos:position pos:line="69" pos:column="22"/></condition><then pos:line="69" pos:column="22"> <block pos:line="69" pos:column="23">{ <comment type="block" pos:line="69" pos:column="25">/* end of pipe? */</comment>
            <break pos:line="70" pos:column="13">break;<pos:position pos:line="70" pos:column="19"/></break>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="73" pos:column="9">/* Set our buffer to use. */</comment>
        <expr_stmt><expr><name pos:line="74" pos:column="9">c<pos:position pos:line="74" pos:column="10"/></name> <operator pos:line="74" pos:column="11">=<pos:position pos:line="74" pos:column="12"/></operator> <name pos:line="74" pos:column="13">buf<pos:position pos:line="74" pos:column="16"/></name></expr>;<pos:position pos:line="74" pos:column="17"/></expr_stmt>

        <comment type="block" pos:line="76" pos:column="9">/* The last bucket had a left over partial match that we need to
         * complete. 
         */</comment>
        <if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name><name pos:line="79" pos:column="13">ctx<pos:position pos:line="79" pos:column="16"/></name><operator pos:line="79" pos:column="16">-&gt;<pos:position pos:line="79" pos:column="21"/></operator><name pos:line="79" pos:column="18">state<pos:position pos:line="79" pos:column="23"/></name></name> <operator pos:line="79" pos:column="24">==<pos:position pos:line="79" pos:column="26"/></operator> <name pos:line="79" pos:column="27">PARSE_HEAD<pos:position pos:line="79" pos:column="37"/></name></expr>)<pos:position pos:line="79" pos:column="38"/></condition><then pos:line="79" pos:column="38">
        <block pos:line="80" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="81" pos:column="13">apr_size_t<pos:position pos:line="81" pos:column="23"/></name></type> <name pos:line="81" pos:column="24">tmpLen<pos:position pos:line="81" pos:column="30"/></name></decl>;<pos:position pos:line="81" pos:column="31"/></decl_stmt>
            <expr_stmt><expr><name pos:line="82" pos:column="13">tmpLen<pos:position pos:line="82" pos:column="19"/></name> <operator pos:line="82" pos:column="20">=<pos:position pos:line="82" pos:column="21"/></operator> <ternary><condition><expr><operator pos:line="82" pos:column="22">(<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="23">len<pos:position pos:line="82" pos:column="26"/></name> <operator pos:line="82" pos:column="27">&lt;<pos:position pos:line="82" pos:column="31"/></operator> <operator pos:line="82" pos:column="29">(<pos:position pos:line="82" pos:column="30"/></operator><name pos:line="82" pos:column="30">slen<pos:position pos:line="82" pos:column="34"/></name> <operator pos:line="82" pos:column="35">-<pos:position pos:line="82" pos:column="36"/></operator> <literal type="number" pos:line="82" pos:column="37">1<pos:position pos:line="82" pos:column="38"/></literal><operator pos:line="82" pos:column="38">)<pos:position pos:line="82" pos:column="39"/></operator><operator pos:line="82" pos:column="39">)<pos:position pos:line="82" pos:column="40"/></operator></expr> ?<pos:position pos:line="82" pos:column="42"/></condition><then pos:line="82" pos:column="42"> <expr><name pos:line="82" pos:column="43">len<pos:position pos:line="82" pos:column="46"/></name></expr> <pos:position pos:line="82" pos:column="47"/></then><else pos:line="82" pos:column="47">: <expr><operator pos:line="82" pos:column="49">(<pos:position pos:line="82" pos:column="50"/></operator><name pos:line="82" pos:column="50">slen<pos:position pos:line="82" pos:column="54"/></name> <operator pos:line="82" pos:column="55">-<pos:position pos:line="82" pos:column="56"/></operator> <literal type="number" pos:line="82" pos:column="57">1<pos:position pos:line="82" pos:column="58"/></literal><operator pos:line="82" pos:column="58">)<pos:position pos:line="82" pos:column="59"/></operator></expr></else></ternary></expr>;<pos:position pos:line="82" pos:column="60"/></expr_stmt>

            <while pos:line="84" pos:column="13">while <condition pos:line="84" pos:column="19">(<expr><name pos:line="84" pos:column="20">c<pos:position pos:line="84" pos:column="21"/></name> <operator pos:line="84" pos:column="22">&lt;<pos:position pos:line="84" pos:column="26"/></operator> <name pos:line="84" pos:column="24">buf<pos:position pos:line="84" pos:column="27"/></name> <operator pos:line="84" pos:column="28">+<pos:position pos:line="84" pos:column="29"/></operator> <name pos:line="84" pos:column="30">tmpLen<pos:position pos:line="84" pos:column="36"/></name> <operator pos:line="84" pos:column="37">&amp;&amp;<pos:position pos:line="84" pos:column="47"/></operator> <operator pos:line="84" pos:column="40">*<pos:position pos:line="84" pos:column="41"/></operator><name pos:line="84" pos:column="41">c<pos:position pos:line="84" pos:column="42"/></name> <operator pos:line="84" pos:column="43">==<pos:position pos:line="84" pos:column="45"/></operator> <name><name pos:line="84" pos:column="46">str<pos:position pos:line="84" pos:column="49"/></name><index pos:line="84" pos:column="49">[<expr><name><name pos:line="84" pos:column="50">ctx<pos:position pos:line="84" pos:column="53"/></name><operator pos:line="84" pos:column="53">-&gt;<pos:position pos:line="84" pos:column="58"/></operator><name pos:line="84" pos:column="55">parse_pos<pos:position pos:line="84" pos:column="64"/></name></name></expr>]<pos:position pos:line="84" pos:column="65"/></index></name></expr>)<pos:position pos:line="84" pos:column="66"/></condition>
            <block pos:line="85" pos:column="13">{
                <expr_stmt><expr><name pos:line="86" pos:column="17">c<pos:position pos:line="86" pos:column="18"/></name><operator pos:line="86" pos:column="18">++<pos:position pos:line="86" pos:column="20"/></operator></expr>;<pos:position pos:line="86" pos:column="21"/></expr_stmt> 
                <expr_stmt><expr><name><name pos:line="87" pos:column="17">ctx<pos:position pos:line="87" pos:column="20"/></name><operator pos:line="87" pos:column="20">-&gt;<pos:position pos:line="87" pos:column="25"/></operator><name pos:line="87" pos:column="22">parse_pos<pos:position pos:line="87" pos:column="31"/></name></name><operator pos:line="87" pos:column="31">++<pos:position pos:line="87" pos:column="33"/></operator></expr>;<pos:position pos:line="87" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="88" pos:column="14"/></block></while>

            <if pos:line="90" pos:column="13">if <condition pos:line="90" pos:column="16">(<expr><name><name pos:line="90" pos:column="17">str<pos:position pos:line="90" pos:column="20"/></name><index pos:line="90" pos:column="20">[<expr><name><name pos:line="90" pos:column="21">ctx<pos:position pos:line="90" pos:column="24"/></name><operator pos:line="90" pos:column="24">-&gt;<pos:position pos:line="90" pos:column="29"/></operator><name pos:line="90" pos:column="26">parse_pos<pos:position pos:line="90" pos:column="35"/></name></name></expr>]<pos:position pos:line="90" pos:column="36"/></index></name> <operator pos:line="90" pos:column="37">==<pos:position pos:line="90" pos:column="39"/></operator> <literal type="char" pos:line="90" pos:column="40">'\0'<pos:position pos:line="90" pos:column="44"/></literal></expr>)<pos:position pos:line="90" pos:column="45"/></condition><then pos:line="90" pos:column="45">
            <block pos:line="91" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="92" pos:column="17">ctx<pos:position pos:line="92" pos:column="20"/></name><operator pos:line="92" pos:column="20">-&gt;<pos:position pos:line="92" pos:column="25"/></operator><name pos:line="92" pos:column="22">bytes_parsed<pos:position pos:line="92" pos:column="34"/></name></name> <operator pos:line="92" pos:column="35">+=<pos:position pos:line="92" pos:column="37"/></operator> <name pos:line="92" pos:column="38">c<pos:position pos:line="92" pos:column="39"/></name> <operator pos:line="92" pos:column="40">-<pos:position pos:line="92" pos:column="41"/></operator> <name pos:line="92" pos:column="42">buf<pos:position pos:line="92" pos:column="45"/></name></expr>;<pos:position pos:line="92" pos:column="46"/></expr_stmt>
                <return pos:line="93" pos:column="17">return <expr><call><name pos:line="93" pos:column="24">found_start_sequence<pos:position pos:line="93" pos:column="44"/></name><argument_list pos:line="93" pos:column="44">(<argument><expr><name pos:line="93" pos:column="45">dptr<pos:position pos:line="93" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="51">ctx<pos:position pos:line="93" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="56">c<pos:position pos:line="93" pos:column="57"/></name> <operator pos:line="93" pos:column="58">-<pos:position pos:line="93" pos:column="59"/></operator> <name pos:line="93" pos:column="60">buf<pos:position pos:line="93" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="65">len<pos:position pos:line="93" pos:column="68"/></name></expr></argument>)<pos:position pos:line="93" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="70"/></return>
            }<pos:position pos:line="94" pos:column="14"/></block></then>
            <elseif pos:line="95" pos:column="13">else <if pos:line="95" pos:column="18">if <condition pos:line="95" pos:column="21">(<expr><name pos:line="95" pos:column="22">c<pos:position pos:line="95" pos:column="23"/></name> <operator pos:line="95" pos:column="24">==<pos:position pos:line="95" pos:column="26"/></operator> <name pos:line="95" pos:column="27">buf<pos:position pos:line="95" pos:column="30"/></name> <operator pos:line="95" pos:column="31">+<pos:position pos:line="95" pos:column="32"/></operator> <name pos:line="95" pos:column="33">tmpLen<pos:position pos:line="95" pos:column="39"/></name></expr>)<pos:position pos:line="95" pos:column="40"/></condition><then pos:line="95" pos:column="40"> <block pos:line="95" pos:column="41">{
                <expr_stmt><expr><name pos:line="96" pos:column="17">dptr<pos:position pos:line="96" pos:column="21"/></name> <operator pos:line="96" pos:column="22">=<pos:position pos:line="96" pos:column="23"/></operator> <call><name pos:line="96" pos:column="24">APR_BUCKET_NEXT<pos:position pos:line="96" pos:column="39"/></name><argument_list pos:line="96" pos:column="39">(<argument><expr><name pos:line="96" pos:column="40">dptr<pos:position pos:line="96" pos:column="44"/></name></expr></argument>)<pos:position pos:line="96" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="46"/></expr_stmt>
                <continue pos:line="97" pos:column="17">continue;<pos:position pos:line="97" pos:column="26"/></continue>
            }<pos:position pos:line="98" pos:column="14"/></block></then></if></elseif></if>

            <comment type="block" pos:line="100" pos:column="13">/* False alarm... 
             */</comment>
            <expr_stmt><expr><call><name pos:line="102" pos:column="13">APR_BRIGADE_PREPEND<pos:position pos:line="102" pos:column="32"/></name><argument_list pos:line="102" pos:column="32">(<argument><expr><name pos:line="102" pos:column="33">bb<pos:position pos:line="102" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="37">ctx<pos:position pos:line="102" pos:column="40"/></name><operator pos:line="102" pos:column="40">-&gt;<pos:position pos:line="102" pos:column="45"/></operator><name pos:line="102" pos:column="42">ssi_tag_brigade<pos:position pos:line="102" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="59"/></expr_stmt>

            <comment type="block" pos:line="104" pos:column="13">/* We know we are at the beginning of this bucket so
             *   we can just prepend the saved bytes from the
             *   ssi_tag_brigade (which empties the ssi_tag_brigade)
             *   and continue processing.
             * We do not need to set do_cleanup beacuse the
             *   prepend takes care of that.
             */</comment>
            <expr_stmt><expr><name><name pos:line="111" pos:column="13">ctx<pos:position pos:line="111" pos:column="16"/></name><operator pos:line="111" pos:column="16">-&gt;<pos:position pos:line="111" pos:column="21"/></operator><name pos:line="111" pos:column="18">state<pos:position pos:line="111" pos:column="23"/></name></name> <operator pos:line="111" pos:column="24">=<pos:position pos:line="111" pos:column="25"/></operator> <name pos:line="111" pos:column="26">PRE_HEAD<pos:position pos:line="111" pos:column="34"/></name></expr>;<pos:position pos:line="111" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="112" pos:column="13">ctx<pos:position pos:line="112" pos:column="16"/></name><operator pos:line="112" pos:column="16">-&gt;<pos:position pos:line="112" pos:column="21"/></operator><name pos:line="112" pos:column="18">head_start_bucket<pos:position pos:line="112" pos:column="35"/></name></name> <operator pos:line="112" pos:column="36">=<pos:position pos:line="112" pos:column="37"/></operator> <name pos:line="112" pos:column="38">NULL<pos:position pos:line="112" pos:column="42"/></name></expr>;<pos:position pos:line="112" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="113" pos:column="13">ctx<pos:position pos:line="113" pos:column="16"/></name><operator pos:line="113" pos:column="16">-&gt;<pos:position pos:line="113" pos:column="21"/></operator><name pos:line="113" pos:column="18">head_start_index<pos:position pos:line="113" pos:column="34"/></name></name> <operator pos:line="113" pos:column="35">=<pos:position pos:line="113" pos:column="36"/></operator> <literal type="number" pos:line="113" pos:column="37">0<pos:position pos:line="113" pos:column="38"/></literal></expr>;<pos:position pos:line="113" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="114" pos:column="10"/></block></then></if>

        <if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><name pos:line="116" pos:column="13">len<pos:position pos:line="116" pos:column="16"/></name></expr>)<pos:position pos:line="116" pos:column="17"/></condition><then pos:line="116" pos:column="17">
        <block pos:line="117" pos:column="9">{
            <expr_stmt><expr><name pos:line="118" pos:column="13">pos<pos:position pos:line="118" pos:column="16"/></name> <operator pos:line="118" pos:column="17">=<pos:position pos:line="118" pos:column="18"/></operator> <call><name pos:line="118" pos:column="19">bndm<pos:position pos:line="118" pos:column="23"/></name><argument_list pos:line="118" pos:column="23">(<argument><expr><name pos:line="118" pos:column="24">str<pos:position pos:line="118" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="29">slen<pos:position pos:line="118" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="35">c<pos:position pos:line="118" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="38">len<pos:position pos:line="118" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="43">ctx<pos:position pos:line="118" pos:column="46"/></name><operator pos:line="118" pos:column="46">-&gt;<pos:position pos:line="118" pos:column="51"/></operator><name pos:line="118" pos:column="48">start_seq_pat<pos:position pos:line="118" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="63"/></expr_stmt>
            <if pos:line="119" pos:column="13">if <condition pos:line="119" pos:column="16">(<expr><name pos:line="119" pos:column="17">pos<pos:position pos:line="119" pos:column="20"/></name> <operator pos:line="119" pos:column="21">!=<pos:position pos:line="119" pos:column="23"/></operator> <name pos:line="119" pos:column="24">len<pos:position pos:line="119" pos:column="27"/></name></expr>)<pos:position pos:line="119" pos:column="28"/></condition><then pos:line="119" pos:column="28">
            <block pos:line="120" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="121" pos:column="17">ctx<pos:position pos:line="121" pos:column="20"/></name><operator pos:line="121" pos:column="20">-&gt;<pos:position pos:line="121" pos:column="25"/></operator><name pos:line="121" pos:column="22">head_start_bucket<pos:position pos:line="121" pos:column="39"/></name></name> <operator pos:line="121" pos:column="40">=<pos:position pos:line="121" pos:column="41"/></operator> <name pos:line="121" pos:column="42">dptr<pos:position pos:line="121" pos:column="46"/></name></expr>;<pos:position pos:line="121" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="122" pos:column="17">ctx<pos:position pos:line="122" pos:column="20"/></name><operator pos:line="122" pos:column="20">-&gt;<pos:position pos:line="122" pos:column="25"/></operator><name pos:line="122" pos:column="22">head_start_index<pos:position pos:line="122" pos:column="38"/></name></name> <operator pos:line="122" pos:column="39">=<pos:position pos:line="122" pos:column="40"/></operator> <name pos:line="122" pos:column="41">pos<pos:position pos:line="122" pos:column="44"/></name></expr>;<pos:position pos:line="122" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="123" pos:column="17">ctx<pos:position pos:line="123" pos:column="20"/></name><operator pos:line="123" pos:column="20">-&gt;<pos:position pos:line="123" pos:column="25"/></operator><name pos:line="123" pos:column="22">bytes_parsed<pos:position pos:line="123" pos:column="34"/></name></name> <operator pos:line="123" pos:column="35">+=<pos:position pos:line="123" pos:column="37"/></operator> <name pos:line="123" pos:column="38">pos<pos:position pos:line="123" pos:column="41"/></name> <operator pos:line="123" pos:column="42">+<pos:position pos:line="123" pos:column="43"/></operator> <name pos:line="123" pos:column="44">slen<pos:position pos:line="123" pos:column="48"/></name></expr>;<pos:position pos:line="123" pos:column="49"/></expr_stmt>
                <return pos:line="124" pos:column="17">return <expr><call><name pos:line="124" pos:column="24">found_start_sequence<pos:position pos:line="124" pos:column="44"/></name><argument_list pos:line="124" pos:column="44">(<argument><expr><name pos:line="124" pos:column="45">dptr<pos:position pos:line="124" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="51">ctx<pos:position pos:line="124" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="56">pos<pos:position pos:line="124" pos:column="59"/></name> <operator pos:line="124" pos:column="60">+<pos:position pos:line="124" pos:column="61"/></operator> <name pos:line="124" pos:column="62">slen<pos:position pos:line="124" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="68">len<pos:position pos:line="124" pos:column="71"/></name></expr></argument>)<pos:position pos:line="124" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="73"/></return>
            }<pos:position pos:line="125" pos:column="14"/></block></then></if>
        }<pos:position pos:line="126" pos:column="10"/></block></then></if>
        
        <comment type="block" pos:line="128" pos:column="9">/* Consider the case where we have &lt;!-- at the end of the bucket. */</comment>
        <if pos:line="129" pos:column="9">if <condition pos:line="129" pos:column="12">(<expr><name pos:line="129" pos:column="13">len<pos:position pos:line="129" pos:column="16"/></name> <operator pos:line="129" pos:column="17">&gt;<pos:position pos:line="129" pos:column="21"/></operator> <name pos:line="129" pos:column="19">slen<pos:position pos:line="129" pos:column="23"/></name></expr>)<pos:position pos:line="129" pos:column="24"/></condition><then pos:line="129" pos:column="24"> <block pos:line="129" pos:column="25">{
            <expr_stmt><expr><name><name pos:line="130" pos:column="13">ctx<pos:position pos:line="130" pos:column="16"/></name><operator pos:line="130" pos:column="16">-&gt;<pos:position pos:line="130" pos:column="21"/></operator><name pos:line="130" pos:column="18">bytes_parsed<pos:position pos:line="130" pos:column="30"/></name></name> <operator pos:line="130" pos:column="31">+=<pos:position pos:line="130" pos:column="33"/></operator> <operator pos:line="130" pos:column="34">(<pos:position pos:line="130" pos:column="35"/></operator><name pos:line="130" pos:column="35">len<pos:position pos:line="130" pos:column="38"/></name> <operator pos:line="130" pos:column="39">-<pos:position pos:line="130" pos:column="40"/></operator> <name pos:line="130" pos:column="41">slen<pos:position pos:line="130" pos:column="45"/></name><operator pos:line="130" pos:column="45">)<pos:position pos:line="130" pos:column="46"/></operator></expr>;<pos:position pos:line="130" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name pos:line="131" pos:column="13">c<pos:position pos:line="131" pos:column="14"/></name> <operator pos:line="131" pos:column="15">=<pos:position pos:line="131" pos:column="16"/></operator> <name pos:line="131" pos:column="17">buf<pos:position pos:line="131" pos:column="20"/></name> <operator pos:line="131" pos:column="21">+<pos:position pos:line="131" pos:column="22"/></operator> <name pos:line="131" pos:column="23">len<pos:position pos:line="131" pos:column="26"/></name> <operator pos:line="131" pos:column="27">-<pos:position pos:line="131" pos:column="28"/></operator> <name pos:line="131" pos:column="29">slen<pos:position pos:line="131" pos:column="33"/></name></expr>;<pos:position pos:line="131" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="132" pos:column="10"/></block></then>
        <else pos:line="133" pos:column="9">else <block pos:line="133" pos:column="14">{
            <expr_stmt><expr><name pos:line="134" pos:column="13">c<pos:position pos:line="134" pos:column="14"/></name> <operator pos:line="134" pos:column="15">=<pos:position pos:line="134" pos:column="16"/></operator> <name pos:line="134" pos:column="17">buf<pos:position pos:line="134" pos:column="20"/></name></expr>;<pos:position pos:line="134" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="135" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name><name pos:line="136" pos:column="9">ctx<pos:position pos:line="136" pos:column="12"/></name><operator pos:line="136" pos:column="12">-&gt;<pos:position pos:line="136" pos:column="17"/></operator><name pos:line="136" pos:column="14">parse_pos<pos:position pos:line="136" pos:column="23"/></name></name> <operator pos:line="136" pos:column="24">=<pos:position pos:line="136" pos:column="25"/></operator> <literal type="number" pos:line="136" pos:column="26">0<pos:position pos:line="136" pos:column="27"/></literal></expr>;<pos:position pos:line="136" pos:column="28"/></expr_stmt>

        <while pos:line="138" pos:column="9">while <condition pos:line="138" pos:column="15">(<expr><name pos:line="138" pos:column="16">c<pos:position pos:line="138" pos:column="17"/></name> <operator pos:line="138" pos:column="18">&lt;<pos:position pos:line="138" pos:column="22"/></operator> <name pos:line="138" pos:column="20">buf<pos:position pos:line="138" pos:column="23"/></name> <operator pos:line="138" pos:column="24">+<pos:position pos:line="138" pos:column="25"/></operator> <name pos:line="138" pos:column="26">len<pos:position pos:line="138" pos:column="29"/></name></expr>)<pos:position pos:line="138" pos:column="30"/></condition>
        <block pos:line="139" pos:column="9">{
            <if pos:line="140" pos:column="13">if <condition pos:line="140" pos:column="16">(<expr><operator pos:line="140" pos:column="17">*<pos:position pos:line="140" pos:column="18"/></operator><name pos:line="140" pos:column="18">c<pos:position pos:line="140" pos:column="19"/></name> <operator pos:line="140" pos:column="20">==<pos:position pos:line="140" pos:column="22"/></operator> <name><name pos:line="140" pos:column="23">str<pos:position pos:line="140" pos:column="26"/></name><index pos:line="140" pos:column="26">[<expr><name><name pos:line="140" pos:column="27">ctx<pos:position pos:line="140" pos:column="30"/></name><operator pos:line="140" pos:column="30">-&gt;<pos:position pos:line="140" pos:column="35"/></operator><name pos:line="140" pos:column="32">parse_pos<pos:position pos:line="140" pos:column="41"/></name></name></expr>]<pos:position pos:line="140" pos:column="42"/></index></name></expr>)<pos:position pos:line="140" pos:column="43"/></condition><then pos:line="140" pos:column="43"> <block pos:line="140" pos:column="44">{
                <if pos:line="141" pos:column="17">if <condition pos:line="141" pos:column="20">(<expr><name><name pos:line="141" pos:column="21">ctx<pos:position pos:line="141" pos:column="24"/></name><operator pos:line="141" pos:column="24">-&gt;<pos:position pos:line="141" pos:column="29"/></operator><name pos:line="141" pos:column="26">state<pos:position pos:line="141" pos:column="31"/></name></name> <operator pos:line="141" pos:column="32">==<pos:position pos:line="141" pos:column="34"/></operator> <name pos:line="141" pos:column="35">PRE_HEAD<pos:position pos:line="141" pos:column="43"/></name></expr>)<pos:position pos:line="141" pos:column="44"/></condition><then pos:line="141" pos:column="44"> <block pos:line="141" pos:column="45">{
                    <expr_stmt><expr><name><name pos:line="142" pos:column="21">ctx<pos:position pos:line="142" pos:column="24"/></name><operator pos:line="142" pos:column="24">-&gt;<pos:position pos:line="142" pos:column="29"/></operator><name pos:line="142" pos:column="26">state<pos:position pos:line="142" pos:column="31"/></name></name> <operator pos:line="142" pos:column="32">=<pos:position pos:line="142" pos:column="33"/></operator> <name pos:line="142" pos:column="34">PARSE_HEAD<pos:position pos:line="142" pos:column="44"/></name></expr>;<pos:position pos:line="142" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="143" pos:column="21">ctx<pos:position pos:line="143" pos:column="24"/></name><operator pos:line="143" pos:column="24">-&gt;<pos:position pos:line="143" pos:column="29"/></operator><name pos:line="143" pos:column="26">head_start_bucket<pos:position pos:line="143" pos:column="43"/></name></name> <operator pos:line="143" pos:column="44">=<pos:position pos:line="143" pos:column="45"/></operator> <name pos:line="143" pos:column="46">dptr<pos:position pos:line="143" pos:column="50"/></name></expr>;<pos:position pos:line="143" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="144" pos:column="21">ctx<pos:position pos:line="144" pos:column="24"/></name><operator pos:line="144" pos:column="24">-&gt;<pos:position pos:line="144" pos:column="29"/></operator><name pos:line="144" pos:column="26">head_start_index<pos:position pos:line="144" pos:column="42"/></name></name> <operator pos:line="144" pos:column="43">=<pos:position pos:line="144" pos:column="44"/></operator> <name pos:line="144" pos:column="45">c<pos:position pos:line="144" pos:column="46"/></name> <operator pos:line="144" pos:column="47">-<pos:position pos:line="144" pos:column="48"/></operator> <name pos:line="144" pos:column="49">buf<pos:position pos:line="144" pos:column="52"/></name></expr>;<pos:position pos:line="144" pos:column="53"/></expr_stmt>
                }<pos:position pos:line="145" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name><name pos:line="146" pos:column="17">ctx<pos:position pos:line="146" pos:column="20"/></name><operator pos:line="146" pos:column="20">-&gt;<pos:position pos:line="146" pos:column="25"/></operator><name pos:line="146" pos:column="22">parse_pos<pos:position pos:line="146" pos:column="31"/></name></name><operator pos:line="146" pos:column="31">++<pos:position pos:line="146" pos:column="33"/></operator></expr>;<pos:position pos:line="146" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><name pos:line="147" pos:column="17">c<pos:position pos:line="147" pos:column="18"/></name><operator pos:line="147" pos:column="18">++<pos:position pos:line="147" pos:column="20"/></operator></expr>;<pos:position pos:line="147" pos:column="21"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="148" pos:column="17">ctx<pos:position pos:line="148" pos:column="20"/></name><operator pos:line="148" pos:column="20">-&gt;<pos:position pos:line="148" pos:column="25"/></operator><name pos:line="148" pos:column="22">bytes_parsed<pos:position pos:line="148" pos:column="34"/></name></name><operator pos:line="148" pos:column="34">++<pos:position pos:line="148" pos:column="36"/></operator></expr>;<pos:position pos:line="148" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="149" pos:column="14"/></block></then>
            <elseif pos:line="150" pos:column="13">else <if pos:line="150" pos:column="18">if <condition pos:line="150" pos:column="21">(<expr><name><name pos:line="150" pos:column="22">ctx<pos:position pos:line="150" pos:column="25"/></name><operator pos:line="150" pos:column="25">-&gt;<pos:position pos:line="150" pos:column="30"/></operator><name pos:line="150" pos:column="27">parse_pos<pos:position pos:line="150" pos:column="36"/></name></name> <operator pos:line="150" pos:column="37">!=<pos:position pos:line="150" pos:column="39"/></operator> <literal type="number" pos:line="150" pos:column="40">0<pos:position pos:line="150" pos:column="41"/></literal></expr>)<pos:position pos:line="150" pos:column="42"/></condition><then pos:line="150" pos:column="42"> 
            <block pos:line="151" pos:column="13">{
                <comment type="block" pos:line="152" pos:column="17">/* DO NOT INCREMENT c IN THIS BLOCK!
                 * Don't increment bytes_parsed either.
                 * This block is just to reset the indexes and
                 *   pointers related to parsing the tag start_sequence.
                 * The value c needs to be checked again to handle
                 *   the case where we find "&lt;&lt;!--#". We are now
                 *   looking at the second "&lt;" and need to restart
                 *   the start_sequence checking from parse_pos = 0.
                 * do_cleanup causes the stored bytes in ssi_tag_brigade
                 *   to be forwarded on and cleaned up. We may not be
                 *   able to just prepend the ssi_tag_brigade because
                 *   we may have advanced too far before we noticed this
                 *   case, so just flag it and clean it up later.
                 */</comment>
                <expr_stmt><expr><operator pos:line="166" pos:column="17">*<pos:position pos:line="166" pos:column="18"/></operator><name pos:line="166" pos:column="18">do_cleanup<pos:position pos:line="166" pos:column="28"/></name> <operator pos:line="166" pos:column="29">=<pos:position pos:line="166" pos:column="30"/></operator> <literal type="number" pos:line="166" pos:column="31">1<pos:position pos:line="166" pos:column="32"/></literal></expr>;<pos:position pos:line="166" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="167" pos:column="17">ctx<pos:position pos:line="167" pos:column="20"/></name><operator pos:line="167" pos:column="20">-&gt;<pos:position pos:line="167" pos:column="25"/></operator><name pos:line="167" pos:column="22">parse_pos<pos:position pos:line="167" pos:column="31"/></name></name> <operator pos:line="167" pos:column="32">=<pos:position pos:line="167" pos:column="33"/></operator> <literal type="number" pos:line="167" pos:column="34">0<pos:position pos:line="167" pos:column="35"/></literal></expr>;<pos:position pos:line="167" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="168" pos:column="17">ctx<pos:position pos:line="168" pos:column="20"/></name><operator pos:line="168" pos:column="20">-&gt;<pos:position pos:line="168" pos:column="25"/></operator><name pos:line="168" pos:column="22">state<pos:position pos:line="168" pos:column="27"/></name></name> <operator pos:line="168" pos:column="28">=<pos:position pos:line="168" pos:column="29"/></operator> <name pos:line="168" pos:column="30">PRE_HEAD<pos:position pos:line="168" pos:column="38"/></name></expr>;<pos:position pos:line="168" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="169" pos:column="17">ctx<pos:position pos:line="169" pos:column="20"/></name><operator pos:line="169" pos:column="20">-&gt;<pos:position pos:line="169" pos:column="25"/></operator><name pos:line="169" pos:column="22">head_start_bucket<pos:position pos:line="169" pos:column="39"/></name></name> <operator pos:line="169" pos:column="40">=<pos:position pos:line="169" pos:column="41"/></operator> <name pos:line="169" pos:column="42">NULL<pos:position pos:line="169" pos:column="46"/></name></expr>;<pos:position pos:line="169" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="170" pos:column="17">ctx<pos:position pos:line="170" pos:column="20"/></name><operator pos:line="170" pos:column="20">-&gt;<pos:position pos:line="170" pos:column="25"/></operator><name pos:line="170" pos:column="22">head_start_index<pos:position pos:line="170" pos:column="38"/></name></name> <operator pos:line="170" pos:column="39">=<pos:position pos:line="170" pos:column="40"/></operator> <literal type="number" pos:line="170" pos:column="41">0<pos:position pos:line="170" pos:column="42"/></literal></expr>;<pos:position pos:line="170" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="171" pos:column="14"/></block></then></if></elseif>
            <else pos:line="172" pos:column="13">else <block pos:line="172" pos:column="18">{
               <expr_stmt><expr><name pos:line="173" pos:column="16">c<pos:position pos:line="173" pos:column="17"/></name><operator pos:line="173" pos:column="17">++<pos:position pos:line="173" pos:column="19"/></operator></expr>;<pos:position pos:line="173" pos:column="20"/></expr_stmt>
               <expr_stmt><expr><name><name pos:line="174" pos:column="16">ctx<pos:position pos:line="174" pos:column="19"/></name><operator pos:line="174" pos:column="19">-&gt;<pos:position pos:line="174" pos:column="24"/></operator><name pos:line="174" pos:column="21">bytes_parsed<pos:position pos:line="174" pos:column="33"/></name></name><operator pos:line="174" pos:column="33">++<pos:position pos:line="174" pos:column="35"/></operator></expr>;<pos:position pos:line="174" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="175" pos:column="14"/></block></else></if>
        }<pos:position pos:line="176" pos:column="10"/></block></while>
        <expr_stmt><expr><name pos:line="177" pos:column="9">dptr<pos:position pos:line="177" pos:column="13"/></name> <operator pos:line="177" pos:column="14">=<pos:position pos:line="177" pos:column="15"/></operator> <call><name pos:line="177" pos:column="16">APR_BUCKET_NEXT<pos:position pos:line="177" pos:column="31"/></name><argument_list pos:line="177" pos:column="31">(<argument><expr><name pos:line="177" pos:column="32">dptr<pos:position pos:line="177" pos:column="36"/></name></expr></argument>)<pos:position pos:line="177" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="178" pos:column="6"/></block> while <condition pos:line="178" pos:column="13">(<expr><name pos:line="178" pos:column="14">dptr<pos:position pos:line="178" pos:column="18"/></name> <operator pos:line="178" pos:column="19">!=<pos:position pos:line="178" pos:column="21"/></operator> <call><name pos:line="178" pos:column="22">APR_BRIGADE_SENTINEL<pos:position pos:line="178" pos:column="42"/></name><argument_list pos:line="178" pos:column="42">(<argument><expr><name pos:line="178" pos:column="43">bb<pos:position pos:line="178" pos:column="45"/></name></expr></argument>)<pos:position pos:line="178" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="178" pos:column="47"/></condition>;<pos:position pos:line="178" pos:column="48"/></do>
          
  
    <return pos:line="181" pos:column="5">return <expr><name pos:line="181" pos:column="12">NULL<pos:position pos:line="181" pos:column="16"/></name></expr>;<pos:position pos:line="181" pos:column="17"/></return>
}<pos:position pos:line="182" pos:column="2"/></block></function></unit>

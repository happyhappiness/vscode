<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1657_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">handle_response<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">serf_request_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">request<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">serf_bucket_t<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">response<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">void<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">vbaton<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="4" pos:column="37">apr_pool_t<pos:position pos:line="4" pos:column="47"/></name> <modifier pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></modifier></type><name pos:line="4" pos:column="49">pool<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="54"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">s_baton_t<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">ctx<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">vbaton<pos:position pos:line="7" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">data<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">len<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">serf_status_line<pos:position pos:line="10" pos:column="21"/></name></type> <name pos:line="10" pos:column="22">sl<pos:position pos:line="10" pos:column="24"/></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">response<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">==<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">NULL<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26"> <block pos:line="12" pos:column="27">{
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">ctx<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">rstatus<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="13" pos:column="50"/></name></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">APR_EGENERAL<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* XXXXXXX: Create better error message. */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">rv<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">serf_bucket_response_status<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">response<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="48">&amp;<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="49">sl<pos:position pos:line="18" pos:column="51"/></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">rv<pos:position pos:line="19" pos:column="11"/></name></expr>)<pos:position pos:line="19" pos:column="12"/></condition><then pos:line="19" pos:column="12"> <block pos:line="19" pos:column="13">{
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">APR_STATUS_IS_EAGAIN<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><name pos:line="20" pos:column="34">rv<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="38"/></condition><then pos:line="20" pos:column="38"> <block pos:line="20" pos:column="39">{
            <return pos:line="21" pos:column="13">return <expr><name pos:line="21" pos:column="20">APR_SUCCESS<pos:position pos:line="21" pos:column="31"/></name></expr>;<pos:position pos:line="21" pos:column="32"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="24" pos:column="9">ap_log_rerror<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">APLOG_MARK<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">APLOG_ERR<pos:position pos:line="24" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="46">rv<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="50">ctx<pos:position pos:line="24" pos:column="53"/></name><operator pos:line="24" pos:column="53">-&gt;<pos:position pos:line="24" pos:column="58"/></operator><name pos:line="24" pos:column="55">r<pos:position pos:line="24" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="58">"serf_bucket_response_status..."<pos:position pos:line="24" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="92"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="26" pos:column="9">ctx<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">rstatus<pos:position pos:line="26" pos:column="21"/></name></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="26" pos:column="50"/></name></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">mpm_supprts_serf<pos:position pos:line="28" pos:column="29"/></name></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30"> <block pos:line="28" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">ap_mpm_register_timed_callback<pos:position pos:line="29" pos:column="43"/></name><argument_list pos:line="29" pos:column="43">(<argument><expr><call><name pos:line="29" pos:column="44">apr_time_from_msec<pos:position pos:line="29" pos:column="62"/></name><argument_list pos:line="29" pos:column="62">(<argument><expr><literal type="number" pos:line="29" pos:column="63">1<pos:position pos:line="29" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr></argument>,
                                           <argument><expr><name pos:line="30" pos:column="44">timed_cleanup_callback<pos:position pos:line="30" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="68">ctx<pos:position pos:line="30" pos:column="71"/></name></expr></argument>)<pos:position pos:line="30" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>

        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">rv<pos:position pos:line="33" pos:column="18"/></name></expr>;<pos:position pos:line="33" pos:column="19"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    
    <comment type="block" format="doxygen" pos:line="36" pos:column="5">/**
     * XXXXX: If I understood serf buckets better, it might be possible to not 
     * copy all of the data here, and better stream it to the client.
     **/</comment>

    <do pos:line="41" pos:column="5">do <block pos:line="41" pos:column="8">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">apr_brigade_cleanup<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name><name pos:line="42" pos:column="29">ctx<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">-&gt;<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="34">tmpbb<pos:position pos:line="42" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="43" pos:column="9">rv<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <call><name pos:line="43" pos:column="14">serf_bucket_read<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">response<pos:position pos:line="43" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="41">AP_IOBUFSIZE<pos:position pos:line="43" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="55">&amp;<pos:position pos:line="43" pos:column="60"/></operator><name pos:line="43" pos:column="56">data<pos:position pos:line="43" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="62">&amp;<pos:position pos:line="43" pos:column="67"/></operator><name pos:line="43" pos:column="63">len<pos:position pos:line="43" pos:column="66"/></name></expr></argument>)<pos:position pos:line="43" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="68"/></expr_stmt>

        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">SERF_BUCKET_READ_ERROR<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">rv<pos:position pos:line="45" pos:column="38"/></name></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="40"/></condition><then pos:line="45" pos:column="40"> <block pos:line="45" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">ap_log_rerror<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">(<argument><expr><name pos:line="46" pos:column="27">APLOG_MARK<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="39">APLOG_ERR<pos:position pos:line="46" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="50">rv<pos:position pos:line="46" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="54">ctx<pos:position pos:line="46" pos:column="57"/></name><operator pos:line="46" pos:column="57">-&gt;<pos:position pos:line="46" pos:column="62"/></operator><name pos:line="46" pos:column="59">r<pos:position pos:line="46" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="62">"serf_bucket_read(response)"<pos:position pos:line="46" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="92"/></expr_stmt>
            <return pos:line="47" pos:column="13">return <expr><name pos:line="47" pos:column="20">rv<pos:position pos:line="47" pos:column="22"/></name></expr>;<pos:position pos:line="47" pos:column="23"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>

        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">!<pos:position pos:line="50" pos:column="14"/></operator><name><name pos:line="50" pos:column="14">ctx<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">-&gt;<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="19">done_headers<pos:position pos:line="50" pos:column="31"/></name></name></expr>)<pos:position pos:line="50" pos:column="32"/></condition><then pos:line="50" pos:column="32"> <block pos:line="50" pos:column="33">{
            <decl_stmt><decl><type><name pos:line="51" pos:column="13">serf_bucket_t<pos:position pos:line="51" pos:column="26"/></name> <modifier pos:line="51" pos:column="27">*<pos:position pos:line="51" pos:column="28"/></modifier></type><name pos:line="51" pos:column="28">hdrs<pos:position pos:line="51" pos:column="32"/></name></decl>;<pos:position pos:line="51" pos:column="33"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="52" pos:column="13">serf_status_line<pos:position pos:line="52" pos:column="29"/></name></type> <name pos:line="52" pos:column="30">line<pos:position pos:line="52" pos:column="34"/></name></decl>;<pos:position pos:line="52" pos:column="35"/></decl_stmt>

            <comment type="block" pos:line="54" pos:column="13">/* TODO: improve */</comment>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">serf_bucket_response_status<pos:position pos:line="55" pos:column="40"/></name><argument_list pos:line="55" pos:column="40">(<argument><expr><name pos:line="55" pos:column="41">response<pos:position pos:line="55" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="51">&amp;<pos:position pos:line="55" pos:column="56"/></operator><name pos:line="55" pos:column="52">line<pos:position pos:line="55" pos:column="56"/></name></expr></argument>)<pos:position pos:line="55" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="56" pos:column="13">ctx<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-&gt;<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="18">r<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">-&gt;<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="21">status<pos:position pos:line="56" pos:column="27"/></name></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <name><name pos:line="56" pos:column="30">line<pos:position pos:line="56" pos:column="34"/></name><operator pos:line="56" pos:column="34">.<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="35">code<pos:position pos:line="56" pos:column="39"/></name></name></expr>;<pos:position pos:line="56" pos:column="40"/></expr_stmt>
            
            <expr_stmt><expr><name pos:line="58" pos:column="13">hdrs<pos:position pos:line="58" pos:column="17"/></name> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <call><name pos:line="58" pos:column="20">serf_bucket_response_get_headers<pos:position pos:line="58" pos:column="52"/></name><argument_list pos:line="58" pos:column="52">(<argument><expr><name pos:line="58" pos:column="53">response<pos:position pos:line="58" pos:column="61"/></name></expr></argument>)<pos:position pos:line="58" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">serf_bucket_headers_do<pos:position pos:line="59" pos:column="35"/></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name pos:line="59" pos:column="36">hdrs<pos:position pos:line="59" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="42">copy_headers_out<pos:position pos:line="59" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="60">ctx<pos:position pos:line="59" pos:column="63"/></name></expr></argument>)<pos:position pos:line="59" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="60" pos:column="13">ctx<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">-&gt;<pos:position pos:line="60" pos:column="21"/></operator><name pos:line="60" pos:column="18">done_headers<pos:position pos:line="60" pos:column="30"/></name></name> <operator pos:line="60" pos:column="31">=<pos:position pos:line="60" pos:column="32"/></operator> <literal type="number" pos:line="60" pos:column="33">1<pos:position pos:line="60" pos:column="34"/></literal></expr>;<pos:position pos:line="60" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>


        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">len<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">&gt;<pos:position pos:line="64" pos:column="21"/></operator> <literal type="number" pos:line="64" pos:column="19">0<pos:position pos:line="64" pos:column="20"/></literal></expr>)<pos:position pos:line="64" pos:column="21"/></condition><then pos:line="64" pos:column="21"> <block pos:line="64" pos:column="22">{
            <comment type="block" pos:line="65" pos:column="13">/* TODO: make APR bucket &lt;-&gt; serf bucket stuff more magical. */</comment>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">apr_brigade_write<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><name><name pos:line="66" pos:column="31">ctx<pos:position pos:line="66" pos:column="34"/></name><operator pos:line="66" pos:column="34">-&gt;<pos:position pos:line="66" pos:column="39"/></operator><name pos:line="66" pos:column="36">tmpbb<pos:position pos:line="66" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="43">NULL<pos:position pos:line="66" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="49">NULL<pos:position pos:line="66" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="55">data<pos:position pos:line="66" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="61">len<pos:position pos:line="66" pos:column="64"/></name></expr></argument>)<pos:position pos:line="66" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>

        <if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><call><name pos:line="69" pos:column="13">APR_STATUS_IS_EOF<pos:position pos:line="69" pos:column="30"/></name><argument_list pos:line="69" pos:column="30">(<argument><expr><name pos:line="69" pos:column="31">rv<pos:position pos:line="69" pos:column="33"/></name></expr></argument>)<pos:position pos:line="69" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="35"/></condition><then pos:line="69" pos:column="35"> <block pos:line="69" pos:column="36">{
            <expr_stmt><expr><name><name pos:line="70" pos:column="13">ctx<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">-&gt;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="18">keep_reading<pos:position pos:line="70" pos:column="30"/></name></name> <operator pos:line="70" pos:column="31">=<pos:position pos:line="70" pos:column="32"/></operator> <literal type="number" pos:line="70" pos:column="33">0<pos:position pos:line="70" pos:column="34"/></literal></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="72" pos:column="13">ctx<pos:position pos:line="72" pos:column="16"/></name><operator pos:line="72" pos:column="16">-&gt;<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="18">rstatus<pos:position pos:line="72" pos:column="25"/></name></name> <operator pos:line="72" pos:column="26">=<pos:position pos:line="72" pos:column="27"/></operator> <call><name pos:line="72" pos:column="28">ap_pass_brigade<pos:position pos:line="72" pos:column="43"/></name><argument_list pos:line="72" pos:column="43">(<argument><expr><name><name pos:line="72" pos:column="44">ctx<pos:position pos:line="72" pos:column="47"/></name><operator pos:line="72" pos:column="47">-&gt;<pos:position pos:line="72" pos:column="52"/></operator><name pos:line="72" pos:column="49">r<pos:position pos:line="72" pos:column="50"/></name><operator pos:line="72" pos:column="50">-&gt;<pos:position pos:line="72" pos:column="55"/></operator><name pos:line="72" pos:column="52">output_filters<pos:position pos:line="72" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="68">ctx<pos:position pos:line="72" pos:column="71"/></name><operator pos:line="72" pos:column="71">-&gt;<pos:position pos:line="72" pos:column="76"/></operator><name pos:line="72" pos:column="73">tmpbb<pos:position pos:line="72" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="80"/></expr_stmt>

            <if pos:line="74" pos:column="13">if <condition pos:line="74" pos:column="16">(<expr><name pos:line="74" pos:column="17">mpm_supprts_serf<pos:position pos:line="74" pos:column="33"/></name></expr>)<pos:position pos:line="74" pos:column="34"/></condition><then pos:line="74" pos:column="34"> <block pos:line="74" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">ap_mpm_register_timed_callback<pos:position pos:line="75" pos:column="47"/></name><argument_list pos:line="75" pos:column="47">(<argument><expr><call><name pos:line="75" pos:column="48">apr_time_from_msec<pos:position pos:line="75" pos:column="66"/></name><argument_list pos:line="75" pos:column="66">(<argument><expr><literal type="number" pos:line="75" pos:column="67">1<pos:position pos:line="75" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="69"/></argument_list></call></expr></argument>,
                                               <argument><expr><name pos:line="76" pos:column="48">timed_cleanup_callback<pos:position pos:line="76" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="72">ctx<pos:position pos:line="76" pos:column="75"/></name></expr></argument>)<pos:position pos:line="76" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="77"/></expr_stmt>
            }<pos:position pos:line="77" pos:column="14"/></block></then></if>
            <return pos:line="78" pos:column="13">return <expr><name pos:line="78" pos:column="20">APR_EOF<pos:position pos:line="78" pos:column="27"/></name></expr>;<pos:position pos:line="78" pos:column="28"/></return>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="81" pos:column="9">ctx<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">-&gt;<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="14">rstatus<pos:position pos:line="81" pos:column="21"/></name></name> <operator pos:line="81" pos:column="22">=<pos:position pos:line="81" pos:column="23"/></operator> <call><name pos:line="81" pos:column="24">ap_pass_brigade<pos:position pos:line="81" pos:column="39"/></name><argument_list pos:line="81" pos:column="39">(<argument><expr><name><name pos:line="81" pos:column="40">ctx<pos:position pos:line="81" pos:column="43"/></name><operator pos:line="81" pos:column="43">-&gt;<pos:position pos:line="81" pos:column="48"/></operator><name pos:line="81" pos:column="45">r<pos:position pos:line="81" pos:column="46"/></name><operator pos:line="81" pos:column="46">-&gt;<pos:position pos:line="81" pos:column="51"/></operator><name pos:line="81" pos:column="48">output_filters<pos:position pos:line="81" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="64">ctx<pos:position pos:line="81" pos:column="67"/></name><operator pos:line="81" pos:column="67">-&gt;<pos:position pos:line="81" pos:column="72"/></operator><name pos:line="81" pos:column="69">tmpbb<pos:position pos:line="81" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="76"/></expr_stmt>

        <comment type="block" pos:line="83" pos:column="9">/* XXXX: Should we send a flush now? */</comment>
        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><call><name pos:line="84" pos:column="13">APR_STATUS_IS_EAGAIN<pos:position pos:line="84" pos:column="33"/></name><argument_list pos:line="84" pos:column="33">(<argument><expr><name pos:line="84" pos:column="34">rv<pos:position pos:line="84" pos:column="36"/></name></expr></argument>)<pos:position pos:line="84" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="38"/></condition><then pos:line="84" pos:column="38"> <block pos:line="84" pos:column="39">{
            <return pos:line="85" pos:column="13">return <expr><name pos:line="85" pos:column="20">APR_SUCCESS<pos:position pos:line="85" pos:column="31"/></name></expr>;<pos:position pos:line="85" pos:column="32"/></return>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>

    }<pos:position pos:line="88" pos:column="6"/></block> while <condition pos:line="88" pos:column="13">(<expr><literal type="number" pos:line="88" pos:column="14">1<pos:position pos:line="88" pos:column="15"/></literal></expr>)<pos:position pos:line="88" pos:column="16"/></condition>;<pos:position pos:line="88" pos:column="17"/></do>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

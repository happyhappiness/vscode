<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2915_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">file_func<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">ap_expr_eval_ctx_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ctx<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">void<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">data<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">arg<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_file_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">fp<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">buf<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_off_t<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">offset<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">len<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_finfo_t<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">finfo<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">apr_file_open<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><operator pos:line="10" pos:column="23">&amp;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="24">fp<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">arg<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">APR_READ<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">|<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">APR_BUFFERED<pos:position pos:line="10" pos:column="54"/></name></expr></argument>,
                      <argument><expr><name pos:line="11" pos:column="23">APR_OS_DEFAULT<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="39">ctx<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">p<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call> <operator pos:line="11" pos:column="47">!=<pos:position pos:line="11" pos:column="49"/></operator> <name pos:line="11" pos:column="50">APR_SUCCESS<pos:position pos:line="11" pos:column="61"/></name></expr>)<pos:position pos:line="11" pos:column="62"/></condition><then pos:line="11" pos:column="62"> <block pos:line="11" pos:column="63">{
        <expr_stmt><expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name><name pos:line="12" pos:column="10">ctx<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">err<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <call><name pos:line="12" pos:column="21">apr_psprintf<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name><name pos:line="12" pos:column="34">ctx<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">p<pos:position pos:line="12" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="42">"Cannot open file %s"<pos:position pos:line="12" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="65">arg<pos:position pos:line="12" pos:column="68"/></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="70"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><literal type="string" pos:line="13" pos:column="16">""<pos:position pos:line="13" pos:column="18"/></literal></expr>;<pos:position pos:line="13" pos:column="19"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">apr_file_info_get<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><operator pos:line="15" pos:column="23">&amp;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="24">finfo<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">APR_FINFO_SIZE<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="47">fp<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">finfo<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">.<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">size<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">&gt;<pos:position pos:line="16" pos:column="24"/></operator> <name pos:line="16" pos:column="22">MAX_FILE_SIZE<pos:position pos:line="16" pos:column="35"/></name></expr>)<pos:position pos:line="16" pos:column="36"/></condition><then pos:line="16" pos:column="36"> <block pos:line="16" pos:column="37">{
        <expr_stmt><expr><operator pos:line="17" pos:column="9">*<pos:position pos:line="17" pos:column="10"/></operator><name><name pos:line="17" pos:column="10">ctx<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">err<pos:position pos:line="17" pos:column="18"/></name></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <call><name pos:line="17" pos:column="21">apr_psprintf<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name><name pos:line="17" pos:column="34">ctx<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">p<pos:position pos:line="17" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="42">"File %s too large"<pos:position pos:line="17" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="63">arg<pos:position pos:line="17" pos:column="66"/></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">apr_file_close<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">fp<pos:position pos:line="18" pos:column="26"/></name></expr></argument>)<pos:position pos:line="18" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><literal type="string" pos:line="19" pos:column="16">""<pos:position pos:line="19" pos:column="18"/></literal></expr>;<pos:position pos:line="19" pos:column="19"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="21" pos:column="5">len<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <operator pos:line="21" pos:column="11">(<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">apr_size_t<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">)<pos:position pos:line="21" pos:column="23"/></operator><name><name pos:line="21" pos:column="23">finfo<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">.<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="29">size<pos:position pos:line="21" pos:column="33"/></name></name></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">len<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">==<pos:position pos:line="22" pos:column="15"/></operator> <literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>)<pos:position pos:line="22" pos:column="18"/></condition><then pos:line="22" pos:column="18"> <block pos:line="22" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">apr_file_close<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">fp<pos:position pos:line="23" pos:column="26"/></name></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><literal type="string" pos:line="24" pos:column="16">""<pos:position pos:line="24" pos:column="18"/></literal></expr>;<pos:position pos:line="24" pos:column="19"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then>
    <else pos:line="26" pos:column="5">else <block pos:line="26" pos:column="10">{
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">(<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">buf<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <operator pos:line="27" pos:column="20">(<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">char<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">*<pos:position pos:line="27" pos:column="27"/></operator><operator pos:line="27" pos:column="27">)<pos:position pos:line="27" pos:column="28"/></operator><call><name pos:line="27" pos:column="28">apr_palloc<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name><name pos:line="27" pos:column="39">ctx<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">p<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="47">sizeof<argument_list pos:line="27" pos:column="53">(<argument><expr><name pos:line="27" pos:column="54">char<pos:position pos:line="27" pos:column="58"/></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></sizeof><operator pos:line="27" pos:column="59">*<pos:position pos:line="27" pos:column="60"/></operator><operator pos:line="27" pos:column="60">(<pos:position pos:line="27" pos:column="61"/></operator><name pos:line="27" pos:column="61">len<pos:position pos:line="27" pos:column="64"/></name><operator pos:line="27" pos:column="64">+<pos:position pos:line="27" pos:column="65"/></operator><literal type="number" pos:line="27" pos:column="65">1<pos:position pos:line="27" pos:column="66"/></literal><operator pos:line="27" pos:column="66">)<pos:position pos:line="27" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="68"/></argument_list></call><operator pos:line="27" pos:column="68">)<pos:position pos:line="27" pos:column="69"/></operator> <operator pos:line="27" pos:column="70">==<pos:position pos:line="27" pos:column="72"/></operator> <name pos:line="27" pos:column="73">NULL<pos:position pos:line="27" pos:column="77"/></name></expr>)<pos:position pos:line="27" pos:column="78"/></condition><then pos:line="27" pos:column="78"> <block pos:line="27" pos:column="79">{
            <expr_stmt><expr><operator pos:line="28" pos:column="13">*<pos:position pos:line="28" pos:column="14"/></operator><name><name pos:line="28" pos:column="14">ctx<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">err<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <literal type="string" pos:line="28" pos:column="25">"Cannot allocate memory"<pos:position pos:line="28" pos:column="49"/></literal></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">apr_file_close<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">fp<pos:position pos:line="29" pos:column="30"/></name></expr></argument>)<pos:position pos:line="29" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>
            <return pos:line="30" pos:column="13">return <expr><literal type="string" pos:line="30" pos:column="20">""<pos:position pos:line="30" pos:column="22"/></literal></expr>;<pos:position pos:line="30" pos:column="23"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="32" pos:column="9">offset<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <literal type="number" pos:line="32" pos:column="18">0<pos:position pos:line="32" pos:column="19"/></literal></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">apr_file_seek<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">fp<pos:position pos:line="33" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="27">APR_SET<pos:position pos:line="33" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="36">&amp;<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="37">offset<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">apr_file_read<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">fp<pos:position pos:line="34" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="31">buf<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="36">&amp;<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="37">len<pos:position pos:line="34" pos:column="40"/></name></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call> <operator pos:line="34" pos:column="42">!=<pos:position pos:line="34" pos:column="44"/></operator> <name pos:line="34" pos:column="45">APR_SUCCESS<pos:position pos:line="34" pos:column="56"/></name></expr>)<pos:position pos:line="34" pos:column="57"/></condition><then pos:line="34" pos:column="57"> <block pos:line="34" pos:column="58">{
            <expr_stmt><expr><operator pos:line="35" pos:column="13">*<pos:position pos:line="35" pos:column="14"/></operator><name><name pos:line="35" pos:column="14">ctx<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">-&gt;<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="19">err<pos:position pos:line="35" pos:column="22"/></name></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <call><name pos:line="35" pos:column="25">apr_psprintf<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name><name pos:line="35" pos:column="38">ctx<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">-&gt;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="43">p<pos:position pos:line="35" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="46">"Cannot read from file %s"<pos:position pos:line="35" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="74">arg<pos:position pos:line="35" pos:column="77"/></name></expr></argument>)<pos:position pos:line="35" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">apr_file_close<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name pos:line="36" pos:column="28">fp<pos:position pos:line="36" pos:column="30"/></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
            <return pos:line="37" pos:column="13">return <expr><literal type="string" pos:line="37" pos:column="20">""<pos:position pos:line="37" pos:column="22"/></literal></expr>;<pos:position pos:line="37" pos:column="23"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">buf<pos:position pos:line="39" pos:column="12"/></name><index pos:line="39" pos:column="12">[<expr><name pos:line="39" pos:column="13">len<pos:position pos:line="39" pos:column="16"/></name></expr>]<pos:position pos:line="39" pos:column="17"/></index></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <literal type="char" pos:line="39" pos:column="20">'\0'<pos:position pos:line="39" pos:column="24"/></literal></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">apr_file_close<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><name pos:line="41" pos:column="20">fp<pos:position pos:line="41" pos:column="22"/></name></expr></argument>)<pos:position pos:line="41" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">buf<pos:position pos:line="42" pos:column="15"/></name></expr>;<pos:position pos:line="42" pos:column="16"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

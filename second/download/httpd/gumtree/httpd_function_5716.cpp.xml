<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5716.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">ap_response_code_string<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">request_rec<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">r<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">error_index<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">core_dir_config<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">dirconf<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">core_request_config<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">reqconf<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><call><name pos:line="4" pos:column="36">ap_get_core_module_config<pos:position pos:line="4" pos:column="61"/></name><argument_list pos:line="4" pos:column="61">(<argument><expr><name><name pos:line="4" pos:column="62">r<pos:position pos:line="4" pos:column="63"/></name><operator pos:line="4" pos:column="63">-&gt;<pos:position pos:line="4" pos:column="68"/></operator><name pos:line="4" pos:column="65">request_config<pos:position pos:line="4" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="81"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">err<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">response<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ap_expr_info_t<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">expr<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* check for string registered via ap_custom_response() first */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">reqconf<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">response_code_strings<pos:position pos:line="10" pos:column="39"/></name></name> <operator pos:line="10" pos:column="40">!=<pos:position pos:line="10" pos:column="42"/></operator> <name pos:line="10" pos:column="43">NULL<pos:position pos:line="10" pos:column="47"/></name>
            <operator pos:line="11" pos:column="13">&amp;&amp;<pos:position pos:line="11" pos:column="23"/></operator> <name><name pos:line="11" pos:column="16">reqconf<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">response_code_strings<pos:position pos:line="11" pos:column="46"/></name><index pos:line="11" pos:column="46">[<expr><name pos:line="11" pos:column="47">error_index<pos:position pos:line="11" pos:column="58"/></name></expr>]<pos:position pos:line="11" pos:column="59"/></index></name> <operator pos:line="11" pos:column="60">!=<pos:position pos:line="11" pos:column="62"/></operator> <name pos:line="11" pos:column="63">NULL<pos:position pos:line="11" pos:column="67"/></name></expr>)<pos:position pos:line="11" pos:column="68"/></condition><then pos:line="11" pos:column="68"> <block pos:line="11" pos:column="69">{
        <return pos:line="12" pos:column="9">return <expr><name><name pos:line="12" pos:column="16">reqconf<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">response_code_strings<pos:position pos:line="12" pos:column="46"/></name><index pos:line="12" pos:column="46">[<expr><name pos:line="12" pos:column="47">error_index<pos:position pos:line="12" pos:column="58"/></name></expr>]<pos:position pos:line="12" pos:column="59"/></index></name></expr>;<pos:position pos:line="12" pos:column="60"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* check for string specified via ErrorDocument */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">dirconf<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">ap_get_core_module_config<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><name><name pos:line="16" pos:column="41">r<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">-&gt;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="44">per_dir_config<pos:position pos:line="16" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="60"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><name><name pos:line="18" pos:column="10">dirconf<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">response_code_exprs<pos:position pos:line="18" pos:column="38"/></name></name></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39"> <block pos:line="18" pos:column="40">{
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">NULL<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="22" pos:column="5">expr<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <call><name pos:line="22" pos:column="12">apr_hash_get<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name><name pos:line="22" pos:column="25">dirconf<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">response_code_exprs<pos:position pos:line="22" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="55">&amp;<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="56">error_index<pos:position pos:line="22" pos:column="67"/></name></expr></argument>,
            <argument><expr><sizeof pos:line="23" pos:column="13">sizeof<argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">error_index<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">expr<pos:position pos:line="24" pos:column="14"/></name></expr>)<pos:position pos:line="24" pos:column="15"/></condition><then pos:line="24" pos:column="15"> <block pos:line="24" pos:column="16">{
        <return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">NULL<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/* special token to indicate revert back to default */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">char<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">*<pos:position pos:line="29" pos:column="16"/></operator><operator pos:line="29" pos:column="16">)<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">expr<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">==<pos:position pos:line="29" pos:column="25"/></operator> <operator pos:line="29" pos:column="26">&amp;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="27">errordocument_default<pos:position pos:line="29" pos:column="48"/></name></expr>)<pos:position pos:line="29" pos:column="49"/></condition><then pos:line="29" pos:column="49"> <block pos:line="29" pos:column="50">{
        <return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">NULL<pos:position pos:line="30" pos:column="20"/></name></expr>;<pos:position pos:line="30" pos:column="21"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="33" pos:column="5">err<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">=<pos:position pos:line="33" pos:column="10"/></operator> <name pos:line="33" pos:column="11">NULL<pos:position pos:line="33" pos:column="15"/></name></expr>;<pos:position pos:line="33" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">response<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <call><name pos:line="34" pos:column="16">ap_expr_str_exec<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">r<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="36">expr<pos:position pos:line="34" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="42">&amp;<pos:position pos:line="34" pos:column="47"/></operator><name pos:line="34" pos:column="43">err<pos:position pos:line="34" pos:column="46"/></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">err<pos:position pos:line="35" pos:column="12"/></name></expr>)<pos:position pos:line="35" pos:column="13"/></condition><then pos:line="35" pos:column="13"> <block pos:line="35" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_rerror<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(
                <argument><expr><name pos:line="37" pos:column="17">APLOG_MARK<pos:position pos:line="37" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="29">APLOG_ERR<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="40">0<pos:position pos:line="37" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="43">r<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="46">APLOGNO<pos:position pos:line="37" pos:column="53"/></name><argument_list pos:line="37" pos:column="53">(<argument><expr><literal type="number" pos:line="37" pos:column="54">02841<pos:position pos:line="37" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="60"/></argument_list></call> <literal type="string" pos:line="37" pos:column="61">"core: ErrorDocument: can't "<pos:position pos:line="37" pos:column="90"/></literal>
                <literal type="string" pos:line="38" pos:column="17">"evaluate require expression: %s"<pos:position pos:line="38" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="52">err<pos:position pos:line="38" pos:column="55"/></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">NULL<pos:position pos:line="39" pos:column="20"/></name></expr>;<pos:position pos:line="39" pos:column="21"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="42" pos:column="5">/* alas, duplication required as we return not-const */</comment>
    <return pos:line="43" pos:column="5">return <expr><call><name pos:line="43" pos:column="12">apr_pstrdup<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name><name pos:line="43" pos:column="24">r<pos:position pos:line="43" pos:column="25"/></name><operator pos:line="43" pos:column="25">-&gt;<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="27">pool<pos:position pos:line="43" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="33">response<pos:position pos:line="43" pos:column="41"/></name></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="43"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

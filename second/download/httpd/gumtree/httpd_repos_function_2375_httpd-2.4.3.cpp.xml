<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2375_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">session_identity_decode<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">request_rec<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type> <name pos:line="1" pos:column="59">r<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">session_rec<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type> <name pos:line="1" pos:column="76">z<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{

    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">last<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">NULL<pos:position pos:line="4" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">encoded<pos:position pos:line="5" pos:column="18"/></name></decl>, <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="21">pair<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">sep<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><literal type="string" pos:line="6" pos:column="23">"&amp;"<pos:position pos:line="6" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* sanity check - anything to decode? */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name><name pos:line="9" pos:column="10">z<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">encoded<pos:position pos:line="9" pos:column="20"/></name></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">OK<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/* decode what we have */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">encoded<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">apr_pstrdup<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name><name pos:line="14" pos:column="27">r<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">pool<pos:position pos:line="14" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="36">z<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">-&gt;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="39">encoded<pos:position pos:line="14" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">pair<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">apr_strtok<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">encoded<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">sep<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="37">&amp;<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="38">last<pos:position pos:line="15" pos:column="42"/></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">(<expr><name pos:line="16" pos:column="12">pair<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">&amp;&amp;<pos:position pos:line="16" pos:column="27"/></operator> <name><name pos:line="16" pos:column="20">pair<pos:position pos:line="16" pos:column="24"/></name><index pos:line="16" pos:column="24">[<expr><literal type="number" pos:line="16" pos:column="25">0<pos:position pos:line="16" pos:column="26"/></literal></expr>]<pos:position pos:line="16" pos:column="27"/></index></name></expr>)<pos:position pos:line="16" pos:column="28"/></condition> <block pos:line="16" pos:column="29">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">plast<pos:position pos:line="17" pos:column="20"/></name> <init pos:line="17" pos:column="21">= <expr><name pos:line="17" pos:column="23">NULL<pos:position pos:line="17" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">const<pos:position pos:line="18" pos:column="14"/></specifier> <name pos:line="18" pos:column="15">char<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">psep<pos:position pos:line="18" pos:column="25"/></name> <init pos:line="18" pos:column="26">= <expr><literal type="string" pos:line="18" pos:column="28">"="<pos:position pos:line="18" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">char<pos:position pos:line="19" pos:column="13"/></name> <modifier pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></modifier></type><name pos:line="19" pos:column="15">key<pos:position pos:line="19" pos:column="18"/></name> <init pos:line="19" pos:column="19">= <expr><call><name pos:line="19" pos:column="21">apr_strtok<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">pair<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">psep<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="44">&amp;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="45">plast<pos:position pos:line="19" pos:column="50"/></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="52"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">char<pos:position pos:line="20" pos:column="13"/></name> <modifier pos:line="20" pos:column="14">*<pos:position pos:line="20" pos:column="15"/></modifier></type><name pos:line="20" pos:column="15">val<pos:position pos:line="20" pos:column="18"/></name> <init pos:line="20" pos:column="19">= <expr><call><name pos:line="20" pos:column="21">apr_strtok<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">NULL<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">psep<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="44">&amp;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="45">plast<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="52"/></decl_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">key<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">&amp;&amp;<pos:position pos:line="21" pos:column="27"/></operator> <operator pos:line="21" pos:column="20">*<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">key<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25"> <block pos:line="21" pos:column="26">{
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><operator pos:line="22" pos:column="17">!<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">val<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">||<pos:position pos:line="22" pos:column="24"/></operator> <operator pos:line="22" pos:column="25">!<pos:position pos:line="22" pos:column="26"/></operator><operator pos:line="22" pos:column="26">*<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">val<pos:position pos:line="22" pos:column="30"/></name></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31"> <block pos:line="22" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="23" pos:column="17">apr_table_unset<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name><name pos:line="23" pos:column="33">z<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">entries<pos:position pos:line="23" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">key<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="50"/></expr_stmt>
            }<pos:position pos:line="24" pos:column="14"/></block></then>
            <elseif pos:line="25" pos:column="13">else <if pos:line="25" pos:column="18">if <condition pos:line="25" pos:column="21">(<expr><operator pos:line="25" pos:column="22">!<pos:position pos:line="25" pos:column="23"/></operator><call><name pos:line="25" pos:column="23">ap_unescape_urlencoded<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><name pos:line="25" pos:column="46">key<pos:position pos:line="25" pos:column="49"/></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call> <operator pos:line="25" pos:column="51">&amp;&amp;<pos:position pos:line="25" pos:column="61"/></operator> <operator pos:line="25" pos:column="54">!<pos:position pos:line="25" pos:column="55"/></operator><call><name pos:line="25" pos:column="55">ap_unescape_urlencoded<pos:position pos:line="25" pos:column="77"/></name><argument_list pos:line="25" pos:column="77">(<argument><expr><name pos:line="25" pos:column="78">val<pos:position pos:line="25" pos:column="81"/></name></expr></argument>)<pos:position pos:line="25" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="83"/></condition><then pos:line="25" pos:column="83"> <block pos:line="25" pos:column="84">{
                <if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><call><name pos:line="26" pos:column="22">strcmp<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">SESSION_EXPIRY<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">key<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="50"/></condition><then pos:line="26" pos:column="50"> <block pos:line="26" pos:column="51">{
                    <expr_stmt><expr><name><name pos:line="27" pos:column="21">z<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">expiry<pos:position pos:line="27" pos:column="30"/></name></name> <operator pos:line="27" pos:column="31">=<pos:position pos:line="27" pos:column="32"/></operator> <operator pos:line="27" pos:column="33">(<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="34">apr_time_t<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">)<pos:position pos:line="27" pos:column="45"/></operator> <call><name pos:line="27" pos:column="46">apr_atoi64<pos:position pos:line="27" pos:column="56"/></name><argument_list pos:line="27" pos:column="56">(<argument><expr><name pos:line="27" pos:column="57">val<pos:position pos:line="27" pos:column="60"/></name></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
                }<pos:position pos:line="28" pos:column="18"/></block></then>
                <else pos:line="29" pos:column="17">else <block pos:line="29" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="30" pos:column="21">apr_table_set<pos:position pos:line="30" pos:column="34"/></name><argument_list pos:line="30" pos:column="34">(<argument><expr><name><name pos:line="30" pos:column="35">z<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">entries<pos:position pos:line="30" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">key<pos:position pos:line="30" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="52">val<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="31" pos:column="18"/></block></else></if>
            }<pos:position pos:line="32" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="34" pos:column="9">pair<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <call><name pos:line="34" pos:column="16">apr_strtok<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">NULL<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="33">sep<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="38">&amp;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="39">last<pos:position pos:line="34" pos:column="43"/></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></while>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">z<pos:position pos:line="36" pos:column="6"/></name><operator pos:line="36" pos:column="6">-&gt;<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="8">encoded<pos:position pos:line="36" pos:column="15"/></name></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <name pos:line="36" pos:column="18">NULL<pos:position pos:line="36" pos:column="22"/></name></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">OK<pos:position pos:line="37" pos:column="14"/></name></expr>;<pos:position pos:line="37" pos:column="15"/></return>

}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1283_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">proxysection<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">cmd_parms<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">cmd<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">void<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">mconfig<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="64">const<pos:position pos:line="1" pos:column="69"/></specifier> <name pos:line="1" pos:column="70">char<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">arg<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">errmsg<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">endp<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><call><name pos:line="4" pos:column="24">ap_strrchr_c<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">(<argument><expr><name pos:line="4" pos:column="37">arg<pos:position pos:line="4" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="4" pos:column="42">'&gt;'<pos:position pos:line="4" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">old_overrides<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name><name pos:line="5" pos:column="25">cmd<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">override<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">old_path<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name><name pos:line="6" pos:column="22">cmd<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">path<pos:position pos:line="6" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">proxy_dir_conf<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">conf<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ap_conf_vector_t<pos:position pos:line="8" pos:column="21"/></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">new_dir_conf<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><call><name pos:line="8" pos:column="38">ap_create_per_dir_config<pos:position pos:line="8" pos:column="62"/></name><argument_list pos:line="8" pos:column="62">(<argument><expr><name><name pos:line="8" pos:column="63">cmd<pos:position pos:line="8" pos:column="66"/></name><operator pos:line="8" pos:column="66">-&gt;<pos:position pos:line="8" pos:column="71"/></operator><name pos:line="8" pos:column="68">pool<pos:position pos:line="8" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">regex_t<pos:position pos:line="9" pos:column="12"/></name> <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type><name pos:line="9" pos:column="14">r<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">command_rec<pos:position pos:line="10" pos:column="22"/></name> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">thiscmd<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><name><name pos:line="10" pos:column="34">cmd<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-&gt;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="39">cmd<pos:position pos:line="10" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="43"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">char<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">err<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><call><name pos:line="12" pos:column="23">ap_check_cmd_context<pos:position pos:line="12" pos:column="43"/></name><argument_list pos:line="12" pos:column="43">(<argument><expr><name pos:line="12" pos:column="44">cmd<pos:position pos:line="12" pos:column="47"/></name></expr></argument>,
                                           <argument><expr><name pos:line="13" pos:column="44">NOT_IN_DIR_LOC_FILE<pos:position pos:line="13" pos:column="63"/></name><operator pos:line="13" pos:column="63">|<pos:position pos:line="13" pos:column="64"/></operator><name pos:line="13" pos:column="64">NOT_IN_LIMIT<pos:position pos:line="13" pos:column="76"/></name></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="78"/></decl_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">err<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">!=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21"> <block pos:line="14" pos:column="22">{
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">err<pos:position pos:line="15" pos:column="19"/></name></expr>;<pos:position pos:line="15" pos:column="20"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">endp<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">==<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">NULL<pos:position pos:line="18" pos:column="21"/></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22"> <block pos:line="18" pos:column="23">{
        <return pos:line="19" pos:column="9">return <expr><call><name pos:line="19" pos:column="16">apr_pstrcat<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name><name pos:line="19" pos:column="28">cmd<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">pool<pos:position pos:line="19" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="39">cmd<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">cmd<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">name<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="20" pos:column="28">"&gt; directive missing closing '&gt;'"<pos:position pos:line="20" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="63">NULL<pos:position pos:line="20" pos:column="67"/></name></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="69"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">arg<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator><call><name pos:line="23" pos:column="9">apr_pstrndup<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name><name pos:line="23" pos:column="22">cmd<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">-&gt;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="27">pool<pos:position pos:line="23" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="33">arg<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">endp<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">-<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="43">arg<pos:position pos:line="23" pos:column="46"/></name></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">arg<pos:position pos:line="25" pos:column="13"/></name></expr>)<pos:position pos:line="25" pos:column="14"/></condition><then pos:line="25" pos:column="14"> <block pos:line="25" pos:column="15">{
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">thiscmd<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">cmd_data<pos:position pos:line="26" pos:column="30"/></name></name></expr>)<pos:position pos:line="26" pos:column="31"/></condition><then pos:line="26" pos:column="31">
            <block type="pseudo"><return pos:line="27" pos:column="13">return <expr><literal type="string" pos:line="27" pos:column="20">"&lt;ProxyMatch &gt; block must specify a path"<pos:position pos:line="27" pos:column="67"/></literal></expr>;<pos:position pos:line="27" pos:column="62"/></return></block></then>
        <else pos:line="28" pos:column="9">else
            <block type="pseudo"><return pos:line="29" pos:column="13">return <expr><literal type="string" pos:line="29" pos:column="20">"&lt;Proxy &gt; block must specify a path"<pos:position pos:line="29" pos:column="62"/></literal></expr>;<pos:position pos:line="29" pos:column="57"/></return></block></else></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="32" pos:column="5">cmd<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">-&gt;<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="10">path<pos:position pos:line="32" pos:column="14"/></name></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <call><name pos:line="32" pos:column="17">ap_getword_conf<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name><name pos:line="32" pos:column="33">cmd<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">pool<pos:position pos:line="32" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="44">&amp;<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="45">arg<pos:position pos:line="32" pos:column="48"/></name></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">cmd<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">-&gt;<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="10">override<pos:position pos:line="33" pos:column="18"/></name></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <name pos:line="33" pos:column="21">OR_ALL<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">|<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="28">ACCESS_CONF<pos:position pos:line="33" pos:column="39"/></name></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><call><name pos:line="35" pos:column="10">strncasecmp<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name><name pos:line="35" pos:column="22">cmd<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">-&gt;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="27">path<pos:position pos:line="35" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="33">"proxy:"<pos:position pos:line="35" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="43">6<pos:position pos:line="35" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="46"/></condition><then pos:line="35" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="9">cmd<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">path<pos:position pos:line="36" pos:column="18"/></name></name> <operator pos:line="36" pos:column="19">+=<pos:position pos:line="36" pos:column="21"/></operator> <literal type="number" pos:line="36" pos:column="22">6<pos:position pos:line="36" pos:column="23"/></literal></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="38" pos:column="5">/* XXX Ignore case?  What if we proxy a case-insensitive server?!? 
     * While we are at it, shouldn't we also canonicalize the entire
     * scheme?  See proxy_fixup()
     */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><name pos:line="42" pos:column="9">thiscmd<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">cmd_data<pos:position pos:line="42" pos:column="26"/></name></name></expr>)<pos:position pos:line="42" pos:column="27"/></condition><then pos:line="42" pos:column="27"> <block pos:line="42" pos:column="28">{ <comment type="block" pos:line="42" pos:column="30">/* &lt;ProxyMatch&gt; */</comment>
        <expr_stmt><expr><name pos:line="43" pos:column="9">r<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <call><name pos:line="43" pos:column="13">ap_pregcomp<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name><name pos:line="43" pos:column="25">cmd<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">-&gt;<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="30">pool<pos:position pos:line="43" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="36">cmd<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">-&gt;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="41">path<pos:position pos:line="43" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="47">REG_EXTENDED<pos:position pos:line="43" pos:column="59"/></name></expr></argument>)<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then>
    <elseif pos:line="45" pos:column="5">else <if pos:line="45" pos:column="10">if <condition pos:line="45" pos:column="13">(<expr><operator pos:line="45" pos:column="14">!<pos:position pos:line="45" pos:column="15"/></operator><call><name pos:line="45" pos:column="15">strcmp<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name><name pos:line="45" pos:column="22">cmd<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">-&gt;<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="27">path<pos:position pos:line="45" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="33">"~"<pos:position pos:line="45" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="38"/></condition><then pos:line="45" pos:column="38"> <block pos:line="45" pos:column="39">{
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">cmd<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">-&gt;<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="14">path<pos:position pos:line="46" pos:column="18"/></name></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <call><name pos:line="46" pos:column="21">ap_getword_conf<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name><name pos:line="46" pos:column="37">cmd<pos:position pos:line="46" pos:column="40"/></name><operator pos:line="46" pos:column="40">-&gt;<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="42">pool<pos:position pos:line="46" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="48">&amp;<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="49">arg<pos:position pos:line="46" pos:column="52"/></name></expr></argument>)<pos:position pos:line="46" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><name><name pos:line="47" pos:column="14">cmd<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">-&gt;<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="19">path<pos:position pos:line="47" pos:column="23"/></name></name></expr>)<pos:position pos:line="47" pos:column="24"/></condition><then pos:line="47" pos:column="24">
            <block type="pseudo"><return pos:line="48" pos:column="13">return <expr><literal type="string" pos:line="48" pos:column="20">"&lt;Proxy ~ &gt; block must specify a path"<pos:position pos:line="48" pos:column="64"/></literal></expr>;<pos:position pos:line="48" pos:column="59"/></return></block></then></if>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><call><name pos:line="49" pos:column="13">strncasecmp<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><name><name pos:line="49" pos:column="25">cmd<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">-&gt;<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="30">path<pos:position pos:line="49" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="36">"proxy:"<pos:position pos:line="49" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="46">6<pos:position pos:line="49" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="49"/></condition><then pos:line="49" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="13">cmd<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">path<pos:position pos:line="50" pos:column="22"/></name></name> <operator pos:line="50" pos:column="23">+=<pos:position pos:line="50" pos:column="25"/></operator> <literal type="number" pos:line="50" pos:column="26">6<pos:position pos:line="50" pos:column="27"/></literal></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="51" pos:column="9">r<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <call><name pos:line="51" pos:column="13">ap_pregcomp<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name><name pos:line="51" pos:column="25">cmd<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">-&gt;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="30">pool<pos:position pos:line="51" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="36">cmd<pos:position pos:line="51" pos:column="39"/></name><operator pos:line="51" pos:column="39">-&gt;<pos:position pos:line="51" pos:column="44"/></operator><name pos:line="51" pos:column="41">path<pos:position pos:line="51" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="47">REG_EXTENDED<pos:position pos:line="51" pos:column="59"/></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="54" pos:column="5">/* initialize our config and fetch it */</comment>
    <expr_stmt><expr><name pos:line="55" pos:column="5">conf<pos:position pos:line="55" pos:column="9"/></name> <operator pos:line="55" pos:column="10">=<pos:position pos:line="55" pos:column="11"/></operator> <call><name pos:line="55" pos:column="12">ap_set_config_vectors<pos:position pos:line="55" pos:column="33"/></name><argument_list pos:line="55" pos:column="33">(<argument><expr><name><name pos:line="55" pos:column="34">cmd<pos:position pos:line="55" pos:column="37"/></name><operator pos:line="55" pos:column="37">-&gt;<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="39">server<pos:position pos:line="55" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="47">new_dir_conf<pos:position pos:line="55" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="61">cmd<pos:position pos:line="55" pos:column="64"/></name><operator pos:line="55" pos:column="64">-&gt;<pos:position pos:line="55" pos:column="69"/></operator><name pos:line="55" pos:column="66">path<pos:position pos:line="55" pos:column="70"/></name></name></expr></argument>,
                                 <argument><expr><operator pos:line="56" pos:column="34">&amp;<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="35">proxy_module<pos:position pos:line="56" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="49">cmd<pos:position pos:line="56" pos:column="52"/></name><operator pos:line="56" pos:column="52">-&gt;<pos:position pos:line="56" pos:column="57"/></operator><name pos:line="56" pos:column="54">pool<pos:position pos:line="56" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><name pos:line="58" pos:column="5">errmsg<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <call><name pos:line="58" pos:column="14">ap_walk_config<pos:position pos:line="58" pos:column="28"/></name><argument_list pos:line="58" pos:column="28">(<argument><expr><name><name pos:line="58" pos:column="29">cmd<pos:position pos:line="58" pos:column="32"/></name><operator pos:line="58" pos:column="32">-&gt;<pos:position pos:line="58" pos:column="37"/></operator><name pos:line="58" pos:column="34">directive<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">first_child<pos:position pos:line="58" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="58">cmd<pos:position pos:line="58" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="63">new_dir_conf<pos:position pos:line="58" pos:column="75"/></name></expr></argument>)<pos:position pos:line="58" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="77"/></expr_stmt>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">errmsg<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">!=<pos:position pos:line="59" pos:column="18"/></operator> <name pos:line="59" pos:column="19">NULL<pos:position pos:line="59" pos:column="23"/></name></expr>)<pos:position pos:line="59" pos:column="24"/></condition><then pos:line="59" pos:column="24">
        <block type="pseudo"><return pos:line="60" pos:column="9">return <expr><name pos:line="60" pos:column="16">errmsg<pos:position pos:line="60" pos:column="22"/></name></expr>;<pos:position pos:line="60" pos:column="23"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="62" pos:column="5">conf<pos:position pos:line="62" pos:column="9"/></name><operator pos:line="62" pos:column="9">-&gt;<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="11">r<pos:position pos:line="62" pos:column="12"/></name></name> <operator pos:line="62" pos:column="13">=<pos:position pos:line="62" pos:column="14"/></operator> <name pos:line="62" pos:column="15">r<pos:position pos:line="62" pos:column="16"/></name></expr>;<pos:position pos:line="62" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">conf<pos:position pos:line="63" pos:column="9"/></name><operator pos:line="63" pos:column="9">-&gt;<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="11">p<pos:position pos:line="63" pos:column="12"/></name></name> <operator pos:line="63" pos:column="13">=<pos:position pos:line="63" pos:column="14"/></operator> <name><name pos:line="63" pos:column="15">cmd<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">-&gt;<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="20">path<pos:position pos:line="63" pos:column="24"/></name></name></expr>;<pos:position pos:line="63" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="64" pos:column="5">conf<pos:position pos:line="64" pos:column="9"/></name><operator pos:line="64" pos:column="9">-&gt;<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="11">p_is_fnmatch<pos:position pos:line="64" pos:column="23"/></name></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <call><name pos:line="64" pos:column="26">apr_fnmatch_test<pos:position pos:line="64" pos:column="42"/></name><argument_list pos:line="64" pos:column="42">(<argument><expr><name><name pos:line="64" pos:column="43">conf<pos:position pos:line="64" pos:column="47"/></name><operator pos:line="64" pos:column="47">-&gt;<pos:position pos:line="64" pos:column="52"/></operator><name pos:line="64" pos:column="49">p<pos:position pos:line="64" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="66" pos:column="5">ap_add_per_proxy_conf<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><name><name pos:line="66" pos:column="27">cmd<pos:position pos:line="66" pos:column="30"/></name><operator pos:line="66" pos:column="30">-&gt;<pos:position pos:line="66" pos:column="35"/></operator><name pos:line="66" pos:column="32">server<pos:position pos:line="66" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="40">new_dir_conf<pos:position pos:line="66" pos:column="52"/></name></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="54"/></expr_stmt>

    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><operator pos:line="68" pos:column="9">*<pos:position pos:line="68" pos:column="10"/></operator><name pos:line="68" pos:column="10">arg<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">!=<pos:position pos:line="68" pos:column="16"/></operator> <literal type="char" pos:line="68" pos:column="17">'\0'<pos:position pos:line="68" pos:column="21"/></literal></expr>)<pos:position pos:line="68" pos:column="22"/></condition><then pos:line="68" pos:column="22"> <block pos:line="68" pos:column="23">{
        <return pos:line="69" pos:column="9">return <expr><call><name pos:line="69" pos:column="16">apr_pstrcat<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><name><name pos:line="69" pos:column="28">cmd<pos:position pos:line="69" pos:column="31"/></name><operator pos:line="69" pos:column="31">-&gt;<pos:position pos:line="69" pos:column="36"/></operator><name pos:line="69" pos:column="33">pool<pos:position pos:line="69" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="39">"Multiple "<pos:position pos:line="69" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="52">thiscmd<pos:position pos:line="69" pos:column="59"/></name><operator pos:line="69" pos:column="59">-&gt;<pos:position pos:line="69" pos:column="64"/></operator><name pos:line="69" pos:column="61">name<pos:position pos:line="69" pos:column="65"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="70" pos:column="28">"&gt; arguments not (yet) supported."<pos:position pos:line="70" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="64">NULL<pos:position pos:line="70" pos:column="68"/></name></expr></argument>)<pos:position pos:line="70" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="70"/></return>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="73" pos:column="5">cmd<pos:position pos:line="73" pos:column="8"/></name><operator pos:line="73" pos:column="8">-&gt;<pos:position pos:line="73" pos:column="13"/></operator><name pos:line="73" pos:column="10">path<pos:position pos:line="73" pos:column="14"/></name></name> <operator pos:line="73" pos:column="15">=<pos:position pos:line="73" pos:column="16"/></operator> <name pos:line="73" pos:column="17">old_path<pos:position pos:line="73" pos:column="25"/></name></expr>;<pos:position pos:line="73" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="74" pos:column="5">cmd<pos:position pos:line="74" pos:column="8"/></name><operator pos:line="74" pos:column="8">-&gt;<pos:position pos:line="74" pos:column="13"/></operator><name pos:line="74" pos:column="10">override<pos:position pos:line="74" pos:column="18"/></name></name> <operator pos:line="74" pos:column="19">=<pos:position pos:line="74" pos:column="20"/></operator> <name pos:line="74" pos:column="21">old_overrides<pos:position pos:line="74" pos:column="34"/></name></expr>;<pos:position pos:line="74" pos:column="35"/></expr_stmt>

    <return pos:line="76" pos:column="5">return <expr><name pos:line="76" pos:column="12">NULL<pos:position pos:line="76" pos:column="16"/></name></expr>;<pos:position pos:line="76" pos:column="17"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

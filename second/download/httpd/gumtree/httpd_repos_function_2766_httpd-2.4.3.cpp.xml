<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2766_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">authenticate_form_authn<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">request_rec<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type> <name pos:line="1" pos:column="50">r<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">auth_form_config_rec<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">conf<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><call><name pos:line="3" pos:column="34">ap_get_module_config<pos:position pos:line="3" pos:column="54"/></name><argument_list pos:line="3" pos:column="54">(<argument><expr><name><name pos:line="3" pos:column="55">r<pos:position pos:line="3" pos:column="56"/></name><operator pos:line="3" pos:column="56">-&gt;<pos:position pos:line="3" pos:column="61"/></operator><name pos:line="3" pos:column="58">per_dir_config<pos:position pos:line="3" pos:column="72"/></name></name></expr></argument>,
                                                      <argument><expr><operator pos:line="4" pos:column="55">&amp;<pos:position pos:line="4" pos:column="60"/></operator><name pos:line="4" pos:column="56">auth_form_module<pos:position pos:line="4" pos:column="72"/></name></expr></argument>)<pos:position pos:line="4" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">sent_user<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">NULL<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="36">sent_pw<pos:position pos:line="5" pos:column="43"/></name> <init pos:line="5" pos:column="44">= <expr><name pos:line="5" pos:column="46">NULL<pos:position pos:line="5" pos:column="50"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="52">*<pos:position pos:line="5" pos:column="53"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="53">sent_hash<pos:position pos:line="5" pos:column="62"/></name> <init pos:line="5" pos:column="63">= <expr><name pos:line="5" pos:column="65">NULL<pos:position pos:line="5" pos:column="69"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">sent_loc<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name pos:line="6" pos:column="28">NULL<pos:position pos:line="6" pos:column="32"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="35">sent_method<pos:position pos:line="6" pos:column="46"/></name> <init pos:line="6" pos:column="47">= <expr><literal type="string" pos:line="6" pos:column="49">"GET"<pos:position pos:line="6" pos:column="54"/></literal></expr></init></decl>, <modifier pos:line="6" pos:column="56">*<pos:position pos:line="6" pos:column="57"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="57">sent_mimetype<pos:position pos:line="6" pos:column="70"/></name> <init pos:line="6" pos:column="71">= <expr><name pos:line="6" pos:column="73">NULL<pos:position pos:line="6" pos:column="77"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="78"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">current_auth<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><name pos:line="7" pos:column="32">NULL<pos:position pos:line="7" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">res<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">rv<pos:position pos:line="9" pos:column="11"/></name> <init pos:line="9" pos:column="12">= <expr><name pos:line="9" pos:column="14">HTTP_UNAUTHORIZED<pos:position pos:line="9" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* Are we configured to be Form auth? */</comment>
    <expr_stmt><expr><name pos:line="12" pos:column="5">current_auth<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <call><name pos:line="12" pos:column="20">ap_auth_type<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">r<pos:position pos:line="12" pos:column="34"/></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">current_auth<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">||<pos:position pos:line="13" pos:column="25"/></operator> <call><name pos:line="13" pos:column="26">strcasecmp<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">current_auth<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="51">"form"<pos:position pos:line="13" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="59"/></condition><then pos:line="13" pos:column="59"> <block pos:line="13" pos:column="60">{
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">DECLINED<pos:position pos:line="14" pos:column="24"/></name></expr>;<pos:position pos:line="14" pos:column="25"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/*
     * XSS security warning: using cookies to store private data only works
     * when the administrator has full control over the source website. When
     * in forward-proxy mode, websites are public by definition, and so can
     * never be secure. Abort the auth attempt in this case.
     */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">PROXYREQ_PROXY<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">==<pos:position pos:line="23" pos:column="26"/></operator> <name><name pos:line="23" pos:column="27">r<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">proxyreq<pos:position pos:line="23" pos:column="38"/></name></name></expr>)<pos:position pos:line="23" pos:column="39"/></condition><then pos:line="23" pos:column="39"> <block pos:line="23" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">ap_log_rerror<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">APLOG_MARK<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">APLOG_ERR<pos:position pos:line="24" pos:column="44"/></name></expr></argument>,
                      <argument><expr><literal type="number" pos:line="25" pos:column="23">0<pos:position pos:line="25" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="26">r<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="29">APLOGNO<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">(<argument><expr><literal type="number" pos:line="25" pos:column="37">01809<pos:position pos:line="25" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call> <literal type="string" pos:line="25" pos:column="44">"form auth cannot be used for proxy "<pos:position pos:line="25" pos:column="81"/></literal>
                      <literal type="string" pos:line="26" pos:column="23">"requests due to XSS risk, access denied: %s"<pos:position pos:line="26" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="70">r<pos:position pos:line="26" pos:column="71"/></name><operator pos:line="26" pos:column="71">-&gt;<pos:position pos:line="26" pos:column="76"/></operator><name pos:line="26" pos:column="73">uri<pos:position pos:line="26" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="78"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="27" pos:column="42"/></name></expr>;<pos:position pos:line="27" pos:column="43"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="30" pos:column="5">/* We need an authentication realm. */</comment>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">!<pos:position pos:line="31" pos:column="10"/></operator><call><name pos:line="31" pos:column="10">ap_auth_name<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">r<pos:position pos:line="31" pos:column="24"/></name></expr></argument>)<pos:position pos:line="31" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="26"/></condition><then pos:line="31" pos:column="26"> <block pos:line="31" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">ap_log_rerror<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">APLOG_MARK<pos:position pos:line="32" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="35">APLOG_ERR<pos:position pos:line="32" pos:column="44"/></name></expr></argument>,
                      <argument><expr><literal type="number" pos:line="33" pos:column="23">0<pos:position pos:line="33" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="26">r<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="29">APLOGNO<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><literal type="number" pos:line="33" pos:column="37">01810<pos:position pos:line="33" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call> <literal type="string" pos:line="33" pos:column="44">"need AuthName: %s"<pos:position pos:line="33" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="65">r<pos:position pos:line="33" pos:column="66"/></name><operator pos:line="33" pos:column="66">-&gt;<pos:position pos:line="33" pos:column="71"/></operator><name pos:line="33" pos:column="68">uri<pos:position pos:line="33" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="73"/></expr_stmt>
        <return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="34" pos:column="42"/></name></expr>;<pos:position pos:line="34" pos:column="43"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="37" pos:column="5">r<pos:position pos:line="37" pos:column="6"/></name><operator pos:line="37" pos:column="6">-&gt;<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="8">ap_auth_type<pos:position pos:line="37" pos:column="20"/></name></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <operator pos:line="37" pos:column="23">(<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="24">char<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">*<pos:position pos:line="37" pos:column="30"/></operator><operator pos:line="37" pos:column="30">)<pos:position pos:line="37" pos:column="31"/></operator> <name pos:line="37" pos:column="32">current_auth<pos:position pos:line="37" pos:column="44"/></name></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* try get the username and password from the notes, if present */</comment>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">get_notes_auth<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><name pos:line="40" pos:column="20">r<pos:position pos:line="40" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="23">&amp;<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="24">sent_user<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="35">&amp;<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="36">sent_pw<pos:position pos:line="40" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="45">&amp;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="46">sent_method<pos:position pos:line="40" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="59">&amp;<pos:position pos:line="40" pos:column="64"/></operator><name pos:line="40" pos:column="60">sent_mimetype<pos:position pos:line="40" pos:column="73"/></name></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="75"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">!<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">sent_user<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">||<pos:position pos:line="41" pos:column="22"/></operator> <operator pos:line="41" pos:column="23">!<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="24">sent_pw<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">||<pos:position pos:line="41" pos:column="34"/></operator> <operator pos:line="41" pos:column="35">!<pos:position pos:line="41" pos:column="36"/></operator><operator pos:line="41" pos:column="36">*<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="37">sent_user<pos:position pos:line="41" pos:column="46"/></name> <operator pos:line="41" pos:column="47">||<pos:position pos:line="41" pos:column="49"/></operator> <operator pos:line="41" pos:column="50">!<pos:position pos:line="41" pos:column="51"/></operator><operator pos:line="41" pos:column="51">*<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="52">sent_pw<pos:position pos:line="41" pos:column="59"/></name></expr>)<pos:position pos:line="41" pos:column="60"/></condition><then pos:line="41" pos:column="60"> <block pos:line="41" pos:column="61">{

        <comment type="block" pos:line="43" pos:column="9">/* otherwise try get the username and password from a session, if present */</comment>
        <expr_stmt><expr><name pos:line="44" pos:column="9">res<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <call><name pos:line="44" pos:column="15">get_session_auth<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name pos:line="44" pos:column="32">r<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="35">&amp;<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="36">sent_user<pos:position pos:line="44" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="47">&amp;<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="48">sent_pw<pos:position pos:line="44" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="57">&amp;<pos:position pos:line="44" pos:column="62"/></operator><name pos:line="44" pos:column="58">sent_hash<pos:position pos:line="44" pos:column="67"/></name></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="69"/></expr_stmt>

    }<pos:position pos:line="46" pos:column="6"/></block></then>
    <else pos:line="47" pos:column="5">else <block pos:line="47" pos:column="10">{
        <expr_stmt><expr><name pos:line="48" pos:column="9">res<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <name pos:line="48" pos:column="15">APR_SUCCESS<pos:position pos:line="48" pos:column="26"/></name></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="51" pos:column="5">/* first test whether the site passphrase matches */</comment>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">APR_SUCCESS<pos:position pos:line="52" pos:column="20"/></name> <operator pos:line="52" pos:column="21">==<pos:position pos:line="52" pos:column="23"/></operator> <name pos:line="52" pos:column="24">res<pos:position pos:line="52" pos:column="27"/></name> <operator pos:line="52" pos:column="28">&amp;&amp;<pos:position pos:line="52" pos:column="38"/></operator> <name pos:line="52" pos:column="31">sent_user<pos:position pos:line="52" pos:column="40"/></name> <operator pos:line="52" pos:column="41">&amp;&amp;<pos:position pos:line="52" pos:column="51"/></operator> <name pos:line="52" pos:column="44">sent_hash<pos:position pos:line="52" pos:column="53"/></name> <operator pos:line="52" pos:column="54">&amp;&amp;<pos:position pos:line="52" pos:column="64"/></operator> <name pos:line="52" pos:column="57">sent_pw<pos:position pos:line="52" pos:column="64"/></name></expr>)<pos:position pos:line="52" pos:column="65"/></condition><then pos:line="52" pos:column="65"> <block pos:line="52" pos:column="66">{
        <expr_stmt><expr><name pos:line="53" pos:column="9">rv<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <call><name pos:line="53" pos:column="14">check_site<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><name pos:line="53" pos:column="25">r<pos:position pos:line="53" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="28">conf<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">-&gt;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="34">site<pos:position pos:line="53" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="40">sent_user<pos:position pos:line="53" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="51">sent_hash<pos:position pos:line="53" pos:column="60"/></name></expr></argument>)<pos:position pos:line="53" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="62"/></expr_stmt>
        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">OK<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">==<pos:position pos:line="54" pos:column="18"/></operator> <name pos:line="54" pos:column="19">rv<pos:position pos:line="54" pos:column="21"/></name></expr>)<pos:position pos:line="54" pos:column="22"/></condition><then pos:line="54" pos:column="22"> <block pos:line="54" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">fake_basic_authentication<pos:position pos:line="55" pos:column="38"/></name><argument_list pos:line="55" pos:column="38">(<argument><expr><name pos:line="55" pos:column="39">r<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="42">conf<pos:position pos:line="55" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="48">sent_user<pos:position pos:line="55" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="59">sent_pw<pos:position pos:line="55" pos:column="66"/></name></expr></argument>)<pos:position pos:line="55" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="68"/></expr_stmt>
            <return pos:line="56" pos:column="13">return <expr><name pos:line="56" pos:column="20">OK<pos:position pos:line="56" pos:column="22"/></name></expr>;<pos:position pos:line="56" pos:column="23"/></return>
        }<pos:position pos:line="57" pos:column="10"/></block></then></if>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="60" pos:column="5">/* otherwise test for a normal password match */</comment>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">APR_SUCCESS<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">==<pos:position pos:line="61" pos:column="23"/></operator> <name pos:line="61" pos:column="24">res<pos:position pos:line="61" pos:column="27"/></name> <operator pos:line="61" pos:column="28">&amp;&amp;<pos:position pos:line="61" pos:column="38"/></operator> <name pos:line="61" pos:column="31">sent_user<pos:position pos:line="61" pos:column="40"/></name> <operator pos:line="61" pos:column="41">&amp;&amp;<pos:position pos:line="61" pos:column="51"/></operator> <name pos:line="61" pos:column="44">sent_pw<pos:position pos:line="61" pos:column="51"/></name></expr>)<pos:position pos:line="61" pos:column="52"/></condition><then pos:line="61" pos:column="52"> <block pos:line="61" pos:column="53">{
        <expr_stmt><expr><name pos:line="62" pos:column="9">rv<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <call><name pos:line="62" pos:column="14">check_authn<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">r<pos:position pos:line="62" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="29">sent_user<pos:position pos:line="62" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="40">sent_pw<pos:position pos:line="62" pos:column="47"/></name></expr></argument>)<pos:position pos:line="62" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="49"/></expr_stmt>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">OK<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">==<pos:position pos:line="63" pos:column="18"/></operator> <name pos:line="63" pos:column="19">rv<pos:position pos:line="63" pos:column="21"/></name></expr>)<pos:position pos:line="63" pos:column="22"/></condition><then pos:line="63" pos:column="22"> <block pos:line="63" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">fake_basic_authentication<pos:position pos:line="64" pos:column="38"/></name><argument_list pos:line="64" pos:column="38">(<argument><expr><name pos:line="64" pos:column="39">r<pos:position pos:line="64" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="42">conf<pos:position pos:line="64" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="48">sent_user<pos:position pos:line="64" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="59">sent_pw<pos:position pos:line="64" pos:column="66"/></name></expr></argument>)<pos:position pos:line="64" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="68"/></expr_stmt>
            <return pos:line="65" pos:column="13">return <expr><name pos:line="65" pos:column="20">OK<pos:position pos:line="65" pos:column="22"/></name></expr>;<pos:position pos:line="65" pos:column="23"/></return>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="69" pos:column="5">/*
     * If we reach this point, the request should fail with access denied,
     * except for one potential scenario:
     *
     * If the request is a POST, and the posted form contains user defined fields
     * for a username and a password, and the username and password are correct,
     * then return the response obtained by a GET to this URL.
     *
     * If an additional user defined location field is present in the form,
     * instead of a GET of the current URL, redirect the browser to the new
     * location.
     *
     * As a further option, if the user defined fields for the type of request,
     * the mime type of the body of the request, and the body of the request
     * itself are present, replace this request with a new request of the given
     * type and with the given body.
     *
     * Otherwise access is denied.
     *
     * Reading the body requires some song and dance, because the input filters
     * are not yet configured. To work around this problem, we create a
     * subrequest and use that to create a sane filter stack we can read the
     * form from.
     *
     * The main request is then capped with a kept_body input filter, which has
     * the effect of guaranteeing the input stack can be safely read a second time.
     *
     */</comment>
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><name pos:line="97" pos:column="9">HTTP_UNAUTHORIZED<pos:position pos:line="97" pos:column="26"/></name> <operator pos:line="97" pos:column="27">==<pos:position pos:line="97" pos:column="29"/></operator> <name pos:line="97" pos:column="30">rv<pos:position pos:line="97" pos:column="32"/></name> <operator pos:line="97" pos:column="33">&amp;&amp;<pos:position pos:line="97" pos:column="43"/></operator> <name><name pos:line="97" pos:column="36">r<pos:position pos:line="97" pos:column="37"/></name><operator pos:line="97" pos:column="37">-&gt;<pos:position pos:line="97" pos:column="42"/></operator><name pos:line="97" pos:column="39">method_number<pos:position pos:line="97" pos:column="52"/></name></name> <operator pos:line="97" pos:column="53">==<pos:position pos:line="97" pos:column="55"/></operator> <name pos:line="97" pos:column="56">M_POST<pos:position pos:line="97" pos:column="62"/></name> <operator pos:line="97" pos:column="63">&amp;&amp;<pos:position pos:line="97" pos:column="73"/></operator> <call><name pos:line="97" pos:column="66">ap_is_initial_req<pos:position pos:line="97" pos:column="83"/></name><argument_list pos:line="97" pos:column="83">(<argument><expr><name pos:line="97" pos:column="84">r<pos:position pos:line="97" pos:column="85"/></name></expr></argument>)<pos:position pos:line="97" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="87"/></condition><then pos:line="97" pos:column="87"> <block pos:line="97" pos:column="88">{
        <decl_stmt><decl><type><name pos:line="98" pos:column="9">request_rec<pos:position pos:line="98" pos:column="20"/></name> <modifier pos:line="98" pos:column="21">*<pos:position pos:line="98" pos:column="22"/></modifier></type><name pos:line="98" pos:column="22">rr<pos:position pos:line="98" pos:column="24"/></name></decl>;<pos:position pos:line="98" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="99" pos:column="9">apr_bucket_brigade<pos:position pos:line="99" pos:column="27"/></name> <modifier pos:line="99" pos:column="28">*<pos:position pos:line="99" pos:column="29"/></modifier></type><name pos:line="99" pos:column="29">sent_body<pos:position pos:line="99" pos:column="38"/></name> <init pos:line="99" pos:column="39">= <expr><name pos:line="99" pos:column="41">NULL<pos:position pos:line="99" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="99" pos:column="46"/></decl_stmt>

        <comment type="block" pos:line="101" pos:column="9">/* create a subrequest of our current uri */</comment>
        <expr_stmt><expr><name pos:line="102" pos:column="9">rr<pos:position pos:line="102" pos:column="11"/></name> <operator pos:line="102" pos:column="12">=<pos:position pos:line="102" pos:column="13"/></operator> <call><name pos:line="102" pos:column="14">ap_sub_req_lookup_uri<pos:position pos:line="102" pos:column="35"/></name><argument_list pos:line="102" pos:column="35">(<argument><expr><name><name pos:line="102" pos:column="36">r<pos:position pos:line="102" pos:column="37"/></name><operator pos:line="102" pos:column="37">-&gt;<pos:position pos:line="102" pos:column="42"/></operator><name pos:line="102" pos:column="39">uri<pos:position pos:line="102" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="44">r<pos:position pos:line="102" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="47">r<pos:position pos:line="102" pos:column="48"/></name><operator pos:line="102" pos:column="48">-&gt;<pos:position pos:line="102" pos:column="53"/></operator><name pos:line="102" pos:column="50">input_filters<pos:position pos:line="102" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="65"/></expr_stmt></block></then></if></block></function>
</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3206_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">psprintf_flush<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">apr_vformatter_buff_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">vbuff<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">struct<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">psprintf_data<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">ps<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><operator pos:line="3" pos:column="32">(<pos:position pos:line="3" pos:column="33"/></operator>struct <name pos:line="3" pos:column="40">psprintf_data<pos:position pos:line="3" pos:column="53"/></name> <operator pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></operator><operator pos:line="3" pos:column="55">)<pos:position pos:line="3" pos:column="56"/></operator><name pos:line="3" pos:column="56">vbuff<pos:position pos:line="3" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_memnode_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">node<pos:position pos:line="4" pos:column="24"/></name></decl>, <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="27">active<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">cur_len<pos:position pos:line="5" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="25">size<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">strp<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_pool_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">pool<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_uint32_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">free_index<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">pool<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <name><name pos:line="10" pos:column="12">ps<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">pool<pos:position pos:line="10" pos:column="20"/></name></name></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">active<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name><name pos:line="11" pos:column="14">ps<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">node<pos:position pos:line="11" pos:column="22"/></name></name></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">strp<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <name><name pos:line="12" pos:column="12">ps<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">vbuff<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">.<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">curpos<pos:position pos:line="12" pos:column="28"/></name></name></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">cur_len<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">strp<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">-<pos:position pos:line="13" pos:column="21"/></operator> <name><name pos:line="13" pos:column="22">active<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">first_avail<pos:position pos:line="13" pos:column="41"/></name></name></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">size<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <name pos:line="14" pos:column="12">cur_len<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">&lt;&lt;<pos:position pos:line="14" pos:column="28"/></operator> <literal type="number" pos:line="14" pos:column="23">1<pos:position pos:line="14" pos:column="24"/></literal></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* Make sure that we don't try to use a block that has less
     * than APR_PSPRINTF_MIN_STRINGSIZE bytes left in it.  This
     * also catches the case where size == 0, which would result
     * in reusing a block that can't even hold the NUL byte.
     */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">size<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">&lt;<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="16">APR_PSPRINTF_MIN_STRINGSIZE<pos:position pos:line="21" pos:column="43"/></name></expr>)<pos:position pos:line="21" pos:column="44"/></condition><then pos:line="21" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="9">size<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">APR_PSPRINTF_MIN_STRINGSIZE<pos:position pos:line="22" pos:column="43"/></name></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="24" pos:column="5">node<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <name><name pos:line="24" pos:column="12">active<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">next<pos:position pos:line="24" pos:column="24"/></name></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><name><name pos:line="25" pos:column="10">ps<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">got_a_new_node<pos:position pos:line="25" pos:column="28"/></name></name>
        <operator pos:line="26" pos:column="9">&amp;&amp;<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="12">size<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">&lt;<pos:position pos:line="26" pos:column="21"/></operator> <call pos:line="26" pos:column="19">(<name pos:line="26" pos:column="20">apr_size_t<pos:position pos:line="26" pos:column="30"/></name>)<argument_list pos:line="26" pos:column="31">(<argument><expr><name><name pos:line="26" pos:column="32">node<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">endp<pos:position pos:line="26" pos:column="42"/></name></name> <operator pos:line="26" pos:column="43">-<pos:position pos:line="26" pos:column="44"/></operator> <name><name pos:line="26" pos:column="45">node<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">-&gt;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="51">first_avail<pos:position pos:line="26" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="64"/></condition><then pos:line="26" pos:column="64"> <block pos:line="26" pos:column="65">{

        <expr_stmt><expr><call><name pos:line="28" pos:column="9">list_remove<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">node<pos:position pos:line="28" pos:column="25"/></name></expr></argument>)<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">list_insert<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">node<pos:position pos:line="29" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="27">active<pos:position pos:line="29" pos:column="33"/></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="31" pos:column="9">node<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">free_index<pos:position pos:line="31" pos:column="25"/></name></name> <operator pos:line="31" pos:column="26">=<pos:position pos:line="31" pos:column="27"/></operator> <literal type="number" pos:line="31" pos:column="28">0<pos:position pos:line="31" pos:column="29"/></literal></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="33" pos:column="9">pool<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">active<pos:position pos:line="33" pos:column="21"/></name></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">node<pos:position pos:line="33" pos:column="28"/></name></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>

        <expr_stmt><expr><name pos:line="35" pos:column="9">free_index<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <operator pos:line="35" pos:column="22">(<pos:position pos:line="35" pos:column="23"/></operator><call><name pos:line="35" pos:column="23">APR_ALIGN<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><name><name pos:line="35" pos:column="33">active<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">-&gt;<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="41">endp<pos:position pos:line="35" pos:column="45"/></name></name> <operator pos:line="35" pos:column="46">-<pos:position pos:line="35" pos:column="47"/></operator> <name><name pos:line="35" pos:column="48">active<pos:position pos:line="35" pos:column="54"/></name><operator pos:line="35" pos:column="54">-&gt;<pos:position pos:line="35" pos:column="59"/></operator><name pos:line="35" pos:column="56">first_avail<pos:position pos:line="35" pos:column="67"/></name></name> <operator pos:line="35" pos:column="68">+<pos:position pos:line="35" pos:column="69"/></operator> <literal type="number" pos:line="35" pos:column="70">1<pos:position pos:line="35" pos:column="71"/></literal></expr></argument>,
                                <argument><expr><name pos:line="36" pos:column="33">BOUNDARY_SIZE<pos:position pos:line="36" pos:column="46"/></name></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call> <operator pos:line="36" pos:column="48">-<pos:position pos:line="36" pos:column="49"/></operator> <name pos:line="36" pos:column="50">BOUNDARY_SIZE<pos:position pos:line="36" pos:column="63"/></name><operator pos:line="36" pos:column="63">)<pos:position pos:line="36" pos:column="64"/></operator> <operator pos:line="36" pos:column="65">&gt;&gt;<pos:position pos:line="36" pos:column="70"/></operator> <name pos:line="36" pos:column="68">BOUNDARY_INDEX<pos:position pos:line="36" pos:column="82"/></name></expr>;<pos:position pos:line="36" pos:column="83"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="38" pos:column="9">active<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">free_index<pos:position pos:line="38" pos:column="27"/></name></name> <operator pos:line="38" pos:column="28">=<pos:position pos:line="38" pos:column="29"/></operator> <name pos:line="38" pos:column="30">free_index<pos:position pos:line="38" pos:column="40"/></name></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="39" pos:column="9">node<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <name><name pos:line="39" pos:column="16">active<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">next<pos:position pos:line="39" pos:column="28"/></name></name></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">free_index<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">&lt;<pos:position pos:line="40" pos:column="28"/></operator> <name><name pos:line="40" pos:column="26">node<pos:position pos:line="40" pos:column="30"/></name><operator pos:line="40" pos:column="30">-&gt;<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="32">free_index<pos:position pos:line="40" pos:column="42"/></name></name></expr>)<pos:position pos:line="40" pos:column="43"/></condition><then pos:line="40" pos:column="43"> <block pos:line="40" pos:column="44">{
            <do pos:line="41" pos:column="13">do <block pos:line="41" pos:column="16">{
                <expr_stmt><expr><name pos:line="42" pos:column="17">node<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <name><name pos:line="42" pos:column="24">node<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-&gt;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="30">next<pos:position pos:line="42" pos:column="34"/></name></name></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="43" pos:column="14"/></block>
            while <condition pos:line="44" pos:column="19">(<expr><name pos:line="44" pos:column="20">free_index<pos:position pos:line="44" pos:column="30"/></name> <operator pos:line="44" pos:column="31">&lt;<pos:position pos:line="44" pos:column="35"/></operator> <name><name pos:line="44" pos:column="33">node<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">-&gt;<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="39">free_index<pos:position pos:line="44" pos:column="49"/></name></name></expr>)<pos:position pos:line="44" pos:column="50"/></condition>;<pos:position pos:line="44" pos:column="51"/></do>

            <expr_stmt><expr><call><name pos:line="46" pos:column="13">list_remove<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">active<pos:position pos:line="46" pos:column="31"/></name></expr></argument>)<pos:position pos:line="46" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">list_insert<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">active<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="33">node<pos:position pos:line="47" pos:column="37"/></name></expr></argument>)<pos:position pos:line="47" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="50" pos:column="9">node<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <name><name pos:line="50" pos:column="16">pool<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">-&gt;<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="22">active<pos:position pos:line="50" pos:column="28"/></name></name></expr>;<pos:position pos:line="50" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then>
    <else pos:line="52" pos:column="5">else <block pos:line="52" pos:column="10">{
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><operator pos:line="53" pos:column="13">(<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">node<pos:position pos:line="53" pos:column="18"/></name> <operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator> <call><name pos:line="53" pos:column="21">allocator_alloc<pos:position pos:line="53" pos:column="36"/></name><argument_list pos:line="53" pos:column="36">(<argument><expr><name><name pos:line="53" pos:column="37">pool<pos:position pos:line="53" pos:column="41"/></name><operator pos:line="53" pos:column="41">-&gt;<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="43">allocator<pos:position pos:line="53" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="54">size<pos:position pos:line="53" pos:column="58"/></name></expr></argument>)<pos:position pos:line="53" pos:column="59"/></argument_list></call><operator pos:line="53" pos:column="59">)<pos:position pos:line="53" pos:column="60"/></operator> <operator pos:line="53" pos:column="61">==<pos:position pos:line="53" pos:column="63"/></operator> <name pos:line="53" pos:column="64">NULL<pos:position pos:line="53" pos:column="68"/></name></expr>)<pos:position pos:line="53" pos:column="69"/></condition><then pos:line="53" pos:column="69">
            <block type="pseudo"><return pos:line="54" pos:column="13">return <expr><operator pos:line="54" pos:column="20">-<pos:position pos:line="54" pos:column="21"/></operator><literal type="number" pos:line="54" pos:column="21">1<pos:position pos:line="54" pos:column="22"/></literal></expr>;<pos:position pos:line="54" pos:column="23"/></return></block></then></if>

        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">ps<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">-&gt;<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="17">got_a_new_node<pos:position pos:line="56" pos:column="31"/></name></name></expr>)<pos:position pos:line="56" pos:column="32"/></condition><then pos:line="56" pos:column="32"> <block pos:line="56" pos:column="33">{
            <expr_stmt><expr><name><name pos:line="57" pos:column="13">active<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">-&gt;<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="21">next<pos:position pos:line="57" pos:column="25"/></name></name> <operator pos:line="57" pos:column="26">=<pos:position pos:line="57" pos:column="27"/></operator> <name><name pos:line="57" pos:column="28">ps<pos:position pos:line="57" pos:column="30"/></name><operator pos:line="57" pos:column="30">-&gt;<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="32">free<pos:position pos:line="57" pos:column="36"/></name></name></expr>;<pos:position pos:line="57" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="58" pos:column="13">ps<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">-&gt;<pos:position pos:line="58" pos:column="20"/></operator><name pos:line="58" pos:column="17">free<pos:position pos:line="58" pos:column="21"/></name></name> <operator pos:line="58" pos:column="22">=<pos:position pos:line="58" pos:column="23"/></operator> <name pos:line="58" pos:column="24">active<pos:position pos:line="58" pos:column="30"/></name></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="61" pos:column="9">ps<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">-&gt;<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="13">got_a_new_node<pos:position pos:line="61" pos:column="27"/></name></name> <operator pos:line="61" pos:column="28">=<pos:position pos:line="61" pos:column="29"/></operator> <literal type="number" pos:line="61" pos:column="30">1<pos:position pos:line="61" pos:column="31"/></literal></expr>;<pos:position pos:line="61" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="64" pos:column="5">memcpy<pos:position pos:line="64" pos:column="11"/></name><argument_list pos:line="64" pos:column="11">(<argument><expr><name><name pos:line="64" pos:column="12">node<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">-&gt;<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="18">first_avail<pos:position pos:line="64" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="31">active<pos:position pos:line="64" pos:column="37"/></name><operator pos:line="64" pos:column="37">-&gt;<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="39">first_avail<pos:position pos:line="64" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="52">cur_len<pos:position pos:line="64" pos:column="59"/></name></expr></argument>)<pos:position pos:line="64" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="66" pos:column="5">ps<pos:position pos:line="66" pos:column="7"/></name><operator pos:line="66" pos:column="7">-&gt;<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="9">node<pos:position pos:line="66" pos:column="13"/></name></name> <operator pos:line="66" pos:column="14">=<pos:position pos:line="66" pos:column="15"/></operator> <name pos:line="66" pos:column="16">node<pos:position pos:line="66" pos:column="20"/></name></expr>;<pos:position pos:line="66" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">ps<pos:position pos:line="67" pos:column="7"/></name><operator pos:line="67" pos:column="7">-&gt;<pos:position pos:line="67" pos:column="12"/></operator><name pos:line="67" pos:column="9">vbuff<pos:position pos:line="67" pos:column="14"/></name><operator pos:line="67" pos:column="14">.<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="15">curpos<pos:position pos:line="67" pos:column="21"/></name></name> <operator pos:line="67" pos:column="22">=<pos:position pos:line="67" pos:column="23"/></operator> <name><name pos:line="67" pos:column="24">node<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">-&gt;<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="30">first_avail<pos:position pos:line="67" pos:column="41"/></name></name> <operator pos:line="67" pos:column="42">+<pos:position pos:line="67" pos:column="43"/></operator> <name pos:line="67" pos:column="44">cur_len<pos:position pos:line="67" pos:column="51"/></name></expr>;<pos:position pos:line="67" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="68" pos:column="5">ps<pos:position pos:line="68" pos:column="7"/></name><operator pos:line="68" pos:column="7">-&gt;<pos:position pos:line="68" pos:column="12"/></operator><name pos:line="68" pos:column="9">vbuff<pos:position pos:line="68" pos:column="14"/></name><operator pos:line="68" pos:column="14">.<pos:position pos:line="68" pos:column="15"/></operator><name pos:line="68" pos:column="15">endpos<pos:position pos:line="68" pos:column="21"/></name></name> <operator pos:line="68" pos:column="22">=<pos:position pos:line="68" pos:column="23"/></operator> <name><name pos:line="68" pos:column="24">node<pos:position pos:line="68" pos:column="28"/></name><operator pos:line="68" pos:column="28">-&gt;<pos:position pos:line="68" pos:column="33"/></operator><name pos:line="68" pos:column="30">endp<pos:position pos:line="68" pos:column="34"/></name></name> <operator pos:line="68" pos:column="35">-<pos:position pos:line="68" pos:column="36"/></operator> <literal type="number" pos:line="68" pos:column="37">1<pos:position pos:line="68" pos:column="38"/></literal></expr>;<pos:position pos:line="68" pos:column="39"/></expr_stmt> <comment type="block" pos:line="68" pos:column="40">/* Save a byte for NUL terminator */</comment>

    <return pos:line="70" pos:column="5">return <expr><literal type="number" pos:line="70" pos:column="12">0<pos:position pos:line="70" pos:column="13"/></literal></expr>;<pos:position pos:line="70" pos:column="14"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

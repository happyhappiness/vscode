<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5312.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">winnt_run<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">apr_pool_t<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">_pconf<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">apr_pool_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">plog<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">server_rec<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">s<pos:position pos:line="1" pos:column="73"/></name></decl></parameter> )<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="3" pos:column="5">static<pos:position pos:line="3" pos:column="11"/></specifier> <type><name pos:line="3" pos:column="12">int<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">restart<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><literal type="number" pos:line="3" pos:column="26">0<pos:position pos:line="3" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>            <comment type="block" pos:line="3" pos:column="40">/* Default is "not a restart" */</comment>

    <comment type="block" pos:line="5" pos:column="5">/* ### If non-graceful restarts are ever introduced - we need to rerun
     * the pre_mpm hook on subsequent non-graceful restarts.  But Win32
     * has only graceful style restarts - and we need this hook to act
     * the same on Win32 as on Unix.
     */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">restart<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">&amp;&amp;<pos:position pos:line="10" pos:column="28"/></operator> <operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><operator pos:line="10" pos:column="22">(<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">parent_pid<pos:position pos:line="10" pos:column="33"/></name> <operator pos:line="10" pos:column="34">==<pos:position pos:line="10" pos:column="36"/></operator> <name pos:line="10" pos:column="37">my_pid<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">)<pos:position pos:line="10" pos:column="44"/></operator> <operator pos:line="10" pos:column="45">||<pos:position pos:line="10" pos:column="47"/></operator> <name pos:line="10" pos:column="48">one_process<pos:position pos:line="10" pos:column="59"/></name><operator pos:line="10" pos:column="59">)<pos:position pos:line="10" pos:column="60"/></operator></expr>)<pos:position pos:line="10" pos:column="61"/></condition><then pos:line="10" pos:column="61"> <block pos:line="10" pos:column="62">{
        <comment type="block" pos:line="11" pos:column="9">/* Set up the scoreboard. */</comment>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">ap_run_pre_mpm<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name><name pos:line="12" pos:column="28">s<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">process<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">pool<pos:position pos:line="12" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">SB_SHARED<pos:position pos:line="12" pos:column="55"/></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call> <operator pos:line="12" pos:column="57">!=<pos:position pos:line="12" pos:column="59"/></operator> <name pos:line="12" pos:column="60">OK<pos:position pos:line="12" pos:column="62"/></name></expr>)<pos:position pos:line="12" pos:column="63"/></condition><then pos:line="12" pos:column="63"> <block pos:line="12" pos:column="64">{
            <return pos:line="13" pos:column="13">return <expr><name pos:line="13" pos:column="20">DONE<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></return>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">parent_pid<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">!=<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="24">my_pid<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">)<pos:position pos:line="17" pos:column="31"/></operator> <operator pos:line="17" pos:column="32">||<pos:position pos:line="17" pos:column="34"/></operator> <name pos:line="17" pos:column="35">one_process<pos:position pos:line="17" pos:column="46"/></name></expr>)<pos:position pos:line="17" pos:column="47"/></condition><then pos:line="17" pos:column="47">
    <block pos:line="18" pos:column="5">{
        <comment type="block" pos:line="19" pos:column="9">/* The child process or in one_process (debug) mode
         */</comment>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">ap_log_error<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">APLOG_MARK<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">APLOG_NOTICE<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">APR_SUCCESS<pos:position pos:line="21" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="61">ap_server_conf<pos:position pos:line="21" pos:column="75"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="22" pos:column="22">"Child %d: Child process is running"<pos:position pos:line="22" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="60">my_pid<pos:position pos:line="22" pos:column="66"/></name></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="24" pos:column="9">child_main<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">pconf<pos:position pos:line="24" pos:column="25"/></name></expr></argument>)<pos:position pos:line="24" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="26" pos:column="9">ap_log_error<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">APLOG_MARK<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">APLOG_NOTICE<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="48">APR_SUCCESS<pos:position pos:line="26" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="61">ap_server_conf<pos:position pos:line="26" pos:column="75"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="27" pos:column="22">"Child %d: Child process is exiting"<pos:position pos:line="27" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="60">my_pid<pos:position pos:line="27" pos:column="66"/></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">DONE<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then>
    <else pos:line="30" pos:column="5">else
    <block pos:line="31" pos:column="5">{
        <comment type="block" pos:line="32" pos:column="9">/* A real-honest to goodness parent */</comment>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_log_error<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">APLOG_MARK<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="34">APLOG_NOTICE<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="48">0<pos:position pos:line="33" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">ap_server_conf<pos:position pos:line="33" pos:column="65"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="34" pos:column="22">"%s configured -- resuming normal operations"<pos:position pos:line="34" pos:column="67"/></literal></expr></argument>,
                     <argument><expr><call><name pos:line="35" pos:column="22">ap_get_server_description<pos:position pos:line="35" pos:column="47"/></name><argument_list pos:line="35" pos:column="47">()<pos:position pos:line="35" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_error<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">APLOG_MARK<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">APLOG_NOTICE<pos:position pos:line="36" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="48">0<pos:position pos:line="36" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">ap_server_conf<pos:position pos:line="36" pos:column="65"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="37" pos:column="22">"Server built: %s"<pos:position pos:line="37" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="42">ap_get_server_built<pos:position pos:line="37" pos:column="61"/></name><argument_list pos:line="37" pos:column="61">()<pos:position pos:line="37" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ap_log_command_line<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">plog<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">s<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>

        <expr_stmt><expr><name pos:line="40" pos:column="9">restart<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <call><name pos:line="40" pos:column="19">master_main<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">ap_server_conf<pos:position pos:line="40" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="47">shutdown_event<pos:position pos:line="40" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="63">restart_event<pos:position pos:line="40" pos:column="76"/></name></expr></argument>)<pos:position pos:line="40" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="78"/></expr_stmt>

        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">restart<pos:position pos:line="42" pos:column="21"/></name></expr>)<pos:position pos:line="42" pos:column="22"/></condition><then pos:line="42" pos:column="22">
        <block pos:line="43" pos:column="9">{
            <comment type="block" pos:line="44" pos:column="13">/* Shutting down. Clean up... */</comment>
            <decl_stmt><decl><type><specifier pos:line="45" pos:column="13">const<pos:position pos:line="45" pos:column="18"/></specifier> <name pos:line="45" pos:column="19">char<pos:position pos:line="45" pos:column="23"/></name> <modifier pos:line="45" pos:column="24">*<pos:position pos:line="45" pos:column="25"/></modifier></type><name pos:line="45" pos:column="25">pidfile<pos:position pos:line="45" pos:column="32"/></name> <init pos:line="45" pos:column="33">= <expr><call><name pos:line="45" pos:column="35">ap_server_root_relative<pos:position pos:line="45" pos:column="58"/></name> <argument_list pos:line="45" pos:column="59">(<argument><expr><name pos:line="45" pos:column="60">pconf<pos:position pos:line="45" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="67">ap_pid_fname<pos:position pos:line="45" pos:column="79"/></name></expr></argument>)<pos:position pos:line="45" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="81"/></decl_stmt>

            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">pidfile<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">!=<pos:position pos:line="47" pos:column="27"/></operator> <name pos:line="47" pos:column="28">NULL<pos:position pos:line="47" pos:column="32"/></name> <operator pos:line="47" pos:column="33">&amp;&amp;<pos:position pos:line="47" pos:column="43"/></operator> <call><name pos:line="47" pos:column="36">unlink<pos:position pos:line="47" pos:column="42"/></name><argument_list pos:line="47" pos:column="42">(<argument><expr><name pos:line="47" pos:column="43">pidfile<pos:position pos:line="47" pos:column="50"/></name></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call> <operator pos:line="47" pos:column="52">==<pos:position pos:line="47" pos:column="54"/></operator> <literal type="number" pos:line="47" pos:column="55">0<pos:position pos:line="47" pos:column="56"/></literal></expr>)<pos:position pos:line="47" pos:column="57"/></condition><then pos:line="47" pos:column="57"> <block pos:line="47" pos:column="58">{
                <expr_stmt><expr><call><name pos:line="48" pos:column="17">ap_log_error<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">APLOG_MARK<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="42">APLOG_INFO<pos:position pos:line="48" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="54">APR_SUCCESS<pos:position pos:line="48" pos:column="65"/></name></expr></argument>,
                             <argument><expr><name pos:line="49" pos:column="30">ap_server_conf<pos:position pos:line="49" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="46">"removed PID file %s (pid=%ld)"<pos:position pos:line="49" pos:column="77"/></literal></expr></argument>,
                             <argument><expr><name pos:line="50" pos:column="30">pidfile<pos:position pos:line="50" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="39">GetCurrentProcessId<pos:position pos:line="50" pos:column="58"/></name><argument_list pos:line="50" pos:column="58">()<pos:position pos:line="50" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="51" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">apr_proc_mutex_destroy<pos:position pos:line="52" pos:column="35"/></name><argument_list pos:line="52" pos:column="35">(<argument><expr><name pos:line="52" pos:column="36">start_mutex<pos:position pos:line="52" pos:column="47"/></name></expr></argument>)<pos:position pos:line="52" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="49"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="54" pos:column="13">CloseHandle<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><name pos:line="54" pos:column="25">restart_event<pos:position pos:line="54" pos:column="38"/></name></expr></argument>)<pos:position pos:line="54" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">CloseHandle<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><name pos:line="55" pos:column="25">shutdown_event<pos:position pos:line="55" pos:column="39"/></name></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt>

            <return pos:line="57" pos:column="13">return <expr><name pos:line="57" pos:column="20">DONE<pos:position pos:line="57" pos:column="24"/></name></expr>;<pos:position pos:line="57" pos:column="25"/></return>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>

    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">OK<pos:position pos:line="61" pos:column="14"/></name></expr>;<pos:position pos:line="61" pos:column="15"/></return> <comment type="block" pos:line="61" pos:column="16">/* Restart */</comment>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

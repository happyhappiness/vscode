<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2790_httpd-2.0.58.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">RegisterAppWithWinSock<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">nlm_handle<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">err<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">WSADATA<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">wsaData<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">WORD<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">wVersionRequested<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><call><name pos:line="5" pos:column="30">MAKEWORD<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">WSAHighByte<pos:position pos:line="5" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="52">WSALowByte<pos:position pos:line="5" pos:column="62"/></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="64"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">WSAStartupWithNLMHandle<pos:position pos:line="7" pos:column="33"/></name></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34">
    <block pos:line="8" pos:column="5">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><operator pos:line="9" pos:column="14">(<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">WSAStartupWithNLMHandle<pos:position pos:line="9" pos:column="38"/></name> <operator pos:line="9" pos:column="39">=<pos:position pos:line="9" pos:column="40"/></operator> <call><name pos:line="9" pos:column="41">ImportPublicObject<pos:position pos:line="9" pos:column="59"/></name><argument_list pos:line="9" pos:column="59">(<argument><expr><name pos:line="9" pos:column="60">gLibHandle<pos:position pos:line="9" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="72">"WSAStartupWithNLMHandle"<pos:position pos:line="9" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="98"/></argument_list></call><operator pos:line="9" pos:column="98">)<pos:position pos:line="9" pos:column="99"/></operator></expr>)<pos:position pos:line="9" pos:column="100"/></condition><then pos:line="9" pos:column="100">
            <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="13">WSAStartupWithNLMHandle<pos:position pos:line="10" pos:column="36"/></name> <operator pos:line="10" pos:column="37">=<pos:position pos:line="10" pos:column="38"/></operator> <name pos:line="10" pos:column="39">wsa_startup_with_handle<pos:position pos:line="10" pos:column="62"/></name></expr>;<pos:position pos:line="10" pos:column="63"/></expr_stmt></block></then></if>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="13" pos:column="5">err<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call pos:line="13" pos:column="11">(<modifier pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></modifier><name pos:line="13" pos:column="13">WSAStartupWithNLMHandle<pos:position pos:line="13" pos:column="36"/></name>)<argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">wVersionRequested<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="57">&amp;<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="58">wsaData<pos:position pos:line="13" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="67">nlm_handle<pos:position pos:line="13" pos:column="77"/></name></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="79"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">LOBYTE<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name><name pos:line="15" pos:column="16">wsaData<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">.<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">wVersion<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call> <operator pos:line="15" pos:column="34">!=<pos:position pos:line="15" pos:column="36"/></operator> <name pos:line="15" pos:column="37">WSAHighByte<pos:position pos:line="15" pos:column="48"/></name> <operator pos:line="15" pos:column="49">||<pos:position pos:line="15" pos:column="51"/></operator>
        <call><name pos:line="16" pos:column="9">HIBYTE<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name><name pos:line="16" pos:column="16">wsaData<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">.<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">wVersion<pos:position pos:line="16" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call> <operator pos:line="16" pos:column="34">!=<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="37">WSALowByte<pos:position pos:line="16" pos:column="47"/></name></expr>)<pos:position pos:line="16" pos:column="48"/></condition><then pos:line="16" pos:column="48"> <block pos:line="16" pos:column="49">{
        
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">UnregisterAppWithWinSock<pos:position pos:line="18" pos:column="33"/></name> <argument_list pos:line="18" pos:column="34">(<argument><expr><name pos:line="18" pos:column="35">nlm_handle<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">APR_EEXIST<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">err<pos:position pos:line="22" pos:column="15"/></name></expr>;<pos:position pos:line="22" pos:column="16"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

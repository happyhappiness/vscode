<function xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position"><specifier pos:line="985" pos:column="1">static<pos:position pos:line="985" pos:column="7"/></specifier> <type><name pos:line="985" pos:column="8">void<pos:position pos:line="985" pos:column="12"/></name></type> <name pos:line="985" pos:column="13">am_setup<pos:position pos:line="985" pos:column="21"/></name><parameter_list pos:line="985" pos:column="21">(<parameter><decl><type><name><name pos:line="985" pos:column="22">struct<pos:position pos:line="985" pos:column="28"/></name> <name pos:line="985" pos:column="29">am_state<pos:position pos:line="985" pos:column="37"/></name></name> <modifier pos:line="985" pos:column="38">*<pos:position pos:line="985" pos:column="39"/></modifier></type><name pos:line="985" pos:column="39">state<pos:position pos:line="985" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="985" pos:column="46">enum<pos:position pos:line="985" pos:column="50"/></name> <name pos:line="985" pos:column="51">patch_format<pos:position pos:line="985" pos:column="63"/></name></name></type> <name pos:line="985" pos:column="64">patch_format<pos:position pos:line="985" pos:column="76"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="986" pos:column="25">const<pos:position pos:line="986" pos:column="30"/></specifier> <name pos:line="986" pos:column="31">char<pos:position pos:line="986" pos:column="35"/></name> <modifier pos:line="986" pos:column="36">*<pos:position pos:line="986" pos:column="37"/></modifier><modifier pos:line="986" pos:column="37">*<pos:position pos:line="986" pos:column="38"/></modifier></type><name pos:line="986" pos:column="38">paths<pos:position pos:line="986" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="986" pos:column="45">int<pos:position pos:line="986" pos:column="48"/></name></type> <name pos:line="986" pos:column="49">keep_cr<pos:position pos:line="986" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="986" pos:column="57"/></parameter_list>
<block pos:line="987" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="988" pos:column="9">unsigned<pos:position pos:line="988" pos:column="17"/></name> <name pos:line="988" pos:column="18">char<pos:position pos:line="988" pos:column="22"/></name></type> <name><name pos:line="988" pos:column="23">curr_head<pos:position pos:line="988" pos:column="32"/></name><index pos:line="988" pos:column="32">[<expr><name pos:line="988" pos:column="33">GIT_SHA1_RAWSZ<pos:position pos:line="988" pos:column="47"/></name></expr>]<pos:position pos:line="988" pos:column="48"/></index></name></decl>;<pos:position pos:line="988" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="989" pos:column="9">const<pos:position pos:line="989" pos:column="14"/></specifier> <name pos:line="989" pos:column="15">char<pos:position pos:line="989" pos:column="19"/></name> <modifier pos:line="989" pos:column="20">*<pos:position pos:line="989" pos:column="21"/></modifier></type><name pos:line="989" pos:column="21">str<pos:position pos:line="989" pos:column="24"/></name></decl>;<pos:position pos:line="989" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="990" pos:column="9">struct<pos:position pos:line="990" pos:column="15"/></name> <name pos:line="990" pos:column="16">strbuf<pos:position pos:line="990" pos:column="22"/></name></name></type> <name pos:line="990" pos:column="23">sb<pos:position pos:line="990" pos:column="25"/></name> <init pos:line="990" pos:column="26">= <expr><name pos:line="990" pos:column="28">STRBUF_INIT<pos:position pos:line="990" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="990" pos:column="40"/></decl_stmt>

	<if pos:line="992" pos:column="9">if <condition pos:line="992" pos:column="12">(<expr><operator pos:line="992" pos:column="13">!<pos:position pos:line="992" pos:column="14"/></operator><name pos:line="992" pos:column="14">patch_format<pos:position pos:line="992" pos:column="26"/></name></expr>)<pos:position pos:line="992" pos:column="27"/></condition><then pos:line="992" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="993" pos:column="17">patch_format<pos:position pos:line="993" pos:column="29"/></name> <operator pos:line="993" pos:column="30">=<pos:position pos:line="993" pos:column="31"/></operator> <call><name pos:line="993" pos:column="32">detect_patch_format<pos:position pos:line="993" pos:column="51"/></name><argument_list pos:line="993" pos:column="51">(<argument><expr><name pos:line="993" pos:column="52">paths<pos:position pos:line="993" pos:column="57"/></name></expr></argument>)<pos:position pos:line="993" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="993" pos:column="59"/></expr_stmt></block></then></if>

	<if pos:line="995" pos:column="9">if <condition pos:line="995" pos:column="12">(<expr><operator pos:line="995" pos:column="13">!<pos:position pos:line="995" pos:column="14"/></operator><name pos:line="995" pos:column="14">patch_format<pos:position pos:line="995" pos:column="26"/></name></expr>)<pos:position pos:line="995" pos:column="27"/></condition><then pos:line="995" pos:column="27"> <block pos:line="995" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="996" pos:column="17">fprintf_ln<pos:position pos:line="996" pos:column="27"/></name><argument_list pos:line="996" pos:column="27">(<argument><expr><name pos:line="996" pos:column="28">stderr<pos:position pos:line="996" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="996" pos:column="36">_<pos:position pos:line="996" pos:column="37"/></name><argument_list pos:line="996" pos:column="37">(<argument><expr><literal type="string" pos:line="996" pos:column="38">"Patch format detection failed."<pos:position pos:line="996" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="996" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="996" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="996" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="997" pos:column="17">exit<pos:position pos:line="997" pos:column="21"/></name><argument_list pos:line="997" pos:column="21">(<argument><expr><literal type="number" pos:line="997" pos:column="22">128<pos:position pos:line="997" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="997" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="997" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="998" pos:column="10"/></block></then></if>

	<if pos:line="1000" pos:column="9">if <condition pos:line="1000" pos:column="12">(<expr><call><name pos:line="1000" pos:column="13">mkdir<pos:position pos:line="1000" pos:column="18"/></name><argument_list pos:line="1000" pos:column="18">(<argument><expr><name><name pos:line="1000" pos:column="19">state<pos:position pos:line="1000" pos:column="24"/></name><operator pos:line="1000" pos:column="24">-&gt;<pos:position pos:line="1000" pos:column="29"/></operator><name pos:line="1000" pos:column="26">dir<pos:position pos:line="1000" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="1000" pos:column="31">0777<pos:position pos:line="1000" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="1000" pos:column="36"/></argument_list></call> <operator pos:line="1000" pos:column="37">&lt;<pos:position pos:line="1000" pos:column="41"/></operator> <literal type="number" pos:line="1000" pos:column="39">0<pos:position pos:line="1000" pos:column="40"/></literal> <operator pos:line="1000" pos:column="41">&amp;&amp;<pos:position pos:line="1000" pos:column="51"/></operator> <name pos:line="1000" pos:column="44">errno<pos:position pos:line="1000" pos:column="49"/></name> <operator pos:line="1000" pos:column="50">!=<pos:position pos:line="1000" pos:column="52"/></operator> <name pos:line="1000" pos:column="53">EEXIST<pos:position pos:line="1000" pos:column="59"/></name></expr>)<pos:position pos:line="1000" pos:column="60"/></condition><then pos:line="1000" pos:column="60">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="1001" pos:column="17">die_errno<pos:position pos:line="1001" pos:column="26"/></name><argument_list pos:line="1001" pos:column="26">(<argument><expr><call><name pos:line="1001" pos:column="27">_<pos:position pos:line="1001" pos:column="28"/></name><argument_list pos:line="1001" pos:column="28">(<argument><expr><literal type="string" pos:line="1001" pos:column="29">"failed to create directory '%s'"<pos:position pos:line="1001" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="1001" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="1001" pos:column="65">state<pos:position pos:line="1001" pos:column="70"/></name><operator pos:line="1001" pos:column="70">-&gt;<pos:position pos:line="1001" pos:column="75"/></operator><name pos:line="1001" pos:column="72">dir<pos:position pos:line="1001" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="1001" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="1001" pos:column="77"/></expr_stmt></block></then></if>

	<if pos:line="1003" pos:column="9">if <condition pos:line="1003" pos:column="12">(<expr><call><name pos:line="1003" pos:column="13">split_mail<pos:position pos:line="1003" pos:column="23"/></name><argument_list pos:line="1003" pos:column="23">(<argument><expr><name pos:line="1003" pos:column="24">state<pos:position pos:line="1003" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1003" pos:column="31">patch_format<pos:position pos:line="1003" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="1003" pos:column="45">paths<pos:position pos:line="1003" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1003" pos:column="52">keep_cr<pos:position pos:line="1003" pos:column="59"/></name></expr></argument>)<pos:position pos:line="1003" pos:column="60"/></argument_list></call> <operator pos:line="1003" pos:column="61">&lt;<pos:position pos:line="1003" pos:column="65"/></operator> <literal type="number" pos:line="1003" pos:column="63">0<pos:position pos:line="1003" pos:column="64"/></literal></expr>)<pos:position pos:line="1003" pos:column="65"/></condition><then pos:line="1003" pos:column="65"> <block pos:line="1003" pos:column="66">{
		<expr_stmt><expr><call><name pos:line="1004" pos:column="17">am_destroy<pos:position pos:line="1004" pos:column="27"/></name><argument_list pos:line="1004" pos:column="27">(<argument><expr><name pos:line="1004" pos:column="28">state<pos:position pos:line="1004" pos:column="33"/></name></expr></argument>)<pos:position pos:line="1004" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="1004" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="1005" pos:column="17">die<pos:position pos:line="1005" pos:column="20"/></name><argument_list pos:line="1005" pos:column="20">(<argument><expr><call><name pos:line="1005" pos:column="21">_<pos:position pos:line="1005" pos:column="22"/></name><argument_list pos:line="1005" pos:column="22">(<argument><expr><literal type="string" pos:line="1005" pos:column="23">"Failed to split patches."<pos:position pos:line="1005" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="1005" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="1005" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1005" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="1006" pos:column="10"/></block></then></if>

	<if pos:line="1008" pos:column="9">if <condition pos:line="1008" pos:column="12">(<expr><name><name pos:line="1008" pos:column="13">state<pos:position pos:line="1008" pos:column="18"/></name><operator pos:line="1008" pos:column="18">-&gt;<pos:position pos:line="1008" pos:column="23"/></operator><name pos:line="1008" pos:column="20">rebasing<pos:position pos:line="1008" pos:column="28"/></name></name></expr>)<pos:position pos:line="1008" pos:column="29"/></condition><then pos:line="1008" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="1009" pos:column="17">state<pos:position pos:line="1009" pos:column="22"/></name><operator pos:line="1009" pos:column="22">-&gt;<pos:position pos:line="1009" pos:column="27"/></operator><name pos:line="1009" pos:column="24">threeway<pos:position pos:line="1009" pos:column="32"/></name></name> <operator pos:line="1009" pos:column="33">=<pos:position pos:line="1009" pos:column="34"/></operator> <literal type="number" pos:line="1009" pos:column="35">1<pos:position pos:line="1009" pos:column="36"/></literal></expr>;<pos:position pos:line="1009" pos:column="37"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="1011" pos:column="9">write_state_bool<pos:position pos:line="1011" pos:column="25"/></name><argument_list pos:line="1011" pos:column="25">(<argument><expr><name pos:line="1011" pos:column="26">state<pos:position pos:line="1011" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1011" pos:column="33">"threeway"<pos:position pos:line="1011" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="1011" pos:column="45">state<pos:position pos:line="1011" pos:column="50"/></name><operator pos:line="1011" pos:column="50">-&gt;<pos:position pos:line="1011" pos:column="55"/></operator><name pos:line="1011" pos:column="52">threeway<pos:position pos:line="1011" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="1011" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1011" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="1012" pos:column="9">write_state_bool<pos:position pos:line="1012" pos:column="25"/></name><argument_list pos:line="1012" pos:column="25">(<argument><expr><name pos:line="1012" pos:column="26">state<pos:position pos:line="1012" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1012" pos:column="33">"quiet"<pos:position pos:line="1012" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="1012" pos:column="42">state<pos:position pos:line="1012" pos:column="47"/></name><operator pos:line="1012" pos:column="47">-&gt;<pos:position pos:line="1012" pos:column="52"/></operator><name pos:line="1012" pos:column="49">quiet<pos:position pos:line="1012" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="1012" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="1012" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="1013" pos:column="9">write_state_bool<pos:position pos:line="1013" pos:column="25"/></name><argument_list pos:line="1013" pos:column="25">(<argument><expr><name pos:line="1013" pos:column="26">state<pos:position pos:line="1013" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1013" pos:column="33">"sign"<pos:position pos:line="1013" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="1013" pos:column="41">state<pos:position pos:line="1013" pos:column="46"/></name><operator pos:line="1013" pos:column="46">-&gt;<pos:position pos:line="1013" pos:column="51"/></operator><name pos:line="1013" pos:column="48">signoff<pos:position pos:line="1013" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="1013" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1013" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="1014" pos:column="9">write_state_bool<pos:position pos:line="1014" pos:column="25"/></name><argument_list pos:line="1014" pos:column="25">(<argument><expr><name pos:line="1014" pos:column="26">state<pos:position pos:line="1014" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1014" pos:column="33">"utf8"<pos:position pos:line="1014" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="1014" pos:column="41">state<pos:position pos:line="1014" pos:column="46"/></name><operator pos:line="1014" pos:column="46">-&gt;<pos:position pos:line="1014" pos:column="51"/></operator><name pos:line="1014" pos:column="48">utf8<pos:position pos:line="1014" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="1014" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1014" pos:column="54"/></expr_stmt>

	<switch pos:line="1016" pos:column="9">switch <condition pos:line="1016" pos:column="16">(<expr><name><name pos:line="1016" pos:column="17">state<pos:position pos:line="1016" pos:column="22"/></name><operator pos:line="1016" pos:column="22">-&gt;<pos:position pos:line="1016" pos:column="27"/></operator><name pos:line="1016" pos:column="24">keep<pos:position pos:line="1016" pos:column="28"/></name></name></expr>)<pos:position pos:line="1016" pos:column="29"/></condition> <block pos:line="1016" pos:column="30">{
	<case pos:line="1017" pos:column="9">case <expr><name pos:line="1017" pos:column="14">KEEP_FALSE<pos:position pos:line="1017" pos:column="24"/></name></expr>:<pos:position pos:line="1017" pos:column="25"/></case>
		<expr_stmt><expr><name pos:line="1018" pos:column="17">str<pos:position pos:line="1018" pos:column="20"/></name> <operator pos:line="1018" pos:column="21">=<pos:position pos:line="1018" pos:column="22"/></operator> <literal type="string" pos:line="1018" pos:column="23">"f"<pos:position pos:line="1018" pos:column="26"/></literal></expr>;<pos:position pos:line="1018" pos:column="27"/></expr_stmt>
		<break pos:line="1019" pos:column="17">break;<pos:position pos:line="1019" pos:column="23"/></break>
	<case pos:line="1020" pos:column="9">case <expr><name pos:line="1020" pos:column="14">KEEP_TRUE<pos:position pos:line="1020" pos:column="23"/></name></expr>:<pos:position pos:line="1020" pos:column="24"/></case>
		<expr_stmt><expr><name pos:line="1021" pos:column="17">str<pos:position pos:line="1021" pos:column="20"/></name> <operator pos:line="1021" pos:column="21">=<pos:position pos:line="1021" pos:column="22"/></operator> <literal type="string" pos:line="1021" pos:column="23">"t"<pos:position pos:line="1021" pos:column="26"/></literal></expr>;<pos:position pos:line="1021" pos:column="27"/></expr_stmt>
		<break pos:line="1022" pos:column="17">break;<pos:position pos:line="1022" pos:column="23"/></break>
	<case pos:line="1023" pos:column="9">case <expr><name pos:line="1023" pos:column="14">KEEP_NON_PATCH<pos:position pos:line="1023" pos:column="28"/></name></expr>:<pos:position pos:line="1023" pos:column="29"/></case>
		<expr_stmt><expr><name pos:line="1024" pos:column="17">str<pos:position pos:line="1024" pos:column="20"/></name> <operator pos:line="1024" pos:column="21">=<pos:position pos:line="1024" pos:column="22"/></operator> <literal type="string" pos:line="1024" pos:column="23">"b"<pos:position pos:line="1024" pos:column="26"/></literal></expr>;<pos:position pos:line="1024" pos:column="27"/></expr_stmt>
		<break pos:line="1025" pos:column="17">break;<pos:position pos:line="1025" pos:column="23"/></break>
	<default pos:line="1026" pos:column="9">default:<pos:position pos:line="1026" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="1027" pos:column="17">die<pos:position pos:line="1027" pos:column="20"/></name><argument_list pos:line="1027" pos:column="20">(<argument><expr><literal type="string" pos:line="1027" pos:column="21">"BUG: invalid value for state-&gt;keep"<pos:position pos:line="1027" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="1027" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1027" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="1028" pos:column="10"/></block></switch>

	<expr_stmt><expr><call><name pos:line="1030" pos:column="9">write_state_text<pos:position pos:line="1030" pos:column="25"/></name><argument_list pos:line="1030" pos:column="25">(<argument><expr><name pos:line="1030" pos:column="26">state<pos:position pos:line="1030" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1030" pos:column="33">"keep"<pos:position pos:line="1030" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="1030" pos:column="41">str<pos:position pos:line="1030" pos:column="44"/></name></expr></argument>)<pos:position pos:line="1030" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1030" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="1031" pos:column="9">write_state_bool<pos:position pos:line="1031" pos:column="25"/></name><argument_list pos:line="1031" pos:column="25">(<argument><expr><name pos:line="1031" pos:column="26">state<pos:position pos:line="1031" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1031" pos:column="33">"messageid"<pos:position pos:line="1031" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="1031" pos:column="46">state<pos:position pos:line="1031" pos:column="51"/></name><operator pos:line="1031" pos:column="51">-&gt;<pos:position pos:line="1031" pos:column="56"/></operator><name pos:line="1031" pos:column="53">message_id<pos:position pos:line="1031" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="1031" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="1031" pos:column="65"/></expr_stmt>

	<switch pos:line="1033" pos:column="9">switch <condition pos:line="1033" pos:column="16">(<expr><name><name pos:line="1033" pos:column="17">state<pos:position pos:line="1033" pos:column="22"/></name><operator pos:line="1033" pos:column="22">-&gt;<pos:position pos:line="1033" pos:column="27"/></operator><name pos:line="1033" pos:column="24">scissors<pos:position pos:line="1033" pos:column="32"/></name></name></expr>)<pos:position pos:line="1033" pos:column="33"/></condition> <block pos:line="1033" pos:column="34">{
	<case pos:line="1034" pos:column="9">case <expr><name pos:line="1034" pos:column="14">SCISSORS_UNSET<pos:position pos:line="1034" pos:column="28"/></name></expr>:<pos:position pos:line="1034" pos:column="29"/></case>
		<expr_stmt><expr><name pos:line="1035" pos:column="17">str<pos:position pos:line="1035" pos:column="20"/></name> <operator pos:line="1035" pos:column="21">=<pos:position pos:line="1035" pos:column="22"/></operator> <literal type="string" pos:line="1035" pos:column="23">""<pos:position pos:line="1035" pos:column="25"/></literal></expr>;<pos:position pos:line="1035" pos:column="26"/></expr_stmt>
		<break pos:line="1036" pos:column="17">break;<pos:position pos:line="1036" pos:column="23"/></break>
	<case pos:line="1037" pos:column="9">case <expr><name pos:line="1037" pos:column="14">SCISSORS_FALSE<pos:position pos:line="1037" pos:column="28"/></name></expr>:<pos:position pos:line="1037" pos:column="29"/></case>
		<expr_stmt><expr><name pos:line="1038" pos:column="17">str<pos:position pos:line="1038" pos:column="20"/></name> <operator pos:line="1038" pos:column="21">=<pos:position pos:line="1038" pos:column="22"/></operator> <literal type="string" pos:line="1038" pos:column="23">"f"<pos:position pos:line="1038" pos:column="26"/></literal></expr>;<pos:position pos:line="1038" pos:column="27"/></expr_stmt>
		<break pos:line="1039" pos:column="17">break;<pos:position pos:line="1039" pos:column="23"/></break>
	<case pos:line="1040" pos:column="9">case <expr><name pos:line="1040" pos:column="14">SCISSORS_TRUE<pos:position pos:line="1040" pos:column="27"/></name></expr>:<pos:position pos:line="1040" pos:column="28"/></case>
		<expr_stmt><expr><name pos:line="1041" pos:column="17">str<pos:position pos:line="1041" pos:column="20"/></name> <operator pos:line="1041" pos:column="21">=<pos:position pos:line="1041" pos:column="22"/></operator> <literal type="string" pos:line="1041" pos:column="23">"t"<pos:position pos:line="1041" pos:column="26"/></literal></expr>;<pos:position pos:line="1041" pos:column="27"/></expr_stmt>
		<break pos:line="1042" pos:column="17">break;<pos:position pos:line="1042" pos:column="23"/></break>
	<default pos:line="1043" pos:column="9">default:<pos:position pos:line="1043" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="1044" pos:column="17">die<pos:position pos:line="1044" pos:column="20"/></name><argument_list pos:line="1044" pos:column="20">(<argument><expr><literal type="string" pos:line="1044" pos:column="21">"BUG: invalid value for state-&gt;scissors"<pos:position pos:line="1044" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="1044" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="1044" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="1045" pos:column="10"/></block></switch>
	<expr_stmt><expr><call><name pos:line="1046" pos:column="9">write_state_text<pos:position pos:line="1046" pos:column="25"/></name><argument_list pos:line="1046" pos:column="25">(<argument><expr><name pos:line="1046" pos:column="26">state<pos:position pos:line="1046" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1046" pos:column="33">"scissors"<pos:position pos:line="1046" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="1046" pos:column="45">str<pos:position pos:line="1046" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1046" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1046" pos:column="50"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="1048" pos:column="9">sq_quote_argv<pos:position pos:line="1048" pos:column="22"/></name><argument_list pos:line="1048" pos:column="22">(<argument><expr><operator pos:line="1048" pos:column="23">&amp;<pos:position pos:line="1048" pos:column="28"/></operator><name pos:line="1048" pos:column="24">sb<pos:position pos:line="1048" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="1048" pos:column="28">state<pos:position pos:line="1048" pos:column="33"/></name><operator pos:line="1048" pos:column="33">-&gt;<pos:position pos:line="1048" pos:column="38"/></operator><name pos:line="1048" pos:column="35">git_apply_opts<pos:position pos:line="1048" pos:column="49"/></name><operator pos:line="1048" pos:column="49">.<pos:position pos:line="1048" pos:column="50"/></operator><name pos:line="1048" pos:column="50">argv<pos:position pos:line="1048" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="1048" pos:column="56">0<pos:position pos:line="1048" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="1048" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1048" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="1049" pos:column="9">write_state_text<pos:position pos:line="1049" pos:column="25"/></name><argument_list pos:line="1049" pos:column="25">(<argument><expr><name pos:line="1049" pos:column="26">state<pos:position pos:line="1049" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1049" pos:column="33">"apply-opt"<pos:position pos:line="1049" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="1049" pos:column="46">sb<pos:position pos:line="1049" pos:column="48"/></name><operator pos:line="1049" pos:column="48">.<pos:position pos:line="1049" pos:column="49"/></operator><name pos:line="1049" pos:column="49">buf<pos:position pos:line="1049" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="1049" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1049" pos:column="54"/></expr_stmt>

	<if pos:line="1051" pos:column="9">if <condition pos:line="1051" pos:column="12">(<expr><name><name pos:line="1051" pos:column="13">state<pos:position pos:line="1051" pos:column="18"/></name><operator pos:line="1051" pos:column="18">-&gt;<pos:position pos:line="1051" pos:column="23"/></operator><name pos:line="1051" pos:column="20">rebasing<pos:position pos:line="1051" pos:column="28"/></name></name></expr>)<pos:position pos:line="1051" pos:column="29"/></condition><then pos:line="1051" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="1052" pos:column="17">write_state_text<pos:position pos:line="1052" pos:column="33"/></name><argument_list pos:line="1052" pos:column="33">(<argument><expr><name pos:line="1052" pos:column="34">state<pos:position pos:line="1052" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1052" pos:column="41">"rebasing"<pos:position pos:line="1052" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1052" pos:column="53">""<pos:position pos:line="1052" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="1052" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1052" pos:column="57"/></expr_stmt></block></then>
	<else pos:line="1053" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="1054" pos:column="17">write_state_text<pos:position pos:line="1054" pos:column="33"/></name><argument_list pos:line="1054" pos:column="33">(<argument><expr><name pos:line="1054" pos:column="34">state<pos:position pos:line="1054" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1054" pos:column="41">"applying"<pos:position pos:line="1054" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1054" pos:column="53">""<pos:position pos:line="1054" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="1054" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1054" pos:column="57"/></expr_stmt></block></else></if>

	<if pos:line="1056" pos:column="9">if <condition pos:line="1056" pos:column="12">(<expr><operator pos:line="1056" pos:column="13">!<pos:position pos:line="1056" pos:column="14"/></operator><call><name pos:line="1056" pos:column="14">get_sha1<pos:position pos:line="1056" pos:column="22"/></name><argument_list pos:line="1056" pos:column="22">(<argument><expr><literal type="string" pos:line="1056" pos:column="23">"HEAD"<pos:position pos:line="1056" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="1056" pos:column="31">curr_head<pos:position pos:line="1056" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1056" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="1056" pos:column="42"/></condition><then pos:line="1056" pos:column="42"> <block pos:line="1056" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="1057" pos:column="17">write_state_text<pos:position pos:line="1057" pos:column="33"/></name><argument_list pos:line="1057" pos:column="33">(<argument><expr><name pos:line="1057" pos:column="34">state<pos:position pos:line="1057" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1057" pos:column="41">"abort-safety"<pos:position pos:line="1057" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="1057" pos:column="57">sha1_to_hex<pos:position pos:line="1057" pos:column="68"/></name><argument_list pos:line="1057" pos:column="68">(<argument><expr><name pos:line="1057" pos:column="69">curr_head<pos:position pos:line="1057" pos:column="78"/></name></expr></argument>)<pos:position pos:line="1057" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="1057" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="1057" pos:column="81"/></expr_stmt>
		<if pos:line="1058" pos:column="17">if <condition pos:line="1058" pos:column="20">(<expr><operator pos:line="1058" pos:column="21">!<pos:position pos:line="1058" pos:column="22"/></operator><name><name pos:line="1058" pos:column="22">state<pos:position pos:line="1058" pos:column="27"/></name><operator pos:line="1058" pos:column="27">-&gt;<pos:position pos:line="1058" pos:column="32"/></operator><name pos:line="1058" pos:column="29">rebasing<pos:position pos:line="1058" pos:column="37"/></name></name></expr>)<pos:position pos:line="1058" pos:column="38"/></condition><then pos:line="1058" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="1059" pos:column="25">update_ref<pos:position pos:line="1059" pos:column="35"/></name><argument_list pos:line="1059" pos:column="35">(<argument><expr><literal type="string" pos:line="1059" pos:column="36">"am"<pos:position pos:line="1059" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1059" pos:column="42">"ORIG_HEAD"<pos:position pos:line="1059" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="1059" pos:column="55">curr_head<pos:position pos:line="1059" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="1059" pos:column="66">NULL<pos:position pos:line="1059" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1059" pos:column="72">0<pos:position pos:line="1059" pos:column="73"/></literal></expr></argument>,
					<argument><expr><name pos:line="1060" pos:column="41">UPDATE_REFS_DIE_ON_ERR<pos:position pos:line="1060" pos:column="63"/></name></expr></argument>)<pos:position pos:line="1060" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="1060" pos:column="65"/></expr_stmt></block></then></if>
	}<pos:position pos:line="1061" pos:column="10"/></block></then> <else pos:line="1061" pos:column="11">else <block pos:line="1061" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="1062" pos:column="17">write_state_text<pos:position pos:line="1062" pos:column="33"/></name><argument_list pos:line="1062" pos:column="33">(<argument><expr><name pos:line="1062" pos:column="34">state<pos:position pos:line="1062" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1062" pos:column="41">"abort-safety"<pos:position pos:line="1062" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1062" pos:column="57">""<pos:position pos:line="1062" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="1062" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="1062" pos:column="61"/></expr_stmt>
		<if pos:line="1063" pos:column="17">if <condition pos:line="1063" pos:column="20">(<expr><operator pos:line="1063" pos:column="21">!<pos:position pos:line="1063" pos:column="22"/></operator><name><name pos:line="1063" pos:column="22">state<pos:position pos:line="1063" pos:column="27"/></name><operator pos:line="1063" pos:column="27">-&gt;<pos:position pos:line="1063" pos:column="32"/></operator><name pos:line="1063" pos:column="29">rebasing<pos:position pos:line="1063" pos:column="37"/></name></name></expr>)<pos:position pos:line="1063" pos:column="38"/></condition><then pos:line="1063" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="1064" pos:column="25">delete_ref<pos:position pos:line="1064" pos:column="35"/></name><argument_list pos:line="1064" pos:column="35">(<argument><expr><literal type="string" pos:line="1064" pos:column="36">"ORIG_HEAD"<pos:position pos:line="1064" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="1064" pos:column="49">NULL<pos:position pos:line="1064" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1064" pos:column="55">0<pos:position pos:line="1064" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="1064" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="1064" pos:column="58"/></expr_stmt></block></then></if>
	}<pos:position pos:line="1065" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="1067" pos:column="9">/*
	 * NOTE: Since the "next" and "last" files determine if an am_state
	 * session is in progress, they should be written last.
	 */</comment>

	<expr_stmt><expr><call><name pos:line="1072" pos:column="9">write_state_count<pos:position pos:line="1072" pos:column="26"/></name><argument_list pos:line="1072" pos:column="26">(<argument><expr><name pos:line="1072" pos:column="27">state<pos:position pos:line="1072" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1072" pos:column="34">"next"<pos:position pos:line="1072" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="1072" pos:column="42">state<pos:position pos:line="1072" pos:column="47"/></name><operator pos:line="1072" pos:column="47">-&gt;<pos:position pos:line="1072" pos:column="52"/></operator><name pos:line="1072" pos:column="49">cur<pos:position pos:line="1072" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="1072" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1072" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="1073" pos:column="9">write_state_count<pos:position pos:line="1073" pos:column="26"/></name><argument_list pos:line="1073" pos:column="26">(<argument><expr><name pos:line="1073" pos:column="27">state<pos:position pos:line="1073" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1073" pos:column="34">"last"<pos:position pos:line="1073" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="1073" pos:column="42">state<pos:position pos:line="1073" pos:column="47"/></name><operator pos:line="1073" pos:column="47">-&gt;<pos:position pos:line="1073" pos:column="52"/></operator><name pos:line="1073" pos:column="49">last<pos:position pos:line="1073" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="1073" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1073" pos:column="55"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="1075" pos:column="9">strbuf_release<pos:position pos:line="1075" pos:column="23"/></name><argument_list pos:line="1075" pos:column="23">(<argument><expr><operator pos:line="1075" pos:column="24">&amp;<pos:position pos:line="1075" pos:column="29"/></operator><name pos:line="1075" pos:column="25">sb<pos:position pos:line="1075" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1075" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1075" pos:column="29"/></expr_stmt>
}<pos:position pos:line="1076" pos:column="2"/></block></function>


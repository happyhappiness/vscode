<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_550_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">compare_version<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">version_string<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier><modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">error<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">p<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><name pos:line="3" pos:column="15">version_string<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="32">ep<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name><name pos:line="4" pos:column="9">version<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><literal type="number" pos:line="4" pos:column="17">3<pos:position pos:line="4" pos:column="18"/></literal></expr>]<pos:position pos:line="4" pos:column="19"/></index></name> <init pos:line="4" pos:column="20">= <expr><block pos:line="4" pos:column="22">{<expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr>, <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr>, <expr><literal type="number" pos:line="4" pos:column="29">0<pos:position pos:line="4" pos:column="30"/></literal></expr>}<pos:position pos:line="4" pos:column="31"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">c<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="7" pos:column="5">*<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">error<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <literal type="string" pos:line="7" pos:column="14">"Version appears to be invalid. It must have the format "<pos:position pos:line="7" pos:column="71"/></literal>
             <literal type="string" pos:line="8" pos:column="14">"major[.minor[.patch]] where major, minor and patch are "<pos:position pos:line="8" pos:column="71"/></literal>
             <literal type="string" pos:line="9" pos:column="14">"numbers."<pos:position pos:line="9" pos:column="24"/></literal></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">apr_isdigit<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><operator pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">p<pos:position pos:line="11" pos:column="24"/></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26"> <block pos:line="11" pos:column="27">{
        <return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* parse supplied version */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">ep<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <name pos:line="16" pos:column="10">version_string<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">+<pos:position pos:line="16" pos:column="26"/></operator> <call><name pos:line="16" pos:column="27">strlen<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">version_string<pos:position pos:line="16" pos:column="48"/></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>
    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><name pos:line="17" pos:column="12">p<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">&lt;=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="17">ep<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">&amp;&amp;<pos:position pos:line="17" pos:column="30"/></operator> <name pos:line="17" pos:column="23">c<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">&lt;<pos:position pos:line="17" pos:column="29"/></operator> <literal type="number" pos:line="17" pos:column="27">3<pos:position pos:line="17" pos:column="28"/></literal></expr>)<pos:position pos:line="17" pos:column="29"/></condition> <block pos:line="17" pos:column="30">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">p<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">==<pos:position pos:line="18" pos:column="18"/></operator> <literal type="char" pos:line="18" pos:column="19">'.'<pos:position pos:line="18" pos:column="22"/></literal></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23"> <block pos:line="18" pos:column="24">{
            <expr_stmt><expr><operator pos:line="19" pos:column="13">*<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">p<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="char" pos:line="19" pos:column="18">'\0'<pos:position pos:line="19" pos:column="22"/></literal></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><operator pos:line="22" pos:column="14">*<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">p<pos:position pos:line="22" pos:column="16"/></name></expr>)<pos:position pos:line="22" pos:column="17"/></condition><then pos:line="22" pos:column="17"> <block pos:line="22" pos:column="18">{
            <expr_stmt><expr><name><name pos:line="23" pos:column="13">version<pos:position pos:line="23" pos:column="20"/></name><index pos:line="23" pos:column="20">[<expr><name pos:line="23" pos:column="21">c<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">++<pos:position pos:line="23" pos:column="24"/></operator></expr>]<pos:position pos:line="23" pos:column="25"/></index></name> <operator pos:line="23" pos:column="26">=<pos:position pos:line="23" pos:column="27"/></operator> <call><name pos:line="23" pos:column="28">atoi<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">version_string<pos:position pos:line="23" pos:column="47"/></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="24" pos:column="13">version_string<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <operator pos:line="24" pos:column="30">++<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">p<pos:position pos:line="24" pos:column="33"/></name></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
            <continue pos:line="25" pos:column="13">continue;<pos:position pos:line="25" pos:column="22"/></continue>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><call><name pos:line="28" pos:column="14">apr_isdigit<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><operator pos:line="28" pos:column="26">*<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="27">p<pos:position pos:line="28" pos:column="28"/></name></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30"> <block pos:line="28" pos:column="31">{
            <break pos:line="29" pos:column="13">break;<pos:position pos:line="29" pos:column="19"/></break>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>

        <expr_stmt><expr><operator pos:line="32" pos:column="9">++<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">p<pos:position pos:line="32" pos:column="12"/></name></expr>;<pos:position pos:line="32" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></while>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">p<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">&lt;<pos:position pos:line="35" pos:column="15"/></operator> <name pos:line="35" pos:column="13">ep<pos:position pos:line="35" pos:column="15"/></name></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16"> <block pos:line="35" pos:column="17">{ <comment type="block" pos:line="35" pos:column="19">/* syntax error */</comment>
        <return pos:line="36" pos:column="9">return <expr><literal type="number" pos:line="36" pos:column="16">0<pos:position pos:line="36" pos:column="17"/></literal></expr>;<pos:position pos:line="36" pos:column="18"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="39" pos:column="5">*<pos:position pos:line="39" pos:column="6"/></operator><name pos:line="39" pos:column="6">error<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <name pos:line="39" pos:column="14">NULL<pos:position pos:line="39" pos:column="18"/></name></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>

    <if pos:line="41" pos:column="5">if      <condition pos:line="41" pos:column="13">(<expr><name><name pos:line="41" pos:column="14">httpd_version<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">.<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="28">major<pos:position pos:line="41" pos:column="33"/></name></name> <operator pos:line="41" pos:column="34">&gt;<pos:position pos:line="41" pos:column="38"/></operator> <name><name pos:line="41" pos:column="36">version<pos:position pos:line="41" pos:column="43"/></name><index pos:line="41" pos:column="43">[<expr><literal type="number" pos:line="41" pos:column="44">0<pos:position pos:line="41" pos:column="45"/></literal></expr>]<pos:position pos:line="41" pos:column="46"/></index></name></expr>)<pos:position pos:line="41" pos:column="47"/></condition><then pos:line="41" pos:column="47"> <block pos:line="41" pos:column="48">{
        <return pos:line="42" pos:column="9">return <expr><literal type="number" pos:line="42" pos:column="16">1<pos:position pos:line="42" pos:column="17"/></literal></expr>;<pos:position pos:line="42" pos:column="18"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then>
    <elseif pos:line="44" pos:column="5">else <if pos:line="44" pos:column="10">if <condition pos:line="44" pos:column="13">(<expr><name><name pos:line="44" pos:column="14">httpd_version<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">.<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="28">major<pos:position pos:line="44" pos:column="33"/></name></name> <operator pos:line="44" pos:column="34">&lt;<pos:position pos:line="44" pos:column="38"/></operator> <name><name pos:line="44" pos:column="36">version<pos:position pos:line="44" pos:column="43"/></name><index pos:line="44" pos:column="43">[<expr><literal type="number" pos:line="44" pos:column="44">0<pos:position pos:line="44" pos:column="45"/></literal></expr>]<pos:position pos:line="44" pos:column="46"/></index></name></expr>)<pos:position pos:line="44" pos:column="47"/></condition><then pos:line="44" pos:column="47"> <block pos:line="44" pos:column="48">{
        <return pos:line="45" pos:column="9">return <expr><operator pos:line="45" pos:column="16">-<pos:position pos:line="45" pos:column="17"/></operator><literal type="number" pos:line="45" pos:column="17">1<pos:position pos:line="45" pos:column="18"/></literal></expr>;<pos:position pos:line="45" pos:column="19"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="47" pos:column="5">else <if pos:line="47" pos:column="10">if <condition pos:line="47" pos:column="13">(<expr><name><name pos:line="47" pos:column="14">httpd_version<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">.<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="28">minor<pos:position pos:line="47" pos:column="33"/></name></name> <operator pos:line="47" pos:column="34">&gt;<pos:position pos:line="47" pos:column="38"/></operator> <name><name pos:line="47" pos:column="36">version<pos:position pos:line="47" pos:column="43"/></name><index pos:line="47" pos:column="43">[<expr><literal type="number" pos:line="47" pos:column="44">1<pos:position pos:line="47" pos:column="45"/></literal></expr>]<pos:position pos:line="47" pos:column="46"/></index></name></expr>)<pos:position pos:line="47" pos:column="47"/></condition><then pos:line="47" pos:column="47"> <block pos:line="47" pos:column="48">{
        <return pos:line="48" pos:column="9">return <expr><literal type="number" pos:line="48" pos:column="16">1<pos:position pos:line="48" pos:column="17"/></literal></expr>;<pos:position pos:line="48" pos:column="18"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="50" pos:column="5">else <if pos:line="50" pos:column="10">if <condition pos:line="50" pos:column="13">(<expr><name><name pos:line="50" pos:column="14">httpd_version<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">.<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="28">minor<pos:position pos:line="50" pos:column="33"/></name></name> <operator pos:line="50" pos:column="34">&lt;<pos:position pos:line="50" pos:column="38"/></operator> <name><name pos:line="50" pos:column="36">version<pos:position pos:line="50" pos:column="43"/></name><index pos:line="50" pos:column="43">[<expr><literal type="number" pos:line="50" pos:column="44">1<pos:position pos:line="50" pos:column="45"/></literal></expr>]<pos:position pos:line="50" pos:column="46"/></index></name></expr>)<pos:position pos:line="50" pos:column="47"/></condition><then pos:line="50" pos:column="47"> <block pos:line="50" pos:column="48">{
        <return pos:line="51" pos:column="9">return <expr><operator pos:line="51" pos:column="16">-<pos:position pos:line="51" pos:column="17"/></operator><literal type="number" pos:line="51" pos:column="17">1<pos:position pos:line="51" pos:column="18"/></literal></expr>;<pos:position pos:line="51" pos:column="19"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="53" pos:column="5">else <if pos:line="53" pos:column="10">if <condition pos:line="53" pos:column="13">(<expr><name><name pos:line="53" pos:column="14">httpd_version<pos:position pos:line="53" pos:column="27"/></name><operator pos:line="53" pos:column="27">.<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="28">patch<pos:position pos:line="53" pos:column="33"/></name></name> <operator pos:line="53" pos:column="34">&gt;<pos:position pos:line="53" pos:column="38"/></operator> <name><name pos:line="53" pos:column="36">version<pos:position pos:line="53" pos:column="43"/></name><index pos:line="53" pos:column="43">[<expr><literal type="number" pos:line="53" pos:column="44">2<pos:position pos:line="53" pos:column="45"/></literal></expr>]<pos:position pos:line="53" pos:column="46"/></index></name></expr>)<pos:position pos:line="53" pos:column="47"/></condition><then pos:line="53" pos:column="47"> <block pos:line="53" pos:column="48">{
        <return pos:line="54" pos:column="9">return <expr><literal type="number" pos:line="54" pos:column="16">1<pos:position pos:line="54" pos:column="17"/></literal></expr>;<pos:position pos:line="54" pos:column="18"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="56" pos:column="5">else <if pos:line="56" pos:column="10">if <condition pos:line="56" pos:column="13">(<expr><name><name pos:line="56" pos:column="14">httpd_version<pos:position pos:line="56" pos:column="27"/></name><operator pos:line="56" pos:column="27">.<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="28">patch<pos:position pos:line="56" pos:column="33"/></name></name> <operator pos:line="56" pos:column="34">&lt;<pos:position pos:line="56" pos:column="38"/></operator> <name><name pos:line="56" pos:column="36">version<pos:position pos:line="56" pos:column="43"/></name><index pos:line="56" pos:column="43">[<expr><literal type="number" pos:line="56" pos:column="44">2<pos:position pos:line="56" pos:column="45"/></literal></expr>]<pos:position pos:line="56" pos:column="46"/></index></name></expr>)<pos:position pos:line="56" pos:column="47"/></condition><then pos:line="56" pos:column="47"> <block pos:line="56" pos:column="48">{
        <return pos:line="57" pos:column="9">return <expr><operator pos:line="57" pos:column="16">-<pos:position pos:line="57" pos:column="17"/></operator><literal type="number" pos:line="57" pos:column="17">1<pos:position pos:line="57" pos:column="18"/></literal></expr>;<pos:position pos:line="57" pos:column="19"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="60" pos:column="5">/* seems to be the same */</comment>
    <return pos:line="61" pos:column="5">return <expr><literal type="number" pos:line="61" pos:column="12">0<pos:position pos:line="61" pos:column="13"/></literal></expr>;<pos:position pos:line="61" pos:column="14"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

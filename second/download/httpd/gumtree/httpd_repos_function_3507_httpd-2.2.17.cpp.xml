<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3507_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">do_wait<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">apr_thread_cond_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">cond<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">apr_thread_mutex_t<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">mutex<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">timeout<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">waiter_t<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">wait<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">thread_id<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">cth<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><call><name pos:line="5" pos:column="21">find_thread<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">NULL<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">flags<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><name pos:line="7" pos:column="17">B_RELATIVE_TIMEOUT<pos:position pos:line="7" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
    
    <comment type="block" pos:line="9" pos:column="5">/* We must be the owner of the mutex or we can't do this... */</comment>    
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">mutex<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">owner<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">!=<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">cth<pos:position pos:line="10" pos:column="28"/></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29"> <block pos:line="10" pos:column="30">{
        <comment type="block" pos:line="11" pos:column="9">/* What should we return??? */</comment>
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">APR_EINVAL<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">acquire_sem<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name><name pos:line="15" pos:column="17">cond<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">lock<pos:position pos:line="15" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">wait<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">APR_RING_FIRST<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><operator pos:line="16" pos:column="27">&amp;<pos:position pos:line="16" pos:column="32"/></operator><name><name pos:line="16" pos:column="28">cond<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">flist<pos:position pos:line="16" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">wait<pos:position pos:line="17" pos:column="13"/></name></expr>)<pos:position pos:line="17" pos:column="14"/></condition><then pos:line="17" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">APR_RING_REMOVE<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">wait<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="31">link<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt></block></then>
    <else pos:line="19" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="9">wait<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">make_waiter<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name><name pos:line="20" pos:column="28">cond<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">pool<pos:position pos:line="20" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt></block></else></if>   
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">APR_RING_INSERT_TAIL<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><operator pos:line="21" pos:column="26">&amp;<pos:position pos:line="21" pos:column="31"/></operator><name><name pos:line="21" pos:column="27">cond<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">alist<pos:position pos:line="21" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">wait<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="46">waiter_t<pos:position pos:line="21" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="56">link<pos:position pos:line="21" pos:column="60"/></name></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">cond<pos:position pos:line="22" pos:column="9"/></name><operator pos:line="22" pos:column="9">-&gt;<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="11">condlock<pos:position pos:line="22" pos:column="19"/></name></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">mutex<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">release_sem<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><name><name pos:line="23" pos:column="17">cond<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">lock<pos:position pos:line="23" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
       
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">apr_thread_mutex_unlock<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name><name pos:line="25" pos:column="29">cond<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">condlock<pos:position pos:line="25" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">timeout<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">==<pos:position pos:line="27" pos:column="19"/></operator> <literal type="number" pos:line="27" pos:column="20">0<pos:position pos:line="27" pos:column="21"/></literal></expr>)<pos:position pos:line="27" pos:column="22"/></condition><then pos:line="27" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="9">flags<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <literal type="number" pos:line="28" pos:column="17">0<pos:position pos:line="28" pos:column="18"/></literal></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt></block></then></if>
        
    <expr_stmt><expr><name pos:line="30" pos:column="5">rv<pos:position pos:line="30" pos:column="7"/></name> <operator pos:line="30" pos:column="8">=<pos:position pos:line="30" pos:column="9"/></operator> <call><name pos:line="30" pos:column="10">acquire_sem_etc<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name><name pos:line="30" pos:column="26">wait<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">-&gt;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="32">sem<pos:position pos:line="30" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="37">1<pos:position pos:line="30" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">flags<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">timeout<pos:position pos:line="30" pos:column="54"/></name></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">apr_thread_mutex_lock<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name><name pos:line="32" pos:column="27">cond<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">-&gt;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="33">condlock<pos:position pos:line="32" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
    
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">rv<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">!=<pos:position pos:line="34" pos:column="14"/></operator> <name pos:line="34" pos:column="15">B_OK<pos:position pos:line="34" pos:column="19"/></name></expr>)<pos:position pos:line="34" pos:column="20"/></condition><then pos:line="34" pos:column="20">
        <block type="pseudo"><if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">rv<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">==<pos:position pos:line="35" pos:column="18"/></operator> <name pos:line="35" pos:column="19">B_TIMED_OUT<pos:position pos:line="35" pos:column="30"/></name></expr>)<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31">
            <block type="pseudo"><return pos:line="36" pos:column="13">return <expr><name pos:line="36" pos:column="20">APR_TIMEUP<pos:position pos:line="36" pos:column="30"/></name></expr>;<pos:position pos:line="36" pos:column="31"/></return></block></then></if></block></then></if>
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">rv<pos:position pos:line="37" pos:column="18"/></name></expr>;<pos:position pos:line="37" pos:column="19"/></return>       

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">acquire_sem<pos:position pos:line="39" pos:column="16"/></name><argument_list pos:line="39" pos:column="16">(<argument><expr><name><name pos:line="39" pos:column="17">cond<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">-&gt;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="23">lock<pos:position pos:line="39" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">APR_RING_REMOVE<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">wait<pos:position pos:line="40" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="27">link<pos:position pos:line="40" pos:column="31"/></name></expr></argument>)<pos:position pos:line="40" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">APR_RING_INSERT_TAIL<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><operator pos:line="41" pos:column="26">&amp;<pos:position pos:line="41" pos:column="31"/></operator><name><name pos:line="41" pos:column="27">cond<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">flist<pos:position pos:line="41" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="40">wait<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">waiter_t<pos:position pos:line="41" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="56">link<pos:position pos:line="41" pos:column="60"/></name></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">release_sem<pos:position pos:line="42" pos:column="16"/></name><argument_list pos:line="42" pos:column="16">(<argument><expr><name><name pos:line="42" pos:column="17">cond<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">lock<pos:position pos:line="42" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>
    
    <return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">APR_SUCCESS<pos:position pos:line="44" pos:column="23"/></name></expr>;<pos:position pos:line="44" pos:column="24"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

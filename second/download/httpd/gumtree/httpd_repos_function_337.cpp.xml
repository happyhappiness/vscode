<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_337.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_created<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">request_rec<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">r<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">locn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">what<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="2" pos:column="24">int<pos:position pos:line="2" pos:column="27"/></name></type> <name pos:line="2" pos:column="28">replaced<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">body<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">locn<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">NULL<pos:position pos:line="6" pos:column="21"/></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22"> <block pos:line="6" pos:column="23">{
        <expr_stmt><expr><name pos:line="7" pos:column="9">locn<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <name><name pos:line="7" pos:column="16">r<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">uri<pos:position pos:line="7" pos:column="22"/></name></name></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="10" pos:column="5">/* did the target resource already exist? */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">replaced<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18"> <block pos:line="11" pos:column="19">{
        <comment type="block" pos:line="12" pos:column="9">/* Apache will supply a default message */</comment>
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">HTTP_NO_CONTENT<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="16" pos:column="5">/* Per HTTP/1.1, S10.2.2: add a Location header to contain the
     * URI that was created. */</comment>

    <comment type="block" pos:line="19" pos:column="5">/* Convert locn to an absolute URI, and return in Location header */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">apr_table_setn<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name><name pos:line="20" pos:column="20">r<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">headers_out<pos:position pos:line="20" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="36">"Location"<pos:position pos:line="20" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="48">ap_construct_url<pos:position pos:line="20" pos:column="64"/></name><argument_list pos:line="20" pos:column="64">(<argument><expr><name><name pos:line="20" pos:column="65">r<pos:position pos:line="20" pos:column="66"/></name><operator pos:line="20" pos:column="66">-&gt;<pos:position pos:line="20" pos:column="71"/></operator><name pos:line="20" pos:column="68">pool<pos:position pos:line="20" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="74">locn<pos:position pos:line="20" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="80">r<pos:position pos:line="20" pos:column="81"/></name></expr></argument>)<pos:position pos:line="20" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="84"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* ### insert an ETag header? see HTTP/1.1 S10.2.2 */</comment>

    <comment type="block" pos:line="24" pos:column="5">/* Apache doesn't allow us to set a variable body for HTTP_CREATED, so
     * we must manufacture the entire response. */</comment>
    <expr_stmt><expr><name pos:line="26" pos:column="5">body<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <call><name pos:line="26" pos:column="12">apr_psprintf<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name><name pos:line="26" pos:column="25">r<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">pool<pos:position pos:line="26" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="34">"%s %s has been created."<pos:position pos:line="26" pos:column="59"/></literal></expr></argument>,
                        <argument><expr><name pos:line="27" pos:column="25">what<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="31">ap_escape_html<pos:position pos:line="27" pos:column="45"/></name><argument_list pos:line="27" pos:column="45">(<argument><expr><name><name pos:line="27" pos:column="46">r<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">pool<pos:position pos:line="27" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="55">locn<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><call><name pos:line="28" pos:column="12">dav_error_response<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">r<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">HTTP_CREATED<pos:position pos:line="28" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="48">body<pos:position pos:line="28" pos:column="52"/></name></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="54"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3925_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">match_ref<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">int<pos:position pos:line="2" pos:column="14"/></name></type> <name pos:line="2" pos:column="15">offset<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="23">register<pos:position pos:line="2" pos:column="31"/></specifier> <specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">uschar<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">eptr<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">int<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">length<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">match_data<pos:position pos:line="2" pos:column="74"/></name> <modifier pos:line="2" pos:column="75">*<pos:position pos:line="2" pos:column="76"/></modifier></type><name pos:line="2" pos:column="76">md<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="3" pos:column="3">unsigned<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">long<pos:position pos:line="3" pos:column="16"/></name> <name pos:line="3" pos:column="17">int<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">ims<pos:position pos:line="3" pos:column="24"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="25"/></parameter_list>
<block pos:line="4" pos:column="1">{
<decl_stmt><decl><type><specifier pos:line="5" pos:column="1">const<pos:position pos:line="5" pos:column="6"/></specifier> <name pos:line="5" pos:column="7">uschar<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">p<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name><name pos:line="5" pos:column="19">md<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">-&gt;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="23">start_subject<pos:position pos:line="5" pos:column="36"/></name></name> <operator pos:line="5" pos:column="37">+<pos:position pos:line="5" pos:column="38"/></operator> <name><name pos:line="5" pos:column="39">md<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">-&gt;<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="43">offset_vector<pos:position pos:line="5" pos:column="56"/></name><index pos:line="5" pos:column="56">[<expr><name pos:line="5" pos:column="57">offset<pos:position pos:line="5" pos:column="63"/></name></expr>]<pos:position pos:line="5" pos:column="64"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="65"/></decl_stmt>

<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">DEBUG<pos:position pos:line="7" pos:column="13"/></name></cpp:ifdef>
<if pos:line="8" pos:column="1">if <condition pos:line="8" pos:column="4">(<expr><name pos:line="8" pos:column="5">eptr<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">&gt;=<pos:position pos:line="8" pos:column="15"/></operator> <name><name pos:line="8" pos:column="13">md<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">end_subject<pos:position pos:line="8" pos:column="28"/></name></name></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29">
  <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="3">printf<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><literal type="string" pos:line="9" pos:column="10">"matching subject &lt;null&gt;"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt></block></then>
<else pos:line="10" pos:column="1">else
  <block pos:line="11" pos:column="3">{
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">printf<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><literal type="string" pos:line="12" pos:column="10">"matching subject "<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">pchars<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name pos:line="13" pos:column="10">eptr<pos:position pos:line="13" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="16">length<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="24">TRUE<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="30">md<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></else></if>
<expr_stmt><expr><call><name pos:line="15" pos:column="1">printf<pos:position pos:line="15" pos:column="7"/></name><argument_list pos:line="15" pos:column="7">(<argument><expr><literal type="string" pos:line="15" pos:column="8">" against backref "<pos:position pos:line="15" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
<expr_stmt><expr><call><name pos:line="16" pos:column="1">pchars<pos:position pos:line="16" pos:column="7"/></name><argument_list pos:line="16" pos:column="7">(<argument><expr><name pos:line="16" pos:column="8">p<pos:position pos:line="16" pos:column="9"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="11">length<pos:position pos:line="16" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="19">FALSE<pos:position pos:line="16" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="26">md<pos:position pos:line="16" pos:column="28"/></name></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
<expr_stmt><expr><call><name pos:line="17" pos:column="1">printf<pos:position pos:line="17" pos:column="7"/></name><argument_list pos:line="17" pos:column="7">(<argument><expr><literal type="string" pos:line="17" pos:column="8">"\n"<pos:position pos:line="17" pos:column="12"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="14"/></expr_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>

<comment type="block" pos:line="20" pos:column="1">/* Always fail if not enough characters left */</comment>

<if pos:line="22" pos:column="1">if <condition pos:line="22" pos:column="4">(<expr><name pos:line="22" pos:column="5">length<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">&gt;<pos:position pos:line="22" pos:column="16"/></operator> <name><name pos:line="22" pos:column="14">md<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">end_subject<pos:position pos:line="22" pos:column="29"/></name></name> <operator pos:line="22" pos:column="30">-<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">eptr<pos:position pos:line="22" pos:column="36"/></name></expr>)<pos:position pos:line="22" pos:column="37"/></condition><then pos:line="22" pos:column="37"> <block type="pseudo"><return pos:line="22" pos:column="38">return <expr><name pos:line="22" pos:column="45">FALSE<pos:position pos:line="22" pos:column="50"/></name></expr>;<pos:position pos:line="22" pos:column="51"/></return></block></then></if>

<comment type="block" pos:line="24" pos:column="1">/* Separate the caselesss case for speed */</comment>

<if pos:line="26" pos:column="1">if <condition pos:line="26" pos:column="4">(<expr><operator pos:line="26" pos:column="5">(<pos:position pos:line="26" pos:column="6"/></operator><name pos:line="26" pos:column="6">ims<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">&amp;<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="12">PCRE_CASELESS<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">)<pos:position pos:line="26" pos:column="26"/></operator> <operator pos:line="26" pos:column="27">!=<pos:position pos:line="26" pos:column="29"/></operator> <literal type="number" pos:line="26" pos:column="30">0<pos:position pos:line="26" pos:column="31"/></literal></expr>)<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32">
  <block pos:line="27" pos:column="3">{
  <while pos:line="28" pos:column="3">while <condition pos:line="28" pos:column="9">(<expr><name pos:line="28" pos:column="10">length<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">--<pos:position pos:line="28" pos:column="18"/></operator> <operator pos:line="28" pos:column="19">&gt;<pos:position pos:line="28" pos:column="23"/></operator> <literal type="number" pos:line="28" pos:column="21">0<pos:position pos:line="28" pos:column="22"/></literal></expr>)<pos:position pos:line="28" pos:column="23"/></condition>
    <block type="pseudo"><if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">md<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">lcc<pos:position pos:line="29" pos:column="16"/></name><index pos:line="29" pos:column="16">[<expr><operator pos:line="29" pos:column="17">*<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">p<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">++<pos:position pos:line="29" pos:column="21"/></operator></expr>]<pos:position pos:line="29" pos:column="22"/></index></name> <operator pos:line="29" pos:column="23">!=<pos:position pos:line="29" pos:column="25"/></operator> <name><name pos:line="29" pos:column="26">md<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">lcc<pos:position pos:line="29" pos:column="33"/></name><index pos:line="29" pos:column="33">[<expr><operator pos:line="29" pos:column="34">*<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="35">eptr<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">++<pos:position pos:line="29" pos:column="41"/></operator></expr>]<pos:position pos:line="29" pos:column="42"/></index></name></expr>)<pos:position pos:line="29" pos:column="43"/></condition><then pos:line="29" pos:column="43"> <block type="pseudo"><return pos:line="29" pos:column="44">return <expr><name pos:line="29" pos:column="51">FALSE<pos:position pos:line="29" pos:column="56"/></name></expr>;<pos:position pos:line="29" pos:column="57"/></return></block></then></if></block></while>
  }<pos:position pos:line="30" pos:column="4"/></block></then>
<else pos:line="31" pos:column="1">else
  <block pos:line="32" pos:column="3">{ <while pos:line="32" pos:column="5">while <condition pos:line="32" pos:column="11">(<expr><name pos:line="32" pos:column="12">length<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">--<pos:position pos:line="32" pos:column="20"/></operator> <operator pos:line="32" pos:column="21">&gt;<pos:position pos:line="32" pos:column="25"/></operator> <literal type="number" pos:line="32" pos:column="23">0<pos:position pos:line="32" pos:column="24"/></literal></expr>)<pos:position pos:line="32" pos:column="25"/></condition> <block type="pseudo"><if pos:line="32" pos:column="26">if <condition pos:line="32" pos:column="29">(<expr><operator pos:line="32" pos:column="30">*<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="31">p<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">++<pos:position pos:line="32" pos:column="34"/></operator> <operator pos:line="32" pos:column="35">!=<pos:position pos:line="32" pos:column="37"/></operator> <operator pos:line="32" pos:column="38">*<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="39">eptr<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">++<pos:position pos:line="32" pos:column="45"/></operator></expr>)<pos:position pos:line="32" pos:column="46"/></condition><then pos:line="32" pos:column="46"> <block type="pseudo"><return pos:line="32" pos:column="47">return <expr><name pos:line="32" pos:column="54">FALSE<pos:position pos:line="32" pos:column="59"/></name></expr>;<pos:position pos:line="32" pos:column="60"/></return></block></then></if></block></while> }<pos:position pos:line="32" pos:column="62"/></block></else></if>

<return pos:line="34" pos:column="1">return <expr><name pos:line="34" pos:column="8">TRUE<pos:position pos:line="34" pos:column="12"/></name></expr>;<pos:position pos:line="34" pos:column="13"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2182_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">example_log_each<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_pool_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">p<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">server_rec<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">s<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">note<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">s<pos:position pos:line="3" pos:column="10"/></name> <operator pos:line="3" pos:column="11">!=<pos:position pos:line="3" pos:column="13"/></operator> <name pos:line="3" pos:column="14">NULL<pos:position pos:line="3" pos:column="18"/></name></expr>)<pos:position pos:line="3" pos:column="19"/></condition><then pos:line="3" pos:column="19"> <block pos:line="3" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="4" pos:column="9">ap_log_error<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">APLOG_MARK<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="34">APLOG_DEBUG<pos:position pos:line="4" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="47">0<pos:position pos:line="4" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="50">s<pos:position pos:line="4" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="53">"mod_example: %s"<pos:position pos:line="4" pos:column="70"/></literal></expr></argument>, 
                     <argument><expr><name pos:line="5" pos:column="22">note<pos:position pos:line="5" pos:column="26"/></name></expr></argument>)<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="6" pos:column="6"/></block></then> <else pos:line="6" pos:column="7">else <block pos:line="6" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">apr_file_t<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">out<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">apr_file_open_stderr<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><operator pos:line="8" pos:column="30">&amp;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="31">out<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">p<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">apr_file_printf<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">out<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="30">"mod_example traced in non-loggable "<pos:position pos:line="9" pos:column="67"/></literal>
                        <literal type="string" pos:line="10" pos:column="25">"context: %s\n"<pos:position pos:line="10" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">note<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></else></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2820_httpd-2.4.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">add_basic_fake<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">cmd_parms<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type> <name pos:line="1" pos:column="47">cmd<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">void<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">config<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
        <parameter><decl><type><specifier pos:line="2" pos:column="9">const<pos:position pos:line="2" pos:column="14"/></specifier> <name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">user<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">pass<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">auth_basic_config_rec<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">conf<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><operator pos:line="4" pos:column="35">(<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="36">auth_basic_config_rec<pos:position pos:line="4" pos:column="57"/></name> <operator pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></operator><operator pos:line="4" pos:column="59">)<pos:position pos:line="4" pos:column="60"/></operator> <name pos:line="4" pos:column="61">config<pos:position pos:line="4" pos:column="67"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">err<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name pos:line="7" pos:column="10">strcasecmp<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">user<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="27">"off"<pos:position pos:line="7" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34"> <block pos:line="7" pos:column="35">{

        <expr_stmt><expr><name><name pos:line="9" pos:column="9">conf<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">fakeuser<pos:position pos:line="9" pos:column="23"/></name></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">NULL<pos:position pos:line="9" pos:column="30"/></name></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">conf<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">fakepass<pos:position pos:line="10" pos:column="23"/></name></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">NULL<pos:position pos:line="10" pos:column="30"/></name></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">conf<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">fake_set<pos:position pos:line="11" pos:column="23"/></name></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>

    }<pos:position pos:line="13" pos:column="6"/></block></then>
    <else pos:line="14" pos:column="5">else <block pos:line="14" pos:column="10">{

        <comment type="block" pos:line="16" pos:column="9">/* if password is unspecified, set it to the fixed string "password" to
         * be compatible with the behaviour of mod_ssl.
         */</comment>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">pass<pos:position pos:line="19" pos:column="18"/></name></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19"> <block pos:line="19" pos:column="20">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">pass<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <literal type="string" pos:line="20" pos:column="20">"password"<pos:position pos:line="20" pos:column="30"/></literal></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="23" pos:column="9">conf<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">fakeuser<pos:position pos:line="23" pos:column="23"/></name></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator>
                <call><name pos:line="24" pos:column="17">ap_expr_parse_cmd<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">cmd<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="40">user<pos:position pos:line="24" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="46">AP_EXPR_FLAG_STRING_RESULT<pos:position pos:line="24" pos:column="72"/></name></expr></argument>,
                        <argument><expr><operator pos:line="25" pos:column="25">&amp;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="26">err<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="31">NULL<pos:position pos:line="25" pos:column="35"/></name></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">err<pos:position pos:line="26" pos:column="16"/></name></expr>)<pos:position pos:line="26" pos:column="17"/></condition><then pos:line="26" pos:column="17"> <block pos:line="26" pos:column="18">{
            <return pos:line="27" pos:column="13">return <expr><call><name pos:line="27" pos:column="20">apr_psprintf<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name><name pos:line="27" pos:column="33">cmd<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">-&gt;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="38">pool<pos:position pos:line="27" pos:column="42"/></name></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="28" pos:column="21">"Could not parse fake username expression '%s': %s"<pos:position pos:line="28" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="74">user<pos:position pos:line="28" pos:column="78"/></name></expr></argument>,
                    <argument><expr><name pos:line="29" pos:column="21">err<pos:position pos:line="29" pos:column="24"/></name></expr></argument>)<pos:position pos:line="29" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="26"/></return>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">conf<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">fakepass<pos:position pos:line="31" pos:column="23"/></name></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator>
                <call><name pos:line="32" pos:column="17">ap_expr_parse_cmd<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">cmd<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="40">pass<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">AP_EXPR_FLAG_STRING_RESULT<pos:position pos:line="32" pos:column="72"/></name></expr></argument>,
                        <argument><expr><operator pos:line="33" pos:column="25">&amp;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="26">err<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="31">NULL<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">err<pos:position pos:line="34" pos:column="16"/></name></expr>)<pos:position pos:line="34" pos:column="17"/></condition><then pos:line="34" pos:column="17"> <block pos:line="34" pos:column="18">{
            <return pos:line="35" pos:column="13">return <expr><call><name pos:line="35" pos:column="20">apr_psprintf<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><name><name pos:line="35" pos:column="33">cmd<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">-&gt;<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="38">pool<pos:position pos:line="35" pos:column="42"/></name></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="36" pos:column="21">"Could not parse fake password expression '%s': %s"<pos:position pos:line="36" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="74">user<pos:position pos:line="36" pos:column="78"/></name></expr></argument>,
                    <argument><expr><name pos:line="37" pos:column="21">err<pos:position pos:line="37" pos:column="24"/></name></expr></argument>)<pos:position pos:line="37" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="26"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">conf<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">fake_set<pos:position pos:line="39" pos:column="23"/></name></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <literal type="number" pos:line="39" pos:column="26">1<pos:position pos:line="39" pos:column="27"/></literal></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>

    }<pos:position pos:line="41" pos:column="6"/></block></else></if>

    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">NULL<pos:position pos:line="43" pos:column="16"/></name></expr>;<pos:position pos:line="43" pos:column="17"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

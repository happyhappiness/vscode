<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3992.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">try_alias_list<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">request_rec<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">r<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">apr_array_header_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">aliases<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">is_redir<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">status<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">alias_entry<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">entries<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><operator pos:line="4" pos:column="28">(<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">alias_entry<pos:position pos:line="4" pos:column="40"/></name> <operator pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></operator><operator pos:line="4" pos:column="42">)<pos:position pos:line="4" pos:column="43"/></operator> <name><name pos:line="4" pos:column="44">aliases<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">-&gt;<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="53">elts<pos:position pos:line="4" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ap_regmatch_t<pos:position pos:line="5" pos:column="18"/></name></type> <name><name pos:line="5" pos:column="19">regm<pos:position pos:line="5" pos:column="23"/></name><index pos:line="5" pos:column="23">[<expr><name pos:line="5" pos:column="24">AP_MAX_REG_MATCH<pos:position pos:line="5" pos:column="40"/></name></expr>]<pos:position pos:line="5" pos:column="41"/></index></name></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">found<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name pos:line="6" pos:column="19">NULL<pos:position pos:line="6" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><expr><name pos:line="9" pos:column="10">i<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></init> <condition><expr><name pos:line="9" pos:column="17">i<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">&lt;<pos:position pos:line="9" pos:column="23"/></operator> <name><name pos:line="9" pos:column="21">aliases<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">nelts<pos:position pos:line="9" pos:column="35"/></name></name></expr>;<pos:position pos:line="9" pos:column="36"/></condition> <incr><expr><operator pos:line="9" pos:column="37">++<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="39">i<pos:position pos:line="9" pos:column="40"/></name></expr></incr>)<pos:position pos:line="9" pos:column="41"/></control> <block pos:line="9" pos:column="42">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">alias_entry<pos:position pos:line="10" pos:column="20"/></name> <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">alias<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator><name><name pos:line="10" pos:column="31">entries<pos:position pos:line="10" pos:column="38"/></name><index pos:line="10" pos:column="38">[<expr><name pos:line="10" pos:column="39">i<pos:position pos:line="10" pos:column="40"/></name></expr>]<pos:position pos:line="10" pos:column="41"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">l<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">alias<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">regexp<pos:position pos:line="13" pos:column="26"/></name></name></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27"> <block pos:line="13" pos:column="28">{
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><operator pos:line="14" pos:column="17">!<pos:position pos:line="14" pos:column="18"/></operator><call><name pos:line="14" pos:column="18">ap_regexec<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name><name pos:line="14" pos:column="29">alias<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">regexp<pos:position pos:line="14" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="44">r<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">-&gt;<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="47">uri<pos:position pos:line="14" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="52">AP_MAX_REG_MATCH<pos:position pos:line="14" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="70">regm<pos:position pos:line="14" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="76">0<pos:position pos:line="14" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="79"/></condition><then pos:line="14" pos:column="79"> <block pos:line="14" pos:column="80">{
                <if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">alias<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">real<pos:position pos:line="15" pos:column="32"/></name></name></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <block pos:line="15" pos:column="34">{
                    <expr_stmt><expr><name pos:line="16" pos:column="21">found<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <call><name pos:line="16" pos:column="29">ap_pregsub<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><name><name pos:line="16" pos:column="40">r<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">-&gt;<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="43">pool<pos:position pos:line="16" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="49">alias<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">-&gt;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="56">real<pos:position pos:line="16" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="62">r<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">-&gt;<pos:position pos:line="16" pos:column="68"/></operator><name pos:line="16" pos:column="65">uri<pos:position pos:line="16" pos:column="68"/></name></name></expr></argument>,
                                       <argument><expr><name pos:line="17" pos:column="40">AP_MAX_REG_MATCH<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="58">regm<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>
                    <if pos:line="18" pos:column="21">if <condition pos:line="18" pos:column="24">(<expr><name pos:line="18" pos:column="25">found<pos:position pos:line="18" pos:column="30"/></name></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31"> <block pos:line="18" pos:column="32">{
                       <if pos:line="19" pos:column="24">if <condition pos:line="19" pos:column="27">(<expr><name pos:line="19" pos:column="28">is_redir<pos:position pos:line="19" pos:column="36"/></name></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37"> <block pos:line="19" pos:column="38">{
                            <decl_stmt><decl><type><name pos:line="20" pos:column="29">apr_uri_t<pos:position pos:line="20" pos:column="38"/></name></type> <name pos:line="20" pos:column="39">uri<pos:position pos:line="20" pos:column="42"/></name></decl>;<pos:position pos:line="20" pos:column="43"/></decl_stmt>
                            <expr_stmt><expr><call><name pos:line="21" pos:column="29">apr_uri_parse<pos:position pos:line="21" pos:column="42"/></name><argument_list pos:line="21" pos:column="42">(<argument><expr><name><name pos:line="21" pos:column="43">r<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">pool<pos:position pos:line="21" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="52">found<pos:position pos:line="21" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="59">&amp;<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="60">uri<pos:position pos:line="21" pos:column="63"/></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt>
                            <comment type="block" pos:line="22" pos:column="29">/* Do not escape the query string or fragment. */</comment>
                            <expr_stmt><expr><name pos:line="23" pos:column="29">found<pos:position pos:line="23" pos:column="34"/></name> <operator pos:line="23" pos:column="35">=<pos:position pos:line="23" pos:column="36"/></operator> <call><name pos:line="23" pos:column="37">apr_uri_unparse<pos:position pos:line="23" pos:column="52"/></name><argument_list pos:line="23" pos:column="52">(<argument><expr><name><name pos:line="23" pos:column="53">r<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">-&gt;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="56">pool<pos:position pos:line="23" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="62">&amp;<pos:position pos:line="23" pos:column="67"/></operator><name pos:line="23" pos:column="63">uri<pos:position pos:line="23" pos:column="66"/></name></expr></argument>,
                                                    <argument><expr><name pos:line="24" pos:column="53">APR_URI_UNP_OMITQUERY<pos:position pos:line="24" pos:column="74"/></name></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="76"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="25" pos:column="29">found<pos:position pos:line="25" pos:column="34"/></name> <operator pos:line="25" pos:column="35">=<pos:position pos:line="25" pos:column="36"/></operator> <call><name pos:line="25" pos:column="37">ap_escape_uri<pos:position pos:line="25" pos:column="50"/></name><argument_list pos:line="25" pos:column="50">(<argument><expr><name><name pos:line="25" pos:column="51">r<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">-&gt;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="54">pool<pos:position pos:line="25" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="60">found<pos:position pos:line="25" pos:column="65"/></name></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="67"/></expr_stmt>
                            <if pos:line="26" pos:column="29">if <condition pos:line="26" pos:column="32">(<expr><name><name pos:line="26" pos:column="33">uri<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">.<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="37">query<pos:position pos:line="26" pos:column="42"/></name></name></expr>)<pos:position pos:line="26" pos:column="43"/></condition><then pos:line="26" pos:column="43"> <block pos:line="26" pos:column="44">{
                                <expr_stmt><expr><name pos:line="27" pos:column="33">found<pos:position pos:line="27" pos:column="38"/></name> <operator pos:line="27" pos:column="39">=<pos:position pos:line="27" pos:column="40"/></operator> <call><name pos:line="27" pos:column="41">apr_pstrcat<pos:position pos:line="27" pos:column="52"/></name><argument_list pos:line="27" pos:column="52">(<argument><expr><name><name pos:line="27" pos:column="53">r<pos:position pos:line="27" pos:column="54"/></name><operator pos:line="27" pos:column="54">-&gt;<pos:position pos:line="27" pos:column="59"/></operator><name pos:line="27" pos:column="56">pool<pos:position pos:line="27" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="62">found<pos:position pos:line="27" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="69">"?"<pos:position pos:line="27" pos:column="72"/></literal></expr></argument>,
                                                    <argument><expr><name><name pos:line="28" pos:column="53">uri<pos:position pos:line="28" pos:column="56"/></name><operator pos:line="28" pos:column="56">.<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="57">query<pos:position pos:line="28" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="64">NULL<pos:position pos:line="28" pos:column="68"/></name></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="70"/></expr_stmt>
                            }<pos:position pos:line="29" pos:column="30"/></block></then></if>
                            <if pos:line="30" pos:column="29">if <condition pos:line="30" pos:column="32">(<expr><name><name pos:line="30" pos:column="33">uri<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">.<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="37">fragment<pos:position pos:line="30" pos:column="45"/></name></name></expr>)<pos:position pos:line="30" pos:column="46"/></condition><then pos:line="30" pos:column="46"> <block pos:line="30" pos:column="47">{
                                <expr_stmt><expr><name pos:line="31" pos:column="33">found<pos:position pos:line="31" pos:column="38"/></name> <operator pos:line="31" pos:column="39">=<pos:position pos:line="31" pos:column="40"/></operator> <call><name pos:line="31" pos:column="41">apr_pstrcat<pos:position pos:line="31" pos:column="52"/></name><argument_list pos:line="31" pos:column="52">(<argument><expr><name><name pos:line="31" pos:column="53">r<pos:position pos:line="31" pos:column="54"/></name><operator pos:line="31" pos:column="54">-&gt;<pos:position pos:line="31" pos:column="59"/></operator><name pos:line="31" pos:column="56">pool<pos:position pos:line="31" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="62">found<pos:position pos:line="31" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="69">"#"<pos:position pos:line="31" pos:column="72"/></literal></expr></argument>,
                                                    <argument><expr><name><name pos:line="32" pos:column="53">uri<pos:position pos:line="32" pos:column="56"/></name><operator pos:line="32" pos:column="56">.<pos:position pos:line="32" pos:column="57"/></operator><name pos:line="32" pos:column="57">fragment<pos:position pos:line="32" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="67">NULL<pos:position pos:line="32" pos:column="71"/></name></expr></argument>)<pos:position pos:line="32" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="73"/></expr_stmt>
                            }<pos:position pos:line="33" pos:column="30"/></block></then></if>
                       }<pos:position pos:line="34" pos:column="25"/></block></then>
                       <else pos:line="35" pos:column="24">else <block pos:line="35" pos:column="29">{
                           <decl_stmt><decl><type><name pos:line="36" pos:column="28">int<pos:position pos:line="36" pos:column="31"/></name></type> <name pos:line="36" pos:column="32">pathlen<pos:position pos:line="36" pos:column="39"/></name> <init pos:line="36" pos:column="40">= <expr><call><name pos:line="36" pos:column="42">strlen<pos:position pos:line="36" pos:column="48"/></name><argument_list pos:line="36" pos:column="48">(<argument><expr><name pos:line="36" pos:column="49">found<pos:position pos:line="36" pos:column="54"/></name></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call> <operator pos:line="36" pos:column="56">-<pos:position pos:line="36" pos:column="57"/></operator>
                                         <operator pos:line="37" pos:column="42">(<pos:position pos:line="37" pos:column="43"/></operator><call><name pos:line="37" pos:column="43">strlen<pos:position pos:line="37" pos:column="49"/></name><argument_list pos:line="37" pos:column="49">(<argument><expr><name><name pos:line="37" pos:column="50">r<pos:position pos:line="37" pos:column="51"/></name><operator pos:line="37" pos:column="51">-&gt;<pos:position pos:line="37" pos:column="56"/></operator><name pos:line="37" pos:column="53">uri<pos:position pos:line="37" pos:column="56"/></name></name> <operator pos:line="37" pos:column="57">+<pos:position pos:line="37" pos:column="58"/></operator> <name><name pos:line="37" pos:column="59">regm<pos:position pos:line="37" pos:column="63"/></name><index pos:line="37" pos:column="63">[<expr><literal type="number" pos:line="37" pos:column="64">0<pos:position pos:line="37" pos:column="65"/></literal></expr>]<pos:position pos:line="37" pos:column="66"/></index></name><operator pos:line="37" pos:column="66">.<pos:position pos:line="37" pos:column="67"/></operator><name pos:line="37" pos:column="67">rm_eo<pos:position pos:line="37" pos:column="72"/></name></expr></argument>)<pos:position pos:line="37" pos:column="73"/></argument_list></call><operator pos:line="37" pos:column="73">)<pos:position pos:line="37" pos:column="74"/></operator></expr></init></decl>;<pos:position pos:line="37" pos:column="75"/></decl_stmt>
                           <expr_stmt><expr><call><name pos:line="38" pos:column="28">AP_DEBUG_ASSERT<pos:position pos:line="38" pos:column="43"/></name><argument_list pos:line="38" pos:column="43">(<argument><expr><name pos:line="38" pos:column="44">pathlen<pos:position pos:line="38" pos:column="51"/></name> <operator pos:line="38" pos:column="52">&gt;=<pos:position pos:line="38" pos:column="57"/></operator> <literal type="number" pos:line="38" pos:column="55">0<pos:position pos:line="38" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="58"/></expr_stmt>
                           <expr_stmt><expr><call><name pos:line="39" pos:column="28">AP_DEBUG_ASSERT<pos:position pos:line="39" pos:column="43"/></name><argument_list pos:line="39" pos:column="43">(<argument><expr><name pos:line="39" pos:column="44">pathlen<pos:position pos:line="39" pos:column="51"/></name> <operator pos:line="39" pos:column="52">&lt;=<pos:position pos:line="39" pos:column="57"/></operator> <call><name pos:line="39" pos:column="55">strlen<pos:position pos:line="39" pos:column="61"/></name><argument_list pos:line="39" pos:column="61">(<argument><expr><name pos:line="39" pos:column="62">found<pos:position pos:line="39" pos:column="67"/></name></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="70"/></expr_stmt>
                           <expr_stmt><expr><call><name pos:line="40" pos:column="28">ap_set_context_info<pos:position pos:line="40" pos:column="47"/></name><argument_list pos:line="40" pos:column="47">(<argument><expr><name pos:line="40" pos:column="48">r<pos:position pos:line="40" pos:column="49"/></name></expr></argument>,
                                               <argument><expr><call><name pos:line="41" pos:column="48">apr_pstrmemdup<pos:position pos:line="41" pos:column="62"/></name><argument_list pos:line="41" pos:column="62">(<argument><expr><name><name pos:line="41" pos:column="63">r<pos:position pos:line="41" pos:column="64"/></name><operator pos:line="41" pos:column="64">-&gt;<pos:position pos:line="41" pos:column="69"/></operator><name pos:line="41" pos:column="66">pool<pos:position pos:line="41" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="72">r<pos:position pos:line="41" pos:column="73"/></name><operator pos:line="41" pos:column="73">-&gt;<pos:position pos:line="41" pos:column="78"/></operator><name pos:line="41" pos:column="75">uri<pos:position pos:line="41" pos:column="78"/></name></name></expr></argument>,
                                                              <argument><expr><name><name pos:line="42" pos:column="63">regm<pos:position pos:line="42" pos:column="67"/></name><index pos:line="42" pos:column="67">[<expr><literal type="number" pos:line="42" pos:column="68">0<pos:position pos:line="42" pos:column="69"/></literal></expr>]<pos:position pos:line="42" pos:column="70"/></index></name><operator pos:line="42" pos:column="70">.<pos:position pos:line="42" pos:column="71"/></operator><name pos:line="42" pos:column="71">rm_eo<pos:position pos:line="42" pos:column="76"/></name></expr></argument>)<pos:position pos:line="42" pos:column="77"/></argument_list></call></expr></argument>,
                                               <argument><expr><call><name pos:line="43" pos:column="48">apr_pstrmemdup<pos:position pos:line="43" pos:column="62"/></name><argument_list pos:line="43" pos:column="62">(<argument><expr><name><name pos:line="43" pos:column="63">r<pos:position pos:line="43" pos:column="64"/></name><operator pos:line="43" pos:column="64">-&gt;<pos:position pos:line="43" pos:column="69"/></operator><name pos:line="43" pos:column="66">pool<pos:position pos:line="43" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="72">found<pos:position pos:line="43" pos:column="77"/></name></expr></argument>,
                                                              <argument><expr><name pos:line="44" pos:column="63">pathlen<pos:position pos:line="44" pos:column="70"/></name></expr></argument>)<pos:position pos:line="44" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="73"/></expr_stmt>
                       }<pos:position pos:line="45" pos:column="25"/></block></else></if>
                    }<pos:position pos:line="46" pos:column="22"/></block></then>
                    <else pos:line="47" pos:column="21">else <block pos:line="47" pos:column="26">{
                        <expr_stmt><expr><call><name pos:line="48" pos:column="25">ap_log_rerror<pos:position pos:line="48" pos:column="38"/></name><argument_list pos:line="48" pos:column="38">(<argument><expr><name pos:line="48" pos:column="39">APLOG_MARK<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="51">APLOG_ERR<pos:position pos:line="48" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="62">0<pos:position pos:line="48" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="65">r<pos:position pos:line="48" pos:column="66"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="68">APLOGNO<pos:position pos:line="48" pos:column="75"/></name><argument_list pos:line="48" pos:column="75">(<argument><expr><literal type="number" pos:line="48" pos:column="76">00672<pos:position pos:line="48" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="82"/></argument_list></call>
                                      <literal type="string" pos:line="49" pos:column="39">"Regex substitution in '%s' failed. "<pos:position pos:line="49" pos:column="76"/></literal>
                                      <literal type="string" pos:line="50" pos:column="39">"Replacement too long?"<pos:position pos:line="50" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="64">alias<pos:position pos:line="50" pos:column="69"/></name><operator pos:line="50" pos:column="69">-&gt;<pos:position pos:line="50" pos:column="74"/></operator><name pos:line="50" pos:column="71">real<pos:position pos:line="50" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="77"/></expr_stmt>
                        <return pos:line="51" pos:column="25">return <expr><name pos:line="51" pos:column="32">PREGSUB_ERROR<pos:position pos:line="51" pos:column="45"/></name></expr>;<pos:position pos:line="51" pos:column="46"/></return>
                    }<pos:position pos:line="52" pos:column="22"/></block></else></if>
                }<pos:position pos:line="53" pos:column="18"/></block></then>
                <else pos:line="54" pos:column="17">else <block pos:line="54" pos:column="22">{
                    <comment type="block" pos:line="55" pos:column="21">/* need something non-null */</comment>
                    <expr_stmt><expr><name pos:line="56" pos:column="21">found<pos:position pos:line="56" pos:column="26"/></name> <operator pos:line="56" pos:column="27">=<pos:position pos:line="56" pos:column="28"/></operator> <literal type="string" pos:line="56" pos:column="29">""<pos:position pos:line="56" pos:column="31"/></literal></expr>;<pos:position pos:line="56" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="57" pos:column="18"/></block></else></if>
            }<pos:position pos:line="58" pos:column="14"/></block></then></if>
        }<pos:position pos:line="59" pos:column="10"/></block></then>
        <else pos:line="60" pos:column="9">else <block pos:line="60" pos:column="14">{
            <expr_stmt><expr><name pos:line="61" pos:column="13">l<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">=<pos:position pos:line="61" pos:column="16"/></operator> <call><name pos:line="61" pos:column="17">alias_matches<pos:position pos:line="61" pos:column="30"/></name><argument_list pos:line="61" pos:column="30">(<argument><expr><name><name pos:line="61" pos:column="31">r<pos:position pos:line="61" pos:column="32"/></name><operator pos:line="61" pos:column="32">-&gt;<pos:position pos:line="61" pos:column="37"/></operator><name pos:line="61" pos:column="34">uri<pos:position pos:line="61" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="39">alias<pos:position pos:line="61" pos:column="44"/></name><operator pos:line="61" pos:column="44">-&gt;<pos:position pos:line="61" pos:column="49"/></operator><name pos:line="61" pos:column="46">fake<pos:position pos:line="61" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="52"/></expr_stmt>

            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><name pos:line="63" pos:column="17">l<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">&gt;<pos:position pos:line="63" pos:column="23"/></operator> <literal type="number" pos:line="63" pos:column="21">0<pos:position pos:line="63" pos:column="22"/></literal></expr>)<pos:position pos:line="63" pos:column="23"/></condition><then pos:line="63" pos:column="23"> <block pos:line="63" pos:column="24">{
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">ap_set_context_info<pos:position pos:line="64" pos:column="36"/></name><argument_list pos:line="64" pos:column="36">(<argument><expr><name pos:line="64" pos:column="37">r<pos:position pos:line="64" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="40">alias<pos:position pos:line="64" pos:column="45"/></name><operator pos:line="64" pos:column="45">-&gt;<pos:position pos:line="64" pos:column="50"/></operator><name pos:line="64" pos:column="47">fake<pos:position pos:line="64" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="53">alias<pos:position pos:line="64" pos:column="58"/></name><operator pos:line="64" pos:column="58">-&gt;<pos:position pos:line="64" pos:column="63"/></operator><name pos:line="64" pos:column="60">real<pos:position pos:line="64" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="66"/></expr_stmt>
                <if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name pos:line="65" pos:column="21">is_redir<pos:position pos:line="65" pos:column="29"/></name></expr>)<pos:position pos:line="65" pos:column="30"/></condition><then pos:line="65" pos:column="30"> <block pos:line="65" pos:column="31">{
                    <decl_stmt><decl><type><name pos:line="66" pos:column="21">char<pos:position pos:line="66" pos:column="25"/></name> <modifier pos:line="66" pos:column="26">*<pos:position pos:line="66" pos:column="27"/></modifier></type><name pos:line="66" pos:column="27">escurl<pos:position pos:line="66" pos:column="33"/></name></decl>;<pos:position pos:line="66" pos:column="34"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="67" pos:column="21">escurl<pos:position pos:line="67" pos:column="27"/></name> <operator pos:line="67" pos:column="28">=<pos:position pos:line="67" pos:column="29"/></operator> <call><name pos:line="67" pos:column="30">ap_os_escape_path<pos:position pos:line="67" pos:column="47"/></name><argument_list pos:line="67" pos:column="47">(<argument><expr><name><name pos:line="67" pos:column="48">r<pos:position pos:line="67" pos:column="49"/></name><operator pos:line="67" pos:column="49">-&gt;<pos:position pos:line="67" pos:column="54"/></operator><name pos:line="67" pos:column="51">pool<pos:position pos:line="67" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="57">r<pos:position pos:line="67" pos:column="58"/></name><operator pos:line="67" pos:column="58">-&gt;<pos:position pos:line="67" pos:column="63"/></operator><name pos:line="67" pos:column="60">uri<pos:position pos:line="67" pos:column="63"/></name></name> <operator pos:line="67" pos:column="64">+<pos:position pos:line="67" pos:column="65"/></operator> <name pos:line="67" pos:column="66">l<pos:position pos:line="67" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="69">1<pos:position pos:line="67" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="72"/></expr_stmt>

                    <expr_stmt><expr><name pos:line="69" pos:column="21">found<pos:position pos:line="69" pos:column="26"/></name> <operator pos:line="69" pos:column="27">=<pos:position pos:line="69" pos:column="28"/></operator> <call><name pos:line="69" pos:column="29">apr_pstrcat<pos:position pos:line="69" pos:column="40"/></name><argument_list pos:line="69" pos:column="40">(<argument><expr><name><name pos:line="69" pos:column="41">r<pos:position pos:line="69" pos:column="42"/></name><operator pos:line="69" pos:column="42">-&gt;<pos:position pos:line="69" pos:column="47"/></operator><name pos:line="69" pos:column="44">pool<pos:position pos:line="69" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="50">alias<pos:position pos:line="69" pos:column="55"/></name><operator pos:line="69" pos:column="55">-&gt;<pos:position pos:line="69" pos:column="60"/></operator><name pos:line="69" pos:column="57">real<pos:position pos:line="69" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="63">escurl<pos:position pos:line="69" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="71">NULL<pos:position pos:line="69" pos:column="75"/></name></expr></argument>)<pos:position pos:line="69" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="77"/></expr_stmt>
                }<pos:position pos:line="70" pos:column="18"/></block></then>
                <else pos:line="71" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="21">found<pos:position pos:line="72" pos:column="26"/></name> <operator pos:line="72" pos:column="27">=<pos:position pos:line="72" pos:column="28"/></operator> <call><name pos:line="72" pos:column="29">apr_pstrcat<pos:position pos:line="72" pos:column="40"/></name><argument_list pos:line="72" pos:column="40">(<argument><expr><name><name pos:line="72" pos:column="41">r<pos:position pos:line="72" pos:column="42"/></name><operator pos:line="72" pos:column="42">-&gt;<pos:position pos:line="72" pos:column="47"/></operator><name pos:line="72" pos:column="44">pool<pos:position pos:line="72" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="50">alias<pos:position pos:line="72" pos:column="55"/></name><operator pos:line="72" pos:column="55">-&gt;<pos:position pos:line="72" pos:column="60"/></operator><name pos:line="72" pos:column="57">real<pos:position pos:line="72" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="63">r<pos:position pos:line="72" pos:column="64"/></name><operator pos:line="72" pos:column="64">-&gt;<pos:position pos:line="72" pos:column="69"/></operator><name pos:line="72" pos:column="66">uri<pos:position pos:line="72" pos:column="69"/></name></name> <operator pos:line="72" pos:column="70">+<pos:position pos:line="72" pos:column="71"/></operator> <name pos:line="72" pos:column="72">l<pos:position pos:line="72" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="75">NULL<pos:position pos:line="72" pos:column="79"/></name></expr></argument>)<pos:position pos:line="72" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="81"/></expr_stmt></block></else></if>
            }<pos:position pos:line="73" pos:column="14"/></block></then></if>
        }<pos:position pos:line="74" pos:column="10"/></block></else></if>

        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">found<pos:position pos:line="76" pos:column="18"/></name></expr>)<pos:position pos:line="76" pos:column="19"/></condition><then pos:line="76" pos:column="19"> <block pos:line="76" pos:column="20">{
            <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><name><name pos:line="77" pos:column="17">alias<pos:position pos:line="77" pos:column="22"/></name><operator pos:line="77" pos:column="22">-&gt;<pos:position pos:line="77" pos:column="27"/></operator><name pos:line="77" pos:column="24">handler<pos:position pos:line="77" pos:column="31"/></name></name></expr>)<pos:position pos:line="77" pos:column="32"/></condition><then pos:line="77" pos:column="32"> <block pos:line="77" pos:column="33">{    <comment type="block" pos:line="77" pos:column="38">/* Set handler, and leave a note for mod_cgi */</comment>
                <expr_stmt><expr><name><name pos:line="78" pos:column="17">r<pos:position pos:line="78" pos:column="18"/></name><operator pos:line="78" pos:column="18">-&gt;<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="20">handler<pos:position pos:line="78" pos:column="27"/></name></name> <operator pos:line="78" pos:column="28">=<pos:position pos:line="78" pos:column="29"/></operator> <name><name pos:line="78" pos:column="30">alias<pos:position pos:line="78" pos:column="35"/></name><operator pos:line="78" pos:column="35">-&gt;<pos:position pos:line="78" pos:column="40"/></operator><name pos:line="78" pos:column="37">handler<pos:position pos:line="78" pos:column="44"/></name></name></expr>;<pos:position pos:line="78" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="79" pos:column="17">apr_table_setn<pos:position pos:line="79" pos:column="31"/></name><argument_list pos:line="79" pos:column="31">(<argument><expr><name><name pos:line="79" pos:column="32">r<pos:position pos:line="79" pos:column="33"/></name><operator pos:line="79" pos:column="33">-&gt;<pos:position pos:line="79" pos:column="38"/></operator><name pos:line="79" pos:column="35">notes<pos:position pos:line="79" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="42">"alias-forced-type"<pos:position pos:line="79" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="63">r<pos:position pos:line="79" pos:column="64"/></name><operator pos:line="79" pos:column="64">-&gt;<pos:position pos:line="79" pos:column="69"/></operator><name pos:line="79" pos:column="66">handler<pos:position pos:line="79" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="75"/></expr_stmt>
            }<pos:position pos:line="80" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="81" pos:column="13">/* XXX This is as SLOW as can be, next step, we optimize
             * and merge to whatever part of the found path was already
             * canonicalized.  After I finish eliminating os canonical.
             * Better fail test for ap_server_root_relative needed here.
             */</comment>
            <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><operator pos:line="86" pos:column="17">!<pos:position pos:line="86" pos:column="18"/></operator><name pos:line="86" pos:column="18">is_redir<pos:position pos:line="86" pos:column="26"/></name></expr>)<pos:position pos:line="86" pos:column="27"/></condition><then pos:line="86" pos:column="27"> <block pos:line="86" pos:column="28">{
                <expr_stmt><expr><name pos:line="87" pos:column="17">found<pos:position pos:line="87" pos:column="22"/></name> <operator pos:line="87" pos:column="23">=<pos:position pos:line="87" pos:column="24"/></operator> <call><name pos:line="87" pos:column="25">ap_server_root_relative<pos:position pos:line="87" pos:column="48"/></name><argument_list pos:line="87" pos:column="48">(<argument><expr><name><name pos:line="87" pos:column="49">r<pos:position pos:line="87" pos:column="50"/></name><operator pos:line="87" pos:column="50">-&gt;<pos:position pos:line="87" pos:column="55"/></operator><name pos:line="87" pos:column="52">pool<pos:position pos:line="87" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="58">found<pos:position pos:line="87" pos:column="63"/></name></expr></argument>)<pos:position pos:line="87" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="88" pos:column="14"/></block></then></if>
            <if pos:line="89" pos:column="13">if <condition pos:line="89" pos:column="16">(<expr><name pos:line="89" pos:column="17">found<pos:position pos:line="89" pos:column="22"/></name></expr>)<pos:position pos:line="89" pos:column="23"/></condition><then pos:line="89" pos:column="23"> <block pos:line="89" pos:column="24">{
                <expr_stmt><expr><operator pos:line="90" pos:column="17">*<pos:position pos:line="90" pos:column="18"/></operator><name pos:line="90" pos:column="18">status<pos:position pos:line="90" pos:column="24"/></name> <operator pos:line="90" pos:column="25">=<pos:position pos:line="90" pos:column="26"/></operator> <name><name pos:line="90" pos:column="27">alias<pos:position pos:line="90" pos:column="32"/></name><operator pos:line="90" pos:column="32">-&gt;<pos:position pos:line="90" pos:column="37"/></operator><name pos:line="90" pos:column="34">redir_status<pos:position pos:line="90" pos:column="46"/></name></name></expr>;<pos:position pos:line="90" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="91" pos:column="14"/></block></then></if>
            <return pos:line="92" pos:column="13">return <expr><name pos:line="92" pos:column="20">found<pos:position pos:line="92" pos:column="25"/></name></expr>;<pos:position pos:line="92" pos:column="26"/></return>
        }<pos:position pos:line="93" pos:column="10"/></block></then></if>

    }<pos:position pos:line="95" pos:column="6"/></block></for>

    <return pos:line="97" pos:column="5">return <expr><name pos:line="97" pos:column="12">NULL<pos:position pos:line="97" pos:column="16"/></name></expr>;<pos:position pos:line="97" pos:column="17"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

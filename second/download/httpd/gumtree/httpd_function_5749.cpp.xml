<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5749.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">core_upgrade_handler<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">request_rec<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">r<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">conn_rec<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">c<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name><name pos:line="3" pos:column="19">r<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">-&gt;<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="22">connection<pos:position pos:line="3" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">upgrade<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><call><name pos:line="4" pos:column="27">apr_table_get<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><name><name pos:line="4" pos:column="41">r<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">-&gt;<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="44">headers_in<pos:position pos:line="4" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="56">"Upgrade"<pos:position pos:line="4" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="67"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">upgrade<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">&amp;&amp;<pos:position pos:line="6" pos:column="27"/></operator> <operator pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">upgrade<pos:position pos:line="6" pos:column="28"/></name></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29"> <block pos:line="6" pos:column="30">{
        <decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">conn<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><call><name pos:line="7" pos:column="28">apr_table_get<pos:position pos:line="7" pos:column="41"/></name><argument_list pos:line="7" pos:column="41">(<argument><expr><name><name pos:line="7" pos:column="42">r<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">headers_in<pos:position pos:line="7" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="57">"Connection"<pos:position pos:line="7" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="71"/></decl_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">ap_find_token<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name><name pos:line="8" pos:column="27">r<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">pool<pos:position pos:line="8" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">conn<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="42">"upgrade"<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="53"/></condition><then pos:line="8" pos:column="53"> <block pos:line="8" pos:column="54">{
            <decl_stmt><decl><type><name pos:line="9" pos:column="13">apr_array_header_t<pos:position pos:line="9" pos:column="31"/></name> <modifier pos:line="9" pos:column="32">*<pos:position pos:line="9" pos:column="33"/></modifier></type><name pos:line="9" pos:column="33">offers<pos:position pos:line="9" pos:column="39"/></name> <init pos:line="9" pos:column="40">= <expr><name pos:line="9" pos:column="42">NULL<pos:position pos:line="9" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="47"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="10" pos:column="13">const<pos:position pos:line="10" pos:column="18"/></specifier> <name pos:line="10" pos:column="19">char<pos:position pos:line="10" pos:column="23"/></name> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">err<pos:position pos:line="10" pos:column="28"/></name></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
            
            <expr_stmt><expr><name pos:line="12" pos:column="13">err<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <call><name pos:line="12" pos:column="19">ap_parse_token_list_strict<pos:position pos:line="12" pos:column="45"/></name><argument_list pos:line="12" pos:column="45">(<argument><expr><name><name pos:line="12" pos:column="46">r<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">-&gt;<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="49">pool<pos:position pos:line="12" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="55">upgrade<pos:position pos:line="12" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="64">&amp;<pos:position pos:line="12" pos:column="69"/></operator><name pos:line="12" pos:column="65">offers<pos:position pos:line="12" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="73">0<pos:position pos:line="12" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="76"/></expr_stmt>
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><name pos:line="13" pos:column="17">err<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21"> <block pos:line="13" pos:column="22">{
                <expr_stmt><expr><call><name pos:line="14" pos:column="17">ap_log_rerror<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">APLOG_MARK<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">APLOG_DEBUG<pos:position pos:line="14" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="56">0<pos:position pos:line="14" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="59">r<pos:position pos:line="14" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="62">APLOGNO<pos:position pos:line="14" pos:column="69"/></name><argument_list pos:line="14" pos:column="69">(<argument><expr><literal type="number" pos:line="14" pos:column="70">02910<pos:position pos:line="14" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="76"/></argument_list></call>
                              <literal type="string" pos:line="15" pos:column="31">"parsing Upgrade header: %s"<pos:position pos:line="15" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="61">err<pos:position pos:line="15" pos:column="64"/></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>
                <return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">DECLINED<pos:position pos:line="16" pos:column="32"/></name></expr>;<pos:position pos:line="16" pos:column="33"/></return>
            }<pos:position pos:line="17" pos:column="14"/></block></then></if>
            
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><name pos:line="19" pos:column="17">offers<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">&amp;&amp;<pos:position pos:line="19" pos:column="34"/></operator> <name><name pos:line="19" pos:column="27">offers<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">-&gt;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="35">nelts<pos:position pos:line="19" pos:column="40"/></name></name> <operator pos:line="19" pos:column="41">&gt;<pos:position pos:line="19" pos:column="45"/></operator> <literal type="number" pos:line="19" pos:column="43">0<pos:position pos:line="19" pos:column="44"/></literal></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45"> <block pos:line="19" pos:column="46">{
                <decl_stmt><decl><type><specifier pos:line="20" pos:column="17">const<pos:position pos:line="20" pos:column="22"/></specifier> <name pos:line="20" pos:column="23">char<pos:position pos:line="20" pos:column="27"/></name> <modifier pos:line="20" pos:column="28">*<pos:position pos:line="20" pos:column="29"/></modifier></type><name pos:line="20" pos:column="29">protocol<pos:position pos:line="20" pos:column="37"/></name> <init pos:line="20" pos:column="38">= <expr><call><name pos:line="20" pos:column="40">ap_select_protocol<pos:position pos:line="20" pos:column="58"/></name><argument_list pos:line="20" pos:column="58">(<argument><expr><name pos:line="20" pos:column="59">c<pos:position pos:line="20" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="62">r<pos:position pos:line="20" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="65">r<pos:position pos:line="20" pos:column="66"/></name><operator pos:line="20" pos:column="66">-&gt;<pos:position pos:line="20" pos:column="71"/></operator><name pos:line="20" pos:column="68">server<pos:position pos:line="20" pos:column="74"/></name></name></expr></argument>,
                                                          <argument><expr><name pos:line="21" pos:column="59">offers<pos:position pos:line="21" pos:column="65"/></name></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="67"/></decl_stmt>
                <if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">protocol<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">&amp;&amp;<pos:position pos:line="22" pos:column="40"/></operator> <call><name pos:line="22" pos:column="33">strcmp<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><name pos:line="22" pos:column="40">protocol<pos:position pos:line="22" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="50">ap_get_protocol<pos:position pos:line="22" pos:column="65"/></name><argument_list pos:line="22" pos:column="65">(<argument><expr><name pos:line="22" pos:column="66">c<pos:position pos:line="22" pos:column="67"/></name></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="70"/></condition><then pos:line="22" pos:column="70"> <block pos:line="22" pos:column="71">{
                    <expr_stmt><expr><call><name pos:line="23" pos:column="21">ap_log_rerror<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">APLOG_MARK<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">APLOG_DEBUG<pos:position pos:line="23" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="60">0<pos:position pos:line="23" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="63">r<pos:position pos:line="23" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="66">APLOGNO<pos:position pos:line="23" pos:column="73"/></name><argument_list pos:line="23" pos:column="73">(<argument><expr><literal type="number" pos:line="23" pos:column="74">02909<pos:position pos:line="23" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="80"/></argument_list></call>
                                  <literal type="string" pos:line="24" pos:column="35">"Upgrade selects '%s'"<pos:position pos:line="24" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="59">protocol<pos:position pos:line="24" pos:column="67"/></name></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="69"/></expr_stmt>
                    <comment type="block" pos:line="25" pos:column="21">/* Let the client know what we are upgrading to. */</comment>
                    <expr_stmt><expr><call><name pos:line="26" pos:column="21">apr_table_clear<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><name><name pos:line="26" pos:column="37">r<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">headers_out<pos:position pos:line="26" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="27" pos:column="21">apr_table_setn<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name><name pos:line="27" pos:column="36">r<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">headers_out<pos:position pos:line="27" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="52">"Upgrade"<pos:position pos:line="27" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="63">protocol<pos:position pos:line="27" pos:column="71"/></name></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="73"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="28" pos:column="21">apr_table_setn<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name><name pos:line="28" pos:column="36">r<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">-&gt;<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="39">headers_out<pos:position pos:line="28" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="52">"Connection"<pos:position pos:line="28" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="66">"Upgrade"<pos:position pos:line="28" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt>
                    
                    <expr_stmt><expr><name><name pos:line="30" pos:column="21">r<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">status<pos:position pos:line="30" pos:column="30"/></name></name> <operator pos:line="30" pos:column="31">=<pos:position pos:line="30" pos:column="32"/></operator> <name pos:line="30" pos:column="33">HTTP_SWITCHING_PROTOCOLS<pos:position pos:line="30" pos:column="57"/></name></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="31" pos:column="21">r<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">-&gt;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="24">status_line<pos:position pos:line="31" pos:column="35"/></name></name> <operator pos:line="31" pos:column="36">=<pos:position pos:line="31" pos:column="37"/></operator> <call><name pos:line="31" pos:column="38">ap_get_status_line<pos:position pos:line="31" pos:column="56"/></name><argument_list pos:line="31" pos:column="56">(<argument><expr><name><name pos:line="31" pos:column="57">r<pos:position pos:line="31" pos:column="58"/></name><operator pos:line="31" pos:column="58">-&gt;<pos:position pos:line="31" pos:column="63"/></operator><name pos:line="31" pos:column="60">status<pos:position pos:line="31" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="68"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="32" pos:column="21">ap_send_interim_response<pos:position pos:line="32" pos:column="45"/></name><argument_list pos:line="32" pos:column="45">(<argument><expr><name pos:line="32" pos:column="46">r<pos:position pos:line="32" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="49">1<pos:position pos:line="32" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>

                    <expr_stmt><expr><call><name pos:line="34" pos:column="21">ap_switch_protocol<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">c<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">r<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="46">r<pos:position pos:line="34" pos:column="47"/></name><operator pos:line="34" pos:column="47">-&gt;<pos:position pos:line="34" pos:column="52"/></operator><name pos:line="34" pos:column="49">server<pos:position pos:line="34" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="57">protocol<pos:position pos:line="34" pos:column="65"/></name></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="67"/></expr_stmt>

                    <comment type="block" pos:line="36" pos:column="21">/* make sure httpd closes the connection after this */</comment>
                    <expr_stmt><expr><name><name pos:line="37" pos:column="21">c<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">-&gt;<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="24">keepalive<pos:position pos:line="37" pos:column="33"/></name></name> <operator pos:line="37" pos:column="34">=<pos:position pos:line="37" pos:column="35"/></operator> <name pos:line="37" pos:column="36">AP_CONN_CLOSE<pos:position pos:line="37" pos:column="49"/></name></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt>
                    <return pos:line="38" pos:column="21">return <expr><name pos:line="38" pos:column="28">DONE<pos:position pos:line="38" pos:column="32"/></name></expr>;<pos:position pos:line="38" pos:column="33"/></return>
                }<pos:position pos:line="39" pos:column="18"/></block></then></if>
            }<pos:position pos:line="40" pos:column="14"/></block></then></if>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
    
    <return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">DECLINED<pos:position pos:line="44" pos:column="20"/></name></expr>;<pos:position pos:line="44" pos:column="21"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_347_httpd-2.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_method_mkcol<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">request_rec<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">r<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_resource<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">resource<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">resource_state<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dav_auto_version_info<pos:position pos:line="5" pos:column="26"/></name></type> <name pos:line="5" pos:column="27">av_info<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">dav_hooks_locks<pos:position pos:line="6" pos:column="26"/></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">locks_hooks<pos:position pos:line="6" pos:column="39"/></name> <init pos:line="6" pos:column="40">= <expr><call><name pos:line="6" pos:column="42">DAV_GET_HOOKS_LOCKS<pos:position pos:line="6" pos:column="61"/></name><argument_list pos:line="6" pos:column="61">(<argument><expr><name pos:line="6" pos:column="62">r<pos:position pos:line="6" pos:column="63"/></name></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">dav_error<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">err<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">dav_error<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">err2<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">result<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">dav_dir_conf<pos:position pos:line="10" pos:column="17"/></name> <modifier pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></modifier></type><name pos:line="10" pos:column="19">conf<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">dav_response<pos:position pos:line="11" pos:column="17"/></name> <modifier pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></modifier></type><name pos:line="11" pos:column="19">multi_status<pos:position pos:line="11" pos:column="31"/></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* handle the request body */</comment>
    <comment type="block" pos:line="14" pos:column="5">/* ### this may move lower once we start processing bodies */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">result<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <call><name pos:line="15" pos:column="19">process_mkcol_body<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">r<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call><operator pos:line="15" pos:column="40">)<pos:position pos:line="15" pos:column="41"/></operator> <operator pos:line="15" pos:column="42">!=<pos:position pos:line="15" pos:column="44"/></operator> <name pos:line="15" pos:column="45">OK<pos:position pos:line="15" pos:column="47"/></name></expr>)<pos:position pos:line="15" pos:column="48"/></condition><then pos:line="15" pos:column="48"> <block pos:line="15" pos:column="49">{
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">result<pos:position pos:line="16" pos:column="22"/></name></expr>;<pos:position pos:line="16" pos:column="23"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="19" pos:column="5">conf<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">dav_dir_conf<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">*<pos:position pos:line="19" pos:column="27"/></operator><operator pos:line="19" pos:column="27">)<pos:position pos:line="19" pos:column="28"/></operator><call><name pos:line="19" pos:column="28">ap_get_module_config<pos:position pos:line="19" pos:column="48"/></name><argument_list pos:line="19" pos:column="48">(<argument><expr><name><name pos:line="19" pos:column="49">r<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">-&gt;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="52">per_dir_config<pos:position pos:line="19" pos:column="66"/></name></name></expr></argument>,
                                                <argument><expr><operator pos:line="20" pos:column="49">&amp;<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="50">dav_module<pos:position pos:line="20" pos:column="60"/></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* Ask repository module to resolve the resource */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">err<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <call><name pos:line="23" pos:column="11">dav_get_resource<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">r<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="31">0<pos:position pos:line="23" pos:column="32"/></literal></expr></argument> <comment type="block" pos:line="23" pos:column="33">/* label_allowed */</comment>, <argument><expr><literal type="number" pos:line="23" pos:column="54">0<pos:position pos:line="23" pos:column="55"/></literal></expr></argument> <comment type="block" pos:line="23" pos:column="56">/* use_checked_in */</comment>,
                           <argument><expr><operator pos:line="24" pos:column="28">&amp;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="29">resource<pos:position pos:line="24" pos:column="37"/></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">err<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">!=<pos:position pos:line="25" pos:column="15"/></operator> <name pos:line="25" pos:column="16">NULL<pos:position pos:line="25" pos:column="20"/></name></expr>)<pos:position pos:line="25" pos:column="21"/></condition><then pos:line="25" pos:column="21">
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><call><name pos:line="26" pos:column="16">dav_handle_err<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">r<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">err<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">NULL<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></return></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">resource<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">exists<pos:position pos:line="28" pos:column="25"/></name></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26"> <block pos:line="28" pos:column="27">{
        <comment type="block" pos:line="29" pos:column="9">/* oops. something was already there! */</comment>

        <comment type="block" pos:line="31" pos:column="9">/* Apache will supply a default error for this. */</comment>
        <comment type="block" pos:line="32" pos:column="9">/* ### we should provide a specific error message! */</comment>
        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">HTTP_METHOD_NOT_ALLOWED<pos:position pos:line="33" pos:column="39"/></name></expr>;<pos:position pos:line="33" pos:column="40"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="36" pos:column="5">resource_state<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <call><name pos:line="36" pos:column="22">dav_get_resource_state<pos:position pos:line="36" pos:column="44"/></name><argument_list pos:line="36" pos:column="44">(<argument><expr><name pos:line="36" pos:column="45">r<pos:position pos:line="36" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="48">resource<pos:position pos:line="36" pos:column="56"/></name></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>

    <comment type="block" pos:line="38" pos:column="5">/*
     * Check If-Headers and existing locks.
     *
     * Note: depth == 0 normally requires no multistatus response. However,
     * if we pass DAV_VALIDATE_PARENT, then we could get an error on a URI
     * other than the Request-URI, thereby requiring a multistatus.
     *
     * If the resource does not exist (DAV_RESOURCE_NULL), then we must
     * check the resource *and* its parent. If the resource exists or is
     * a locknull resource, then we check only the resource.
     */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">(<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">err<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <call><name pos:line="49" pos:column="16">dav_validate_request<pos:position pos:line="49" pos:column="36"/></name><argument_list pos:line="49" pos:column="36">(<argument><expr><name pos:line="49" pos:column="37">r<pos:position pos:line="49" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="40">resource<pos:position pos:line="49" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="50">0<pos:position pos:line="49" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="53">NULL<pos:position pos:line="49" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="59">&amp;<pos:position pos:line="49" pos:column="64"/></operator><name pos:line="49" pos:column="60">multi_status<pos:position pos:line="49" pos:column="72"/></name></expr></argument>,
                                    <argument><expr><ternary><condition><expr><name pos:line="50" pos:column="37">resource_state<pos:position pos:line="50" pos:column="51"/></name> <operator pos:line="50" pos:column="52">==<pos:position pos:line="50" pos:column="54"/></operator> <name pos:line="50" pos:column="55">DAV_RESOURCE_NULL<pos:position pos:line="50" pos:column="72"/></name></expr> ?<pos:position pos:line="50" pos:column="74"/></condition><then pos:line="50" pos:column="74">
                                    <expr><name pos:line="51" pos:column="37">DAV_VALIDATE_PARENT<pos:position pos:line="51" pos:column="56"/></name></expr> <pos:position pos:line="51" pos:column="57"/></then><else pos:line="51" pos:column="57">:
                                    <expr><name pos:line="52" pos:column="37">DAV_VALIDATE_RESOURCE<pos:position pos:line="52" pos:column="58"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="52" pos:column="60">NULL<pos:position pos:line="52" pos:column="64"/></name></expr></argument>)<pos:position pos:line="52" pos:column="65"/></argument_list></call><operator pos:line="52" pos:column="65">)<pos:position pos:line="52" pos:column="66"/></operator> <operator pos:line="52" pos:column="67">!=<pos:position pos:line="52" pos:column="69"/></operator> <name pos:line="52" pos:column="70">NULL<pos:position pos:line="52" pos:column="74"/></name></expr>)<pos:position pos:line="52" pos:column="75"/></condition><then pos:line="52" pos:column="75"> <block pos:line="52" pos:column="76">{
        <comment type="block" pos:line="53" pos:column="9">/* ### add a higher-level description? */</comment>
        <return pos:line="54" pos:column="9">return <expr><call><name pos:line="54" pos:column="16">dav_handle_err<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name pos:line="54" pos:column="31">r<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="34">err<pos:position pos:line="54" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="39">multi_status<pos:position pos:line="54" pos:column="51"/></name></expr></argument>)<pos:position pos:line="54" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="53"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="57" pos:column="5">/* if versioned resource, make sure parent is checked out */</comment>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">(<pos:position pos:line="58" pos:column="10"/></operator><name pos:line="58" pos:column="10">err<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">=<pos:position pos:line="58" pos:column="15"/></operator> <call><name pos:line="58" pos:column="16">dav_auto_checkout<pos:position pos:line="58" pos:column="33"/></name><argument_list pos:line="58" pos:column="33">(<argument><expr><name pos:line="58" pos:column="34">r<pos:position pos:line="58" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="37">resource<pos:position pos:line="58" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="47">1<pos:position pos:line="58" pos:column="48"/></literal></expr></argument> <comment type="block" pos:line="58" pos:column="49">/* parent_only */</comment>,
                                 <argument><expr><operator pos:line="59" pos:column="34">&amp;<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="35">av_info<pos:position pos:line="59" pos:column="42"/></name></expr></argument>)<pos:position pos:line="59" pos:column="43"/></argument_list></call><operator pos:line="59" pos:column="43">)<pos:position pos:line="59" pos:column="44"/></operator> <operator pos:line="59" pos:column="45">!=<pos:position pos:line="59" pos:column="47"/></operator> <name pos:line="59" pos:column="48">NULL<pos:position pos:line="59" pos:column="52"/></name></expr>)<pos:position pos:line="59" pos:column="53"/></condition><then pos:line="59" pos:column="53"> <block pos:line="59" pos:column="54">{
        <comment type="block" pos:line="60" pos:column="9">/* ### add a higher-level description? */</comment>
        <return pos:line="61" pos:column="9">return <expr><call><name pos:line="61" pos:column="16">dav_handle_err<pos:position pos:line="61" pos:column="30"/></name><argument_list pos:line="61" pos:column="30">(<argument><expr><name pos:line="61" pos:column="31">r<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="34">err<pos:position pos:line="61" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="39">NULL<pos:position pos:line="61" pos:column="43"/></name></expr></argument>)<pos:position pos:line="61" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="45"/></return>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="64" pos:column="5">/* try to create the collection */</comment>
    <expr_stmt><expr><name><name pos:line="65" pos:column="5">resource<pos:position pos:line="65" pos:column="13"/></name><operator pos:line="65" pos:column="13">-&gt;<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="15">collection<pos:position pos:line="65" pos:column="25"/></name></name> <operator pos:line="65" pos:column="26">=<pos:position pos:line="65" pos:column="27"/></operator> <literal type="number" pos:line="65" pos:column="28">1<pos:position pos:line="65" pos:column="29"/></literal></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="66" pos:column="5">err<pos:position pos:line="66" pos:column="8"/></name> <operator pos:line="66" pos:column="9">=<pos:position pos:line="66" pos:column="10"/></operator> <call pos:line="66" pos:column="11">(<modifier pos:line="66" pos:column="12">*<pos:position pos:line="66" pos:column="13"/></modifier><name><name pos:line="66" pos:column="13">resource<pos:position pos:line="66" pos:column="21"/></name><operator pos:line="66" pos:column="21">-&gt;<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="23">hooks<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">-&gt;<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="30">create_collection<pos:position pos:line="66" pos:column="47"/></name></name>)<argument_list pos:line="66" pos:column="48">(<argument><expr><name pos:line="66" pos:column="49">resource<pos:position pos:line="66" pos:column="57"/></name></expr></argument>)<pos:position pos:line="66" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="59"/></expr_stmt>

    <comment type="block" pos:line="68" pos:column="5">/* restore modifiability of parent back to what it was */</comment>
    <expr_stmt><expr><name pos:line="69" pos:column="5">err2<pos:position pos:line="69" pos:column="9"/></name> <operator pos:line="69" pos:column="10">=<pos:position pos:line="69" pos:column="11"/></operator> <call><name pos:line="69" pos:column="12">dav_auto_checkin<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><name pos:line="69" pos:column="29">r<pos:position pos:line="69" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="32">NULL<pos:position pos:line="69" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="38">err<pos:position pos:line="69" pos:column="41"/></name> <operator pos:line="69" pos:column="42">!=<pos:position pos:line="69" pos:column="44"/></operator> <name pos:line="69" pos:column="45">NULL<pos:position pos:line="69" pos:column="49"/></name></expr></argument> <comment type="block" pos:line="69" pos:column="50">/* undo if error */</comment>,
                            <argument><expr><literal type="number" pos:line="70" pos:column="29">0<pos:position pos:line="70" pos:column="30"/></literal></expr></argument> <comment type="block" pos:line="70" pos:column="31">/*unlock*/</comment>, <argument><expr><operator pos:line="70" pos:column="43">&amp;<pos:position pos:line="70" pos:column="48"/></operator><name pos:line="70" pos:column="44">av_info<pos:position pos:line="70" pos:column="51"/></name></expr></argument>)<pos:position pos:line="70" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="72" pos:column="5">/* check for errors now */</comment>
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><name pos:line="73" pos:column="9">err<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">!=<pos:position pos:line="73" pos:column="15"/></operator> <name pos:line="73" pos:column="16">NULL<pos:position pos:line="73" pos:column="20"/></name></expr>)<pos:position pos:line="73" pos:column="21"/></condition><then pos:line="73" pos:column="21"> <block pos:line="73" pos:column="22">{
        <return pos:line="74" pos:column="9">return <expr><call><name pos:line="74" pos:column="16">dav_handle_err<pos:position pos:line="74" pos:column="30"/></name><argument_list pos:line="74" pos:column="30">(<argument><expr><name pos:line="74" pos:column="31">r<pos:position pos:line="74" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="34">err<pos:position pos:line="74" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="39">NULL<pos:position pos:line="74" pos:column="43"/></name></expr></argument>)<pos:position pos:line="74" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="45"/></return>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">err2<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">!=<pos:position pos:line="76" pos:column="16"/></operator> <name pos:line="76" pos:column="17">NULL<pos:position pos:line="76" pos:column="21"/></name></expr>)<pos:position pos:line="76" pos:column="22"/></condition><then pos:line="76" pos:column="22"> <block pos:line="76" pos:column="23">{
        <comment type="block" pos:line="77" pos:column="9">/* just log a warning */</comment>
        <expr_stmt><expr><name pos:line="78" pos:column="9">err<pos:position pos:line="78" pos:column="12"/></name> <operator pos:line="78" pos:column="13">=<pos:position pos:line="78" pos:column="14"/></operator> <call><name pos:line="78" pos:column="15">dav_push_error<pos:position pos:line="78" pos:column="29"/></name><argument_list pos:line="78" pos:column="29">(<argument><expr><name><name pos:line="78" pos:column="30">r<pos:position pos:line="78" pos:column="31"/></name><operator pos:line="78" pos:column="31">-&gt;<pos:position pos:line="78" pos:column="36"/></operator><name pos:line="78" pos:column="33">pool<pos:position pos:line="78" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="39">err2<pos:position pos:line="78" pos:column="43"/></name><operator pos:line="78" pos:column="43">-&gt;<pos:position pos:line="78" pos:column="48"/></operator><name pos:line="78" pos:column="45">status<pos:position pos:line="78" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="53">0<pos:position pos:line="78" pos:column="54"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="79" pos:column="30">"The MKCOL was successful, but there "<pos:position pos:line="79" pos:column="68"/></literal>
                             <literal type="string" pos:line="80" pos:column="30">"was a problem automatically checking in "<pos:position pos:line="80" pos:column="72"/></literal>
                             <literal type="string" pos:line="81" pos:column="30">"the parent collection."<pos:position pos:line="81" pos:column="54"/></literal></expr></argument>,
                             <argument><expr><name pos:line="82" pos:column="30">err2<pos:position pos:line="82" pos:column="34"/></name></expr></argument>)<pos:position pos:line="82" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">dav_log_err<pos:position pos:line="83" pos:column="20"/></name><argument_list pos:line="83" pos:column="20">(<argument><expr><name pos:line="83" pos:column="21">r<pos:position pos:line="83" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="24">err<pos:position pos:line="83" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="29">APLOG_WARNING<pos:position pos:line="83" pos:column="42"/></name></expr></argument>)<pos:position pos:line="83" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>

    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><name pos:line="86" pos:column="9">locks_hooks<pos:position pos:line="86" pos:column="20"/></name> <operator pos:line="86" pos:column="21">!=<pos:position pos:line="86" pos:column="23"/></operator> <name pos:line="86" pos:column="24">NULL<pos:position pos:line="86" pos:column="28"/></name></expr>)<pos:position pos:line="86" pos:column="29"/></condition><then pos:line="86" pos:column="29"> <block pos:line="86" pos:column="30">{
        <decl_stmt><decl><type><name pos:line="87" pos:column="9">dav_lockdb<pos:position pos:line="87" pos:column="19"/></name> <modifier pos:line="87" pos:column="20">*<pos:position pos:line="87" pos:column="21"/></modifier></type><name pos:line="87" pos:column="21">lockdb<pos:position pos:line="87" pos:column="27"/></name></decl>;<pos:position pos:line="87" pos:column="28"/></decl_stmt>

        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><operator pos:line="89" pos:column="13">(<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="14">err<pos:position pos:line="89" pos:column="17"/></name> <operator pos:line="89" pos:column="18">=<pos:position pos:line="89" pos:column="19"/></operator> <call pos:line="89" pos:column="20">(<modifier pos:line="89" pos:column="21">*<pos:position pos:line="89" pos:column="22"/></modifier><name><name pos:line="89" pos:column="22">locks_hooks<pos:position pos:line="89" pos:column="33"/></name><operator pos:line="89" pos:column="33">-&gt;<pos:position pos:line="89" pos:column="38"/></operator><name pos:line="89" pos:column="35">open_lockdb<pos:position pos:line="89" pos:column="46"/></name></name>)<argument_list pos:line="89" pos:column="47">(<argument><expr><name pos:line="89" pos:column="48">r<pos:position pos:line="89" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="51">0<pos:position pos:line="89" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="54">0<pos:position pos:line="89" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="89" pos:column="57">&amp;<pos:position pos:line="89" pos:column="62"/></operator><name pos:line="89" pos:column="58">lockdb<pos:position pos:line="89" pos:column="64"/></name></expr></argument>)<pos:position pos:line="89" pos:column="65"/></argument_list></call><operator pos:line="89" pos:column="65">)<pos:position pos:line="89" pos:column="66"/></operator> <operator pos:line="89" pos:column="67">!=<pos:position pos:line="89" pos:column="69"/></operator> <name pos:line="89" pos:column="70">NULL<pos:position pos:line="89" pos:column="74"/></name></expr>)<pos:position pos:line="89" pos:column="75"/></condition><then pos:line="89" pos:column="75"> <block pos:line="89" pos:column="76">{
            <comment type="block" pos:line="90" pos:column="13">/* The directory creation was successful, but the locking failed. */</comment>
            <expr_stmt><expr><name pos:line="91" pos:column="13">err<pos:position pos:line="91" pos:column="16"/></name> <operator pos:line="91" pos:column="17">=<pos:position pos:line="91" pos:column="18"/></operator> <call><name pos:line="91" pos:column="19">dav_push_error<pos:position pos:line="91" pos:column="33"/></name><argument_list pos:line="91" pos:column="33">(<argument><expr><name><name pos:line="91" pos:column="34">r<pos:position pos:line="91" pos:column="35"/></name><operator pos:line="91" pos:column="35">-&gt;<pos:position pos:line="91" pos:column="40"/></operator><name pos:line="91" pos:column="37">pool<pos:position pos:line="91" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="43">err<pos:position pos:line="91" pos:column="46"/></name><operator pos:line="91" pos:column="46">-&gt;<pos:position pos:line="91" pos:column="51"/></operator><name pos:line="91" pos:column="48">status<pos:position pos:line="91" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="56">0<pos:position pos:line="91" pos:column="57"/></literal></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="92" pos:column="34">"The MKCOL was successful, but there "<pos:position pos:line="92" pos:column="72"/></literal>
                                 <literal type="string" pos:line="93" pos:column="34">"was a problem opening the lock database "<pos:position pos:line="93" pos:column="76"/></literal>
                                 <literal type="string" pos:line="94" pos:column="34">"which prevents inheriting locks from the "<pos:position pos:line="94" pos:column="77"/></literal>
                                 <literal type="string" pos:line="95" pos:column="34">"parent resources."<pos:position pos:line="95" pos:column="53"/></literal></expr></argument>,
                                 <argument><expr><name pos:line="96" pos:column="34">err<pos:position pos:line="96" pos:column="37"/></name></expr></argument>)<pos:position pos:line="96" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="39"/></expr_stmt>
            <return pos:line="97" pos:column="13">return <expr><call><name pos:line="97" pos:column="20">dav_handle_err<pos:position pos:line="97" pos:column="34"/></name><argument_list pos:line="97" pos:column="34">(<argument><expr><name pos:line="97" pos:column="35">r<pos:position pos:line="97" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="38">err<pos:position pos:line="97" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="43">NULL<pos:position pos:line="97" pos:column="47"/></name></expr></argument>)<pos:position pos:line="97" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="49"/></return>
        }<pos:position pos:line="98" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="100" pos:column="9">/* notify lock system that we have created/replaced a resource */</comment>
        <expr_stmt><expr><name pos:line="101" pos:column="9">err<pos:position pos:line="101" pos:column="12"/></name> <operator pos:line="101" pos:column="13">=<pos:position pos:line="101" pos:column="14"/></operator> <call><name pos:line="101" pos:column="15">dav_notify_created<pos:position pos:line="101" pos:column="33"/></name><argument_list pos:line="101" pos:column="33">(<argument><expr><name pos:line="101" pos:column="34">r<pos:position pos:line="101" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="37">lockdb<pos:position pos:line="101" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="45">resource<pos:position pos:line="101" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="55">resource_state<pos:position pos:line="101" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="71">0<pos:position pos:line="101" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="74"/></expr_stmt>

        <expr_stmt><expr><call pos:line="103" pos:column="9">(<modifier pos:line="103" pos:column="10">*<pos:position pos:line="103" pos:column="11"/></modifier><name><name pos:line="103" pos:column="11">locks_hooks<pos:position pos:line="103" pos:column="22"/></name><operator pos:line="103" pos:column="22">-&gt;<pos:position pos:line="103" pos:column="27"/></operator><name pos:line="103" pos:column="24">close_lockdb<pos:position pos:line="103" pos:column="36"/></name></name>)<argument_list pos:line="103" pos:column="37">(<argument><expr><name pos:line="103" pos:column="38">lockdb<pos:position pos:line="103" pos:column="44"/></name></expr></argument>)<pos:position pos:line="103" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="46"/></expr_stmt>

        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">err<pos:position pos:line="105" pos:column="16"/></name> <operator pos:line="105" pos:column="17">!=<pos:position pos:line="105" pos:column="19"/></operator> <name pos:line="105" pos:column="20">NULL<pos:position pos:line="105" pos:column="24"/></name></expr>)<pos:position pos:line="105" pos:column="25"/></condition><then pos:line="105" pos:column="25"> <block pos:line="105" pos:column="26">{
            <comment type="block" pos:line="106" pos:column="13">/* The dir creation was successful, but the locking failed. */</comment>
            <expr_stmt><expr><name pos:line="107" pos:column="13">err<pos:position pos:line="107" pos:column="16"/></name> <operator pos:line="107" pos:column="17">=<pos:position pos:line="107" pos:column="18"/></operator> <call><name pos:line="107" pos:column="19">dav_push_error<pos:position pos:line="107" pos:column="33"/></name><argument_list pos:line="107" pos:column="33">(<argument><expr><name><name pos:line="107" pos:column="34">r<pos:position pos:line="107" pos:column="35"/></name><operator pos:line="107" pos:column="35">-&gt;<pos:position pos:line="107" pos:column="40"/></operator><name pos:line="107" pos:column="37">pool<pos:position pos:line="107" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="43">err<pos:position pos:line="107" pos:column="46"/></name><operator pos:line="107" pos:column="46">-&gt;<pos:position pos:line="107" pos:column="51"/></operator><name pos:line="107" pos:column="48">status<pos:position pos:line="107" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="56">0<pos:position pos:line="107" pos:column="57"/></literal></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="108" pos:column="34">"The MKCOL was successful, but there "<pos:position pos:line="108" pos:column="72"/></literal>
                                 <literal type="string" pos:line="109" pos:column="34">"was a problem updating its lock "<pos:position pos:line="109" pos:column="68"/></literal>
                                 <literal type="string" pos:line="110" pos:column="34">"information."<pos:position pos:line="110" pos:column="48"/></literal></expr></argument>,
                                 <argument><expr><name pos:line="111" pos:column="34">err<pos:position pos:line="111" pos:column="37"/></name></expr></argument>)<pos:position pos:line="111" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="39"/></expr_stmt>
            <return pos:line="112" pos:column="13">return <expr><call><name pos:line="112" pos:column="20">dav_handle_err<pos:position pos:line="112" pos:column="34"/></name><argument_list pos:line="112" pos:column="34">(<argument><expr><name pos:line="112" pos:column="35">r<pos:position pos:line="112" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="38">err<pos:position pos:line="112" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="43">NULL<pos:position pos:line="112" pos:column="47"/></name></expr></argument>)<pos:position pos:line="112" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="49"/></return>
        }<pos:position pos:line="113" pos:column="10"/></block></then></if>
    }<pos:position pos:line="114" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="116" pos:column="5">/* return an appropriate response (HTTP_CREATED) */</comment>
    <return pos:line="117" pos:column="5">return <expr><call><name pos:line="117" pos:column="12">dav_created<pos:position pos:line="117" pos:column="23"/></name><argument_list pos:line="117" pos:column="23">(<argument><expr><name pos:line="117" pos:column="24">r<pos:position pos:line="117" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="27">NULL<pos:position pos:line="117" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="33">"Collection"<pos:position pos:line="117" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="47">0<pos:position pos:line="117" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="50"/></return>
}<pos:position pos:line="118" pos:column="2"/></block></function></unit>

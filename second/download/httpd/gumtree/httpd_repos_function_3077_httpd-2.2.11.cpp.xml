<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3077_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dtdDestroy<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">DTD<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">p<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">XML_Parser<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">parser<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">HASH_TABLE_ITER<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">iter<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">hashTableIterInit<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><operator pos:line="4" pos:column="21">&amp;<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="22">iter<pos:position pos:line="4" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="28">&amp;<pos:position pos:line="4" pos:column="33"/></operator><operator pos:line="4" pos:column="29">(<pos:position pos:line="4" pos:column="30"/></operator><name><name pos:line="4" pos:column="30">p<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">elementTypes<pos:position pos:line="4" pos:column="45"/></name></name><operator pos:line="4" pos:column="45">)<pos:position pos:line="4" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="48"/></expr_stmt>
  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init pos:line="5" pos:column="8">;<pos:position pos:line="5" pos:column="9"/></init><condition pos:line="5" pos:column="9">;<pos:position pos:line="5" pos:column="10"/></condition><incr/>)<pos:position pos:line="5" pos:column="11"/></control> <block pos:line="5" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ELEMENT_TYPE<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">e<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><operator pos:line="6" pos:column="23">(<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">ELEMENT_TYPE<pos:position pos:line="6" pos:column="36"/></name> <operator pos:line="6" pos:column="37">*<pos:position pos:line="6" pos:column="38"/></operator><operator pos:line="6" pos:column="38">)<pos:position pos:line="6" pos:column="39"/></operator><call><name pos:line="6" pos:column="39">hashTableIterNext<pos:position pos:line="6" pos:column="56"/></name><argument_list pos:line="6" pos:column="56">(<argument><expr><operator pos:line="6" pos:column="57">&amp;<pos:position pos:line="6" pos:column="62"/></operator><name pos:line="6" pos:column="58">iter<pos:position pos:line="6" pos:column="62"/></name></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="64"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">e<pos:position pos:line="7" pos:column="11"/></name></expr>)<pos:position pos:line="7" pos:column="12"/></condition><then pos:line="7" pos:column="12">
      <block type="pseudo"><break pos:line="8" pos:column="7">break;<pos:position pos:line="8" pos:column="13"/></break></block></then></if>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">e<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">allocDefaultAtts<pos:position pos:line="9" pos:column="28"/></name></name> <operator pos:line="9" pos:column="29">!=<pos:position pos:line="9" pos:column="31"/></operator> <literal type="number" pos:line="9" pos:column="32">0<pos:position pos:line="9" pos:column="33"/></literal></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="7">FREE<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name><name pos:line="10" pos:column="12">e<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">defaultAtts<pos:position pos:line="10" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt></block></then></if>
  }<pos:position pos:line="11" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">hashTableDestroy<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><operator pos:line="12" pos:column="20">&amp;<pos:position pos:line="12" pos:column="25"/></operator><operator pos:line="12" pos:column="21">(<pos:position pos:line="12" pos:column="22"/></operator><name><name pos:line="12" pos:column="22">p<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">generalEntities<pos:position pos:line="12" pos:column="40"/></name></name><operator pos:line="12" pos:column="40">)<pos:position pos:line="12" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">XML_DTD<pos:position pos:line="13" pos:column="15"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">hashTableDestroy<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><operator pos:line="14" pos:column="20">&amp;<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="21">(<pos:position pos:line="14" pos:column="22"/></operator><name><name pos:line="14" pos:column="22">p<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">paramEntities<pos:position pos:line="14" pos:column="38"/></name></name><operator pos:line="14" pos:column="38">)<pos:position pos:line="14" pos:column="39"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="15" pos:column="8">/* XML_DTD */</comment>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">hashTableDestroy<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><operator pos:line="16" pos:column="20">&amp;<pos:position pos:line="16" pos:column="25"/></operator><operator pos:line="16" pos:column="21">(<pos:position pos:line="16" pos:column="22"/></operator><name><name pos:line="16" pos:column="22">p<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">-&gt;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="25">elementTypes<pos:position pos:line="16" pos:column="37"/></name></name><operator pos:line="16" pos:column="37">)<pos:position pos:line="16" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">hashTableDestroy<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><operator pos:line="17" pos:column="20">&amp;<pos:position pos:line="17" pos:column="25"/></operator><operator pos:line="17" pos:column="21">(<pos:position pos:line="17" pos:column="22"/></operator><name><name pos:line="17" pos:column="22">p<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">-&gt;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="25">attributeIds<pos:position pos:line="17" pos:column="37"/></name></name><operator pos:line="17" pos:column="37">)<pos:position pos:line="17" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">hashTableDestroy<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><operator pos:line="18" pos:column="20">&amp;<pos:position pos:line="18" pos:column="25"/></operator><operator pos:line="18" pos:column="21">(<pos:position pos:line="18" pos:column="22"/></operator><name><name pos:line="18" pos:column="22">p<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">prefixes<pos:position pos:line="18" pos:column="33"/></name></name><operator pos:line="18" pos:column="33">)<pos:position pos:line="18" pos:column="34"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">poolDestroy<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><operator pos:line="19" pos:column="15">&amp;<pos:position pos:line="19" pos:column="20"/></operator><operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><name><name pos:line="19" pos:column="17">p<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">pool<pos:position pos:line="19" pos:column="24"/></name></name><operator pos:line="19" pos:column="24">)<pos:position pos:line="19" pos:column="25"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name><name pos:line="20" pos:column="7">p<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">-&gt;<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="10">scaffIndex<pos:position pos:line="20" pos:column="20"/></name></name></expr>)<pos:position pos:line="20" pos:column="21"/></condition><then pos:line="20" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="5">FREE<pos:position pos:line="21" pos:column="9"/></name><argument_list pos:line="21" pos:column="9">(<argument><expr><name><name pos:line="21" pos:column="10">p<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">scaffIndex<pos:position pos:line="21" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt></block></then></if>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name><name pos:line="22" pos:column="7">p<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">-&gt;<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="10">scaffold<pos:position pos:line="22" pos:column="18"/></name></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="5">FREE<pos:position pos:line="23" pos:column="9"/></name><argument_list pos:line="23" pos:column="9">(<argument><expr><name><name pos:line="23" pos:column="10">p<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">scaffold<pos:position pos:line="23" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt></block></then></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

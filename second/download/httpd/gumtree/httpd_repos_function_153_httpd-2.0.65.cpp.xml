<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_153_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">bucketeer_out_filter<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">ap_filter_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">f<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">apr_bucket_brigade<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">bb<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_bucket<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">e<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">request_rec<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">r<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name><name pos:line="5" pos:column="22">f<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">r<pos:position pos:line="5" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">bucketeer_ctx_t<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">ctx<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name><name pos:line="6" pos:column="28">f<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">ctx<pos:position pos:line="6" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">bucketeer_filter_config_t<pos:position pos:line="7" pos:column="30"/></name> <modifier pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></modifier></type><name pos:line="7" pos:column="32">c<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">c<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">ap_get_module_config<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name><name pos:line="9" pos:column="30">r<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">server<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">module_config<pos:position pos:line="9" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="56">&amp;<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="57">bucketeer_module<pos:position pos:line="9" pos:column="73"/></name></expr></argument>)<pos:position pos:line="9" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="75"/></expr_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* If have a context, it means we've done this before successfully. */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">ctx<pos:position pos:line="12" pos:column="13"/></name></expr>)<pos:position pos:line="12" pos:column="14"/></condition><then pos:line="12" pos:column="14"> <block pos:line="12" pos:column="15">{  
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name><name pos:line="13" pos:column="14">r<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">content_type<pos:position pos:line="13" pos:column="29"/></name></name> <operator pos:line="13" pos:column="30">||<pos:position pos:line="13" pos:column="32"/></operator> <call><name pos:line="13" pos:column="33">strncmp<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><expr><name><name pos:line="13" pos:column="41">r<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">content_type<pos:position pos:line="13" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="58">"text/"<pos:position pos:line="13" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="67">5<pos:position pos:line="13" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="70"/></condition><then pos:line="13" pos:column="70"> <block pos:line="13" pos:column="71">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">ap_remove_output_filter<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">f<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
            <return pos:line="15" pos:column="13">return <expr><call><name pos:line="15" pos:column="20">ap_pass_brigade<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name><name pos:line="15" pos:column="36">f<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">-&gt;<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="39">next<pos:position pos:line="15" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="45">bb<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></return>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="18" pos:column="9">/* We're cool with filtering this. */</comment>
        <expr_stmt><expr><name pos:line="19" pos:column="9">ctx<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name><name pos:line="19" pos:column="15">f<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">ctx<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <call><name pos:line="19" pos:column="24">apr_pcalloc<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name><name pos:line="19" pos:column="36">f<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">r<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">-&gt;<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="42">pool<pos:position pos:line="19" pos:column="46"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="48">sizeof<argument_list pos:line="19" pos:column="54">(<argument><expr><operator pos:line="19" pos:column="55">*<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="56">ctx<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">ctx<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">bb<pos:position pos:line="20" pos:column="16"/></name></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <call><name pos:line="20" pos:column="19">apr_brigade_create<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name><name pos:line="20" pos:column="38">f<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">r<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">pool<pos:position pos:line="20" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="50">f<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">-&gt;<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="53">c<pos:position pos:line="20" pos:column="54"/></name><operator pos:line="20" pos:column="54">-&gt;<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="56">bucket_alloc<pos:position pos:line="20" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="70"/></expr_stmt> 
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">apr_table_unset<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name><name pos:line="21" pos:column="25">f<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">r<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">headers_out<pos:position pos:line="21" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="44">"Content-Length"<pos:position pos:line="21" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <macro><name pos:line="24" pos:column="5">APR_BRIGADE_FOREACH<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument pos:line="24" pos:column="25">e<pos:position pos:line="24" pos:column="26"/></argument>, <argument pos:line="24" pos:column="28">bb<pos:position pos:line="24" pos:column="30"/></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></macro> <block pos:line="24" pos:column="32">{
        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">const<pos:position pos:line="25" pos:column="14"/></specifier> <name pos:line="25" pos:column="15">char<pos:position pos:line="25" pos:column="19"/></name> <modifier pos:line="25" pos:column="20">*<pos:position pos:line="25" pos:column="21"/></modifier></type><name pos:line="25" pos:column="21">data<pos:position pos:line="25" pos:column="25"/></name></decl>;<pos:position pos:line="25" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">apr_size_t<pos:position pos:line="26" pos:column="19"/></name></type> <name pos:line="26" pos:column="20">len<pos:position pos:line="26" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="26" pos:column="25">i<pos:position pos:line="26" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="26" pos:column="28">lastpos<pos:position pos:line="26" pos:column="35"/></name></decl>;<pos:position pos:line="26" pos:column="36"/></decl_stmt>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">e<pos:position pos:line="28" pos:column="32"/></name></expr></argument>)<pos:position pos:line="28" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34"> <block pos:line="28" pos:column="35">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">e<pos:position pos:line="29" pos:column="32"/></name></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="30" pos:column="36"/></name><argument_list pos:line="30" pos:column="36">(<argument><expr><name><name pos:line="30" pos:column="37">ctx<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">bb<pos:position pos:line="30" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">e<pos:position pos:line="30" pos:column="47"/></name></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt>

            <comment type="block" pos:line="32" pos:column="13">/* Okay, we've seen the EOS.
             * Time to pass it along down the chain.
             */</comment>
            <return pos:line="35" pos:column="13">return <expr><call><name pos:line="35" pos:column="20">ap_pass_brigade<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name><name pos:line="35" pos:column="36">f<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-&gt;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="39">next<pos:position pos:line="35" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="45">ctx<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">-&gt;<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="50">bb<pos:position pos:line="35" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="54"/></return>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name pos:line="38" pos:column="13">APR_BUCKET_IS_FLUSH<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">e<pos:position pos:line="38" pos:column="34"/></name></expr></argument>)<pos:position pos:line="38" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="36"/></condition><then pos:line="38" pos:column="36"> <block pos:line="38" pos:column="37">{     
            <comment type="block" pos:line="39" pos:column="13">/*
             * Ignore flush buckets for the moment.. 
             * we decide what to stream
             */</comment>
            <continue pos:line="43" pos:column="13">continue;<pos:position pos:line="43" pos:column="22"/></continue>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>

        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><call><name pos:line="46" pos:column="13">APR_BUCKET_IS_METADATA<pos:position pos:line="46" pos:column="35"/></name><argument_list pos:line="46" pos:column="35">(<argument><expr><name pos:line="46" pos:column="36">e<pos:position pos:line="46" pos:column="37"/></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="39"/></condition><then pos:line="46" pos:column="39"> <block pos:line="46" pos:column="40">{
            <comment type="block" pos:line="47" pos:column="13">/* metadata bucket */</comment>
            <decl_stmt><decl><type><name pos:line="48" pos:column="13">apr_bucket<pos:position pos:line="48" pos:column="23"/></name> <modifier pos:line="48" pos:column="24">*<pos:position pos:line="48" pos:column="25"/></modifier></type><name pos:line="48" pos:column="25">cpy<pos:position pos:line="48" pos:column="28"/></name></decl>;<pos:position pos:line="48" pos:column="29"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">apr_bucket_copy<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><name pos:line="49" pos:column="29">e<pos:position pos:line="49" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="32">&amp;<pos:position pos:line="49" pos:column="37"/></operator><name pos:line="49" pos:column="33">cpy<pos:position pos:line="49" pos:column="36"/></name></expr></argument>)<pos:position pos:line="49" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><name><name pos:line="50" pos:column="37">ctx<pos:position pos:line="50" pos:column="40"/></name><operator pos:line="50" pos:column="40">-&gt;<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="42">bb<pos:position pos:line="50" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="46">cpy<pos:position pos:line="50" pos:column="49"/></name></expr></argument>)<pos:position pos:line="50" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="51"/></expr_stmt>
            <continue pos:line="51" pos:column="13">continue;<pos:position pos:line="51" pos:column="22"/></continue>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="54" pos:column="9">/* read */</comment>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">apr_bucket_read<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><name pos:line="55" pos:column="25">e<pos:position pos:line="55" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="28">&amp;<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="29">data<pos:position pos:line="55" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="35">&amp;<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="36">len<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="41">APR_BLOCK_READ<pos:position pos:line="55" pos:column="55"/></name></expr></argument>)<pos:position pos:line="55" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="57"/></expr_stmt>

        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">len<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">&gt;<pos:position pos:line="57" pos:column="21"/></operator> <literal type="number" pos:line="57" pos:column="19">0<pos:position pos:line="57" pos:column="20"/></literal></expr>)<pos:position pos:line="57" pos:column="21"/></condition><then pos:line="57" pos:column="21"> <block pos:line="57" pos:column="22">{
            <expr_stmt><expr><name pos:line="58" pos:column="13">lastpos<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">=<pos:position pos:line="58" pos:column="22"/></operator> <literal type="number" pos:line="58" pos:column="23">0<pos:position pos:line="58" pos:column="24"/></literal></expr>;<pos:position pos:line="58" pos:column="25"/></expr_stmt>
            <for pos:line="59" pos:column="13">for <control pos:line="59" pos:column="17">(<init><expr><name pos:line="59" pos:column="18">i<pos:position pos:line="59" pos:column="19"/></name> <operator pos:line="59" pos:column="20">=<pos:position pos:line="59" pos:column="21"/></operator> <literal type="number" pos:line="59" pos:column="22">0<pos:position pos:line="59" pos:column="23"/></literal></expr>;<pos:position pos:line="59" pos:column="24"/></init> <condition><expr><name pos:line="59" pos:column="25">i<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">&lt;<pos:position pos:line="59" pos:column="31"/></operator> <name pos:line="59" pos:column="29">len<pos:position pos:line="59" pos:column="32"/></name></expr>;<pos:position pos:line="59" pos:column="33"/></condition> <incr><expr><name pos:line="59" pos:column="34">i<pos:position pos:line="59" pos:column="35"/></name><operator pos:line="59" pos:column="35">++<pos:position pos:line="59" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="59" pos:column="38"/></control> <block pos:line="59" pos:column="39">{
                <if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name><name pos:line="60" pos:column="21">data<pos:position pos:line="60" pos:column="25"/></name><index pos:line="60" pos:column="25">[<expr><name pos:line="60" pos:column="26">i<pos:position pos:line="60" pos:column="27"/></name></expr>]<pos:position pos:line="60" pos:column="28"/></index></name> <operator pos:line="60" pos:column="29">==<pos:position pos:line="60" pos:column="31"/></operator> <name><name pos:line="60" pos:column="32">c<pos:position pos:line="60" pos:column="33"/></name><operator pos:line="60" pos:column="33">-&gt;<pos:position pos:line="60" pos:column="38"/></operator><name pos:line="60" pos:column="35">flushdelimiter<pos:position pos:line="60" pos:column="49"/></name></name> <operator pos:line="60" pos:column="50">||<pos:position pos:line="60" pos:column="52"/></operator>
                    <name><name pos:line="61" pos:column="21">data<pos:position pos:line="61" pos:column="25"/></name><index pos:line="61" pos:column="25">[<expr><name pos:line="61" pos:column="26">i<pos:position pos:line="61" pos:column="27"/></name></expr>]<pos:position pos:line="61" pos:column="28"/></index></name> <operator pos:line="61" pos:column="29">==<pos:position pos:line="61" pos:column="31"/></operator> <name><name pos:line="61" pos:column="32">c<pos:position pos:line="61" pos:column="33"/></name><operator pos:line="61" pos:column="33">-&gt;<pos:position pos:line="61" pos:column="38"/></operator><name pos:line="61" pos:column="35">bucketdelimiter<pos:position pos:line="61" pos:column="50"/></name></name> <operator pos:line="61" pos:column="51">||<pos:position pos:line="61" pos:column="53"/></operator>
                    <name><name pos:line="62" pos:column="21">data<pos:position pos:line="62" pos:column="25"/></name><index pos:line="62" pos:column="25">[<expr><name pos:line="62" pos:column="26">i<pos:position pos:line="62" pos:column="27"/></name></expr>]<pos:position pos:line="62" pos:column="28"/></index></name> <operator pos:line="62" pos:column="29">==<pos:position pos:line="62" pos:column="31"/></operator> <name><name pos:line="62" pos:column="32">c<pos:position pos:line="62" pos:column="33"/></name><operator pos:line="62" pos:column="33">-&gt;<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="35">passdelimiter<pos:position pos:line="62" pos:column="48"/></name></name></expr>)<pos:position pos:line="62" pos:column="49"/></condition><then pos:line="62" pos:column="49"> <block pos:line="62" pos:column="50">{
                    <decl_stmt><decl><type><name pos:line="63" pos:column="21">apr_bucket<pos:position pos:line="63" pos:column="31"/></name> <modifier pos:line="63" pos:column="32">*<pos:position pos:line="63" pos:column="33"/></modifier></type><name pos:line="63" pos:column="33">p<pos:position pos:line="63" pos:column="34"/></name></decl>;<pos:position pos:line="63" pos:column="35"/></decl_stmt>
                    <if pos:line="64" pos:column="21">if <condition pos:line="64" pos:column="24">(<expr><name pos:line="64" pos:column="25">i<pos:position pos:line="64" pos:column="26"/></name> <operator pos:line="64" pos:column="27">-<pos:position pos:line="64" pos:column="28"/></operator> <name pos:line="64" pos:column="29">lastpos<pos:position pos:line="64" pos:column="36"/></name> <operator pos:line="64" pos:column="37">&gt;<pos:position pos:line="64" pos:column="41"/></operator> <literal type="number" pos:line="64" pos:column="39">0<pos:position pos:line="64" pos:column="40"/></literal></expr>)<pos:position pos:line="64" pos:column="41"/></condition><then pos:line="64" pos:column="41"> <block pos:line="64" pos:column="42">{
                        <expr_stmt><expr><name pos:line="65" pos:column="25">p<pos:position pos:line="65" pos:column="26"/></name> <operator pos:line="65" pos:column="27">=<pos:position pos:line="65" pos:column="28"/></operator> <call><name pos:line="65" pos:column="29">apr_bucket_pool_create<pos:position pos:line="65" pos:column="51"/></name><argument_list pos:line="65" pos:column="51">(<argument><expr><call><name pos:line="65" pos:column="52">apr_pmemdup<pos:position pos:line="65" pos:column="63"/></name><argument_list pos:line="65" pos:column="63">(<argument><expr><name><name pos:line="65" pos:column="64">f<pos:position pos:line="65" pos:column="65"/></name><operator pos:line="65" pos:column="65">-&gt;<pos:position pos:line="65" pos:column="70"/></operator><name pos:line="65" pos:column="67">r<pos:position pos:line="65" pos:column="68"/></name><operator pos:line="65" pos:column="68">-&gt;<pos:position pos:line="65" pos:column="73"/></operator><name pos:line="65" pos:column="70">pool<pos:position pos:line="65" pos:column="74"/></name></name></expr></argument>,
                                                               <argument><expr><operator pos:line="66" pos:column="64">&amp;<pos:position pos:line="66" pos:column="69"/></operator><name><name pos:line="66" pos:column="65">data<pos:position pos:line="66" pos:column="69"/></name><index pos:line="66" pos:column="69">[<expr><name pos:line="66" pos:column="70">lastpos<pos:position pos:line="66" pos:column="77"/></name></expr>]<pos:position pos:line="66" pos:column="78"/></index></name></expr></argument>,
                                                               <argument><expr><name pos:line="67" pos:column="64">i<pos:position pos:line="67" pos:column="65"/></name> <operator pos:line="67" pos:column="66">-<pos:position pos:line="67" pos:column="67"/></operator> <name pos:line="67" pos:column="68">lastpos<pos:position pos:line="67" pos:column="75"/></name></expr></argument>)<pos:position pos:line="67" pos:column="76"/></argument_list></call></expr></argument>,
                                                    <argument><expr><name pos:line="68" pos:column="53">i<pos:position pos:line="68" pos:column="54"/></name> <operator pos:line="68" pos:column="55">-<pos:position pos:line="68" pos:column="56"/></operator> <name pos:line="68" pos:column="57">lastpos<pos:position pos:line="68" pos:column="64"/></name></expr></argument>,
                                                    <argument><expr><name><name pos:line="69" pos:column="53">f<pos:position pos:line="69" pos:column="54"/></name><operator pos:line="69" pos:column="54">-&gt;<pos:position pos:line="69" pos:column="59"/></operator><name pos:line="69" pos:column="56">r<pos:position pos:line="69" pos:column="57"/></name><operator pos:line="69" pos:column="57">-&gt;<pos:position pos:line="69" pos:column="62"/></operator><name pos:line="69" pos:column="59">pool<pos:position pos:line="69" pos:column="63"/></name></name></expr></argument>,
                                                    <argument><expr><name><name pos:line="70" pos:column="53">f<pos:position pos:line="70" pos:column="54"/></name><operator pos:line="70" pos:column="54">-&gt;<pos:position pos:line="70" pos:column="59"/></operator><name pos:line="70" pos:column="56">c<pos:position pos:line="70" pos:column="57"/></name><operator pos:line="70" pos:column="57">-&gt;<pos:position pos:line="70" pos:column="62"/></operator><name pos:line="70" pos:column="59">bucket_alloc<pos:position pos:line="70" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="73"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="71" pos:column="25">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="71" pos:column="48"/></name><argument_list pos:line="71" pos:column="48">(<argument><expr><name><name pos:line="71" pos:column="49">ctx<pos:position pos:line="71" pos:column="52"/></name><operator pos:line="71" pos:column="52">-&gt;<pos:position pos:line="71" pos:column="57"/></operator><name pos:line="71" pos:column="54">bb<pos:position pos:line="71" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="58">p<pos:position pos:line="71" pos:column="59"/></name></expr></argument>)<pos:position pos:line="71" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="61"/></expr_stmt>
                    }<pos:position pos:line="72" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name pos:line="73" pos:column="21">lastpos<pos:position pos:line="73" pos:column="28"/></name> <operator pos:line="73" pos:column="29">=<pos:position pos:line="73" pos:column="30"/></operator> <name pos:line="73" pos:column="31">i<pos:position pos:line="73" pos:column="32"/></name> <operator pos:line="73" pos:column="33">+<pos:position pos:line="73" pos:column="34"/></operator> <literal type="number" pos:line="73" pos:column="35">1<pos:position pos:line="73" pos:column="36"/></literal></expr>;<pos:position pos:line="73" pos:column="37"/></expr_stmt>
                    <if pos:line="74" pos:column="21">if <condition pos:line="74" pos:column="24">(<expr><name><name pos:line="74" pos:column="25">data<pos:position pos:line="74" pos:column="29"/></name><index pos:line="74" pos:column="29">[<expr><name pos:line="74" pos:column="30">i<pos:position pos:line="74" pos:column="31"/></name></expr>]<pos:position pos:line="74" pos:column="32"/></index></name> <operator pos:line="74" pos:column="33">==<pos:position pos:line="74" pos:column="35"/></operator> <name><name pos:line="74" pos:column="36">c<pos:position pos:line="74" pos:column="37"/></name><operator pos:line="74" pos:column="37">-&gt;<pos:position pos:line="74" pos:column="42"/></operator><name pos:line="74" pos:column="39">flushdelimiter<pos:position pos:line="74" pos:column="53"/></name></name></expr>)<pos:position pos:line="74" pos:column="54"/></condition><then pos:line="74" pos:column="54"> <block pos:line="74" pos:column="55">{
                        <expr_stmt><expr><name pos:line="75" pos:column="25">p<pos:position pos:line="75" pos:column="26"/></name> <operator pos:line="75" pos:column="27">=<pos:position pos:line="75" pos:column="28"/></operator> <call><name pos:line="75" pos:column="29">apr_bucket_flush_create<pos:position pos:line="75" pos:column="52"/></name><argument_list pos:line="75" pos:column="52">(<argument><expr><name><name pos:line="75" pos:column="53">f<pos:position pos:line="75" pos:column="54"/></name><operator pos:line="75" pos:column="54">-&gt;<pos:position pos:line="75" pos:column="59"/></operator><name pos:line="75" pos:column="56">c<pos:position pos:line="75" pos:column="57"/></name><operator pos:line="75" pos:column="57">-&gt;<pos:position pos:line="75" pos:column="62"/></operator><name pos:line="75" pos:column="59">bucket_alloc<pos:position pos:line="75" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="73"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="76" pos:column="25">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="76" pos:column="48"/></name><argument_list pos:line="76" pos:column="48">(<argument><expr><name><name pos:line="76" pos:column="49">ctx<pos:position pos:line="76" pos:column="52"/></name><operator pos:line="76" pos:column="52">-&gt;<pos:position pos:line="76" pos:column="57"/></operator><name pos:line="76" pos:column="54">bb<pos:position pos:line="76" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="58">p<pos:position pos:line="76" pos:column="59"/></name></expr></argument>)<pos:position pos:line="76" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="61"/></expr_stmt>
                    }<pos:position pos:line="77" pos:column="22"/></block></then></if>
                    <if pos:line="78" pos:column="21">if <condition pos:line="78" pos:column="24">(<expr><name><name pos:line="78" pos:column="25">data<pos:position pos:line="78" pos:column="29"/></name><index pos:line="78" pos:column="29">[<expr><name pos:line="78" pos:column="30">i<pos:position pos:line="78" pos:column="31"/></name></expr>]<pos:position pos:line="78" pos:column="32"/></index></name> <operator pos:line="78" pos:column="33">==<pos:position pos:line="78" pos:column="35"/></operator> <name><name pos:line="78" pos:column="36">c<pos:position pos:line="78" pos:column="37"/></name><operator pos:line="78" pos:column="37">-&gt;<pos:position pos:line="78" pos:column="42"/></operator><name pos:line="78" pos:column="39">flushdelimiter<pos:position pos:line="78" pos:column="53"/></name></name> <operator pos:line="78" pos:column="54">||<pos:position pos:line="78" pos:column="56"/></operator>
                        <name><name pos:line="79" pos:column="25">data<pos:position pos:line="79" pos:column="29"/></name><index pos:line="79" pos:column="29">[<expr><name pos:line="79" pos:column="30">i<pos:position pos:line="79" pos:column="31"/></name></expr>]<pos:position pos:line="79" pos:column="32"/></index></name> <operator pos:line="79" pos:column="33">==<pos:position pos:line="79" pos:column="35"/></operator> <name><name pos:line="79" pos:column="36">c<pos:position pos:line="79" pos:column="37"/></name><operator pos:line="79" pos:column="37">-&gt;<pos:position pos:line="79" pos:column="42"/></operator><name pos:line="79" pos:column="39">passdelimiter<pos:position pos:line="79" pos:column="52"/></name></name></expr>)<pos:position pos:line="79" pos:column="53"/></condition><then pos:line="79" pos:column="53"> <block pos:line="79" pos:column="54">{
                        <expr_stmt><expr><call><name pos:line="80" pos:column="25">ap_pass_brigade<pos:position pos:line="80" pos:column="40"/></name><argument_list pos:line="80" pos:column="40">(<argument><expr><name><name pos:line="80" pos:column="41">f<pos:position pos:line="80" pos:column="42"/></name><operator pos:line="80" pos:column="42">-&gt;<pos:position pos:line="80" pos:column="47"/></operator><name pos:line="80" pos:column="44">next<pos:position pos:line="80" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="50">ctx<pos:position pos:line="80" pos:column="53"/></name><operator pos:line="80" pos:column="53">-&gt;<pos:position pos:line="80" pos:column="58"/></operator><name pos:line="80" pos:column="55">bb<pos:position pos:line="80" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="59"/></expr_stmt>
                       <comment type="block" pos:line="81" pos:column="24">/* apr_brigade_cleanup(ctx-&gt;bb);*/</comment>
                    }<pos:position pos:line="82" pos:column="22"/></block></then></if>
                }<pos:position pos:line="83" pos:column="18"/></block></then></if>                       
            }<pos:position pos:line="84" pos:column="14"/></block></for>
            <comment type="block" pos:line="85" pos:column="13">/* XXX: really should append this to the next 'real' bucket */</comment>
            <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><name pos:line="86" pos:column="17">lastpos<pos:position pos:line="86" pos:column="24"/></name> <operator pos:line="86" pos:column="25">&lt;<pos:position pos:line="86" pos:column="29"/></operator> <name pos:line="86" pos:column="27">i<pos:position pos:line="86" pos:column="28"/></name></expr>)<pos:position pos:line="86" pos:column="29"/></condition><then pos:line="86" pos:column="29"> <block pos:line="86" pos:column="30">{
                <decl_stmt><decl><type><name pos:line="87" pos:column="17">apr_bucket<pos:position pos:line="87" pos:column="27"/></name> <modifier pos:line="87" pos:column="28">*<pos:position pos:line="87" pos:column="29"/></modifier></type><name pos:line="87" pos:column="29">p<pos:position pos:line="87" pos:column="30"/></name></decl>;<pos:position pos:line="87" pos:column="31"/></decl_stmt>
                <expr_stmt><expr><name pos:line="88" pos:column="17">p<pos:position pos:line="88" pos:column="18"/></name> <operator pos:line="88" pos:column="19">=<pos:position pos:line="88" pos:column="20"/></operator> <call><name pos:line="88" pos:column="21">apr_bucket_pool_create<pos:position pos:line="88" pos:column="43"/></name><argument_list pos:line="88" pos:column="43">(<argument><expr><call><name pos:line="88" pos:column="44">apr_pmemdup<pos:position pos:line="88" pos:column="55"/></name><argument_list pos:line="88" pos:column="55">(<argument><expr><name><name pos:line="88" pos:column="56">f<pos:position pos:line="88" pos:column="57"/></name><operator pos:line="88" pos:column="57">-&gt;<pos:position pos:line="88" pos:column="62"/></operator><name pos:line="88" pos:column="59">r<pos:position pos:line="88" pos:column="60"/></name><operator pos:line="88" pos:column="60">-&gt;<pos:position pos:line="88" pos:column="65"/></operator><name pos:line="88" pos:column="62">pool<pos:position pos:line="88" pos:column="66"/></name></name></expr></argument>,
                                                       <argument><expr><operator pos:line="89" pos:column="56">&amp;<pos:position pos:line="89" pos:column="61"/></operator><name><name pos:line="89" pos:column="57">data<pos:position pos:line="89" pos:column="61"/></name><index pos:line="89" pos:column="61">[<expr><name pos:line="89" pos:column="62">lastpos<pos:position pos:line="89" pos:column="69"/></name></expr>]<pos:position pos:line="89" pos:column="70"/></index></name></expr></argument>,
                                                       <argument><expr><name pos:line="90" pos:column="56">i<pos:position pos:line="90" pos:column="57"/></name> <operator pos:line="90" pos:column="58">-<pos:position pos:line="90" pos:column="59"/></operator> <name pos:line="90" pos:column="60">lastpos<pos:position pos:line="90" pos:column="67"/></name></expr></argument>)<pos:position pos:line="90" pos:column="68"/></argument_list></call></expr></argument>,
                                           <argument><expr><name pos:line="91" pos:column="44">i<pos:position pos:line="91" pos:column="45"/></name> <operator pos:line="91" pos:column="46">-<pos:position pos:line="91" pos:column="47"/></operator> <name pos:line="91" pos:column="48">lastpos<pos:position pos:line="91" pos:column="55"/></name></expr></argument>,
                                           <argument><expr><name><name pos:line="92" pos:column="44">f<pos:position pos:line="92" pos:column="45"/></name><operator pos:line="92" pos:column="45">-&gt;<pos:position pos:line="92" pos:column="50"/></operator><name pos:line="92" pos:column="47">r<pos:position pos:line="92" pos:column="48"/></name><operator pos:line="92" pos:column="48">-&gt;<pos:position pos:line="92" pos:column="53"/></operator><name pos:line="92" pos:column="50">pool<pos:position pos:line="92" pos:column="54"/></name></name></expr></argument>,
                                           <argument><expr><name><name pos:line="93" pos:column="44">f<pos:position pos:line="93" pos:column="45"/></name><operator pos:line="93" pos:column="45">-&gt;<pos:position pos:line="93" pos:column="50"/></operator><name pos:line="93" pos:column="47">c<pos:position pos:line="93" pos:column="48"/></name><operator pos:line="93" pos:column="48">-&gt;<pos:position pos:line="93" pos:column="53"/></operator><name pos:line="93" pos:column="50">bucket_alloc<pos:position pos:line="93" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><name pos:line="94" pos:column="17">lastpos<pos:position pos:line="94" pos:column="24"/></name> <operator pos:line="94" pos:column="25">=<pos:position pos:line="94" pos:column="26"/></operator> <name pos:line="94" pos:column="27">i<pos:position pos:line="94" pos:column="28"/></name></expr>;<pos:position pos:line="94" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="95" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="95" pos:column="40"/></name><argument_list pos:line="95" pos:column="40">(<argument><expr><name><name pos:line="95" pos:column="41">ctx<pos:position pos:line="95" pos:column="44"/></name><operator pos:line="95" pos:column="44">-&gt;<pos:position pos:line="95" pos:column="49"/></operator><name pos:line="95" pos:column="46">bb<pos:position pos:line="95" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="50">p<pos:position pos:line="95" pos:column="51"/></name></expr></argument>)<pos:position pos:line="95" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="96" pos:column="14"/></block></then></if>
        }<pos:position pos:line="97" pos:column="10"/></block></then></if>     
    }<pos:position pos:line="98" pos:column="6"/></block>

    <return pos:line="100" pos:column="5">return <expr><name pos:line="100" pos:column="12">APR_SUCCESS<pos:position pos:line="100" pos:column="23"/></name></expr>;<pos:position pos:line="100" pos:column="24"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

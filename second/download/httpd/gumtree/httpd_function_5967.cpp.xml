<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5967.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">h2_alt_svc_handler<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">request_rec<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">r<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">h2_ctx<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">ctx<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">h2_config<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">cfg<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">r<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">connection<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">-&gt;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="24">keepalives<pos:position pos:line="7" pos:column="34"/></name></name> <operator pos:line="7" pos:column="35">&gt;<pos:position pos:line="7" pos:column="39"/></operator> <literal type="number" pos:line="7" pos:column="37">0<pos:position pos:line="7" pos:column="38"/></literal></expr>)<pos:position pos:line="7" pos:column="39"/></condition><then pos:line="7" pos:column="39"> <block pos:line="7" pos:column="40">{
        <comment type="block" pos:line="8" pos:column="9">/* Only announce Alt-Svc on the first response */</comment>
        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">DECLINED<pos:position pos:line="9" pos:column="24"/></name></expr>;<pos:position pos:line="9" pos:column="25"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="12" pos:column="5">ctx<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <call><name pos:line="12" pos:column="11">h2_ctx_rget<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">r<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">h2_ctx_is_active<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">ctx<pos:position pos:line="13" pos:column="29"/></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call> <operator pos:line="13" pos:column="31">||<pos:position pos:line="13" pos:column="33"/></operator> <call><name pos:line="13" pos:column="34">h2_ctx_is_task<pos:position pos:line="13" pos:column="48"/></name><argument_list pos:line="13" pos:column="48">(<argument><expr><name pos:line="13" pos:column="49">ctx<pos:position pos:line="13" pos:column="52"/></name></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="54"/></condition><then pos:line="13" pos:column="54"> <block pos:line="13" pos:column="55">{
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">DECLINED<pos:position pos:line="14" pos:column="24"/></name></expr>;<pos:position pos:line="14" pos:column="25"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="17" pos:column="5">cfg<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name pos:line="17" pos:column="11">h2_config_rget<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">r<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">r<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">hostname<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">&amp;&amp;<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="24">cfg<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">&amp;&amp;<pos:position pos:line="18" pos:column="38"/></operator> <name><name pos:line="18" pos:column="31">cfg<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">-&gt;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="36">alt_svcs<pos:position pos:line="18" pos:column="44"/></name></name> <operator pos:line="18" pos:column="45">&amp;&amp;<pos:position pos:line="18" pos:column="55"/></operator> <name><name pos:line="18" pos:column="48">cfg<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">-&gt;<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="53">alt_svcs<pos:position pos:line="18" pos:column="61"/></name><operator pos:line="18" pos:column="61">-&gt;<pos:position pos:line="18" pos:column="66"/></operator><name pos:line="18" pos:column="63">nelts<pos:position pos:line="18" pos:column="68"/></name></name> <operator pos:line="18" pos:column="69">&gt;<pos:position pos:line="18" pos:column="73"/></operator> <literal type="number" pos:line="18" pos:column="71">0<pos:position pos:line="18" pos:column="72"/></literal></expr>)<pos:position pos:line="18" pos:column="73"/></condition><then pos:line="18" pos:column="73"> <block pos:line="18" pos:column="74">{
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">const<pos:position pos:line="19" pos:column="14"/></specifier> <name pos:line="19" pos:column="15">char<pos:position pos:line="19" pos:column="19"/></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">alt_svc_used<pos:position pos:line="19" pos:column="33"/></name> <init pos:line="19" pos:column="34">= <expr><call><name pos:line="19" pos:column="36">apr_table_get<pos:position pos:line="19" pos:column="49"/></name><argument_list pos:line="19" pos:column="49">(<argument><expr><name><name pos:line="19" pos:column="50">r<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">-&gt;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="53">headers_in<pos:position pos:line="19" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="65">"Alt-Svc-Used"<pos:position pos:line="19" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="81"/></decl_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">alt_svc_used<pos:position pos:line="20" pos:column="26"/></name></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27"> <block pos:line="20" pos:column="28">{
            <comment type="block" pos:line="21" pos:column="13">/* We have alt-svcs defined and client is not already using
             * one, announce the services that were configured and match. 
             * The security of this connection determines if we allow
             * other host names or ports only.
             */</comment>
            <decl_stmt><decl><type><specifier pos:line="26" pos:column="13">const<pos:position pos:line="26" pos:column="18"/></specifier> <name pos:line="26" pos:column="19">char<pos:position pos:line="26" pos:column="23"/></name> <modifier pos:line="26" pos:column="24">*<pos:position pos:line="26" pos:column="25"/></modifier></type><name pos:line="26" pos:column="25">alt_svc<pos:position pos:line="26" pos:column="32"/></name> <init pos:line="26" pos:column="33">= <expr><literal type="string" pos:line="26" pos:column="35">""<pos:position pos:line="26" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="38"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="27" pos:column="13">const<pos:position pos:line="27" pos:column="18"/></specifier> <name pos:line="27" pos:column="19">char<pos:position pos:line="27" pos:column="23"/></name> <modifier pos:line="27" pos:column="24">*<pos:position pos:line="27" pos:column="25"/></modifier></type><name pos:line="27" pos:column="25">svc_ma<pos:position pos:line="27" pos:column="31"/></name> <init pos:line="27" pos:column="32">= <expr><literal type="string" pos:line="27" pos:column="34">""<pos:position pos:line="27" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="37"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="28" pos:column="13">int<pos:position pos:line="28" pos:column="16"/></name></type> <name pos:line="28" pos:column="17">secure<pos:position pos:line="28" pos:column="23"/></name> <init pos:line="28" pos:column="24">= <expr><call><name pos:line="28" pos:column="26">h2_h2_is_tls<pos:position pos:line="28" pos:column="38"/></name><argument_list pos:line="28" pos:column="38">(<argument><expr><name><name pos:line="28" pos:column="39">r<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">-&gt;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="42">connection<pos:position pos:line="28" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="54"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="29" pos:column="13">int<pos:position pos:line="29" pos:column="16"/></name></type> <name pos:line="29" pos:column="17">ma<pos:position pos:line="29" pos:column="19"/></name> <init pos:line="29" pos:column="20">= <expr><call><name pos:line="29" pos:column="22">h2_config_geti<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">cfg<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">H2_CONF_ALT_SVC_MAX_AGE<pos:position pos:line="29" pos:column="65"/></name></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="67"/></decl_stmt>
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><name pos:line="30" pos:column="17">ma<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">&gt;=<pos:position pos:line="30" pos:column="25"/></operator> <literal type="number" pos:line="30" pos:column="23">0<pos:position pos:line="30" pos:column="24"/></literal></expr>)<pos:position pos:line="30" pos:column="25"/></condition><then pos:line="30" pos:column="25"> <block pos:line="30" pos:column="26">{
                <expr_stmt><expr><name pos:line="31" pos:column="17">svc_ma<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <call><name pos:line="31" pos:column="26">apr_psprintf<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">(<argument><expr><name><name pos:line="31" pos:column="39">r<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">-&gt;<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="42">pool<pos:position pos:line="31" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="48">"; ma=%d"<pos:position pos:line="31" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="59">ma<pos:position pos:line="31" pos:column="61"/></name></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="32" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">ap_log_rerror<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name pos:line="33" pos:column="27">APLOG_MARK<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">APLOG_DEBUG<pos:position pos:line="33" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="52">0<pos:position pos:line="33" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="55">r<pos:position pos:line="33" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="34" pos:column="27">"h2_alt_svc: announce %s for %s:%d"<pos:position pos:line="34" pos:column="62"/></literal></expr></argument>, 
                          <argument><expr><operator pos:line="35" pos:column="27">(<pos:position pos:line="35" pos:column="28"/></operator><ternary><condition><expr><name pos:line="35" pos:column="28">secure<pos:position pos:line="35" pos:column="34"/></name></expr>?<pos:position pos:line="35" pos:column="35"/></condition><then pos:line="35" pos:column="35"> <expr><literal type="string" pos:line="35" pos:column="36">"secure"<pos:position pos:line="35" pos:column="44"/></literal></expr> <pos:position pos:line="35" pos:column="45"/></then><else pos:line="35" pos:column="45">: <expr><literal type="string" pos:line="35" pos:column="47">"insecure"<pos:position pos:line="35" pos:column="57"/></literal></expr></else></ternary><operator pos:line="35" pos:column="57">)<pos:position pos:line="35" pos:column="58"/></operator></expr></argument>, 
                          <argument><expr><name><name pos:line="36" pos:column="27">r<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">-&gt;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="30">hostname<pos:position pos:line="36" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="40">(<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="41">int<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">)<pos:position pos:line="36" pos:column="45"/></operator><name><name pos:line="36" pos:column="45">r<pos:position pos:line="36" pos:column="46"/></name><operator pos:line="36" pos:column="46">-&gt;<pos:position pos:line="36" pos:column="51"/></operator><name pos:line="36" pos:column="48">server<pos:position pos:line="36" pos:column="54"/></name><operator pos:line="36" pos:column="54">-&gt;<pos:position pos:line="36" pos:column="59"/></operator><name pos:line="36" pos:column="56">port<pos:position pos:line="36" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="62"/></expr_stmt>
            <for pos:line="37" pos:column="13">for <control pos:line="37" pos:column="17">(<init><expr><name pos:line="37" pos:column="18">i<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <literal type="number" pos:line="37" pos:column="22">0<pos:position pos:line="37" pos:column="23"/></literal></expr>;<pos:position pos:line="37" pos:column="24"/></init> <condition><expr><name pos:line="37" pos:column="25">i<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">&lt;<pos:position pos:line="37" pos:column="31"/></operator> <name><name pos:line="37" pos:column="29">cfg<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">-&gt;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="34">alt_svcs<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">-&gt;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="44">nelts<pos:position pos:line="37" pos:column="49"/></name></name></expr>;<pos:position pos:line="37" pos:column="50"/></condition> <incr><expr><operator pos:line="37" pos:column="51">++<pos:position pos:line="37" pos:column="53"/></operator><name pos:line="37" pos:column="53">i<pos:position pos:line="37" pos:column="54"/></name></expr></incr>)<pos:position pos:line="37" pos:column="55"/></control> <block pos:line="37" pos:column="56">{
                <decl_stmt><decl><type><name pos:line="38" pos:column="17">h2_alt_svc<pos:position pos:line="38" pos:column="27"/></name> <modifier pos:line="38" pos:column="28">*<pos:position pos:line="38" pos:column="29"/></modifier></type><name pos:line="38" pos:column="29">as<pos:position pos:line="38" pos:column="31"/></name> <init pos:line="38" pos:column="32">= <expr><call><name pos:line="38" pos:column="34">h2_alt_svc_IDX<pos:position pos:line="38" pos:column="48"/></name><argument_list pos:line="38" pos:column="48">(<argument><expr><name><name pos:line="38" pos:column="49">cfg<pos:position pos:line="38" pos:column="52"/></name><operator pos:line="38" pos:column="52">-&gt;<pos:position pos:line="38" pos:column="57"/></operator><name pos:line="38" pos:column="54">alt_svcs<pos:position pos:line="38" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="64">i<pos:position pos:line="38" pos:column="65"/></name></expr></argument>)<pos:position pos:line="38" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="67"/></decl_stmt>
                <decl_stmt><decl><type><specifier pos:line="39" pos:column="17">const<pos:position pos:line="39" pos:column="22"/></specifier> <name pos:line="39" pos:column="23">char<pos:position pos:line="39" pos:column="27"/></name> <modifier pos:line="39" pos:column="28">*<pos:position pos:line="39" pos:column="29"/></modifier></type><name pos:line="39" pos:column="29">ahost<pos:position pos:line="39" pos:column="34"/></name> <init pos:line="39" pos:column="35">= <expr><name><name pos:line="39" pos:column="37">as<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">-&gt;<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="41">host<pos:position pos:line="39" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="39" pos:column="46"/></decl_stmt>
                <if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">ahost<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">&amp;&amp;<pos:position pos:line="40" pos:column="37"/></operator> <operator pos:line="40" pos:column="30">!<pos:position pos:line="40" pos:column="31"/></operator><call><name pos:line="40" pos:column="31">apr_strnatcasecmp<pos:position pos:line="40" pos:column="48"/></name><argument_list pos:line="40" pos:column="48">(<argument><expr><name pos:line="40" pos:column="49">ahost<pos:position pos:line="40" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="56">r<pos:position pos:line="40" pos:column="57"/></name><operator pos:line="40" pos:column="57">-&gt;<pos:position pos:line="40" pos:column="62"/></operator><name pos:line="40" pos:column="59">hostname<pos:position pos:line="40" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="69"/></condition><then pos:line="40" pos:column="69"> <block pos:line="40" pos:column="70">{
                    <expr_stmt><expr><name pos:line="41" pos:column="21">ahost<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <name pos:line="41" pos:column="29">NULL<pos:position pos:line="41" pos:column="33"/></name></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>
                }<pos:position pos:line="42" pos:column="18"/></block></then></if>
                <if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">secure<pos:position pos:line="43" pos:column="27"/></name> <operator pos:line="43" pos:column="28">||<pos:position pos:line="43" pos:column="30"/></operator> <operator pos:line="43" pos:column="31">!<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="32">ahost<pos:position pos:line="43" pos:column="37"/></name></expr>)<pos:position pos:line="43" pos:column="38"/></condition><then pos:line="43" pos:column="38"> <block pos:line="43" pos:column="39">{
                    <expr_stmt><expr><name pos:line="44" pos:column="21">alt_svc<pos:position pos:line="44" pos:column="28"/></name> <operator pos:line="44" pos:column="29">=<pos:position pos:line="44" pos:column="30"/></operator> <call><name pos:line="44" pos:column="31">apr_psprintf<pos:position pos:line="44" pos:column="43"/></name><argument_list pos:line="44" pos:column="43">(<argument><expr><name><name pos:line="44" pos:column="44">r<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">-&gt;<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="47">pool<pos:position pos:line="44" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="53">"%s%s%s=\"%s:%d\"%s"<pos:position pos:line="44" pos:column="73"/></literal></expr></argument>, 
                                           <argument><expr><name pos:line="45" pos:column="44">alt_svc<pos:position pos:line="45" pos:column="51"/></name></expr></argument>,
                                           <argument><expr><operator pos:line="46" pos:column="44">(<pos:position pos:line="46" pos:column="45"/></operator><ternary><condition><expr><operator pos:line="46" pos:column="45">*<pos:position pos:line="46" pos:column="46"/></operator><name pos:line="46" pos:column="46">alt_svc<pos:position pos:line="46" pos:column="53"/></name></expr>?<pos:position pos:line="46" pos:column="54"/></condition><then pos:line="46" pos:column="54"> <expr><literal type="string" pos:line="46" pos:column="55">", "<pos:position pos:line="46" pos:column="59"/></literal></expr> <pos:position pos:line="46" pos:column="60"/></then><else pos:line="46" pos:column="60">: <expr><literal type="string" pos:line="46" pos:column="62">""<pos:position pos:line="46" pos:column="64"/></literal></expr></else></ternary><operator pos:line="46" pos:column="64">)<pos:position pos:line="46" pos:column="65"/></operator></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="67">as<pos:position pos:line="46" pos:column="69"/></name><operator pos:line="46" pos:column="69">-&gt;<pos:position pos:line="46" pos:column="74"/></operator><name pos:line="46" pos:column="71">alpn<pos:position pos:line="46" pos:column="75"/></name></name></expr></argument>,
                                           <argument><expr><ternary><condition><expr><name pos:line="47" pos:column="44">ahost<pos:position pos:line="47" pos:column="49"/></name></expr>?<pos:position pos:line="47" pos:column="50"/></condition><then pos:line="47" pos:column="50"> <expr><name pos:line="47" pos:column="51">ahost<pos:position pos:line="47" pos:column="56"/></name></expr> <pos:position pos:line="47" pos:column="57"/></then><else pos:line="47" pos:column="57">: <expr><literal type="string" pos:line="47" pos:column="59">""<pos:position pos:line="47" pos:column="61"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="63">as<pos:position pos:line="47" pos:column="65"/></name><operator pos:line="47" pos:column="65">-&gt;<pos:position pos:line="47" pos:column="70"/></operator><name pos:line="47" pos:column="67">port<pos:position pos:line="47" pos:column="71"/></name></name></expr></argument>,
                                           <argument><expr><name pos:line="48" pos:column="44">svc_ma<pos:position pos:line="48" pos:column="50"/></name></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="52"/></expr_stmt>
                }<pos:position pos:line="49" pos:column="18"/></block></then></if>
            }<pos:position pos:line="50" pos:column="14"/></block></for>
            <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><operator pos:line="51" pos:column="17">*<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">alt_svc<pos:position pos:line="51" pos:column="25"/></name></expr>)<pos:position pos:line="51" pos:column="26"/></condition><then pos:line="51" pos:column="26"> <block pos:line="51" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="52" pos:column="17">apr_table_set<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name><name pos:line="52" pos:column="31">r<pos:position pos:line="52" pos:column="32"/></name><operator pos:line="52" pos:column="32">-&gt;<pos:position pos:line="52" pos:column="37"/></operator><name pos:line="52" pos:column="34">headers_out<pos:position pos:line="52" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="47">"Alt-Svc"<pos:position pos:line="52" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="58">alt_svc<pos:position pos:line="52" pos:column="65"/></name></expr></argument>)<pos:position pos:line="52" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="67"/></expr_stmt>
            }<pos:position pos:line="53" pos:column="14"/></block></then></if>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    
    <return pos:line="57" pos:column="5">return <expr><name pos:line="57" pos:column="12">DECLINED<pos:position pos:line="57" pos:column="20"/></name></expr>;<pos:position pos:line="57" pos:column="21"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

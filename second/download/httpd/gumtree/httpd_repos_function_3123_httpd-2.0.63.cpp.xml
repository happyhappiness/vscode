<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3123_httpd-2.0.63.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_socket_opt_set<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">apr_socket_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">sock<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, 
                                <parameter><decl><type><name pos:line="2" pos:column="33">apr_int32_t<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">opt<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">apr_int32_t<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">on<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">one<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">on<pos:position pos:line="7" pos:column="11"/></name></expr>)<pos:position pos:line="7" pos:column="12"/></condition><then pos:line="7" pos:column="12">
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">one<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <literal type="number" pos:line="8" pos:column="15">1<pos:position pos:line="8" pos:column="16"/></literal></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt></block></then>
    <else pos:line="9" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">one<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <literal type="number" pos:line="10" pos:column="15">0<pos:position pos:line="10" pos:column="16"/></literal></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt></block></else></if>
    <switch pos:line="11" pos:column="5">switch<condition pos:line="11" pos:column="11">(<expr><name pos:line="11" pos:column="12">opt<pos:position pos:line="11" pos:column="15"/></name></expr>)<pos:position pos:line="11" pos:column="16"/></condition> <block pos:line="11" pos:column="17">{
    <case pos:line="12" pos:column="5">case <expr><name pos:line="12" pos:column="10">APR_SO_KEEPALIVE<pos:position pos:line="12" pos:column="26"/></name></expr>:<pos:position pos:line="12" pos:column="27"/></case>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">SO_KEEPALIVE<pos:position pos:line="13" pos:column="20"/></name></cpp:ifdef>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">on<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">!=<pos:position pos:line="14" pos:column="18"/></operator> <call><name pos:line="14" pos:column="19">apr_is_option_set<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name><name pos:line="14" pos:column="37">sock<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">netmask<pos:position pos:line="14" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="52">APR_SO_KEEPALIVE<pos:position pos:line="14" pos:column="68"/></name></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="70"/></condition><then pos:line="14" pos:column="70"> <block pos:line="14" pos:column="71">{
            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><call><name pos:line="15" pos:column="17">setsockopt<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name><name pos:line="15" pos:column="28">sock<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">socketdes<pos:position pos:line="15" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="45">SOL_SOCKET<pos:position pos:line="15" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="57">SO_KEEPALIVE<pos:position pos:line="15" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="71">(<pos:position pos:line="15" pos:column="72"/></operator><name pos:line="15" pos:column="72">void<pos:position pos:line="15" pos:column="76"/></name> <operator pos:line="15" pos:column="77">*<pos:position pos:line="15" pos:column="78"/></operator><operator pos:line="15" pos:column="78">)<pos:position pos:line="15" pos:column="79"/></operator><operator pos:line="15" pos:column="79">&amp;<pos:position pos:line="15" pos:column="84"/></operator><name pos:line="15" pos:column="80">one<pos:position pos:line="15" pos:column="83"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="85">sizeof<argument_list pos:line="15" pos:column="91">(<argument><expr><name pos:line="15" pos:column="92">int<pos:position pos:line="15" pos:column="95"/></name></expr></argument>)<pos:position pos:line="15" pos:column="96"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="97"/></argument_list></call> <operator pos:line="15" pos:column="98">==<pos:position pos:line="15" pos:column="100"/></operator> <operator pos:line="15" pos:column="101">-<pos:position pos:line="15" pos:column="102"/></operator><literal type="number" pos:line="15" pos:column="102">1<pos:position pos:line="15" pos:column="103"/></literal></expr>)<pos:position pos:line="15" pos:column="104"/></condition><then pos:line="15" pos:column="104"> <block pos:line="15" pos:column="105">{
                <return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">errno<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></return>
            }<pos:position pos:line="17" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">apr_set_option<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><operator pos:line="18" pos:column="28">&amp;<pos:position pos:line="18" pos:column="33"/></operator><name><name pos:line="18" pos:column="29">sock<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">-&gt;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="35">netmask<pos:position pos:line="18" pos:column="42"/></name></name></expr></argument>,<argument><expr><name pos:line="18" pos:column="43">APR_SO_KEEPALIVE<pos:position pos:line="18" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="61">on<pos:position pos:line="18" pos:column="63"/></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
<cpp:else pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">else<pos:position pos:line="20" pos:column="6"/></cpp:directive></cpp:else>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">APR_ENOTIMPL<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></return>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="23" pos:column="9">break;<pos:position pos:line="23" pos:column="15"/></break>
    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">APR_SO_DEBUG<pos:position pos:line="24" pos:column="22"/></name></expr>:<pos:position pos:line="24" pos:column="23"/></case>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">on<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">!=<pos:position pos:line="25" pos:column="18"/></operator> <call><name pos:line="25" pos:column="19">apr_is_option_set<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">(<argument><expr><name><name pos:line="25" pos:column="37">sock<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">netmask<pos:position pos:line="25" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="52">APR_SO_DEBUG<pos:position pos:line="25" pos:column="64"/></name></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="66"/></condition><then pos:line="25" pos:column="66"> <block pos:line="25" pos:column="67">{
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><call><name pos:line="26" pos:column="17">setsockopt<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name><name pos:line="26" pos:column="28">sock<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">socketdes<pos:position pos:line="26" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">SOL_SOCKET<pos:position pos:line="26" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="57">SO_DEBUG<pos:position pos:line="26" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="67">(<pos:position pos:line="26" pos:column="68"/></operator><name pos:line="26" pos:column="68">void<pos:position pos:line="26" pos:column="72"/></name> <operator pos:line="26" pos:column="73">*<pos:position pos:line="26" pos:column="74"/></operator><operator pos:line="26" pos:column="74">)<pos:position pos:line="26" pos:column="75"/></operator><operator pos:line="26" pos:column="75">&amp;<pos:position pos:line="26" pos:column="80"/></operator><name pos:line="26" pos:column="76">one<pos:position pos:line="26" pos:column="79"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="81">sizeof<argument_list pos:line="26" pos:column="87">(<argument><expr><name pos:line="26" pos:column="88">int<pos:position pos:line="26" pos:column="91"/></name></expr></argument>)<pos:position pos:line="26" pos:column="92"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="93"/></argument_list></call> <operator pos:line="26" pos:column="94">==<pos:position pos:line="26" pos:column="96"/></operator> <operator pos:line="26" pos:column="97">-<pos:position pos:line="26" pos:column="98"/></operator><literal type="number" pos:line="26" pos:column="98">1<pos:position pos:line="26" pos:column="99"/></literal></expr>)<pos:position pos:line="26" pos:column="100"/></condition><then pos:line="26" pos:column="100"> <block pos:line="26" pos:column="101">{
                <return pos:line="27" pos:column="17">return <expr><name pos:line="27" pos:column="24">errno<pos:position pos:line="27" pos:column="29"/></name></expr>;<pos:position pos:line="27" pos:column="30"/></return>
            }<pos:position pos:line="28" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">apr_set_option<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><operator pos:line="29" pos:column="28">&amp;<pos:position pos:line="29" pos:column="33"/></operator><name><name pos:line="29" pos:column="29">sock<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">-&gt;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="35">netmask<pos:position pos:line="29" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">APR_SO_DEBUG<pos:position pos:line="29" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="58">on<pos:position pos:line="29" pos:column="60"/></name></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
        <break pos:line="31" pos:column="9">break;<pos:position pos:line="31" pos:column="15"/></break>
    <case pos:line="32" pos:column="5">case <expr><name pos:line="32" pos:column="10">APR_SO_REUSEADDR<pos:position pos:line="32" pos:column="26"/></name></expr>:<pos:position pos:line="32" pos:column="27"/></case>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">on<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">!=<pos:position pos:line="33" pos:column="18"/></operator> <call><name pos:line="33" pos:column="19">apr_is_option_set<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name><name pos:line="33" pos:column="37">sock<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">-&gt;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="43">netmask<pos:position pos:line="33" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="52">APR_SO_REUSEADDR<pos:position pos:line="33" pos:column="68"/></name></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="70"/></condition><then pos:line="33" pos:column="70"> <block pos:line="33" pos:column="71">{
            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><call><name pos:line="34" pos:column="17">setsockopt<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name><name pos:line="34" pos:column="28">sock<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">-&gt;<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="34">socketdes<pos:position pos:line="34" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="45">SOL_SOCKET<pos:position pos:line="34" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="57">SO_REUSEADDR<pos:position pos:line="34" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="71">(<pos:position pos:line="34" pos:column="72"/></operator><name pos:line="34" pos:column="72">void<pos:position pos:line="34" pos:column="76"/></name> <operator pos:line="34" pos:column="77">*<pos:position pos:line="34" pos:column="78"/></operator><operator pos:line="34" pos:column="78">)<pos:position pos:line="34" pos:column="79"/></operator><operator pos:line="34" pos:column="79">&amp;<pos:position pos:line="34" pos:column="84"/></operator><name pos:line="34" pos:column="80">one<pos:position pos:line="34" pos:column="83"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="85">sizeof<argument_list pos:line="34" pos:column="91">(<argument><expr><name pos:line="34" pos:column="92">int<pos:position pos:line="34" pos:column="95"/></name></expr></argument>)<pos:position pos:line="34" pos:column="96"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="97"/></argument_list></call> <operator pos:line="34" pos:column="98">==<pos:position pos:line="34" pos:column="100"/></operator> <operator pos:line="34" pos:column="101">-<pos:position pos:line="34" pos:column="102"/></operator><literal type="number" pos:line="34" pos:column="102">1<pos:position pos:line="34" pos:column="103"/></literal></expr>)<pos:position pos:line="34" pos:column="104"/></condition><then pos:line="34" pos:column="104"> <block pos:line="34" pos:column="105">{
                <return pos:line="35" pos:column="17">return <expr><name pos:line="35" pos:column="24">errno<pos:position pos:line="35" pos:column="29"/></name></expr>;<pos:position pos:line="35" pos:column="30"/></return>
            }<pos:position pos:line="36" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">apr_set_option<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><operator pos:line="37" pos:column="28">&amp;<pos:position pos:line="37" pos:column="33"/></operator><name><name pos:line="37" pos:column="29">sock<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">-&gt;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="35">netmask<pos:position pos:line="37" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="44">APR_SO_REUSEADDR<pos:position pos:line="37" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="62">on<pos:position pos:line="37" pos:column="64"/></name></expr></argument>)<pos:position pos:line="37" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
        <break pos:line="39" pos:column="9">break;<pos:position pos:line="39" pos:column="15"/></break>
    <case pos:line="40" pos:column="5">case <expr><name pos:line="40" pos:column="10">APR_SO_SNDBUF<pos:position pos:line="40" pos:column="23"/></name></expr>:<pos:position pos:line="40" pos:column="24"/></case>
<cpp:ifdef pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">ifdef<pos:position pos:line="41" pos:column="7"/></cpp:directive> <name pos:line="41" pos:column="8">SO_SNDBUF<pos:position pos:line="41" pos:column="17"/></name></cpp:ifdef>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">setsockopt<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name><name pos:line="42" pos:column="24">sock<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-&gt;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="30">socketdes<pos:position pos:line="42" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="41">SOL_SOCKET<pos:position pos:line="42" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="53">SO_SNDBUF<pos:position pos:line="42" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="64">(<pos:position pos:line="42" pos:column="65"/></operator><name pos:line="42" pos:column="65">void<pos:position pos:line="42" pos:column="69"/></name> <operator pos:line="42" pos:column="70">*<pos:position pos:line="42" pos:column="71"/></operator><operator pos:line="42" pos:column="71">)<pos:position pos:line="42" pos:column="72"/></operator><operator pos:line="42" pos:column="72">&amp;<pos:position pos:line="42" pos:column="77"/></operator><name pos:line="42" pos:column="73">on<pos:position pos:line="42" pos:column="75"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="77">sizeof<argument_list pos:line="42" pos:column="83">(<argument><expr><name pos:line="42" pos:column="84">int<pos:position pos:line="42" pos:column="87"/></name></expr></argument>)<pos:position pos:line="42" pos:column="88"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="89"/></argument_list></call> <operator pos:line="42" pos:column="90">==<pos:position pos:line="42" pos:column="92"/></operator> <operator pos:line="42" pos:column="93">-<pos:position pos:line="42" pos:column="94"/></operator><literal type="number" pos:line="42" pos:column="94">1<pos:position pos:line="42" pos:column="95"/></literal></expr>)<pos:position pos:line="42" pos:column="96"/></condition><then pos:line="42" pos:column="96"> <block pos:line="42" pos:column="97">{
            <return pos:line="43" pos:column="13">return <expr><name pos:line="43" pos:column="20">errno<pos:position pos:line="43" pos:column="25"/></name></expr>;<pos:position pos:line="43" pos:column="26"/></return>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
<cpp:else pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">else<pos:position pos:line="45" pos:column="6"/></cpp:directive></cpp:else>
        <return pos:line="46" pos:column="9">return <expr><name pos:line="46" pos:column="16">APR_ENOTIMPL<pos:position pos:line="46" pos:column="28"/></name></expr>;<pos:position pos:line="46" pos:column="29"/></return>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif<pos:position pos:line="47" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="48" pos:column="9">break;<pos:position pos:line="48" pos:column="15"/></break>
    <case pos:line="49" pos:column="5">case <expr><name pos:line="49" pos:column="10">APR_SO_RCVBUF<pos:position pos:line="49" pos:column="23"/></name></expr>:<pos:position pos:line="49" pos:column="24"/></case>
<cpp:ifdef pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">ifdef<pos:position pos:line="50" pos:column="7"/></cpp:directive> <name pos:line="50" pos:column="8">SO_RCVBUF<pos:position pos:line="50" pos:column="17"/></name></cpp:ifdef>
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><call><name pos:line="51" pos:column="13">setsockopt<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><name><name pos:line="51" pos:column="24">sock<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">-&gt;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="30">socketdes<pos:position pos:line="51" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="41">SOL_SOCKET<pos:position pos:line="51" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="53">SO_RCVBUF<pos:position pos:line="51" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="64">(<pos:position pos:line="51" pos:column="65"/></operator><name pos:line="51" pos:column="65">void<pos:position pos:line="51" pos:column="69"/></name> <operator pos:line="51" pos:column="70">*<pos:position pos:line="51" pos:column="71"/></operator><operator pos:line="51" pos:column="71">)<pos:position pos:line="51" pos:column="72"/></operator><operator pos:line="51" pos:column="72">&amp;<pos:position pos:line="51" pos:column="77"/></operator><name pos:line="51" pos:column="73">on<pos:position pos:line="51" pos:column="75"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="77">sizeof<argument_list pos:line="51" pos:column="83">(<argument><expr><name pos:line="51" pos:column="84">int<pos:position pos:line="51" pos:column="87"/></name></expr></argument>)<pos:position pos:line="51" pos:column="88"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="89"/></argument_list></call> <operator pos:line="51" pos:column="90">==<pos:position pos:line="51" pos:column="92"/></operator> <operator pos:line="51" pos:column="93">-<pos:position pos:line="51" pos:column="94"/></operator><literal type="number" pos:line="51" pos:column="94">1<pos:position pos:line="51" pos:column="95"/></literal></expr>)<pos:position pos:line="51" pos:column="96"/></condition><then pos:line="51" pos:column="96"> <block pos:line="51" pos:column="97">{
            <return pos:line="52" pos:column="13">return <expr><name pos:line="52" pos:column="20">errno<pos:position pos:line="52" pos:column="25"/></name></expr>;<pos:position pos:line="52" pos:column="26"/></return>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>
<cpp:else pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">else<pos:position pos:line="54" pos:column="6"/></cpp:directive></cpp:else>
        <return pos:line="55" pos:column="9">return <expr><name pos:line="55" pos:column="16">APR_ENOTIMPL<pos:position pos:line="55" pos:column="28"/></name></expr>;<pos:position pos:line="55" pos:column="29"/></return>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="57" pos:column="9">break;<pos:position pos:line="57" pos:column="15"/></break>
    <case pos:line="58" pos:column="5">case <expr><name pos:line="58" pos:column="10">APR_SO_NONBLOCK<pos:position pos:line="58" pos:column="25"/></name></expr>:<pos:position pos:line="58" pos:column="26"/></case>
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><call><name pos:line="59" pos:column="13">apr_is_option_set<pos:position pos:line="59" pos:column="30"/></name><argument_list pos:line="59" pos:column="30">(<argument><expr><name><name pos:line="59" pos:column="31">sock<pos:position pos:line="59" pos:column="35"/></name><operator pos:line="59" pos:column="35">-&gt;<pos:position pos:line="59" pos:column="40"/></operator><name pos:line="59" pos:column="37">netmask<pos:position pos:line="59" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="46">APR_SO_NONBLOCK<pos:position pos:line="59" pos:column="61"/></name></expr></argument>)<pos:position pos:line="59" pos:column="62"/></argument_list></call> <operator pos:line="59" pos:column="63">!=<pos:position pos:line="59" pos:column="65"/></operator> <name pos:line="59" pos:column="66">on<pos:position pos:line="59" pos:column="68"/></name></expr>)<pos:position pos:line="59" pos:column="69"/></condition><then pos:line="59" pos:column="69"> <block pos:line="59" pos:column="70">{
            <if pos:line="60" pos:column="13">if <condition pos:line="60" pos:column="16">(<expr><name pos:line="60" pos:column="17">on<pos:position pos:line="60" pos:column="19"/></name></expr>)<pos:position pos:line="60" pos:column="20"/></condition><then pos:line="60" pos:column="20"> <block pos:line="60" pos:column="21">{
                <if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><operator pos:line="61" pos:column="21">(<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="22">rv<pos:position pos:line="61" pos:column="24"/></name> <operator pos:line="61" pos:column="25">=<pos:position pos:line="61" pos:column="26"/></operator> <call><name pos:line="61" pos:column="27">sononblock<pos:position pos:line="61" pos:column="37"/></name><argument_list pos:line="61" pos:column="37">(<argument><expr><name><name pos:line="61" pos:column="38">sock<pos:position pos:line="61" pos:column="42"/></name><operator pos:line="61" pos:column="42">-&gt;<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="44">socketdes<pos:position pos:line="61" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call><operator pos:line="61" pos:column="54">)<pos:position pos:line="61" pos:column="55"/></operator> <operator pos:line="61" pos:column="56">!=<pos:position pos:line="61" pos:column="58"/></operator> <name pos:line="61" pos:column="59">APR_SUCCESS<pos:position pos:line="61" pos:column="70"/></name></expr>)<pos:position pos:line="61" pos:column="71"/></condition><then pos:line="61" pos:column="71"> 
                    <block type="pseudo"><return pos:line="62" pos:column="21">return <expr><name pos:line="62" pos:column="28">rv<pos:position pos:line="62" pos:column="30"/></name></expr>;<pos:position pos:line="62" pos:column="31"/></return></block></then></if>
            }<pos:position pos:line="63" pos:column="14"/></block></then>
            <else pos:line="64" pos:column="13">else <block pos:line="64" pos:column="18">{
                <if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><operator pos:line="65" pos:column="21">(<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="22">rv<pos:position pos:line="65" pos:column="24"/></name> <operator pos:line="65" pos:column="25">=<pos:position pos:line="65" pos:column="26"/></operator> <call><name pos:line="65" pos:column="27">soblock<pos:position pos:line="65" pos:column="34"/></name><argument_list pos:line="65" pos:column="34">(<argument><expr><name><name pos:line="65" pos:column="35">sock<pos:position pos:line="65" pos:column="39"/></name><operator pos:line="65" pos:column="39">-&gt;<pos:position pos:line="65" pos:column="44"/></operator><name pos:line="65" pos:column="41">socketdes<pos:position pos:line="65" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="51"/></argument_list></call><operator pos:line="65" pos:column="51">)<pos:position pos:line="65" pos:column="52"/></operator> <operator pos:line="65" pos:column="53">!=<pos:position pos:line="65" pos:column="55"/></operator> <name pos:line="65" pos:column="56">APR_SUCCESS<pos:position pos:line="65" pos:column="67"/></name></expr>)<pos:position pos:line="65" pos:column="68"/></condition><then pos:line="65" pos:column="68">
                    <block type="pseudo"><return pos:line="66" pos:column="21">return <expr><name pos:line="66" pos:column="28">rv<pos:position pos:line="66" pos:column="30"/></name></expr>;<pos:position pos:line="66" pos:column="31"/></return></block></then></if>
            }<pos:position pos:line="67" pos:column="14"/></block></else></if>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">apr_set_option<pos:position pos:line="68" pos:column="27"/></name><argument_list pos:line="68" pos:column="27">(<argument><expr><operator pos:line="68" pos:column="28">&amp;<pos:position pos:line="68" pos:column="33"/></operator><name><name pos:line="68" pos:column="29">sock<pos:position pos:line="68" pos:column="33"/></name><operator pos:line="68" pos:column="33">-&gt;<pos:position pos:line="68" pos:column="38"/></operator><name pos:line="68" pos:column="35">netmask<pos:position pos:line="68" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="44">APR_SO_NONBLOCK<pos:position pos:line="68" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="61">on<pos:position pos:line="68" pos:column="63"/></name></expr></argument>)<pos:position pos:line="68" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>
        <break pos:line="70" pos:column="9">break;<pos:position pos:line="70" pos:column="15"/></break>
    <case pos:line="71" pos:column="5">case <expr><name pos:line="71" pos:column="10">APR_SO_LINGER<pos:position pos:line="71" pos:column="23"/></name></expr>:<pos:position pos:line="71" pos:column="24"/></case>
<cpp:ifdef pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">ifdef<pos:position pos:line="72" pos:column="7"/></cpp:directive> <name pos:line="72" pos:column="8">SO_LINGER<pos:position pos:line="72" pos:column="17"/></name></cpp:ifdef>
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><call><name pos:line="73" pos:column="13">apr_is_option_set<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><name><name pos:line="73" pos:column="31">sock<pos:position pos:line="73" pos:column="35"/></name><operator pos:line="73" pos:column="35">-&gt;<pos:position pos:line="73" pos:column="40"/></operator><name pos:line="73" pos:column="37">netmask<pos:position pos:line="73" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="46">APR_SO_LINGER<pos:position pos:line="73" pos:column="59"/></name></expr></argument>)<pos:position pos:line="73" pos:column="60"/></argument_list></call> <operator pos:line="73" pos:column="61">!=<pos:position pos:line="73" pos:column="63"/></operator> <name pos:line="73" pos:column="64">on<pos:position pos:line="73" pos:column="66"/></name></expr>)<pos:position pos:line="73" pos:column="67"/></condition><then pos:line="73" pos:column="67"> <block pos:line="73" pos:column="68">{
            <decl_stmt><decl><type><name><name pos:line="74" pos:column="13">struct<pos:position pos:line="74" pos:column="19"/></name> <name pos:line="74" pos:column="20">linger<pos:position pos:line="74" pos:column="26"/></name></name></type> <name pos:line="74" pos:column="27">li<pos:position pos:line="74" pos:column="29"/></name></decl>;<pos:position pos:line="74" pos:column="30"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="75" pos:column="13">li<pos:position pos:line="75" pos:column="15"/></name><operator pos:line="75" pos:column="15">.<pos:position pos:line="75" pos:column="16"/></operator><name pos:line="75" pos:column="16">l_onoff<pos:position pos:line="75" pos:column="23"/></name></name> <operator pos:line="75" pos:column="24">=<pos:position pos:line="75" pos:column="25"/></operator> <name pos:line="75" pos:column="26">on<pos:position pos:line="75" pos:column="28"/></name></expr>;<pos:position pos:line="75" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="76" pos:column="13">li<pos:position pos:line="76" pos:column="15"/></name><operator pos:line="76" pos:column="15">.<pos:position pos:line="76" pos:column="16"/></operator><name pos:line="76" pos:column="16">l_linger<pos:position pos:line="76" pos:column="24"/></name></name> <operator pos:line="76" pos:column="25">=<pos:position pos:line="76" pos:column="26"/></operator> <name pos:line="76" pos:column="27">APR_MAX_SECS_TO_LINGER<pos:position pos:line="76" pos:column="49"/></name></expr>;<pos:position pos:line="76" pos:column="50"/></expr_stmt>
            <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><call><name pos:line="77" pos:column="17">setsockopt<pos:position pos:line="77" pos:column="27"/></name><argument_list pos:line="77" pos:column="27">(<argument><expr><name><name pos:line="77" pos:column="28">sock<pos:position pos:line="77" pos:column="32"/></name><operator pos:line="77" pos:column="32">-&gt;<pos:position pos:line="77" pos:column="37"/></operator><name pos:line="77" pos:column="34">socketdes<pos:position pos:line="77" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="45">SOL_SOCKET<pos:position pos:line="77" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="57">SO_LINGER<pos:position pos:line="77" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="68">(<pos:position pos:line="77" pos:column="69"/></operator><name pos:line="77" pos:column="69">char<pos:position pos:line="77" pos:column="73"/></name> <operator pos:line="77" pos:column="74">*<pos:position pos:line="77" pos:column="75"/></operator><operator pos:line="77" pos:column="75">)<pos:position pos:line="77" pos:column="76"/></operator> <operator pos:line="77" pos:column="77">&amp;<pos:position pos:line="77" pos:column="82"/></operator><name pos:line="77" pos:column="78">li<pos:position pos:line="77" pos:column="80"/></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="82">sizeof<argument_list pos:line="77" pos:column="88">(<argument><expr pos:line="77" pos:column="89">struct <name pos:line="77" pos:column="96">linger<pos:position pos:line="77" pos:column="102"/></name></expr></argument>)<pos:position pos:line="77" pos:column="103"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="77" pos:column="104"/></argument_list></call> <operator pos:line="77" pos:column="105">==<pos:position pos:line="77" pos:column="107"/></operator> <operator pos:line="77" pos:column="108">-<pos:position pos:line="77" pos:column="109"/></operator><literal type="number" pos:line="77" pos:column="109">1<pos:position pos:line="77" pos:column="110"/></literal></expr>)<pos:position pos:line="77" pos:column="111"/></condition><then pos:line="77" pos:column="111"> <block pos:line="77" pos:column="112">{
                <return pos:line="78" pos:column="17">return <expr><name pos:line="78" pos:column="24">errno<pos:position pos:line="78" pos:column="29"/></name></expr>;<pos:position pos:line="78" pos:column="30"/></return>
            }<pos:position pos:line="79" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">apr_set_option<pos:position pos:line="80" pos:column="27"/></name><argument_list pos:line="80" pos:column="27">(<argument><expr><operator pos:line="80" pos:column="28">&amp;<pos:position pos:line="80" pos:column="33"/></operator><name><name pos:line="80" pos:column="29">sock<pos:position pos:line="80" pos:column="33"/></name><operator pos:line="80" pos:column="33">-&gt;<pos:position pos:line="80" pos:column="38"/></operator><name pos:line="80" pos:column="35">netmask<pos:position pos:line="80" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="44">APR_SO_LINGER<pos:position pos:line="80" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="59">on<pos:position pos:line="80" pos:column="61"/></name></expr></argument>)<pos:position pos:line="80" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="81" pos:column="10"/></block></then></if>
<cpp:else pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">else<pos:position pos:line="82" pos:column="6"/></cpp:directive></cpp:else>
        <return pos:line="83" pos:column="9">return <expr><name pos:line="83" pos:column="16">APR_ENOTIMPL<pos:position pos:line="83" pos:column="28"/></name></expr>;<pos:position pos:line="83" pos:column="29"/></return>
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif<pos:position pos:line="84" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="85" pos:column="9">break;<pos:position pos:line="85" pos:column="15"/></break>
    <case pos:line="86" pos:column="5">case <expr><name pos:line="86" pos:column="10">APR_SO_TIMEOUT<pos:position pos:line="86" pos:column="24"/></name></expr>:<pos:position pos:line="86" pos:column="25"/></case>
        <comment type="block" pos:line="87" pos:column="9">/* XXX: To be deprecated */</comment>
        <return pos:line="88" pos:column="9">return <expr><call><name pos:line="88" pos:column="16">apr_socket_timeout_set<pos:position pos:line="88" pos:column="38"/></name><argument_list pos:line="88" pos:column="38">(<argument><expr><name pos:line="88" pos:column="39">sock<pos:position pos:line="88" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="45">on<pos:position pos:line="88" pos:column="47"/></name></expr></argument>)<pos:position pos:line="88" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="49"/></return>
        <break pos:line="89" pos:column="9">break;<pos:position pos:line="89" pos:column="15"/></break>
    <case pos:line="90" pos:column="5">case <expr><name pos:line="90" pos:column="10">APR_TCP_NODELAY<pos:position pos:line="90" pos:column="25"/></name></expr>:<pos:position pos:line="90" pos:column="26"/></case>
<cpp:if pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">if<pos:position pos:line="91" pos:column="4"/></cpp:directive> <expr><call><name pos:line="91" pos:column="5">defined<pos:position pos:line="91" pos:column="12"/></name><argument_list pos:line="91" pos:column="12">(<argument><expr><name pos:line="91" pos:column="13">TCP_NODELAY<pos:position pos:line="91" pos:column="24"/></name></expr></argument>)<pos:position pos:line="91" pos:column="25"/></argument_list></call></expr></cpp:if>
        <if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><call><name pos:line="92" pos:column="13">apr_is_option_set<pos:position pos:line="92" pos:column="30"/></name><argument_list pos:line="92" pos:column="30">(<argument><expr><name><name pos:line="92" pos:column="31">sock<pos:position pos:line="92" pos:column="35"/></name><operator pos:line="92" pos:column="35">-&gt;<pos:position pos:line="92" pos:column="40"/></operator><name pos:line="92" pos:column="37">netmask<pos:position pos:line="92" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="46">APR_TCP_NODELAY<pos:position pos:line="92" pos:column="61"/></name></expr></argument>)<pos:position pos:line="92" pos:column="62"/></argument_list></call> <operator pos:line="92" pos:column="63">!=<pos:position pos:line="92" pos:column="65"/></operator> <name pos:line="92" pos:column="66">on<pos:position pos:line="92" pos:column="68"/></name></expr>)<pos:position pos:line="92" pos:column="69"/></condition><then pos:line="92" pos:column="69"> <block pos:line="92" pos:column="70">{
            <decl_stmt><decl><type><name pos:line="93" pos:column="13">int<pos:position pos:line="93" pos:column="16"/></name></type> <name pos:line="93" pos:column="17">optlevel<pos:position pos:line="93" pos:column="25"/></name> <init pos:line="93" pos:column="26">= <expr><name pos:line="93" pos:column="28">IPPROTO_TCP<pos:position pos:line="93" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="93" pos:column="40"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="94" pos:column="13">int<pos:position pos:line="94" pos:column="16"/></name></type> <name pos:line="94" pos:column="17">optname<pos:position pos:line="94" pos:column="24"/></name> <init pos:line="94" pos:column="25">= <expr><name pos:line="94" pos:column="27">TCP_NODELAY<pos:position pos:line="94" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="94" pos:column="39"/></decl_stmt>

<cpp:if pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">if<pos:position pos:line="96" pos:column="4"/></cpp:directive> <expr><name pos:line="96" pos:column="5">APR_HAVE_SCTP<pos:position pos:line="96" pos:column="18"/></name></expr></cpp:if>
            <if pos:line="97" pos:column="13">if <condition pos:line="97" pos:column="16">(<expr><name><name pos:line="97" pos:column="17">sock<pos:position pos:line="97" pos:column="21"/></name><operator pos:line="97" pos:column="21">-&gt;<pos:position pos:line="97" pos:column="26"/></operator><name pos:line="97" pos:column="23">protocol<pos:position pos:line="97" pos:column="31"/></name></name> <operator pos:line="97" pos:column="32">==<pos:position pos:line="97" pos:column="34"/></operator> <name pos:line="97" pos:column="35">IPPROTO_SCTP<pos:position pos:line="97" pos:column="47"/></name></expr>)<pos:position pos:line="97" pos:column="48"/></condition><then pos:line="97" pos:column="48"> <block pos:line="97" pos:column="49">{
                <expr_stmt><expr><name pos:line="98" pos:column="17">optlevel<pos:position pos:line="98" pos:column="25"/></name> <operator pos:line="98" pos:column="26">=<pos:position pos:line="98" pos:column="27"/></operator> <name pos:line="98" pos:column="28">IPPROTO_SCTP<pos:position pos:line="98" pos:column="40"/></name></expr>;<pos:position pos:line="98" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="99" pos:column="17">optname<pos:position pos:line="99" pos:column="24"/></name> <operator pos:line="99" pos:column="25">=<pos:position pos:line="99" pos:column="26"/></operator> <name pos:line="99" pos:column="27">SCTP_NODELAY<pos:position pos:line="99" pos:column="39"/></name></expr>;<pos:position pos:line="99" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="100" pos:column="14"/></block></then></if>
<cpp:endif pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">endif<pos:position pos:line="101" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="102" pos:column="13">if <condition pos:line="102" pos:column="16">(<expr><call><name pos:line="102" pos:column="17">setsockopt<pos:position pos:line="102" pos:column="27"/></name><argument_list pos:line="102" pos:column="27">(<argument><expr><name><name pos:line="102" pos:column="28">sock<pos:position pos:line="102" pos:column="32"/></name><operator pos:line="102" pos:column="32">-&gt;<pos:position pos:line="102" pos:column="37"/></operator><name pos:line="102" pos:column="34">socketdes<pos:position pos:line="102" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="45">optlevel<pos:position pos:line="102" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="55">optname<pos:position pos:line="102" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="102" pos:column="64">(<pos:position pos:line="102" pos:column="65"/></operator><name pos:line="102" pos:column="65">void<pos:position pos:line="102" pos:column="69"/></name> <operator pos:line="102" pos:column="70">*<pos:position pos:line="102" pos:column="71"/></operator><operator pos:line="102" pos:column="71">)<pos:position pos:line="102" pos:column="72"/></operator><operator pos:line="102" pos:column="72">&amp;<pos:position pos:line="102" pos:column="77"/></operator><name pos:line="102" pos:column="73">on<pos:position pos:line="102" pos:column="75"/></name></expr></argument>, <argument><expr><sizeof pos:line="102" pos:column="77">sizeof<argument_list pos:line="102" pos:column="83">(<argument><expr><name pos:line="102" pos:column="84">int<pos:position pos:line="102" pos:column="87"/></name></expr></argument>)<pos:position pos:line="102" pos:column="88"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="102" pos:column="89"/></argument_list></call> <operator pos:line="102" pos:column="90">==<pos:position pos:line="102" pos:column="92"/></operator> <operator pos:line="102" pos:column="93">-<pos:position pos:line="102" pos:column="94"/></operator><literal type="number" pos:line="102" pos:column="94">1<pos:position pos:line="102" pos:column="95"/></literal></expr>)<pos:position pos:line="102" pos:column="96"/></condition><then pos:line="102" pos:column="96"> <block pos:line="102" pos:column="97">{
                <return pos:line="103" pos:column="17">return <expr><name pos:line="103" pos:column="24">errno<pos:position pos:line="103" pos:column="29"/></name></expr>;<pos:position pos:line="103" pos:column="30"/></return>
            }<pos:position pos:line="104" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="105" pos:column="13">apr_set_option<pos:position pos:line="105" pos:column="27"/></name><argument_list pos:line="105" pos:column="27">(<argument><expr><operator pos:line="105" pos:column="28">&amp;<pos:position pos:line="105" pos:column="33"/></operator><name><name pos:line="105" pos:column="29">sock<pos:position pos:line="105" pos:column="33"/></name><operator pos:line="105" pos:column="33">-&gt;<pos:position pos:line="105" pos:column="38"/></operator><name pos:line="105" pos:column="35">netmask<pos:position pos:line="105" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="44">APR_TCP_NODELAY<pos:position pos:line="105" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="61">on<pos:position pos:line="105" pos:column="63"/></name></expr></argument>)<pos:position pos:line="105" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="106" pos:column="10"/></block></then></if>
<cpp:else pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">else<pos:position pos:line="107" pos:column="6"/></cpp:directive></cpp:else>
        <comment type="block" pos:line="108" pos:column="9">/* BeOS pre-BONE has TCP_NODELAY set by default.
         * As it can't be turned off we might as well check if they're asking
         * for it to be turned on!
         */</comment>
<cpp:ifdef pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">ifdef<pos:position pos:line="112" pos:column="7"/></cpp:directive> <name pos:line="112" pos:column="8">BEOS<pos:position pos:line="112" pos:column="12"/></name></cpp:ifdef>
        <if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name pos:line="113" pos:column="13">on<pos:position pos:line="113" pos:column="15"/></name> <operator pos:line="113" pos:column="16">==<pos:position pos:line="113" pos:column="18"/></operator> <literal type="number" pos:line="113" pos:column="19">1<pos:position pos:line="113" pos:column="20"/></literal></expr>)<pos:position pos:line="113" pos:column="21"/></condition><then pos:line="113" pos:column="21">
            <block type="pseudo"><return pos:line="114" pos:column="13">return <expr><name pos:line="114" pos:column="20">APR_SUCCESS<pos:position pos:line="114" pos:column="31"/></name></expr>;<pos:position pos:line="114" pos:column="32"/></return></block></then>
        <else pos:line="115" pos:column="9">else
<cpp:endif pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">endif<pos:position pos:line="116" pos:column="7"/></cpp:directive></cpp:endif>
        <block type="pseudo"><return pos:line="117" pos:column="9">return <expr><name pos:line="117" pos:column="16">APR_ENOTIMPL<pos:position pos:line="117" pos:column="28"/></name></expr>;<pos:position pos:line="117" pos:column="29"/></return></block></else></if>
<cpp:endif pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">endif<pos:position pos:line="118" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="119" pos:column="9">break;<pos:position pos:line="119" pos:column="15"/></break>
    <case pos:line="120" pos:column="5">case <expr><name pos:line="120" pos:column="10">APR_TCP_NOPUSH<pos:position pos:line="120" pos:column="24"/></name></expr>:<pos:position pos:line="120" pos:column="25"/></case>
<cpp:if pos:line="121" pos:column="1">#<cpp:directive pos:line="121" pos:column="2">if<pos:position pos:line="121" pos:column="4"/></cpp:directive> <expr><name pos:line="121" pos:column="5">APR_TCP_NOPUSH_FLAG<pos:position pos:line="121" pos:column="24"/></name></expr></cpp:if>
        <if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><call><name pos:line="122" pos:column="13">apr_is_option_set<pos:position pos:line="122" pos:column="30"/></name><argument_list pos:line="122" pos:column="30">(<argument><expr><name><name pos:line="122" pos:column="31">sock<pos:position pos:line="122" pos:column="35"/></name><operator pos:line="122" pos:column="35">-&gt;<pos:position pos:line="122" pos:column="40"/></operator><name pos:line="122" pos:column="37">netmask<pos:position pos:line="122" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="46">APR_TCP_NOPUSH<pos:position pos:line="122" pos:column="60"/></name></expr></argument>)<pos:position pos:line="122" pos:column="61"/></argument_list></call> <operator pos:line="122" pos:column="62">!=<pos:position pos:line="122" pos:column="64"/></operator> <name pos:line="122" pos:column="65">on<pos:position pos:line="122" pos:column="67"/></name></expr>)<pos:position pos:line="122" pos:column="68"/></condition><then pos:line="122" pos:column="68"> <block pos:line="122" pos:column="69">{
            <decl_stmt><decl><type><name pos:line="123" pos:column="13">int<pos:position pos:line="123" pos:column="16"/></name></type> <name pos:line="123" pos:column="17">optlevel<pos:position pos:line="123" pos:column="25"/></name> <init pos:line="123" pos:column="26">= <expr><name pos:line="123" pos:column="28">IPPROTO_TCP<pos:position pos:line="123" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="123" pos:column="40"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="124" pos:column="13">int<pos:position pos:line="124" pos:column="16"/></name></type> <name pos:line="124" pos:column="17">optname<pos:position pos:line="124" pos:column="24"/></name> <init pos:line="124" pos:column="25">= <expr><name pos:line="124" pos:column="27">TCP_NODELAY<pos:position pos:line="124" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="124" pos:column="39"/></decl_stmt>

<cpp:if pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">if<pos:position pos:line="126" pos:column="4"/></cpp:directive> <expr><name pos:line="126" pos:column="5">APR_HAVE_SCTP<pos:position pos:line="126" pos:column="18"/></name></expr></cpp:if>
            <if pos:line="127" pos:column="13">if <condition pos:line="127" pos:column="16">(<expr><name><name pos:line="127" pos:column="17">sock<pos:position pos:line="127" pos:column="21"/></name><operator pos:line="127" pos:column="21">-&gt;<pos:position pos:line="127" pos:column="26"/></operator><name pos:line="127" pos:column="23">protocol<pos:position pos:line="127" pos:column="31"/></name></name> <operator pos:line="127" pos:column="32">==<pos:position pos:line="127" pos:column="34"/></operator> <name pos:line="127" pos:column="35">IPPROTO_SCTP<pos:position pos:line="127" pos:column="47"/></name></expr>)<pos:position pos:line="127" pos:column="48"/></condition><then pos:line="127" pos:column="48"> <block pos:line="127" pos:column="49">{
                <expr_stmt><expr><name pos:line="128" pos:column="17">optlevel<pos:position pos:line="128" pos:column="25"/></name> <operator pos:line="128" pos:column="26">=<pos:position pos:line="128" pos:column="27"/></operator> <name pos:line="128" pos:column="28">IPPROTO_SCTP<pos:position pos:line="128" pos:column="40"/></name></expr>;<pos:position pos:line="128" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="129" pos:column="17">optname<pos:position pos:line="129" pos:column="24"/></name> <operator pos:line="129" pos:column="25">=<pos:position pos:line="129" pos:column="26"/></operator> <name pos:line="129" pos:column="27">SCTP_NODELAY<pos:position pos:line="129" pos:column="39"/></name></expr>;<pos:position pos:line="129" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="130" pos:column="14"/></block></then></if>
<cpp:endif pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">endif<pos:position pos:line="131" pos:column="7"/></cpp:directive></cpp:endif>
            <comment type="block" pos:line="132" pos:column="13">/* OK we're going to change some settings here... */</comment>
            <comment type="block" pos:line="133" pos:column="13">/* TCP_NODELAY is mutually exclusive, so do we have it set? */</comment>
            <if pos:line="134" pos:column="13">if <condition pos:line="134" pos:column="16">(<expr><call><name pos:line="134" pos:column="17">apr_is_option_set<pos:position pos:line="134" pos:column="34"/></name><argument_list pos:line="134" pos:column="34">(<argument><expr><name><name pos:line="134" pos:column="35">sock<pos:position pos:line="134" pos:column="39"/></name><operator pos:line="134" pos:column="39">-&gt;<pos:position pos:line="134" pos:column="44"/></operator><name pos:line="134" pos:column="41">netmask<pos:position pos:line="134" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="50">APR_TCP_NODELAY<pos:position pos:line="134" pos:column="65"/></name></expr></argument>)<pos:position pos:line="134" pos:column="66"/></argument_list></call> <operator pos:line="134" pos:column="67">==<pos:position pos:line="134" pos:column="69"/></operator> <literal type="number" pos:line="134" pos:column="70">1<pos:position pos:line="134" pos:column="71"/></literal> <operator pos:line="134" pos:column="72">&amp;&amp;<pos:position pos:line="134" pos:column="82"/></operator> <name pos:line="134" pos:column="75">on<pos:position pos:line="134" pos:column="77"/></name></expr>)<pos:position pos:line="134" pos:column="78"/></condition><then pos:line="134" pos:column="78"> <block pos:line="134" pos:column="79">{
                <comment type="block" pos:line="135" pos:column="17">/* If we want to set NOPUSH then if we have the TCP_NODELAY
                 * flag set we need to switch it off...
                 */</comment>
                <decl_stmt><decl><type><name pos:line="138" pos:column="17">int<pos:position pos:line="138" pos:column="20"/></name></type> <name pos:line="138" pos:column="21">tmpflag<pos:position pos:line="138" pos:column="28"/></name> <init pos:line="138" pos:column="29">= <expr><literal type="number" pos:line="138" pos:column="31">0<pos:position pos:line="138" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="138" pos:column="33"/></decl_stmt>
                <if pos:line="139" pos:column="17">if <condition pos:line="139" pos:column="20">(<expr><call><name pos:line="139" pos:column="21">setsockopt<pos:position pos:line="139" pos:column="31"/></name><argument_list pos:line="139" pos:column="31">(<argument><expr><name><name pos:line="139" pos:column="32">sock<pos:position pos:line="139" pos:column="36"/></name><operator pos:line="139" pos:column="36">-&gt;<pos:position pos:line="139" pos:column="41"/></operator><name pos:line="139" pos:column="38">socketdes<pos:position pos:line="139" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="49">optlevel<pos:position pos:line="139" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="59">optname<pos:position pos:line="139" pos:column="66"/></name></expr></argument>,
                               <argument><expr><operator pos:line="140" pos:column="32">(<pos:position pos:line="140" pos:column="33"/></operator><name pos:line="140" pos:column="33">void<pos:position pos:line="140" pos:column="37"/></name><operator pos:line="140" pos:column="37">*<pos:position pos:line="140" pos:column="38"/></operator><operator pos:line="140" pos:column="38">)<pos:position pos:line="140" pos:column="39"/></operator><operator pos:line="140" pos:column="39">&amp;<pos:position pos:line="140" pos:column="44"/></operator><name pos:line="140" pos:column="40">tmpflag<pos:position pos:line="140" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="140" pos:column="49">sizeof<argument_list pos:line="140" pos:column="55">(<argument><expr><name pos:line="140" pos:column="56">int<pos:position pos:line="140" pos:column="59"/></name></expr></argument>)<pos:position pos:line="140" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="140" pos:column="61"/></argument_list></call> <operator pos:line="140" pos:column="62">==<pos:position pos:line="140" pos:column="64"/></operator> <operator pos:line="140" pos:column="65">-<pos:position pos:line="140" pos:column="66"/></operator><literal type="number" pos:line="140" pos:column="66">1<pos:position pos:line="140" pos:column="67"/></literal></expr>)<pos:position pos:line="140" pos:column="68"/></condition><then pos:line="140" pos:column="68"> <block pos:line="140" pos:column="69">{
                    <return pos:line="141" pos:column="21">return <expr><name pos:line="141" pos:column="28">errno<pos:position pos:line="141" pos:column="33"/></name></expr>;<pos:position pos:line="141" pos:column="34"/></return>
                }<pos:position pos:line="142" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="143" pos:column="17">apr_set_option<pos:position pos:line="143" pos:column="31"/></name><argument_list pos:line="143" pos:column="31">(<argument><expr><operator pos:line="143" pos:column="32">&amp;<pos:position pos:line="143" pos:column="37"/></operator><name><name pos:line="143" pos:column="33">sock<pos:position pos:line="143" pos:column="37"/></name><operator pos:line="143" pos:column="37">-&gt;<pos:position pos:line="143" pos:column="42"/></operator><name pos:line="143" pos:column="39">netmask<pos:position pos:line="143" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="48">APR_RESET_NODELAY<pos:position pos:line="143" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="67">1<pos:position pos:line="143" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="70"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="144" pos:column="17">apr_set_option<pos:position pos:line="144" pos:column="31"/></name><argument_list pos:line="144" pos:column="31">(<argument><expr><operator pos:line="144" pos:column="32">&amp;<pos:position pos:line="144" pos:column="37"/></operator><name><name pos:line="144" pos:column="33">sock<pos:position pos:line="144" pos:column="37"/></name><operator pos:line="144" pos:column="37">-&gt;<pos:position pos:line="144" pos:column="42"/></operator><name pos:line="144" pos:column="39">netmask<pos:position pos:line="144" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="48">APR_TCP_NODELAY<pos:position pos:line="144" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="65">0<pos:position pos:line="144" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="145" pos:column="14"/></block></then> <elseif pos:line="145" pos:column="15">else <if pos:line="145" pos:column="20">if <condition pos:line="145" pos:column="23">(<expr><name pos:line="145" pos:column="24">on<pos:position pos:line="145" pos:column="26"/></name></expr>)<pos:position pos:line="145" pos:column="27"/></condition><then pos:line="145" pos:column="27"> <block pos:line="145" pos:column="28">{
                <expr_stmt><expr><call><name pos:line="146" pos:column="17">apr_set_option<pos:position pos:line="146" pos:column="31"/></name><argument_list pos:line="146" pos:column="31">(<argument><expr><operator pos:line="146" pos:column="32">&amp;<pos:position pos:line="146" pos:column="37"/></operator><name><name pos:line="146" pos:column="33">sock<pos:position pos:line="146" pos:column="37"/></name><operator pos:line="146" pos:column="37">-&gt;<pos:position pos:line="146" pos:column="42"/></operator><name pos:line="146" pos:column="39">netmask<pos:position pos:line="146" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="48">APR_RESET_NODELAY<pos:position pos:line="146" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="146" pos:column="67">0<pos:position pos:line="146" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="147" pos:column="14"/></block></then></if></elseif></if>
            <comment type="block" pos:line="148" pos:column="13">/* OK, now we can just set the TCP_NOPUSH flag accordingly...*/</comment>
            <if pos:line="149" pos:column="13">if <condition pos:line="149" pos:column="16">(<expr><call><name pos:line="149" pos:column="17">setsockopt<pos:position pos:line="149" pos:column="27"/></name><argument_list pos:line="149" pos:column="27">(<argument><expr><name><name pos:line="149" pos:column="28">sock<pos:position pos:line="149" pos:column="32"/></name><operator pos:line="149" pos:column="32">-&gt;<pos:position pos:line="149" pos:column="37"/></operator><name pos:line="149" pos:column="34">socketdes<pos:position pos:line="149" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="45">IPPROTO_TCP<pos:position pos:line="149" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="58">APR_TCP_NOPUSH_FLAG<pos:position pos:line="149" pos:column="77"/></name></expr></argument>,
                           <argument><expr><operator pos:line="150" pos:column="28">(<pos:position pos:line="150" pos:column="29"/></operator><name pos:line="150" pos:column="29">void<pos:position pos:line="150" pos:column="33"/></name><operator pos:line="150" pos:column="33">*<pos:position pos:line="150" pos:column="34"/></operator><operator pos:line="150" pos:column="34">)<pos:position pos:line="150" pos:column="35"/></operator><operator pos:line="150" pos:column="35">&amp;<pos:position pos:line="150" pos:column="40"/></operator><name pos:line="150" pos:column="36">on<pos:position pos:line="150" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="150" pos:column="40">sizeof<argument_list pos:line="150" pos:column="46">(<argument><expr><name pos:line="150" pos:column="47">int<pos:position pos:line="150" pos:column="50"/></name></expr></argument>)<pos:position pos:line="150" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="150" pos:column="52"/></argument_list></call> <operator pos:line="150" pos:column="53">==<pos:position pos:line="150" pos:column="55"/></operator> <operator pos:line="150" pos:column="56">-<pos:position pos:line="150" pos:column="57"/></operator><literal type="number" pos:line="150" pos:column="57">1<pos:position pos:line="150" pos:column="58"/></literal></expr>)<pos:position pos:line="150" pos:column="59"/></condition><then pos:line="150" pos:column="59"> <block pos:line="150" pos:column="60">{
                <return pos:line="151" pos:column="17">return <expr><name pos:line="151" pos:column="24">errno<pos:position pos:line="151" pos:column="29"/></name></expr>;<pos:position pos:line="151" pos:column="30"/></return>
            }<pos:position pos:line="152" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="153" pos:column="13">apr_set_option<pos:position pos:line="153" pos:column="27"/></name><argument_list pos:line="153" pos:column="27">(<argument><expr><operator pos:line="153" pos:column="28">&amp;<pos:position pos:line="153" pos:column="33"/></operator><name><name pos:line="153" pos:column="29">sock<pos:position pos:line="153" pos:column="33"/></name><operator pos:line="153" pos:column="33">-&gt;<pos:position pos:line="153" pos:column="38"/></operator><name pos:line="153" pos:column="35">netmask<pos:position pos:line="153" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="44">APR_TCP_NOPUSH<pos:position pos:line="153" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="60">on<pos:position pos:line="153" pos:column="62"/></name></expr></argument>)<pos:position pos:line="153" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="64"/></expr_stmt>
            <if pos:line="154" pos:column="13">if <condition pos:line="154" pos:column="16">(<expr><operator pos:line="154" pos:column="17">!<pos:position pos:line="154" pos:column="18"/></operator><name pos:line="154" pos:column="18">on<pos:position pos:line="154" pos:column="20"/></name> <operator pos:line="154" pos:column="21">&amp;&amp;<pos:position pos:line="154" pos:column="31"/></operator> <call><name pos:line="154" pos:column="24">apr_is_option_set<pos:position pos:line="154" pos:column="41"/></name><argument_list pos:line="154" pos:column="41">(<argument><expr><name><name pos:line="154" pos:column="42">sock<pos:position pos:line="154" pos:column="46"/></name><operator pos:line="154" pos:column="46">-&gt;<pos:position pos:line="154" pos:column="51"/></operator><name pos:line="154" pos:column="48">netmask<pos:position pos:line="154" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="57">APR_RESET_NODELAY<pos:position pos:line="154" pos:column="74"/></name></expr></argument>)<pos:position pos:line="154" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="154" pos:column="76"/></condition><then pos:line="154" pos:column="76"> <block pos:line="154" pos:column="77">{
                <decl_stmt><decl><type><name pos:line="155" pos:column="17">int<pos:position pos:line="155" pos:column="20"/></name></type> <name pos:line="155" pos:column="21">tmpflag<pos:position pos:line="155" pos:column="28"/></name> <init pos:line="155" pos:column="29">= <expr><literal type="number" pos:line="155" pos:column="31">1<pos:position pos:line="155" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="155" pos:column="33"/></decl_stmt>
                <if pos:line="156" pos:column="17">if <condition pos:line="156" pos:column="20">(<expr><call><name pos:line="156" pos:column="21">setsockopt<pos:position pos:line="156" pos:column="31"/></name><argument_list pos:line="156" pos:column="31">(<argument><expr><name><name pos:line="156" pos:column="32">sock<pos:position pos:line="156" pos:column="36"/></name><operator pos:line="156" pos:column="36">-&gt;<pos:position pos:line="156" pos:column="41"/></operator><name pos:line="156" pos:column="38">socketdes<pos:position pos:line="156" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="49">optlevel<pos:position pos:line="156" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="59">optname<pos:position pos:line="156" pos:column="66"/></name></expr></argument>,
                               <argument><expr><operator pos:line="157" pos:column="32">(<pos:position pos:line="157" pos:column="33"/></operator><name pos:line="157" pos:column="33">void<pos:position pos:line="157" pos:column="37"/></name><operator pos:line="157" pos:column="37">*<pos:position pos:line="157" pos:column="38"/></operator><operator pos:line="157" pos:column="38">)<pos:position pos:line="157" pos:column="39"/></operator><operator pos:line="157" pos:column="39">&amp;<pos:position pos:line="157" pos:column="44"/></operator><name pos:line="157" pos:column="40">tmpflag<pos:position pos:line="157" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="157" pos:column="49">sizeof<argument_list pos:line="157" pos:column="55">(<argument><expr><name pos:line="157" pos:column="56">int<pos:position pos:line="157" pos:column="59"/></name></expr></argument>)<pos:position pos:line="157" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="157" pos:column="61"/></argument_list></call> <operator pos:line="157" pos:column="62">==<pos:position pos:line="157" pos:column="64"/></operator> <operator pos:line="157" pos:column="65">-<pos:position pos:line="157" pos:column="66"/></operator><literal type="number" pos:line="157" pos:column="66">1<pos:position pos:line="157" pos:column="67"/></literal></expr>)<pos:position pos:line="157" pos:column="68"/></condition><then pos:line="157" pos:column="68"> <block pos:line="157" pos:column="69">{
                    <return pos:line="158" pos:column="21">return <expr><name pos:line="158" pos:column="28">errno<pos:position pos:line="158" pos:column="33"/></name></expr>;<pos:position pos:line="158" pos:column="34"/></return>
                }<pos:position pos:line="159" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="160" pos:column="17">apr_set_option<pos:position pos:line="160" pos:column="31"/></name><argument_list pos:line="160" pos:column="31">(<argument><expr><operator pos:line="160" pos:column="32">&amp;<pos:position pos:line="160" pos:column="37"/></operator><name><name pos:line="160" pos:column="33">sock<pos:position pos:line="160" pos:column="37"/></name><operator pos:line="160" pos:column="37">-&gt;<pos:position pos:line="160" pos:column="42"/></operator><name pos:line="160" pos:column="39">netmask<pos:position pos:line="160" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="48">APR_RESET_NODELAY<pos:position pos:line="160" pos:column="65"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="160" pos:column="66">0<pos:position pos:line="160" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="161" pos:column="17">apr_set_option<pos:position pos:line="161" pos:column="31"/></name><argument_list pos:line="161" pos:column="31">(<argument><expr><operator pos:line="161" pos:column="32">&amp;<pos:position pos:line="161" pos:column="37"/></operator><name><name pos:line="161" pos:column="33">sock<pos:position pos:line="161" pos:column="37"/></name><operator pos:line="161" pos:column="37">-&gt;<pos:position pos:line="161" pos:column="42"/></operator><name pos:line="161" pos:column="39">netmask<pos:position pos:line="161" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="48">APR_TCP_NODELAY<pos:position pos:line="161" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="161" pos:column="65">1<pos:position pos:line="161" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="162" pos:column="14"/></block></then></if>
        }<pos:position pos:line="163" pos:column="10"/></block></then></if>
<cpp:else pos:line="164" pos:column="1">#<cpp:directive pos:line="164" pos:column="2">else<pos:position pos:line="164" pos:column="6"/></cpp:directive></cpp:else>
        <return pos:line="165" pos:column="9">return <expr><name pos:line="165" pos:column="16">APR_ENOTIMPL<pos:position pos:line="165" pos:column="28"/></name></expr>;<pos:position pos:line="165" pos:column="29"/></return>
<cpp:endif pos:line="166" pos:column="1">#<cpp:directive pos:line="166" pos:column="2">endif<pos:position pos:line="166" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="167" pos:column="9">break;<pos:position pos:line="167" pos:column="15"/></break>
    <case pos:line="168" pos:column="5">case <expr><name pos:line="168" pos:column="10">APR_INCOMPLETE_READ<pos:position pos:line="168" pos:column="29"/></name></expr>:<pos:position pos:line="168" pos:column="30"/></case>
        <expr_stmt><expr><call><name pos:line="169" pos:column="9">apr_set_option<pos:position pos:line="169" pos:column="23"/></name><argument_list pos:line="169" pos:column="23">(<argument><expr><operator pos:line="169" pos:column="24">&amp;<pos:position pos:line="169" pos:column="29"/></operator><name><name pos:line="169" pos:column="25">sock<pos:position pos:line="169" pos:column="29"/></name><operator pos:line="169" pos:column="29">-&gt;<pos:position pos:line="169" pos:column="34"/></operator><name pos:line="169" pos:column="31">netmask<pos:position pos:line="169" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="40">APR_INCOMPLETE_READ<pos:position pos:line="169" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="61">on<pos:position pos:line="169" pos:column="63"/></name></expr></argument>)<pos:position pos:line="169" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="65"/></expr_stmt>
        <break pos:line="170" pos:column="9">break;<pos:position pos:line="170" pos:column="15"/></break>
    <case pos:line="171" pos:column="5">case <expr><name pos:line="171" pos:column="10">APR_IPV6_V6ONLY<pos:position pos:line="171" pos:column="25"/></name></expr>:<pos:position pos:line="171" pos:column="26"/></case>
<cpp:if pos:line="172" pos:column="1">#<cpp:directive pos:line="172" pos:column="2">if<pos:position pos:line="172" pos:column="4"/></cpp:directive> <expr><name pos:line="172" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="172" pos:column="18"/></name> <operator pos:line="172" pos:column="19">&amp;&amp;<pos:position pos:line="172" pos:column="29"/></operator> <call><name pos:line="172" pos:column="22">defined<pos:position pos:line="172" pos:column="29"/></name><argument_list pos:line="172" pos:column="29">(<argument><expr><name pos:line="172" pos:column="30">IPV6_V6ONLY<pos:position pos:line="172" pos:column="41"/></name></expr></argument>)<pos:position pos:line="172" pos:column="42"/></argument_list></call></expr></cpp:if>
        <comment type="block" pos:line="173" pos:column="9">/* we don't know the initial setting of this option,
         * so don't check sock-&gt;netmask since that optimization
         * won't work
         */</comment>
        <if pos:line="177" pos:column="9">if <condition pos:line="177" pos:column="12">(<expr><call><name pos:line="177" pos:column="13">setsockopt<pos:position pos:line="177" pos:column="23"/></name><argument_list pos:line="177" pos:column="23">(<argument><expr><name><name pos:line="177" pos:column="24">sock<pos:position pos:line="177" pos:column="28"/></name><operator pos:line="177" pos:column="28">-&gt;<pos:position pos:line="177" pos:column="33"/></operator><name pos:line="177" pos:column="30">socketdes<pos:position pos:line="177" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="41">IPPROTO_IPV6<pos:position pos:line="177" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="55">IPV6_V6ONLY<pos:position pos:line="177" pos:column="66"/></name></expr></argument>,
                       <argument><expr><operator pos:line="178" pos:column="24">(<pos:position pos:line="178" pos:column="25"/></operator><name pos:line="178" pos:column="25">void<pos:position pos:line="178" pos:column="29"/></name> <operator pos:line="178" pos:column="30">*<pos:position pos:line="178" pos:column="31"/></operator><operator pos:line="178" pos:column="31">)<pos:position pos:line="178" pos:column="32"/></operator><operator pos:line="178" pos:column="32">&amp;<pos:position pos:line="178" pos:column="37"/></operator><name pos:line="178" pos:column="33">on<pos:position pos:line="178" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="178" pos:column="37">sizeof<argument_list pos:line="178" pos:column="43">(<argument><expr><name pos:line="178" pos:column="44">int<pos:position pos:line="178" pos:column="47"/></name></expr></argument>)<pos:position pos:line="178" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="178" pos:column="49"/></argument_list></call> <operator pos:line="178" pos:column="50">==<pos:position pos:line="178" pos:column="52"/></operator> <operator pos:line="178" pos:column="53">-<pos:position pos:line="178" pos:column="54"/></operator><literal type="number" pos:line="178" pos:column="54">1<pos:position pos:line="178" pos:column="55"/></literal></expr>)<pos:position pos:line="178" pos:column="56"/></condition><then pos:line="178" pos:column="56"> <block pos:line="178" pos:column="57">{
            <return pos:line="179" pos:column="13">return <expr><name pos:line="179" pos:column="20">errno<pos:position pos:line="179" pos:column="25"/></name></expr>;<pos:position pos:line="179" pos:column="26"/></return>
        }<pos:position pos:line="180" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="181" pos:column="9">apr_set_option<pos:position pos:line="181" pos:column="23"/></name><argument_list pos:line="181" pos:column="23">(<argument><expr><operator pos:line="181" pos:column="24">&amp;<pos:position pos:line="181" pos:column="29"/></operator><name><name pos:line="181" pos:column="25">sock<pos:position pos:line="181" pos:column="29"/></name><operator pos:line="181" pos:column="29">-&gt;<pos:position pos:line="181" pos:column="34"/></operator><name pos:line="181" pos:column="31">netmask<pos:position pos:line="181" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="40">APR_IPV6_V6ONLY<pos:position pos:line="181" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="57">on<pos:position pos:line="181" pos:column="59"/></name></expr></argument>)<pos:position pos:line="181" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="61"/></expr_stmt>
<cpp:else pos:line="182" pos:column="1">#<cpp:directive pos:line="182" pos:column="2">else<pos:position pos:line="182" pos:column="6"/></cpp:directive></cpp:else>
        <return pos:line="183" pos:column="9">return <expr><name pos:line="183" pos:column="16">APR_ENOTIMPL<pos:position pos:line="183" pos:column="28"/></name></expr>;<pos:position pos:line="183" pos:column="29"/></return>
<cpp:endif pos:line="184" pos:column="1">#<cpp:directive pos:line="184" pos:column="2">endif<pos:position pos:line="184" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="185" pos:column="9">break;<pos:position pos:line="185" pos:column="15"/></break>
    <default pos:line="186" pos:column="5">default:<pos:position pos:line="186" pos:column="13"/></default>
        <return pos:line="187" pos:column="9">return <expr><name pos:line="187" pos:column="16">APR_EINVAL<pos:position pos:line="187" pos:column="26"/></name></expr>;<pos:position pos:line="187" pos:column="27"/></return>
    }<pos:position pos:line="188" pos:column="6"/></block></switch>

    <return pos:line="190" pos:column="5">return <expr><name pos:line="190" pos:column="12">APR_SUCCESS<pos:position pos:line="190" pos:column="23"/></name></expr>;<pos:position pos:line="190" pos:column="24"/></return> 
}<pos:position pos:line="191" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2791_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">str2scope<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">p<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">( <expr><call><name pos:line="3" pos:column="10">strcasecmp<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">( <argument><expr><name pos:line="3" pos:column="22">p<pos:position pos:line="3" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="25">"one"<pos:position pos:line="3" pos:column="30"/></literal></expr></argument> )<pos:position pos:line="3" pos:column="32"/></argument_list></call> <operator pos:line="3" pos:column="33">==<pos:position pos:line="3" pos:column="35"/></operator> <literal type="number" pos:line="3" pos:column="36">0<pos:position pos:line="3" pos:column="37"/></literal></expr> )<pos:position pos:line="3" pos:column="39"/></condition><then pos:line="3" pos:column="39"> <block pos:line="3" pos:column="40">{
        <return pos:line="4" pos:column="9">return <expr><name pos:line="4" pos:column="16">LDAP_SCOPE_ONELEVEL<pos:position pos:line="4" pos:column="35"/></name></expr>;<pos:position pos:line="4" pos:column="36"/></return>

    }<pos:position pos:line="6" pos:column="6"/></block></then> <elseif pos:line="6" pos:column="7">else <if pos:line="6" pos:column="12">if <condition pos:line="6" pos:column="15">( <expr><call><name pos:line="6" pos:column="17">strcasecmp<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">( <argument><expr><name pos:line="6" pos:column="29">p<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="32">"onetree"<pos:position pos:line="6" pos:column="41"/></literal></expr></argument> )<pos:position pos:line="6" pos:column="43"/></argument_list></call> <operator pos:line="6" pos:column="44">==<pos:position pos:line="6" pos:column="46"/></operator> <literal type="number" pos:line="6" pos:column="47">0<pos:position pos:line="6" pos:column="48"/></literal></expr> )<pos:position pos:line="6" pos:column="50"/></condition><then pos:line="6" pos:column="50"> <block pos:line="6" pos:column="51">{
        <return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">LDAP_SCOPE_ONELEVEL<pos:position pos:line="7" pos:column="35"/></name></expr>;<pos:position pos:line="7" pos:column="36"/></return>

    }<pos:position pos:line="9" pos:column="6"/></block></then></if></elseif> <elseif pos:line="9" pos:column="7">else <if pos:line="9" pos:column="12">if <condition pos:line="9" pos:column="15">( <expr><call><name pos:line="9" pos:column="17">strcasecmp<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">( <argument><expr><name pos:line="9" pos:column="29">p<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="32">"base"<pos:position pos:line="9" pos:column="38"/></literal></expr></argument> )<pos:position pos:line="9" pos:column="40"/></argument_list></call> <operator pos:line="9" pos:column="41">==<pos:position pos:line="9" pos:column="43"/></operator> <literal type="number" pos:line="9" pos:column="44">0<pos:position pos:line="9" pos:column="45"/></literal></expr> )<pos:position pos:line="9" pos:column="47"/></condition><then pos:line="9" pos:column="47"> <block pos:line="9" pos:column="48">{
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">LDAP_SCOPE_BASE<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></return>

    }<pos:position pos:line="12" pos:column="6"/></block></then></if></elseif> <elseif pos:line="12" pos:column="7">else <if pos:line="12" pos:column="12">if <condition pos:line="12" pos:column="15">( <expr><call><name pos:line="12" pos:column="17">strcasecmp<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">( <argument><expr><name pos:line="12" pos:column="29">p<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="32">"sub"<pos:position pos:line="12" pos:column="37"/></literal></expr></argument> )<pos:position pos:line="12" pos:column="39"/></argument_list></call> <operator pos:line="12" pos:column="40">==<pos:position pos:line="12" pos:column="42"/></operator> <literal type="number" pos:line="12" pos:column="43">0<pos:position pos:line="12" pos:column="44"/></literal></expr> )<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46"> <block pos:line="12" pos:column="47">{
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">LDAP_SCOPE_SUBTREE<pos:position pos:line="13" pos:column="34"/></name></expr>;<pos:position pos:line="13" pos:column="35"/></return>

    }<pos:position pos:line="15" pos:column="6"/></block></then></if></elseif> <elseif pos:line="15" pos:column="7">else <if pos:line="15" pos:column="12">if <condition pos:line="15" pos:column="15">( <expr><call><name pos:line="15" pos:column="17">strcasecmp<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">( <argument><expr><name pos:line="15" pos:column="29">p<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="32">"subtree"<pos:position pos:line="15" pos:column="41"/></literal></expr></argument> )<pos:position pos:line="15" pos:column="43"/></argument_list></call> <operator pos:line="15" pos:column="44">==<pos:position pos:line="15" pos:column="46"/></operator> <literal type="number" pos:line="15" pos:column="47">0<pos:position pos:line="15" pos:column="48"/></literal></expr> )<pos:position pos:line="15" pos:column="50"/></condition><then pos:line="15" pos:column="50"> <block pos:line="15" pos:column="51">{
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">LDAP_SCOPE_SUBTREE<pos:position pos:line="16" pos:column="34"/></name></expr>;<pos:position pos:line="16" pos:column="35"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if></elseif></if>

    <return pos:line="19" pos:column="5">return<expr><operator pos:line="19" pos:column="11">(<pos:position pos:line="19" pos:column="12"/></operator> <operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal> <operator pos:line="19" pos:column="16">)<pos:position pos:line="19" pos:column="17"/></operator></expr>;<pos:position pos:line="19" pos:column="18"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

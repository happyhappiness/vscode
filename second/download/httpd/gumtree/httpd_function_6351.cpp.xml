<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6351.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_conn_io_write<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">h2_conn_io<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">io<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, 
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">buf<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">size_t<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">length<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">status<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">APR_SUCCESS<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">pass_out_ctx<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">ctx<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">ctx<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">.<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">c<pos:position pos:line="7" pos:column="10"/></name></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <name><name pos:line="7" pos:column="13">io<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">c<pos:position pos:line="7" pos:column="18"/></name></name></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">ctx<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">.<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">io<pos:position pos:line="8" pos:column="11"/></name></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <name pos:line="8" pos:column="14">io<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">io<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">bufsize<pos:position pos:line="9" pos:column="20"/></name></name> <operator pos:line="9" pos:column="21">&gt;<pos:position pos:line="9" pos:column="25"/></operator> <literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25"> <block pos:line="9" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ap_log_cerror<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">APLOG_MARK<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">APLOG_TRACE4<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="49">0<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="52">io<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">-&gt;<pos:position pos:line="10" pos:column="59"/></operator><name pos:line="10" pos:column="56">c<pos:position pos:line="10" pos:column="57"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="11" pos:column="23">"h2_conn_io: buffering %ld bytes"<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="58">(<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="59">long<pos:position pos:line="11" pos:column="63"/></name><operator pos:line="11" pos:column="63">)<pos:position pos:line="11" pos:column="64"/></operator><name pos:line="11" pos:column="64">length<pos:position pos:line="11" pos:column="70"/></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="72"/></expr_stmt>
                      
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">APR_BRIGADE_EMPTY<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name><name pos:line="13" pos:column="32">io<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">output<pos:position pos:line="13" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="44"/></condition><then pos:line="13" pos:column="44"> <block pos:line="13" pos:column="45">{
            <expr_stmt><expr><name pos:line="14" pos:column="13">status<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <call><name pos:line="14" pos:column="22">h2_conn_io_flush_int<pos:position pos:line="14" pos:column="42"/></name><argument_list pos:line="14" pos:column="42">(<argument><expr><name pos:line="14" pos:column="43">io<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="47">0<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="50">0<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        
        <while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><name pos:line="17" pos:column="16">length<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">&gt;<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal> <operator pos:line="17" pos:column="27">&amp;&amp;<pos:position pos:line="17" pos:column="37"/></operator> <operator pos:line="17" pos:column="30">(<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">status<pos:position pos:line="17" pos:column="37"/></name> <operator pos:line="17" pos:column="38">==<pos:position pos:line="17" pos:column="40"/></operator> <name pos:line="17" pos:column="41">APR_SUCCESS<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">)<pos:position pos:line="17" pos:column="53"/></operator></expr>)<pos:position pos:line="17" pos:column="54"/></condition> <block pos:line="17" pos:column="55">{
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">apr_size_t<pos:position pos:line="18" pos:column="23"/></name></type> <name pos:line="18" pos:column="24">avail<pos:position pos:line="18" pos:column="29"/></name> <init pos:line="18" pos:column="30">= <expr><name><name pos:line="18" pos:column="32">io<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">-&gt;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="36">bufsize<pos:position pos:line="18" pos:column="43"/></name></name> <operator pos:line="18" pos:column="44">-<pos:position pos:line="18" pos:column="45"/></operator> <name><name pos:line="18" pos:column="46">io<pos:position pos:line="18" pos:column="48"/></name><operator pos:line="18" pos:column="48">-&gt;<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="50">buflen<pos:position pos:line="18" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="18" pos:column="57"/></decl_stmt>
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><name pos:line="19" pos:column="17">avail<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;=<pos:position pos:line="19" pos:column="28"/></operator> <literal type="number" pos:line="19" pos:column="26">0<pos:position pos:line="19" pos:column="27"/></literal></expr>)<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28"> <block pos:line="19" pos:column="29">{
                <expr_stmt><expr><name pos:line="20" pos:column="17">status<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <call><name pos:line="20" pos:column="26">h2_conn_io_flush_int<pos:position pos:line="20" pos:column="46"/></name><argument_list pos:line="20" pos:column="46">(<argument><expr><name pos:line="20" pos:column="47">io<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="51">0<pos:position pos:line="20" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="54">0<pos:position pos:line="20" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="21" pos:column="14"/></block></then>
            <elseif pos:line="22" pos:column="13">else <if pos:line="22" pos:column="18">if <condition pos:line="22" pos:column="21">(<expr><name pos:line="22" pos:column="22">length<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">&gt;<pos:position pos:line="22" pos:column="33"/></operator> <name pos:line="22" pos:column="31">avail<pos:position pos:line="22" pos:column="36"/></name></expr>)<pos:position pos:line="22" pos:column="37"/></condition><then pos:line="22" pos:column="37"> <block pos:line="22" pos:column="38">{
                <expr_stmt><expr><call><name pos:line="23" pos:column="17">memcpy<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name><name pos:line="23" pos:column="24">io<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">buffer<pos:position pos:line="23" pos:column="34"/></name></name> <operator pos:line="23" pos:column="35">+<pos:position pos:line="23" pos:column="36"/></operator> <name><name pos:line="23" pos:column="37">io<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">-&gt;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="41">buflen<pos:position pos:line="23" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="49">buf<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">avail<pos:position pos:line="23" pos:column="59"/></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="24" pos:column="17">io<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">buflen<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">+=<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">avail<pos:position pos:line="24" pos:column="36"/></name></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name pos:line="25" pos:column="17">length<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">-=<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">avail<pos:position pos:line="25" pos:column="32"/></name></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="26" pos:column="17">buf<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">+=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">avail<pos:position pos:line="26" pos:column="29"/></name></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></then></if></elseif>
            <else pos:line="28" pos:column="13">else <block pos:line="28" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">memcpy<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name><name pos:line="29" pos:column="24">io<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">-&gt;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="28">buffer<pos:position pos:line="29" pos:column="34"/></name></name> <operator pos:line="29" pos:column="35">+<pos:position pos:line="29" pos:column="36"/></operator> <name><name pos:line="29" pos:column="37">io<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">buflen<pos:position pos:line="29" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">buf<pos:position pos:line="29" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">length<pos:position pos:line="29" pos:column="60"/></name></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="30" pos:column="17">io<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">buflen<pos:position pos:line="30" pos:column="27"/></name></name> <operator pos:line="30" pos:column="28">+=<pos:position pos:line="30" pos:column="30"/></operator> <name pos:line="30" pos:column="31">length<pos:position pos:line="30" pos:column="37"/></name></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="31" pos:column="17">length<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <literal type="number" pos:line="31" pos:column="26">0<pos:position pos:line="31" pos:column="27"/></literal></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
                <break pos:line="32" pos:column="17">break;<pos:position pos:line="32" pos:column="23"/></break>
            }<pos:position pos:line="33" pos:column="14"/></block></else></if>
        }<pos:position pos:line="34" pos:column="10"/></block></while>
        
    }<pos:position pos:line="36" pos:column="6"/></block></then>
    <else pos:line="37" pos:column="5">else <block pos:line="37" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ap_log_cerror<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><name pos:line="38" pos:column="23">APLOG_MARK<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">APLOG_TRACE4<pos:position pos:line="38" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="49">status<pos:position pos:line="38" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="57">io<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">-&gt;<pos:position pos:line="38" pos:column="64"/></operator><name pos:line="38" pos:column="61">c<pos:position pos:line="38" pos:column="62"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="39" pos:column="23">"h2_conn_io: writing %ld bytes to brigade"<pos:position pos:line="39" pos:column="65"/></literal></expr></argument>, <argument><expr><operator pos:line="39" pos:column="67">(<pos:position pos:line="39" pos:column="68"/></operator><name pos:line="39" pos:column="68">long<pos:position pos:line="39" pos:column="72"/></name><operator pos:line="39" pos:column="72">)<pos:position pos:line="39" pos:column="73"/></operator><name pos:line="39" pos:column="73">length<pos:position pos:line="39" pos:column="79"/></name></expr></argument>)<pos:position pos:line="39" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><name pos:line="40" pos:column="9">status<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <call><name pos:line="40" pos:column="18">apr_brigade_write<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name><name pos:line="40" pos:column="36">io<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">-&gt;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="40">output<pos:position pos:line="40" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="48">pass_out<pos:position pos:line="40" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="58">&amp;<pos:position pos:line="40" pos:column="63"/></operator><name pos:line="40" pos:column="59">ctx<pos:position pos:line="40" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="64">buf<pos:position pos:line="40" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="69">length<pos:position pos:line="40" pos:column="75"/></name></expr></argument>)<pos:position pos:line="40" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></else></if>
    
    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">status<pos:position pos:line="43" pos:column="18"/></name></expr>;<pos:position pos:line="43" pos:column="19"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

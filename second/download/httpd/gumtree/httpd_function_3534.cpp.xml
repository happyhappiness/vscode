<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3534.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">hb_monitor<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">hb_ctx_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">ctx<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">apr_pool_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">p<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">len<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_socket_t<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">sock<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">NULL<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">buf<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><literal type="number" pos:line="5" pos:column="14">256<pos:position pos:line="5" pos:column="17"/></literal></expr>]<pos:position pos:line="5" pos:column="18"/></index></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="12">j<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_uint32_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">ready<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_uint32_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">busy<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ap_generation_t<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">mpm_generation<pos:position pos:line="9" pos:column="35"/></name></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ap_mpm_query<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">AP_MPMQ_GENERATION<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="38">&amp;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="39">mpm_generation<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="55"/></expr_stmt>

    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><expr><name pos:line="13" pos:column="10">i<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <literal type="number" pos:line="13" pos:column="14">0<pos:position pos:line="13" pos:column="15"/></literal></expr>;<pos:position pos:line="13" pos:column="16"/></init> <condition><expr><name pos:line="13" pos:column="17">i<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">&lt;<pos:position pos:line="13" pos:column="23"/></operator> <name><name pos:line="13" pos:column="21">ctx<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">server_limit<pos:position pos:line="13" pos:column="38"/></name></name></expr>;<pos:position pos:line="13" pos:column="39"/></condition> <incr><expr><name pos:line="13" pos:column="40">i<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">++<pos:position pos:line="13" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="44"/></control> <block pos:line="13" pos:column="45">{
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">process_score<pos:position pos:line="14" pos:column="22"/></name> <modifier pos:line="14" pos:column="23">*<pos:position pos:line="14" pos:column="24"/></modifier></type><name pos:line="14" pos:column="24">ps<pos:position pos:line="14" pos:column="26"/></name></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">ps<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">ap_get_scoreboard_process<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">i<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>

        <for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">j<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal></expr>;<pos:position pos:line="17" pos:column="20"/></init> <condition><expr><name pos:line="17" pos:column="21">j<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">&lt;<pos:position pos:line="17" pos:column="27"/></operator> <name><name pos:line="17" pos:column="25">ctx<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">thread_limit<pos:position pos:line="17" pos:column="42"/></name></name></expr>;<pos:position pos:line="17" pos:column="43"/></condition> <incr><expr><name pos:line="17" pos:column="44">j<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">++<pos:position pos:line="17" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="48"/></control> <block pos:line="17" pos:column="49">{
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">int<pos:position pos:line="18" pos:column="16"/></name></type> <name pos:line="18" pos:column="17">res<pos:position pos:line="18" pos:column="20"/></name></decl>;<pos:position pos:line="18" pos:column="21"/></decl_stmt>

            <decl_stmt><decl><type><name pos:line="20" pos:column="13">worker_score<pos:position pos:line="20" pos:column="25"/></name> <modifier pos:line="20" pos:column="26">*<pos:position pos:line="20" pos:column="27"/></modifier></type><name pos:line="20" pos:column="27">ws<pos:position pos:line="20" pos:column="29"/></name> <init pos:line="20" pos:column="30">= <expr><name pos:line="20" pos:column="32">NULL<pos:position pos:line="20" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="37"/></decl_stmt>

            <expr_stmt><expr><name pos:line="22" pos:column="13">ws<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <operator pos:line="22" pos:column="18">&amp;<pos:position pos:line="22" pos:column="23"/></operator><name><name pos:line="22" pos:column="19">ap_scoreboard_image<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">servers<pos:position pos:line="22" pos:column="47"/></name><index pos:line="22" pos:column="47">[<expr><name pos:line="22" pos:column="48">i<pos:position pos:line="22" pos:column="49"/></name></expr>]<pos:position pos:line="22" pos:column="50"/></index><index pos:line="22" pos:column="50">[<expr><name pos:line="22" pos:column="51">j<pos:position pos:line="22" pos:column="52"/></name></expr>]<pos:position pos:line="22" pos:column="53"/></index></name></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt>

            <expr_stmt><expr><name pos:line="24" pos:column="13">res<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name><name pos:line="24" pos:column="19">ws<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">status<pos:position pos:line="24" pos:column="29"/></name></name></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>

            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">res<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">==<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">SERVER_READY<pos:position pos:line="26" pos:column="36"/></name> <operator pos:line="26" pos:column="37">&amp;&amp;<pos:position pos:line="26" pos:column="47"/></operator> <name><name pos:line="26" pos:column="40">ps<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">generation<pos:position pos:line="26" pos:column="54"/></name></name> <operator pos:line="26" pos:column="55">==<pos:position pos:line="26" pos:column="57"/></operator> <name pos:line="26" pos:column="58">mpm_generation<pos:position pos:line="26" pos:column="72"/></name></expr>)<pos:position pos:line="26" pos:column="73"/></condition><then pos:line="26" pos:column="73"> <block pos:line="26" pos:column="74">{
                <expr_stmt><expr><name pos:line="27" pos:column="17">ready<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">++<pos:position pos:line="27" pos:column="24"/></operator></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="28" pos:column="14"/></block></then>
            <elseif pos:line="29" pos:column="13">else <if pos:line="29" pos:column="18">if <condition pos:line="29" pos:column="21">(<expr><name pos:line="29" pos:column="22">res<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">!=<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="29">SERVER_DEAD<pos:position pos:line="29" pos:column="40"/></name> <operator pos:line="29" pos:column="41">&amp;&amp;<pos:position pos:line="29" pos:column="51"/></operator>
                     <name pos:line="30" pos:column="22">res<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">!=<pos:position pos:line="30" pos:column="28"/></operator> <name pos:line="30" pos:column="29">SERVER_STARTING<pos:position pos:line="30" pos:column="44"/></name> <operator pos:line="30" pos:column="45">&amp;&amp;<pos:position pos:line="30" pos:column="55"/></operator> <name pos:line="30" pos:column="48">res<pos:position pos:line="30" pos:column="51"/></name> <operator pos:line="30" pos:column="52">!=<pos:position pos:line="30" pos:column="54"/></operator> <name pos:line="30" pos:column="55">SERVER_IDLE_KILL<pos:position pos:line="30" pos:column="71"/></name> <operator pos:line="30" pos:column="72">&amp;&amp;<pos:position pos:line="30" pos:column="82"/></operator>
                     <name><name pos:line="31" pos:column="22">ps<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">generation<pos:position pos:line="31" pos:column="36"/></name></name> <operator pos:line="31" pos:column="37">==<pos:position pos:line="31" pos:column="39"/></operator> <name pos:line="31" pos:column="40">mpm_generation<pos:position pos:line="31" pos:column="54"/></name></expr>)<pos:position pos:line="31" pos:column="55"/></condition><then pos:line="31" pos:column="55"> <block pos:line="31" pos:column="56">{
                <expr_stmt><expr><name pos:line="32" pos:column="17">busy<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">++<pos:position pos:line="32" pos:column="23"/></operator></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="33" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="34" pos:column="10"/></block></for>
    }<pos:position pos:line="35" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="37" pos:column="5">len<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">=<pos:position pos:line="37" pos:column="10"/></operator> <call><name pos:line="37" pos:column="11">apr_snprintf<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">buf<pos:position pos:line="37" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="29">sizeof<argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">buf<pos:position pos:line="37" pos:column="39"/></name></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="37" pos:column="42">msg_format<pos:position pos:line="37" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="54">MSG_VERSION<pos:position pos:line="37" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="67">ready<pos:position pos:line="37" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="74">busy<pos:position pos:line="37" pos:column="78"/></name></expr></argument>)<pos:position pos:line="37" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="80"/></expr_stmt>

    <do pos:line="39" pos:column="5">do <block pos:line="39" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="40" pos:column="9">apr_status_t<pos:position pos:line="40" pos:column="21"/></name></type> <name pos:line="40" pos:column="22">rv<pos:position pos:line="40" pos:column="24"/></name></decl>;<pos:position pos:line="40" pos:column="25"/></decl_stmt>
        <expr_stmt><expr><name pos:line="41" pos:column="9">rv<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <call><name pos:line="41" pos:column="14">apr_socket_create<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><operator pos:line="41" pos:column="32">&amp;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="33">sock<pos:position pos:line="41" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="39">ctx<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">mcast_addr<pos:position pos:line="41" pos:column="54"/></name><operator pos:line="41" pos:column="54">-&gt;<pos:position pos:line="41" pos:column="59"/></operator><name pos:line="41" pos:column="56">family<pos:position pos:line="41" pos:column="62"/></name></name></expr></argument>,
                               <argument><expr><name pos:line="42" pos:column="32">SOCK_DGRAM<pos:position pos:line="42" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="44">APR_PROTO_UDP<pos:position pos:line="42" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="59">p<pos:position pos:line="42" pos:column="60"/></name></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="62"/></expr_stmt>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">rv<pos:position pos:line="43" pos:column="15"/></name></expr>)<pos:position pos:line="43" pos:column="16"/></condition><then pos:line="43" pos:column="16"> <block pos:line="43" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">ap_log_error<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">APLOG_MARK<pos:position pos:line="44" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="38">APLOG_WARNING<pos:position pos:line="44" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="53">rv<pos:position pos:line="44" pos:column="55"/></name></expr></argument>,
                         <argument><expr><name pos:line="45" pos:column="26">NULL<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="32">"Heartbeat: apr_socket_create failed"<pos:position pos:line="45" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="71"/></expr_stmt>
            <break pos:line="46" pos:column="13">break;<pos:position pos:line="46" pos:column="19"/></break>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="49" pos:column="9">rv<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <call><name pos:line="49" pos:column="14">apr_mcast_loopback<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><name pos:line="49" pos:column="33">sock<pos:position pos:line="49" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="39">1<pos:position pos:line="49" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="42"/></expr_stmt>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">rv<pos:position pos:line="50" pos:column="15"/></name></expr>)<pos:position pos:line="50" pos:column="16"/></condition><then pos:line="50" pos:column="16"> <block pos:line="50" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">ap_log_error<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><name pos:line="51" pos:column="26">APLOG_MARK<pos:position pos:line="51" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="38">APLOG_WARNING<pos:position pos:line="51" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="53">rv<pos:position pos:line="51" pos:column="55"/></name></expr></argument>,
                         <argument><expr><name pos:line="52" pos:column="26">NULL<pos:position pos:line="52" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="32">"Heartbeat: apr_mcast_loopback failed"<pos:position pos:line="52" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="72"/></expr_stmt>
            <break pos:line="53" pos:column="13">break;<pos:position pos:line="53" pos:column="19"/></break>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="56" pos:column="9">rv<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <call><name pos:line="56" pos:column="14">apr_socket_sendto<pos:position pos:line="56" pos:column="31"/></name><argument_list pos:line="56" pos:column="31">(<argument><expr><name pos:line="56" pos:column="32">sock<pos:position pos:line="56" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="38">ctx<pos:position pos:line="56" pos:column="41"/></name><operator pos:line="56" pos:column="41">-&gt;<pos:position pos:line="56" pos:column="46"/></operator><name pos:line="56" pos:column="43">mcast_addr<pos:position pos:line="56" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="55">0<pos:position pos:line="56" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="58">buf<pos:position pos:line="56" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="63">&amp;<pos:position pos:line="56" pos:column="68"/></operator><name pos:line="56" pos:column="64">len<pos:position pos:line="56" pos:column="67"/></name></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="69"/></expr_stmt>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">rv<pos:position pos:line="57" pos:column="15"/></name></expr>)<pos:position pos:line="57" pos:column="16"/></condition><then pos:line="57" pos:column="16"> <block pos:line="57" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">ap_log_error<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><name pos:line="58" pos:column="26">APLOG_MARK<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="38">APLOG_WARNING<pos:position pos:line="58" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="53">rv<pos:position pos:line="58" pos:column="55"/></name></expr></argument>,
                         <argument><expr><name pos:line="59" pos:column="26">NULL<pos:position pos:line="59" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="32">"Heartbeat: apr_socket_sendto failed"<pos:position pos:line="59" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="71"/></expr_stmt>
            <break pos:line="60" pos:column="13">break;<pos:position pos:line="60" pos:column="19"/></break>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block> while <condition pos:line="62" pos:column="13">(<expr><literal type="number" pos:line="62" pos:column="14">0<pos:position pos:line="62" pos:column="15"/></literal></expr>)<pos:position pos:line="62" pos:column="16"/></condition>;<pos:position pos:line="62" pos:column="17"/></do>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name pos:line="64" pos:column="9">sock<pos:position pos:line="64" pos:column="13"/></name></expr>)<pos:position pos:line="64" pos:column="14"/></condition><then pos:line="64" pos:column="14"> <block pos:line="64" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">apr_socket_close<pos:position pos:line="65" pos:column="25"/></name><argument_list pos:line="65" pos:column="25">(<argument><expr><name pos:line="65" pos:column="26">sock<pos:position pos:line="65" pos:column="30"/></name></expr></argument>)<pos:position pos:line="65" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

    <return pos:line="68" pos:column="5">return <expr><name pos:line="68" pos:column="12">OK<pos:position pos:line="68" pos:column="14"/></name></expr>;<pos:position pos:line="68" pos:column="15"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

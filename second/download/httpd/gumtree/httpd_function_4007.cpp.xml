<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4007.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_types_multi<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">negotiation_state<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">neg<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">request_rec<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">r<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name><name pos:line="3" pos:column="22">neg<pos:position pos:line="3" pos:column="25"/></name><operator pos:line="3" pos:column="25">-&gt;<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="27">r<pos:position pos:line="3" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">filp<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">prefix_len<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_dir_t<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">dirp<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_finfo_t<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">dirent<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">status<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">struct<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">var_rec<pos:position pos:line="10" pos:column="19"/></name></name></type> <name pos:line="10" pos:column="20">mime_info<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">accept_rec<pos:position pos:line="11" pos:column="22"/></name></name></type> <name pos:line="11" pos:column="23">accept_info<pos:position pos:line="11" pos:column="34"/></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">void<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">new_var<pos:position pos:line="12" pos:column="18"/></name></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">anymatch<pos:position pos:line="13" pos:column="17"/></name> <init pos:line="13" pos:column="18">= <expr><literal type="number" pos:line="13" pos:column="20">0<pos:position pos:line="13" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">clean_var_rec<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><operator pos:line="15" pos:column="19">&amp;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="20">mime_info<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">r<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">proxyreq<pos:position pos:line="17" pos:column="20"/></name></name> <operator pos:line="17" pos:column="21">||<pos:position pos:line="17" pos:column="23"/></operator> <operator pos:line="17" pos:column="24">!<pos:position pos:line="17" pos:column="25"/></operator><name><name pos:line="17" pos:column="25">r<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">filename<pos:position pos:line="17" pos:column="36"/></name></name>
                    <operator pos:line="18" pos:column="21">||<pos:position pos:line="18" pos:column="23"/></operator> <operator pos:line="18" pos:column="24">!<pos:position pos:line="18" pos:column="25"/></operator><call><name pos:line="18" pos:column="25">ap_os_is_path_absolute<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">(<argument><expr><name><name pos:line="18" pos:column="48">neg<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">-&gt;<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="53">pool<pos:position pos:line="18" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="59">r<pos:position pos:line="18" pos:column="60"/></name><operator pos:line="18" pos:column="60">-&gt;<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="62">filename<pos:position pos:line="18" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="72"/></condition><then pos:line="18" pos:column="72"> <block pos:line="18" pos:column="73">{
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">DECLINED<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="22" pos:column="5">/* Only absolute paths here */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><operator pos:line="23" pos:column="10">(<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">filp<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <call><name pos:line="23" pos:column="18">strrchr<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name><name pos:line="23" pos:column="26">r<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">-&gt;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="29">filename<pos:position pos:line="23" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="39">'/'<pos:position pos:line="23" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call><operator pos:line="23" pos:column="43">)<pos:position pos:line="23" pos:column="44"/></operator></expr>)<pos:position pos:line="23" pos:column="45"/></condition><then pos:line="23" pos:column="45"> <block pos:line="23" pos:column="46">{
        <return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">DECLINED<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="26" pos:column="5">++<pos:position pos:line="26" pos:column="7"/></operator><name pos:line="26" pos:column="7">filp<pos:position pos:line="26" pos:column="11"/></name></expr>;<pos:position pos:line="26" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">prefix_len<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <call><name pos:line="27" pos:column="18">strlen<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">filp<pos:position pos:line="27" pos:column="29"/></name></expr></argument>)<pos:position pos:line="27" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">status<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <call><name pos:line="29" pos:column="19">apr_dir_open<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><operator pos:line="29" pos:column="32">&amp;<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="33">dirp<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="39">neg<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">dir_name<pos:position pos:line="29" pos:column="52"/></name></name></expr></argument>,
                               <argument><expr><name><name pos:line="30" pos:column="32">neg<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">pool<pos:position pos:line="30" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call><operator pos:line="30" pos:column="42">)<pos:position pos:line="30" pos:column="43"/></operator> <operator pos:line="30" pos:column="44">!=<pos:position pos:line="30" pos:column="46"/></operator> <name pos:line="30" pos:column="47">APR_SUCCESS<pos:position pos:line="30" pos:column="58"/></name></expr>)<pos:position pos:line="30" pos:column="59"/></condition><then pos:line="30" pos:column="59"> <block pos:line="30" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">ap_log_rerror<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">APLOG_MARK<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="35">APLOG_ERR<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="46">status<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="54">r<pos:position pos:line="31" pos:column="55"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="32" pos:column="21">"cannot read directory for multi: %s"<pos:position pos:line="32" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="60">neg<pos:position pos:line="32" pos:column="63"/></name><operator pos:line="32" pos:column="63">-&gt;<pos:position pos:line="32" pos:column="68"/></operator><name pos:line="32" pos:column="65">dir_name<pos:position pos:line="32" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>
        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">HTTP_FORBIDDEN<pos:position pos:line="33" pos:column="30"/></name></expr>;<pos:position pos:line="33" pos:column="31"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <while pos:line="36" pos:column="5">while <condition pos:line="36" pos:column="11">(<expr><call><name pos:line="36" pos:column="12">apr_dir_read<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><operator pos:line="36" pos:column="25">&amp;<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="26">dirent<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">APR_FINFO_DIRENT<pos:position pos:line="36" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="52">dirp<pos:position pos:line="36" pos:column="56"/></name></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call> <operator pos:line="36" pos:column="58">==<pos:position pos:line="36" pos:column="60"/></operator> <name pos:line="36" pos:column="61">APR_SUCCESS<pos:position pos:line="36" pos:column="72"/></name></expr>)<pos:position pos:line="36" pos:column="73"/></condition> <block pos:line="36" pos:column="74">{
        <decl_stmt><decl><type><name pos:line="37" pos:column="9">apr_array_header_t<pos:position pos:line="37" pos:column="27"/></name> <modifier pos:line="37" pos:column="28">*<pos:position pos:line="37" pos:column="29"/></modifier></type><name pos:line="37" pos:column="29">exception_list<pos:position pos:line="37" pos:column="43"/></name></decl>;<pos:position pos:line="37" pos:column="44"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="38" pos:column="9">request_rec<pos:position pos:line="38" pos:column="20"/></name> <modifier pos:line="38" pos:column="21">*<pos:position pos:line="38" pos:column="22"/></modifier></type><name pos:line="38" pos:column="22">sub_req<pos:position pos:line="38" pos:column="29"/></name></decl>;<pos:position pos:line="38" pos:column="30"/></decl_stmt>

        <comment type="block" pos:line="40" pos:column="9">/* Do we have a match? */</comment>
<cpp:ifdef pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">ifdef<pos:position pos:line="41" pos:column="7"/></cpp:directive> <name pos:line="41" pos:column="8">CASE_BLIND_FILESYSTEM<pos:position pos:line="41" pos:column="29"/></name></cpp:ifdef>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">strncasecmp<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name><name pos:line="42" pos:column="25">dirent<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">.<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="32">name<pos:position pos:line="42" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="38">filp<pos:position pos:line="42" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="44">prefix_len<pos:position pos:line="42" pos:column="54"/></name></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="56"/></condition><then pos:line="42" pos:column="56"> <block pos:line="42" pos:column="57">{
<cpp:else pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">else<pos:position pos:line="43" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name pos:line="44" pos:column="13">strncmp<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name><name pos:line="44" pos:column="21">dirent<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">.<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="28">name<pos:position pos:line="44" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="34">filp<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="40">prefix_len<pos:position pos:line="44" pos:column="50"/></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="52"/></condition><then pos:line="44" pos:column="52"> <block pos:line="44" pos:column="53">{
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
            <continue pos:line="46" pos:column="13">continue;<pos:position pos:line="46" pos:column="22"/></continue>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">dirent<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">name<pos:position pos:line="48" pos:column="24"/></name><index pos:line="48" pos:column="24">[<expr><name pos:line="48" pos:column="25">prefix_len<pos:position pos:line="48" pos:column="35"/></name></expr>]<pos:position pos:line="48" pos:column="36"/></index></name> <operator pos:line="48" pos:column="37">!=<pos:position pos:line="48" pos:column="39"/></operator> <literal type="char" pos:line="48" pos:column="40">'.'<pos:position pos:line="48" pos:column="43"/></literal></expr>)<pos:position pos:line="48" pos:column="44"/></condition><then pos:line="48" pos:column="44"> <block pos:line="48" pos:column="45">{
            <continue pos:line="49" pos:column="13">continue;<pos:position pos:line="49" pos:column="22"/></continue>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="52" pos:column="9">/* Don't negotiate directories and other unusual files
         * Really shouldn't see anything but DIR/LNK/REG here,
         * and we aught to discover if the LNK was interesting.
         *
         * Of course, this only helps platforms that capture the
         * the filetype in apr_dir_read(), which most can once
         * they are optimized with some magic [it's known to the
         * dirent, not associated to the inode, on most FS's.]
         */</comment>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">(<pos:position pos:line="61" pos:column="14"/></operator><name><name pos:line="61" pos:column="14">dirent<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">.<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="21">valid<pos:position pos:line="61" pos:column="26"/></name></name> <operator pos:line="61" pos:column="27">&amp;<pos:position pos:line="61" pos:column="32"/></operator> <name pos:line="61" pos:column="29">APR_FINFO_TYPE<pos:position pos:line="61" pos:column="43"/></name><operator pos:line="61" pos:column="43">)<pos:position pos:line="61" pos:column="44"/></operator> <operator pos:line="61" pos:column="45">&amp;&amp;<pos:position pos:line="61" pos:column="55"/></operator> <operator pos:line="61" pos:column="48">(<pos:position pos:line="61" pos:column="49"/></operator><name><name pos:line="61" pos:column="49">dirent<pos:position pos:line="61" pos:column="55"/></name><operator pos:line="61" pos:column="55">.<pos:position pos:line="61" pos:column="56"/></operator><name pos:line="61" pos:column="56">filetype<pos:position pos:line="61" pos:column="64"/></name></name> <operator pos:line="61" pos:column="65">==<pos:position pos:line="61" pos:column="67"/></operator> <name pos:line="61" pos:column="68">APR_DIR<pos:position pos:line="61" pos:column="75"/></name><operator pos:line="61" pos:column="75">)<pos:position pos:line="61" pos:column="76"/></operator></expr>)<pos:position pos:line="61" pos:column="77"/></condition><then pos:line="61" pos:column="77">
            <block type="pseudo"><continue pos:line="62" pos:column="13">continue;<pos:position pos:line="62" pos:column="22"/></continue></block></then></if>

        <comment type="block" pos:line="64" pos:column="9">/* Ok, something's here.  Maybe nothing useful.  Remember that
         * we tried, if we completely fail, so we can reject the request!
         */</comment>
        <expr_stmt><expr><name pos:line="67" pos:column="9">anymatch<pos:position pos:line="67" pos:column="17"/></name> <operator pos:line="67" pos:column="18">=<pos:position pos:line="67" pos:column="19"/></operator> <literal type="number" pos:line="67" pos:column="20">1<pos:position pos:line="67" pos:column="21"/></literal></expr>;<pos:position pos:line="67" pos:column="22"/></expr_stmt>

        <comment type="block" pos:line="69" pos:column="9">/* See if it's something which we have access to, and which
         * has a known type and encoding.
         */</comment>
        <expr_stmt><expr><name pos:line="72" pos:column="9">sub_req<pos:position pos:line="72" pos:column="16"/></name> <operator pos:line="72" pos:column="17">=<pos:position pos:line="72" pos:column="18"/></operator> <call><name pos:line="72" pos:column="19">ap_sub_req_lookup_dirent<pos:position pos:line="72" pos:column="43"/></name><argument_list pos:line="72" pos:column="43">(<argument><expr><operator pos:line="72" pos:column="44">&amp;<pos:position pos:line="72" pos:column="49"/></operator><name pos:line="72" pos:column="45">dirent<pos:position pos:line="72" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="53">r<pos:position pos:line="72" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="56">AP_SUBREQ_MERGE_ARGS<pos:position pos:line="72" pos:column="76"/></name></expr></argument>,
                                           <argument><expr><name pos:line="73" pos:column="44">NULL<pos:position pos:line="73" pos:column="48"/></name></expr></argument>)<pos:position pos:line="73" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="50"/></expr_stmt>

        <comment type="block" pos:line="75" pos:column="9">/* Double check, we still don't multi-resolve non-ordinary files
         */</comment>
        <if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><name><name pos:line="77" pos:column="13">sub_req<pos:position pos:line="77" pos:column="20"/></name><operator pos:line="77" pos:column="20">-&gt;<pos:position pos:line="77" pos:column="25"/></operator><name pos:line="77" pos:column="22">finfo<pos:position pos:line="77" pos:column="27"/></name><operator pos:line="77" pos:column="27">.<pos:position pos:line="77" pos:column="28"/></operator><name pos:line="77" pos:column="28">filetype<pos:position pos:line="77" pos:column="36"/></name></name> <operator pos:line="77" pos:column="37">!=<pos:position pos:line="77" pos:column="39"/></operator> <name pos:line="77" pos:column="40">APR_REG<pos:position pos:line="77" pos:column="47"/></name></expr>)<pos:position pos:line="77" pos:column="48"/></condition><then pos:line="77" pos:column="48"> <block pos:line="77" pos:column="49">{
            <comment type="block" pos:line="78" pos:column="13">/* XXX sub req not destroyed -- may be a bug/unintentional ? */</comment>
            <continue pos:line="79" pos:column="13">continue;<pos:position pos:line="79" pos:column="22"/></continue>
        }<pos:position pos:line="80" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="82" pos:column="9">/* If it has a handler, we'll pretend it's a CGI script,
         * since that's a good indication of the sort of thing it
         * might be doing.
         */</comment>
        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name><name pos:line="86" pos:column="13">sub_req<pos:position pos:line="86" pos:column="20"/></name><operator pos:line="86" pos:column="20">-&gt;<pos:position pos:line="86" pos:column="25"/></operator><name pos:line="86" pos:column="22">handler<pos:position pos:line="86" pos:column="29"/></name></name> <operator pos:line="86" pos:column="30">&amp;&amp;<pos:position pos:line="86" pos:column="40"/></operator> <operator pos:line="86" pos:column="33">!<pos:position pos:line="86" pos:column="34"/></operator><name><name pos:line="86" pos:column="34">sub_req<pos:position pos:line="86" pos:column="41"/></name><operator pos:line="86" pos:column="41">-&gt;<pos:position pos:line="86" pos:column="46"/></operator><name pos:line="86" pos:column="43">content_type<pos:position pos:line="86" pos:column="55"/></name></name></expr>)<pos:position pos:line="86" pos:column="56"/></condition><then pos:line="86" pos:column="56"> <block pos:line="86" pos:column="57">{
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">ap_set_content_type<pos:position pos:line="87" pos:column="32"/></name><argument_list pos:line="87" pos:column="32">(<argument><expr><name pos:line="87" pos:column="33">sub_req<pos:position pos:line="87" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="42">CGI_MAGIC_TYPE<pos:position pos:line="87" pos:column="56"/></name></expr></argument>)<pos:position pos:line="87" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="90" pos:column="9">/*
         * mod_mime will _always_ provide us the base name in the
         * ap-mime-exception-list, if it processed anything.  If
         * this list is empty, give up immediately, there was
         * nothing interesting.  For example, looking at the files
         * readme.txt and readme.foo, we will throw away .foo if
         * it's an insignificant file (e.g. did not identify a
         * language, charset, encoding, content type or handler,)
         */</comment>
        <expr_stmt><expr><name pos:line="99" pos:column="9">exception_list<pos:position pos:line="99" pos:column="23"/></name> <operator pos:line="99" pos:column="24">=<pos:position pos:line="99" pos:column="25"/></operator>
            <operator pos:line="100" pos:column="13">(<pos:position pos:line="100" pos:column="14"/></operator><name pos:line="100" pos:column="14">apr_array_header_t<pos:position pos:line="100" pos:column="32"/></name> <operator pos:line="100" pos:column="33">*<pos:position pos:line="100" pos:column="34"/></operator><operator pos:line="100" pos:column="34">)<pos:position pos:line="100" pos:column="35"/></operator><call><name pos:line="100" pos:column="35">apr_table_get<pos:position pos:line="100" pos:column="48"/></name><argument_list pos:line="100" pos:column="48">(<argument><expr><name><name pos:line="100" pos:column="49">sub_req<pos:position pos:line="100" pos:column="56"/></name><operator pos:line="100" pos:column="56">-&gt;<pos:position pos:line="100" pos:column="61"/></operator><name pos:line="100" pos:column="58">notes<pos:position pos:line="100" pos:column="63"/></name></name></expr></argument>,
                                                <argument><expr><literal type="string" pos:line="101" pos:column="49">"ap-mime-exceptions-list"<pos:position pos:line="101" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="76"/></expr_stmt>

        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><operator pos:line="103" pos:column="13">!<pos:position pos:line="103" pos:column="14"/></operator><name pos:line="103" pos:column="14">exception_list<pos:position pos:line="103" pos:column="28"/></name></expr>)<pos:position pos:line="103" pos:column="29"/></condition><then pos:line="103" pos:column="29"> <block pos:line="103" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="104" pos:column="13">ap_destroy_sub_req<pos:position pos:line="104" pos:column="31"/></name><argument_list pos:line="104" pos:column="31">(<argument><expr><name pos:line="104" pos:column="32">sub_req<pos:position pos:line="104" pos:column="39"/></name></expr></argument>)<pos:position pos:line="104" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="41"/></expr_stmt>
            <continue pos:line="105" pos:column="13">continue;<pos:position pos:line="105" pos:column="22"/></continue>
        }<pos:position pos:line="106" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="108" pos:column="9">/* Each unregonized bit better match our base name, in sequence.
         * A test of index.html.foo will match index.foo or index.html.foo,
         * but it will never transpose the segments and allow index.foo.html
         * because that would introduce too much CPU consumption.  Better that
         * we don't attempt a many-to-many match here.
         */</comment>
        <block pos:line="114" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="115" pos:column="13">int<pos:position pos:line="115" pos:column="16"/></name></type> <name pos:line="115" pos:column="17">nexcept<pos:position pos:line="115" pos:column="24"/></name> <init pos:line="115" pos:column="25">= <expr><name><name pos:line="115" pos:column="27">exception_list<pos:position pos:line="115" pos:column="41"/></name><operator pos:line="115" pos:column="41">-&gt;<pos:position pos:line="115" pos:column="46"/></operator><name pos:line="115" pos:column="43">nelts<pos:position pos:line="115" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="115" pos:column="49"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="116" pos:column="13">char<pos:position pos:line="116" pos:column="17"/></name> <modifier pos:line="116" pos:column="18">*<pos:position pos:line="116" pos:column="19"/></modifier><modifier pos:line="116" pos:column="19">*<pos:position pos:line="116" pos:column="20"/></modifier></type><name pos:line="116" pos:column="20">cur_except<pos:position pos:line="116" pos:column="30"/></name> <init pos:line="116" pos:column="31">= <expr><operator pos:line="116" pos:column="33">(<pos:position pos:line="116" pos:column="34"/></operator><name pos:line="116" pos:column="34">char<pos:position pos:line="116" pos:column="38"/></name><operator pos:line="116" pos:column="38">*<pos:position pos:line="116" pos:column="39"/></operator><operator pos:line="116" pos:column="39">*<pos:position pos:line="116" pos:column="40"/></operator><operator pos:line="116" pos:column="40">)<pos:position pos:line="116" pos:column="41"/></operator><name><name pos:line="116" pos:column="41">exception_list<pos:position pos:line="116" pos:column="55"/></name><operator pos:line="116" pos:column="55">-&gt;<pos:position pos:line="116" pos:column="60"/></operator><name pos:line="116" pos:column="57">elts<pos:position pos:line="116" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="116" pos:column="62"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="117" pos:column="13">char<pos:position pos:line="117" pos:column="17"/></name> <modifier pos:line="117" pos:column="18">*<pos:position pos:line="117" pos:column="19"/></modifier></type><name pos:line="117" pos:column="19">segstart<pos:position pos:line="117" pos:column="27"/></name> <init pos:line="117" pos:column="28">= <expr><name pos:line="117" pos:column="30">filp<pos:position pos:line="117" pos:column="34"/></name></expr></init></decl>, <modifier pos:line="117" pos:column="36">*<pos:position pos:line="117" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="117" pos:column="37">segend<pos:position pos:line="117" pos:column="43"/></name></decl>, <decl><type ref="prev"/><name pos:line="117" pos:column="45">saveend<pos:position pos:line="117" pos:column="52"/></name></decl>;<pos:position pos:line="117" pos:column="53"/></decl_stmt>

            <while pos:line="119" pos:column="13">while <condition pos:line="119" pos:column="19">(<expr><operator pos:line="119" pos:column="20">*<pos:position pos:line="119" pos:column="21"/></operator><name pos:line="119" pos:column="21">segstart<pos:position pos:line="119" pos:column="29"/></name> <operator pos:line="119" pos:column="30">&amp;&amp;<pos:position pos:line="119" pos:column="40"/></operator> <name pos:line="119" pos:column="33">nexcept<pos:position pos:line="119" pos:column="40"/></name></expr>)<pos:position pos:line="119" pos:column="41"/></condition> <block pos:line="119" pos:column="42">{
                <if pos:line="120" pos:column="17">if <condition pos:line="120" pos:column="20">(<expr><operator pos:line="120" pos:column="21">!<pos:position pos:line="120" pos:column="22"/></operator><operator pos:line="120" pos:column="22">(<pos:position pos:line="120" pos:column="23"/></operator><name pos:line="120" pos:column="23">segend<pos:position pos:line="120" pos:column="29"/></name> <operator pos:line="120" pos:column="30">=<pos:position pos:line="120" pos:column="31"/></operator> <call><name pos:line="120" pos:column="32">strchr<pos:position pos:line="120" pos:column="38"/></name><argument_list pos:line="120" pos:column="38">(<argument><expr><name pos:line="120" pos:column="39">segstart<pos:position pos:line="120" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="120" pos:column="49">'.'<pos:position pos:line="120" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="53"/></argument_list></call><operator pos:line="120" pos:column="53">)<pos:position pos:line="120" pos:column="54"/></operator></expr>)<pos:position pos:line="120" pos:column="55"/></condition><then pos:line="120" pos:column="55">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="121" pos:column="21">segend<pos:position pos:line="121" pos:column="27"/></name> <operator pos:line="121" pos:column="28">=<pos:position pos:line="121" pos:column="29"/></operator> <call><name pos:line="121" pos:column="30">strchr<pos:position pos:line="121" pos:column="36"/></name><argument_list pos:line="121" pos:column="36">(<argument><expr><name pos:line="121" pos:column="37">segstart<pos:position pos:line="121" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="121" pos:column="47">'\0'<pos:position pos:line="121" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="53"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="122" pos:column="17">saveend<pos:position pos:line="122" pos:column="24"/></name> <operator pos:line="122" pos:column="25">=<pos:position pos:line="122" pos:column="26"/></operator> <operator pos:line="122" pos:column="27">*<pos:position pos:line="122" pos:column="28"/></operator><name pos:line="122" pos:column="28">segend<pos:position pos:line="122" pos:column="34"/></name></expr>;<pos:position pos:line="122" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="123" pos:column="17">*<pos:position pos:line="123" pos:column="18"/></operator><name pos:line="123" pos:column="18">segend<pos:position pos:line="123" pos:column="24"/></name> <operator pos:line="123" pos:column="25">=<pos:position pos:line="123" pos:column="26"/></operator> <literal type="char" pos:line="123" pos:column="27">'\0'<pos:position pos:line="123" pos:column="31"/></literal></expr>;<pos:position pos:line="123" pos:column="32"/></expr_stmt>

<cpp:ifdef pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">ifdef<pos:position pos:line="125" pos:column="7"/></cpp:directive> <name pos:line="125" pos:column="8">CASE_BLIND_FILESYSTEM<pos:position pos:line="125" pos:column="29"/></name></cpp:ifdef>
                <if pos:line="126" pos:column="17">if <condition pos:line="126" pos:column="20">(<expr><call><name pos:line="126" pos:column="21">strcasecmp<pos:position pos:line="126" pos:column="31"/></name><argument_list pos:line="126" pos:column="31">(<argument><expr><name pos:line="126" pos:column="32">segstart<pos:position pos:line="126" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="126" pos:column="42">*<pos:position pos:line="126" pos:column="43"/></operator><name pos:line="126" pos:column="43">cur_except<pos:position pos:line="126" pos:column="53"/></name></expr></argument>)<pos:position pos:line="126" pos:column="54"/></argument_list></call> <operator pos:line="126" pos:column="55">==<pos:position pos:line="126" pos:column="57"/></operator> <literal type="number" pos:line="126" pos:column="58">0<pos:position pos:line="126" pos:column="59"/></literal></expr>)<pos:position pos:line="126" pos:column="60"/></condition><then pos:line="126" pos:column="60"> <block pos:line="126" pos:column="61">{
<cpp:else pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">else<pos:position pos:line="127" pos:column="6"/></cpp:directive></cpp:else>
                <if pos:line="128" pos:column="17">if <condition pos:line="128" pos:column="20">(<expr><call><name pos:line="128" pos:column="21">strcmp<pos:position pos:line="128" pos:column="27"/></name><argument_list pos:line="128" pos:column="27">(<argument><expr><name pos:line="128" pos:column="28">segstart<pos:position pos:line="128" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="128" pos:column="38">*<pos:position pos:line="128" pos:column="39"/></operator><name pos:line="128" pos:column="39">cur_except<pos:position pos:line="128" pos:column="49"/></name></expr></argument>)<pos:position pos:line="128" pos:column="50"/></argument_list></call> <operator pos:line="128" pos:column="51">==<pos:position pos:line="128" pos:column="53"/></operator> <literal type="number" pos:line="128" pos:column="54">0<pos:position pos:line="128" pos:column="55"/></literal></expr>)<pos:position pos:line="128" pos:column="56"/></condition><then pos:line="128" pos:column="56"> <block pos:line="128" pos:column="57">{
<cpp:endif pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">endif<pos:position pos:line="129" pos:column="7"/></cpp:directive></cpp:endif>
                    <expr_stmt><expr><operator pos:line="130" pos:column="21">--<pos:position pos:line="130" pos:column="23"/></operator><name pos:line="130" pos:column="23">nexcept<pos:position pos:line="130" pos:column="30"/></name></expr>;<pos:position pos:line="130" pos:column="31"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="131" pos:column="21">++<pos:position pos:line="131" pos:column="23"/></operator><name pos:line="131" pos:column="23">cur_except<pos:position pos:line="131" pos:column="33"/></name></expr>;<pos:position pos:line="131" pos:column="34"/></expr_stmt>
                }<pos:position pos:line="132" pos:column="18"/></block></then></if>

                <if pos:line="134" pos:column="17">if <condition pos:line="134" pos:column="20">(<expr><operator pos:line="134" pos:column="21">!<pos:position pos:line="134" pos:column="22"/></operator><name pos:line="134" pos:column="22">saveend<pos:position pos:line="134" pos:column="29"/></name></expr>)<pos:position pos:line="134" pos:column="30"/></condition><then pos:line="134" pos:column="30">
                    <block type="pseudo"><break pos:line="135" pos:column="21">break;<pos:position pos:line="135" pos:column="27"/></break></block></then></if>

                <expr_stmt><expr><operator pos:line="137" pos:column="17">*<pos:position pos:line="137" pos:column="18"/></operator><name pos:line="137" pos:column="18">segend<pos:position pos:line="137" pos:column="24"/></name> <operator pos:line="137" pos:column="25">=<pos:position pos:line="137" pos:column="26"/></operator> <name pos:line="137" pos:column="27">saveend<pos:position pos:line="137" pos:column="34"/></name></expr>;<pos:position pos:line="137" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><name pos:line="138" pos:column="17">segstart<pos:position pos:line="138" pos:column="25"/></name> <operator pos:line="138" pos:column="26">=<pos:position pos:line="138" pos:column="27"/></operator> <name pos:line="138" pos:column="28">segend<pos:position pos:line="138" pos:column="34"/></name> <operator pos:line="138" pos:column="35">+<pos:position pos:line="138" pos:column="36"/></operator> <literal type="number" pos:line="138" pos:column="37">1<pos:position pos:line="138" pos:column="38"/></literal></expr>;<pos:position pos:line="138" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="139" pos:column="14"/></block></then></if>

            <if pos:line="141" pos:column="13">if <condition pos:line="141" pos:column="16">(<expr><name pos:line="141" pos:column="17">nexcept<pos:position pos:line="141" pos:column="24"/></name></expr>)<pos:position pos:line="141" pos:column="25"/></condition><then pos:line="141" pos:column="25"> <block pos:line="141" pos:column="26">{
                <comment type="block" pos:line="142" pos:column="17">/* Something you don't know is, something you don't know...
                 */</comment>
                <expr_stmt><expr><call><name pos:line="144" pos:column="17">ap_destroy_sub_req<pos:position pos:line="144" pos:column="35"/></name><argument_list pos:line="144" pos:column="35">(<argument><expr><name pos:line="144" pos:column="36">sub_req<pos:position pos:line="144" pos:column="43"/></name></expr></argument>)<pos:position pos:line="144" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="45"/></expr_stmt>
                <continue pos:line="145" pos:column="17">continue;<pos:position pos:line="145" pos:column="26"/></continue>
            }<pos:position pos:line="146" pos:column="14"/></block></then></if>
        }<pos:position pos:line="147" pos:column="10"/></block></while>

        <comment type="block" pos:line="149" pos:column="9">/*
         * If we failed the subrequest, or don't
         * know what we are serving, then continue.
         */</comment>
        <if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><name><name pos:line="153" pos:column="13">sub_req<pos:position pos:line="153" pos:column="20"/></name><operator pos:line="153" pos:column="20">-&gt;<pos:position pos:line="153" pos:column="25"/></operator><name pos:line="153" pos:column="22">status<pos:position pos:line="153" pos:column="28"/></name></name> <operator pos:line="153" pos:column="29">!=<pos:position pos:line="153" pos:column="31"/></operator> <name pos:line="153" pos:column="32">HTTP_OK<pos:position pos:line="153" pos:column="39"/></name> <operator pos:line="153" pos:column="40">||<pos:position pos:line="153" pos:column="42"/></operator> <operator pos:line="153" pos:column="43">(<pos:position pos:line="153" pos:column="44"/></operator><operator pos:line="153" pos:column="44">!<pos:position pos:line="153" pos:column="45"/></operator><name><name pos:line="153" pos:column="45">sub_req<pos:position pos:line="153" pos:column="52"/></name><operator pos:line="153" pos:column="52">-&gt;<pos:position pos:line="153" pos:column="57"/></operator><name pos:line="153" pos:column="54">content_type<pos:position pos:line="153" pos:column="66"/></name></name><operator pos:line="153" pos:column="66">)<pos:position pos:line="153" pos:column="67"/></operator></expr>)<pos:position pos:line="153" pos:column="68"/></condition><then pos:line="153" pos:column="68"> <block pos:line="153" pos:column="69">{
            <expr_stmt><expr><call><name pos:line="154" pos:column="13">ap_destroy_sub_req<pos:position pos:line="154" pos:column="31"/></name><argument_list pos:line="154" pos:column="31">(<argument><expr><name pos:line="154" pos:column="32">sub_req<pos:position pos:line="154" pos:column="39"/></name></expr></argument>)<pos:position pos:line="154" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="41"/></expr_stmt>
            <continue pos:line="155" pos:column="13">continue;<pos:position pos:line="155" pos:column="22"/></continue>
        }<pos:position pos:line="156" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="158" pos:column="9">/* If it's a map file, we use that instead of the map
         * we're building...
         */</comment>
        <if pos:line="161" pos:column="9">if <condition pos:line="161" pos:column="12">(<expr><operator pos:line="161" pos:column="13">(<pos:position pos:line="161" pos:column="14"/></operator><operator pos:line="161" pos:column="14">(<pos:position pos:line="161" pos:column="15"/></operator><name><name pos:line="161" pos:column="15">sub_req<pos:position pos:line="161" pos:column="22"/></name><operator pos:line="161" pos:column="22">-&gt;<pos:position pos:line="161" pos:column="27"/></operator><name pos:line="161" pos:column="24">content_type<pos:position pos:line="161" pos:column="36"/></name></name><operator pos:line="161" pos:column="36">)<pos:position pos:line="161" pos:column="37"/></operator> <operator pos:line="161" pos:column="38">&amp;&amp;<pos:position pos:line="161" pos:column="48"/></operator>
             <operator pos:line="162" pos:column="14">!<pos:position pos:line="162" pos:column="15"/></operator><call><name pos:line="162" pos:column="15">strcmp<pos:position pos:line="162" pos:column="21"/></name><argument_list pos:line="162" pos:column="21">(<argument><expr><name><name pos:line="162" pos:column="22">sub_req<pos:position pos:line="162" pos:column="29"/></name><operator pos:line="162" pos:column="29">-&gt;<pos:position pos:line="162" pos:column="34"/></operator><name pos:line="162" pos:column="31">content_type<pos:position pos:line="162" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="45">MAP_FILE_MAGIC_TYPE<pos:position pos:line="162" pos:column="64"/></name></expr></argument>)<pos:position pos:line="162" pos:column="65"/></argument_list></call><operator pos:line="162" pos:column="65">)<pos:position pos:line="162" pos:column="66"/></operator> <operator pos:line="162" pos:column="67">||<pos:position pos:line="162" pos:column="69"/></operator>
            <operator pos:line="163" pos:column="13">(<pos:position pos:line="163" pos:column="14"/></operator><operator pos:line="163" pos:column="14">(<pos:position pos:line="163" pos:column="15"/></operator><name><name pos:line="163" pos:column="15">sub_req<pos:position pos:line="163" pos:column="22"/></name><operator pos:line="163" pos:column="22">-&gt;<pos:position pos:line="163" pos:column="27"/></operator><name pos:line="163" pos:column="24">handler<pos:position pos:line="163" pos:column="31"/></name></name><operator pos:line="163" pos:column="31">)<pos:position pos:line="163" pos:column="32"/></operator> <operator pos:line="163" pos:column="33">&amp;&amp;<pos:position pos:line="163" pos:column="43"/></operator>
             <operator pos:line="164" pos:column="14">!<pos:position pos:line="164" pos:column="15"/></operator><call><name pos:line="164" pos:column="15">strcmp<pos:position pos:line="164" pos:column="21"/></name><argument_list pos:line="164" pos:column="21">(<argument><expr><name><name pos:line="164" pos:column="22">sub_req<pos:position pos:line="164" pos:column="29"/></name><operator pos:line="164" pos:column="29">-&gt;<pos:position pos:line="164" pos:column="34"/></operator><name pos:line="164" pos:column="31">handler<pos:position pos:line="164" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="164" pos:column="40">"type-map"<pos:position pos:line="164" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="51"/></argument_list></call><operator pos:line="164" pos:column="51">)<pos:position pos:line="164" pos:column="52"/></operator></expr>)<pos:position pos:line="164" pos:column="53"/></condition><then pos:line="164" pos:column="53"> <block pos:line="164" pos:column="54">{

            <expr_stmt><expr><call><name pos:line="166" pos:column="13">apr_dir_close<pos:position pos:line="166" pos:column="26"/></name><argument_list pos:line="166" pos:column="26">(<argument><expr><name pos:line="166" pos:column="27">dirp<pos:position pos:line="166" pos:column="31"/></name></expr></argument>)<pos:position pos:line="166" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="167" pos:column="13">neg<pos:position pos:line="167" pos:column="16"/></name><operator pos:line="167" pos:column="16">-&gt;<pos:position pos:line="167" pos:column="21"/></operator><name pos:line="167" pos:column="18">avail_vars<pos:position pos:line="167" pos:column="28"/></name><operator pos:line="167" pos:column="28">-&gt;<pos:position pos:line="167" pos:column="33"/></operator><name pos:line="167" pos:column="30">nelts<pos:position pos:line="167" pos:column="35"/></name></name> <operator pos:line="167" pos:column="36">=<pos:position pos:line="167" pos:column="37"/></operator> <literal type="number" pos:line="167" pos:column="38">0<pos:position pos:line="167" pos:column="39"/></literal></expr>;<pos:position pos:line="167" pos:column="40"/></expr_stmt>
            <if pos:line="168" pos:column="13">if <condition pos:line="168" pos:column="16">(<expr><name><name pos:line="168" pos:column="17">sub_req<pos:position pos:line="168" pos:column="24"/></name><operator pos:line="168" pos:column="24">-&gt;<pos:position pos:line="168" pos:column="29"/></operator><name pos:line="168" pos:column="26">status<pos:position pos:line="168" pos:column="32"/></name></name> <operator pos:line="168" pos:column="33">!=<pos:position pos:line="168" pos:column="35"/></operator> <name pos:line="168" pos:column="36">HTTP_OK<pos:position pos:line="168" pos:column="43"/></name></expr>)<pos:position pos:line="168" pos:column="44"/></condition><then pos:line="168" pos:column="44"> <block pos:line="168" pos:column="45">{
                <return pos:line="169" pos:column="17">return <expr><name><name pos:line="169" pos:column="24">sub_req<pos:position pos:line="169" pos:column="31"/></name><operator pos:line="169" pos:column="31">-&gt;<pos:position pos:line="169" pos:column="36"/></operator><name pos:line="169" pos:column="33">status<pos:position pos:line="169" pos:column="39"/></name></name></expr>;<pos:position pos:line="169" pos:column="40"/></return>
            }<pos:position pos:line="170" pos:column="14"/></block></then></if>
            <return pos:line="171" pos:column="13">return <expr><call><name pos:line="171" pos:column="20">read_type_map<pos:position pos:line="171" pos:column="33"/></name><argument_list pos:line="171" pos:column="33">(<argument><expr><name pos:line="171" pos:column="34">NULL<pos:position pos:line="171" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="40">neg<pos:position pos:line="171" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="45">sub_req<pos:position pos:line="171" pos:column="52"/></name></expr></argument>)<pos:position pos:line="171" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="54"/></return>
        }<pos:position pos:line="172" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="174" pos:column="9">/* Have reasonable variant --- gather notes. */</comment>

        <expr_stmt><expr><name><name pos:line="176" pos:column="9">mime_info<pos:position pos:line="176" pos:column="18"/></name><operator pos:line="176" pos:column="18">.<pos:position pos:line="176" pos:column="19"/></operator><name pos:line="176" pos:column="19">sub_req<pos:position pos:line="176" pos:column="26"/></name></name> <operator pos:line="176" pos:column="27">=<pos:position pos:line="176" pos:column="28"/></operator> <name pos:line="176" pos:column="29">sub_req<pos:position pos:line="176" pos:column="36"/></name></expr>;<pos:position pos:line="176" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="177" pos:column="9">mime_info<pos:position pos:line="177" pos:column="18"/></name><operator pos:line="177" pos:column="18">.<pos:position pos:line="177" pos:column="19"/></operator><name pos:line="177" pos:column="19">file_name<pos:position pos:line="177" pos:column="28"/></name></name> <operator pos:line="177" pos:column="29">=<pos:position pos:line="177" pos:column="30"/></operator> <call><name pos:line="177" pos:column="31">apr_pstrdup<pos:position pos:line="177" pos:column="42"/></name><argument_list pos:line="177" pos:column="42">(<argument><expr><name><name pos:line="177" pos:column="43">neg<pos:position pos:line="177" pos:column="46"/></name><operator pos:line="177" pos:column="46">-&gt;<pos:position pos:line="177" pos:column="51"/></operator><name pos:line="177" pos:column="48">pool<pos:position pos:line="177" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="177" pos:column="54">dirent<pos:position pos:line="177" pos:column="60"/></name><operator pos:line="177" pos:column="60">.<pos:position pos:line="177" pos:column="61"/></operator><name pos:line="177" pos:column="61">name<pos:position pos:line="177" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="177" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="67"/></expr_stmt>
        <if pos:line="178" pos:column="9">if <condition pos:line="178" pos:column="12">(<expr><name><name pos:line="178" pos:column="13">sub_req<pos:position pos:line="178" pos:column="20"/></name><operator pos:line="178" pos:column="20">-&gt;<pos:position pos:line="178" pos:column="25"/></operator><name pos:line="178" pos:column="22">content_encoding<pos:position pos:line="178" pos:column="38"/></name></name></expr>)<pos:position pos:line="178" pos:column="39"/></condition><then pos:line="178" pos:column="39"> <block pos:line="178" pos:column="40">{
            <expr_stmt><expr><name><name pos:line="179" pos:column="13">mime_info<pos:position pos:line="179" pos:column="22"/></name><operator pos:line="179" pos:column="22">.<pos:position pos:line="179" pos:column="23"/></operator><name pos:line="179" pos:column="23">content_encoding<pos:position pos:line="179" pos:column="39"/></name></name> <operator pos:line="179" pos:column="40">=<pos:position pos:line="179" pos:column="41"/></operator> <name><name pos:line="179" pos:column="42">sub_req<pos:position pos:line="179" pos:column="49"/></name><operator pos:line="179" pos:column="49">-&gt;<pos:position pos:line="179" pos:column="54"/></operator><name pos:line="179" pos:column="51">content_encoding<pos:position pos:line="179" pos:column="67"/></name></name></expr>;<pos:position pos:line="179" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="180" pos:column="10"/></block></then></if>
        <if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><name><name pos:line="181" pos:column="13">sub_req<pos:position pos:line="181" pos:column="20"/></name><operator pos:line="181" pos:column="20">-&gt;<pos:position pos:line="181" pos:column="25"/></operator><name pos:line="181" pos:column="22">content_languages<pos:position pos:line="181" pos:column="39"/></name></name></expr>)<pos:position pos:line="181" pos:column="40"/></condition><then pos:line="181" pos:column="40"> <block pos:line="181" pos:column="41">{
            <expr_stmt><expr><name><name pos:line="182" pos:column="13">mime_info<pos:position pos:line="182" pos:column="22"/></name><operator pos:line="182" pos:column="22">.<pos:position pos:line="182" pos:column="23"/></operator><name pos:line="182" pos:column="23">content_languages<pos:position pos:line="182" pos:column="40"/></name></name> <operator pos:line="182" pos:column="41">=<pos:position pos:line="182" pos:column="42"/></operator> <name><name pos:line="182" pos:column="43">sub_req<pos:position pos:line="182" pos:column="50"/></name><operator pos:line="182" pos:column="50">-&gt;<pos:position pos:line="182" pos:column="55"/></operator><name pos:line="182" pos:column="52">content_languages<pos:position pos:line="182" pos:column="69"/></name></name></expr>;<pos:position pos:line="182" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="183" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="185" pos:column="9">get_entry<pos:position pos:line="185" pos:column="18"/></name><argument_list pos:line="185" pos:column="18">(<argument><expr><name><name pos:line="185" pos:column="19">neg<pos:position pos:line="185" pos:column="22"/></name><operator pos:line="185" pos:column="22">-&gt;<pos:position pos:line="185" pos:column="27"/></operator><name pos:line="185" pos:column="24">pool<pos:position pos:line="185" pos:column="28"/></name></name></expr></argument>, <argument><expr><operator pos:line="185" pos:column="30">&amp;<pos:position pos:line="185" pos:column="35"/></operator><name pos:line="185" pos:column="31">accept_info<pos:position pos:line="185" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="185" pos:column="44">sub_req<pos:position pos:line="185" pos:column="51"/></name><operator pos:line="185" pos:column="51">-&gt;<pos:position pos:line="185" pos:column="56"/></operator><name pos:line="185" pos:column="53">content_type<pos:position pos:line="185" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="185" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="186" pos:column="9">set_mime_fields<pos:position pos:line="186" pos:column="24"/></name><argument_list pos:line="186" pos:column="24">(<argument><expr><operator pos:line="186" pos:column="25">&amp;<pos:position pos:line="186" pos:column="30"/></operator><name pos:line="186" pos:column="26">mime_info<pos:position pos:line="186" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="186" pos:column="37">&amp;<pos:position pos:line="186" pos:column="42"/></operator><name pos:line="186" pos:column="38">accept_info<pos:position pos:line="186" pos:column="49"/></name></expr></argument>)<pos:position pos:line="186" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="51"/></expr_stmt>

        <expr_stmt><expr><name pos:line="188" pos:column="9">new_var<pos:position pos:line="188" pos:column="16"/></name> <operator pos:line="188" pos:column="17">=<pos:position pos:line="188" pos:column="18"/></operator> <call><name pos:line="188" pos:column="19">apr_array_push<pos:position pos:line="188" pos:column="33"/></name><argument_list pos:line="188" pos:column="33">(<argument><expr><name><name pos:line="188" pos:column="34">neg<pos:position pos:line="188" pos:column="37"/></name><operator pos:line="188" pos:column="37">-&gt;<pos:position pos:line="188" pos:column="42"/></operator><name pos:line="188" pos:column="39">avail_vars<pos:position pos:line="188" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="188" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="189" pos:column="9">memcpy<pos:position pos:line="189" pos:column="15"/></name><argument_list pos:line="189" pos:column="15">(<argument><expr><name pos:line="189" pos:column="16">new_var<pos:position pos:line="189" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="189" pos:column="25">(<pos:position pos:line="189" pos:column="26"/></operator><name pos:line="189" pos:column="26">void<pos:position pos:line="189" pos:column="30"/></name> <operator pos:line="189" pos:column="31">*<pos:position pos:line="189" pos:column="32"/></operator><operator pos:line="189" pos:column="32">)<pos:position pos:line="189" pos:column="33"/></operator> <operator pos:line="189" pos:column="34">&amp;<pos:position pos:line="189" pos:column="39"/></operator><name pos:line="189" pos:column="35">mime_info<pos:position pos:line="189" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="189" pos:column="46">sizeof<argument_list pos:line="189" pos:column="52">(<argument><expr><name pos:line="189" pos:column="53">var_rec<pos:position pos:line="189" pos:column="60"/></name></expr></argument>)<pos:position pos:line="189" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="189" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="63"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="191" pos:column="9">neg<pos:position pos:line="191" pos:column="12"/></name><operator pos:line="191" pos:column="12">-&gt;<pos:position pos:line="191" pos:column="17"/></operator><name pos:line="191" pos:column="14">count_multiviews_variants<pos:position pos:line="191" pos:column="39"/></name></name><operator pos:line="191" pos:column="39">++<pos:position pos:line="191" pos:column="41"/></operator></expr>;<pos:position pos:line="191" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="193" pos:column="9">clean_var_rec<pos:position pos:line="193" pos:column="22"/></name><argument_list pos:line="193" pos:column="22">(<argument><expr><operator pos:line="193" pos:column="23">&amp;<pos:position pos:line="193" pos:column="28"/></operator><name pos:line="193" pos:column="24">mime_info<pos:position pos:line="193" pos:column="33"/></name></expr></argument>)<pos:position pos:line="193" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="194" pos:column="6"/></block>

    <expr_stmt><expr><call><name pos:line="196" pos:column="5">apr_dir_close<pos:position pos:line="196" pos:column="18"/></name><argument_list pos:line="196" pos:column="18">(<argument><expr><name pos:line="196" pos:column="19">dirp<pos:position pos:line="196" pos:column="23"/></name></expr></argument>)<pos:position pos:line="196" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="198" pos:column="5">/* We found some file names that matched.  None could be served.
     * Rather than fall out to autoindex or some other mapper, this
     * request must die.
     */</comment>
    <if pos:line="202" pos:column="5">if <condition pos:line="202" pos:column="8">(<expr><name pos:line="202" pos:column="9">anymatch<pos:position pos:line="202" pos:column="17"/></name> <operator pos:line="202" pos:column="18">&amp;&amp;<pos:position pos:line="202" pos:column="28"/></operator> <operator pos:line="202" pos:column="21">!<pos:position pos:line="202" pos:column="22"/></operator><name><name pos:line="202" pos:column="22">neg<pos:position pos:line="202" pos:column="25"/></name><operator pos:line="202" pos:column="25">-&gt;<pos:position pos:line="202" pos:column="30"/></operator><name pos:line="202" pos:column="27">avail_vars<pos:position pos:line="202" pos:column="37"/></name><operator pos:line="202" pos:column="37">-&gt;<pos:position pos:line="202" pos:column="42"/></operator><name pos:line="202" pos:column="39">nelts<pos:position pos:line="202" pos:column="44"/></name></name></expr>)<pos:position pos:line="202" pos:column="45"/></condition><then pos:line="202" pos:column="45"> <block pos:line="202" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="203" pos:column="9">ap_log_rerror<pos:position pos:line="203" pos:column="22"/></name><argument_list pos:line="203" pos:column="22">(<argument><expr><name pos:line="203" pos:column="23">APLOG_MARK<pos:position pos:line="203" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="203" pos:column="35">APLOG_ERR<pos:position pos:line="203" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="203" pos:column="46">0<pos:position pos:line="203" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="203" pos:column="49">r<pos:position pos:line="203" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="204" pos:column="23">"Negotiation: discovered file(s) matching request: %s"<pos:position pos:line="204" pos:column="77"/></literal>
                      <literal type="string" pos:line="205" pos:column="23">" (None could be negotiated)."<pos:position pos:line="205" pos:column="53"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="206" pos:column="23">r<pos:position pos:line="206" pos:column="24"/></name><operator pos:line="206" pos:column="24">-&gt;<pos:position pos:line="206" pos:column="29"/></operator><name pos:line="206" pos:column="26">filename<pos:position pos:line="206" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="206" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="36"/></expr_stmt>
        <return pos:line="207" pos:column="9">return <expr><name pos:line="207" pos:column="16">HTTP_NOT_FOUND<pos:position pos:line="207" pos:column="30"/></name></expr>;<pos:position pos:line="207" pos:column="31"/></return>
    }<pos:position pos:line="208" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="210" pos:column="5">set_vlist_validator<pos:position pos:line="210" pos:column="24"/></name><argument_list pos:line="210" pos:column="24">(<argument><expr><name pos:line="210" pos:column="25">r<pos:position pos:line="210" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="28">r<pos:position pos:line="210" pos:column="29"/></name></expr></argument>)<pos:position pos:line="210" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="212" pos:column="5">/* Sort the variants into a canonical order.  The negotiation
     * result sometimes depends on the order of the variants.  By
     * sorting the variants into a canonical order, rather than using
     * the order in which readdir() happens to return them, we ensure
     * that the negotiation result will be consistent over filesystem
     * backup/restores and over all mirror sites.
     */</comment>

    <expr_stmt><expr><call><name pos:line="220" pos:column="5">qsort<pos:position pos:line="220" pos:column="10"/></name><argument_list pos:line="220" pos:column="10">(<argument><expr><operator pos:line="220" pos:column="11">(<pos:position pos:line="220" pos:column="12"/></operator><name pos:line="220" pos:column="12">void<pos:position pos:line="220" pos:column="16"/></name> <operator pos:line="220" pos:column="17">*<pos:position pos:line="220" pos:column="18"/></operator><operator pos:line="220" pos:column="18">)<pos:position pos:line="220" pos:column="19"/></operator> <name><name pos:line="220" pos:column="20">neg<pos:position pos:line="220" pos:column="23"/></name><operator pos:line="220" pos:column="23">-&gt;<pos:position pos:line="220" pos:column="28"/></operator><name pos:line="220" pos:column="25">avail_vars<pos:position pos:line="220" pos:column="35"/></name><operator pos:line="220" pos:column="35">-&gt;<pos:position pos:line="220" pos:column="40"/></operator><name pos:line="220" pos:column="37">elts<pos:position pos:line="220" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="43">neg<pos:position pos:line="220" pos:column="46"/></name><operator pos:line="220" pos:column="46">-&gt;<pos:position pos:line="220" pos:column="51"/></operator><name pos:line="220" pos:column="48">avail_vars<pos:position pos:line="220" pos:column="58"/></name><operator pos:line="220" pos:column="58">-&gt;<pos:position pos:line="220" pos:column="63"/></operator><name pos:line="220" pos:column="60">nelts<pos:position pos:line="220" pos:column="65"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="221" pos:column="11">sizeof<argument_list pos:line="221" pos:column="17">(<argument><expr><name pos:line="221" pos:column="18">var_rec<pos:position pos:line="221" pos:column="25"/></name></expr></argument>)<pos:position pos:line="221" pos:column="26"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="221" pos:column="28">(<pos:position pos:line="221" pos:column="29"/></operator><call><call><name pos:line="221" pos:column="29">int<pos:position pos:line="221" pos:column="32"/></name> <argument_list pos:line="221" pos:column="33">(<argument><expr><operator pos:line="221" pos:column="34">*<pos:position pos:line="221" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="221" pos:column="36"/></argument_list></call><argument_list pos:line="221" pos:column="36">(<argument><expr><specifier pos:line="221" pos:column="37">const<pos:position pos:line="221" pos:column="42"/></specifier> <name pos:line="221" pos:column="43">void<pos:position pos:line="221" pos:column="47"/></name> <operator pos:line="221" pos:column="48">*<pos:position pos:line="221" pos:column="49"/></operator></expr></argument>, <argument><expr><specifier pos:line="221" pos:column="51">const<pos:position pos:line="221" pos:column="56"/></specifier> <name pos:line="221" pos:column="57">void<pos:position pos:line="221" pos:column="61"/></name> <operator pos:line="221" pos:column="62">*<pos:position pos:line="221" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="221" pos:column="64"/></argument_list></call><operator pos:line="221" pos:column="64">)<pos:position pos:line="221" pos:column="65"/></operator> <name pos:line="221" pos:column="66">variantsortf<pos:position pos:line="221" pos:column="78"/></name></expr></argument>)<pos:position pos:line="221" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="80"/></expr_stmt>

    <return pos:line="223" pos:column="5">return <expr><name pos:line="223" pos:column="12">OK<pos:position pos:line="223" pos:column="14"/></name></expr>;<pos:position pos:line="223" pos:column="15"/></return>
}<pos:position pos:line="224" pos:column="2"/></block></then></if>


<comment type="block" format="doxygen" pos:line="227" pos:column="1">/*****************************************************************
 * And now for the code you've been waiting for... actually
 * finding a match to the client's requirements.
 */</comment>

<comment type="block" pos:line="232" pos:column="1">/* Matching MIME types ... the star/star and foo/star commenting conventions
 * are implemented here.  (You know what I mean by star/star, but just
 * try mentioning those three characters in a C comment).  Using strcmp()
 * is legit, because everything has already been smashed to lowercase.
 *
 * Note also that if we get an exact match on the media type, we update
 * level_matched for use in level_cmp below...
 *
 * We also give a value for mime_stars, which is used later. It should
 * be 1 for star/star, 2 for type/star and 3 for type/subtype.
 */</comment>

<function><specifier pos:line="244" pos:column="1">static<pos:position pos:line="244" pos:column="7"/></specifier> <type><name pos:line="244" pos:column="8">int<pos:position pos:line="244" pos:column="11"/></name></type> <name pos:line="244" pos:column="12">mime_match<pos:position pos:line="244" pos:column="22"/></name><parameter_list pos:line="244" pos:column="22">(<parameter><decl><type><name pos:line="244" pos:column="23">accept_rec<pos:position pos:line="244" pos:column="33"/></name> <modifier pos:line="244" pos:column="34">*<pos:position pos:line="244" pos:column="35"/></modifier></type><name pos:line="244" pos:column="35">accept_r<pos:position pos:line="244" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="244" pos:column="45">var_rec<pos:position pos:line="244" pos:column="52"/></name> <modifier pos:line="244" pos:column="53">*<pos:position pos:line="244" pos:column="54"/></modifier></type><name pos:line="244" pos:column="54">avail<pos:position pos:line="244" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="244" pos:column="60"/></parameter_list>
<block pos:line="245" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="246" pos:column="5">const<pos:position pos:line="246" pos:column="10"/></specifier> <name pos:line="246" pos:column="11">char<pos:position pos:line="246" pos:column="15"/></name> <modifier pos:line="246" pos:column="16">*<pos:position pos:line="246" pos:column="17"/></modifier></type><name pos:line="246" pos:column="17">accept_type<pos:position pos:line="246" pos:column="28"/></name> <init pos:line="246" pos:column="29">= <expr><name><name pos:line="246" pos:column="31">accept_r<pos:position pos:line="246" pos:column="39"/></name><operator pos:line="246" pos:column="39">-&gt;<pos:position pos:line="246" pos:column="44"/></operator><name pos:line="246" pos:column="41">name<pos:position pos:line="246" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="246" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="247" pos:column="5">const<pos:position pos:line="247" pos:column="10"/></specifier> <name pos:line="247" pos:column="11">char<pos:position pos:line="247" pos:column="15"/></name> <modifier pos:line="247" pos:column="16">*<pos:position pos:line="247" pos:column="17"/></modifier></type><name pos:line="247" pos:column="17">avail_type<pos:position pos:line="247" pos:column="27"/></name> <init pos:line="247" pos:column="28">= <expr><name><name pos:line="247" pos:column="30">avail<pos:position pos:line="247" pos:column="35"/></name><operator pos:line="247" pos:column="35">-&gt;<pos:position pos:line="247" pos:column="40"/></operator><name pos:line="247" pos:column="37">mime_type<pos:position pos:line="247" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="247" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="248" pos:column="5">int<pos:position pos:line="248" pos:column="8"/></name></type> <name pos:line="248" pos:column="9">len<pos:position pos:line="248" pos:column="12"/></name> <init pos:line="248" pos:column="13">= <expr><call><name pos:line="248" pos:column="15">strlen<pos:position pos:line="248" pos:column="21"/></name><argument_list pos:line="248" pos:column="21">(<argument><expr><name pos:line="248" pos:column="22">accept_type<pos:position pos:line="248" pos:column="33"/></name></expr></argument>)<pos:position pos:line="248" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="248" pos:column="35"/></decl_stmt>

    <if pos:line="250" pos:column="5">if <condition pos:line="250" pos:column="8">(<expr><name><name pos:line="250" pos:column="9">accept_type<pos:position pos:line="250" pos:column="20"/></name><index pos:line="250" pos:column="20">[<expr><literal type="number" pos:line="250" pos:column="21">0<pos:position pos:line="250" pos:column="22"/></literal></expr>]<pos:position pos:line="250" pos:column="23"/></index></name> <operator pos:line="250" pos:column="24">==<pos:position pos:line="250" pos:column="26"/></operator> <literal type="char" pos:line="250" pos:column="27">'*'<pos:position pos:line="250" pos:column="30"/></literal></expr>)<pos:position pos:line="250" pos:column="31"/></condition><then pos:line="250" pos:column="31"> <block pos:line="250" pos:column="32">{        <comment type="block" pos:line="250" pos:column="41">/* Anything matches star/star */</comment>
        <if pos:line="251" pos:column="9">if <condition pos:line="251" pos:column="12">(<expr><name><name pos:line="251" pos:column="13">avail<pos:position pos:line="251" pos:column="18"/></name><operator pos:line="251" pos:column="18">-&gt;<pos:position pos:line="251" pos:column="23"/></operator><name pos:line="251" pos:column="20">mime_stars<pos:position pos:line="251" pos:column="30"/></name></name> <operator pos:line="251" pos:column="31">&lt;<pos:position pos:line="251" pos:column="35"/></operator> <literal type="number" pos:line="251" pos:column="33">1<pos:position pos:line="251" pos:column="34"/></literal></expr>)<pos:position pos:line="251" pos:column="35"/></condition><then pos:line="251" pos:column="35"> <block pos:line="251" pos:column="36">{
            <expr_stmt><expr><name><name pos:line="252" pos:column="13">avail<pos:position pos:line="252" pos:column="18"/></name><operator pos:line="252" pos:column="18">-&gt;<pos:position pos:line="252" pos:column="23"/></operator><name pos:line="252" pos:column="20">mime_stars<pos:position pos:line="252" pos:column="30"/></name></name> <operator pos:line="252" pos:column="31">=<pos:position pos:line="252" pos:column="32"/></operator> <literal type="number" pos:line="252" pos:column="33">1<pos:position pos:line="252" pos:column="34"/></literal></expr>;<pos:position pos:line="252" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="253" pos:column="10"/></block></then></if>
        <return pos:line="254" pos:column="9">return <expr><literal type="number" pos:line="254" pos:column="16">1<pos:position pos:line="254" pos:column="17"/></literal></expr>;<pos:position pos:line="254" pos:column="18"/></return>
    }<pos:position pos:line="255" pos:column="6"/></block></then>
    <elseif pos:line="256" pos:column="5">else <if pos:line="256" pos:column="10">if <condition pos:line="256" pos:column="13">(<expr><operator pos:line="256" pos:column="14">(<pos:position pos:line="256" pos:column="15"/></operator><name><name pos:line="256" pos:column="15">accept_type<pos:position pos:line="256" pos:column="26"/></name><index pos:line="256" pos:column="26">[<expr><name pos:line="256" pos:column="27">len<pos:position pos:line="256" pos:column="30"/></name> <operator pos:line="256" pos:column="31">-<pos:position pos:line="256" pos:column="32"/></operator> <literal type="number" pos:line="256" pos:column="33">1<pos:position pos:line="256" pos:column="34"/></literal></expr>]<pos:position pos:line="256" pos:column="35"/></index></name> <operator pos:line="256" pos:column="36">==<pos:position pos:line="256" pos:column="38"/></operator> <literal type="char" pos:line="256" pos:column="39">'*'<pos:position pos:line="256" pos:column="42"/></literal><operator pos:line="256" pos:column="42">)<pos:position pos:line="256" pos:column="43"/></operator> <operator pos:line="256" pos:column="44">&amp;&amp;<pos:position pos:line="256" pos:column="54"/></operator>
             <operator pos:line="257" pos:column="14">!<pos:position pos:line="257" pos:column="15"/></operator><call><name pos:line="257" pos:column="15">strncmp<pos:position pos:line="257" pos:column="22"/></name><argument_list pos:line="257" pos:column="22">(<argument><expr><name pos:line="257" pos:column="23">accept_type<pos:position pos:line="257" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="36">avail_type<pos:position pos:line="257" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="48">len<pos:position pos:line="257" pos:column="51"/></name> <operator pos:line="257" pos:column="52">-<pos:position pos:line="257" pos:column="53"/></operator> <literal type="number" pos:line="257" pos:column="54">2<pos:position pos:line="257" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="257" pos:column="57"/></condition><then pos:line="257" pos:column="57"> <block pos:line="257" pos:column="58">{
        <if pos:line="258" pos:column="9">if <condition pos:line="258" pos:column="12">(<expr><name><name pos:line="258" pos:column="13">avail<pos:position pos:line="258" pos:column="18"/></name><operator pos:line="258" pos:column="18">-&gt;<pos:position pos:line="258" pos:column="23"/></operator><name pos:line="258" pos:column="20">mime_stars<pos:position pos:line="258" pos:column="30"/></name></name> <operator pos:line="258" pos:column="31">&lt;<pos:position pos:line="258" pos:column="35"/></operator> <literal type="number" pos:line="258" pos:column="33">2<pos:position pos:line="258" pos:column="34"/></literal></expr>)<pos:position pos:line="258" pos:column="35"/></condition><then pos:line="258" pos:column="35"> <block pos:line="258" pos:column="36">{
            <expr_stmt><expr><name><name pos:line="259" pos:column="13">avail<pos:position pos:line="259" pos:column="18"/></name><operator pos:line="259" pos:column="18">-&gt;<pos:position pos:line="259" pos:column="23"/></operator><name pos:line="259" pos:column="20">mime_stars<pos:position pos:line="259" pos:column="30"/></name></name> <operator pos:line="259" pos:column="31">=<pos:position pos:line="259" pos:column="32"/></operator> <literal type="number" pos:line="259" pos:column="33">2<pos:position pos:line="259" pos:column="34"/></literal></expr>;<pos:position pos:line="259" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="260" pos:column="10"/></block></then></if>
        <return pos:line="261" pos:column="9">return <expr><literal type="number" pos:line="261" pos:column="16">1<pos:position pos:line="261" pos:column="17"/></literal></expr>;<pos:position pos:line="261" pos:column="18"/></return>
    }<pos:position pos:line="262" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="263" pos:column="5">else <if pos:line="263" pos:column="10">if <condition pos:line="263" pos:column="13">(<expr><operator pos:line="263" pos:column="14">!<pos:position pos:line="263" pos:column="15"/></operator><call><name pos:line="263" pos:column="15">strcmp<pos:position pos:line="263" pos:column="21"/></name><argument_list pos:line="263" pos:column="21">(<argument><expr><name pos:line="263" pos:column="22">accept_type<pos:position pos:line="263" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="35">avail_type<pos:position pos:line="263" pos:column="45"/></name></expr></argument>)<pos:position pos:line="263" pos:column="46"/></argument_list></call>
             <operator pos:line="264" pos:column="14">||<pos:position pos:line="264" pos:column="16"/></operator> <operator pos:line="264" pos:column="17">(<pos:position pos:line="264" pos:column="18"/></operator><operator pos:line="264" pos:column="18">!<pos:position pos:line="264" pos:column="19"/></operator><call><name pos:line="264" pos:column="19">strcmp<pos:position pos:line="264" pos:column="25"/></name><argument_list pos:line="264" pos:column="25">(<argument><expr><name pos:line="264" pos:column="26">accept_type<pos:position pos:line="264" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="264" pos:column="39">"text/html"<pos:position pos:line="264" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="264" pos:column="51"/></argument_list></call>
                 <operator pos:line="265" pos:column="18">&amp;&amp;<pos:position pos:line="265" pos:column="28"/></operator> <operator pos:line="265" pos:column="21">(<pos:position pos:line="265" pos:column="22"/></operator><operator pos:line="265" pos:column="22">!<pos:position pos:line="265" pos:column="23"/></operator><call><name pos:line="265" pos:column="23">strcmp<pos:position pos:line="265" pos:column="29"/></name><argument_list pos:line="265" pos:column="29">(<argument><expr><name pos:line="265" pos:column="30">avail_type<pos:position pos:line="265" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="42">INCLUDES_MAGIC_TYPE<pos:position pos:line="265" pos:column="61"/></name></expr></argument>)<pos:position pos:line="265" pos:column="62"/></argument_list></call>
                     <operator pos:line="266" pos:column="22">||<pos:position pos:line="266" pos:column="24"/></operator> <operator pos:line="266" pos:column="25">!<pos:position pos:line="266" pos:column="26"/></operator><call><name pos:line="266" pos:column="26">strcmp<pos:position pos:line="266" pos:column="32"/></name><argument_list pos:line="266" pos:column="32">(<argument><expr><name pos:line="266" pos:column="33">avail_type<pos:position pos:line="266" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="266" pos:column="45">INCLUDES_MAGIC_TYPE3<pos:position pos:line="266" pos:column="65"/></name></expr></argument>)<pos:position pos:line="266" pos:column="66"/></argument_list></call><operator pos:line="266" pos:column="66">)<pos:position pos:line="266" pos:column="67"/></operator><operator pos:line="266" pos:column="67">)<pos:position pos:line="266" pos:column="68"/></operator></expr>)<pos:position pos:line="266" pos:column="69"/></condition><then pos:line="266" pos:column="69"> <block pos:line="266" pos:column="70">{
        <if pos:line="267" pos:column="9">if <condition pos:line="267" pos:column="12">(<expr><name><name pos:line="267" pos:column="13">accept_r<pos:position pos:line="267" pos:column="21"/></name><operator pos:line="267" pos:column="21">-&gt;<pos:position pos:line="267" pos:column="26"/></operator><name pos:line="267" pos:column="23">level<pos:position pos:line="267" pos:column="28"/></name></name> <operator pos:line="267" pos:column="29">&gt;=<pos:position pos:line="267" pos:column="34"/></operator> <name><name pos:line="267" pos:column="32">avail<pos:position pos:line="267" pos:column="37"/></name><operator pos:line="267" pos:column="37">-&gt;<pos:position pos:line="267" pos:column="42"/></operator><name pos:line="267" pos:column="39">level<pos:position pos:line="267" pos:column="44"/></name></name></expr>)<pos:position pos:line="267" pos:column="45"/></condition><then pos:line="267" pos:column="45"> <block pos:line="267" pos:column="46">{
            <expr_stmt><expr><name><name pos:line="268" pos:column="13">avail<pos:position pos:line="268" pos:column="18"/></name><operator pos:line="268" pos:column="18">-&gt;<pos:position pos:line="268" pos:column="23"/></operator><name pos:line="268" pos:column="20">level_matched<pos:position pos:line="268" pos:column="33"/></name></name> <operator pos:line="268" pos:column="34">=<pos:position pos:line="268" pos:column="35"/></operator> <name><name pos:line="268" pos:column="36">avail<pos:position pos:line="268" pos:column="41"/></name><operator pos:line="268" pos:column="41">-&gt;<pos:position pos:line="268" pos:column="46"/></operator><name pos:line="268" pos:column="43">level<pos:position pos:line="268" pos:column="48"/></name></name></expr>;<pos:position pos:line="268" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="269" pos:column="13">avail<pos:position pos:line="269" pos:column="18"/></name><operator pos:line="269" pos:column="18">-&gt;<pos:position pos:line="269" pos:column="23"/></operator><name pos:line="269" pos:column="20">mime_stars<pos:position pos:line="269" pos:column="30"/></name></name> <operator pos:line="269" pos:column="31">=<pos:position pos:line="269" pos:column="32"/></operator> <literal type="number" pos:line="269" pos:column="33">3<pos:position pos:line="269" pos:column="34"/></literal></expr>;<pos:position pos:line="269" pos:column="35"/></expr_stmt>
            <return pos:line="270" pos:column="13">return <expr><literal type="number" pos:line="270" pos:column="20">1<pos:position pos:line="270" pos:column="21"/></literal></expr>;<pos:position pos:line="270" pos:column="22"/></return>
        }<pos:position pos:line="271" pos:column="10"/></block></then></if>
    }<pos:position pos:line="272" pos:column="6"/></block></then></if></elseif></if>

    <return pos:line="274" pos:column="5">return <expr><name pos:line="274" pos:column="12">OK<pos:position pos:line="274" pos:column="14"/></name></expr>;<pos:position pos:line="274" pos:column="15"/></return>
}<pos:position pos:line="275" pos:column="2"/></block></function>

<comment type="block" pos:line="277" pos:column="1">/* This code implements a piece of the tie-breaking algorithm between
 * variants of equal quality.  This piece is the treatment of variants
 * of the same base media type, but different levels.  What we want to
 * return is the variant at the highest level that the client explicitly
 * claimed to accept.
 *
 * If all the variants available are at a higher level than that, or if
 * the client didn't say anything specific about this media type at all
 * and these variants just got in on a wildcard, we prefer the lowest
 * level, on grounds that that's the one that the client is least likely
 * to choke on.
 *
 * (This is all motivated by treatment of levels in HTML --- we only
 * want to give level 3 to browsers that explicitly ask for it; browsers
 * that don't, including HTTP/0.9 browsers that only get the implicit
 * "Accept: * / *" [space added to avoid confusing cpp --- no, that
 * syntax doesn't really work] should get HTML2 if available).
 *
 * (Note that this code only comes into play when we are choosing among
 * variants of equal quality, where the draft standard gives us a fair
 * bit of leeway about what to do.  It ain't specified by the standard;
 * rather, it is a choice made by this server about what to do in cases
 * where the standard does not specify a unique course of action).
 */</comment>

<function><specifier pos:line="302" pos:column="1">static<pos:position pos:line="302" pos:column="7"/></specifier> <type><name pos:line="302" pos:column="8">int<pos:position pos:line="302" pos:column="11"/></name></type> <name pos:line="302" pos:column="12">level_cmp<pos:position pos:line="302" pos:column="21"/></name><parameter_list pos:line="302" pos:column="21">(<parameter><decl><type><name pos:line="302" pos:column="22">var_rec<pos:position pos:line="302" pos:column="29"/></name> <modifier pos:line="302" pos:column="30">*<pos:position pos:line="302" pos:column="31"/></modifier></type><name pos:line="302" pos:column="31">var1<pos:position pos:line="302" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="302" pos:column="37">var_rec<pos:position pos:line="302" pos:column="44"/></name> <modifier pos:line="302" pos:column="45">*<pos:position pos:line="302" pos:column="46"/></modifier></type><name pos:line="302" pos:column="46">var2<pos:position pos:line="302" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="302" pos:column="51"/></parameter_list>
<block pos:line="303" pos:column="1">{
    <comment type="block" pos:line="304" pos:column="5">/* Levels are only comparable between matching media types */</comment>

    <if pos:line="306" pos:column="5">if <condition pos:line="306" pos:column="8">(<expr><name><name pos:line="306" pos:column="9">var1<pos:position pos:line="306" pos:column="13"/></name><operator pos:line="306" pos:column="13">-&gt;<pos:position pos:line="306" pos:column="18"/></operator><name pos:line="306" pos:column="15">is_pseudo_html<pos:position pos:line="306" pos:column="29"/></name></name> <operator pos:line="306" pos:column="30">&amp;&amp;<pos:position pos:line="306" pos:column="40"/></operator> <operator pos:line="306" pos:column="33">!<pos:position pos:line="306" pos:column="34"/></operator><name><name pos:line="306" pos:column="34">var2<pos:position pos:line="306" pos:column="38"/></name><operator pos:line="306" pos:column="38">-&gt;<pos:position pos:line="306" pos:column="43"/></operator><name pos:line="306" pos:column="40">is_pseudo_html<pos:position pos:line="306" pos:column="54"/></name></name></expr>)<pos:position pos:line="306" pos:column="55"/></condition><then pos:line="306" pos:column="55"> <block pos:line="306" pos:column="56">{
        <return pos:line="307" pos:column="9">return <expr><literal type="number" pos:line="307" pos:column="16">0<pos:position pos:line="307" pos:column="17"/></literal></expr>;<pos:position pos:line="307" pos:column="18"/></return>
    }<pos:position pos:line="308" pos:column="6"/></block></then></if>

    <if pos:line="310" pos:column="5">if <condition pos:line="310" pos:column="8">(<expr><operator pos:line="310" pos:column="9">!<pos:position pos:line="310" pos:column="10"/></operator><name><name pos:line="310" pos:column="10">var1<pos:position pos:line="310" pos:column="14"/></name><operator pos:line="310" pos:column="14">-&gt;<pos:position pos:line="310" pos:column="19"/></operator><name pos:line="310" pos:column="16">is_pseudo_html<pos:position pos:line="310" pos:column="30"/></name></name> <operator pos:line="310" pos:column="31">&amp;&amp;<pos:position pos:line="310" pos:column="41"/></operator> <call><name pos:line="310" pos:column="34">strcmp<pos:position pos:line="310" pos:column="40"/></name><argument_list pos:line="310" pos:column="40">(<argument><expr><name><name pos:line="310" pos:column="41">var1<pos:position pos:line="310" pos:column="45"/></name><operator pos:line="310" pos:column="45">-&gt;<pos:position pos:line="310" pos:column="50"/></operator><name pos:line="310" pos:column="47">mime_type<pos:position pos:line="310" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="310" pos:column="58">var2<pos:position pos:line="310" pos:column="62"/></name><operator pos:line="310" pos:column="62">-&gt;<pos:position pos:line="310" pos:column="67"/></operator><name pos:line="310" pos:column="64">mime_type<pos:position pos:line="310" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="310" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="310" pos:column="75"/></condition><then pos:line="310" pos:column="75"> <block pos:line="310" pos:column="76">{
        <return pos:line="311" pos:column="9">return <expr><literal type="number" pos:line="311" pos:column="16">0<pos:position pos:line="311" pos:column="17"/></literal></expr>;<pos:position pos:line="311" pos:column="18"/></return>
    }<pos:position pos:line="312" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="313" pos:column="5">/* The result of the above if statements is that, if we get to
     * here, both variants have the same mime_type or both are
     * pseudo-html.
     */</comment>

    <comment type="block" pos:line="318" pos:column="5">/* Take highest level that matched, if either did match. */</comment>

    <if pos:line="320" pos:column="5">if <condition pos:line="320" pos:column="8">(<expr><name><name pos:line="320" pos:column="9">var1<pos:position pos:line="320" pos:column="13"/></name><operator pos:line="320" pos:column="13">-&gt;<pos:position pos:line="320" pos:column="18"/></operator><name pos:line="320" pos:column="15">level_matched<pos:position pos:line="320" pos:column="28"/></name></name> <operator pos:line="320" pos:column="29">&gt;<pos:position pos:line="320" pos:column="33"/></operator> <name><name pos:line="320" pos:column="31">var2<pos:position pos:line="320" pos:column="35"/></name><operator pos:line="320" pos:column="35">-&gt;<pos:position pos:line="320" pos:column="40"/></operator><name pos:line="320" pos:column="37">level_matched<pos:position pos:line="320" pos:column="50"/></name></name></expr>)<pos:position pos:line="320" pos:column="51"/></condition><then pos:line="320" pos:column="51"> <block pos:line="320" pos:column="52">{
        <return pos:line="321" pos:column="9">return <expr><literal type="number" pos:line="321" pos:column="16">1<pos:position pos:line="321" pos:column="17"/></literal></expr>;<pos:position pos:line="321" pos:column="18"/></return>
    }<pos:position pos:line="322" pos:column="6"/></block></then></if>
    <if pos:line="323" pos:column="5">if <condition pos:line="323" pos:column="8">(<expr><name><name pos:line="323" pos:column="9">var1<pos:position pos:line="323" pos:column="13"/></name><operator pos:line="323" pos:column="13">-&gt;<pos:position pos:line="323" pos:column="18"/></operator><name pos:line="323" pos:column="15">level_matched<pos:position pos:line="323" pos:column="28"/></name></name> <operator pos:line="323" pos:column="29">&lt;<pos:position pos:line="323" pos:column="33"/></operator> <name><name pos:line="323" pos:column="31">var2<pos:position pos:line="323" pos:column="35"/></name><operator pos:line="323" pos:column="35">-&gt;<pos:position pos:line="323" pos:column="40"/></operator><name pos:line="323" pos:column="37">level_matched<pos:position pos:line="323" pos:column="50"/></name></name></expr>)<pos:position pos:line="323" pos:column="51"/></condition><then pos:line="323" pos:column="51"> <block pos:line="323" pos:column="52">{
        <return pos:line="324" pos:column="9">return <expr><operator pos:line="324" pos:column="16">-<pos:position pos:line="324" pos:column="17"/></operator><literal type="number" pos:line="324" pos:column="17">1<pos:position pos:line="324" pos:column="18"/></literal></expr>;<pos:position pos:line="324" pos:column="19"/></return>
    }<pos:position pos:line="325" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="327" pos:column="5">/* Neither matched.  Take lowest level, if there's a difference. */</comment>

    <if pos:line="329" pos:column="5">if <condition pos:line="329" pos:column="8">(<expr><name><name pos:line="329" pos:column="9">var1<pos:position pos:line="329" pos:column="13"/></name><operator pos:line="329" pos:column="13">-&gt;<pos:position pos:line="329" pos:column="18"/></operator><name pos:line="329" pos:column="15">level<pos:position pos:line="329" pos:column="20"/></name></name> <operator pos:line="329" pos:column="21">&lt;<pos:position pos:line="329" pos:column="25"/></operator> <name><name pos:line="329" pos:column="23">var2<pos:position pos:line="329" pos:column="27"/></name><operator pos:line="329" pos:column="27">-&gt;<pos:position pos:line="329" pos:column="32"/></operator><name pos:line="329" pos:column="29">level<pos:position pos:line="329" pos:column="34"/></name></name></expr>)<pos:position pos:line="329" pos:column="35"/></condition><then pos:line="329" pos:column="35"> <block pos:line="329" pos:column="36">{
        <return pos:line="330" pos:column="9">return <expr><literal type="number" pos:line="330" pos:column="16">1<pos:position pos:line="330" pos:column="17"/></literal></expr>;<pos:position pos:line="330" pos:column="18"/></return>
    }<pos:position pos:line="331" pos:column="6"/></block></then></if>
    <if pos:line="332" pos:column="5">if <condition pos:line="332" pos:column="8">(<expr><name><name pos:line="332" pos:column="9">var1<pos:position pos:line="332" pos:column="13"/></name><operator pos:line="332" pos:column="13">-&gt;<pos:position pos:line="332" pos:column="18"/></operator><name pos:line="332" pos:column="15">level<pos:position pos:line="332" pos:column="20"/></name></name> <operator pos:line="332" pos:column="21">&gt;<pos:position pos:line="332" pos:column="25"/></operator> <name><name pos:line="332" pos:column="23">var2<pos:position pos:line="332" pos:column="27"/></name><operator pos:line="332" pos:column="27">-&gt;<pos:position pos:line="332" pos:column="32"/></operator><name pos:line="332" pos:column="29">level<pos:position pos:line="332" pos:column="34"/></name></name></expr>)<pos:position pos:line="332" pos:column="35"/></condition><then pos:line="332" pos:column="35"> <block pos:line="332" pos:column="36">{
        <return pos:line="333" pos:column="9">return <expr><operator pos:line="333" pos:column="16">-<pos:position pos:line="333" pos:column="17"/></operator><literal type="number" pos:line="333" pos:column="17">1<pos:position pos:line="333" pos:column="18"/></literal></expr>;<pos:position pos:line="333" pos:column="19"/></return>
    }<pos:position pos:line="334" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="336" pos:column="5">/* Tied */</comment>

    <return pos:line="338" pos:column="5">return <expr><literal type="number" pos:line="338" pos:column="12">0<pos:position pos:line="338" pos:column="13"/></literal></expr>;<pos:position pos:line="338" pos:column="14"/></return>
}<pos:position pos:line="339" pos:column="2"/></block></function>

<comment type="block" pos:line="341" pos:column="1">/* Finding languages.  The main entry point is set_language_quality()
 * which is called for each variant. It sets two elements in the
 * variant record:
 *    language_quality  - the 'q' value of the 'best' matching language
 *                        from Accept-Language: header (HTTP/1.1)
 *    lang_index    -     Non-negotiated language priority, using
 *                        position of language on the Accept-Language:
 *                        header, if present, else LanguagePriority
 *                        directive order.
 *
 * When we do the variant checking for best variant, we use language
 * quality first, and if a tie, language_index next (this only applies
 * when _not_ using the RVSA/1.0 algorithm). If using the RVSA/1.0
 * algorithm, lang_index is never used.
 *
 * set_language_quality() calls find_lang_index() and find_default_index()
 * to set lang_index.
 */</comment>

<function><specifier pos:line="360" pos:column="1">static<pos:position pos:line="360" pos:column="7"/></specifier> <type><name pos:line="360" pos:column="8">int<pos:position pos:line="360" pos:column="11"/></name></type> <name pos:line="360" pos:column="12">find_lang_index<pos:position pos:line="360" pos:column="27"/></name><parameter_list pos:line="360" pos:column="27">(<parameter><decl><type><name pos:line="360" pos:column="28">apr_array_header_t<pos:position pos:line="360" pos:column="46"/></name> <modifier pos:line="360" pos:column="47">*<pos:position pos:line="360" pos:column="48"/></modifier></type><name pos:line="360" pos:column="48">accept_langs<pos:position pos:line="360" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="360" pos:column="62">char<pos:position pos:line="360" pos:column="66"/></name> <modifier pos:line="360" pos:column="67">*<pos:position pos:line="360" pos:column="68"/></modifier></type><name pos:line="360" pos:column="68">lang<pos:position pos:line="360" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="360" pos:column="73"/></parameter_list>
<block pos:line="361" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="362" pos:column="5">const<pos:position pos:line="362" pos:column="10"/></specifier> <name pos:line="362" pos:column="11">char<pos:position pos:line="362" pos:column="15"/></name> <modifier pos:line="362" pos:column="16">*<pos:position pos:line="362" pos:column="17"/></modifier><modifier pos:line="362" pos:column="17">*<pos:position pos:line="362" pos:column="18"/></modifier></type><name pos:line="362" pos:column="18">alang<pos:position pos:line="362" pos:column="23"/></name></decl>;<pos:position pos:line="362" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="363" pos:column="5">int<pos:position pos:line="363" pos:column="8"/></name></type> <name pos:line="363" pos:column="9">i<pos:position pos:line="363" pos:column="10"/></name></decl>;<pos:position pos:line="363" pos:column="11"/></decl_stmt>

    <if pos:line="365" pos:column="5">if <condition pos:line="365" pos:column="8">(<expr><operator pos:line="365" pos:column="9">!<pos:position pos:line="365" pos:column="10"/></operator><name pos:line="365" pos:column="10">lang<pos:position pos:line="365" pos:column="14"/></name> <operator pos:line="365" pos:column="15">||<pos:position pos:line="365" pos:column="17"/></operator> <operator pos:line="365" pos:column="18">!<pos:position pos:line="365" pos:column="19"/></operator><name pos:line="365" pos:column="19">accept_langs<pos:position pos:line="365" pos:column="31"/></name></expr>)<pos:position pos:line="365" pos:column="32"/></condition><then pos:line="365" pos:column="32"> <block pos:line="365" pos:column="33">{
        <return pos:line="366" pos:column="9">return <expr><operator pos:line="366" pos:column="16">-<pos:position pos:line="366" pos:column="17"/></operator><literal type="number" pos:line="366" pos:column="17">1<pos:position pos:line="366" pos:column="18"/></literal></expr>;<pos:position pos:line="366" pos:column="19"/></return>
    }<pos:position pos:line="367" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="369" pos:column="5">alang<pos:position pos:line="369" pos:column="10"/></name> <operator pos:line="369" pos:column="11">=<pos:position pos:line="369" pos:column="12"/></operator> <operator pos:line="369" pos:column="13">(<pos:position pos:line="369" pos:column="14"/></operator><specifier pos:line="369" pos:column="14">const<pos:position pos:line="369" pos:column="19"/></specifier> <name pos:line="369" pos:column="20">char<pos:position pos:line="369" pos:column="24"/></name> <operator pos:line="369" pos:column="25">*<pos:position pos:line="369" pos:column="26"/></operator><operator pos:line="369" pos:column="26">*<pos:position pos:line="369" pos:column="27"/></operator><operator pos:line="369" pos:column="27">)<pos:position pos:line="369" pos:column="28"/></operator> <name><name pos:line="369" pos:column="29">accept_langs<pos:position pos:line="369" pos:column="41"/></name><operator pos:line="369" pos:column="41">-&gt;<pos:position pos:line="369" pos:column="46"/></operator><name pos:line="369" pos:column="43">elts<pos:position pos:line="369" pos:column="47"/></name></name></expr>;<pos:position pos:line="369" pos:column="48"/></expr_stmt>

    <for pos:line="371" pos:column="5">for <control pos:line="371" pos:column="9">(<init><expr><name pos:line="371" pos:column="10">i<pos:position pos:line="371" pos:column="11"/></name> <operator pos:line="371" pos:column="12">=<pos:position pos:line="371" pos:column="13"/></operator> <literal type="number" pos:line="371" pos:column="14">0<pos:position pos:line="371" pos:column="15"/></literal></expr>;<pos:position pos:line="371" pos:column="16"/></init> <condition><expr><name pos:line="371" pos:column="17">i<pos:position pos:line="371" pos:column="18"/></name> <operator pos:line="371" pos:column="19">&lt;<pos:position pos:line="371" pos:column="23"/></operator> <name><name pos:line="371" pos:column="21">accept_langs<pos:position pos:line="371" pos:column="33"/></name><operator pos:line="371" pos:column="33">-&gt;<pos:position pos:line="371" pos:column="38"/></operator><name pos:line="371" pos:column="35">nelts<pos:position pos:line="371" pos:column="40"/></name></name></expr>;<pos:position pos:line="371" pos:column="41"/></condition> <incr><expr><operator pos:line="371" pos:column="42">++<pos:position pos:line="371" pos:column="44"/></operator><name pos:line="371" pos:column="44">i<pos:position pos:line="371" pos:column="45"/></name></expr></incr>)<pos:position pos:line="371" pos:column="46"/></control> <block pos:line="371" pos:column="47">{
        <if pos:line="372" pos:column="9">if <condition pos:line="372" pos:column="12">(<expr><operator pos:line="372" pos:column="13">!<pos:position pos:line="372" pos:column="14"/></operator><call><name pos:line="372" pos:column="14">strncmp<pos:position pos:line="372" pos:column="21"/></name><argument_list pos:line="372" pos:column="21">(<argument><expr><name pos:line="372" pos:column="22">lang<pos:position pos:line="372" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="372" pos:column="28">*<pos:position pos:line="372" pos:column="29"/></operator><name pos:line="372" pos:column="29">alang<pos:position pos:line="372" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="372" pos:column="36">strlen<pos:position pos:line="372" pos:column="42"/></name><argument_list pos:line="372" pos:column="42">(<argument><expr><operator pos:line="372" pos:column="43">*<pos:position pos:line="372" pos:column="44"/></operator><name pos:line="372" pos:column="44">alang<pos:position pos:line="372" pos:column="49"/></name></expr></argument>)<pos:position pos:line="372" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="372" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="372" pos:column="52"/></condition><then pos:line="372" pos:column="52"> <block pos:line="372" pos:column="53">{
            <return pos:line="373" pos:column="13">return <expr><name pos:line="373" pos:column="20">i<pos:position pos:line="373" pos:column="21"/></name></expr>;<pos:position pos:line="373" pos:column="22"/></return>
        }<pos:position pos:line="374" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="375" pos:column="9">alang<pos:position pos:line="375" pos:column="14"/></name> <operator pos:line="375" pos:column="15">+=<pos:position pos:line="375" pos:column="17"/></operator> <operator pos:line="375" pos:column="18">(<pos:position pos:line="375" pos:column="19"/></operator><name><name pos:line="375" pos:column="19">accept_langs<pos:position pos:line="375" pos:column="31"/></name><operator pos:line="375" pos:column="31">-&gt;<pos:position pos:line="375" pos:column="36"/></operator><name pos:line="375" pos:column="33">elt_size<pos:position pos:line="375" pos:column="41"/></name></name> <operator pos:line="375" pos:column="42">/<pos:position pos:line="375" pos:column="43"/></operator> <sizeof pos:line="375" pos:column="44">sizeof<argument_list pos:line="375" pos:column="50">(<argument><expr><name pos:line="375" pos:column="51">char<pos:position pos:line="375" pos:column="55"/></name><operator pos:line="375" pos:column="55">*<pos:position pos:line="375" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="375" pos:column="57"/></argument_list></sizeof><operator pos:line="375" pos:column="57">)<pos:position pos:line="375" pos:column="58"/></operator></expr>;<pos:position pos:line="375" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="376" pos:column="6"/></block></for>

    <return pos:line="378" pos:column="5">return <expr><operator pos:line="378" pos:column="12">-<pos:position pos:line="378" pos:column="13"/></operator><literal type="number" pos:line="378" pos:column="13">1<pos:position pos:line="378" pos:column="14"/></literal></expr>;<pos:position pos:line="378" pos:column="15"/></return>
}<pos:position pos:line="379" pos:column="2"/></block></function>

<comment type="block" pos:line="381" pos:column="1">/* set_default_lang_quality() sets the quality we apply to variants
 * which have no language assigned to them. If none of the variants
 * have a language, we are not negotiating on language, so all are
 * acceptable, and we set the default q value to 1.0. However if
 * some of the variants have languages, we set this default to 0.0001.
 * The value of this default will be applied to all variants with
 * no explicit language -- which will have the effect of making them
 * acceptable, but only if no variants with an explicit language
 * are acceptable. The default q value set here is assigned to variants
 * with no language type in set_language_quality().
 *
 * Note that if using the RVSA/1.0 algorithm, we don't use this
 * fiddle.
 */</comment>

<function><specifier pos:line="396" pos:column="1">static<pos:position pos:line="396" pos:column="7"/></specifier> <type><name pos:line="396" pos:column="8">void<pos:position pos:line="396" pos:column="12"/></name></type> <name pos:line="396" pos:column="13">set_default_lang_quality<pos:position pos:line="396" pos:column="37"/></name><parameter_list pos:line="396" pos:column="37">(<parameter><decl><type><name pos:line="396" pos:column="38">negotiation_state<pos:position pos:line="396" pos:column="55"/></name> <modifier pos:line="396" pos:column="56">*<pos:position pos:line="396" pos:column="57"/></modifier></type><name pos:line="396" pos:column="57">neg<pos:position pos:line="396" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="396" pos:column="61"/></parameter_list>
<block pos:line="397" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="398" pos:column="5">var_rec<pos:position pos:line="398" pos:column="12"/></name> <modifier pos:line="398" pos:column="13">*<pos:position pos:line="398" pos:column="14"/></modifier></type><name pos:line="398" pos:column="14">avail_recs<pos:position pos:line="398" pos:column="24"/></name> <init pos:line="398" pos:column="25">= <expr><operator pos:line="398" pos:column="27">(<pos:position pos:line="398" pos:column="28"/></operator><name pos:line="398" pos:column="28">var_rec<pos:position pos:line="398" pos:column="35"/></name> <operator pos:line="398" pos:column="36">*<pos:position pos:line="398" pos:column="37"/></operator><operator pos:line="398" pos:column="37">)<pos:position pos:line="398" pos:column="38"/></operator> <name><name pos:line="398" pos:column="39">neg<pos:position pos:line="398" pos:column="42"/></name><operator pos:line="398" pos:column="42">-&gt;<pos:position pos:line="398" pos:column="47"/></operator><name pos:line="398" pos:column="44">avail_vars<pos:position pos:line="398" pos:column="54"/></name><operator pos:line="398" pos:column="54">-&gt;<pos:position pos:line="398" pos:column="59"/></operator><name pos:line="398" pos:column="56">elts<pos:position pos:line="398" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="398" pos:column="61"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="399" pos:column="5">int<pos:position pos:line="399" pos:column="8"/></name></type> <name pos:line="399" pos:column="9">j<pos:position pos:line="399" pos:column="10"/></name></decl>;<pos:position pos:line="399" pos:column="11"/></decl_stmt>

    <if pos:line="401" pos:column="5">if <condition pos:line="401" pos:column="8">(<expr><operator pos:line="401" pos:column="9">!<pos:position pos:line="401" pos:column="10"/></operator><name><name pos:line="401" pos:column="10">neg<pos:position pos:line="401" pos:column="13"/></name><operator pos:line="401" pos:column="13">-&gt;<pos:position pos:line="401" pos:column="18"/></operator><name pos:line="401" pos:column="15">dont_fiddle_headers<pos:position pos:line="401" pos:column="34"/></name></name></expr>)<pos:position pos:line="401" pos:column="35"/></condition><then pos:line="401" pos:column="35"> <block pos:line="401" pos:column="36">{
        <for pos:line="402" pos:column="9">for <control pos:line="402" pos:column="13">(<init><expr><name pos:line="402" pos:column="14">j<pos:position pos:line="402" pos:column="15"/></name> <operator pos:line="402" pos:column="16">=<pos:position pos:line="402" pos:column="17"/></operator> <literal type="number" pos:line="402" pos:column="18">0<pos:position pos:line="402" pos:column="19"/></literal></expr>;<pos:position pos:line="402" pos:column="20"/></init> <condition><expr><name pos:line="402" pos:column="21">j<pos:position pos:line="402" pos:column="22"/></name> <operator pos:line="402" pos:column="23">&lt;<pos:position pos:line="402" pos:column="27"/></operator> <name><name pos:line="402" pos:column="25">neg<pos:position pos:line="402" pos:column="28"/></name><operator pos:line="402" pos:column="28">-&gt;<pos:position pos:line="402" pos:column="33"/></operator><name pos:line="402" pos:column="30">avail_vars<pos:position pos:line="402" pos:column="40"/></name><operator pos:line="402" pos:column="40">-&gt;<pos:position pos:line="402" pos:column="45"/></operator><name pos:line="402" pos:column="42">nelts<pos:position pos:line="402" pos:column="47"/></name></name></expr>;<pos:position pos:line="402" pos:column="48"/></condition> <incr><expr><operator pos:line="402" pos:column="49">++<pos:position pos:line="402" pos:column="51"/></operator><name pos:line="402" pos:column="51">j<pos:position pos:line="402" pos:column="52"/></name></expr></incr>)<pos:position pos:line="402" pos:column="53"/></control> <block pos:line="402" pos:column="54">{
            <decl_stmt><decl><type><name pos:line="403" pos:column="13">var_rec<pos:position pos:line="403" pos:column="20"/></name> <modifier pos:line="403" pos:column="21">*<pos:position pos:line="403" pos:column="22"/></modifier></type><name pos:line="403" pos:column="22">variant<pos:position pos:line="403" pos:column="29"/></name> <init pos:line="403" pos:column="30">= <expr><operator pos:line="403" pos:column="32">&amp;<pos:position pos:line="403" pos:column="37"/></operator><name><name pos:line="403" pos:column="33">avail_recs<pos:position pos:line="403" pos:column="43"/></name><index pos:line="403" pos:column="43">[<expr><name pos:line="403" pos:column="44">j<pos:position pos:line="403" pos:column="45"/></name></expr>]<pos:position pos:line="403" pos:column="46"/></index></name></expr></init></decl>;<pos:position pos:line="403" pos:column="47"/></decl_stmt>
            <if pos:line="404" pos:column="13">if <condition pos:line="404" pos:column="16">(<expr><name><name pos:line="404" pos:column="17">variant<pos:position pos:line="404" pos:column="24"/></name><operator pos:line="404" pos:column="24">-&gt;<pos:position pos:line="404" pos:column="29"/></operator><name pos:line="404" pos:column="26">content_languages<pos:position pos:line="404" pos:column="43"/></name></name> <operator pos:line="404" pos:column="44">&amp;&amp;<pos:position pos:line="404" pos:column="54"/></operator>
                <name><name pos:line="405" pos:column="17">variant<pos:position pos:line="405" pos:column="24"/></name><operator pos:line="405" pos:column="24">-&gt;<pos:position pos:line="405" pos:column="29"/></operator><name pos:line="405" pos:column="26">content_languages<pos:position pos:line="405" pos:column="43"/></name><operator pos:line="405" pos:column="43">-&gt;<pos:position pos:line="405" pos:column="48"/></operator><name pos:line="405" pos:column="45">nelts<pos:position pos:line="405" pos:column="50"/></name></name></expr>)<pos:position pos:line="405" pos:column="51"/></condition><then pos:line="405" pos:column="51"> <block pos:line="405" pos:column="52">{
                <expr_stmt><expr><name><name pos:line="406" pos:column="17">neg<pos:position pos:line="406" pos:column="20"/></name><operator pos:line="406" pos:column="20">-&gt;<pos:position pos:line="406" pos:column="25"/></operator><name pos:line="406" pos:column="22">default_lang_quality<pos:position pos:line="406" pos:column="42"/></name></name> <operator pos:line="406" pos:column="43">=<pos:position pos:line="406" pos:column="44"/></operator> <literal type="number" pos:line="406" pos:column="45">0.0001f<pos:position pos:line="406" pos:column="52"/></literal></expr>;<pos:position pos:line="406" pos:column="53"/></expr_stmt>
                <return pos:line="407" pos:column="17">return;<pos:position pos:line="407" pos:column="24"/></return>
            }<pos:position pos:line="408" pos:column="14"/></block></then></if>
        }<pos:position pos:line="409" pos:column="10"/></block></for>
    }<pos:position pos:line="410" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="412" pos:column="5">neg<pos:position pos:line="412" pos:column="8"/></name><operator pos:line="412" pos:column="8">-&gt;<pos:position pos:line="412" pos:column="13"/></operator><name pos:line="412" pos:column="10">default_lang_quality<pos:position pos:line="412" pos:column="30"/></name></name> <operator pos:line="412" pos:column="31">=<pos:position pos:line="412" pos:column="32"/></operator> <literal type="number" pos:line="412" pos:column="33">1.0f<pos:position pos:line="412" pos:column="37"/></literal></expr>;<pos:position pos:line="412" pos:column="38"/></expr_stmt>
}<pos:position pos:line="413" pos:column="2"/></block></function>

<comment type="block" pos:line="415" pos:column="1">/* Set the language_quality value in the variant record. Also
 * assigns lang_index for ForceLanguagePriority.
 *
 * To find the language_quality value, we look for the 'q' value
 * of the 'best' matching language on the Accept-Language
 * header. The 'best' match is the language on Accept-Language
 * header which matches the language of this variant either fully,
 * or as far as the prefix marker (-). If two or more languages
 * match, use the longest string from the Accept-Language header
 * (see HTTP/1.1 [14.4])
 *
 * When a variant has multiple languages, we find the 'best'
 * match for each variant language tag as above, then select the
 * one with the highest q value. Because both the accept-header
 * and variant can have multiple languages, we now have a hairy
 * loop-within-a-loop here.
 *
 * If the variant has no language and we have no Accept-Language
 * items, leave the quality at 1.0 and return.
 *
 * If the variant has no language, we use the default as set by
 * set_default_lang_quality() (1.0 if we are not negotiating on
 * language, 0.001 if we are).
 *
 * Following the setting of the language quality, we drop through to
 * set the old 'lang_index'. This is set based on either the order
 * of the languages on the Accept-Language header, or the
 * order on the LanguagePriority directive. This is only used
 * in the negotiation if the language qualities tie.
 */</comment>

<function><specifier pos:line="446" pos:column="1">static<pos:position pos:line="446" pos:column="7"/></specifier> <type><name pos:line="446" pos:column="8">void<pos:position pos:line="446" pos:column="12"/></name></type> <name pos:line="446" pos:column="13">set_language_quality<pos:position pos:line="446" pos:column="33"/></name><parameter_list pos:line="446" pos:column="33">(<parameter><decl><type><name pos:line="446" pos:column="34">negotiation_state<pos:position pos:line="446" pos:column="51"/></name> <modifier pos:line="446" pos:column="52">*<pos:position pos:line="446" pos:column="53"/></modifier></type><name pos:line="446" pos:column="53">neg<pos:position pos:line="446" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="446" pos:column="58">var_rec<pos:position pos:line="446" pos:column="65"/></name> <modifier pos:line="446" pos:column="66">*<pos:position pos:line="446" pos:column="67"/></modifier></type><name pos:line="446" pos:column="67">variant<pos:position pos:line="446" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="446" pos:column="75"/></parameter_list>
<block pos:line="447" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="448" pos:column="5">int<pos:position pos:line="448" pos:column="8"/></name></type> <name pos:line="448" pos:column="9">forcepriority<pos:position pos:line="448" pos:column="22"/></name> <init pos:line="448" pos:column="23">= <expr><name><name pos:line="448" pos:column="25">neg<pos:position pos:line="448" pos:column="28"/></name><operator pos:line="448" pos:column="28">-&gt;<pos:position pos:line="448" pos:column="33"/></operator><name pos:line="448" pos:column="30">conf<pos:position pos:line="448" pos:column="34"/></name><operator pos:line="448" pos:column="34">-&gt;<pos:position pos:line="448" pos:column="39"/></operator><name pos:line="448" pos:column="36">forcelangpriority<pos:position pos:line="448" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="448" pos:column="54"/></decl_stmt>
    <if pos:line="449" pos:column="5">if <condition pos:line="449" pos:column="8">(<expr><name pos:line="449" pos:column="9">forcepriority<pos:position pos:line="449" pos:column="22"/></name> <operator pos:line="449" pos:column="23">==<pos:position pos:line="449" pos:column="25"/></operator> <name pos:line="449" pos:column="26">FLP_UNDEF<pos:position pos:line="449" pos:column="35"/></name></expr>)<pos:position pos:line="449" pos:column="36"/></condition><then pos:line="449" pos:column="36"> <block pos:line="449" pos:column="37">{
        <expr_stmt><expr><name pos:line="450" pos:column="9">forcepriority<pos:position pos:line="450" pos:column="22"/></name> <operator pos:line="450" pos:column="23">=<pos:position pos:line="450" pos:column="24"/></operator> <name pos:line="450" pos:column="25">FLP_DEFAULT<pos:position pos:line="450" pos:column="36"/></name></expr>;<pos:position pos:line="450" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="451" pos:column="6"/></block></then></if>

    <if pos:line="453" pos:column="5">if <condition pos:line="453" pos:column="8">(<expr><operator pos:line="453" pos:column="9">!<pos:position pos:line="453" pos:column="10"/></operator><name><name pos:line="453" pos:column="10">variant<pos:position pos:line="453" pos:column="17"/></name><operator pos:line="453" pos:column="17">-&gt;<pos:position pos:line="453" pos:column="22"/></operator><name pos:line="453" pos:column="19">content_languages<pos:position pos:line="453" pos:column="36"/></name></name> <operator pos:line="453" pos:column="37">||<pos:position pos:line="453" pos:column="39"/></operator> <operator pos:line="453" pos:column="40">!<pos:position pos:line="453" pos:column="41"/></operator><name><name pos:line="453" pos:column="41">variant<pos:position pos:line="453" pos:column="48"/></name><operator pos:line="453" pos:column="48">-&gt;<pos:position pos:line="453" pos:column="53"/></operator><name pos:line="453" pos:column="50">content_languages<pos:position pos:line="453" pos:column="67"/></name><operator pos:line="453" pos:column="67">-&gt;<pos:position pos:line="453" pos:column="72"/></operator><name pos:line="453" pos:column="69">nelts<pos:position pos:line="453" pos:column="74"/></name></name></expr>)<pos:position pos:line="453" pos:column="75"/></condition><then pos:line="453" pos:column="75"> <block pos:line="453" pos:column="76">{
        <comment type="block" pos:line="454" pos:column="9">/* This variant has no content-language, so use the default
         * quality factor for variants with no content-language
         * (previously set by set_default_lang_quality()).
         * Leave the factor alone (it remains at 1.0) when we may not fiddle
         * with the headers.
         */</comment>
        <if pos:line="460" pos:column="9">if <condition pos:line="460" pos:column="12">(<expr><operator pos:line="460" pos:column="13">!<pos:position pos:line="460" pos:column="14"/></operator><name><name pos:line="460" pos:column="14">neg<pos:position pos:line="460" pos:column="17"/></name><operator pos:line="460" pos:column="17">-&gt;<pos:position pos:line="460" pos:column="22"/></operator><name pos:line="460" pos:column="19">dont_fiddle_headers<pos:position pos:line="460" pos:column="38"/></name></name></expr>)<pos:position pos:line="460" pos:column="39"/></condition><then pos:line="460" pos:column="39"> <block pos:line="460" pos:column="40">{
            <expr_stmt><expr><name><name pos:line="461" pos:column="13">variant<pos:position pos:line="461" pos:column="20"/></name><operator pos:line="461" pos:column="20">-&gt;<pos:position pos:line="461" pos:column="25"/></operator><name pos:line="461" pos:column="22">lang_quality<pos:position pos:line="461" pos:column="34"/></name></name> <operator pos:line="461" pos:column="35">=<pos:position pos:line="461" pos:column="36"/></operator> <name><name pos:line="461" pos:column="37">neg<pos:position pos:line="461" pos:column="40"/></name><operator pos:line="461" pos:column="40">-&gt;<pos:position pos:line="461" pos:column="45"/></operator><name pos:line="461" pos:column="42">default_lang_quality<pos:position pos:line="461" pos:column="62"/></name></name></expr>;<pos:position pos:line="461" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="462" pos:column="10"/></block></then></if>
        <if pos:line="463" pos:column="9">if <condition pos:line="463" pos:column="12">(<expr><operator pos:line="463" pos:column="13">!<pos:position pos:line="463" pos:column="14"/></operator><name><name pos:line="463" pos:column="14">neg<pos:position pos:line="463" pos:column="17"/></name><operator pos:line="463" pos:column="17">-&gt;<pos:position pos:line="463" pos:column="22"/></operator><name pos:line="463" pos:column="19">accept_langs<pos:position pos:line="463" pos:column="31"/></name></name></expr>)<pos:position pos:line="463" pos:column="32"/></condition><then pos:line="463" pos:column="32"> <block pos:line="463" pos:column="33">{
            <return pos:line="464" pos:column="13">return;<pos:position pos:line="464" pos:column="20"/></return>             <comment type="block" pos:line="464" pos:column="33">/* no accept-language header */</comment>
        }<pos:position pos:line="465" pos:column="10"/></block></then></if>
        <return pos:line="466" pos:column="9">return;<pos:position pos:line="466" pos:column="16"/></return>
    }<pos:position pos:line="467" pos:column="6"/></block></then>
    <else pos:line="468" pos:column="5">else <block pos:line="468" pos:column="10">{
        <comment type="block" pos:line="469" pos:column="9">/* Variant has one (or more) languages.  Look for the best
         * match. We do this by going through each language on the
         * variant description looking for a match on the
         * Accept-Language header. The best match is the longest
         * matching language on the header. The final result is the
         * best q value from all the languages on the variant
         * description.
         */</comment>

        <if pos:line="478" pos:column="9">if <condition pos:line="478" pos:column="12">(<expr><operator pos:line="478" pos:column="13">!<pos:position pos:line="478" pos:column="14"/></operator><name><name pos:line="478" pos:column="14">neg<pos:position pos:line="478" pos:column="17"/></name><operator pos:line="478" pos:column="17">-&gt;<pos:position pos:line="478" pos:column="22"/></operator><name pos:line="478" pos:column="19">accept_langs<pos:position pos:line="478" pos:column="31"/></name></name></expr>)<pos:position pos:line="478" pos:column="32"/></condition><then pos:line="478" pos:column="32"> <block pos:line="478" pos:column="33">{
            <comment type="block" pos:line="479" pos:column="13">/* no accept-language header makes the variant indefinite */</comment>
            <expr_stmt><expr><name><name pos:line="480" pos:column="13">variant<pos:position pos:line="480" pos:column="20"/></name><operator pos:line="480" pos:column="20">-&gt;<pos:position pos:line="480" pos:column="25"/></operator><name pos:line="480" pos:column="22">definite<pos:position pos:line="480" pos:column="30"/></name></name> <operator pos:line="480" pos:column="31">=<pos:position pos:line="480" pos:column="32"/></operator> <literal type="number" pos:line="480" pos:column="33">0<pos:position pos:line="480" pos:column="34"/></literal></expr>;<pos:position pos:line="480" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="481" pos:column="10"/></block></then>
        <else pos:line="482" pos:column="9">else <block pos:line="482" pos:column="14">{    <comment type="block" pos:line="482" pos:column="19">/* There is an accept-language with 0 or more items */</comment>
            <decl_stmt><decl><type><name pos:line="483" pos:column="13">accept_rec<pos:position pos:line="483" pos:column="23"/></name> <modifier pos:line="483" pos:column="24">*<pos:position pos:line="483" pos:column="25"/></modifier></type><name pos:line="483" pos:column="25">accs<pos:position pos:line="483" pos:column="29"/></name> <init pos:line="483" pos:column="30">= <expr><operator pos:line="483" pos:column="32">(<pos:position pos:line="483" pos:column="33"/></operator><name pos:line="483" pos:column="33">accept_rec<pos:position pos:line="483" pos:column="43"/></name> <operator pos:line="483" pos:column="44">*<pos:position pos:line="483" pos:column="45"/></operator><operator pos:line="483" pos:column="45">)<pos:position pos:line="483" pos:column="46"/></operator> <name><name pos:line="483" pos:column="47">neg<pos:position pos:line="483" pos:column="50"/></name><operator pos:line="483" pos:column="50">-&gt;<pos:position pos:line="483" pos:column="55"/></operator><name pos:line="483" pos:column="52">accept_langs<pos:position pos:line="483" pos:column="64"/></name><operator pos:line="483" pos:column="64">-&gt;<pos:position pos:line="483" pos:column="69"/></operator><name pos:line="483" pos:column="66">elts<pos:position pos:line="483" pos:column="70"/></name></name></expr></init></decl>;<pos:position pos:line="483" pos:column="71"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="484" pos:column="13">accept_rec<pos:position pos:line="484" pos:column="23"/></name> <modifier pos:line="484" pos:column="24">*<pos:position pos:line="484" pos:column="25"/></modifier></type><name pos:line="484" pos:column="25">best<pos:position pos:line="484" pos:column="29"/></name> <init pos:line="484" pos:column="30">= <expr><name pos:line="484" pos:column="32">NULL<pos:position pos:line="484" pos:column="36"/></name></expr></init></decl>, <modifier pos:line="484" pos:column="38">*<pos:position pos:line="484" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="484" pos:column="39">star<pos:position pos:line="484" pos:column="43"/></name> <init pos:line="484" pos:column="44">= <expr><name pos:line="484" pos:column="46">NULL<pos:position pos:line="484" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="484" pos:column="51"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="485" pos:column="13">accept_rec<pos:position pos:line="485" pos:column="23"/></name> <modifier pos:line="485" pos:column="24">*<pos:position pos:line="485" pos:column="25"/></modifier></type><name pos:line="485" pos:column="25">bestthistag<pos:position pos:line="485" pos:column="36"/></name></decl>;<pos:position pos:line="485" pos:column="37"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="486" pos:column="13">char<pos:position pos:line="486" pos:column="17"/></name> <modifier pos:line="486" pos:column="18">*<pos:position pos:line="486" pos:column="19"/></modifier></type><name pos:line="486" pos:column="19">lang<pos:position pos:line="486" pos:column="23"/></name></decl>, <modifier pos:line="486" pos:column="25">*<pos:position pos:line="486" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="486" pos:column="26">p<pos:position pos:line="486" pos:column="27"/></name></decl>;<pos:position pos:line="486" pos:column="28"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="487" pos:column="13">float<pos:position pos:line="487" pos:column="18"/></name></type> <name pos:line="487" pos:column="19">fiddle_q<pos:position pos:line="487" pos:column="27"/></name> <init pos:line="487" pos:column="28">= <expr><literal type="number" pos:line="487" pos:column="30">0.0f<pos:position pos:line="487" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="487" pos:column="35"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="488" pos:column="13">int<pos:position pos:line="488" pos:column="16"/></name></type> <name pos:line="488" pos:column="17">any_match_on_star<pos:position pos:line="488" pos:column="34"/></name> <init pos:line="488" pos:column="35">= <expr><literal type="number" pos:line="488" pos:column="37">0<pos:position pos:line="488" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="488" pos:column="39"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="489" pos:column="13">int<pos:position pos:line="489" pos:column="16"/></name></type> <name pos:line="489" pos:column="17">i<pos:position pos:line="489" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="489" pos:column="20">j<pos:position pos:line="489" pos:column="21"/></name></decl>;<pos:position pos:line="489" pos:column="22"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="490" pos:column="13">apr_size_t<pos:position pos:line="490" pos:column="23"/></name></type> <name pos:line="490" pos:column="24">alen<pos:position pos:line="490" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="490" pos:column="30">longest_lang_range_len<pos:position pos:line="490" pos:column="52"/></name></decl>;<pos:position pos:line="490" pos:column="53"/></decl_stmt>

            <for pos:line="492" pos:column="13">for <control pos:line="492" pos:column="17">(<init><expr><name pos:line="492" pos:column="18">j<pos:position pos:line="492" pos:column="19"/></name> <operator pos:line="492" pos:column="20">=<pos:position pos:line="492" pos:column="21"/></operator> <literal type="number" pos:line="492" pos:column="22">0<pos:position pos:line="492" pos:column="23"/></literal></expr>;<pos:position pos:line="492" pos:column="24"/></init> <condition><expr><name pos:line="492" pos:column="25">j<pos:position pos:line="492" pos:column="26"/></name> <operator pos:line="492" pos:column="27">&lt;<pos:position pos:line="492" pos:column="31"/></operator> <name><name pos:line="492" pos:column="29">variant<pos:position pos:line="492" pos:column="36"/></name><operator pos:line="492" pos:column="36">-&gt;<pos:position pos:line="492" pos:column="41"/></operator><name pos:line="492" pos:column="38">content_languages<pos:position pos:line="492" pos:column="55"/></name><operator pos:line="492" pos:column="55">-&gt;<pos:position pos:line="492" pos:column="60"/></operator><name pos:line="492" pos:column="57">nelts<pos:position pos:line="492" pos:column="62"/></name></name></expr>;<pos:position pos:line="492" pos:column="63"/></condition> <incr><expr><operator pos:line="492" pos:column="64">++<pos:position pos:line="492" pos:column="66"/></operator><name pos:line="492" pos:column="66">j<pos:position pos:line="492" pos:column="67"/></name></expr></incr>)<pos:position pos:line="492" pos:column="68"/></control> <block pos:line="492" pos:column="69">{
                <expr_stmt><expr><name pos:line="493" pos:column="17">p<pos:position pos:line="493" pos:column="18"/></name> <operator pos:line="493" pos:column="19">=<pos:position pos:line="493" pos:column="20"/></operator> <name pos:line="493" pos:column="21">NULL<pos:position pos:line="493" pos:column="25"/></name></expr>;<pos:position pos:line="493" pos:column="26"/></expr_stmt>
                <expr_stmt><expr><name pos:line="494" pos:column="17">bestthistag<pos:position pos:line="494" pos:column="28"/></name> <operator pos:line="494" pos:column="29">=<pos:position pos:line="494" pos:column="30"/></operator> <name pos:line="494" pos:column="31">NULL<pos:position pos:line="494" pos:column="35"/></name></expr>;<pos:position pos:line="494" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><name pos:line="495" pos:column="17">longest_lang_range_len<pos:position pos:line="495" pos:column="39"/></name> <operator pos:line="495" pos:column="40">=<pos:position pos:line="495" pos:column="41"/></operator> <literal type="number" pos:line="495" pos:column="42">0<pos:position pos:line="495" pos:column="43"/></literal></expr>;<pos:position pos:line="495" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name pos:line="496" pos:column="17">alen<pos:position pos:line="496" pos:column="21"/></name> <operator pos:line="496" pos:column="22">=<pos:position pos:line="496" pos:column="23"/></operator> <literal type="number" pos:line="496" pos:column="24">0<pos:position pos:line="496" pos:column="25"/></literal></expr>;<pos:position pos:line="496" pos:column="26"/></expr_stmt>

                <comment type="block" pos:line="498" pos:column="17">/* lang is the variant's language-tag, which is the one
                 * we are allowed to use the prefix of in HTTP/1.1
                 */</comment>
                <expr_stmt><expr><name pos:line="501" pos:column="17">lang<pos:position pos:line="501" pos:column="21"/></name> <operator pos:line="501" pos:column="22">=<pos:position pos:line="501" pos:column="23"/></operator> <operator pos:line="501" pos:column="24">(<pos:position pos:line="501" pos:column="25"/></operator><operator pos:line="501" pos:column="25">(<pos:position pos:line="501" pos:column="26"/></operator><name pos:line="501" pos:column="26">char<pos:position pos:line="501" pos:column="30"/></name> <operator pos:line="501" pos:column="31">*<pos:position pos:line="501" pos:column="32"/></operator><operator pos:line="501" pos:column="32">*<pos:position pos:line="501" pos:column="33"/></operator><operator pos:line="501" pos:column="33">)<pos:position pos:line="501" pos:column="34"/></operator> <operator pos:line="501" pos:column="35">(<pos:position pos:line="501" pos:column="36"/></operator><name><name pos:line="501" pos:column="36">variant<pos:position pos:line="501" pos:column="43"/></name><operator pos:line="501" pos:column="43">-&gt;<pos:position pos:line="501" pos:column="48"/></operator><name pos:line="501" pos:column="45">content_languages<pos:position pos:line="501" pos:column="62"/></name><operator pos:line="501" pos:column="62">-&gt;<pos:position pos:line="501" pos:column="67"/></operator><name pos:line="501" pos:column="64">elts<pos:position pos:line="501" pos:column="68"/></name></name><operator pos:line="501" pos:column="68">)<pos:position pos:line="501" pos:column="69"/></operator><operator pos:line="501" pos:column="69">)<pos:position pos:line="501" pos:column="70"/></operator><index pos:line="501" pos:column="70">[<expr><name pos:line="501" pos:column="71">j<pos:position pos:line="501" pos:column="72"/></name></expr>]<pos:position pos:line="501" pos:column="73"/></index></expr>;<pos:position pos:line="501" pos:column="74"/></expr_stmt>

                <comment type="block" pos:line="503" pos:column="17">/* now find the best (i.e. longest) matching
                 * Accept-Language header language. We put the best match
                 * for this tag in bestthistag. We cannot update the
                 * overall best (based on q value) because the best match
                 * for this tag is the longest language item on the accept
                 * header, not necessarily the highest q.
                 */</comment>
                <for pos:line="510" pos:column="17">for <control pos:line="510" pos:column="21">(<init><expr><name pos:line="510" pos:column="22">i<pos:position pos:line="510" pos:column="23"/></name> <operator pos:line="510" pos:column="24">=<pos:position pos:line="510" pos:column="25"/></operator> <literal type="number" pos:line="510" pos:column="26">0<pos:position pos:line="510" pos:column="27"/></literal></expr>;<pos:position pos:line="510" pos:column="28"/></init> <condition><expr><name pos:line="510" pos:column="29">i<pos:position pos:line="510" pos:column="30"/></name> <operator pos:line="510" pos:column="31">&lt;<pos:position pos:line="510" pos:column="35"/></operator> <name><name pos:line="510" pos:column="33">neg<pos:position pos:line="510" pos:column="36"/></name><operator pos:line="510" pos:column="36">-&gt;<pos:position pos:line="510" pos:column="41"/></operator><name pos:line="510" pos:column="38">accept_langs<pos:position pos:line="510" pos:column="50"/></name><operator pos:line="510" pos:column="50">-&gt;<pos:position pos:line="510" pos:column="55"/></operator><name pos:line="510" pos:column="52">nelts<pos:position pos:line="510" pos:column="57"/></name></name></expr>;<pos:position pos:line="510" pos:column="58"/></condition> <incr><expr><operator pos:line="510" pos:column="59">++<pos:position pos:line="510" pos:column="61"/></operator><name pos:line="510" pos:column="61">i<pos:position pos:line="510" pos:column="62"/></name></expr></incr>)<pos:position pos:line="510" pos:column="63"/></control> <block pos:line="510" pos:column="64">{
                    <if pos:line="511" pos:column="21">if <condition pos:line="511" pos:column="24">(<expr><operator pos:line="511" pos:column="25">!<pos:position pos:line="511" pos:column="26"/></operator><call><name pos:line="511" pos:column="26">strcmp<pos:position pos:line="511" pos:column="32"/></name><argument_list pos:line="511" pos:column="32">(<argument><expr><name><name pos:line="511" pos:column="33">accs<pos:position pos:line="511" pos:column="37"/></name><index pos:line="511" pos:column="37">[<expr><name pos:line="511" pos:column="38">i<pos:position pos:line="511" pos:column="39"/></name></expr>]<pos:position pos:line="511" pos:column="40"/></index></name><operator pos:line="511" pos:column="40">.<pos:position pos:line="511" pos:column="41"/></operator><name pos:line="511" pos:column="41">name<pos:position pos:line="511" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="511" pos:column="47">"*"<pos:position pos:line="511" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="511" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="511" pos:column="52"/></condition><then pos:line="511" pos:column="52"> <block pos:line="511" pos:column="53">{
                        <if pos:line="512" pos:column="25">if <condition pos:line="512" pos:column="28">(<expr><operator pos:line="512" pos:column="29">!<pos:position pos:line="512" pos:column="30"/></operator><name pos:line="512" pos:column="30">star<pos:position pos:line="512" pos:column="34"/></name></expr>)<pos:position pos:line="512" pos:column="35"/></condition><then pos:line="512" pos:column="35"> <block pos:line="512" pos:column="36">{
                            <expr_stmt><expr><name pos:line="513" pos:column="29">star<pos:position pos:line="513" pos:column="33"/></name> <operator pos:line="513" pos:column="34">=<pos:position pos:line="513" pos:column="35"/></operator> <operator pos:line="513" pos:column="36">&amp;<pos:position pos:line="513" pos:column="41"/></operator><name><name pos:line="513" pos:column="37">accs<pos:position pos:line="513" pos:column="41"/></name><index pos:line="513" pos:column="41">[<expr><name pos:line="513" pos:column="42">i<pos:position pos:line="513" pos:column="43"/></name></expr>]<pos:position pos:line="513" pos:column="44"/></index></name></expr>;<pos:position pos:line="513" pos:column="45"/></expr_stmt>
                        }<pos:position pos:line="514" pos:column="26"/></block></then></if>
                        <continue pos:line="515" pos:column="25">continue;<pos:position pos:line="515" pos:column="34"/></continue>
                    }<pos:position pos:line="516" pos:column="22"/></block></then></if>
                    <comment type="block" pos:line="517" pos:column="21">/* Find language. We match if either the variant
                     * language tag exactly matches the language range
                     * from the accept header, or a prefix of the variant
                     * language tag up to a '-' character matches the
                     * whole of the language range in the Accept-Language
                     * header.  Note that HTTP/1.x allows any number of
                     * '-' characters in a tag or range, currently only
                     * tags with zero or one '-' characters are defined
                     * for general use (see rfc1766).
                     *
                     * We only use language range in the Accept-Language
                     * header the best match for the variant language tag
                     * if it is longer than the previous best match.
                     */</comment>

                    <expr_stmt><expr><name pos:line="532" pos:column="21">alen<pos:position pos:line="532" pos:column="25"/></name> <operator pos:line="532" pos:column="26">=<pos:position pos:line="532" pos:column="27"/></operator> <call><name pos:line="532" pos:column="28">strlen<pos:position pos:line="532" pos:column="34"/></name><argument_list pos:line="532" pos:column="34">(<argument><expr><name><name pos:line="532" pos:column="35">accs<pos:position pos:line="532" pos:column="39"/></name><index pos:line="532" pos:column="39">[<expr><name pos:line="532" pos:column="40">i<pos:position pos:line="532" pos:column="41"/></name></expr>]<pos:position pos:line="532" pos:column="42"/></index></name><operator pos:line="532" pos:column="42">.<pos:position pos:line="532" pos:column="43"/></operator><name pos:line="532" pos:column="43">name<pos:position pos:line="532" pos:column="47"/></name></expr></argument>)<pos:position pos:line="532" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="532" pos:column="49"/></expr_stmt>

                    <if pos:line="534" pos:column="21">if <condition pos:line="534" pos:column="24">(<expr><operator pos:line="534" pos:column="25">(<pos:position pos:line="534" pos:column="26"/></operator><call><name pos:line="534" pos:column="26">strlen<pos:position pos:line="534" pos:column="32"/></name><argument_list pos:line="534" pos:column="32">(<argument><expr><name pos:line="534" pos:column="33">lang<pos:position pos:line="534" pos:column="37"/></name></expr></argument>)<pos:position pos:line="534" pos:column="38"/></argument_list></call> <operator pos:line="534" pos:column="39">&gt;=<pos:position pos:line="534" pos:column="44"/></operator> <name pos:line="534" pos:column="42">alen<pos:position pos:line="534" pos:column="46"/></name><operator pos:line="534" pos:column="46">)<pos:position pos:line="534" pos:column="47"/></operator> <operator pos:line="534" pos:column="48">&amp;&amp;<pos:position pos:line="534" pos:column="58"/></operator>
                        <operator pos:line="535" pos:column="25">!<pos:position pos:line="535" pos:column="26"/></operator><call><name pos:line="535" pos:column="26">strncmp<pos:position pos:line="535" pos:column="33"/></name><argument_list pos:line="535" pos:column="33">(<argument><expr><name pos:line="535" pos:column="34">lang<pos:position pos:line="535" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="535" pos:column="40">accs<pos:position pos:line="535" pos:column="44"/></name><index pos:line="535" pos:column="44">[<expr><name pos:line="535" pos:column="45">i<pos:position pos:line="535" pos:column="46"/></name></expr>]<pos:position pos:line="535" pos:column="47"/></index></name><operator pos:line="535" pos:column="47">.<pos:position pos:line="535" pos:column="48"/></operator><name pos:line="535" pos:column="48">name<pos:position pos:line="535" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="535" pos:column="54">alen<pos:position pos:line="535" pos:column="58"/></name></expr></argument>)<pos:position pos:line="535" pos:column="59"/></argument_list></call> <operator pos:line="535" pos:column="60">&amp;&amp;<pos:position pos:line="535" pos:column="70"/></operator>
                        <operator pos:line="536" pos:column="25">(<pos:position pos:line="536" pos:column="26"/></operator><operator pos:line="536" pos:column="26">(<pos:position pos:line="536" pos:column="27"/></operator><name><name pos:line="536" pos:column="27">lang<pos:position pos:line="536" pos:column="31"/></name><index pos:line="536" pos:column="31">[<expr><name pos:line="536" pos:column="32">alen<pos:position pos:line="536" pos:column="36"/></name></expr>]<pos:position pos:line="536" pos:column="37"/></index></name> <operator pos:line="536" pos:column="38">==<pos:position pos:line="536" pos:column="40"/></operator> <literal type="number" pos:line="536" pos:column="41">0<pos:position pos:line="536" pos:column="42"/></literal><operator pos:line="536" pos:column="42">)<pos:position pos:line="536" pos:column="43"/></operator> <operator pos:line="536" pos:column="44">||<pos:position pos:line="536" pos:column="46"/></operator> <operator pos:line="536" pos:column="47">(<pos:position pos:line="536" pos:column="48"/></operator><name><name pos:line="536" pos:column="48">lang<pos:position pos:line="536" pos:column="52"/></name><index pos:line="536" pos:column="52">[<expr><name pos:line="536" pos:column="53">alen<pos:position pos:line="536" pos:column="57"/></name></expr>]<pos:position pos:line="536" pos:column="58"/></index></name> <operator pos:line="536" pos:column="59">==<pos:position pos:line="536" pos:column="61"/></operator> <literal type="char" pos:line="536" pos:column="62">'-'<pos:position pos:line="536" pos:column="65"/></literal><operator pos:line="536" pos:column="65">)<pos:position pos:line="536" pos:column="66"/></operator><operator pos:line="536" pos:column="66">)<pos:position pos:line="536" pos:column="67"/></operator></expr> )<pos:position pos:line="536" pos:column="69"/></condition><then pos:line="536" pos:column="69"> <block pos:line="536" pos:column="70">{

                        <if pos:line="538" pos:column="25">if <condition pos:line="538" pos:column="28">(<expr><name pos:line="538" pos:column="29">alen<pos:position pos:line="538" pos:column="33"/></name> <operator pos:line="538" pos:column="34">&gt;<pos:position pos:line="538" pos:column="38"/></operator> <name pos:line="538" pos:column="36">longest_lang_range_len<pos:position pos:line="538" pos:column="58"/></name></expr>)<pos:position pos:line="538" pos:column="59"/></condition><then pos:line="538" pos:column="59"> <block pos:line="538" pos:column="60">{
                            <expr_stmt><expr><name pos:line="539" pos:column="29">longest_lang_range_len<pos:position pos:line="539" pos:column="51"/></name> <operator pos:line="539" pos:column="52">=<pos:position pos:line="539" pos:column="53"/></operator> <name pos:line="539" pos:column="54">alen<pos:position pos:line="539" pos:column="58"/></name></expr>;<pos:position pos:line="539" pos:column="59"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="540" pos:column="29">bestthistag<pos:position pos:line="540" pos:column="40"/></name> <operator pos:line="540" pos:column="41">=<pos:position pos:line="540" pos:column="42"/></operator> <operator pos:line="540" pos:column="43">&amp;<pos:position pos:line="540" pos:column="48"/></operator><name><name pos:line="540" pos:column="44">accs<pos:position pos:line="540" pos:column="48"/></name><index pos:line="540" pos:column="48">[<expr><name pos:line="540" pos:column="49">i<pos:position pos:line="540" pos:column="50"/></name></expr>]<pos:position pos:line="540" pos:column="51"/></index></name></expr>;<pos:position pos:line="540" pos:column="52"/></expr_stmt>
                        }<pos:position pos:line="541" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="542" pos:column="22"/></block></then></if>

                    <if pos:line="544" pos:column="21">if <condition pos:line="544" pos:column="24">(<expr><operator pos:line="544" pos:column="25">!<pos:position pos:line="544" pos:column="26"/></operator><name pos:line="544" pos:column="26">bestthistag<pos:position pos:line="544" pos:column="37"/></name> <operator pos:line="544" pos:column="38">&amp;&amp;<pos:position pos:line="544" pos:column="48"/></operator> <operator pos:line="544" pos:column="41">!<pos:position pos:line="544" pos:column="42"/></operator><name><name pos:line="544" pos:column="42">neg<pos:position pos:line="544" pos:column="45"/></name><operator pos:line="544" pos:column="45">-&gt;<pos:position pos:line="544" pos:column="50"/></operator><name pos:line="544" pos:column="47">dont_fiddle_headers<pos:position pos:line="544" pos:column="66"/></name></name></expr>)<pos:position pos:line="544" pos:column="67"/></condition><then pos:line="544" pos:column="67"> <block pos:line="544" pos:column="68">{
                        <comment type="block" pos:line="545" pos:column="25">/* The next bit is a fiddle. Some browsers might
                         * be configured to send more specific language
                         * ranges than desirable. For example, an
                         * Accept-Language of en-US should never match
                         * variants with languages en or en-GB. But US
                         * English speakers might pick en-US as their
                         * language choice.  So this fiddle checks if the
                         * language range has a prefix, and if so, it
                         * matches variants which match that prefix with a
                         * priority of 0.001. So a request for en-US would
                         * match variants of types en and en-GB, but at
                         * much lower priority than matches of en-US
                         * directly, or of any other language listed on
                         * the Accept-Language header. Note that this
                         * fiddle does not handle multi-level prefixes.
                         */</comment>
                        <if pos:line="561" pos:column="25">if <condition pos:line="561" pos:column="28">(<expr><operator pos:line="561" pos:column="29">(<pos:position pos:line="561" pos:column="30"/></operator><name pos:line="561" pos:column="30">p<pos:position pos:line="561" pos:column="31"/></name> <operator pos:line="561" pos:column="32">=<pos:position pos:line="561" pos:column="33"/></operator> <call><name pos:line="561" pos:column="34">strchr<pos:position pos:line="561" pos:column="40"/></name><argument_list pos:line="561" pos:column="40">(<argument><expr><name><name pos:line="561" pos:column="41">accs<pos:position pos:line="561" pos:column="45"/></name><index pos:line="561" pos:column="45">[<expr><name pos:line="561" pos:column="46">i<pos:position pos:line="561" pos:column="47"/></name></expr>]<pos:position pos:line="561" pos:column="48"/></index></name><operator pos:line="561" pos:column="48">.<pos:position pos:line="561" pos:column="49"/></operator><name pos:line="561" pos:column="49">name<pos:position pos:line="561" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="561" pos:column="55">'-'<pos:position pos:line="561" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="561" pos:column="59"/></argument_list></call><operator pos:line="561" pos:column="59">)<pos:position pos:line="561" pos:column="60"/></operator></expr>)<pos:position pos:line="561" pos:column="61"/></condition><then pos:line="561" pos:column="61"> <block pos:line="561" pos:column="62">{
                            <decl_stmt><decl><type><name pos:line="562" pos:column="29">int<pos:position pos:line="562" pos:column="32"/></name></type> <name pos:line="562" pos:column="33">plen<pos:position pos:line="562" pos:column="37"/></name> <init pos:line="562" pos:column="38">= <expr><name pos:line="562" pos:column="40">p<pos:position pos:line="562" pos:column="41"/></name> <operator pos:line="562" pos:column="42">-<pos:position pos:line="562" pos:column="43"/></operator> <name><name pos:line="562" pos:column="44">accs<pos:position pos:line="562" pos:column="48"/></name><index pos:line="562" pos:column="48">[<expr><name pos:line="562" pos:column="49">i<pos:position pos:line="562" pos:column="50"/></name></expr>]<pos:position pos:line="562" pos:column="51"/></index></name><operator pos:line="562" pos:column="51">.<pos:position pos:line="562" pos:column="52"/></operator><name pos:line="562" pos:column="52">name<pos:position pos:line="562" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="562" pos:column="57"/></decl_stmt>

                            <if pos:line="564" pos:column="29">if <condition pos:line="564" pos:column="32">(<expr><operator pos:line="564" pos:column="33">!<pos:position pos:line="564" pos:column="34"/></operator><call><name pos:line="564" pos:column="34">strncmp<pos:position pos:line="564" pos:column="41"/></name><argument_list pos:line="564" pos:column="41">(<argument><expr><name pos:line="564" pos:column="42">lang<pos:position pos:line="564" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="564" pos:column="48">accs<pos:position pos:line="564" pos:column="52"/></name><index pos:line="564" pos:column="52">[<expr><name pos:line="564" pos:column="53">i<pos:position pos:line="564" pos:column="54"/></name></expr>]<pos:position pos:line="564" pos:column="55"/></index></name><operator pos:line="564" pos:column="55">.<pos:position pos:line="564" pos:column="56"/></operator><name pos:line="564" pos:column="56">name<pos:position pos:line="564" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="564" pos:column="62">plen<pos:position pos:line="564" pos:column="66"/></name></expr></argument>)<pos:position pos:line="564" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="564" pos:column="68"/></condition><then pos:line="564" pos:column="68"> <block pos:line="564" pos:column="69">{
                                <expr_stmt><expr><name pos:line="565" pos:column="33">fiddle_q<pos:position pos:line="565" pos:column="41"/></name> <operator pos:line="565" pos:column="42">=<pos:position pos:line="565" pos:column="43"/></operator> <literal type="number" pos:line="565" pos:column="44">0.001f<pos:position pos:line="565" pos:column="50"/></literal></expr>;<pos:position pos:line="565" pos:column="51"/></expr_stmt>
                            }<pos:position pos:line="566" pos:column="30"/></block></then></if>
                        }<pos:position pos:line="567" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="568" pos:column="22"/></block></then></if>
                }<pos:position pos:line="569" pos:column="18"/></block></for>
                <comment type="block" pos:line="570" pos:column="17">/* Finished looking at Accept-Language headers, the best
                 * (longest) match is in bestthistag, or NULL if no match
                 */</comment>
                <if pos:line="573" pos:column="17">if <condition pos:line="573" pos:column="20">(<expr><operator pos:line="573" pos:column="21">!<pos:position pos:line="573" pos:column="22"/></operator><name pos:line="573" pos:column="22">best<pos:position pos:line="573" pos:column="26"/></name> <operator pos:line="573" pos:column="27">||<pos:position pos:line="573" pos:column="29"/></operator>
                    <operator pos:line="574" pos:column="21">(<pos:position pos:line="574" pos:column="22"/></operator><name pos:line="574" pos:column="22">bestthistag<pos:position pos:line="574" pos:column="33"/></name> <operator pos:line="574" pos:column="34">&amp;&amp;<pos:position pos:line="574" pos:column="44"/></operator> <name><name pos:line="574" pos:column="37">bestthistag<pos:position pos:line="574" pos:column="48"/></name><operator pos:line="574" pos:column="48">-&gt;<pos:position pos:line="574" pos:column="53"/></operator><name pos:line="574" pos:column="50">quality<pos:position pos:line="574" pos:column="57"/></name></name> <operator pos:line="574" pos:column="58">&gt;<pos:position pos:line="574" pos:column="62"/></operator> <name><name pos:line="574" pos:column="60">best<pos:position pos:line="574" pos:column="64"/></name><operator pos:line="574" pos:column="64">-&gt;<pos:position pos:line="574" pos:column="69"/></operator><name pos:line="574" pos:column="66">quality<pos:position pos:line="574" pos:column="73"/></name></name><operator pos:line="574" pos:column="73">)<pos:position pos:line="574" pos:column="74"/></operator></expr>)<pos:position pos:line="574" pos:column="75"/></condition><then pos:line="574" pos:column="75"> <block pos:line="574" pos:column="76">{
                    <expr_stmt><expr><name pos:line="575" pos:column="21">best<pos:position pos:line="575" pos:column="25"/></name> <operator pos:line="575" pos:column="26">=<pos:position pos:line="575" pos:column="27"/></operator> <name pos:line="575" pos:column="28">bestthistag<pos:position pos:line="575" pos:column="39"/></name></expr>;<pos:position pos:line="575" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="576" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="578" pos:column="17">/* See if the tag matches on a * in the Accept-Language
                 * header. If so, record this fact for later use
                 */</comment>
                <if pos:line="581" pos:column="17">if <condition pos:line="581" pos:column="20">(<expr><operator pos:line="581" pos:column="21">!<pos:position pos:line="581" pos:column="22"/></operator><name pos:line="581" pos:column="22">bestthistag<pos:position pos:line="581" pos:column="33"/></name> <operator pos:line="581" pos:column="34">&amp;&amp;<pos:position pos:line="581" pos:column="44"/></operator> <name pos:line="581" pos:column="37">star<pos:position pos:line="581" pos:column="41"/></name></expr>)<pos:position pos:line="581" pos:column="42"/></condition><then pos:line="581" pos:column="42"> <block pos:line="581" pos:column="43">{
                    <expr_stmt><expr><name pos:line="582" pos:column="21">any_match_on_star<pos:position pos:line="582" pos:column="38"/></name> <operator pos:line="582" pos:column="39">=<pos:position pos:line="582" pos:column="40"/></operator> <literal type="number" pos:line="582" pos:column="41">1<pos:position pos:line="582" pos:column="42"/></literal></expr>;<pos:position pos:line="582" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="583" pos:column="18"/></block></then></if>
            }<pos:position pos:line="584" pos:column="14"/></block></for>

            <comment type="block" pos:line="586" pos:column="13">/* If one of the language tags of the variant matched on *, we
             * need to see if its q is better than that of any non-* match
             * on any other tag of the variant.  If so the * match takes
             * precedence and the overall match is not definite.
             */</comment>
            <if pos:line="591" pos:column="13">if <condition pos:line="591" pos:column="16">( <expr><name pos:line="591" pos:column="18">any_match_on_star<pos:position pos:line="591" pos:column="35"/></name> <operator pos:line="591" pos:column="36">&amp;&amp;<pos:position pos:line="591" pos:column="46"/></operator>
                <operator pos:line="592" pos:column="17">(<pos:position pos:line="592" pos:column="18"/></operator><operator pos:line="592" pos:column="18">(<pos:position pos:line="592" pos:column="19"/></operator><name pos:line="592" pos:column="19">best<pos:position pos:line="592" pos:column="23"/></name> <operator pos:line="592" pos:column="24">&amp;&amp;<pos:position pos:line="592" pos:column="34"/></operator> <name><name pos:line="592" pos:column="27">star<pos:position pos:line="592" pos:column="31"/></name><operator pos:line="592" pos:column="31">-&gt;<pos:position pos:line="592" pos:column="36"/></operator><name pos:line="592" pos:column="33">quality<pos:position pos:line="592" pos:column="40"/></name></name> <operator pos:line="592" pos:column="41">&gt;<pos:position pos:line="592" pos:column="45"/></operator> <name><name pos:line="592" pos:column="43">best<pos:position pos:line="592" pos:column="47"/></name><operator pos:line="592" pos:column="47">-&gt;<pos:position pos:line="592" pos:column="52"/></operator><name pos:line="592" pos:column="49">quality<pos:position pos:line="592" pos:column="56"/></name></name><operator pos:line="592" pos:column="56">)<pos:position pos:line="592" pos:column="57"/></operator> <operator pos:line="592" pos:column="58">||<pos:position pos:line="592" pos:column="60"/></operator>
                 <operator pos:line="593" pos:column="18">(<pos:position pos:line="593" pos:column="19"/></operator><operator pos:line="593" pos:column="19">!<pos:position pos:line="593" pos:column="20"/></operator><name pos:line="593" pos:column="20">best<pos:position pos:line="593" pos:column="24"/></name><operator pos:line="593" pos:column="24">)<pos:position pos:line="593" pos:column="25"/></operator><operator pos:line="593" pos:column="25">)<pos:position pos:line="593" pos:column="26"/></operator></expr> )<pos:position pos:line="593" pos:column="28"/></condition><then pos:line="593" pos:column="28"> <block pos:line="593" pos:column="29">{
                <expr_stmt><expr><name pos:line="594" pos:column="17">best<pos:position pos:line="594" pos:column="21"/></name> <operator pos:line="594" pos:column="22">=<pos:position pos:line="594" pos:column="23"/></operator> <name pos:line="594" pos:column="24">star<pos:position pos:line="594" pos:column="28"/></name></expr>;<pos:position pos:line="594" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="595" pos:column="17">variant<pos:position pos:line="595" pos:column="24"/></name><operator pos:line="595" pos:column="24">-&gt;<pos:position pos:line="595" pos:column="29"/></operator><name pos:line="595" pos:column="26">definite<pos:position pos:line="595" pos:column="34"/></name></name> <operator pos:line="595" pos:column="35">=<pos:position pos:line="595" pos:column="36"/></operator> <literal type="number" pos:line="595" pos:column="37">0<pos:position pos:line="595" pos:column="38"/></literal></expr>;<pos:position pos:line="595" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="596" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="598" pos:column="13">variant<pos:position pos:line="598" pos:column="20"/></name><operator pos:line="598" pos:column="20">-&gt;<pos:position pos:line="598" pos:column="25"/></operator><name pos:line="598" pos:column="22">lang_quality<pos:position pos:line="598" pos:column="34"/></name></name> <operator pos:line="598" pos:column="35">=<pos:position pos:line="598" pos:column="36"/></operator> <ternary><condition><expr><name pos:line="598" pos:column="37">best<pos:position pos:line="598" pos:column="41"/></name></expr> ?<pos:position pos:line="598" pos:column="43"/></condition><then pos:line="598" pos:column="43"> <expr><name><name pos:line="598" pos:column="44">best<pos:position pos:line="598" pos:column="48"/></name><operator pos:line="598" pos:column="48">-&gt;<pos:position pos:line="598" pos:column="53"/></operator><name pos:line="598" pos:column="50">quality<pos:position pos:line="598" pos:column="57"/></name></name></expr> <pos:position pos:line="598" pos:column="58"/></then><else pos:line="598" pos:column="58">: <expr><name pos:line="598" pos:column="60">fiddle_q<pos:position pos:line="598" pos:column="68"/></name></expr></else></ternary></expr>;<pos:position pos:line="598" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="599" pos:column="10"/></block></else></if>
    }<pos:position pos:line="600" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="602" pos:column="5">/* Handle the ForceDefaultLanguage overrides, based on the best match
     * to LanguagePriority order.  The best match is the lowest index of
     * any LanguagePriority match.
     */</comment>
    <if pos:line="606" pos:column="5">if <condition pos:line="606" pos:column="8">(<expr><operator pos:line="606" pos:column="9">(<pos:position pos:line="606" pos:column="10"/></operator><operator pos:line="606" pos:column="10">(<pos:position pos:line="606" pos:column="11"/></operator><name pos:line="606" pos:column="11">forcepriority<pos:position pos:line="606" pos:column="24"/></name> <operator pos:line="606" pos:column="25">&amp;<pos:position pos:line="606" pos:column="30"/></operator> <name pos:line="606" pos:column="27">FLP_PREFER<pos:position pos:line="606" pos:column="37"/></name><operator pos:line="606" pos:column="37">)<pos:position pos:line="606" pos:column="38"/></operator>
             <operator pos:line="607" pos:column="14">&amp;&amp;<pos:position pos:line="607" pos:column="24"/></operator> <operator pos:line="607" pos:column="17">(<pos:position pos:line="607" pos:column="18"/></operator><name><name pos:line="607" pos:column="18">variant<pos:position pos:line="607" pos:column="25"/></name><operator pos:line="607" pos:column="25">-&gt;<pos:position pos:line="607" pos:column="30"/></operator><name pos:line="607" pos:column="27">lang_index<pos:position pos:line="607" pos:column="37"/></name></name> <operator pos:line="607" pos:column="38">&lt;<pos:position pos:line="607" pos:column="42"/></operator> <literal type="number" pos:line="607" pos:column="40">0<pos:position pos:line="607" pos:column="41"/></literal><operator pos:line="607" pos:column="41">)<pos:position pos:line="607" pos:column="42"/></operator><operator pos:line="607" pos:column="42">)<pos:position pos:line="607" pos:column="43"/></operator>
     <operator pos:line="608" pos:column="6">||<pos:position pos:line="608" pos:column="8"/></operator> <operator pos:line="608" pos:column="9">(<pos:position pos:line="608" pos:column="10"/></operator><operator pos:line="608" pos:column="10">(<pos:position pos:line="608" pos:column="11"/></operator><name pos:line="608" pos:column="11">forcepriority<pos:position pos:line="608" pos:column="24"/></name> <operator pos:line="608" pos:column="25">&amp;<pos:position pos:line="608" pos:column="30"/></operator> <name pos:line="608" pos:column="27">FLP_FALLBACK<pos:position pos:line="608" pos:column="39"/></name><operator pos:line="608" pos:column="39">)<pos:position pos:line="608" pos:column="40"/></operator>
             <operator pos:line="609" pos:column="14">&amp;&amp;<pos:position pos:line="609" pos:column="24"/></operator> <operator pos:line="609" pos:column="17">!<pos:position pos:line="609" pos:column="18"/></operator><name><name pos:line="609" pos:column="18">variant<pos:position pos:line="609" pos:column="25"/></name><operator pos:line="609" pos:column="25">-&gt;<pos:position pos:line="609" pos:column="30"/></operator><name pos:line="609" pos:column="27">lang_quality<pos:position pos:line="609" pos:column="39"/></name></name><operator pos:line="609" pos:column="39">)<pos:position pos:line="609" pos:column="40"/></operator></expr>)<pos:position pos:line="609" pos:column="41"/></condition><then pos:line="609" pos:column="41">
    <block pos:line="610" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="611" pos:column="9">int<pos:position pos:line="611" pos:column="12"/></name></type> <name pos:line="611" pos:column="13">bestidx<pos:position pos:line="611" pos:column="20"/></name> <init pos:line="611" pos:column="21">= <expr><operator pos:line="611" pos:column="23">-<pos:position pos:line="611" pos:column="24"/></operator><literal type="number" pos:line="611" pos:column="24">1<pos:position pos:line="611" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="611" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="612" pos:column="9">int<pos:position pos:line="612" pos:column="12"/></name></type> <name pos:line="612" pos:column="13">j<pos:position pos:line="612" pos:column="14"/></name></decl>;<pos:position pos:line="612" pos:column="15"/></decl_stmt>

        <for pos:line="614" pos:column="9">for <control pos:line="614" pos:column="13">(<init><expr><name pos:line="614" pos:column="14">j<pos:position pos:line="614" pos:column="15"/></name> <operator pos:line="614" pos:column="16">=<pos:position pos:line="614" pos:column="17"/></operator> <literal type="number" pos:line="614" pos:column="18">0<pos:position pos:line="614" pos:column="19"/></literal></expr>;<pos:position pos:line="614" pos:column="20"/></init> <condition><expr><name pos:line="614" pos:column="21">j<pos:position pos:line="614" pos:column="22"/></name> <operator pos:line="614" pos:column="23">&lt;<pos:position pos:line="614" pos:column="27"/></operator> <name><name pos:line="614" pos:column="25">variant<pos:position pos:line="614" pos:column="32"/></name><operator pos:line="614" pos:column="32">-&gt;<pos:position pos:line="614" pos:column="37"/></operator><name pos:line="614" pos:column="34">content_languages<pos:position pos:line="614" pos:column="51"/></name><operator pos:line="614" pos:column="51">-&gt;<pos:position pos:line="614" pos:column="56"/></operator><name pos:line="614" pos:column="53">nelts<pos:position pos:line="614" pos:column="58"/></name></name></expr>;<pos:position pos:line="614" pos:column="59"/></condition> <incr><expr><operator pos:line="614" pos:column="60">++<pos:position pos:line="614" pos:column="62"/></operator><name pos:line="614" pos:column="62">j<pos:position pos:line="614" pos:column="63"/></name></expr></incr>)<pos:position pos:line="614" pos:column="64"/></control>
        <block pos:line="615" pos:column="9">{
            <comment type="block" pos:line="616" pos:column="13">/* lang is the variant's language-tag, which is the one
             * we are allowed to use the prefix of in HTTP/1.1
             */</comment>
            <decl_stmt><decl><type><name pos:line="619" pos:column="13">char<pos:position pos:line="619" pos:column="17"/></name> <modifier pos:line="619" pos:column="18">*<pos:position pos:line="619" pos:column="19"/></modifier></type><name pos:line="619" pos:column="19">lang<pos:position pos:line="619" pos:column="23"/></name> <init pos:line="619" pos:column="24">= <expr><operator pos:line="619" pos:column="26">(<pos:position pos:line="619" pos:column="27"/></operator><operator pos:line="619" pos:column="27">(<pos:position pos:line="619" pos:column="28"/></operator><name pos:line="619" pos:column="28">char<pos:position pos:line="619" pos:column="32"/></name> <operator pos:line="619" pos:column="33">*<pos:position pos:line="619" pos:column="34"/></operator><operator pos:line="619" pos:column="34">*<pos:position pos:line="619" pos:column="35"/></operator><operator pos:line="619" pos:column="35">)<pos:position pos:line="619" pos:column="36"/></operator> <operator pos:line="619" pos:column="37">(<pos:position pos:line="619" pos:column="38"/></operator><name><name pos:line="619" pos:column="38">variant<pos:position pos:line="619" pos:column="45"/></name><operator pos:line="619" pos:column="45">-&gt;<pos:position pos:line="619" pos:column="50"/></operator><name pos:line="619" pos:column="47">content_languages<pos:position pos:line="619" pos:column="64"/></name><operator pos:line="619" pos:column="64">-&gt;<pos:position pos:line="619" pos:column="69"/></operator><name pos:line="619" pos:column="66">elts<pos:position pos:line="619" pos:column="70"/></name></name><operator pos:line="619" pos:column="70">)<pos:position pos:line="619" pos:column="71"/></operator><operator pos:line="619" pos:column="71">)<pos:position pos:line="619" pos:column="72"/></operator><index pos:line="619" pos:column="72">[<expr><name pos:line="619" pos:column="73">j<pos:position pos:line="619" pos:column="74"/></name></expr>]<pos:position pos:line="619" pos:column="75"/></index></expr></init></decl>;<pos:position pos:line="619" pos:column="76"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="620" pos:column="13">int<pos:position pos:line="620" pos:column="16"/></name></type> <name pos:line="620" pos:column="17">idx<pos:position pos:line="620" pos:column="20"/></name> <init pos:line="620" pos:column="21">= <expr><operator pos:line="620" pos:column="23">-<pos:position pos:line="620" pos:column="24"/></operator><literal type="number" pos:line="620" pos:column="24">1<pos:position pos:line="620" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="620" pos:column="26"/></decl_stmt>

            <comment type="block" pos:line="622" pos:column="13">/* If we wish to fallback or
             * we use our own LanguagePriority index.
             */</comment>
            <expr_stmt><expr><name pos:line="625" pos:column="13">idx<pos:position pos:line="625" pos:column="16"/></name> <operator pos:line="625" pos:column="17">=<pos:position pos:line="625" pos:column="18"/></operator> <call><name pos:line="625" pos:column="19">find_lang_index<pos:position pos:line="625" pos:column="34"/></name><argument_list pos:line="625" pos:column="34">(<argument><expr><name><name pos:line="625" pos:column="35">neg<pos:position pos:line="625" pos:column="38"/></name><operator pos:line="625" pos:column="38">-&gt;<pos:position pos:line="625" pos:column="43"/></operator><name pos:line="625" pos:column="40">conf<pos:position pos:line="625" pos:column="44"/></name><operator pos:line="625" pos:column="44">-&gt;<pos:position pos:line="625" pos:column="49"/></operator><name pos:line="625" pos:column="46">language_priority<pos:position pos:line="625" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="625" pos:column="65">lang<pos:position pos:line="625" pos:column="69"/></name></expr></argument>)<pos:position pos:line="625" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="625" pos:column="71"/></expr_stmt>
            <if pos:line="626" pos:column="13">if <condition pos:line="626" pos:column="16">(<expr><operator pos:line="626" pos:column="17">(<pos:position pos:line="626" pos:column="18"/></operator><name pos:line="626" pos:column="18">idx<pos:position pos:line="626" pos:column="21"/></name> <operator pos:line="626" pos:column="22">&gt;=<pos:position pos:line="626" pos:column="27"/></operator> <literal type="number" pos:line="626" pos:column="25">0<pos:position pos:line="626" pos:column="26"/></literal><operator pos:line="626" pos:column="26">)<pos:position pos:line="626" pos:column="27"/></operator> <operator pos:line="626" pos:column="28">&amp;&amp;<pos:position pos:line="626" pos:column="38"/></operator> <operator pos:line="626" pos:column="31">(<pos:position pos:line="626" pos:column="32"/></operator><operator pos:line="626" pos:column="32">(<pos:position pos:line="626" pos:column="33"/></operator><name pos:line="626" pos:column="33">bestidx<pos:position pos:line="626" pos:column="40"/></name> <operator pos:line="626" pos:column="41">==<pos:position pos:line="626" pos:column="43"/></operator> <operator pos:line="626" pos:column="44">-<pos:position pos:line="626" pos:column="45"/></operator><literal type="number" pos:line="626" pos:column="45">1<pos:position pos:line="626" pos:column="46"/></literal><operator pos:line="626" pos:column="46">)<pos:position pos:line="626" pos:column="47"/></operator> <operator pos:line="626" pos:column="48">||<pos:position pos:line="626" pos:column="50"/></operator> <operator pos:line="626" pos:column="51">(<pos:position pos:line="626" pos:column="52"/></operator><name pos:line="626" pos:column="52">idx<pos:position pos:line="626" pos:column="55"/></name> <operator pos:line="626" pos:column="56">&lt;<pos:position pos:line="626" pos:column="60"/></operator> <name pos:line="626" pos:column="58">bestidx<pos:position pos:line="626" pos:column="65"/></name><operator pos:line="626" pos:column="65">)<pos:position pos:line="626" pos:column="66"/></operator><operator pos:line="626" pos:column="66">)<pos:position pos:line="626" pos:column="67"/></operator></expr>)<pos:position pos:line="626" pos:column="68"/></condition><then pos:line="626" pos:column="68"> <block pos:line="626" pos:column="69">{
                <expr_stmt><expr><name pos:line="627" pos:column="17">bestidx<pos:position pos:line="627" pos:column="24"/></name> <operator pos:line="627" pos:column="25">=<pos:position pos:line="627" pos:column="26"/></operator> <name pos:line="627" pos:column="27">idx<pos:position pos:line="627" pos:column="30"/></name></expr>;<pos:position pos:line="627" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="628" pos:column="14"/></block></then></if>
        }<pos:position pos:line="629" pos:column="10"/></block></for>

        <if pos:line="631" pos:column="9">if <condition pos:line="631" pos:column="12">(<expr><name pos:line="631" pos:column="13">bestidx<pos:position pos:line="631" pos:column="20"/></name> <operator pos:line="631" pos:column="21">&gt;=<pos:position pos:line="631" pos:column="26"/></operator> <literal type="number" pos:line="631" pos:column="24">0<pos:position pos:line="631" pos:column="25"/></literal></expr>)<pos:position pos:line="631" pos:column="26"/></condition><then pos:line="631" pos:column="26"> <block pos:line="631" pos:column="27">{
            <if pos:line="632" pos:column="13">if <condition pos:line="632" pos:column="16">(<expr><name><name pos:line="632" pos:column="17">variant<pos:position pos:line="632" pos:column="24"/></name><operator pos:line="632" pos:column="24">-&gt;<pos:position pos:line="632" pos:column="29"/></operator><name pos:line="632" pos:column="26">lang_quality<pos:position pos:line="632" pos:column="38"/></name></name></expr>)<pos:position pos:line="632" pos:column="39"/></condition><then pos:line="632" pos:column="39"> <block pos:line="632" pos:column="40">{
                <if pos:line="633" pos:column="17">if <condition pos:line="633" pos:column="20">(<expr><name pos:line="633" pos:column="21">forcepriority<pos:position pos:line="633" pos:column="34"/></name> <operator pos:line="633" pos:column="35">&amp;<pos:position pos:line="633" pos:column="40"/></operator> <name pos:line="633" pos:column="37">FLP_PREFER<pos:position pos:line="633" pos:column="47"/></name></expr>)<pos:position pos:line="633" pos:column="48"/></condition><then pos:line="633" pos:column="48"> <block pos:line="633" pos:column="49">{
                    <expr_stmt><expr><name><name pos:line="634" pos:column="21">variant<pos:position pos:line="634" pos:column="28"/></name><operator pos:line="634" pos:column="28">-&gt;<pos:position pos:line="634" pos:column="33"/></operator><name pos:line="634" pos:column="30">lang_index<pos:position pos:line="634" pos:column="40"/></name></name> <operator pos:line="634" pos:column="41">=<pos:position pos:line="634" pos:column="42"/></operator> <name pos:line="634" pos:column="43">bestidx<pos:position pos:line="634" pos:column="50"/></name></expr>;<pos:position pos:line="634" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="635" pos:column="18"/></block></then></if>
            }<pos:position pos:line="636" pos:column="14"/></block></then>
            <else pos:line="637" pos:column="13">else <block pos:line="637" pos:column="18">{
                <if pos:line="638" pos:column="17">if <condition pos:line="638" pos:column="20">(<expr><name pos:line="638" pos:column="21">forcepriority<pos:position pos:line="638" pos:column="34"/></name> <operator pos:line="638" pos:column="35">&amp;<pos:position pos:line="638" pos:column="40"/></operator> <name pos:line="638" pos:column="37">FLP_FALLBACK<pos:position pos:line="638" pos:column="49"/></name></expr>)<pos:position pos:line="638" pos:column="50"/></condition><then pos:line="638" pos:column="50"> <block pos:line="638" pos:column="51">{
                    <expr_stmt><expr><name><name pos:line="639" pos:column="21">variant<pos:position pos:line="639" pos:column="28"/></name><operator pos:line="639" pos:column="28">-&gt;<pos:position pos:line="639" pos:column="33"/></operator><name pos:line="639" pos:column="30">lang_index<pos:position pos:line="639" pos:column="40"/></name></name> <operator pos:line="639" pos:column="41">=<pos:position pos:line="639" pos:column="42"/></operator> <name pos:line="639" pos:column="43">bestidx<pos:position pos:line="639" pos:column="50"/></name></expr>;<pos:position pos:line="639" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="640" pos:column="21">variant<pos:position pos:line="640" pos:column="28"/></name><operator pos:line="640" pos:column="28">-&gt;<pos:position pos:line="640" pos:column="33"/></operator><name pos:line="640" pos:column="30">lang_quality<pos:position pos:line="640" pos:column="42"/></name></name> <operator pos:line="640" pos:column="43">=<pos:position pos:line="640" pos:column="44"/></operator> <literal type="number" pos:line="640" pos:column="45">.0001f<pos:position pos:line="640" pos:column="51"/></literal></expr>;<pos:position pos:line="640" pos:column="52"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="641" pos:column="21">variant<pos:position pos:line="641" pos:column="28"/></name><operator pos:line="641" pos:column="28">-&gt;<pos:position pos:line="641" pos:column="33"/></operator><name pos:line="641" pos:column="30">definite<pos:position pos:line="641" pos:column="38"/></name></name> <operator pos:line="641" pos:column="39">=<pos:position pos:line="641" pos:column="40"/></operator> <literal type="number" pos:line="641" pos:column="41">0<pos:position pos:line="641" pos:column="42"/></literal></expr>;<pos:position pos:line="641" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="642" pos:column="18"/></block></then></if>
            }<pos:position pos:line="643" pos:column="14"/></block></else></if>
        }<pos:position pos:line="644" pos:column="10"/></block></then></if>
    }<pos:position pos:line="645" pos:column="6"/></block></then></if>
    <return pos:line="646" pos:column="5">return;<pos:position pos:line="646" pos:column="12"/></return>
}<pos:position pos:line="647" pos:column="2"/></block></function>

<comment type="block" pos:line="649" pos:column="1">/* Determining the content length --- if the map didn't tell us,
 * we have to do a stat() and remember for next time.
 */</comment>

<function><specifier pos:line="653" pos:column="1">static<pos:position pos:line="653" pos:column="7"/></specifier> <type><name pos:line="653" pos:column="8">apr_off_t<pos:position pos:line="653" pos:column="17"/></name></type> <name pos:line="653" pos:column="18">find_content_length<pos:position pos:line="653" pos:column="37"/></name><parameter_list pos:line="653" pos:column="37">(<parameter><decl><type><name pos:line="653" pos:column="38">negotiation_state<pos:position pos:line="653" pos:column="55"/></name> <modifier pos:line="653" pos:column="56">*<pos:position pos:line="653" pos:column="57"/></modifier></type><name pos:line="653" pos:column="57">neg<pos:position pos:line="653" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="653" pos:column="62">var_rec<pos:position pos:line="653" pos:column="69"/></name> <modifier pos:line="653" pos:column="70">*<pos:position pos:line="653" pos:column="71"/></modifier></type><name pos:line="653" pos:column="71">variant<pos:position pos:line="653" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="653" pos:column="79"/></parameter_list>
<block pos:line="654" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="655" pos:column="5">apr_finfo_t<pos:position pos:line="655" pos:column="16"/></name></type> <name pos:line="655" pos:column="17">statb<pos:position pos:line="655" pos:column="22"/></name></decl>;<pos:position pos:line="655" pos:column="23"/></decl_stmt>

    <if pos:line="657" pos:column="5">if <condition pos:line="657" pos:column="8">(<expr><name><name pos:line="657" pos:column="9">variant<pos:position pos:line="657" pos:column="16"/></name><operator pos:line="657" pos:column="16">-&gt;<pos:position pos:line="657" pos:column="21"/></operator><name pos:line="657" pos:column="18">bytes<pos:position pos:line="657" pos:column="23"/></name></name> <operator pos:line="657" pos:column="24">&lt;<pos:position pos:line="657" pos:column="28"/></operator> <literal type="number" pos:line="657" pos:column="26">0<pos:position pos:line="657" pos:column="27"/></literal></expr>)<pos:position pos:line="657" pos:column="28"/></condition><then pos:line="657" pos:column="28"> <block pos:line="657" pos:column="29">{
        <if pos:line="658" pos:column="9">if <condition pos:line="658" pos:column="12">(   <expr><name><name pos:line="658" pos:column="16">variant<pos:position pos:line="658" pos:column="23"/></name><operator pos:line="658" pos:column="23">-&gt;<pos:position pos:line="658" pos:column="28"/></operator><name pos:line="658" pos:column="25">sub_req<pos:position pos:line="658" pos:column="32"/></name></name>
            <operator pos:line="659" pos:column="13">&amp;&amp;<pos:position pos:line="659" pos:column="23"/></operator> <operator pos:line="659" pos:column="16">(<pos:position pos:line="659" pos:column="17"/></operator><name><name pos:line="659" pos:column="17">variant<pos:position pos:line="659" pos:column="24"/></name><operator pos:line="659" pos:column="24">-&gt;<pos:position pos:line="659" pos:column="29"/></operator><name pos:line="659" pos:column="26">sub_req<pos:position pos:line="659" pos:column="33"/></name><operator pos:line="659" pos:column="33">-&gt;<pos:position pos:line="659" pos:column="38"/></operator><name pos:line="659" pos:column="35">finfo<pos:position pos:line="659" pos:column="40"/></name><operator pos:line="659" pos:column="40">.<pos:position pos:line="659" pos:column="41"/></operator><name pos:line="659" pos:column="41">valid<pos:position pos:line="659" pos:column="46"/></name></name> <operator pos:line="659" pos:column="47">&amp;<pos:position pos:line="659" pos:column="52"/></operator> <name pos:line="659" pos:column="49">APR_FINFO_SIZE<pos:position pos:line="659" pos:column="63"/></name><operator pos:line="659" pos:column="63">)<pos:position pos:line="659" pos:column="64"/></operator></expr>)<pos:position pos:line="659" pos:column="65"/></condition><then pos:line="659" pos:column="65"> <block pos:line="659" pos:column="66">{
            <expr_stmt><expr><name><name pos:line="660" pos:column="13">variant<pos:position pos:line="660" pos:column="20"/></name><operator pos:line="660" pos:column="20">-&gt;<pos:position pos:line="660" pos:column="25"/></operator><name pos:line="660" pos:column="22">bytes<pos:position pos:line="660" pos:column="27"/></name></name> <operator pos:line="660" pos:column="28">=<pos:position pos:line="660" pos:column="29"/></operator> <name><name pos:line="660" pos:column="30">variant<pos:position pos:line="660" pos:column="37"/></name><operator pos:line="660" pos:column="37">-&gt;<pos:position pos:line="660" pos:column="42"/></operator><name pos:line="660" pos:column="39">sub_req<pos:position pos:line="660" pos:column="46"/></name><operator pos:line="660" pos:column="46">-&gt;<pos:position pos:line="660" pos:column="51"/></operator><name pos:line="660" pos:column="48">finfo<pos:position pos:line="660" pos:column="53"/></name><operator pos:line="660" pos:column="53">.<pos:position pos:line="660" pos:column="54"/></operator><name pos:line="660" pos:column="54">size<pos:position pos:line="660" pos:column="58"/></name></name></expr>;<pos:position pos:line="660" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="661" pos:column="10"/></block></then>
        <else pos:line="662" pos:column="9">else <block pos:line="662" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="663" pos:column="13">char<pos:position pos:line="663" pos:column="17"/></name> <modifier pos:line="663" pos:column="18">*<pos:position pos:line="663" pos:column="19"/></modifier></type><name pos:line="663" pos:column="19">fullname<pos:position pos:line="663" pos:column="27"/></name> <init pos:line="663" pos:column="28">= <expr><call><name pos:line="663" pos:column="30">ap_make_full_path<pos:position pos:line="663" pos:column="47"/></name><argument_list pos:line="663" pos:column="47">(<argument><expr><name><name pos:line="663" pos:column="48">neg<pos:position pos:line="663" pos:column="51"/></name><operator pos:line="663" pos:column="51">-&gt;<pos:position pos:line="663" pos:column="56"/></operator><name pos:line="663" pos:column="53">pool<pos:position pos:line="663" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="663" pos:column="59">neg<pos:position pos:line="663" pos:column="62"/></name><operator pos:line="663" pos:column="62">-&gt;<pos:position pos:line="663" pos:column="67"/></operator><name pos:line="663" pos:column="64">dir_name<pos:position pos:line="663" pos:column="72"/></name></name></expr></argument>,
                                               <argument><expr><name><name pos:line="664" pos:column="48">variant<pos:position pos:line="664" pos:column="55"/></name><operator pos:line="664" pos:column="55">-&gt;<pos:position pos:line="664" pos:column="60"/></operator><name pos:line="664" pos:column="57">file_name<pos:position pos:line="664" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="664" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="664" pos:column="68"/></decl_stmt>

            <if pos:line="666" pos:column="13">if <condition pos:line="666" pos:column="16">(<expr><call><name pos:line="666" pos:column="17">apr_stat<pos:position pos:line="666" pos:column="25"/></name><argument_list pos:line="666" pos:column="25">(<argument><expr><operator pos:line="666" pos:column="26">&amp;<pos:position pos:line="666" pos:column="31"/></operator><name pos:line="666" pos:column="27">statb<pos:position pos:line="666" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="666" pos:column="34">fullname<pos:position pos:line="666" pos:column="42"/></name></expr></argument>,
                         <argument><expr><name pos:line="667" pos:column="26">APR_FINFO_SIZE<pos:position pos:line="667" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="667" pos:column="42">neg<pos:position pos:line="667" pos:column="45"/></name><operator pos:line="667" pos:column="45">-&gt;<pos:position pos:line="667" pos:column="50"/></operator><name pos:line="667" pos:column="47">pool<pos:position pos:line="667" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="667" pos:column="52"/></argument_list></call> <operator pos:line="667" pos:column="53">==<pos:position pos:line="667" pos:column="55"/></operator> <name pos:line="667" pos:column="56">APR_SUCCESS<pos:position pos:line="667" pos:column="67"/></name></expr>)<pos:position pos:line="667" pos:column="68"/></condition><then pos:line="667" pos:column="68"> <block pos:line="667" pos:column="69">{
                <expr_stmt><expr><name><name pos:line="668" pos:column="17">variant<pos:position pos:line="668" pos:column="24"/></name><operator pos:line="668" pos:column="24">-&gt;<pos:position pos:line="668" pos:column="29"/></operator><name pos:line="668" pos:column="26">bytes<pos:position pos:line="668" pos:column="31"/></name></name> <operator pos:line="668" pos:column="32">=<pos:position pos:line="668" pos:column="33"/></operator> <name><name pos:line="668" pos:column="34">statb<pos:position pos:line="668" pos:column="39"/></name><operator pos:line="668" pos:column="39">.<pos:position pos:line="668" pos:column="40"/></operator><name pos:line="668" pos:column="40">size<pos:position pos:line="668" pos:column="44"/></name></name></expr>;<pos:position pos:line="668" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="669" pos:column="14"/></block></then></if>
        }<pos:position pos:line="670" pos:column="10"/></block></else></if>
    }<pos:position pos:line="671" pos:column="6"/></block></then></if>

    <return pos:line="673" pos:column="5">return <expr><name><name pos:line="673" pos:column="12">variant<pos:position pos:line="673" pos:column="19"/></name><operator pos:line="673" pos:column="19">-&gt;<pos:position pos:line="673" pos:column="24"/></operator><name pos:line="673" pos:column="21">bytes<pos:position pos:line="673" pos:column="26"/></name></name></expr>;<pos:position pos:line="673" pos:column="27"/></return>
}<pos:position pos:line="674" pos:column="2"/></block></function>

<comment type="block" pos:line="676" pos:column="1">/* For a given variant, find the best matching Accept: header
 * and assign the Accept: header's quality value to the
 * mime_type_quality field of the variant, for later use in
 * determining the best matching variant.
 */</comment>

<function><specifier pos:line="682" pos:column="1">static<pos:position pos:line="682" pos:column="7"/></specifier> <type><name pos:line="682" pos:column="8">void<pos:position pos:line="682" pos:column="12"/></name></type> <name pos:line="682" pos:column="13">set_accept_quality<pos:position pos:line="682" pos:column="31"/></name><parameter_list pos:line="682" pos:column="31">(<parameter><decl><type><name pos:line="682" pos:column="32">negotiation_state<pos:position pos:line="682" pos:column="49"/></name> <modifier pos:line="682" pos:column="50">*<pos:position pos:line="682" pos:column="51"/></modifier></type><name pos:line="682" pos:column="51">neg<pos:position pos:line="682" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="682" pos:column="56">var_rec<pos:position pos:line="682" pos:column="63"/></name> <modifier pos:line="682" pos:column="64">*<pos:position pos:line="682" pos:column="65"/></modifier></type><name pos:line="682" pos:column="65">variant<pos:position pos:line="682" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="682" pos:column="73"/></parameter_list>
<block pos:line="683" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="684" pos:column="5">int<pos:position pos:line="684" pos:column="8"/></name></type> <name pos:line="684" pos:column="9">i<pos:position pos:line="684" pos:column="10"/></name></decl>;<pos:position pos:line="684" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="685" pos:column="5">accept_rec<pos:position pos:line="685" pos:column="15"/></name> <modifier pos:line="685" pos:column="16">*<pos:position pos:line="685" pos:column="17"/></modifier></type><name pos:line="685" pos:column="17">accept_recs<pos:position pos:line="685" pos:column="28"/></name></decl>;<pos:position pos:line="685" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="686" pos:column="5">float<pos:position pos:line="686" pos:column="10"/></name></type> <name pos:line="686" pos:column="11">q<pos:position pos:line="686" pos:column="12"/></name> <init pos:line="686" pos:column="13">= <expr><literal type="number" pos:line="686" pos:column="15">0.0f<pos:position pos:line="686" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="686" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="687" pos:column="5">int<pos:position pos:line="687" pos:column="8"/></name></type> <name pos:line="687" pos:column="9">q_definite<pos:position pos:line="687" pos:column="19"/></name> <init pos:line="687" pos:column="20">= <expr><literal type="number" pos:line="687" pos:column="22">1<pos:position pos:line="687" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="687" pos:column="24"/></decl_stmt>

    <comment type="block" pos:line="689" pos:column="5">/* if no Accept: header, leave quality alone (will
     * remain at the default value of 1)
     *
     * XXX: This if is currently never true because of the effect of
     * maybe_add_default_accepts().
     */</comment>
    <if pos:line="695" pos:column="5">if <condition pos:line="695" pos:column="8">(<expr><operator pos:line="695" pos:column="9">!<pos:position pos:line="695" pos:column="10"/></operator><name><name pos:line="695" pos:column="10">neg<pos:position pos:line="695" pos:column="13"/></name><operator pos:line="695" pos:column="13">-&gt;<pos:position pos:line="695" pos:column="18"/></operator><name pos:line="695" pos:column="15">accepts<pos:position pos:line="695" pos:column="22"/></name></name></expr>)<pos:position pos:line="695" pos:column="23"/></condition><then pos:line="695" pos:column="23"> <block pos:line="695" pos:column="24">{
        <if pos:line="696" pos:column="9">if <condition pos:line="696" pos:column="12">(<expr><name><name pos:line="696" pos:column="13">variant<pos:position pos:line="696" pos:column="20"/></name><operator pos:line="696" pos:column="20">-&gt;<pos:position pos:line="696" pos:column="25"/></operator><name pos:line="696" pos:column="22">mime_type<pos:position pos:line="696" pos:column="31"/></name></name> <operator pos:line="696" pos:column="32">&amp;&amp;<pos:position pos:line="696" pos:column="42"/></operator> <operator pos:line="696" pos:column="35">*<pos:position pos:line="696" pos:column="36"/></operator><name><name pos:line="696" pos:column="36">variant<pos:position pos:line="696" pos:column="43"/></name><operator pos:line="696" pos:column="43">-&gt;<pos:position pos:line="696" pos:column="48"/></operator><name pos:line="696" pos:column="45">mime_type<pos:position pos:line="696" pos:column="54"/></name></name></expr>)<pos:position pos:line="696" pos:column="55"/></condition><then pos:line="696" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="697" pos:column="13">variant<pos:position pos:line="697" pos:column="20"/></name><operator pos:line="697" pos:column="20">-&gt;<pos:position pos:line="697" pos:column="25"/></operator><name pos:line="697" pos:column="22">definite<pos:position pos:line="697" pos:column="30"/></name></name> <operator pos:line="697" pos:column="31">=<pos:position pos:line="697" pos:column="32"/></operator> <literal type="number" pos:line="697" pos:column="33">0<pos:position pos:line="697" pos:column="34"/></literal></expr>;<pos:position pos:line="697" pos:column="35"/></expr_stmt></block></then></if>
        <return pos:line="698" pos:column="9">return;<pos:position pos:line="698" pos:column="16"/></return>
    }<pos:position pos:line="699" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="701" pos:column="5">accept_recs<pos:position pos:line="701" pos:column="16"/></name> <operator pos:line="701" pos:column="17">=<pos:position pos:line="701" pos:column="18"/></operator> <operator pos:line="701" pos:column="19">(<pos:position pos:line="701" pos:column="20"/></operator><name pos:line="701" pos:column="20">accept_rec<pos:position pos:line="701" pos:column="30"/></name> <operator pos:line="701" pos:column="31">*<pos:position pos:line="701" pos:column="32"/></operator><operator pos:line="701" pos:column="32">)<pos:position pos:line="701" pos:column="33"/></operator> <name><name pos:line="701" pos:column="34">neg<pos:position pos:line="701" pos:column="37"/></name><operator pos:line="701" pos:column="37">-&gt;<pos:position pos:line="701" pos:column="42"/></operator><name pos:line="701" pos:column="39">accepts<pos:position pos:line="701" pos:column="46"/></name><operator pos:line="701" pos:column="46">-&gt;<pos:position pos:line="701" pos:column="51"/></operator><name pos:line="701" pos:column="48">elts<pos:position pos:line="701" pos:column="52"/></name></name></expr>;<pos:position pos:line="701" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="703" pos:column="5">/*
     * Go through each of the ranges on the Accept: header,
     * looking for the 'best' match with this variant's
     * content-type. We use the best match's quality
     * value (from the Accept: header) for this variant's
     * mime_type_quality field.
     *
     * The best match is determined like this:
     *    type/type is better than type/ * is better than * / *
     *    if match is type/type, use the level mime param if available
     */</comment>
    <for pos:line="714" pos:column="5">for <control pos:line="714" pos:column="9">(<init><expr><name pos:line="714" pos:column="10">i<pos:position pos:line="714" pos:column="11"/></name> <operator pos:line="714" pos:column="12">=<pos:position pos:line="714" pos:column="13"/></operator> <literal type="number" pos:line="714" pos:column="14">0<pos:position pos:line="714" pos:column="15"/></literal></expr>;<pos:position pos:line="714" pos:column="16"/></init> <condition><expr><name pos:line="714" pos:column="17">i<pos:position pos:line="714" pos:column="18"/></name> <operator pos:line="714" pos:column="19">&lt;<pos:position pos:line="714" pos:column="23"/></operator> <name><name pos:line="714" pos:column="21">neg<pos:position pos:line="714" pos:column="24"/></name><operator pos:line="714" pos:column="24">-&gt;<pos:position pos:line="714" pos:column="29"/></operator><name pos:line="714" pos:column="26">accepts<pos:position pos:line="714" pos:column="33"/></name><operator pos:line="714" pos:column="33">-&gt;<pos:position pos:line="714" pos:column="38"/></operator><name pos:line="714" pos:column="35">nelts<pos:position pos:line="714" pos:column="40"/></name></name></expr>;<pos:position pos:line="714" pos:column="41"/></condition> <incr><expr><operator pos:line="714" pos:column="42">++<pos:position pos:line="714" pos:column="44"/></operator><name pos:line="714" pos:column="44">i<pos:position pos:line="714" pos:column="45"/></name></expr></incr>)<pos:position pos:line="714" pos:column="46"/></control> <block pos:line="714" pos:column="47">{

        <decl_stmt><decl><type><name pos:line="716" pos:column="9">accept_rec<pos:position pos:line="716" pos:column="19"/></name> <modifier pos:line="716" pos:column="20">*<pos:position pos:line="716" pos:column="21"/></modifier></type><name pos:line="716" pos:column="21">type<pos:position pos:line="716" pos:column="25"/></name> <init pos:line="716" pos:column="26">= <expr><operator pos:line="716" pos:column="28">&amp;<pos:position pos:line="716" pos:column="33"/></operator><name><name pos:line="716" pos:column="29">accept_recs<pos:position pos:line="716" pos:column="40"/></name><index pos:line="716" pos:column="40">[<expr><name pos:line="716" pos:column="41">i<pos:position pos:line="716" pos:column="42"/></name></expr>]<pos:position pos:line="716" pos:column="43"/></index></name></expr></init></decl>;<pos:position pos:line="716" pos:column="44"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="717" pos:column="9">int<pos:position pos:line="717" pos:column="12"/></name></type> <name pos:line="717" pos:column="13">prev_mime_stars<pos:position pos:line="717" pos:column="28"/></name></decl>;<pos:position pos:line="717" pos:column="29"/></decl_stmt>

        <expr_stmt><expr><name pos:line="719" pos:column="9">prev_mime_stars<pos:position pos:line="719" pos:column="24"/></name> <operator pos:line="719" pos:column="25">=<pos:position pos:line="719" pos:column="26"/></operator> <name><name pos:line="719" pos:column="27">variant<pos:position pos:line="719" pos:column="34"/></name><operator pos:line="719" pos:column="34">-&gt;<pos:position pos:line="719" pos:column="39"/></operator><name pos:line="719" pos:column="36">mime_stars<pos:position pos:line="719" pos:column="46"/></name></name></expr>;<pos:position pos:line="719" pos:column="47"/></expr_stmt>

        <if pos:line="721" pos:column="9">if <condition pos:line="721" pos:column="12">(<expr><operator pos:line="721" pos:column="13">!<pos:position pos:line="721" pos:column="14"/></operator><call><name pos:line="721" pos:column="14">mime_match<pos:position pos:line="721" pos:column="24"/></name><argument_list pos:line="721" pos:column="24">(<argument><expr><name pos:line="721" pos:column="25">type<pos:position pos:line="721" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="721" pos:column="31">variant<pos:position pos:line="721" pos:column="38"/></name></expr></argument>)<pos:position pos:line="721" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="721" pos:column="40"/></condition><then pos:line="721" pos:column="40"> <block pos:line="721" pos:column="41">{
            <continue pos:line="722" pos:column="13">continue;<pos:position pos:line="722" pos:column="22"/></continue>           <comment type="block" pos:line="722" pos:column="33">/* didn't match the content type at all */</comment>
        }<pos:position pos:line="723" pos:column="10"/></block></then>
        <else pos:line="724" pos:column="9">else <block pos:line="724" pos:column="14">{
            <comment type="block" pos:line="725" pos:column="13">/* did match - see if there were less or more stars than
             * in previous match
             */</comment>
            <if pos:line="728" pos:column="13">if <condition pos:line="728" pos:column="16">(<expr><name pos:line="728" pos:column="17">prev_mime_stars<pos:position pos:line="728" pos:column="32"/></name> <operator pos:line="728" pos:column="33">==<pos:position pos:line="728" pos:column="35"/></operator> <name><name pos:line="728" pos:column="36">variant<pos:position pos:line="728" pos:column="43"/></name><operator pos:line="728" pos:column="43">-&gt;<pos:position pos:line="728" pos:column="48"/></operator><name pos:line="728" pos:column="45">mime_stars<pos:position pos:line="728" pos:column="55"/></name></name></expr>)<pos:position pos:line="728" pos:column="56"/></condition><then pos:line="728" pos:column="56"> <block pos:line="728" pos:column="57">{
                <continue pos:line="729" pos:column="17">continue;<pos:position pos:line="729" pos:column="26"/></continue>       <comment type="block" pos:line="729" pos:column="33">/* more stars =&gt; not as good a match */</comment>
            }<pos:position pos:line="730" pos:column="14"/></block></then></if>
        }<pos:position pos:line="731" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="733" pos:column="9">/* If we are allowed to mess with the q-values
         * and have no explicit q= parameters in the accept header,
         * make wildcards very low, so we have a low chance
         * of ending up with them if there's something better.
         */</comment>

        <if pos:line="739" pos:column="9">if <condition pos:line="739" pos:column="12">(<expr><operator pos:line="739" pos:column="13">!<pos:position pos:line="739" pos:column="14"/></operator><name><name pos:line="739" pos:column="14">neg<pos:position pos:line="739" pos:column="17"/></name><operator pos:line="739" pos:column="17">-&gt;<pos:position pos:line="739" pos:column="22"/></operator><name pos:line="739" pos:column="19">dont_fiddle_headers<pos:position pos:line="739" pos:column="38"/></name></name> <operator pos:line="739" pos:column="39">&amp;&amp;<pos:position pos:line="739" pos:column="49"/></operator> <operator pos:line="739" pos:column="42">!<pos:position pos:line="739" pos:column="43"/></operator><name><name pos:line="739" pos:column="43">neg<pos:position pos:line="739" pos:column="46"/></name><operator pos:line="739" pos:column="46">-&gt;<pos:position pos:line="739" pos:column="51"/></operator><name pos:line="739" pos:column="48">accept_q<pos:position pos:line="739" pos:column="56"/></name></name> <operator pos:line="739" pos:column="57">&amp;&amp;<pos:position pos:line="739" pos:column="67"/></operator>
            <name><name pos:line="740" pos:column="13">variant<pos:position pos:line="740" pos:column="20"/></name><operator pos:line="740" pos:column="20">-&gt;<pos:position pos:line="740" pos:column="25"/></operator><name pos:line="740" pos:column="22">mime_stars<pos:position pos:line="740" pos:column="32"/></name></name> <operator pos:line="740" pos:column="33">==<pos:position pos:line="740" pos:column="35"/></operator> <literal type="number" pos:line="740" pos:column="36">1<pos:position pos:line="740" pos:column="37"/></literal></expr>)<pos:position pos:line="740" pos:column="38"/></condition><then pos:line="740" pos:column="38"> <block pos:line="740" pos:column="39">{
            <expr_stmt><expr><name pos:line="741" pos:column="13">q<pos:position pos:line="741" pos:column="14"/></name> <operator pos:line="741" pos:column="15">=<pos:position pos:line="741" pos:column="16"/></operator> <literal type="number" pos:line="741" pos:column="17">0.01f<pos:position pos:line="741" pos:column="22"/></literal></expr>;<pos:position pos:line="741" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="742" pos:column="10"/></block></then>
        <elseif pos:line="743" pos:column="9">else <if pos:line="743" pos:column="14">if <condition pos:line="743" pos:column="17">(<expr><operator pos:line="743" pos:column="18">!<pos:position pos:line="743" pos:column="19"/></operator><name><name pos:line="743" pos:column="19">neg<pos:position pos:line="743" pos:column="22"/></name><operator pos:line="743" pos:column="22">-&gt;<pos:position pos:line="743" pos:column="27"/></operator><name pos:line="743" pos:column="24">dont_fiddle_headers<pos:position pos:line="743" pos:column="43"/></name></name> <operator pos:line="743" pos:column="44">&amp;&amp;<pos:position pos:line="743" pos:column="54"/></operator> <operator pos:line="743" pos:column="47">!<pos:position pos:line="743" pos:column="48"/></operator><name><name pos:line="743" pos:column="48">neg<pos:position pos:line="743" pos:column="51"/></name><operator pos:line="743" pos:column="51">-&gt;<pos:position pos:line="743" pos:column="56"/></operator><name pos:line="743" pos:column="53">accept_q<pos:position pos:line="743" pos:column="61"/></name></name> <operator pos:line="743" pos:column="62">&amp;&amp;<pos:position pos:line="743" pos:column="72"/></operator>
                 <name><name pos:line="744" pos:column="18">variant<pos:position pos:line="744" pos:column="25"/></name><operator pos:line="744" pos:column="25">-&gt;<pos:position pos:line="744" pos:column="30"/></operator><name pos:line="744" pos:column="27">mime_stars<pos:position pos:line="744" pos:column="37"/></name></name> <operator pos:line="744" pos:column="38">==<pos:position pos:line="744" pos:column="40"/></operator> <literal type="number" pos:line="744" pos:column="41">2<pos:position pos:line="744" pos:column="42"/></literal></expr>)<pos:position pos:line="744" pos:column="43"/></condition><then pos:line="744" pos:column="43"> <block pos:line="744" pos:column="44">{
            <expr_stmt><expr><name pos:line="745" pos:column="13">q<pos:position pos:line="745" pos:column="14"/></name> <operator pos:line="745" pos:column="15">=<pos:position pos:line="745" pos:column="16"/></operator> <literal type="number" pos:line="745" pos:column="17">0.02f<pos:position pos:line="745" pos:column="22"/></literal></expr>;<pos:position pos:line="745" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="746" pos:column="10"/></block></then></if></elseif>
        <else pos:line="747" pos:column="9">else <block pos:line="747" pos:column="14">{
            <expr_stmt><expr><name pos:line="748" pos:column="13">q<pos:position pos:line="748" pos:column="14"/></name> <operator pos:line="748" pos:column="15">=<pos:position pos:line="748" pos:column="16"/></operator> <name><name pos:line="748" pos:column="17">type<pos:position pos:line="748" pos:column="21"/></name><operator pos:line="748" pos:column="21">-&gt;<pos:position pos:line="748" pos:column="26"/></operator><name pos:line="748" pos:column="23">quality<pos:position pos:line="748" pos:column="30"/></name></name></expr>;<pos:position pos:line="748" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="749" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="751" pos:column="9">q_definite<pos:position pos:line="751" pos:column="19"/></name> <operator pos:line="751" pos:column="20">=<pos:position pos:line="751" pos:column="21"/></operator> <operator pos:line="751" pos:column="22">(<pos:position pos:line="751" pos:column="23"/></operator><name><name pos:line="751" pos:column="23">variant<pos:position pos:line="751" pos:column="30"/></name><operator pos:line="751" pos:column="30">-&gt;<pos:position pos:line="751" pos:column="35"/></operator><name pos:line="751" pos:column="32">mime_stars<pos:position pos:line="751" pos:column="42"/></name></name> <operator pos:line="751" pos:column="43">==<pos:position pos:line="751" pos:column="45"/></operator> <literal type="number" pos:line="751" pos:column="46">3<pos:position pos:line="751" pos:column="47"/></literal><operator pos:line="751" pos:column="47">)<pos:position pos:line="751" pos:column="48"/></operator></expr>;<pos:position pos:line="751" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="752" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="753" pos:column="5">variant<pos:position pos:line="753" pos:column="12"/></name><operator pos:line="753" pos:column="12">-&gt;<pos:position pos:line="753" pos:column="17"/></operator><name pos:line="753" pos:column="14">mime_type_quality<pos:position pos:line="753" pos:column="31"/></name></name> <operator pos:line="753" pos:column="32">=<pos:position pos:line="753" pos:column="33"/></operator> <name pos:line="753" pos:column="34">q<pos:position pos:line="753" pos:column="35"/></name></expr>;<pos:position pos:line="753" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="754" pos:column="5">variant<pos:position pos:line="754" pos:column="12"/></name><operator pos:line="754" pos:column="12">-&gt;<pos:position pos:line="754" pos:column="17"/></operator><name pos:line="754" pos:column="14">definite<pos:position pos:line="754" pos:column="22"/></name></name> <operator pos:line="754" pos:column="23">=<pos:position pos:line="754" pos:column="24"/></operator> <name><name pos:line="754" pos:column="25">variant<pos:position pos:line="754" pos:column="32"/></name><operator pos:line="754" pos:column="32">-&gt;<pos:position pos:line="754" pos:column="37"/></operator><name pos:line="754" pos:column="34">definite<pos:position pos:line="754" pos:column="42"/></name></name> <operator pos:line="754" pos:column="43">&amp;&amp;<pos:position pos:line="754" pos:column="53"/></operator> <name pos:line="754" pos:column="46">q_definite<pos:position pos:line="754" pos:column="56"/></name></expr>;<pos:position pos:line="754" pos:column="57"/></expr_stmt>

}<pos:position pos:line="756" pos:column="2"/></block></function>

<comment type="block" pos:line="758" pos:column="1">/* For a given variant, find the 'q' value of the charset given
 * on the Accept-Charset line. If no charsets are listed,
 * assume value of '1'.
 */</comment>
<function><specifier pos:line="762" pos:column="1">static<pos:position pos:line="762" pos:column="7"/></specifier> <type><name pos:line="762" pos:column="8">void<pos:position pos:line="762" pos:column="12"/></name></type> <name pos:line="762" pos:column="13">set_charset_quality<pos:position pos:line="762" pos:column="32"/></name><parameter_list pos:line="762" pos:column="32">(<parameter><decl><type><name pos:line="762" pos:column="33">negotiation_state<pos:position pos:line="762" pos:column="50"/></name> <modifier pos:line="762" pos:column="51">*<pos:position pos:line="762" pos:column="52"/></modifier></type><name pos:line="762" pos:column="52">neg<pos:position pos:line="762" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="762" pos:column="57">var_rec<pos:position pos:line="762" pos:column="64"/></name> <modifier pos:line="762" pos:column="65">*<pos:position pos:line="762" pos:column="66"/></modifier></type><name pos:line="762" pos:column="66">variant<pos:position pos:line="762" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="762" pos:column="74"/></parameter_list>
<block pos:line="763" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="764" pos:column="5">int<pos:position pos:line="764" pos:column="8"/></name></type> <name pos:line="764" pos:column="9">i<pos:position pos:line="764" pos:column="10"/></name></decl>;<pos:position pos:line="764" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="765" pos:column="5">accept_rec<pos:position pos:line="765" pos:column="15"/></name> <modifier pos:line="765" pos:column="16">*<pos:position pos:line="765" pos:column="17"/></modifier></type><name pos:line="765" pos:column="17">accept_recs<pos:position pos:line="765" pos:column="28"/></name></decl>;<pos:position pos:line="765" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="766" pos:column="5">const<pos:position pos:line="766" pos:column="10"/></specifier> <name pos:line="766" pos:column="11">char<pos:position pos:line="766" pos:column="15"/></name> <modifier pos:line="766" pos:column="16">*<pos:position pos:line="766" pos:column="17"/></modifier></type><name pos:line="766" pos:column="17">charset<pos:position pos:line="766" pos:column="24"/></name> <init pos:line="766" pos:column="25">= <expr><name><name pos:line="766" pos:column="27">variant<pos:position pos:line="766" pos:column="34"/></name><operator pos:line="766" pos:column="34">-&gt;<pos:position pos:line="766" pos:column="39"/></operator><name pos:line="766" pos:column="36">content_charset<pos:position pos:line="766" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="766" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="767" pos:column="5">accept_rec<pos:position pos:line="767" pos:column="15"/></name> <modifier pos:line="767" pos:column="16">*<pos:position pos:line="767" pos:column="17"/></modifier></type><name pos:line="767" pos:column="17">star<pos:position pos:line="767" pos:column="21"/></name> <init pos:line="767" pos:column="22">= <expr><name pos:line="767" pos:column="24">NULL<pos:position pos:line="767" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="767" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="769" pos:column="5">/* if no Accept-Charset: header, leave quality alone (will
     * remain at the default value of 1)
     */</comment>
    <if pos:line="772" pos:column="5">if <condition pos:line="772" pos:column="8">(<expr><operator pos:line="772" pos:column="9">!<pos:position pos:line="772" pos:column="10"/></operator><name><name pos:line="772" pos:column="10">neg<pos:position pos:line="772" pos:column="13"/></name><operator pos:line="772" pos:column="13">-&gt;<pos:position pos:line="772" pos:column="18"/></operator><name pos:line="772" pos:column="15">accept_charsets<pos:position pos:line="772" pos:column="30"/></name></name></expr>)<pos:position pos:line="772" pos:column="31"/></condition><then pos:line="772" pos:column="31"> <block pos:line="772" pos:column="32">{
        <if pos:line="773" pos:column="9">if <condition pos:line="773" pos:column="12">(<expr><name pos:line="773" pos:column="13">charset<pos:position pos:line="773" pos:column="20"/></name> <operator pos:line="773" pos:column="21">&amp;&amp;<pos:position pos:line="773" pos:column="31"/></operator> <operator pos:line="773" pos:column="24">*<pos:position pos:line="773" pos:column="25"/></operator><name pos:line="773" pos:column="25">charset<pos:position pos:line="773" pos:column="32"/></name></expr>)<pos:position pos:line="773" pos:column="33"/></condition><then pos:line="773" pos:column="33">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="774" pos:column="13">variant<pos:position pos:line="774" pos:column="20"/></name><operator pos:line="774" pos:column="20">-&gt;<pos:position pos:line="774" pos:column="25"/></operator><name pos:line="774" pos:column="22">definite<pos:position pos:line="774" pos:column="30"/></name></name> <operator pos:line="774" pos:column="31">=<pos:position pos:line="774" pos:column="32"/></operator> <literal type="number" pos:line="774" pos:column="33">0<pos:position pos:line="774" pos:column="34"/></literal></expr>;<pos:position pos:line="774" pos:column="35"/></expr_stmt></block></then></if>
        <return pos:line="775" pos:column="9">return;<pos:position pos:line="775" pos:column="16"/></return>
    }<pos:position pos:line="776" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="778" pos:column="5">accept_recs<pos:position pos:line="778" pos:column="16"/></name> <operator pos:line="778" pos:column="17">=<pos:position pos:line="778" pos:column="18"/></operator> <operator pos:line="778" pos:column="19">(<pos:position pos:line="778" pos:column="20"/></operator><name pos:line="778" pos:column="20">accept_rec<pos:position pos:line="778" pos:column="30"/></name> <operator pos:line="778" pos:column="31">*<pos:position pos:line="778" pos:column="32"/></operator><operator pos:line="778" pos:column="32">)<pos:position pos:line="778" pos:column="33"/></operator> <name><name pos:line="778" pos:column="34">neg<pos:position pos:line="778" pos:column="37"/></name><operator pos:line="778" pos:column="37">-&gt;<pos:position pos:line="778" pos:column="42"/></operator><name pos:line="778" pos:column="39">accept_charsets<pos:position pos:line="778" pos:column="54"/></name><operator pos:line="778" pos:column="54">-&gt;<pos:position pos:line="778" pos:column="59"/></operator><name pos:line="778" pos:column="56">elts<pos:position pos:line="778" pos:column="60"/></name></name></expr>;<pos:position pos:line="778" pos:column="61"/></expr_stmt>

    <if pos:line="780" pos:column="5">if <condition pos:line="780" pos:column="8">(<expr><name pos:line="780" pos:column="9">charset<pos:position pos:line="780" pos:column="16"/></name> <operator pos:line="780" pos:column="17">==<pos:position pos:line="780" pos:column="19"/></operator> <name pos:line="780" pos:column="20">NULL<pos:position pos:line="780" pos:column="24"/></name> <operator pos:line="780" pos:column="25">||<pos:position pos:line="780" pos:column="27"/></operator> <operator pos:line="780" pos:column="28">!<pos:position pos:line="780" pos:column="29"/></operator><operator pos:line="780" pos:column="29">*<pos:position pos:line="780" pos:column="30"/></operator><name pos:line="780" pos:column="30">charset<pos:position pos:line="780" pos:column="37"/></name></expr>)<pos:position pos:line="780" pos:column="38"/></condition><then pos:line="780" pos:column="38"> <block pos:line="780" pos:column="39">{
        <comment type="block" pos:line="781" pos:column="9">/* Charset of variant not known */</comment>

        <comment type="block" pos:line="783" pos:column="9">/* if not a text / * type, leave quality alone */</comment>
        <if pos:line="784" pos:column="9">if <condition pos:line="784" pos:column="12">(<expr><operator pos:line="784" pos:column="13">!<pos:position pos:line="784" pos:column="14"/></operator><operator pos:line="784" pos:column="14">(<pos:position pos:line="784" pos:column="15"/></operator><operator pos:line="784" pos:column="15">!<pos:position pos:line="784" pos:column="16"/></operator><call><name pos:line="784" pos:column="16">strncmp<pos:position pos:line="784" pos:column="23"/></name><argument_list pos:line="784" pos:column="23">(<argument><expr><name><name pos:line="784" pos:column="24">variant<pos:position pos:line="784" pos:column="31"/></name><operator pos:line="784" pos:column="31">-&gt;<pos:position pos:line="784" pos:column="36"/></operator><name pos:line="784" pos:column="33">mime_type<pos:position pos:line="784" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="784" pos:column="44">"text/"<pos:position pos:line="784" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="784" pos:column="53">5<pos:position pos:line="784" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="784" pos:column="55"/></argument_list></call>
              <operator pos:line="785" pos:column="15">||<pos:position pos:line="785" pos:column="17"/></operator> <operator pos:line="785" pos:column="18">!<pos:position pos:line="785" pos:column="19"/></operator><call><name pos:line="785" pos:column="19">strcmp<pos:position pos:line="785" pos:column="25"/></name><argument_list pos:line="785" pos:column="25">(<argument><expr><name><name pos:line="785" pos:column="26">variant<pos:position pos:line="785" pos:column="33"/></name><operator pos:line="785" pos:column="33">-&gt;<pos:position pos:line="785" pos:column="38"/></operator><name pos:line="785" pos:column="35">mime_type<pos:position pos:line="785" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="785" pos:column="46">INCLUDES_MAGIC_TYPE<pos:position pos:line="785" pos:column="65"/></name></expr></argument>)<pos:position pos:line="785" pos:column="66"/></argument_list></call>
              <operator pos:line="786" pos:column="15">||<pos:position pos:line="786" pos:column="17"/></operator> <operator pos:line="786" pos:column="18">!<pos:position pos:line="786" pos:column="19"/></operator><call><name pos:line="786" pos:column="19">strcmp<pos:position pos:line="786" pos:column="25"/></name><argument_list pos:line="786" pos:column="25">(<argument><expr><name><name pos:line="786" pos:column="26">variant<pos:position pos:line="786" pos:column="33"/></name><operator pos:line="786" pos:column="33">-&gt;<pos:position pos:line="786" pos:column="38"/></operator><name pos:line="786" pos:column="35">mime_type<pos:position pos:line="786" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="786" pos:column="46">INCLUDES_MAGIC_TYPE3<pos:position pos:line="786" pos:column="66"/></name></expr></argument>)<pos:position pos:line="786" pos:column="67"/></argument_list></call>
              <operator pos:line="787" pos:column="15">)<pos:position pos:line="787" pos:column="16"/></operator></expr>)<pos:position pos:line="787" pos:column="17"/></condition><then pos:line="787" pos:column="17">
            <block type="pseudo"><return pos:line="788" pos:column="13">return;<pos:position pos:line="788" pos:column="20"/></return></block></then></if>

        <comment type="block" pos:line="790" pos:column="9">/* Don't go guessing if we are in strict header mode,
         * e.g. when running the rvsa, as any guess won't be reflected
         * in the variant list or content-location headers.
         */</comment>
        <if pos:line="794" pos:column="9">if <condition pos:line="794" pos:column="12">(<expr><name><name pos:line="794" pos:column="13">neg<pos:position pos:line="794" pos:column="16"/></name><operator pos:line="794" pos:column="16">-&gt;<pos:position pos:line="794" pos:column="21"/></operator><name pos:line="794" pos:column="18">dont_fiddle_headers<pos:position pos:line="794" pos:column="37"/></name></name></expr>)<pos:position pos:line="794" pos:column="38"/></condition><then pos:line="794" pos:column="38">
            <block type="pseudo"><return pos:line="795" pos:column="13">return;<pos:position pos:line="795" pos:column="20"/></return></block></then></if>

        <expr_stmt><expr><name pos:line="797" pos:column="9">charset<pos:position pos:line="797" pos:column="16"/></name> <operator pos:line="797" pos:column="17">=<pos:position pos:line="797" pos:column="18"/></operator> <literal type="string" pos:line="797" pos:column="19">"iso-8859-1"<pos:position pos:line="797" pos:column="31"/></literal></expr>;<pos:position pos:line="797" pos:column="32"/></expr_stmt> <comment type="block" pos:line="797" pos:column="33">/* The default charset for HTTP text types */</comment>
    }<pos:position pos:line="798" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="800" pos:column="5">/*
     * Go through each of the items on the Accept-Charset header,
     * looking for a match with this variant's charset. If none
     * match, charset is unacceptable, so set quality to 0.
     */</comment>
    <for pos:line="805" pos:column="5">for <control pos:line="805" pos:column="9">(<init><expr><name pos:line="805" pos:column="10">i<pos:position pos:line="805" pos:column="11"/></name> <operator pos:line="805" pos:column="12">=<pos:position pos:line="805" pos:column="13"/></operator> <literal type="number" pos:line="805" pos:column="14">0<pos:position pos:line="805" pos:column="15"/></literal></expr>;<pos:position pos:line="805" pos:column="16"/></init> <condition><expr><name pos:line="805" pos:column="17">i<pos:position pos:line="805" pos:column="18"/></name> <operator pos:line="805" pos:column="19">&lt;<pos:position pos:line="805" pos:column="23"/></operator> <name><name pos:line="805" pos:column="21">neg<pos:position pos:line="805" pos:column="24"/></name><operator pos:line="805" pos:column="24">-&gt;<pos:position pos:line="805" pos:column="29"/></operator><name pos:line="805" pos:column="26">accept_charsets<pos:position pos:line="805" pos:column="41"/></name><operator pos:line="805" pos:column="41">-&gt;<pos:position pos:line="805" pos:column="46"/></operator><name pos:line="805" pos:column="43">nelts<pos:position pos:line="805" pos:column="48"/></name></name></expr>;<pos:position pos:line="805" pos:column="49"/></condition> <incr><expr><operator pos:line="805" pos:column="50">++<pos:position pos:line="805" pos:column="52"/></operator><name pos:line="805" pos:column="52">i<pos:position pos:line="805" pos:column="53"/></name></expr></incr>)<pos:position pos:line="805" pos:column="54"/></control> <block pos:line="805" pos:column="55">{

        <decl_stmt><decl><type><name pos:line="807" pos:column="9">accept_rec<pos:position pos:line="807" pos:column="19"/></name> <modifier pos:line="807" pos:column="20">*<pos:position pos:line="807" pos:column="21"/></modifier></type><name pos:line="807" pos:column="21">type<pos:position pos:line="807" pos:column="25"/></name> <init pos:line="807" pos:column="26">= <expr><operator pos:line="807" pos:column="28">&amp;<pos:position pos:line="807" pos:column="33"/></operator><name><name pos:line="807" pos:column="29">accept_recs<pos:position pos:line="807" pos:column="40"/></name><index pos:line="807" pos:column="40">[<expr><name pos:line="807" pos:column="41">i<pos:position pos:line="807" pos:column="42"/></name></expr>]<pos:position pos:line="807" pos:column="43"/></index></name></expr></init></decl>;<pos:position pos:line="807" pos:column="44"/></decl_stmt>

        <if pos:line="809" pos:column="9">if <condition pos:line="809" pos:column="12">(<expr><operator pos:line="809" pos:column="13">!<pos:position pos:line="809" pos:column="14"/></operator><call><name pos:line="809" pos:column="14">strcmp<pos:position pos:line="809" pos:column="20"/></name><argument_list pos:line="809" pos:column="20">(<argument><expr><name><name pos:line="809" pos:column="21">type<pos:position pos:line="809" pos:column="25"/></name><operator pos:line="809" pos:column="25">-&gt;<pos:position pos:line="809" pos:column="30"/></operator><name pos:line="809" pos:column="27">name<pos:position pos:line="809" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="809" pos:column="33">charset<pos:position pos:line="809" pos:column="40"/></name></expr></argument>)<pos:position pos:line="809" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="809" pos:column="42"/></condition><then pos:line="809" pos:column="42"> <block pos:line="809" pos:column="43">{
            <expr_stmt><expr><name><name pos:line="810" pos:column="13">variant<pos:position pos:line="810" pos:column="20"/></name><operator pos:line="810" pos:column="20">-&gt;<pos:position pos:line="810" pos:column="25"/></operator><name pos:line="810" pos:column="22">charset_quality<pos:position pos:line="810" pos:column="37"/></name></name> <operator pos:line="810" pos:column="38">=<pos:position pos:line="810" pos:column="39"/></operator> <name><name pos:line="810" pos:column="40">type<pos:position pos:line="810" pos:column="44"/></name><operator pos:line="810" pos:column="44">-&gt;<pos:position pos:line="810" pos:column="49"/></operator><name pos:line="810" pos:column="46">quality<pos:position pos:line="810" pos:column="53"/></name></name></expr>;<pos:position pos:line="810" pos:column="54"/></expr_stmt>
            <return pos:line="811" pos:column="13">return;<pos:position pos:line="811" pos:column="20"/></return>
        }<pos:position pos:line="812" pos:column="10"/></block></then>
        <elseif pos:line="813" pos:column="9">else <if pos:line="813" pos:column="14">if <condition pos:line="813" pos:column="17">(<expr><call><name pos:line="813" pos:column="18">strcmp<pos:position pos:line="813" pos:column="24"/></name><argument_list pos:line="813" pos:column="24">(<argument><expr><name><name pos:line="813" pos:column="25">type<pos:position pos:line="813" pos:column="29"/></name><operator pos:line="813" pos:column="29">-&gt;<pos:position pos:line="813" pos:column="34"/></operator><name pos:line="813" pos:column="31">name<pos:position pos:line="813" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="813" pos:column="37">"*"<pos:position pos:line="813" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="813" pos:column="41"/></argument_list></call> <operator pos:line="813" pos:column="42">==<pos:position pos:line="813" pos:column="44"/></operator> <literal type="number" pos:line="813" pos:column="45">0<pos:position pos:line="813" pos:column="46"/></literal></expr>)<pos:position pos:line="813" pos:column="47"/></condition><then pos:line="813" pos:column="47"> <block pos:line="813" pos:column="48">{
            <expr_stmt><expr><name pos:line="814" pos:column="13">star<pos:position pos:line="814" pos:column="17"/></name> <operator pos:line="814" pos:column="18">=<pos:position pos:line="814" pos:column="19"/></operator> <name pos:line="814" pos:column="20">type<pos:position pos:line="814" pos:column="24"/></name></expr>;<pos:position pos:line="814" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="815" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="816" pos:column="6"/></block></for>
    <comment type="block" pos:line="817" pos:column="5">/* No explicit match */</comment>
    <if pos:line="818" pos:column="5">if <condition pos:line="818" pos:column="8">(<expr><name pos:line="818" pos:column="9">star<pos:position pos:line="818" pos:column="13"/></name></expr>)<pos:position pos:line="818" pos:column="14"/></condition><then pos:line="818" pos:column="14"> <block pos:line="818" pos:column="15">{
        <expr_stmt><expr><name><name pos:line="819" pos:column="9">variant<pos:position pos:line="819" pos:column="16"/></name><operator pos:line="819" pos:column="16">-&gt;<pos:position pos:line="819" pos:column="21"/></operator><name pos:line="819" pos:column="18">charset_quality<pos:position pos:line="819" pos:column="33"/></name></name> <operator pos:line="819" pos:column="34">=<pos:position pos:line="819" pos:column="35"/></operator> <name><name pos:line="819" pos:column="36">star<pos:position pos:line="819" pos:column="40"/></name><operator pos:line="819" pos:column="40">-&gt;<pos:position pos:line="819" pos:column="45"/></operator><name pos:line="819" pos:column="42">quality<pos:position pos:line="819" pos:column="49"/></name></name></expr>;<pos:position pos:line="819" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="820" pos:column="9">variant<pos:position pos:line="820" pos:column="16"/></name><operator pos:line="820" pos:column="16">-&gt;<pos:position pos:line="820" pos:column="21"/></operator><name pos:line="820" pos:column="18">definite<pos:position pos:line="820" pos:column="26"/></name></name> <operator pos:line="820" pos:column="27">=<pos:position pos:line="820" pos:column="28"/></operator> <literal type="number" pos:line="820" pos:column="29">0<pos:position pos:line="820" pos:column="30"/></literal></expr>;<pos:position pos:line="820" pos:column="31"/></expr_stmt>
        <return pos:line="821" pos:column="9">return;<pos:position pos:line="821" pos:column="16"/></return>
    }<pos:position pos:line="822" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="823" pos:column="5">/* If this variant is in charset iso-8859-1, the default is 1.0 */</comment>
    <if pos:line="824" pos:column="5">if <condition pos:line="824" pos:column="8">(<expr><call><name pos:line="824" pos:column="9">strcmp<pos:position pos:line="824" pos:column="15"/></name><argument_list pos:line="824" pos:column="15">(<argument><expr><name pos:line="824" pos:column="16">charset<pos:position pos:line="824" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="824" pos:column="25">"iso-8859-1"<pos:position pos:line="824" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="824" pos:column="38"/></argument_list></call> <operator pos:line="824" pos:column="39">==<pos:position pos:line="824" pos:column="41"/></operator> <literal type="number" pos:line="824" pos:column="42">0<pos:position pos:line="824" pos:column="43"/></literal></expr>)<pos:position pos:line="824" pos:column="44"/></condition><then pos:line="824" pos:column="44"> <block pos:line="824" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="825" pos:column="9">variant<pos:position pos:line="825" pos:column="16"/></name><operator pos:line="825" pos:column="16">-&gt;<pos:position pos:line="825" pos:column="21"/></operator><name pos:line="825" pos:column="18">charset_quality<pos:position pos:line="825" pos:column="33"/></name></name> <operator pos:line="825" pos:column="34">=<pos:position pos:line="825" pos:column="35"/></operator> <literal type="number" pos:line="825" pos:column="36">1.0f<pos:position pos:line="825" pos:column="40"/></literal></expr>;<pos:position pos:line="825" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="826" pos:column="6"/></block></then>
    <else pos:line="827" pos:column="5">else <block pos:line="827" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="828" pos:column="9">variant<pos:position pos:line="828" pos:column="16"/></name><operator pos:line="828" pos:column="16">-&gt;<pos:position pos:line="828" pos:column="21"/></operator><name pos:line="828" pos:column="18">charset_quality<pos:position pos:line="828" pos:column="33"/></name></name> <operator pos:line="828" pos:column="34">=<pos:position pos:line="828" pos:column="35"/></operator> <literal type="number" pos:line="828" pos:column="36">0.0f<pos:position pos:line="828" pos:column="40"/></literal></expr>;<pos:position pos:line="828" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="829" pos:column="6"/></block></else></if>
}<pos:position pos:line="830" pos:column="2"/></block></function>


<comment type="block" pos:line="833" pos:column="1">/* is_identity_encoding is included for back-compat, but does anyone
 * use 7bit, 8bin or binary in their var files??
 */</comment>

<function><specifier pos:line="837" pos:column="1">static<pos:position pos:line="837" pos:column="7"/></specifier> <type><name pos:line="837" pos:column="8">int<pos:position pos:line="837" pos:column="11"/></name></type> <name pos:line="837" pos:column="12">is_identity_encoding<pos:position pos:line="837" pos:column="32"/></name><parameter_list pos:line="837" pos:column="32">(<parameter><decl><type><specifier pos:line="837" pos:column="33">const<pos:position pos:line="837" pos:column="38"/></specifier> <name pos:line="837" pos:column="39">char<pos:position pos:line="837" pos:column="43"/></name> <modifier pos:line="837" pos:column="44">*<pos:position pos:line="837" pos:column="45"/></modifier></type><name pos:line="837" pos:column="45">enc<pos:position pos:line="837" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="837" pos:column="49"/></parameter_list>
<block pos:line="838" pos:column="1">{
    <return pos:line="839" pos:column="5">return <expr><operator pos:line="839" pos:column="12">(<pos:position pos:line="839" pos:column="13"/></operator><operator pos:line="839" pos:column="13">!<pos:position pos:line="839" pos:column="14"/></operator><name pos:line="839" pos:column="14">enc<pos:position pos:line="839" pos:column="17"/></name> <operator pos:line="839" pos:column="18">||<pos:position pos:line="839" pos:column="20"/></operator> <operator pos:line="839" pos:column="21">!<pos:position pos:line="839" pos:column="22"/></operator><name><name pos:line="839" pos:column="22">enc<pos:position pos:line="839" pos:column="25"/></name><index pos:line="839" pos:column="25">[<expr><literal type="number" pos:line="839" pos:column="26">0<pos:position pos:line="839" pos:column="27"/></literal></expr>]<pos:position pos:line="839" pos:column="28"/></index></name> <operator pos:line="839" pos:column="29">||<pos:position pos:line="839" pos:column="31"/></operator> <operator pos:line="839" pos:column="32">!<pos:position pos:line="839" pos:column="33"/></operator><call><name pos:line="839" pos:column="33">strcmp<pos:position pos:line="839" pos:column="39"/></name><argument_list pos:line="839" pos:column="39">(<argument><expr><name pos:line="839" pos:column="40">enc<pos:position pos:line="839" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="839" pos:column="45">"7bit"<pos:position pos:line="839" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="839" pos:column="52"/></argument_list></call> <operator pos:line="839" pos:column="53">||<pos:position pos:line="839" pos:column="55"/></operator> <operator pos:line="839" pos:column="56">!<pos:position pos:line="839" pos:column="57"/></operator><call><name pos:line="839" pos:column="57">strcmp<pos:position pos:line="839" pos:column="63"/></name><argument_list pos:line="839" pos:column="63">(<argument><expr><name pos:line="839" pos:column="64">enc<pos:position pos:line="839" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="839" pos:column="69">"8bit"<pos:position pos:line="839" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="839" pos:column="76"/></argument_list></call>
            <operator pos:line="840" pos:column="13">||<pos:position pos:line="840" pos:column="15"/></operator> <operator pos:line="840" pos:column="16">!<pos:position pos:line="840" pos:column="17"/></operator><call><name pos:line="840" pos:column="17">strcmp<pos:position pos:line="840" pos:column="23"/></name><argument_list pos:line="840" pos:column="23">(<argument><expr><name pos:line="840" pos:column="24">enc<pos:position pos:line="840" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="840" pos:column="29">"binary"<pos:position pos:line="840" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="840" pos:column="38"/></argument_list></call><operator pos:line="840" pos:column="38">)<pos:position pos:line="840" pos:column="39"/></operator></expr>;<pos:position pos:line="840" pos:column="40"/></return>
}<pos:position pos:line="841" pos:column="2"/></block></function>

<comment type="block" pos:line="843" pos:column="1">/*
 * set_encoding_quality determines whether the encoding for a particular
 * variant is acceptable for the user-agent.
 *
 * The rules for encoding are that if the user-agent does not supply
 * any Accept-Encoding header, then all encodings are allowed but a
 * variant with no encoding should be preferred.
 * If there is an empty Accept-Encoding header, then no encodings are
 * acceptable. If there is a non-empty Accept-Encoding header, then
 * any of the listed encodings are acceptable, as well as no encoding
 * unless the "identity" encoding is specifically excluded.
 */</comment>
<function><specifier pos:line="855" pos:column="1">static<pos:position pos:line="855" pos:column="7"/></specifier> <type><name pos:line="855" pos:column="8">void<pos:position pos:line="855" pos:column="12"/></name></type> <name pos:line="855" pos:column="13">set_encoding_quality<pos:position pos:line="855" pos:column="33"/></name><parameter_list pos:line="855" pos:column="33">(<parameter><decl><type><name pos:line="855" pos:column="34">negotiation_state<pos:position pos:line="855" pos:column="51"/></name> <modifier pos:line="855" pos:column="52">*<pos:position pos:line="855" pos:column="53"/></modifier></type><name pos:line="855" pos:column="53">neg<pos:position pos:line="855" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="855" pos:column="58">var_rec<pos:position pos:line="855" pos:column="65"/></name> <modifier pos:line="855" pos:column="66">*<pos:position pos:line="855" pos:column="67"/></modifier></type><name pos:line="855" pos:column="67">variant<pos:position pos:line="855" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="855" pos:column="75"/></parameter_list>
<block pos:line="856" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="857" pos:column="5">accept_rec<pos:position pos:line="857" pos:column="15"/></name> <modifier pos:line="857" pos:column="16">*<pos:position pos:line="857" pos:column="17"/></modifier></type><name pos:line="857" pos:column="17">accept_recs<pos:position pos:line="857" pos:column="28"/></name></decl>;<pos:position pos:line="857" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="858" pos:column="5">const<pos:position pos:line="858" pos:column="10"/></specifier> <name pos:line="858" pos:column="11">char<pos:position pos:line="858" pos:column="15"/></name> <modifier pos:line="858" pos:column="16">*<pos:position pos:line="858" pos:column="17"/></modifier></type><name pos:line="858" pos:column="17">enc<pos:position pos:line="858" pos:column="20"/></name> <init pos:line="858" pos:column="21">= <expr><name><name pos:line="858" pos:column="23">variant<pos:position pos:line="858" pos:column="30"/></name><operator pos:line="858" pos:column="30">-&gt;<pos:position pos:line="858" pos:column="35"/></operator><name pos:line="858" pos:column="32">content_encoding<pos:position pos:line="858" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="858" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="859" pos:column="5">accept_rec<pos:position pos:line="859" pos:column="15"/></name> <modifier pos:line="859" pos:column="16">*<pos:position pos:line="859" pos:column="17"/></modifier></type><name pos:line="859" pos:column="17">star<pos:position pos:line="859" pos:column="21"/></name> <init pos:line="859" pos:column="22">= <expr><name pos:line="859" pos:column="24">NULL<pos:position pos:line="859" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="859" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="860" pos:column="5">float<pos:position pos:line="860" pos:column="10"/></name></type> <name pos:line="860" pos:column="11">value_if_not_found<pos:position pos:line="860" pos:column="29"/></name> <init pos:line="860" pos:column="30">= <expr><literal type="number" pos:line="860" pos:column="32">0.0f<pos:position pos:line="860" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="860" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="861" pos:column="5">int<pos:position pos:line="861" pos:column="8"/></name></type> <name pos:line="861" pos:column="9">i<pos:position pos:line="861" pos:column="10"/></name></decl>;<pos:position pos:line="861" pos:column="11"/></decl_stmt>

    <if pos:line="863" pos:column="5">if <condition pos:line="863" pos:column="8">(<expr><operator pos:line="863" pos:column="9">!<pos:position pos:line="863" pos:column="10"/></operator><name><name pos:line="863" pos:column="10">neg<pos:position pos:line="863" pos:column="13"/></name><operator pos:line="863" pos:column="13">-&gt;<pos:position pos:line="863" pos:column="18"/></operator><name pos:line="863" pos:column="15">accept_encodings<pos:position pos:line="863" pos:column="31"/></name></name></expr>)<pos:position pos:line="863" pos:column="32"/></condition><then pos:line="863" pos:column="32"> <block pos:line="863" pos:column="33">{
        <comment type="block" pos:line="864" pos:column="9">/* We had no Accept-Encoding header, assume that all
         * encodings are acceptable with a low quality,
         * but we prefer no encoding if available.
         */</comment>
        <if pos:line="868" pos:column="9">if <condition pos:line="868" pos:column="12">(<expr><operator pos:line="868" pos:column="13">!<pos:position pos:line="868" pos:column="14"/></operator><name pos:line="868" pos:column="14">enc<pos:position pos:line="868" pos:column="17"/></name> <operator pos:line="868" pos:column="18">||<pos:position pos:line="868" pos:column="20"/></operator> <call><name pos:line="868" pos:column="21">is_identity_encoding<pos:position pos:line="868" pos:column="41"/></name><argument_list pos:line="868" pos:column="41">(<argument><expr><name pos:line="868" pos:column="42">enc<pos:position pos:line="868" pos:column="45"/></name></expr></argument>)<pos:position pos:line="868" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="868" pos:column="47"/></condition><then pos:line="868" pos:column="47">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="869" pos:column="13">variant<pos:position pos:line="869" pos:column="20"/></name><operator pos:line="869" pos:column="20">-&gt;<pos:position pos:line="869" pos:column="25"/></operator><name pos:line="869" pos:column="22">encoding_quality<pos:position pos:line="869" pos:column="38"/></name></name> <operator pos:line="869" pos:column="39">=<pos:position pos:line="869" pos:column="40"/></operator> <literal type="number" pos:line="869" pos:column="41">1.0f<pos:position pos:line="869" pos:column="45"/></literal></expr>;<pos:position pos:line="869" pos:column="46"/></expr_stmt></block></then>
        <else pos:line="870" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="871" pos:column="13">variant<pos:position pos:line="871" pos:column="20"/></name><operator pos:line="871" pos:column="20">-&gt;<pos:position pos:line="871" pos:column="25"/></operator><name pos:line="871" pos:column="22">encoding_quality<pos:position pos:line="871" pos:column="38"/></name></name> <operator pos:line="871" pos:column="39">=<pos:position pos:line="871" pos:column="40"/></operator> <literal type="number" pos:line="871" pos:column="41">0.5f<pos:position pos:line="871" pos:column="45"/></literal></expr>;<pos:position pos:line="871" pos:column="46"/></expr_stmt></block></else></if>

        <return pos:line="873" pos:column="9">return;<pos:position pos:line="873" pos:column="16"/></return>
    }<pos:position pos:line="874" pos:column="6"/></block></then></if>

    <if pos:line="876" pos:column="5">if <condition pos:line="876" pos:column="8">(<expr><operator pos:line="876" pos:column="9">!<pos:position pos:line="876" pos:column="10"/></operator><name pos:line="876" pos:column="10">enc<pos:position pos:line="876" pos:column="13"/></name> <operator pos:line="876" pos:column="14">||<pos:position pos:line="876" pos:column="16"/></operator> <call><name pos:line="876" pos:column="17">is_identity_encoding<pos:position pos:line="876" pos:column="37"/></name><argument_list pos:line="876" pos:column="37">(<argument><expr><name pos:line="876" pos:column="38">enc<pos:position pos:line="876" pos:column="41"/></name></expr></argument>)<pos:position pos:line="876" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="876" pos:column="43"/></condition><then pos:line="876" pos:column="43"> <block pos:line="876" pos:column="44">{
        <expr_stmt><expr><name pos:line="877" pos:column="9">enc<pos:position pos:line="877" pos:column="12"/></name> <operator pos:line="877" pos:column="13">=<pos:position pos:line="877" pos:column="14"/></operator> <literal type="string" pos:line="877" pos:column="15">"identity"<pos:position pos:line="877" pos:column="25"/></literal></expr>;<pos:position pos:line="877" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="878" pos:column="9">value_if_not_found<pos:position pos:line="878" pos:column="27"/></name> <operator pos:line="878" pos:column="28">=<pos:position pos:line="878" pos:column="29"/></operator> <literal type="number" pos:line="878" pos:column="30">0.0001f<pos:position pos:line="878" pos:column="37"/></literal></expr>;<pos:position pos:line="878" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="879" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="881" pos:column="5">accept_recs<pos:position pos:line="881" pos:column="16"/></name> <operator pos:line="881" pos:column="17">=<pos:position pos:line="881" pos:column="18"/></operator> <operator pos:line="881" pos:column="19">(<pos:position pos:line="881" pos:column="20"/></operator><name pos:line="881" pos:column="20">accept_rec<pos:position pos:line="881" pos:column="30"/></name> <operator pos:line="881" pos:column="31">*<pos:position pos:line="881" pos:column="32"/></operator><operator pos:line="881" pos:column="32">)<pos:position pos:line="881" pos:column="33"/></operator> <name><name pos:line="881" pos:column="34">neg<pos:position pos:line="881" pos:column="37"/></name><operator pos:line="881" pos:column="37">-&gt;<pos:position pos:line="881" pos:column="42"/></operator><name pos:line="881" pos:column="39">accept_encodings<pos:position pos:line="881" pos:column="55"/></name><operator pos:line="881" pos:column="55">-&gt;<pos:position pos:line="881" pos:column="60"/></operator><name pos:line="881" pos:column="57">elts<pos:position pos:line="881" pos:column="61"/></name></name></expr>;<pos:position pos:line="881" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="883" pos:column="5">/* Go through each of the encodings on the Accept-Encoding: header,
     * looking for a match with our encoding. x- prefixes are ignored.
     */</comment>
    <if pos:line="886" pos:column="5">if <condition pos:line="886" pos:column="8">(<expr><name><name pos:line="886" pos:column="9">enc<pos:position pos:line="886" pos:column="12"/></name><index pos:line="886" pos:column="12">[<expr><literal type="number" pos:line="886" pos:column="13">0<pos:position pos:line="886" pos:column="14"/></literal></expr>]<pos:position pos:line="886" pos:column="15"/></index></name> <operator pos:line="886" pos:column="16">==<pos:position pos:line="886" pos:column="18"/></operator> <literal type="char" pos:line="886" pos:column="19">'x'<pos:position pos:line="886" pos:column="22"/></literal> <operator pos:line="886" pos:column="23">&amp;&amp;<pos:position pos:line="886" pos:column="33"/></operator> <name><name pos:line="886" pos:column="26">enc<pos:position pos:line="886" pos:column="29"/></name><index pos:line="886" pos:column="29">[<expr><literal type="number" pos:line="886" pos:column="30">1<pos:position pos:line="886" pos:column="31"/></literal></expr>]<pos:position pos:line="886" pos:column="32"/></index></name> <operator pos:line="886" pos:column="33">==<pos:position pos:line="886" pos:column="35"/></operator> <literal type="char" pos:line="886" pos:column="36">'-'<pos:position pos:line="886" pos:column="39"/></literal></expr>)<pos:position pos:line="886" pos:column="40"/></condition><then pos:line="886" pos:column="40"> <block pos:line="886" pos:column="41">{
        <expr_stmt><expr><name pos:line="887" pos:column="9">enc<pos:position pos:line="887" pos:column="12"/></name> <operator pos:line="887" pos:column="13">+=<pos:position pos:line="887" pos:column="15"/></operator> <literal type="number" pos:line="887" pos:column="16">2<pos:position pos:line="887" pos:column="17"/></literal></expr>;<pos:position pos:line="887" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="888" pos:column="6"/></block></then></if>
    <for pos:line="889" pos:column="5">for <control pos:line="889" pos:column="9">(<init><expr><name pos:line="889" pos:column="10">i<pos:position pos:line="889" pos:column="11"/></name> <operator pos:line="889" pos:column="12">=<pos:position pos:line="889" pos:column="13"/></operator> <literal type="number" pos:line="889" pos:column="14">0<pos:position pos:line="889" pos:column="15"/></literal></expr>;<pos:position pos:line="889" pos:column="16"/></init> <condition><expr><name pos:line="889" pos:column="17">i<pos:position pos:line="889" pos:column="18"/></name> <operator pos:line="889" pos:column="19">&lt;<pos:position pos:line="889" pos:column="23"/></operator> <name><name pos:line="889" pos:column="21">neg<pos:position pos:line="889" pos:column="24"/></name><operator pos:line="889" pos:column="24">-&gt;<pos:position pos:line="889" pos:column="29"/></operator><name pos:line="889" pos:column="26">accept_encodings<pos:position pos:line="889" pos:column="42"/></name><operator pos:line="889" pos:column="42">-&gt;<pos:position pos:line="889" pos:column="47"/></operator><name pos:line="889" pos:column="44">nelts<pos:position pos:line="889" pos:column="49"/></name></name></expr>;<pos:position pos:line="889" pos:column="50"/></condition> <incr><expr><operator pos:line="889" pos:column="51">++<pos:position pos:line="889" pos:column="53"/></operator><name pos:line="889" pos:column="53">i<pos:position pos:line="889" pos:column="54"/></name></expr></incr>)<pos:position pos:line="889" pos:column="55"/></control> <block pos:line="889" pos:column="56">{

        <decl_stmt><decl><type><name pos:line="891" pos:column="9">char<pos:position pos:line="891" pos:column="13"/></name> <modifier pos:line="891" pos:column="14">*<pos:position pos:line="891" pos:column="15"/></modifier></type><name pos:line="891" pos:column="15">name<pos:position pos:line="891" pos:column="19"/></name> <init pos:line="891" pos:column="20">= <expr><name><name pos:line="891" pos:column="22">accept_recs<pos:position pos:line="891" pos:column="33"/></name><index pos:line="891" pos:column="33">[<expr><name pos:line="891" pos:column="34">i<pos:position pos:line="891" pos:column="35"/></name></expr>]<pos:position pos:line="891" pos:column="36"/></index></name><operator pos:line="891" pos:column="36">.<pos:position pos:line="891" pos:column="37"/></operator><name pos:line="891" pos:column="37">name<pos:position pos:line="891" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="891" pos:column="42"/></decl_stmt>

        <if pos:line="893" pos:column="9">if <condition pos:line="893" pos:column="12">(<expr><name><name pos:line="893" pos:column="13">name<pos:position pos:line="893" pos:column="17"/></name><index pos:line="893" pos:column="17">[<expr><literal type="number" pos:line="893" pos:column="18">0<pos:position pos:line="893" pos:column="19"/></literal></expr>]<pos:position pos:line="893" pos:column="20"/></index></name> <operator pos:line="893" pos:column="21">==<pos:position pos:line="893" pos:column="23"/></operator> <literal type="char" pos:line="893" pos:column="24">'x'<pos:position pos:line="893" pos:column="27"/></literal> <operator pos:line="893" pos:column="28">&amp;&amp;<pos:position pos:line="893" pos:column="38"/></operator> <name><name pos:line="893" pos:column="31">name<pos:position pos:line="893" pos:column="35"/></name><index pos:line="893" pos:column="35">[<expr><literal type="number" pos:line="893" pos:column="36">1<pos:position pos:line="893" pos:column="37"/></literal></expr>]<pos:position pos:line="893" pos:column="38"/></index></name> <operator pos:line="893" pos:column="39">==<pos:position pos:line="893" pos:column="41"/></operator> <literal type="char" pos:line="893" pos:column="42">'-'<pos:position pos:line="893" pos:column="45"/></literal></expr>)<pos:position pos:line="893" pos:column="46"/></condition><then pos:line="893" pos:column="46"> <block pos:line="893" pos:column="47">{
            <expr_stmt><expr><name pos:line="894" pos:column="13">name<pos:position pos:line="894" pos:column="17"/></name> <operator pos:line="894" pos:column="18">+=<pos:position pos:line="894" pos:column="20"/></operator> <literal type="number" pos:line="894" pos:column="21">2<pos:position pos:line="894" pos:column="22"/></literal></expr>;<pos:position pos:line="894" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="895" pos:column="10"/></block></then></if>

        <if pos:line="897" pos:column="9">if <condition pos:line="897" pos:column="12">(<expr><operator pos:line="897" pos:column="13">!<pos:position pos:line="897" pos:column="14"/></operator><call><name pos:line="897" pos:column="14">strcmp<pos:position pos:line="897" pos:column="20"/></name><argument_list pos:line="897" pos:column="20">(<argument><expr><name pos:line="897" pos:column="21">name<pos:position pos:line="897" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="897" pos:column="27">enc<pos:position pos:line="897" pos:column="30"/></name></expr></argument>)<pos:position pos:line="897" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="897" pos:column="32"/></condition><then pos:line="897" pos:column="32"> <block pos:line="897" pos:column="33">{
            <expr_stmt><expr><name><name pos:line="898" pos:column="13">variant<pos:position pos:line="898" pos:column="20"/></name><operator pos:line="898" pos:column="20">-&gt;<pos:position pos:line="898" pos:column="25"/></operator><name pos:line="898" pos:column="22">encoding_quality<pos:position pos:line="898" pos:column="38"/></name></name> <operator pos:line="898" pos:column="39">=<pos:position pos:line="898" pos:column="40"/></operator> <name><name pos:line="898" pos:column="41">accept_recs<pos:position pos:line="898" pos:column="52"/></name><index pos:line="898" pos:column="52">[<expr><name pos:line="898" pos:column="53">i<pos:position pos:line="898" pos:column="54"/></name></expr>]<pos:position pos:line="898" pos:column="55"/></index></name><operator pos:line="898" pos:column="55">.<pos:position pos:line="898" pos:column="56"/></operator><name pos:line="898" pos:column="56">quality<pos:position pos:line="898" pos:column="63"/></name></expr>;<pos:position pos:line="898" pos:column="64"/></expr_stmt>
            <return pos:line="899" pos:column="13">return;<pos:position pos:line="899" pos:column="20"/></return>
        }<pos:position pos:line="900" pos:column="10"/></block></then></if>

        <if pos:line="902" pos:column="9">if <condition pos:line="902" pos:column="12">(<expr><call><name pos:line="902" pos:column="13">strcmp<pos:position pos:line="902" pos:column="19"/></name><argument_list pos:line="902" pos:column="19">(<argument><expr><name pos:line="902" pos:column="20">name<pos:position pos:line="902" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="902" pos:column="26">"*"<pos:position pos:line="902" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="902" pos:column="30"/></argument_list></call> <operator pos:line="902" pos:column="31">==<pos:position pos:line="902" pos:column="33"/></operator> <literal type="number" pos:line="902" pos:column="34">0<pos:position pos:line="902" pos:column="35"/></literal></expr>)<pos:position pos:line="902" pos:column="36"/></condition><then pos:line="902" pos:column="36"> <block pos:line="902" pos:column="37">{
            <expr_stmt><expr><name pos:line="903" pos:column="13">star<pos:position pos:line="903" pos:column="17"/></name> <operator pos:line="903" pos:column="18">=<pos:position pos:line="903" pos:column="19"/></operator> <operator pos:line="903" pos:column="20">&amp;<pos:position pos:line="903" pos:column="25"/></operator><name><name pos:line="903" pos:column="21">accept_recs<pos:position pos:line="903" pos:column="32"/></name><index pos:line="903" pos:column="32">[<expr><name pos:line="903" pos:column="33">i<pos:position pos:line="903" pos:column="34"/></name></expr>]<pos:position pos:line="903" pos:column="35"/></index></name></expr>;<pos:position pos:line="903" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="904" pos:column="10"/></block></then></if>

    }<pos:position pos:line="906" pos:column="6"/></block></for>
    <comment type="block" pos:line="907" pos:column="5">/* No explicit match */</comment>
    <if pos:line="908" pos:column="5">if <condition pos:line="908" pos:column="8">(<expr><name pos:line="908" pos:column="9">star<pos:position pos:line="908" pos:column="13"/></name></expr>)<pos:position pos:line="908" pos:column="14"/></condition><then pos:line="908" pos:column="14"> <block pos:line="908" pos:column="15">{
        <expr_stmt><expr><name><name pos:line="909" pos:column="9">variant<pos:position pos:line="909" pos:column="16"/></name><operator pos:line="909" pos:column="16">-&gt;<pos:position pos:line="909" pos:column="21"/></operator><name pos:line="909" pos:column="18">encoding_quality<pos:position pos:line="909" pos:column="34"/></name></name> <operator pos:line="909" pos:column="35">=<pos:position pos:line="909" pos:column="36"/></operator> <name><name pos:line="909" pos:column="37">star<pos:position pos:line="909" pos:column="41"/></name><operator pos:line="909" pos:column="41">-&gt;<pos:position pos:line="909" pos:column="46"/></operator><name pos:line="909" pos:column="43">quality<pos:position pos:line="909" pos:column="50"/></name></name></expr>;<pos:position pos:line="909" pos:column="51"/></expr_stmt>
        <return pos:line="910" pos:column="9">return;<pos:position pos:line="910" pos:column="16"/></return>
    }<pos:position pos:line="911" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="913" pos:column="5">/* Encoding not found on Accept-Encoding: header, so it is
     * _not_ acceptable unless it is the identity (no encoding)
     */</comment>
    <expr_stmt><expr><name><name pos:line="916" pos:column="5">variant<pos:position pos:line="916" pos:column="12"/></name><operator pos:line="916" pos:column="12">-&gt;<pos:position pos:line="916" pos:column="17"/></operator><name pos:line="916" pos:column="14">encoding_quality<pos:position pos:line="916" pos:column="30"/></name></name> <operator pos:line="916" pos:column="31">=<pos:position pos:line="916" pos:column="32"/></operator> <name pos:line="916" pos:column="33">value_if_not_found<pos:position pos:line="916" pos:column="51"/></name></expr>;<pos:position pos:line="916" pos:column="52"/></expr_stmt>
}<pos:position pos:line="917" pos:column="2"/></block></function>

<comment type="block" format="doxygen" pos:line="919" pos:column="1">/*************************************************************
 * Possible results of the variant selection algorithm
 */</comment>
<enum pos:line="922" pos:column="1">enum <name pos:line="922" pos:column="6">algorithm_results<pos:position pos:line="922" pos:column="23"/></name> <block pos:line="922" pos:column="24">{
    <decl><name pos:line="923" pos:column="5">alg_choice<pos:position pos:line="923" pos:column="15"/></name> <init pos:line="923" pos:column="16">= <expr><literal type="number" pos:line="923" pos:column="18">1<pos:position pos:line="923" pos:column="19"/></literal></expr></init></decl>,              <comment type="block" pos:line="923" pos:column="34">/* choose variant */</comment>
    <decl><name pos:line="924" pos:column="5">alg_list<pos:position pos:line="924" pos:column="13"/></name></decl>                     <comment type="block" pos:line="924" pos:column="34">/* list variants */</comment>
}<pos:position pos:line="925" pos:column="2"/></block>;<pos:position pos:line="925" pos:column="3"/></enum>

<comment type="block" pos:line="927" pos:column="1">/* Below is the 'best_match' function. It returns an int, which has
 * one of the two values alg_choice or alg_list, which give the result
 * of the variant selection algorithm.  alg_list means that no best
 * variant was found by the algorithm, alg_choice means that a best
 * variant was found and should be returned.  The list/choice
 * terminology comes from TCN (rfc2295), but is used in a more generic
 * way here.  The best variant is returned in *pbest. best_match has
 * two possible algorithms for determining the best variant: the
 * RVSA/1.0 algorithm (from RFC2296), and the standard Apache
 * algorithm. These are split out into separate functions
 * (is_variant_better_rvsa() and is_variant_better()).  Selection of
 * one is through the neg-&gt;use_rvsa flag.
 *
 * The call to best_match also creates full information, including
 * language, charset, etc quality for _every_ variant. This is needed
 * for generating a correct Vary header, and can be used for the
 * Alternates header, the human-readable list responses and 406 errors.
 */</comment>

<comment type="block" pos:line="946" pos:column="1">/* Firstly, the RVSA/1.0 (HTTP Remote Variant Selection Algorithm
 * v1.0) from rfc2296.  This is the algorithm that goes together with
 * transparent content negotiation (TCN).
 */</comment>
<function><specifier pos:line="950" pos:column="1">static<pos:position pos:line="950" pos:column="7"/></specifier> <type><name pos:line="950" pos:column="8">int<pos:position pos:line="950" pos:column="11"/></name></type> <name pos:line="950" pos:column="12">is_variant_better_rvsa<pos:position pos:line="950" pos:column="34"/></name><parameter_list pos:line="950" pos:column="34">(<parameter><decl><type><name pos:line="950" pos:column="35">negotiation_state<pos:position pos:line="950" pos:column="52"/></name> <modifier pos:line="950" pos:column="53">*<pos:position pos:line="950" pos:column="54"/></modifier></type><name pos:line="950" pos:column="54">neg<pos:position pos:line="950" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="950" pos:column="59">var_rec<pos:position pos:line="950" pos:column="66"/></name> <modifier pos:line="950" pos:column="67">*<pos:position pos:line="950" pos:column="68"/></modifier></type><name pos:line="950" pos:column="68">variant<pos:position pos:line="950" pos:column="75"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="951" pos:column="35">var_rec<pos:position pos:line="951" pos:column="42"/></name> <modifier pos:line="951" pos:column="43">*<pos:position pos:line="951" pos:column="44"/></modifier></type><name pos:line="951" pos:column="44">best<pos:position pos:line="951" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="951" pos:column="50">float<pos:position pos:line="951" pos:column="55"/></name> <modifier pos:line="951" pos:column="56">*<pos:position pos:line="951" pos:column="57"/></modifier></type><name pos:line="951" pos:column="57">p_bestq<pos:position pos:line="951" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="951" pos:column="65"/></parameter_list>
<block pos:line="952" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="953" pos:column="5">float<pos:position pos:line="953" pos:column="10"/></name></type> <name pos:line="953" pos:column="11">bestq<pos:position pos:line="953" pos:column="16"/></name> <init pos:line="953" pos:column="17">= <expr><operator pos:line="953" pos:column="19">*<pos:position pos:line="953" pos:column="20"/></operator><name pos:line="953" pos:column="20">p_bestq<pos:position pos:line="953" pos:column="27"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="953" pos:column="29">q<pos:position pos:line="953" pos:column="30"/></name></decl>;<pos:position pos:line="953" pos:column="31"/></decl_stmt>

    <comment type="block" pos:line="955" pos:column="5">/* TCN does not cover negotiation on content-encoding.  For now,
     * we ignore the encoding unless it was explicitly excluded.
     */</comment>
    <if pos:line="958" pos:column="5">if <condition pos:line="958" pos:column="8">(<expr><name><name pos:line="958" pos:column="9">variant<pos:position pos:line="958" pos:column="16"/></name><operator pos:line="958" pos:column="16">-&gt;<pos:position pos:line="958" pos:column="21"/></operator><name pos:line="958" pos:column="18">encoding_quality<pos:position pos:line="958" pos:column="34"/></name></name> <operator pos:line="958" pos:column="35">==<pos:position pos:line="958" pos:column="37"/></operator> <literal type="number" pos:line="958" pos:column="38">0.0f<pos:position pos:line="958" pos:column="42"/></literal></expr>)<pos:position pos:line="958" pos:column="43"/></condition><then pos:line="958" pos:column="43">
        <block type="pseudo"><return pos:line="959" pos:column="9">return <expr><literal type="number" pos:line="959" pos:column="16">0<pos:position pos:line="959" pos:column="17"/></literal></expr>;<pos:position pos:line="959" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="961" pos:column="5">q<pos:position pos:line="961" pos:column="6"/></name> <operator pos:line="961" pos:column="7">=<pos:position pos:line="961" pos:column="8"/></operator> <name><name pos:line="961" pos:column="9">variant<pos:position pos:line="961" pos:column="16"/></name><operator pos:line="961" pos:column="16">-&gt;<pos:position pos:line="961" pos:column="21"/></operator><name pos:line="961" pos:column="18">mime_type_quality<pos:position pos:line="961" pos:column="35"/></name></name> <operator pos:line="961" pos:column="36">*<pos:position pos:line="961" pos:column="37"/></operator>
        <name><name pos:line="962" pos:column="9">variant<pos:position pos:line="962" pos:column="16"/></name><operator pos:line="962" pos:column="16">-&gt;<pos:position pos:line="962" pos:column="21"/></operator><name pos:line="962" pos:column="18">source_quality<pos:position pos:line="962" pos:column="32"/></name></name> <operator pos:line="962" pos:column="33">*<pos:position pos:line="962" pos:column="34"/></operator>
        <name><name pos:line="963" pos:column="9">variant<pos:position pos:line="963" pos:column="16"/></name><operator pos:line="963" pos:column="16">-&gt;<pos:position pos:line="963" pos:column="21"/></operator><name pos:line="963" pos:column="18">charset_quality<pos:position pos:line="963" pos:column="33"/></name></name> <operator pos:line="963" pos:column="34">*<pos:position pos:line="963" pos:column="35"/></operator>
        <name><name pos:line="964" pos:column="9">variant<pos:position pos:line="964" pos:column="16"/></name><operator pos:line="964" pos:column="16">-&gt;<pos:position pos:line="964" pos:column="21"/></operator><name pos:line="964" pos:column="18">lang_quality<pos:position pos:line="964" pos:column="30"/></name></name></expr>;<pos:position pos:line="964" pos:column="31"/></expr_stmt>

   <comment type="block" pos:line="966" pos:column="4">/* RFC 2296 calls for the result to be rounded to 5 decimal places,
    * but we don't do that because it serves no useful purpose other
    * than to ensure that a remote algorithm operates on the same
    * precision as ours.  That is silly, since what we obviously want
    * is for the algorithm to operate on the best available precision
    * regardless of who runs it.  Since the above calculation may
    * result in significant variance at 1e-12, rounding would be bogus.
    */</comment>

<cpp:ifdef pos:line="975" pos:column="1">#<cpp:directive pos:line="975" pos:column="2">ifdef<pos:position pos:line="975" pos:column="7"/></cpp:directive> <name pos:line="975" pos:column="8">NEG_DEBUG<pos:position pos:line="975" pos:column="17"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="976" pos:column="5">ap_log_error<pos:position pos:line="976" pos:column="17"/></name><argument_list pos:line="976" pos:column="17">(<argument><expr><name pos:line="976" pos:column="18">APLOG_MARK<pos:position pos:line="976" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="976" pos:column="30">APLOG_STARTUP<pos:position pos:line="976" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="976" pos:column="45">0<pos:position pos:line="976" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="976" pos:column="48">NULL<pos:position pos:line="976" pos:column="52"/></name></expr></argument>,
           <argument><expr><literal type="string" pos:line="977" pos:column="12">"Variant: file=%s type=%s lang=%s sourceq=%1.3f "<pos:position pos:line="977" pos:column="61"/></literal>
           <literal type="string" pos:line="978" pos:column="12">"mimeq=%1.3f langq=%1.3f charq=%1.3f encq=%1.3f "<pos:position pos:line="978" pos:column="61"/></literal>
           <literal type="string" pos:line="979" pos:column="12">"q=%1.5f definite=%d"<pos:position pos:line="979" pos:column="33"/></literal></expr></argument>,
            <argument><expr><operator pos:line="980" pos:column="13">(<pos:position pos:line="980" pos:column="14"/></operator><ternary><condition><expr><name><name pos:line="980" pos:column="14">variant<pos:position pos:line="980" pos:column="21"/></name><operator pos:line="980" pos:column="21">-&gt;<pos:position pos:line="980" pos:column="26"/></operator><name pos:line="980" pos:column="23">file_name<pos:position pos:line="980" pos:column="32"/></name></name></expr> ?<pos:position pos:line="980" pos:column="34"/></condition><then pos:line="980" pos:column="34"> <expr><name><name pos:line="980" pos:column="35">variant<pos:position pos:line="980" pos:column="42"/></name><operator pos:line="980" pos:column="42">-&gt;<pos:position pos:line="980" pos:column="47"/></operator><name pos:line="980" pos:column="44">file_name<pos:position pos:line="980" pos:column="53"/></name></name></expr> <pos:position pos:line="980" pos:column="54"/></then><else pos:line="980" pos:column="54">: <expr><literal type="string" pos:line="980" pos:column="56">""<pos:position pos:line="980" pos:column="58"/></literal></expr></else></ternary><operator pos:line="980" pos:column="58">)<pos:position pos:line="980" pos:column="59"/></operator></expr></argument>,
            <argument><expr><operator pos:line="981" pos:column="13">(<pos:position pos:line="981" pos:column="14"/></operator><ternary><condition><expr><name><name pos:line="981" pos:column="14">variant<pos:position pos:line="981" pos:column="21"/></name><operator pos:line="981" pos:column="21">-&gt;<pos:position pos:line="981" pos:column="26"/></operator><name pos:line="981" pos:column="23">mime_type<pos:position pos:line="981" pos:column="32"/></name></name></expr> ?<pos:position pos:line="981" pos:column="34"/></condition><then pos:line="981" pos:column="34"> <expr><name><name pos:line="981" pos:column="35">variant<pos:position pos:line="981" pos:column="42"/></name><operator pos:line="981" pos:column="42">-&gt;<pos:position pos:line="981" pos:column="47"/></operator><name pos:line="981" pos:column="44">mime_type<pos:position pos:line="981" pos:column="53"/></name></name></expr> <pos:position pos:line="981" pos:column="54"/></then><else pos:line="981" pos:column="54">: <expr><literal type="string" pos:line="981" pos:column="56">""<pos:position pos:line="981" pos:column="58"/></literal></expr></else></ternary><operator pos:line="981" pos:column="58">)<pos:position pos:line="981" pos:column="59"/></operator></expr></argument>,
            <argument><expr><operator pos:line="982" pos:column="13">(<pos:position pos:line="982" pos:column="14"/></operator><ternary><condition><expr><name><name pos:line="982" pos:column="14">variant<pos:position pos:line="982" pos:column="21"/></name><operator pos:line="982" pos:column="21">-&gt;<pos:position pos:line="982" pos:column="26"/></operator><name pos:line="982" pos:column="23">content_languages<pos:position pos:line="982" pos:column="40"/></name></name></expr>
             ?<pos:position pos:line="983" pos:column="15"/></condition><then pos:line="983" pos:column="15"> <expr><call><name pos:line="983" pos:column="16">apr_array_pstrcat<pos:position pos:line="983" pos:column="33"/></name><argument_list pos:line="983" pos:column="33">(<argument><expr><name><name pos:line="983" pos:column="34">neg<pos:position pos:line="983" pos:column="37"/></name><operator pos:line="983" pos:column="37">-&gt;<pos:position pos:line="983" pos:column="42"/></operator><name pos:line="983" pos:column="39">pool<pos:position pos:line="983" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="983" pos:column="45">variant<pos:position pos:line="983" pos:column="52"/></name><operator pos:line="983" pos:column="52">-&gt;<pos:position pos:line="983" pos:column="57"/></operator><name pos:line="983" pos:column="54">content_languages<pos:position pos:line="983" pos:column="71"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="983" pos:column="73">','<pos:position pos:line="983" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="983" pos:column="77"/></argument_list></call></expr>
             <pos:position pos:line="984" pos:column="14"/></then><else pos:line="984" pos:column="14">: <expr><literal type="string" pos:line="984" pos:column="16">""<pos:position pos:line="984" pos:column="18"/></literal></expr></else></ternary><operator pos:line="984" pos:column="18">)<pos:position pos:line="984" pos:column="19"/></operator></expr></argument>,
            <argument><expr><name><name pos:line="985" pos:column="13">variant<pos:position pos:line="985" pos:column="20"/></name><operator pos:line="985" pos:column="20">-&gt;<pos:position pos:line="985" pos:column="25"/></operator><name pos:line="985" pos:column="22">source_quality<pos:position pos:line="985" pos:column="36"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="986" pos:column="13">variant<pos:position pos:line="986" pos:column="20"/></name><operator pos:line="986" pos:column="20">-&gt;<pos:position pos:line="986" pos:column="25"/></operator><name pos:line="986" pos:column="22">mime_type_quality<pos:position pos:line="986" pos:column="39"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="987" pos:column="13">variant<pos:position pos:line="987" pos:column="20"/></name><operator pos:line="987" pos:column="20">-&gt;<pos:position pos:line="987" pos:column="25"/></operator><name pos:line="987" pos:column="22">lang_quality<pos:position pos:line="987" pos:column="34"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="988" pos:column="13">variant<pos:position pos:line="988" pos:column="20"/></name><operator pos:line="988" pos:column="20">-&gt;<pos:position pos:line="988" pos:column="25"/></operator><name pos:line="988" pos:column="22">charset_quality<pos:position pos:line="988" pos:column="37"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="989" pos:column="13">variant<pos:position pos:line="989" pos:column="20"/></name><operator pos:line="989" pos:column="20">-&gt;<pos:position pos:line="989" pos:column="25"/></operator><name pos:line="989" pos:column="22">encoding_quality<pos:position pos:line="989" pos:column="38"/></name></name></expr></argument>,
            <argument><expr><name pos:line="990" pos:column="13">q<pos:position pos:line="990" pos:column="14"/></name></expr></argument>,
            <argument><expr><name><name pos:line="991" pos:column="13">variant<pos:position pos:line="991" pos:column="20"/></name><operator pos:line="991" pos:column="20">-&gt;<pos:position pos:line="991" pos:column="25"/></operator><name pos:line="991" pos:column="22">definite<pos:position pos:line="991" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="991" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="991" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="992" pos:column="1">#<cpp:directive pos:line="992" pos:column="2">endif<pos:position pos:line="992" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="994" pos:column="5">if <condition pos:line="994" pos:column="8">(<expr><name pos:line="994" pos:column="9">q<pos:position pos:line="994" pos:column="10"/></name> <operator pos:line="994" pos:column="11">&lt;=<pos:position pos:line="994" pos:column="16"/></operator> <literal type="number" pos:line="994" pos:column="14">0.0f<pos:position pos:line="994" pos:column="18"/></literal></expr>)<pos:position pos:line="994" pos:column="19"/></condition><then pos:line="994" pos:column="19"> <block pos:line="994" pos:column="20">{
        <return pos:line="995" pos:column="9">return <expr><literal type="number" pos:line="995" pos:column="16">0<pos:position pos:line="995" pos:column="17"/></literal></expr>;<pos:position pos:line="995" pos:column="18"/></return>
    }<pos:position pos:line="996" pos:column="6"/></block></then></if>
    <if pos:line="997" pos:column="5">if <condition pos:line="997" pos:column="8">(<expr><name pos:line="997" pos:column="9">q<pos:position pos:line="997" pos:column="10"/></name> <operator pos:line="997" pos:column="11">&gt;<pos:position pos:line="997" pos:column="15"/></operator> <name pos:line="997" pos:column="13">bestq<pos:position pos:line="997" pos:column="18"/></name></expr>)<pos:position pos:line="997" pos:column="19"/></condition><then pos:line="997" pos:column="19"> <block pos:line="997" pos:column="20">{
        <expr_stmt><expr><operator pos:line="998" pos:column="9">*<pos:position pos:line="998" pos:column="10"/></operator><name pos:line="998" pos:column="10">p_bestq<pos:position pos:line="998" pos:column="17"/></name> <operator pos:line="998" pos:column="18">=<pos:position pos:line="998" pos:column="19"/></operator> <name pos:line="998" pos:column="20">q<pos:position pos:line="998" pos:column="21"/></name></expr>;<pos:position pos:line="998" pos:column="22"/></expr_stmt>
        <return pos:line="999" pos:column="9">return <expr><literal type="number" pos:line="999" pos:column="16">1<pos:position pos:line="999" pos:column="17"/></literal></expr>;<pos:position pos:line="999" pos:column="18"/></return>
    }<pos:position pos:line="1000" pos:column="6"/></block></then></if>
    <if pos:line="1001" pos:column="5">if <condition pos:line="1001" pos:column="8">(<expr><name pos:line="1001" pos:column="9">q<pos:position pos:line="1001" pos:column="10"/></name> <operator pos:line="1001" pos:column="11">==<pos:position pos:line="1001" pos:column="13"/></operator> <name pos:line="1001" pos:column="14">bestq<pos:position pos:line="1001" pos:column="19"/></name></expr>)<pos:position pos:line="1001" pos:column="20"/></condition><then pos:line="1001" pos:column="20"> <block pos:line="1001" pos:column="21">{
        <comment type="block" pos:line="1002" pos:column="9">/* If the best variant's encoding is of lesser quality than
         * this variant, then we prefer this variant
         */</comment>
        <if pos:line="1005" pos:column="9">if <condition pos:line="1005" pos:column="12">(<expr><name><name pos:line="1005" pos:column="13">variant<pos:position pos:line="1005" pos:column="20"/></name><operator pos:line="1005" pos:column="20">-&gt;<pos:position pos:line="1005" pos:column="25"/></operator><name pos:line="1005" pos:column="22">encoding_quality<pos:position pos:line="1005" pos:column="38"/></name></name> <operator pos:line="1005" pos:column="39">&gt;<pos:position pos:line="1005" pos:column="43"/></operator> <name><name pos:line="1005" pos:column="41">best<pos:position pos:line="1005" pos:column="45"/></name><operator pos:line="1005" pos:column="45">-&gt;<pos:position pos:line="1005" pos:column="50"/></operator><name pos:line="1005" pos:column="47">encoding_quality<pos:position pos:line="1005" pos:column="63"/></name></name></expr>)<pos:position pos:line="1005" pos:column="64"/></condition><then pos:line="1005" pos:column="64"> <block pos:line="1005" pos:column="65">{
            <expr_stmt><expr><operator pos:line="1006" pos:column="13">*<pos:position pos:line="1006" pos:column="14"/></operator><name pos:line="1006" pos:column="14">p_bestq<pos:position pos:line="1006" pos:column="21"/></name> <operator pos:line="1006" pos:column="22">=<pos:position pos:line="1006" pos:column="23"/></operator> <name pos:line="1006" pos:column="24">q<pos:position pos:line="1006" pos:column="25"/></name></expr>;<pos:position pos:line="1006" pos:column="26"/></expr_stmt>
            <return pos:line="1007" pos:column="13">return <expr><literal type="number" pos:line="1007" pos:column="20">1<pos:position pos:line="1007" pos:column="21"/></literal></expr>;<pos:position pos:line="1007" pos:column="22"/></return>
        }<pos:position pos:line="1008" pos:column="10"/></block></then></if>
    }<pos:position pos:line="1009" pos:column="6"/></block></then></if>
    <return pos:line="1010" pos:column="5">return <expr><literal type="number" pos:line="1010" pos:column="12">0<pos:position pos:line="1010" pos:column="13"/></literal></expr>;<pos:position pos:line="1010" pos:column="14"/></return>
}<pos:position pos:line="1011" pos:column="2"/></block></function>

<comment type="block" pos:line="1013" pos:column="1">/* Negotiation algorithm as used by previous versions of Apache
 * (just about).
 */</comment>

<function><specifier pos:line="1017" pos:column="1">static<pos:position pos:line="1017" pos:column="7"/></specifier> <type><name pos:line="1017" pos:column="8">int<pos:position pos:line="1017" pos:column="11"/></name></type> <name pos:line="1017" pos:column="12">is_variant_better<pos:position pos:line="1017" pos:column="29"/></name><parameter_list pos:line="1017" pos:column="29">(<parameter><decl><type><name pos:line="1017" pos:column="30">negotiation_state<pos:position pos:line="1017" pos:column="47"/></name> <modifier pos:line="1017" pos:column="48">*<pos:position pos:line="1017" pos:column="49"/></modifier></type><name pos:line="1017" pos:column="49">neg<pos:position pos:line="1017" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1017" pos:column="54">var_rec<pos:position pos:line="1017" pos:column="61"/></name> <modifier pos:line="1017" pos:column="62">*<pos:position pos:line="1017" pos:column="63"/></modifier></type><name pos:line="1017" pos:column="63">variant<pos:position pos:line="1017" pos:column="70"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="1018" pos:column="30">var_rec<pos:position pos:line="1018" pos:column="37"/></name> <modifier pos:line="1018" pos:column="38">*<pos:position pos:line="1018" pos:column="39"/></modifier></type><name pos:line="1018" pos:column="39">best<pos:position pos:line="1018" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1018" pos:column="45">float<pos:position pos:line="1018" pos:column="50"/></name> <modifier pos:line="1018" pos:column="51">*<pos:position pos:line="1018" pos:column="52"/></modifier></type><name pos:line="1018" pos:column="52">p_bestq<pos:position pos:line="1018" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1018" pos:column="60"/></parameter_list>
<block pos:line="1019" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1020" pos:column="5">float<pos:position pos:line="1020" pos:column="10"/></name></type> <name pos:line="1020" pos:column="11">bestq<pos:position pos:line="1020" pos:column="16"/></name> <init pos:line="1020" pos:column="17">= <expr><operator pos:line="1020" pos:column="19">*<pos:position pos:line="1020" pos:column="20"/></operator><name pos:line="1020" pos:column="20">p_bestq<pos:position pos:line="1020" pos:column="27"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="1020" pos:column="29">q<pos:position pos:line="1020" pos:column="30"/></name></decl>;<pos:position pos:line="1020" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1021" pos:column="5">int<pos:position pos:line="1021" pos:column="8"/></name></type> <name pos:line="1021" pos:column="9">levcmp<pos:position pos:line="1021" pos:column="15"/></name></decl>;<pos:position pos:line="1021" pos:column="16"/></decl_stmt>

    <comment type="block" pos:line="1023" pos:column="5">/* For non-transparent negotiation, server can choose how
     * to handle the negotiation. We'll use the following in
     * order: content-type, language, content-type level, charset,
     * content encoding, content length.
     *
     * For each check, we have three possible outcomes:
     *   This variant is worse than current best: return 0
     *   This variant is better than the current best:
     *          assign this variant's q to *p_bestq, and return 1
     *   This variant is just as desirable as the current best:
     *          drop through to the next test.
     *
     * This code is written in this long-winded way to allow future
     * customisation, either by the addition of additional
     * checks, or to allow the order of the checks to be determined
     * by configuration options (e.g. we might prefer to check
     * language quality _before_ content type).
     */</comment>

    <comment type="block" pos:line="1042" pos:column="5">/* First though, eliminate this variant if it is not
     * acceptable by type, charset, encoding or language.
     */</comment>

<cpp:ifdef pos:line="1046" pos:column="1">#<cpp:directive pos:line="1046" pos:column="2">ifdef<pos:position pos:line="1046" pos:column="7"/></cpp:directive> <name pos:line="1046" pos:column="8">NEG_DEBUG<pos:position pos:line="1046" pos:column="17"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="1047" pos:column="5">ap_log_error<pos:position pos:line="1047" pos:column="17"/></name><argument_list pos:line="1047" pos:column="17">(<argument><expr><name pos:line="1047" pos:column="18">APLOG_MARK<pos:position pos:line="1047" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1047" pos:column="30">APLOG_STARTUP<pos:position pos:line="1047" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1047" pos:column="45">0<pos:position pos:line="1047" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="1047" pos:column="48">NULL<pos:position pos:line="1047" pos:column="52"/></name></expr></argument>,
           <argument><expr><literal type="string" pos:line="1048" pos:column="12">"Variant: file=%s type=%s lang=%s sourceq=%1.3f "<pos:position pos:line="1048" pos:column="61"/></literal>
           <literal type="string" pos:line="1049" pos:column="12">"mimeq=%1.3f langq=%1.3f langidx=%d charq=%1.3f encq=%1.3f "<pos:position pos:line="1049" pos:column="72"/></literal></expr></argument>,
            <argument><expr><operator pos:line="1050" pos:column="13">(<pos:position pos:line="1050" pos:column="14"/></operator><ternary><condition><expr><name><name pos:line="1050" pos:column="14">variant<pos:position pos:line="1050" pos:column="21"/></name><operator pos:line="1050" pos:column="21">-&gt;<pos:position pos:line="1050" pos:column="26"/></operator><name pos:line="1050" pos:column="23">file_name<pos:position pos:line="1050" pos:column="32"/></name></name></expr> ?<pos:position pos:line="1050" pos:column="34"/></condition><then pos:line="1050" pos:column="34"> <expr><name><name pos:line="1050" pos:column="35">variant<pos:position pos:line="1050" pos:column="42"/></name><operator pos:line="1050" pos:column="42">-&gt;<pos:position pos:line="1050" pos:column="47"/></operator><name pos:line="1050" pos:column="44">file_name<pos:position pos:line="1050" pos:column="53"/></name></name></expr> <pos:position pos:line="1050" pos:column="54"/></then><else pos:line="1050" pos:column="54">: <expr><literal type="string" pos:line="1050" pos:column="56">""<pos:position pos:line="1050" pos:column="58"/></literal></expr></else></ternary><operator pos:line="1050" pos:column="58">)<pos:position pos:line="1050" pos:column="59"/></operator></expr></argument>,
            <argument><expr><operator pos:line="1051" pos:column="13">(<pos:position pos:line="1051" pos:column="14"/></operator><ternary><condition><expr><name><name pos:line="1051" pos:column="14">variant<pos:position pos:line="1051" pos:column="21"/></name><operator pos:line="1051" pos:column="21">-&gt;<pos:position pos:line="1051" pos:column="26"/></operator><name pos:line="1051" pos:column="23">mime_type<pos:position pos:line="1051" pos:column="32"/></name></name></expr> ?<pos:position pos:line="1051" pos:column="34"/></condition><then pos:line="1051" pos:column="34"> <expr><name><name pos:line="1051" pos:column="35">variant<pos:position pos:line="1051" pos:column="42"/></name><operator pos:line="1051" pos:column="42">-&gt;<pos:position pos:line="1051" pos:column="47"/></operator><name pos:line="1051" pos:column="44">mime_type<pos:position pos:line="1051" pos:column="53"/></name></name></expr> <pos:position pos:line="1051" pos:column="54"/></then><else pos:line="1051" pos:column="54">: <expr><literal type="string" pos:line="1051" pos:column="56">""<pos:position pos:line="1051" pos:column="58"/></literal></expr></else></ternary><operator pos:line="1051" pos:column="58">)<pos:position pos:line="1051" pos:column="59"/></operator></expr></argument>,
            <argument><expr><operator pos:line="1052" pos:column="13">(<pos:position pos:line="1052" pos:column="14"/></operator><ternary><condition><expr><name><name pos:line="1052" pos:column="14">variant<pos:position pos:line="1052" pos:column="21"/></name><operator pos:line="1052" pos:column="21">-&gt;<pos:position pos:line="1052" pos:column="26"/></operator><name pos:line="1052" pos:column="23">content_languages<pos:position pos:line="1052" pos:column="40"/></name></name></expr>
             ?<pos:position pos:line="1053" pos:column="15"/></condition><then pos:line="1053" pos:column="15"> <expr><call><name pos:line="1053" pos:column="16">apr_array_pstrcat<pos:position pos:line="1053" pos:column="33"/></name><argument_list pos:line="1053" pos:column="33">(<argument><expr><name><name pos:line="1053" pos:column="34">neg<pos:position pos:line="1053" pos:column="37"/></name><operator pos:line="1053" pos:column="37">-&gt;<pos:position pos:line="1053" pos:column="42"/></operator><name pos:line="1053" pos:column="39">pool<pos:position pos:line="1053" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1053" pos:column="45">variant<pos:position pos:line="1053" pos:column="52"/></name><operator pos:line="1053" pos:column="52">-&gt;<pos:position pos:line="1053" pos:column="57"/></operator><name pos:line="1053" pos:column="54">content_languages<pos:position pos:line="1053" pos:column="71"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="1053" pos:column="73">','<pos:position pos:line="1053" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="1053" pos:column="77"/></argument_list></call></expr>
             <pos:position pos:line="1054" pos:column="14"/></then><else pos:line="1054" pos:column="14">: <expr><literal type="string" pos:line="1054" pos:column="16">""<pos:position pos:line="1054" pos:column="18"/></literal></expr></else></ternary><operator pos:line="1054" pos:column="18">)<pos:position pos:line="1054" pos:column="19"/></operator></expr></argument>,
            <argument><expr><name><name pos:line="1055" pos:column="13">variant<pos:position pos:line="1055" pos:column="20"/></name><operator pos:line="1055" pos:column="20">-&gt;<pos:position pos:line="1055" pos:column="25"/></operator><name pos:line="1055" pos:column="22">source_quality<pos:position pos:line="1055" pos:column="36"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="1056" pos:column="13">variant<pos:position pos:line="1056" pos:column="20"/></name><operator pos:line="1056" pos:column="20">-&gt;<pos:position pos:line="1056" pos:column="25"/></operator><name pos:line="1056" pos:column="22">mime_type_quality<pos:position pos:line="1056" pos:column="39"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="1057" pos:column="13">variant<pos:position pos:line="1057" pos:column="20"/></name><operator pos:line="1057" pos:column="20">-&gt;<pos:position pos:line="1057" pos:column="25"/></operator><name pos:line="1057" pos:column="22">lang_quality<pos:position pos:line="1057" pos:column="34"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="1058" pos:column="13">variant<pos:position pos:line="1058" pos:column="20"/></name><operator pos:line="1058" pos:column="20">-&gt;<pos:position pos:line="1058" pos:column="25"/></operator><name pos:line="1058" pos:column="22">lang_index<pos:position pos:line="1058" pos:column="32"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="1059" pos:column="13">variant<pos:position pos:line="1059" pos:column="20"/></name><operator pos:line="1059" pos:column="20">-&gt;<pos:position pos:line="1059" pos:column="25"/></operator><name pos:line="1059" pos:column="22">charset_quality<pos:position pos:line="1059" pos:column="37"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="1060" pos:column="13">variant<pos:position pos:line="1060" pos:column="20"/></name><operator pos:line="1060" pos:column="20">-&gt;<pos:position pos:line="1060" pos:column="25"/></operator><name pos:line="1060" pos:column="22">encoding_quality<pos:position pos:line="1060" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="1060" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1060" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="1061" pos:column="1">#<cpp:directive pos:line="1061" pos:column="2">endif<pos:position pos:line="1061" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="1063" pos:column="5">if <condition pos:line="1063" pos:column="8">(<expr><name><name pos:line="1063" pos:column="9">variant<pos:position pos:line="1063" pos:column="16"/></name><operator pos:line="1063" pos:column="16">-&gt;<pos:position pos:line="1063" pos:column="21"/></operator><name pos:line="1063" pos:column="18">encoding_quality<pos:position pos:line="1063" pos:column="34"/></name></name> <operator pos:line="1063" pos:column="35">==<pos:position pos:line="1063" pos:column="37"/></operator> <literal type="number" pos:line="1063" pos:column="38">0.0f<pos:position pos:line="1063" pos:column="42"/></literal> <operator pos:line="1063" pos:column="43">||<pos:position pos:line="1063" pos:column="45"/></operator>
        <name><name pos:line="1064" pos:column="9">variant<pos:position pos:line="1064" pos:column="16"/></name><operator pos:line="1064" pos:column="16">-&gt;<pos:position pos:line="1064" pos:column="21"/></operator><name pos:line="1064" pos:column="18">lang_quality<pos:position pos:line="1064" pos:column="30"/></name></name> <operator pos:line="1064" pos:column="31">==<pos:position pos:line="1064" pos:column="33"/></operator> <literal type="number" pos:line="1064" pos:column="34">0.0f<pos:position pos:line="1064" pos:column="38"/></literal> <operator pos:line="1064" pos:column="39">||<pos:position pos:line="1064" pos:column="41"/></operator>
        <name><name pos:line="1065" pos:column="9">variant<pos:position pos:line="1065" pos:column="16"/></name><operator pos:line="1065" pos:column="16">-&gt;<pos:position pos:line="1065" pos:column="21"/></operator><name pos:line="1065" pos:column="18">source_quality<pos:position pos:line="1065" pos:column="32"/></name></name> <operator pos:line="1065" pos:column="33">==<pos:position pos:line="1065" pos:column="35"/></operator> <literal type="number" pos:line="1065" pos:column="36">0.0f<pos:position pos:line="1065" pos:column="40"/></literal> <operator pos:line="1065" pos:column="41">||<pos:position pos:line="1065" pos:column="43"/></operator>
        <name><name pos:line="1066" pos:column="9">variant<pos:position pos:line="1066" pos:column="16"/></name><operator pos:line="1066" pos:column="16">-&gt;<pos:position pos:line="1066" pos:column="21"/></operator><name pos:line="1066" pos:column="18">charset_quality<pos:position pos:line="1066" pos:column="33"/></name></name> <operator pos:line="1066" pos:column="34">==<pos:position pos:line="1066" pos:column="36"/></operator> <literal type="number" pos:line="1066" pos:column="37">0.0f<pos:position pos:line="1066" pos:column="41"/></literal> <operator pos:line="1066" pos:column="42">||<pos:position pos:line="1066" pos:column="44"/></operator>
        <name><name pos:line="1067" pos:column="9">variant<pos:position pos:line="1067" pos:column="16"/></name><operator pos:line="1067" pos:column="16">-&gt;<pos:position pos:line="1067" pos:column="21"/></operator><name pos:line="1067" pos:column="18">mime_type_quality<pos:position pos:line="1067" pos:column="35"/></name></name> <operator pos:line="1067" pos:column="36">==<pos:position pos:line="1067" pos:column="38"/></operator> <literal type="number" pos:line="1067" pos:column="39">0.0f<pos:position pos:line="1067" pos:column="43"/></literal></expr>)<pos:position pos:line="1067" pos:column="44"/></condition><then pos:line="1067" pos:column="44"> <block pos:line="1067" pos:column="45">{
        <return pos:line="1068" pos:column="9">return <expr><literal type="number" pos:line="1068" pos:column="16">0<pos:position pos:line="1068" pos:column="17"/></literal></expr>;<pos:position pos:line="1068" pos:column="18"/></return>               <comment type="block" pos:line="1068" pos:column="33">/* don't consider unacceptables */</comment>
    }<pos:position pos:line="1069" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="1071" pos:column="5">q<pos:position pos:line="1071" pos:column="6"/></name> <operator pos:line="1071" pos:column="7">=<pos:position pos:line="1071" pos:column="8"/></operator> <name><name pos:line="1071" pos:column="9">variant<pos:position pos:line="1071" pos:column="16"/></name><operator pos:line="1071" pos:column="16">-&gt;<pos:position pos:line="1071" pos:column="21"/></operator><name pos:line="1071" pos:column="18">mime_type_quality<pos:position pos:line="1071" pos:column="35"/></name></name> <operator pos:line="1071" pos:column="36">*<pos:position pos:line="1071" pos:column="37"/></operator> <name><name pos:line="1071" pos:column="38">variant<pos:position pos:line="1071" pos:column="45"/></name><operator pos:line="1071" pos:column="45">-&gt;<pos:position pos:line="1071" pos:column="50"/></operator><name pos:line="1071" pos:column="47">source_quality<pos:position pos:line="1071" pos:column="61"/></name></name></expr>;<pos:position pos:line="1071" pos:column="62"/></expr_stmt>
    <if pos:line="1072" pos:column="5">if <condition pos:line="1072" pos:column="8">(<expr><name pos:line="1072" pos:column="9">q<pos:position pos:line="1072" pos:column="10"/></name> <operator pos:line="1072" pos:column="11">==<pos:position pos:line="1072" pos:column="13"/></operator> <literal type="number" pos:line="1072" pos:column="14">0.0<pos:position pos:line="1072" pos:column="17"/></literal> <operator pos:line="1072" pos:column="18">||<pos:position pos:line="1072" pos:column="20"/></operator> <name pos:line="1072" pos:column="21">q<pos:position pos:line="1072" pos:column="22"/></name> <operator pos:line="1072" pos:column="23">&lt;<pos:position pos:line="1072" pos:column="27"/></operator> <name pos:line="1072" pos:column="25">bestq<pos:position pos:line="1072" pos:column="30"/></name></expr>)<pos:position pos:line="1072" pos:column="31"/></condition><then pos:line="1072" pos:column="31"> <block pos:line="1072" pos:column="32">{
        <return pos:line="1073" pos:column="9">return <expr><literal type="number" pos:line="1073" pos:column="16">0<pos:position pos:line="1073" pos:column="17"/></literal></expr>;<pos:position pos:line="1073" pos:column="18"/></return>
    }<pos:position pos:line="1074" pos:column="6"/></block></then></if>
    <if pos:line="1075" pos:column="5">if <condition pos:line="1075" pos:column="8">(<expr><name pos:line="1075" pos:column="9">q<pos:position pos:line="1075" pos:column="10"/></name> <operator pos:line="1075" pos:column="11">&gt;<pos:position pos:line="1075" pos:column="15"/></operator> <name pos:line="1075" pos:column="13">bestq<pos:position pos:line="1075" pos:column="18"/></name> <operator pos:line="1075" pos:column="19">||<pos:position pos:line="1075" pos:column="21"/></operator> <operator pos:line="1075" pos:column="22">!<pos:position pos:line="1075" pos:column="23"/></operator><name pos:line="1075" pos:column="23">best<pos:position pos:line="1075" pos:column="27"/></name></expr>)<pos:position pos:line="1075" pos:column="28"/></condition><then pos:line="1075" pos:column="28"> <block pos:line="1075" pos:column="29">{
        <expr_stmt><expr><operator pos:line="1076" pos:column="9">*<pos:position pos:line="1076" pos:column="10"/></operator><name pos:line="1076" pos:column="10">p_bestq<pos:position pos:line="1076" pos:column="17"/></name> <operator pos:line="1076" pos:column="18">=<pos:position pos:line="1076" pos:column="19"/></operator> <name pos:line="1076" pos:column="20">q<pos:position pos:line="1076" pos:column="21"/></name></expr>;<pos:position pos:line="1076" pos:column="22"/></expr_stmt>
        <return pos:line="1077" pos:column="9">return <expr><literal type="number" pos:line="1077" pos:column="16">1<pos:position pos:line="1077" pos:column="17"/></literal></expr>;<pos:position pos:line="1077" pos:column="18"/></return>
    }<pos:position pos:line="1078" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1080" pos:column="5">/* language */</comment>
    <if pos:line="1081" pos:column="5">if <condition pos:line="1081" pos:column="8">(<expr><name><name pos:line="1081" pos:column="9">variant<pos:position pos:line="1081" pos:column="16"/></name><operator pos:line="1081" pos:column="16">-&gt;<pos:position pos:line="1081" pos:column="21"/></operator><name pos:line="1081" pos:column="18">lang_quality<pos:position pos:line="1081" pos:column="30"/></name></name> <operator pos:line="1081" pos:column="31">&lt;<pos:position pos:line="1081" pos:column="35"/></operator> <name><name pos:line="1081" pos:column="33">best<pos:position pos:line="1081" pos:column="37"/></name><operator pos:line="1081" pos:column="37">-&gt;<pos:position pos:line="1081" pos:column="42"/></operator><name pos:line="1081" pos:column="39">lang_quality<pos:position pos:line="1081" pos:column="51"/></name></name></expr>)<pos:position pos:line="1081" pos:column="52"/></condition><then pos:line="1081" pos:column="52"> <block pos:line="1081" pos:column="53">{
        <return pos:line="1082" pos:column="9">return <expr><literal type="number" pos:line="1082" pos:column="16">0<pos:position pos:line="1082" pos:column="17"/></literal></expr>;<pos:position pos:line="1082" pos:column="18"/></return>
    }<pos:position pos:line="1083" pos:column="6"/></block></then></if>
    <if pos:line="1084" pos:column="5">if <condition pos:line="1084" pos:column="8">(<expr><name><name pos:line="1084" pos:column="9">variant<pos:position pos:line="1084" pos:column="16"/></name><operator pos:line="1084" pos:column="16">-&gt;<pos:position pos:line="1084" pos:column="21"/></operator><name pos:line="1084" pos:column="18">lang_quality<pos:position pos:line="1084" pos:column="30"/></name></name> <operator pos:line="1084" pos:column="31">&gt;<pos:position pos:line="1084" pos:column="35"/></operator> <name><name pos:line="1084" pos:column="33">best<pos:position pos:line="1084" pos:column="37"/></name><operator pos:line="1084" pos:column="37">-&gt;<pos:position pos:line="1084" pos:column="42"/></operator><name pos:line="1084" pos:column="39">lang_quality<pos:position pos:line="1084" pos:column="51"/></name></name></expr>)<pos:position pos:line="1084" pos:column="52"/></condition><then pos:line="1084" pos:column="52"> <block pos:line="1084" pos:column="53">{
        <expr_stmt><expr><operator pos:line="1085" pos:column="9">*<pos:position pos:line="1085" pos:column="10"/></operator><name pos:line="1085" pos:column="10">p_bestq<pos:position pos:line="1085" pos:column="17"/></name> <operator pos:line="1085" pos:column="18">=<pos:position pos:line="1085" pos:column="19"/></operator> <name pos:line="1085" pos:column="20">q<pos:position pos:line="1085" pos:column="21"/></name></expr>;<pos:position pos:line="1085" pos:column="22"/></expr_stmt>
        <return pos:line="1086" pos:column="9">return <expr><literal type="number" pos:line="1086" pos:column="16">1<pos:position pos:line="1086" pos:column="17"/></literal></expr>;<pos:position pos:line="1086" pos:column="18"/></return>
    }<pos:position pos:line="1087" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1089" pos:column="5">/* if language qualities were equal, try the LanguagePriority stuff */</comment>
    <if pos:line="1090" pos:column="5">if <condition pos:line="1090" pos:column="8">(<expr><name><name pos:line="1090" pos:column="9">best<pos:position pos:line="1090" pos:column="13"/></name><operator pos:line="1090" pos:column="13">-&gt;<pos:position pos:line="1090" pos:column="18"/></operator><name pos:line="1090" pos:column="15">lang_index<pos:position pos:line="1090" pos:column="25"/></name></name> <operator pos:line="1090" pos:column="26">!=<pos:position pos:line="1090" pos:column="28"/></operator> <operator pos:line="1090" pos:column="29">-<pos:position pos:line="1090" pos:column="30"/></operator><literal type="number" pos:line="1090" pos:column="30">1<pos:position pos:line="1090" pos:column="31"/></literal> <operator pos:line="1090" pos:column="32">&amp;&amp;<pos:position pos:line="1090" pos:column="42"/></operator>
        <operator pos:line="1091" pos:column="9">(<pos:position pos:line="1091" pos:column="10"/></operator><name><name pos:line="1091" pos:column="10">variant<pos:position pos:line="1091" pos:column="17"/></name><operator pos:line="1091" pos:column="17">-&gt;<pos:position pos:line="1091" pos:column="22"/></operator><name pos:line="1091" pos:column="19">lang_index<pos:position pos:line="1091" pos:column="29"/></name></name> <operator pos:line="1091" pos:column="30">==<pos:position pos:line="1091" pos:column="32"/></operator> <operator pos:line="1091" pos:column="33">-<pos:position pos:line="1091" pos:column="34"/></operator><literal type="number" pos:line="1091" pos:column="34">1<pos:position pos:line="1091" pos:column="35"/></literal> <operator pos:line="1091" pos:column="36">||<pos:position pos:line="1091" pos:column="38"/></operator> <name><name pos:line="1091" pos:column="39">variant<pos:position pos:line="1091" pos:column="46"/></name><operator pos:line="1091" pos:column="46">-&gt;<pos:position pos:line="1091" pos:column="51"/></operator><name pos:line="1091" pos:column="48">lang_index<pos:position pos:line="1091" pos:column="58"/></name></name> <operator pos:line="1091" pos:column="59">&gt;<pos:position pos:line="1091" pos:column="63"/></operator> <name><name pos:line="1091" pos:column="61">best<pos:position pos:line="1091" pos:column="65"/></name><operator pos:line="1091" pos:column="65">-&gt;<pos:position pos:line="1091" pos:column="70"/></operator><name pos:line="1091" pos:column="67">lang_index<pos:position pos:line="1091" pos:column="77"/></name></name><operator pos:line="1091" pos:column="77">)<pos:position pos:line="1091" pos:column="78"/></operator></expr>)<pos:position pos:line="1091" pos:column="79"/></condition><then pos:line="1091" pos:column="79"> <block pos:line="1091" pos:column="80">{
        <return pos:line="1092" pos:column="9">return <expr><literal type="number" pos:line="1092" pos:column="16">0<pos:position pos:line="1092" pos:column="17"/></literal></expr>;<pos:position pos:line="1092" pos:column="18"/></return>
    }<pos:position pos:line="1093" pos:column="6"/></block></then></if>
    <if pos:line="1094" pos:column="5">if <condition pos:line="1094" pos:column="8">(<expr><name><name pos:line="1094" pos:column="9">variant<pos:position pos:line="1094" pos:column="16"/></name><operator pos:line="1094" pos:column="16">-&gt;<pos:position pos:line="1094" pos:column="21"/></operator><name pos:line="1094" pos:column="18">lang_index<pos:position pos:line="1094" pos:column="28"/></name></name> <operator pos:line="1094" pos:column="29">!=<pos:position pos:line="1094" pos:column="31"/></operator> <operator pos:line="1094" pos:column="32">-<pos:position pos:line="1094" pos:column="33"/></operator><literal type="number" pos:line="1094" pos:column="33">1<pos:position pos:line="1094" pos:column="34"/></literal> <operator pos:line="1094" pos:column="35">&amp;&amp;<pos:position pos:line="1094" pos:column="45"/></operator>
        <operator pos:line="1095" pos:column="9">(<pos:position pos:line="1095" pos:column="10"/></operator><name><name pos:line="1095" pos:column="10">best<pos:position pos:line="1095" pos:column="14"/></name><operator pos:line="1095" pos:column="14">-&gt;<pos:position pos:line="1095" pos:column="19"/></operator><name pos:line="1095" pos:column="16">lang_index<pos:position pos:line="1095" pos:column="26"/></name></name> <operator pos:line="1095" pos:column="27">==<pos:position pos:line="1095" pos:column="29"/></operator> <operator pos:line="1095" pos:column="30">-<pos:position pos:line="1095" pos:column="31"/></operator><literal type="number" pos:line="1095" pos:column="31">1<pos:position pos:line="1095" pos:column="32"/></literal> <operator pos:line="1095" pos:column="33">||<pos:position pos:line="1095" pos:column="35"/></operator> <name><name pos:line="1095" pos:column="36">variant<pos:position pos:line="1095" pos:column="43"/></name><operator pos:line="1095" pos:column="43">-&gt;<pos:position pos:line="1095" pos:column="48"/></operator><name pos:line="1095" pos:column="45">lang_index<pos:position pos:line="1095" pos:column="55"/></name></name> <operator pos:line="1095" pos:column="56">&lt;<pos:position pos:line="1095" pos:column="60"/></operator> <name><name pos:line="1095" pos:column="58">best<pos:position pos:line="1095" pos:column="62"/></name><operator pos:line="1095" pos:column="62">-&gt;<pos:position pos:line="1095" pos:column="67"/></operator><name pos:line="1095" pos:column="64">lang_index<pos:position pos:line="1095" pos:column="74"/></name></name><operator pos:line="1095" pos:column="74">)<pos:position pos:line="1095" pos:column="75"/></operator></expr>)<pos:position pos:line="1095" pos:column="76"/></condition><then pos:line="1095" pos:column="76"> <block pos:line="1095" pos:column="77">{
        <expr_stmt><expr><operator pos:line="1096" pos:column="9">*<pos:position pos:line="1096" pos:column="10"/></operator><name pos:line="1096" pos:column="10">p_bestq<pos:position pos:line="1096" pos:column="17"/></name> <operator pos:line="1096" pos:column="18">=<pos:position pos:line="1096" pos:column="19"/></operator> <name pos:line="1096" pos:column="20">q<pos:position pos:line="1096" pos:column="21"/></name></expr>;<pos:position pos:line="1096" pos:column="22"/></expr_stmt>
        <return pos:line="1097" pos:column="9">return <expr><literal type="number" pos:line="1097" pos:column="16">1<pos:position pos:line="1097" pos:column="17"/></literal></expr>;<pos:position pos:line="1097" pos:column="18"/></return>
    }<pos:position pos:line="1098" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1100" pos:column="5">/* content-type level (sometimes used with text/html, though we
     * support it on other types too)
     */</comment>
    <expr_stmt><expr><name pos:line="1103" pos:column="5">levcmp<pos:position pos:line="1103" pos:column="11"/></name> <operator pos:line="1103" pos:column="12">=<pos:position pos:line="1103" pos:column="13"/></operator> <call><name pos:line="1103" pos:column="14">level_cmp<pos:position pos:line="1103" pos:column="23"/></name><argument_list pos:line="1103" pos:column="23">(<argument><expr><name pos:line="1103" pos:column="24">variant<pos:position pos:line="1103" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1103" pos:column="33">best<pos:position pos:line="1103" pos:column="37"/></name></expr></argument>)<pos:position pos:line="1103" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="1103" pos:column="39"/></expr_stmt>
    <if pos:line="1104" pos:column="5">if <condition pos:line="1104" pos:column="8">(<expr><name pos:line="1104" pos:column="9">levcmp<pos:position pos:line="1104" pos:column="15"/></name> <operator pos:line="1104" pos:column="16">==<pos:position pos:line="1104" pos:column="18"/></operator> <operator pos:line="1104" pos:column="19">-<pos:position pos:line="1104" pos:column="20"/></operator><literal type="number" pos:line="1104" pos:column="20">1<pos:position pos:line="1104" pos:column="21"/></literal></expr>)<pos:position pos:line="1104" pos:column="22"/></condition><then pos:line="1104" pos:column="22"> <block pos:line="1104" pos:column="23">{
        <return pos:line="1105" pos:column="9">return <expr><literal type="number" pos:line="1105" pos:column="16">0<pos:position pos:line="1105" pos:column="17"/></literal></expr>;<pos:position pos:line="1105" pos:column="18"/></return>
    }<pos:position pos:line="1106" pos:column="6"/></block></then></if>
    <if pos:line="1107" pos:column="5">if <condition pos:line="1107" pos:column="8">(<expr><name pos:line="1107" pos:column="9">levcmp<pos:position pos:line="1107" pos:column="15"/></name> <operator pos:line="1107" pos:column="16">==<pos:position pos:line="1107" pos:column="18"/></operator> <literal type="number" pos:line="1107" pos:column="19">1<pos:position pos:line="1107" pos:column="20"/></literal></expr>)<pos:position pos:line="1107" pos:column="21"/></condition><then pos:line="1107" pos:column="21"> <block pos:line="1107" pos:column="22">{
        <expr_stmt><expr><operator pos:line="1108" pos:column="9">*<pos:position pos:line="1108" pos:column="10"/></operator><name pos:line="1108" pos:column="10">p_bestq<pos:position pos:line="1108" pos:column="17"/></name> <operator pos:line="1108" pos:column="18">=<pos:position pos:line="1108" pos:column="19"/></operator> <name pos:line="1108" pos:column="20">q<pos:position pos:line="1108" pos:column="21"/></name></expr>;<pos:position pos:line="1108" pos:column="22"/></expr_stmt>
        <return pos:line="1109" pos:column="9">return <expr><literal type="number" pos:line="1109" pos:column="16">1<pos:position pos:line="1109" pos:column="17"/></literal></expr>;<pos:position pos:line="1109" pos:column="18"/></return>
    }<pos:position pos:line="1110" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1112" pos:column="5">/* charset */</comment>
    <if pos:line="1113" pos:column="5">if <condition pos:line="1113" pos:column="8">(<expr><name><name pos:line="1113" pos:column="9">variant<pos:position pos:line="1113" pos:column="16"/></name><operator pos:line="1113" pos:column="16">-&gt;<pos:position pos:line="1113" pos:column="21"/></operator><name pos:line="1113" pos:column="18">charset_quality<pos:position pos:line="1113" pos:column="33"/></name></name> <operator pos:line="1113" pos:column="34">&lt;<pos:position pos:line="1113" pos:column="38"/></operator> <name><name pos:line="1113" pos:column="36">best<pos:position pos:line="1113" pos:column="40"/></name><operator pos:line="1113" pos:column="40">-&gt;<pos:position pos:line="1113" pos:column="45"/></operator><name pos:line="1113" pos:column="42">charset_quality<pos:position pos:line="1113" pos:column="57"/></name></name></expr>)<pos:position pos:line="1113" pos:column="58"/></condition><then pos:line="1113" pos:column="58"> <block pos:line="1113" pos:column="59">{
        <return pos:line="1114" pos:column="9">return <expr><literal type="number" pos:line="1114" pos:column="16">0<pos:position pos:line="1114" pos:column="17"/></literal></expr>;<pos:position pos:line="1114" pos:column="18"/></return>
    }<pos:position pos:line="1115" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="1116" pos:column="5">/* If the best variant's charset is ISO-8859-1 and this variant has
     * the same charset quality, then we prefer this variant
     */</comment>

    <if pos:line="1120" pos:column="5">if <condition pos:line="1120" pos:column="8">(<expr><name><name pos:line="1120" pos:column="9">variant<pos:position pos:line="1120" pos:column="16"/></name><operator pos:line="1120" pos:column="16">-&gt;<pos:position pos:line="1120" pos:column="21"/></operator><name pos:line="1120" pos:column="18">charset_quality<pos:position pos:line="1120" pos:column="33"/></name></name> <operator pos:line="1120" pos:column="34">&gt;<pos:position pos:line="1120" pos:column="38"/></operator> <name><name pos:line="1120" pos:column="36">best<pos:position pos:line="1120" pos:column="40"/></name><operator pos:line="1120" pos:column="40">-&gt;<pos:position pos:line="1120" pos:column="45"/></operator><name pos:line="1120" pos:column="42">charset_quality<pos:position pos:line="1120" pos:column="57"/></name></name> <operator pos:line="1120" pos:column="58">||<pos:position pos:line="1120" pos:column="60"/></operator>
        <operator pos:line="1121" pos:column="9">(<pos:position pos:line="1121" pos:column="10"/></operator><operator pos:line="1121" pos:column="10">(<pos:position pos:line="1121" pos:column="11"/></operator><name><name pos:line="1121" pos:column="11">variant<pos:position pos:line="1121" pos:column="18"/></name><operator pos:line="1121" pos:column="18">-&gt;<pos:position pos:line="1121" pos:column="23"/></operator><name pos:line="1121" pos:column="20">content_charset<pos:position pos:line="1121" pos:column="35"/></name></name> <operator pos:line="1121" pos:column="36">!=<pos:position pos:line="1121" pos:column="38"/></operator> <name pos:line="1121" pos:column="39">NULL<pos:position pos:line="1121" pos:column="43"/></name> <operator pos:line="1121" pos:column="44">&amp;&amp;<pos:position pos:line="1121" pos:column="54"/></operator>
          <operator pos:line="1122" pos:column="11">*<pos:position pos:line="1122" pos:column="12"/></operator><name><name pos:line="1122" pos:column="12">variant<pos:position pos:line="1122" pos:column="19"/></name><operator pos:line="1122" pos:column="19">-&gt;<pos:position pos:line="1122" pos:column="24"/></operator><name pos:line="1122" pos:column="21">content_charset<pos:position pos:line="1122" pos:column="36"/></name></name> <operator pos:line="1122" pos:column="37">!=<pos:position pos:line="1122" pos:column="39"/></operator> <literal type="char" pos:line="1122" pos:column="40">'\0'<pos:position pos:line="1122" pos:column="44"/></literal> <operator pos:line="1122" pos:column="45">&amp;&amp;<pos:position pos:line="1122" pos:column="55"/></operator>
          <call><name pos:line="1123" pos:column="11">strcmp<pos:position pos:line="1123" pos:column="17"/></name><argument_list pos:line="1123" pos:column="17">(<argument><expr><name><name pos:line="1123" pos:column="18">variant<pos:position pos:line="1123" pos:column="25"/></name><operator pos:line="1123" pos:column="25">-&gt;<pos:position pos:line="1123" pos:column="30"/></operator><name pos:line="1123" pos:column="27">content_charset<pos:position pos:line="1123" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1123" pos:column="44">"iso-8859-1"<pos:position pos:line="1123" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="1123" pos:column="57"/></argument_list></call> <operator pos:line="1123" pos:column="58">!=<pos:position pos:line="1123" pos:column="60"/></operator> <literal type="number" pos:line="1123" pos:column="61">0<pos:position pos:line="1123" pos:column="62"/></literal><operator pos:line="1123" pos:column="62">)<pos:position pos:line="1123" pos:column="63"/></operator> <operator pos:line="1123" pos:column="64">&amp;&amp;<pos:position pos:line="1123" pos:column="74"/></operator>
         <operator pos:line="1124" pos:column="10">(<pos:position pos:line="1124" pos:column="11"/></operator><name><name pos:line="1124" pos:column="11">best<pos:position pos:line="1124" pos:column="15"/></name><operator pos:line="1124" pos:column="15">-&gt;<pos:position pos:line="1124" pos:column="20"/></operator><name pos:line="1124" pos:column="17">content_charset<pos:position pos:line="1124" pos:column="32"/></name></name> <operator pos:line="1124" pos:column="33">==<pos:position pos:line="1124" pos:column="35"/></operator> <name pos:line="1124" pos:column="36">NULL<pos:position pos:line="1124" pos:column="40"/></name> <operator pos:line="1124" pos:column="41">||<pos:position pos:line="1124" pos:column="43"/></operator>
          <operator pos:line="1125" pos:column="11">*<pos:position pos:line="1125" pos:column="12"/></operator><name><name pos:line="1125" pos:column="12">best<pos:position pos:line="1125" pos:column="16"/></name><operator pos:line="1125" pos:column="16">-&gt;<pos:position pos:line="1125" pos:column="21"/></operator><name pos:line="1125" pos:column="18">content_charset<pos:position pos:line="1125" pos:column="33"/></name></name> <operator pos:line="1125" pos:column="34">==<pos:position pos:line="1125" pos:column="36"/></operator> <literal type="char" pos:line="1125" pos:column="37">'\0'<pos:position pos:line="1125" pos:column="41"/></literal> <operator pos:line="1125" pos:column="42">||<pos:position pos:line="1125" pos:column="44"/></operator>
          <call><name pos:line="1126" pos:column="11">strcmp<pos:position pos:line="1126" pos:column="17"/></name><argument_list pos:line="1126" pos:column="17">(<argument><expr><name><name pos:line="1126" pos:column="18">best<pos:position pos:line="1126" pos:column="22"/></name><operator pos:line="1126" pos:column="22">-&gt;<pos:position pos:line="1126" pos:column="27"/></operator><name pos:line="1126" pos:column="24">content_charset<pos:position pos:line="1126" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1126" pos:column="41">"iso-8859-1"<pos:position pos:line="1126" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="1126" pos:column="54"/></argument_list></call> <operator pos:line="1126" pos:column="55">==<pos:position pos:line="1126" pos:column="57"/></operator> <literal type="number" pos:line="1126" pos:column="58">0<pos:position pos:line="1126" pos:column="59"/></literal><operator pos:line="1126" pos:column="59">)<pos:position pos:line="1126" pos:column="60"/></operator><operator pos:line="1126" pos:column="60">)<pos:position pos:line="1126" pos:column="61"/></operator></expr>)<pos:position pos:line="1126" pos:column="62"/></condition><then pos:line="1126" pos:column="62"> <block pos:line="1126" pos:column="63">{
        <expr_stmt><expr><operator pos:line="1127" pos:column="9">*<pos:position pos:line="1127" pos:column="10"/></operator><name pos:line="1127" pos:column="10">p_bestq<pos:position pos:line="1127" pos:column="17"/></name> <operator pos:line="1127" pos:column="18">=<pos:position pos:line="1127" pos:column="19"/></operator> <name pos:line="1127" pos:column="20">q<pos:position pos:line="1127" pos:column="21"/></name></expr>;<pos:position pos:line="1127" pos:column="22"/></expr_stmt>
        <return pos:line="1128" pos:column="9">return <expr><literal type="number" pos:line="1128" pos:column="16">1<pos:position pos:line="1128" pos:column="17"/></literal></expr>;<pos:position pos:line="1128" pos:column="18"/></return>
    }<pos:position pos:line="1129" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1131" pos:column="5">/* Prefer the highest value for encoding_quality.
     */</comment>
    <if pos:line="1133" pos:column="5">if <condition pos:line="1133" pos:column="8">(<expr><name><name pos:line="1133" pos:column="9">variant<pos:position pos:line="1133" pos:column="16"/></name><operator pos:line="1133" pos:column="16">-&gt;<pos:position pos:line="1133" pos:column="21"/></operator><name pos:line="1133" pos:column="18">encoding_quality<pos:position pos:line="1133" pos:column="34"/></name></name> <operator pos:line="1133" pos:column="35">&lt;<pos:position pos:line="1133" pos:column="39"/></operator> <name><name pos:line="1133" pos:column="37">best<pos:position pos:line="1133" pos:column="41"/></name><operator pos:line="1133" pos:column="41">-&gt;<pos:position pos:line="1133" pos:column="46"/></operator><name pos:line="1133" pos:column="43">encoding_quality<pos:position pos:line="1133" pos:column="59"/></name></name></expr>)<pos:position pos:line="1133" pos:column="60"/></condition><then pos:line="1133" pos:column="60"> <block pos:line="1133" pos:column="61">{
       <return pos:line="1134" pos:column="8">return <expr><literal type="number" pos:line="1134" pos:column="15">0<pos:position pos:line="1134" pos:column="16"/></literal></expr>;<pos:position pos:line="1134" pos:column="17"/></return>
    }<pos:position pos:line="1135" pos:column="6"/></block></then></if>
    <if pos:line="1136" pos:column="5">if <condition pos:line="1136" pos:column="8">(<expr><name><name pos:line="1136" pos:column="9">variant<pos:position pos:line="1136" pos:column="16"/></name><operator pos:line="1136" pos:column="16">-&gt;<pos:position pos:line="1136" pos:column="21"/></operator><name pos:line="1136" pos:column="18">encoding_quality<pos:position pos:line="1136" pos:column="34"/></name></name> <operator pos:line="1136" pos:column="35">&gt;<pos:position pos:line="1136" pos:column="39"/></operator> <name><name pos:line="1136" pos:column="37">best<pos:position pos:line="1136" pos:column="41"/></name><operator pos:line="1136" pos:column="41">-&gt;<pos:position pos:line="1136" pos:column="46"/></operator><name pos:line="1136" pos:column="43">encoding_quality<pos:position pos:line="1136" pos:column="59"/></name></name></expr>)<pos:position pos:line="1136" pos:column="60"/></condition><then pos:line="1136" pos:column="60"> <block pos:line="1136" pos:column="61">{
       <expr_stmt><expr><operator pos:line="1137" pos:column="8">*<pos:position pos:line="1137" pos:column="9"/></operator><name pos:line="1137" pos:column="9">p_bestq<pos:position pos:line="1137" pos:column="16"/></name> <operator pos:line="1137" pos:column="17">=<pos:position pos:line="1137" pos:column="18"/></operator> <name pos:line="1137" pos:column="19">q<pos:position pos:line="1137" pos:column="20"/></name></expr>;<pos:position pos:line="1137" pos:column="21"/></expr_stmt>
       <return pos:line="1138" pos:column="8">return <expr><literal type="number" pos:line="1138" pos:column="15">1<pos:position pos:line="1138" pos:column="16"/></literal></expr>;<pos:position pos:line="1138" pos:column="17"/></return>
    }<pos:position pos:line="1139" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1141" pos:column="5">/* content length if all else equal */</comment>
    <if pos:line="1142" pos:column="5">if <condition pos:line="1142" pos:column="8">(<expr><call><name pos:line="1142" pos:column="9">find_content_length<pos:position pos:line="1142" pos:column="28"/></name><argument_list pos:line="1142" pos:column="28">(<argument><expr><name pos:line="1142" pos:column="29">neg<pos:position pos:line="1142" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1142" pos:column="34">variant<pos:position pos:line="1142" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1142" pos:column="42"/></argument_list></call> <operator pos:line="1142" pos:column="43">&gt;=<pos:position pos:line="1142" pos:column="48"/></operator> <call><name pos:line="1142" pos:column="46">find_content_length<pos:position pos:line="1142" pos:column="65"/></name><argument_list pos:line="1142" pos:column="65">(<argument><expr><name pos:line="1142" pos:column="66">neg<pos:position pos:line="1142" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="1142" pos:column="71">best<pos:position pos:line="1142" pos:column="75"/></name></expr></argument>)<pos:position pos:line="1142" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="1142" pos:column="77"/></condition><then pos:line="1142" pos:column="77"> <block pos:line="1142" pos:column="78">{
        <return pos:line="1143" pos:column="9">return <expr><literal type="number" pos:line="1143" pos:column="16">0<pos:position pos:line="1143" pos:column="17"/></literal></expr>;<pos:position pos:line="1143" pos:column="18"/></return>
    }<pos:position pos:line="1144" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1146" pos:column="5">/* ok, to get here means every thing turned out equal, except
     * we have a shorter content length, so use this variant
     */</comment>
    <expr_stmt><expr><operator pos:line="1149" pos:column="5">*<pos:position pos:line="1149" pos:column="6"/></operator><name pos:line="1149" pos:column="6">p_bestq<pos:position pos:line="1149" pos:column="13"/></name> <operator pos:line="1149" pos:column="14">=<pos:position pos:line="1149" pos:column="15"/></operator> <name pos:line="1149" pos:column="16">q<pos:position pos:line="1149" pos:column="17"/></name></expr>;<pos:position pos:line="1149" pos:column="18"/></expr_stmt>
    <return pos:line="1150" pos:column="5">return <expr><literal type="number" pos:line="1150" pos:column="12">1<pos:position pos:line="1150" pos:column="13"/></literal></expr>;<pos:position pos:line="1150" pos:column="14"/></return>
}<pos:position pos:line="1151" pos:column="2"/></block></function>

<comment type="block" pos:line="1153" pos:column="1">/* figure out, whether a variant is in a specific language
 * it returns also false, if the variant has no language.
 */</comment>
<function><specifier pos:line="1156" pos:column="1">static<pos:position pos:line="1156" pos:column="7"/></specifier> <type><name pos:line="1156" pos:column="8">int<pos:position pos:line="1156" pos:column="11"/></name></type> <name pos:line="1156" pos:column="12">variant_has_language<pos:position pos:line="1156" pos:column="32"/></name><parameter_list pos:line="1156" pos:column="32">(<parameter><decl><type><name pos:line="1156" pos:column="33">var_rec<pos:position pos:line="1156" pos:column="40"/></name> <modifier pos:line="1156" pos:column="41">*<pos:position pos:line="1156" pos:column="42"/></modifier></type><name pos:line="1156" pos:column="42">variant<pos:position pos:line="1156" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1156" pos:column="51">const<pos:position pos:line="1156" pos:column="56"/></specifier> <name pos:line="1156" pos:column="57">char<pos:position pos:line="1156" pos:column="61"/></name> <modifier pos:line="1156" pos:column="62">*<pos:position pos:line="1156" pos:column="63"/></modifier></type><name pos:line="1156" pos:column="63">lang<pos:position pos:line="1156" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1156" pos:column="68"/></parameter_list>
<block pos:line="1157" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1158" pos:column="5">int<pos:position pos:line="1158" pos:column="8"/></name></type> <name pos:line="1158" pos:column="9">j<pos:position pos:line="1158" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="1158" pos:column="12">max<pos:position pos:line="1158" pos:column="15"/></name></decl>;<pos:position pos:line="1158" pos:column="16"/></decl_stmt>

    <comment type="block" pos:line="1160" pos:column="5">/* fast exit */</comment>
    <if pos:line="1161" pos:column="5">if <condition pos:line="1161" pos:column="8">(   <expr><operator pos:line="1161" pos:column="12">!<pos:position pos:line="1161" pos:column="13"/></operator><name pos:line="1161" pos:column="13">lang<pos:position pos:line="1161" pos:column="17"/></name>
        <operator pos:line="1162" pos:column="9">||<pos:position pos:line="1162" pos:column="11"/></operator> <operator pos:line="1162" pos:column="12">!<pos:position pos:line="1162" pos:column="13"/></operator><name><name pos:line="1162" pos:column="13">variant<pos:position pos:line="1162" pos:column="20"/></name><operator pos:line="1162" pos:column="20">-&gt;<pos:position pos:line="1162" pos:column="25"/></operator><name pos:line="1162" pos:column="22">content_languages<pos:position pos:line="1162" pos:column="39"/></name></name>
        <operator pos:line="1163" pos:column="9">||<pos:position pos:line="1163" pos:column="11"/></operator> <operator pos:line="1163" pos:column="12">!<pos:position pos:line="1163" pos:column="13"/></operator><operator pos:line="1163" pos:column="13">(<pos:position pos:line="1163" pos:column="14"/></operator><name pos:line="1163" pos:column="14">max<pos:position pos:line="1163" pos:column="17"/></name> <operator pos:line="1163" pos:column="18">=<pos:position pos:line="1163" pos:column="19"/></operator> <name><name pos:line="1163" pos:column="20">variant<pos:position pos:line="1163" pos:column="27"/></name><operator pos:line="1163" pos:column="27">-&gt;<pos:position pos:line="1163" pos:column="32"/></operator><name pos:line="1163" pos:column="29">content_languages<pos:position pos:line="1163" pos:column="46"/></name><operator pos:line="1163" pos:column="46">-&gt;<pos:position pos:line="1163" pos:column="51"/></operator><name pos:line="1163" pos:column="48">nelts<pos:position pos:line="1163" pos:column="53"/></name></name><operator pos:line="1163" pos:column="53">)<pos:position pos:line="1163" pos:column="54"/></operator></expr>)<pos:position pos:line="1163" pos:column="55"/></condition><then pos:line="1163" pos:column="55"> <block pos:line="1163" pos:column="56">{
        <return pos:line="1164" pos:column="9">return <expr><literal type="number" pos:line="1164" pos:column="16">0<pos:position pos:line="1164" pos:column="17"/></literal></expr>;<pos:position pos:line="1164" pos:column="18"/></return>
    }<pos:position pos:line="1165" pos:column="6"/></block></then></if>

    <for pos:line="1167" pos:column="5">for <control pos:line="1167" pos:column="9">(<init><expr><name pos:line="1167" pos:column="10">j<pos:position pos:line="1167" pos:column="11"/></name> <operator pos:line="1167" pos:column="12">=<pos:position pos:line="1167" pos:column="13"/></operator> <literal type="number" pos:line="1167" pos:column="14">0<pos:position pos:line="1167" pos:column="15"/></literal></expr>;<pos:position pos:line="1167" pos:column="16"/></init> <condition><expr><name pos:line="1167" pos:column="17">j<pos:position pos:line="1167" pos:column="18"/></name> <operator pos:line="1167" pos:column="19">&lt;<pos:position pos:line="1167" pos:column="23"/></operator> <name pos:line="1167" pos:column="21">max<pos:position pos:line="1167" pos:column="24"/></name></expr>;<pos:position pos:line="1167" pos:column="25"/></condition> <incr><expr><operator pos:line="1167" pos:column="26">++<pos:position pos:line="1167" pos:column="28"/></operator><name pos:line="1167" pos:column="28">j<pos:position pos:line="1167" pos:column="29"/></name></expr></incr>)<pos:position pos:line="1167" pos:column="30"/></control> <block pos:line="1167" pos:column="31">{
        <if pos:line="1168" pos:column="9">if <condition pos:line="1168" pos:column="12">(<expr><operator pos:line="1168" pos:column="13">!<pos:position pos:line="1168" pos:column="14"/></operator><call><name pos:line="1168" pos:column="14">strcmp<pos:position pos:line="1168" pos:column="20"/></name><argument_list pos:line="1168" pos:column="20">(<argument><expr><name pos:line="1168" pos:column="21">lang<pos:position pos:line="1168" pos:column="25"/></name></expr></argument>,
                    <argument><expr><operator pos:line="1169" pos:column="21">(<pos:position pos:line="1169" pos:column="22"/></operator><operator pos:line="1169" pos:column="22">(<pos:position pos:line="1169" pos:column="23"/></operator><name pos:line="1169" pos:column="23">char<pos:position pos:line="1169" pos:column="27"/></name> <operator pos:line="1169" pos:column="28">*<pos:position pos:line="1169" pos:column="29"/></operator><operator pos:line="1169" pos:column="29">*<pos:position pos:line="1169" pos:column="30"/></operator><operator pos:line="1169" pos:column="30">)<pos:position pos:line="1169" pos:column="31"/></operator> <operator pos:line="1169" pos:column="32">(<pos:position pos:line="1169" pos:column="33"/></operator><name><name pos:line="1169" pos:column="33">variant<pos:position pos:line="1169" pos:column="40"/></name><operator pos:line="1169" pos:column="40">-&gt;<pos:position pos:line="1169" pos:column="45"/></operator><name pos:line="1169" pos:column="42">content_languages<pos:position pos:line="1169" pos:column="59"/></name><operator pos:line="1169" pos:column="59">-&gt;<pos:position pos:line="1169" pos:column="64"/></operator><name pos:line="1169" pos:column="61">elts<pos:position pos:line="1169" pos:column="65"/></name></name><operator pos:line="1169" pos:column="65">)<pos:position pos:line="1169" pos:column="66"/></operator><operator pos:line="1169" pos:column="66">)<pos:position pos:line="1169" pos:column="67"/></operator><index pos:line="1169" pos:column="67">[<expr><name pos:line="1169" pos:column="68">j<pos:position pos:line="1169" pos:column="69"/></name></expr>]<pos:position pos:line="1169" pos:column="70"/></index></expr></argument>)<pos:position pos:line="1169" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="1169" pos:column="72"/></condition><then pos:line="1169" pos:column="72"> <block pos:line="1169" pos:column="73">{
            <return pos:line="1170" pos:column="13">return <expr><literal type="number" pos:line="1170" pos:column="20">1<pos:position pos:line="1170" pos:column="21"/></literal></expr>;<pos:position pos:line="1170" pos:column="22"/></return>
        }<pos:position pos:line="1171" pos:column="10"/></block></then></if>
    }<pos:position pos:line="1172" pos:column="6"/></block></for>

    <return pos:line="1174" pos:column="5">return <expr><literal type="number" pos:line="1174" pos:column="12">0<pos:position pos:line="1174" pos:column="13"/></literal></expr>;<pos:position pos:line="1174" pos:column="14"/></return>
}<pos:position pos:line="1175" pos:column="2"/></block></function>

<comment type="block" pos:line="1177" pos:column="1">/* check for environment variables 'no-gzip' and
 * 'gzip-only-text/html' to get a behaviour similiar
 * to mod_deflate
 */</comment>
<function><specifier pos:line="1181" pos:column="1">static<pos:position pos:line="1181" pos:column="7"/></specifier> <type><name pos:line="1181" pos:column="8">int<pos:position pos:line="1181" pos:column="11"/></name></type> <name pos:line="1181" pos:column="12">discard_variant_by_env<pos:position pos:line="1181" pos:column="34"/></name><parameter_list pos:line="1181" pos:column="34">(<parameter><decl><type><name pos:line="1181" pos:column="35">var_rec<pos:position pos:line="1181" pos:column="42"/></name> <modifier pos:line="1181" pos:column="43">*<pos:position pos:line="1181" pos:column="44"/></modifier></type><name pos:line="1181" pos:column="44">variant<pos:position pos:line="1181" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1181" pos:column="53">int<pos:position pos:line="1181" pos:column="56"/></name></type> <name pos:line="1181" pos:column="57">discard<pos:position pos:line="1181" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1181" pos:column="65"/></parameter_list>
<block pos:line="1182" pos:column="1">{
    <if pos:line="1183" pos:column="5">if <condition pos:line="1183" pos:column="8">(   <expr><call><name pos:line="1183" pos:column="12">is_identity_encoding<pos:position pos:line="1183" pos:column="32"/></name><argument_list pos:line="1183" pos:column="32">(<argument><expr><name><name pos:line="1183" pos:column="33">variant<pos:position pos:line="1183" pos:column="40"/></name><operator pos:line="1183" pos:column="40">-&gt;<pos:position pos:line="1183" pos:column="45"/></operator><name pos:line="1183" pos:column="42">content_encoding<pos:position pos:line="1183" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="1183" pos:column="59"/></argument_list></call>
        <operator pos:line="1184" pos:column="9">||<pos:position pos:line="1184" pos:column="11"/></operator> <operator pos:line="1184" pos:column="12">!<pos:position pos:line="1184" pos:column="13"/></operator><call><name pos:line="1184" pos:column="13">strcmp<pos:position pos:line="1184" pos:column="19"/></name><argument_list pos:line="1184" pos:column="19">(<argument><expr><name><name pos:line="1184" pos:column="20">variant<pos:position pos:line="1184" pos:column="27"/></name><operator pos:line="1184" pos:column="27">-&gt;<pos:position pos:line="1184" pos:column="32"/></operator><name pos:line="1184" pos:column="29">content_encoding<pos:position pos:line="1184" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1184" pos:column="47">"identity"<pos:position pos:line="1184" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="1184" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="1184" pos:column="59"/></condition><then pos:line="1184" pos:column="59"> <block pos:line="1184" pos:column="60">{
        <return pos:line="1185" pos:column="9">return <expr><literal type="number" pos:line="1185" pos:column="16">0<pos:position pos:line="1185" pos:column="17"/></literal></expr>;<pos:position pos:line="1185" pos:column="18"/></return>
    }<pos:position pos:line="1186" pos:column="6"/></block></then></if>

    <return pos:line="1188" pos:column="5">return <expr><operator pos:line="1188" pos:column="12">(<pos:position pos:line="1188" pos:column="13"/></operator>   <operator pos:line="1188" pos:column="16">(<pos:position pos:line="1188" pos:column="17"/></operator><name pos:line="1188" pos:column="17">discard<pos:position pos:line="1188" pos:column="24"/></name> <operator pos:line="1188" pos:column="25">==<pos:position pos:line="1188" pos:column="27"/></operator> <name pos:line="1188" pos:column="28">DISCARD_ALL_ENCODINGS<pos:position pos:line="1188" pos:column="49"/></name><operator pos:line="1188" pos:column="49">)<pos:position pos:line="1188" pos:column="50"/></operator>
            <operator pos:line="1189" pos:column="13">||<pos:position pos:line="1189" pos:column="15"/></operator> <operator pos:line="1189" pos:column="16">(<pos:position pos:line="1189" pos:column="17"/></operator><name pos:line="1189" pos:column="17">discard<pos:position pos:line="1189" pos:column="24"/></name> <operator pos:line="1189" pos:column="25">==<pos:position pos:line="1189" pos:column="27"/></operator> <name pos:line="1189" pos:column="28">DISCARD_ALL_BUT_HTML<pos:position pos:line="1189" pos:column="48"/></name>
                <operator pos:line="1190" pos:column="17">&amp;&amp;<pos:position pos:line="1190" pos:column="27"/></operator> <operator pos:line="1190" pos:column="20">(<pos:position pos:line="1190" pos:column="21"/></operator><operator pos:line="1190" pos:column="21">!<pos:position pos:line="1190" pos:column="22"/></operator><name><name pos:line="1190" pos:column="22">variant<pos:position pos:line="1190" pos:column="29"/></name><operator pos:line="1190" pos:column="29">-&gt;<pos:position pos:line="1190" pos:column="34"/></operator><name pos:line="1190" pos:column="31">mime_type<pos:position pos:line="1190" pos:column="40"/></name></name>
                    <operator pos:line="1191" pos:column="21">||<pos:position pos:line="1191" pos:column="23"/></operator> <call><name pos:line="1191" pos:column="24">strncmp<pos:position pos:line="1191" pos:column="31"/></name><argument_list pos:line="1191" pos:column="31">(<argument><expr><name><name pos:line="1191" pos:column="32">variant<pos:position pos:line="1191" pos:column="39"/></name><operator pos:line="1191" pos:column="39">-&gt;<pos:position pos:line="1191" pos:column="44"/></operator><name pos:line="1191" pos:column="41">mime_type<pos:position pos:line="1191" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1191" pos:column="52">"text/html"<pos:position pos:line="1191" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1191" pos:column="65">9<pos:position pos:line="1191" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="1191" pos:column="67"/></argument_list></call><operator pos:line="1191" pos:column="67">)<pos:position pos:line="1191" pos:column="68"/></operator><operator pos:line="1191" pos:column="68">)<pos:position pos:line="1191" pos:column="69"/></operator><operator pos:line="1191" pos:column="69">)<pos:position pos:line="1191" pos:column="70"/></operator></expr>;<pos:position pos:line="1191" pos:column="71"/></return>
}<pos:position pos:line="1192" pos:column="2"/></block></function>

<function><specifier pos:line="1194" pos:column="1">static<pos:position pos:line="1194" pos:column="7"/></specifier> <type><name pos:line="1194" pos:column="8">int<pos:position pos:line="1194" pos:column="11"/></name></type> <name pos:line="1194" pos:column="12">best_match<pos:position pos:line="1194" pos:column="22"/></name><parameter_list pos:line="1194" pos:column="22">(<parameter><decl><type><name pos:line="1194" pos:column="23">negotiation_state<pos:position pos:line="1194" pos:column="40"/></name> <modifier pos:line="1194" pos:column="41">*<pos:position pos:line="1194" pos:column="42"/></modifier></type><name pos:line="1194" pos:column="42">neg<pos:position pos:line="1194" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1194" pos:column="47">var_rec<pos:position pos:line="1194" pos:column="54"/></name> <modifier pos:line="1194" pos:column="55">*<pos:position pos:line="1194" pos:column="56"/></modifier><modifier pos:line="1194" pos:column="56">*<pos:position pos:line="1194" pos:column="57"/></modifier></type><name pos:line="1194" pos:column="57">pbest<pos:position pos:line="1194" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1194" pos:column="63"/></parameter_list>
<block pos:line="1195" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1196" pos:column="5">int<pos:position pos:line="1196" pos:column="8"/></name></type> <name pos:line="1196" pos:column="9">j<pos:position pos:line="1196" pos:column="10"/></name></decl>;<pos:position pos:line="1196" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1197" pos:column="5">var_rec<pos:position pos:line="1197" pos:column="12"/></name> <modifier pos:line="1197" pos:column="13">*<pos:position pos:line="1197" pos:column="14"/></modifier></type><name pos:line="1197" pos:column="14">best<pos:position pos:line="1197" pos:column="18"/></name></decl>;<pos:position pos:line="1197" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1198" pos:column="5">float<pos:position pos:line="1198" pos:column="10"/></name></type> <name pos:line="1198" pos:column="11">bestq<pos:position pos:line="1198" pos:column="16"/></name> <init pos:line="1198" pos:column="17">= <expr><literal type="number" pos:line="1198" pos:column="19">0.0f<pos:position pos:line="1198" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="1198" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="1199" pos:column="5">enum<pos:position pos:line="1199" pos:column="9"/></name> <name pos:line="1199" pos:column="10">algorithm_results<pos:position pos:line="1199" pos:column="27"/></name></name></type> <name pos:line="1199" pos:column="28">algorithm_result<pos:position pos:line="1199" pos:column="44"/></name></decl>;<pos:position pos:line="1199" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1200" pos:column="5">int<pos:position pos:line="1200" pos:column="8"/></name></type> <name pos:line="1200" pos:column="9">may_discard<pos:position pos:line="1200" pos:column="20"/></name> <init pos:line="1200" pos:column="21">= <expr><literal type="number" pos:line="1200" pos:column="23">0<pos:position pos:line="1200" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="1200" pos:column="25"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="1202" pos:column="5">var_rec<pos:position pos:line="1202" pos:column="12"/></name> <modifier pos:line="1202" pos:column="13">*<pos:position pos:line="1202" pos:column="14"/></modifier></type><name pos:line="1202" pos:column="14">avail_recs<pos:position pos:line="1202" pos:column="24"/></name> <init pos:line="1202" pos:column="25">= <expr><operator pos:line="1202" pos:column="27">(<pos:position pos:line="1202" pos:column="28"/></operator><name pos:line="1202" pos:column="28">var_rec<pos:position pos:line="1202" pos:column="35"/></name> <operator pos:line="1202" pos:column="36">*<pos:position pos:line="1202" pos:column="37"/></operator><operator pos:line="1202" pos:column="37">)<pos:position pos:line="1202" pos:column="38"/></operator> <name><name pos:line="1202" pos:column="39">neg<pos:position pos:line="1202" pos:column="42"/></name><operator pos:line="1202" pos:column="42">-&gt;<pos:position pos:line="1202" pos:column="47"/></operator><name pos:line="1202" pos:column="44">avail_vars<pos:position pos:line="1202" pos:column="54"/></name><operator pos:line="1202" pos:column="54">-&gt;<pos:position pos:line="1202" pos:column="59"/></operator><name pos:line="1202" pos:column="56">elts<pos:position pos:line="1202" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="1202" pos:column="61"/></decl_stmt>

    <comment type="block" pos:line="1204" pos:column="5">/* fetch request dependent variables
     * prefer-language: prefer a certain language.
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="1207" pos:column="5">const<pos:position pos:line="1207" pos:column="10"/></specifier> <name pos:line="1207" pos:column="11">char<pos:position pos:line="1207" pos:column="15"/></name> <modifier pos:line="1207" pos:column="16">*<pos:position pos:line="1207" pos:column="17"/></modifier></type><name pos:line="1207" pos:column="17">preferred_language<pos:position pos:line="1207" pos:column="35"/></name> <init pos:line="1207" pos:column="36">= <expr><call><name pos:line="1207" pos:column="38">apr_table_get<pos:position pos:line="1207" pos:column="51"/></name><argument_list pos:line="1207" pos:column="51">(<argument><expr><name><name pos:line="1207" pos:column="52">neg<pos:position pos:line="1207" pos:column="55"/></name><operator pos:line="1207" pos:column="55">-&gt;<pos:position pos:line="1207" pos:column="60"/></operator><name pos:line="1207" pos:column="57">r<pos:position pos:line="1207" pos:column="58"/></name><operator pos:line="1207" pos:column="58">-&gt;<pos:position pos:line="1207" pos:column="63"/></operator><name pos:line="1207" pos:column="60">subprocess_env<pos:position pos:line="1207" pos:column="74"/></name></name></expr></argument>,
                                                   <argument><expr><literal type="string" pos:line="1208" pos:column="52">"prefer-language"<pos:position pos:line="1208" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="1208" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1208" pos:column="71"/></decl_stmt>

    <comment type="block" pos:line="1210" pos:column="5">/* no-gzip: do not send encoded documents */</comment>
    <if pos:line="1211" pos:column="5">if <condition pos:line="1211" pos:column="8">(<expr><call><name pos:line="1211" pos:column="9">apr_table_get<pos:position pos:line="1211" pos:column="22"/></name><argument_list pos:line="1211" pos:column="22">(<argument><expr><name><name pos:line="1211" pos:column="23">neg<pos:position pos:line="1211" pos:column="26"/></name><operator pos:line="1211" pos:column="26">-&gt;<pos:position pos:line="1211" pos:column="31"/></operator><name pos:line="1211" pos:column="28">r<pos:position pos:line="1211" pos:column="29"/></name><operator pos:line="1211" pos:column="29">-&gt;<pos:position pos:line="1211" pos:column="34"/></operator><name pos:line="1211" pos:column="31">subprocess_env<pos:position pos:line="1211" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1211" pos:column="47">"no-gzip"<pos:position pos:line="1211" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="1211" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="1211" pos:column="58"/></condition><then pos:line="1211" pos:column="58"> <block pos:line="1211" pos:column="59">{
        <expr_stmt><expr><name pos:line="1212" pos:column="9">may_discard<pos:position pos:line="1212" pos:column="20"/></name> <operator pos:line="1212" pos:column="21">=<pos:position pos:line="1212" pos:column="22"/></operator> <name pos:line="1212" pos:column="23">DISCARD_ALL_ENCODINGS<pos:position pos:line="1212" pos:column="44"/></name></expr>;<pos:position pos:line="1212" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="1213" pos:column="6"/></block></then>

    <comment type="block" pos:line="1215" pos:column="5">/* gzip-only-text/html: send encoded documents only
     * if they are text/html. (no-gzip has a higher priority).
     */</comment>
    <else pos:line="1218" pos:column="5">else <block pos:line="1218" pos:column="10">{
        <decl_stmt><decl><type><specifier pos:line="1219" pos:column="9">const<pos:position pos:line="1219" pos:column="14"/></specifier> <name pos:line="1219" pos:column="15">char<pos:position pos:line="1219" pos:column="19"/></name> <modifier pos:line="1219" pos:column="20">*<pos:position pos:line="1219" pos:column="21"/></modifier></type><name pos:line="1219" pos:column="21">env_value<pos:position pos:line="1219" pos:column="30"/></name> <init pos:line="1219" pos:column="31">= <expr><call><name pos:line="1219" pos:column="33">apr_table_get<pos:position pos:line="1219" pos:column="46"/></name><argument_list pos:line="1219" pos:column="46">(<argument><expr><name><name pos:line="1219" pos:column="47">neg<pos:position pos:line="1219" pos:column="50"/></name><operator pos:line="1219" pos:column="50">-&gt;<pos:position pos:line="1219" pos:column="55"/></operator><name pos:line="1219" pos:column="52">r<pos:position pos:line="1219" pos:column="53"/></name><operator pos:line="1219" pos:column="53">-&gt;<pos:position pos:line="1219" pos:column="58"/></operator><name pos:line="1219" pos:column="55">subprocess_env<pos:position pos:line="1219" pos:column="69"/></name></name></expr></argument>,
                                              <argument><expr><literal type="string" pos:line="1220" pos:column="47">"gzip-only-text/html"<pos:position pos:line="1220" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="1220" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1220" pos:column="70"/></decl_stmt>

        <if pos:line="1222" pos:column="9">if <condition pos:line="1222" pos:column="12">(<expr><name pos:line="1222" pos:column="13">env_value<pos:position pos:line="1222" pos:column="22"/></name> <operator pos:line="1222" pos:column="23">&amp;&amp;<pos:position pos:line="1222" pos:column="33"/></operator> <operator pos:line="1222" pos:column="26">!<pos:position pos:line="1222" pos:column="27"/></operator><call><name pos:line="1222" pos:column="27">strcmp<pos:position pos:line="1222" pos:column="33"/></name><argument_list pos:line="1222" pos:column="33">(<argument><expr><name pos:line="1222" pos:column="34">env_value<pos:position pos:line="1222" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1222" pos:column="45">"1"<pos:position pos:line="1222" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="1222" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="1222" pos:column="50"/></condition><then pos:line="1222" pos:column="50"> <block pos:line="1222" pos:column="51">{
            <expr_stmt><expr><name pos:line="1223" pos:column="13">may_discard<pos:position pos:line="1223" pos:column="24"/></name> <operator pos:line="1223" pos:column="25">=<pos:position pos:line="1223" pos:column="26"/></operator> <name pos:line="1223" pos:column="27">DISCARD_ALL_BUT_HTML<pos:position pos:line="1223" pos:column="47"/></name></expr>;<pos:position pos:line="1223" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="1224" pos:column="10"/></block></then></if>
    }<pos:position pos:line="1225" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="1227" pos:column="5">set_default_lang_quality<pos:position pos:line="1227" pos:column="29"/></name><argument_list pos:line="1227" pos:column="29">(<argument><expr><name pos:line="1227" pos:column="30">neg<pos:position pos:line="1227" pos:column="33"/></name></expr></argument>)<pos:position pos:line="1227" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="1227" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="1229" pos:column="5">/*
     * Find the 'best' variant
     * We run the loop possibly twice: if "prefer-language"
     * environment variable is set but we did not find an appropriate
     * best variant. In that case forget the preferred language and
     * negotiate over all variants.
     */</comment>

    <do pos:line="1237" pos:column="5">do <block pos:line="1237" pos:column="8">{
        <expr_stmt><expr><name pos:line="1238" pos:column="9">best<pos:position pos:line="1238" pos:column="13"/></name> <operator pos:line="1238" pos:column="14">=<pos:position pos:line="1238" pos:column="15"/></operator> <name pos:line="1238" pos:column="16">NULL<pos:position pos:line="1238" pos:column="20"/></name></expr>;<pos:position pos:line="1238" pos:column="21"/></expr_stmt>

        <for pos:line="1240" pos:column="9">for <control pos:line="1240" pos:column="13">(<init><expr><name pos:line="1240" pos:column="14">j<pos:position pos:line="1240" pos:column="15"/></name> <operator pos:line="1240" pos:column="16">=<pos:position pos:line="1240" pos:column="17"/></operator> <literal type="number" pos:line="1240" pos:column="18">0<pos:position pos:line="1240" pos:column="19"/></literal></expr>;<pos:position pos:line="1240" pos:column="20"/></init> <condition><expr><name pos:line="1240" pos:column="21">j<pos:position pos:line="1240" pos:column="22"/></name> <operator pos:line="1240" pos:column="23">&lt;<pos:position pos:line="1240" pos:column="27"/></operator> <name><name pos:line="1240" pos:column="25">neg<pos:position pos:line="1240" pos:column="28"/></name><operator pos:line="1240" pos:column="28">-&gt;<pos:position pos:line="1240" pos:column="33"/></operator><name pos:line="1240" pos:column="30">avail_vars<pos:position pos:line="1240" pos:column="40"/></name><operator pos:line="1240" pos:column="40">-&gt;<pos:position pos:line="1240" pos:column="45"/></operator><name pos:line="1240" pos:column="42">nelts<pos:position pos:line="1240" pos:column="47"/></name></name></expr>;<pos:position pos:line="1240" pos:column="48"/></condition> <incr><expr><operator pos:line="1240" pos:column="49">++<pos:position pos:line="1240" pos:column="51"/></operator><name pos:line="1240" pos:column="51">j<pos:position pos:line="1240" pos:column="52"/></name></expr></incr>)<pos:position pos:line="1240" pos:column="53"/></control> <block pos:line="1240" pos:column="54">{
            <decl_stmt><decl><type><name pos:line="1241" pos:column="13">var_rec<pos:position pos:line="1241" pos:column="20"/></name> <modifier pos:line="1241" pos:column="21">*<pos:position pos:line="1241" pos:column="22"/></modifier></type><name pos:line="1241" pos:column="22">variant<pos:position pos:line="1241" pos:column="29"/></name> <init pos:line="1241" pos:column="30">= <expr><operator pos:line="1241" pos:column="32">&amp;<pos:position pos:line="1241" pos:column="37"/></operator><name><name pos:line="1241" pos:column="33">avail_recs<pos:position pos:line="1241" pos:column="43"/></name><index pos:line="1241" pos:column="43">[<expr><name pos:line="1241" pos:column="44">j<pos:position pos:line="1241" pos:column="45"/></name></expr>]<pos:position pos:line="1241" pos:column="46"/></index></name></expr></init></decl>;<pos:position pos:line="1241" pos:column="47"/></decl_stmt>

            <comment type="block" pos:line="1243" pos:column="13">/* if this variant is encoded somehow and there are special
             * variables set, we do not negotiate it. see above.
             */</comment>
            <if pos:line="1246" pos:column="13">if <condition pos:line="1246" pos:column="16">(   <expr><name pos:line="1246" pos:column="20">may_discard<pos:position pos:line="1246" pos:column="31"/></name>
                <operator pos:line="1247" pos:column="17">&amp;&amp;<pos:position pos:line="1247" pos:column="27"/></operator> <call><name pos:line="1247" pos:column="20">discard_variant_by_env<pos:position pos:line="1247" pos:column="42"/></name><argument_list pos:line="1247" pos:column="42">(<argument><expr><name pos:line="1247" pos:column="43">variant<pos:position pos:line="1247" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1247" pos:column="52">may_discard<pos:position pos:line="1247" pos:column="63"/></name></expr></argument>)<pos:position pos:line="1247" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="1247" pos:column="65"/></condition><then pos:line="1247" pos:column="65"> <block pos:line="1247" pos:column="66">{
                <continue pos:line="1248" pos:column="17">continue;<pos:position pos:line="1248" pos:column="26"/></continue>
            }<pos:position pos:line="1249" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="1251" pos:column="13">/* if a language is preferred, but the current variant
             * is not in that language, then drop it for now
             */</comment>
            <if pos:line="1254" pos:column="13">if <condition pos:line="1254" pos:column="16">(   <expr><name pos:line="1254" pos:column="20">preferred_language<pos:position pos:line="1254" pos:column="38"/></name>
                <operator pos:line="1255" pos:column="17">&amp;&amp;<pos:position pos:line="1255" pos:column="27"/></operator> <operator pos:line="1255" pos:column="20">!<pos:position pos:line="1255" pos:column="21"/></operator><call><name pos:line="1255" pos:column="21">variant_has_language<pos:position pos:line="1255" pos:column="41"/></name><argument_list pos:line="1255" pos:column="41">(<argument><expr><name pos:line="1255" pos:column="42">variant<pos:position pos:line="1255" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="1255" pos:column="51">preferred_language<pos:position pos:line="1255" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1255" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="1255" pos:column="71"/></condition><then pos:line="1255" pos:column="71"> <block pos:line="1255" pos:column="72">{
                <continue pos:line="1256" pos:column="17">continue;<pos:position pos:line="1256" pos:column="26"/></continue>
            }<pos:position pos:line="1257" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="1259" pos:column="13">/* Find all the relevant 'quality' values from the
             * Accept... headers, and store in the variant.  This also
             * prepares for sending an Alternates header etc so we need to
             * do it even if we do not actually plan to find a best
             * variant.
             */</comment>
            <expr_stmt><expr><call><name pos:line="1265" pos:column="13">set_accept_quality<pos:position pos:line="1265" pos:column="31"/></name><argument_list pos:line="1265" pos:column="31">(<argument><expr><name pos:line="1265" pos:column="32">neg<pos:position pos:line="1265" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1265" pos:column="37">variant<pos:position pos:line="1265" pos:column="44"/></name></expr></argument>)<pos:position pos:line="1265" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1265" pos:column="46"/></expr_stmt>
            <comment type="block" pos:line="1266" pos:column="13">/* accept the preferred language, even when it's not listed within
             * the Accept-Language header
             */</comment>
            <if pos:line="1269" pos:column="13">if <condition pos:line="1269" pos:column="16">(<expr><name pos:line="1269" pos:column="17">preferred_language<pos:position pos:line="1269" pos:column="35"/></name></expr>)<pos:position pos:line="1269" pos:column="36"/></condition><then pos:line="1269" pos:column="36"> <block pos:line="1269" pos:column="37">{
                <expr_stmt><expr><name><name pos:line="1270" pos:column="17">variant<pos:position pos:line="1270" pos:column="24"/></name><operator pos:line="1270" pos:column="24">-&gt;<pos:position pos:line="1270" pos:column="29"/></operator><name pos:line="1270" pos:column="26">lang_quality<pos:position pos:line="1270" pos:column="38"/></name></name> <operator pos:line="1270" pos:column="39">=<pos:position pos:line="1270" pos:column="40"/></operator> <literal type="number" pos:line="1270" pos:column="41">1.0f<pos:position pos:line="1270" pos:column="45"/></literal></expr>;<pos:position pos:line="1270" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="1271" pos:column="17">variant<pos:position pos:line="1271" pos:column="24"/></name><operator pos:line="1271" pos:column="24">-&gt;<pos:position pos:line="1271" pos:column="29"/></operator><name pos:line="1271" pos:column="26">definite<pos:position pos:line="1271" pos:column="34"/></name></name> <operator pos:line="1271" pos:column="35">=<pos:position pos:line="1271" pos:column="36"/></operator> <literal type="number" pos:line="1271" pos:column="37">1<pos:position pos:line="1271" pos:column="38"/></literal></expr>;<pos:position pos:line="1271" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="1272" pos:column="14"/></block></then>
            <else pos:line="1273" pos:column="13">else <block pos:line="1273" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="1274" pos:column="17">set_language_quality<pos:position pos:line="1274" pos:column="37"/></name><argument_list pos:line="1274" pos:column="37">(<argument><expr><name pos:line="1274" pos:column="38">neg<pos:position pos:line="1274" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="1274" pos:column="43">variant<pos:position pos:line="1274" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1274" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1274" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="1275" pos:column="14"/></block></else></if>
            <expr_stmt><expr><call><name pos:line="1276" pos:column="13">set_encoding_quality<pos:position pos:line="1276" pos:column="33"/></name><argument_list pos:line="1276" pos:column="33">(<argument><expr><name pos:line="1276" pos:column="34">neg<pos:position pos:line="1276" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1276" pos:column="39">variant<pos:position pos:line="1276" pos:column="46"/></name></expr></argument>)<pos:position pos:line="1276" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="1276" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1277" pos:column="13">set_charset_quality<pos:position pos:line="1277" pos:column="32"/></name><argument_list pos:line="1277" pos:column="32">(<argument><expr><name pos:line="1277" pos:column="33">neg<pos:position pos:line="1277" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1277" pos:column="38">variant<pos:position pos:line="1277" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1277" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="1277" pos:column="47"/></expr_stmt>

            <comment type="block" pos:line="1279" pos:column="13">/* Only do variant selection if we may actually choose a
             * variant for the client
             */</comment>
            <if pos:line="1282" pos:column="13">if <condition pos:line="1282" pos:column="16">(<expr><name><name pos:line="1282" pos:column="17">neg<pos:position pos:line="1282" pos:column="20"/></name><operator pos:line="1282" pos:column="20">-&gt;<pos:position pos:line="1282" pos:column="25"/></operator><name pos:line="1282" pos:column="22">may_choose<pos:position pos:line="1282" pos:column="32"/></name></name></expr>)<pos:position pos:line="1282" pos:column="33"/></condition><then pos:line="1282" pos:column="33"> <block pos:line="1282" pos:column="34">{

                <comment type="block" pos:line="1284" pos:column="17">/* Now find out if this variant is better than the current
                 * best, either using the RVSA/1.0 algorithm, or Apache's
                 * internal server-driven algorithm. Presumably other
                 * server-driven algorithms are possible, and could be
                 * implemented here.
                 */</comment>

                <if pos:line="1291" pos:column="17">if <condition pos:line="1291" pos:column="20">(<expr><name><name pos:line="1291" pos:column="21">neg<pos:position pos:line="1291" pos:column="24"/></name><operator pos:line="1291" pos:column="24">-&gt;<pos:position pos:line="1291" pos:column="29"/></operator><name pos:line="1291" pos:column="26">use_rvsa<pos:position pos:line="1291" pos:column="34"/></name></name></expr>)<pos:position pos:line="1291" pos:column="35"/></condition><then pos:line="1291" pos:column="35"> <block pos:line="1291" pos:column="36">{
                    <if pos:line="1292" pos:column="21">if <condition pos:line="1292" pos:column="24">(<expr><call><name pos:line="1292" pos:column="25">is_variant_better_rvsa<pos:position pos:line="1292" pos:column="47"/></name><argument_list pos:line="1292" pos:column="47">(<argument><expr><name pos:line="1292" pos:column="48">neg<pos:position pos:line="1292" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1292" pos:column="53">variant<pos:position pos:line="1292" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1292" pos:column="62">best<pos:position pos:line="1292" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="1292" pos:column="68">&amp;<pos:position pos:line="1292" pos:column="73"/></operator><name pos:line="1292" pos:column="69">bestq<pos:position pos:line="1292" pos:column="74"/></name></expr></argument>)<pos:position pos:line="1292" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="1292" pos:column="76"/></condition><then pos:line="1292" pos:column="76"> <block pos:line="1292" pos:column="77">{
                        <expr_stmt><expr><name pos:line="1293" pos:column="25">best<pos:position pos:line="1293" pos:column="29"/></name> <operator pos:line="1293" pos:column="30">=<pos:position pos:line="1293" pos:column="31"/></operator> <name pos:line="1293" pos:column="32">variant<pos:position pos:line="1293" pos:column="39"/></name></expr>;<pos:position pos:line="1293" pos:column="40"/></expr_stmt>
                    }<pos:position pos:line="1294" pos:column="22"/></block></then></if>
                }<pos:position pos:line="1295" pos:column="18"/></block></then>
                <else pos:line="1296" pos:column="17">else <block pos:line="1296" pos:column="22">{
                    <if pos:line="1297" pos:column="21">if <condition pos:line="1297" pos:column="24">(<expr><call><name pos:line="1297" pos:column="25">is_variant_better<pos:position pos:line="1297" pos:column="42"/></name><argument_list pos:line="1297" pos:column="42">(<argument><expr><name pos:line="1297" pos:column="43">neg<pos:position pos:line="1297" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1297" pos:column="48">variant<pos:position pos:line="1297" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1297" pos:column="57">best<pos:position pos:line="1297" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="1297" pos:column="63">&amp;<pos:position pos:line="1297" pos:column="68"/></operator><name pos:line="1297" pos:column="64">bestq<pos:position pos:line="1297" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1297" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="1297" pos:column="71"/></condition><then pos:line="1297" pos:column="71"> <block pos:line="1297" pos:column="72">{
                        <expr_stmt><expr><name pos:line="1298" pos:column="25">best<pos:position pos:line="1298" pos:column="29"/></name> <operator pos:line="1298" pos:column="30">=<pos:position pos:line="1298" pos:column="31"/></operator> <name pos:line="1298" pos:column="32">variant<pos:position pos:line="1298" pos:column="39"/></name></expr>;<pos:position pos:line="1298" pos:column="40"/></expr_stmt>
                    }<pos:position pos:line="1299" pos:column="22"/></block></then></if>
                }<pos:position pos:line="1300" pos:column="18"/></block></else></if>
            }<pos:position pos:line="1301" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1302" pos:column="10"/></block></for>

        <comment type="block" pos:line="1304" pos:column="9">/* We now either have a best variant, or no best variant */</comment>

        <if pos:line="1306" pos:column="9">if <condition pos:line="1306" pos:column="12">(<expr><name><name pos:line="1306" pos:column="13">neg<pos:position pos:line="1306" pos:column="16"/></name><operator pos:line="1306" pos:column="16">-&gt;<pos:position pos:line="1306" pos:column="21"/></operator><name pos:line="1306" pos:column="18">use_rvsa<pos:position pos:line="1306" pos:column="26"/></name></name></expr>)<pos:position pos:line="1306" pos:column="27"/></condition><then pos:line="1306" pos:column="27">    <block pos:line="1306" pos:column="31">{
            <comment type="block" pos:line="1307" pos:column="13">/* calculate result for RVSA/1.0 algorithm:
             * only a choice response if the best variant has q&gt;0
             * and is definite
             */</comment>
            <expr_stmt><expr><name pos:line="1311" pos:column="13">algorithm_result<pos:position pos:line="1311" pos:column="29"/></name> <operator pos:line="1311" pos:column="30">=<pos:position pos:line="1311" pos:column="31"/></operator> <ternary><condition><expr><operator pos:line="1311" pos:column="32">(<pos:position pos:line="1311" pos:column="33"/></operator><name pos:line="1311" pos:column="33">best<pos:position pos:line="1311" pos:column="37"/></name> <operator pos:line="1311" pos:column="38">&amp;&amp;<pos:position pos:line="1311" pos:column="48"/></operator> <name><name pos:line="1311" pos:column="41">best<pos:position pos:line="1311" pos:column="45"/></name><operator pos:line="1311" pos:column="45">-&gt;<pos:position pos:line="1311" pos:column="50"/></operator><name pos:line="1311" pos:column="47">definite<pos:position pos:line="1311" pos:column="55"/></name></name><operator pos:line="1311" pos:column="55">)<pos:position pos:line="1311" pos:column="56"/></operator> <operator pos:line="1311" pos:column="57">&amp;&amp;<pos:position pos:line="1311" pos:column="67"/></operator> <operator pos:line="1311" pos:column="60">(<pos:position pos:line="1311" pos:column="61"/></operator><name pos:line="1311" pos:column="61">bestq<pos:position pos:line="1311" pos:column="66"/></name> <operator pos:line="1311" pos:column="67">&gt;<pos:position pos:line="1311" pos:column="71"/></operator> <literal type="number" pos:line="1311" pos:column="69">0<pos:position pos:line="1311" pos:column="70"/></literal><operator pos:line="1311" pos:column="70">)<pos:position pos:line="1311" pos:column="71"/></operator></expr> ?<pos:position pos:line="1311" pos:column="73"/></condition><then pos:line="1311" pos:column="73">
                                <expr><name pos:line="1312" pos:column="33">alg_choice<pos:position pos:line="1312" pos:column="43"/></name></expr> <pos:position pos:line="1312" pos:column="44"/></then><else pos:line="1312" pos:column="44">: <expr><name pos:line="1312" pos:column="46">alg_list<pos:position pos:line="1312" pos:column="54"/></name></expr></else></ternary></expr>;<pos:position pos:line="1312" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="1313" pos:column="10"/></block></then>
        <else pos:line="1314" pos:column="9">else <block pos:line="1314" pos:column="14">{
            <comment type="block" pos:line="1315" pos:column="13">/* calculate result for Apache negotiation algorithm */</comment>
            <expr_stmt><expr><name pos:line="1316" pos:column="13">algorithm_result<pos:position pos:line="1316" pos:column="29"/></name> <operator pos:line="1316" pos:column="30">=<pos:position pos:line="1316" pos:column="31"/></operator> <ternary><condition><expr><name pos:line="1316" pos:column="32">bestq<pos:position pos:line="1316" pos:column="37"/></name> <operator pos:line="1316" pos:column="38">&gt;<pos:position pos:line="1316" pos:column="42"/></operator> <literal type="number" pos:line="1316" pos:column="40">0<pos:position pos:line="1316" pos:column="41"/></literal></expr> ?<pos:position pos:line="1316" pos:column="43"/></condition><then pos:line="1316" pos:column="43"> <expr><name pos:line="1316" pos:column="44">alg_choice<pos:position pos:line="1316" pos:column="54"/></name></expr> <pos:position pos:line="1316" pos:column="55"/></then><else pos:line="1316" pos:column="55">: <expr><name pos:line="1316" pos:column="57">alg_list<pos:position pos:line="1316" pos:column="65"/></name></expr></else></ternary></expr>;<pos:position pos:line="1316" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="1317" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="1319" pos:column="9">/* run the loop again, if the "prefer-language" got no clear result */</comment>
        <if pos:line="1320" pos:column="9">if <condition pos:line="1320" pos:column="12">(<expr><name pos:line="1320" pos:column="13">preferred_language<pos:position pos:line="1320" pos:column="31"/></name> <operator pos:line="1320" pos:column="32">&amp;&amp;<pos:position pos:line="1320" pos:column="42"/></operator> <operator pos:line="1320" pos:column="35">(<pos:position pos:line="1320" pos:column="36"/></operator><operator pos:line="1320" pos:column="36">!<pos:position pos:line="1320" pos:column="37"/></operator><name pos:line="1320" pos:column="37">best<pos:position pos:line="1320" pos:column="41"/></name> <operator pos:line="1320" pos:column="42">||<pos:position pos:line="1320" pos:column="44"/></operator> <name pos:line="1320" pos:column="45">algorithm_result<pos:position pos:line="1320" pos:column="61"/></name> <operator pos:line="1320" pos:column="62">!=<pos:position pos:line="1320" pos:column="64"/></operator> <name pos:line="1320" pos:column="65">alg_choice<pos:position pos:line="1320" pos:column="75"/></name><operator pos:line="1320" pos:column="75">)<pos:position pos:line="1320" pos:column="76"/></operator></expr>)<pos:position pos:line="1320" pos:column="77"/></condition><then pos:line="1320" pos:column="77"> <block pos:line="1320" pos:column="78">{
            <expr_stmt><expr><name pos:line="1321" pos:column="13">preferred_language<pos:position pos:line="1321" pos:column="31"/></name> <operator pos:line="1321" pos:column="32">=<pos:position pos:line="1321" pos:column="33"/></operator> <name pos:line="1321" pos:column="34">NULL<pos:position pos:line="1321" pos:column="38"/></name></expr>;<pos:position pos:line="1321" pos:column="39"/></expr_stmt>
            <continue pos:line="1322" pos:column="13">continue;<pos:position pos:line="1322" pos:column="22"/></continue>
        }<pos:position pos:line="1323" pos:column="10"/></block></then></if>

        <break pos:line="1325" pos:column="9">break;<pos:position pos:line="1325" pos:column="15"/></break>
    }<pos:position pos:line="1326" pos:column="6"/></block> while <condition pos:line="1326" pos:column="13">(<expr><literal type="number" pos:line="1326" pos:column="14">1<pos:position pos:line="1326" pos:column="15"/></literal></expr>)<pos:position pos:line="1326" pos:column="16"/></condition>;<pos:position pos:line="1326" pos:column="17"/></do>

    <comment type="block" pos:line="1328" pos:column="5">/* Returning a choice response with a non-neighboring variant is a
     * protocol security error in TCN (see rfc2295).  We do *not*
     * verify here that the variant and URI are neighbors, even though
     * we may return alg_choice.  We depend on the environment (the
     * caller) to only declare the resource transparently negotiable if
     * all variants are neighbors.
     */</comment>
    <expr_stmt><expr><operator pos:line="1335" pos:column="5">*<pos:position pos:line="1335" pos:column="6"/></operator><name pos:line="1335" pos:column="6">pbest<pos:position pos:line="1335" pos:column="11"/></name> <operator pos:line="1335" pos:column="12">=<pos:position pos:line="1335" pos:column="13"/></operator> <name pos:line="1335" pos:column="14">best<pos:position pos:line="1335" pos:column="18"/></name></expr>;<pos:position pos:line="1335" pos:column="19"/></expr_stmt>
    <return pos:line="1336" pos:column="5">return <expr><name pos:line="1336" pos:column="12">algorithm_result<pos:position pos:line="1336" pos:column="28"/></name></expr>;<pos:position pos:line="1336" pos:column="29"/></return>
}<pos:position pos:line="1337" pos:column="2"/></block></function>

<comment type="block" pos:line="1339" pos:column="1">/* Sets response headers for a negotiated response.
 * neg-&gt;is_transparent determines whether a transparently negotiated
 * response or a plain `server driven negotiation' response is
 * created.   Applicable headers are Alternates, Vary, and TCN.
 *
 * The Vary header we create is sometimes longer than is required for
 * the correct caching of negotiated results by HTTP/1.1 caches.  For
 * example if we have 3 variants x.html, x.ps.en and x.ps.nl, and if
 * the Accept: header assigns a 0 quality to .ps, then the results of
 * the two server-side negotiation algorithms we currently implement
 * will never depend on Accept-Language so we could return `Vary:
 * negotiate, accept' instead of the longer 'Vary: negotiate, accept,
 * accept-language' which the code below will return.  A routine for
 * computing the exact minimal Vary header would be a huge pain to code
 * and maintain though, especially because we need to take all possible
 * twiddles in the server-side negotiation algorithms into account.
 */</comment>
<function><specifier pos:line="1356" pos:column="1">static<pos:position pos:line="1356" pos:column="7"/></specifier> <type><name pos:line="1356" pos:column="8">void<pos:position pos:line="1356" pos:column="12"/></name></type> <name pos:line="1356" pos:column="13">set_neg_headers<pos:position pos:line="1356" pos:column="28"/></name><parameter_list pos:line="1356" pos:column="28">(<parameter><decl><type><name pos:line="1356" pos:column="29">request_rec<pos:position pos:line="1356" pos:column="40"/></name> <modifier pos:line="1356" pos:column="41">*<pos:position pos:line="1356" pos:column="42"/></modifier></type><name pos:line="1356" pos:column="42">r<pos:position pos:line="1356" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1356" pos:column="45">negotiation_state<pos:position pos:line="1356" pos:column="62"/></name> <modifier pos:line="1356" pos:column="63">*<pos:position pos:line="1356" pos:column="64"/></modifier></type><name pos:line="1356" pos:column="64">neg<pos:position pos:line="1356" pos:column="67"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="1357" pos:column="29">int<pos:position pos:line="1357" pos:column="32"/></name></type> <name pos:line="1357" pos:column="33">alg_result<pos:position pos:line="1357" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1357" pos:column="44"/></parameter_list>
<block pos:line="1358" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1359" pos:column="5">apr_table_t<pos:position pos:line="1359" pos:column="16"/></name> <modifier pos:line="1359" pos:column="17">*<pos:position pos:line="1359" pos:column="18"/></modifier></type><name pos:line="1359" pos:column="18">hdrs<pos:position pos:line="1359" pos:column="22"/></name></decl>;<pos:position pos:line="1359" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1360" pos:column="5">var_rec<pos:position pos:line="1360" pos:column="12"/></name> <modifier pos:line="1360" pos:column="13">*<pos:position pos:line="1360" pos:column="14"/></modifier></type><name pos:line="1360" pos:column="14">avail_recs<pos:position pos:line="1360" pos:column="24"/></name> <init pos:line="1360" pos:column="25">= <expr><operator pos:line="1360" pos:column="27">(<pos:position pos:line="1360" pos:column="28"/></operator><name pos:line="1360" pos:column="28">var_rec<pos:position pos:line="1360" pos:column="35"/></name> <operator pos:line="1360" pos:column="36">*<pos:position pos:line="1360" pos:column="37"/></operator><operator pos:line="1360" pos:column="37">)<pos:position pos:line="1360" pos:column="38"/></operator> <name><name pos:line="1360" pos:column="39">neg<pos:position pos:line="1360" pos:column="42"/></name><operator pos:line="1360" pos:column="42">-&gt;<pos:position pos:line="1360" pos:column="47"/></operator><name pos:line="1360" pos:column="44">avail_vars<pos:position pos:line="1360" pos:column="54"/></name><operator pos:line="1360" pos:column="54">-&gt;<pos:position pos:line="1360" pos:column="59"/></operator><name pos:line="1360" pos:column="56">elts<pos:position pos:line="1360" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="1360" pos:column="61"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="1361" pos:column="5">const<pos:position pos:line="1361" pos:column="10"/></specifier> <name pos:line="1361" pos:column="11">char<pos:position pos:line="1361" pos:column="15"/></name> <modifier pos:line="1361" pos:column="16">*<pos:position pos:line="1361" pos:column="17"/></modifier></type><name pos:line="1361" pos:column="17">sample_type<pos:position pos:line="1361" pos:column="28"/></name> <init pos:line="1361" pos:column="29">= <expr><name pos:line="1361" pos:column="31">NULL<pos:position pos:line="1361" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="1361" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="1362" pos:column="5">const<pos:position pos:line="1362" pos:column="10"/></specifier> <name pos:line="1362" pos:column="11">char<pos:position pos:line="1362" pos:column="15"/></name> <modifier pos:line="1362" pos:column="16">*<pos:position pos:line="1362" pos:column="17"/></modifier></type><name pos:line="1362" pos:column="17">sample_language<pos:position pos:line="1362" pos:column="32"/></name> <init pos:line="1362" pos:column="33">= <expr><name pos:line="1362" pos:column="35">NULL<pos:position pos:line="1362" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="1362" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="1363" pos:column="5">const<pos:position pos:line="1363" pos:column="10"/></specifier> <name pos:line="1363" pos:column="11">char<pos:position pos:line="1363" pos:column="15"/></name> <modifier pos:line="1363" pos:column="16">*<pos:position pos:line="1363" pos:column="17"/></modifier></type><name pos:line="1363" pos:column="17">sample_encoding<pos:position pos:line="1363" pos:column="32"/></name> <init pos:line="1363" pos:column="33">= <expr><name pos:line="1363" pos:column="35">NULL<pos:position pos:line="1363" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="1363" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="1364" pos:column="5">const<pos:position pos:line="1364" pos:column="10"/></specifier> <name pos:line="1364" pos:column="11">char<pos:position pos:line="1364" pos:column="15"/></name> <modifier pos:line="1364" pos:column="16">*<pos:position pos:line="1364" pos:column="17"/></modifier></type><name pos:line="1364" pos:column="17">sample_charset<pos:position pos:line="1364" pos:column="31"/></name> <init pos:line="1364" pos:column="32">= <expr><name pos:line="1364" pos:column="34">NULL<pos:position pos:line="1364" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="1364" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1365" pos:column="5">char<pos:position pos:line="1365" pos:column="9"/></name> <modifier pos:line="1365" pos:column="10">*<pos:position pos:line="1365" pos:column="11"/></modifier></type><name pos:line="1365" pos:column="11">lang<pos:position pos:line="1365" pos:column="15"/></name></decl>;<pos:position pos:line="1365" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1366" pos:column="5">char<pos:position pos:line="1366" pos:column="9"/></name> <modifier pos:line="1366" pos:column="10">*<pos:position pos:line="1366" pos:column="11"/></modifier></type><name pos:line="1366" pos:column="11">qstr<pos:position pos:line="1366" pos:column="15"/></name></decl>;<pos:position pos:line="1366" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1367" pos:column="5">apr_off_t<pos:position pos:line="1367" pos:column="14"/></name></type> <name pos:line="1367" pos:column="15">len<pos:position pos:line="1367" pos:column="18"/></name></decl>;<pos:position pos:line="1367" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1368" pos:column="5">apr_array_header_t<pos:position pos:line="1368" pos:column="23"/></name> <modifier pos:line="1368" pos:column="24">*<pos:position pos:line="1368" pos:column="25"/></modifier></type><name pos:line="1368" pos:column="25">arr<pos:position pos:line="1368" pos:column="28"/></name></decl>;<pos:position pos:line="1368" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1369" pos:column="5">int<pos:position pos:line="1369" pos:column="8"/></name></type> <name pos:line="1369" pos:column="9">max_vlist_array<pos:position pos:line="1369" pos:column="24"/></name> <init pos:line="1369" pos:column="25">= <expr><operator pos:line="1369" pos:column="27">(<pos:position pos:line="1369" pos:column="28"/></operator><name><name pos:line="1369" pos:column="28">neg<pos:position pos:line="1369" pos:column="31"/></name><operator pos:line="1369" pos:column="31">-&gt;<pos:position pos:line="1369" pos:column="36"/></operator><name pos:line="1369" pos:column="33">avail_vars<pos:position pos:line="1369" pos:column="43"/></name><operator pos:line="1369" pos:column="43">-&gt;<pos:position pos:line="1369" pos:column="48"/></operator><name pos:line="1369" pos:column="45">nelts<pos:position pos:line="1369" pos:column="50"/></name></name> <operator pos:line="1369" pos:column="51">*<pos:position pos:line="1369" pos:column="52"/></operator> <literal type="number" pos:line="1369" pos:column="53">21<pos:position pos:line="1369" pos:column="55"/></literal><operator pos:line="1369" pos:column="55">)<pos:position pos:line="1369" pos:column="56"/></operator></expr></init></decl>;<pos:position pos:line="1369" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1370" pos:column="5">int<pos:position pos:line="1370" pos:column="8"/></name></type> <name pos:line="1370" pos:column="9">first_variant<pos:position pos:line="1370" pos:column="22"/></name> <init pos:line="1370" pos:column="23">= <expr><literal type="number" pos:line="1370" pos:column="25">1<pos:position pos:line="1370" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="1370" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1371" pos:column="5">int<pos:position pos:line="1371" pos:column="8"/></name></type> <name pos:line="1371" pos:column="9">vary_by_type<pos:position pos:line="1371" pos:column="21"/></name> <init pos:line="1371" pos:column="22">= <expr><literal type="number" pos:line="1371" pos:column="24">0<pos:position pos:line="1371" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="1371" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1372" pos:column="5">int<pos:position pos:line="1372" pos:column="8"/></name></type> <name pos:line="1372" pos:column="9">vary_by_language<pos:position pos:line="1372" pos:column="25"/></name> <init pos:line="1372" pos:column="26">= <expr><literal type="number" pos:line="1372" pos:column="28">0<pos:position pos:line="1372" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="1372" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1373" pos:column="5">int<pos:position pos:line="1373" pos:column="8"/></name></type> <name pos:line="1373" pos:column="9">vary_by_charset<pos:position pos:line="1373" pos:column="24"/></name> <init pos:line="1373" pos:column="25">= <expr><literal type="number" pos:line="1373" pos:column="27">0<pos:position pos:line="1373" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="1373" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1374" pos:column="5">int<pos:position pos:line="1374" pos:column="8"/></name></type> <name pos:line="1374" pos:column="9">vary_by_encoding<pos:position pos:line="1374" pos:column="25"/></name> <init pos:line="1374" pos:column="26">= <expr><literal type="number" pos:line="1374" pos:column="28">0<pos:position pos:line="1374" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="1374" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1375" pos:column="5">int<pos:position pos:line="1375" pos:column="8"/></name></type> <name pos:line="1375" pos:column="9">j<pos:position pos:line="1375" pos:column="10"/></name></decl>;<pos:position pos:line="1375" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="1377" pos:column="5">/* In order to avoid O(n^2) memory copies in building Alternates,
     * we preallocate a apr_table_t with the maximum substrings possible,
     * fill it with the variant list, and then concatenate the entire array.
     * Note that if you change the number of substrings pushed, you also
     * need to change the calculation of max_vlist_array above.
     */</comment>
    <if pos:line="1383" pos:column="5">if <condition pos:line="1383" pos:column="8">(<expr><name><name pos:line="1383" pos:column="9">neg<pos:position pos:line="1383" pos:column="12"/></name><operator pos:line="1383" pos:column="12">-&gt;<pos:position pos:line="1383" pos:column="17"/></operator><name pos:line="1383" pos:column="14">send_alternates<pos:position pos:line="1383" pos:column="29"/></name></name> <operator pos:line="1383" pos:column="30">&amp;&amp;<pos:position pos:line="1383" pos:column="40"/></operator> <name><name pos:line="1383" pos:column="33">neg<pos:position pos:line="1383" pos:column="36"/></name><operator pos:line="1383" pos:column="36">-&gt;<pos:position pos:line="1383" pos:column="41"/></operator><name pos:line="1383" pos:column="38">avail_vars<pos:position pos:line="1383" pos:column="48"/></name><operator pos:line="1383" pos:column="48">-&gt;<pos:position pos:line="1383" pos:column="53"/></operator><name pos:line="1383" pos:column="50">nelts<pos:position pos:line="1383" pos:column="55"/></name></name></expr>)<pos:position pos:line="1383" pos:column="56"/></condition><then pos:line="1383" pos:column="56">
        <block type="pseudo"><expr_stmt><expr><name pos:line="1384" pos:column="9">arr<pos:position pos:line="1384" pos:column="12"/></name> <operator pos:line="1384" pos:column="13">=<pos:position pos:line="1384" pos:column="14"/></operator> <call><name pos:line="1384" pos:column="15">apr_array_make<pos:position pos:line="1384" pos:column="29"/></name><argument_list pos:line="1384" pos:column="29">(<argument><expr><name><name pos:line="1384" pos:column="30">r<pos:position pos:line="1384" pos:column="31"/></name><operator pos:line="1384" pos:column="31">-&gt;<pos:position pos:line="1384" pos:column="36"/></operator><name pos:line="1384" pos:column="33">pool<pos:position pos:line="1384" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="1384" pos:column="39">max_vlist_array<pos:position pos:line="1384" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="1384" pos:column="56">sizeof<argument_list pos:line="1384" pos:column="62">(<argument><expr><name pos:line="1384" pos:column="63">char<pos:position pos:line="1384" pos:column="67"/></name> <operator pos:line="1384" pos:column="68">*<pos:position pos:line="1384" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="1384" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1384" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="1384" pos:column="72"/></expr_stmt></block></then>
    <else pos:line="1385" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="1386" pos:column="9">arr<pos:position pos:line="1386" pos:column="12"/></name> <operator pos:line="1386" pos:column="13">=<pos:position pos:line="1386" pos:column="14"/></operator> <name pos:line="1386" pos:column="15">NULL<pos:position pos:line="1386" pos:column="19"/></name></expr>;<pos:position pos:line="1386" pos:column="20"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="1388" pos:column="5">/* Put headers into err_headers_out, since send_http_header()
     * outputs both headers_out and err_headers_out.
     */</comment>
    <expr_stmt><expr><name pos:line="1391" pos:column="5">hdrs<pos:position pos:line="1391" pos:column="9"/></name> <operator pos:line="1391" pos:column="10">=<pos:position pos:line="1391" pos:column="11"/></operator> <name><name pos:line="1391" pos:column="12">r<pos:position pos:line="1391" pos:column="13"/></name><operator pos:line="1391" pos:column="13">-&gt;<pos:position pos:line="1391" pos:column="18"/></operator><name pos:line="1391" pos:column="15">err_headers_out<pos:position pos:line="1391" pos:column="30"/></name></name></expr>;<pos:position pos:line="1391" pos:column="31"/></expr_stmt>

    <for pos:line="1393" pos:column="5">for <control pos:line="1393" pos:column="9">(<init><expr><name pos:line="1393" pos:column="10">j<pos:position pos:line="1393" pos:column="11"/></name> <operator pos:line="1393" pos:column="12">=<pos:position pos:line="1393" pos:column="13"/></operator> <literal type="number" pos:line="1393" pos:column="14">0<pos:position pos:line="1393" pos:column="15"/></literal></expr>;<pos:position pos:line="1393" pos:column="16"/></init> <condition><expr><name pos:line="1393" pos:column="17">j<pos:position pos:line="1393" pos:column="18"/></name> <operator pos:line="1393" pos:column="19">&lt;<pos:position pos:line="1393" pos:column="23"/></operator> <name><name pos:line="1393" pos:column="21">neg<pos:position pos:line="1393" pos:column="24"/></name><operator pos:line="1393" pos:column="24">-&gt;<pos:position pos:line="1393" pos:column="29"/></operator><name pos:line="1393" pos:column="26">avail_vars<pos:position pos:line="1393" pos:column="36"/></name><operator pos:line="1393" pos:column="36">-&gt;<pos:position pos:line="1393" pos:column="41"/></operator><name pos:line="1393" pos:column="38">nelts<pos:position pos:line="1393" pos:column="43"/></name></name></expr>;<pos:position pos:line="1393" pos:column="44"/></condition> <incr><expr><operator pos:line="1393" pos:column="45">++<pos:position pos:line="1393" pos:column="47"/></operator><name pos:line="1393" pos:column="47">j<pos:position pos:line="1393" pos:column="48"/></name></expr></incr>)<pos:position pos:line="1393" pos:column="49"/></control> <block pos:line="1393" pos:column="50">{
        <decl_stmt><decl><type><name pos:line="1394" pos:column="9">var_rec<pos:position pos:line="1394" pos:column="16"/></name> <modifier pos:line="1394" pos:column="17">*<pos:position pos:line="1394" pos:column="18"/></modifier></type><name pos:line="1394" pos:column="18">variant<pos:position pos:line="1394" pos:column="25"/></name> <init pos:line="1394" pos:column="26">= <expr><operator pos:line="1394" pos:column="28">&amp;<pos:position pos:line="1394" pos:column="33"/></operator><name><name pos:line="1394" pos:column="29">avail_recs<pos:position pos:line="1394" pos:column="39"/></name><index pos:line="1394" pos:column="39">[<expr><name pos:line="1394" pos:column="40">j<pos:position pos:line="1394" pos:column="41"/></name></expr>]<pos:position pos:line="1394" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="1394" pos:column="43"/></decl_stmt>

        <if pos:line="1396" pos:column="9">if <condition pos:line="1396" pos:column="12">(<expr><name><name pos:line="1396" pos:column="13">variant<pos:position pos:line="1396" pos:column="20"/></name><operator pos:line="1396" pos:column="20">-&gt;<pos:position pos:line="1396" pos:column="25"/></operator><name pos:line="1396" pos:column="22">content_languages<pos:position pos:line="1396" pos:column="39"/></name></name> <operator pos:line="1396" pos:column="40">&amp;&amp;<pos:position pos:line="1396" pos:column="50"/></operator> <name><name pos:line="1396" pos:column="43">variant<pos:position pos:line="1396" pos:column="50"/></name><operator pos:line="1396" pos:column="50">-&gt;<pos:position pos:line="1396" pos:column="55"/></operator><name pos:line="1396" pos:column="52">content_languages<pos:position pos:line="1396" pos:column="69"/></name><operator pos:line="1396" pos:column="69">-&gt;<pos:position pos:line="1396" pos:column="74"/></operator><name pos:line="1396" pos:column="71">nelts<pos:position pos:line="1396" pos:column="76"/></name></name></expr>)<pos:position pos:line="1396" pos:column="77"/></condition><then pos:line="1396" pos:column="77"> <block pos:line="1396" pos:column="78">{
            <expr_stmt><expr><name pos:line="1397" pos:column="13">lang<pos:position pos:line="1397" pos:column="17"/></name> <operator pos:line="1397" pos:column="18">=<pos:position pos:line="1397" pos:column="19"/></operator> <call><name pos:line="1397" pos:column="20">apr_array_pstrcat<pos:position pos:line="1397" pos:column="37"/></name><argument_list pos:line="1397" pos:column="37">(<argument><expr><name><name pos:line="1397" pos:column="38">r<pos:position pos:line="1397" pos:column="39"/></name><operator pos:line="1397" pos:column="39">-&gt;<pos:position pos:line="1397" pos:column="44"/></operator><name pos:line="1397" pos:column="41">pool<pos:position pos:line="1397" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1397" pos:column="47">variant<pos:position pos:line="1397" pos:column="54"/></name><operator pos:line="1397" pos:column="54">-&gt;<pos:position pos:line="1397" pos:column="59"/></operator><name pos:line="1397" pos:column="56">content_languages<pos:position pos:line="1397" pos:column="73"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="1397" pos:column="75">','<pos:position pos:line="1397" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="1397" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="1397" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="1398" pos:column="10"/></block></then>
        <else pos:line="1399" pos:column="9">else <block pos:line="1399" pos:column="14">{
            <expr_stmt><expr><name pos:line="1400" pos:column="13">lang<pos:position pos:line="1400" pos:column="17"/></name> <operator pos:line="1400" pos:column="18">=<pos:position pos:line="1400" pos:column="19"/></operator> <name pos:line="1400" pos:column="20">NULL<pos:position pos:line="1400" pos:column="24"/></name></expr>;<pos:position pos:line="1400" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="1401" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="1403" pos:column="9">/* Calculate Vary by looking for any difference between variants */</comment>

        <if pos:line="1405" pos:column="9">if <condition pos:line="1405" pos:column="12">(<expr><name pos:line="1405" pos:column="13">first_variant<pos:position pos:line="1405" pos:column="26"/></name></expr>)<pos:position pos:line="1405" pos:column="27"/></condition><then pos:line="1405" pos:column="27"> <block pos:line="1405" pos:column="28">{
            <expr_stmt><expr><name pos:line="1406" pos:column="13">sample_type<pos:position pos:line="1406" pos:column="24"/></name>     <operator pos:line="1406" pos:column="29">=<pos:position pos:line="1406" pos:column="30"/></operator> <name><name pos:line="1406" pos:column="31">variant<pos:position pos:line="1406" pos:column="38"/></name><operator pos:line="1406" pos:column="38">-&gt;<pos:position pos:line="1406" pos:column="43"/></operator><name pos:line="1406" pos:column="40">mime_type<pos:position pos:line="1406" pos:column="49"/></name></name></expr>;<pos:position pos:line="1406" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name pos:line="1407" pos:column="13">sample_charset<pos:position pos:line="1407" pos:column="27"/></name>  <operator pos:line="1407" pos:column="29">=<pos:position pos:line="1407" pos:column="30"/></operator> <name><name pos:line="1407" pos:column="31">variant<pos:position pos:line="1407" pos:column="38"/></name><operator pos:line="1407" pos:column="38">-&gt;<pos:position pos:line="1407" pos:column="43"/></operator><name pos:line="1407" pos:column="40">content_charset<pos:position pos:line="1407" pos:column="55"/></name></name></expr>;<pos:position pos:line="1407" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name pos:line="1408" pos:column="13">sample_language<pos:position pos:line="1408" pos:column="28"/></name> <operator pos:line="1408" pos:column="29">=<pos:position pos:line="1408" pos:column="30"/></operator> <name pos:line="1408" pos:column="31">lang<pos:position pos:line="1408" pos:column="35"/></name></expr>;<pos:position pos:line="1408" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><name pos:line="1409" pos:column="13">sample_encoding<pos:position pos:line="1409" pos:column="28"/></name> <operator pos:line="1409" pos:column="29">=<pos:position pos:line="1409" pos:column="30"/></operator> <name><name pos:line="1409" pos:column="31">variant<pos:position pos:line="1409" pos:column="38"/></name><operator pos:line="1409" pos:column="38">-&gt;<pos:position pos:line="1409" pos:column="43"/></operator><name pos:line="1409" pos:column="40">content_encoding<pos:position pos:line="1409" pos:column="56"/></name></name></expr>;<pos:position pos:line="1409" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="1410" pos:column="10"/></block></then>
        <else pos:line="1411" pos:column="9">else <block pos:line="1411" pos:column="14">{
            <if pos:line="1412" pos:column="13">if <condition pos:line="1412" pos:column="16">(<expr><operator pos:line="1412" pos:column="17">!<pos:position pos:line="1412" pos:column="18"/></operator><name pos:line="1412" pos:column="18">vary_by_type<pos:position pos:line="1412" pos:column="30"/></name> <operator pos:line="1412" pos:column="31">&amp;&amp;<pos:position pos:line="1412" pos:column="41"/></operator>
                <call><name pos:line="1413" pos:column="17">strcmp<pos:position pos:line="1413" pos:column="23"/></name><argument_list pos:line="1413" pos:column="23">(<argument><expr><ternary><condition><expr><name pos:line="1413" pos:column="24">sample_type<pos:position pos:line="1413" pos:column="35"/></name></expr> ?<pos:position pos:line="1413" pos:column="37"/></condition><then pos:line="1413" pos:column="37"> <expr><name pos:line="1413" pos:column="38">sample_type<pos:position pos:line="1413" pos:column="49"/></name></expr> <pos:position pos:line="1413" pos:column="50"/></then><else pos:line="1413" pos:column="50">: <expr><literal type="string" pos:line="1413" pos:column="52">""<pos:position pos:line="1413" pos:column="54"/></literal></expr></else></ternary></expr></argument>,
                       <argument><expr><ternary><condition><expr><name><name pos:line="1414" pos:column="24">variant<pos:position pos:line="1414" pos:column="31"/></name><operator pos:line="1414" pos:column="31">-&gt;<pos:position pos:line="1414" pos:column="36"/></operator><name pos:line="1414" pos:column="33">mime_type<pos:position pos:line="1414" pos:column="42"/></name></name></expr> ?<pos:position pos:line="1414" pos:column="44"/></condition><then pos:line="1414" pos:column="44"> <expr><name><name pos:line="1414" pos:column="45">variant<pos:position pos:line="1414" pos:column="52"/></name><operator pos:line="1414" pos:column="52">-&gt;<pos:position pos:line="1414" pos:column="57"/></operator><name pos:line="1414" pos:column="54">mime_type<pos:position pos:line="1414" pos:column="63"/></name></name></expr> <pos:position pos:line="1414" pos:column="64"/></then><else pos:line="1414" pos:column="64">: <expr><literal type="string" pos:line="1414" pos:column="66">""<pos:position pos:line="1414" pos:column="68"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="1414" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="1414" pos:column="70"/></condition><then pos:line="1414" pos:column="70"> <block pos:line="1414" pos:column="71">{
                <expr_stmt><expr><name pos:line="1415" pos:column="17">vary_by_type<pos:position pos:line="1415" pos:column="29"/></name> <operator pos:line="1415" pos:column="30">=<pos:position pos:line="1415" pos:column="31"/></operator> <literal type="number" pos:line="1415" pos:column="32">1<pos:position pos:line="1415" pos:column="33"/></literal></expr>;<pos:position pos:line="1415" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="1416" pos:column="14"/></block></then></if>
            <if pos:line="1417" pos:column="13">if <condition pos:line="1417" pos:column="16">(<expr><operator pos:line="1417" pos:column="17">!<pos:position pos:line="1417" pos:column="18"/></operator><name pos:line="1417" pos:column="18">vary_by_charset<pos:position pos:line="1417" pos:column="33"/></name> <operator pos:line="1417" pos:column="34">&amp;&amp;<pos:position pos:line="1417" pos:column="44"/></operator>
                <call><name pos:line="1418" pos:column="17">strcmp<pos:position pos:line="1418" pos:column="23"/></name><argument_list pos:line="1418" pos:column="23">(<argument><expr><ternary><condition><expr><name pos:line="1418" pos:column="24">sample_charset<pos:position pos:line="1418" pos:column="38"/></name></expr> ?<pos:position pos:line="1418" pos:column="40"/></condition><then pos:line="1418" pos:column="40"> <expr><name pos:line="1418" pos:column="41">sample_charset<pos:position pos:line="1418" pos:column="55"/></name></expr> <pos:position pos:line="1418" pos:column="56"/></then><else pos:line="1418" pos:column="56">: <expr><literal type="string" pos:line="1418" pos:column="58">""<pos:position pos:line="1418" pos:column="60"/></literal></expr></else></ternary></expr></argument>,
                       <argument><expr><ternary><condition><expr><name><name pos:line="1419" pos:column="24">variant<pos:position pos:line="1419" pos:column="31"/></name><operator pos:line="1419" pos:column="31">-&gt;<pos:position pos:line="1419" pos:column="36"/></operator><name pos:line="1419" pos:column="33">content_charset<pos:position pos:line="1419" pos:column="48"/></name></name></expr> ?<pos:position pos:line="1419" pos:column="50"/></condition><then pos:line="1419" pos:column="50">
                       <expr><name><name pos:line="1420" pos:column="24">variant<pos:position pos:line="1420" pos:column="31"/></name><operator pos:line="1420" pos:column="31">-&gt;<pos:position pos:line="1420" pos:column="36"/></operator><name pos:line="1420" pos:column="33">content_charset<pos:position pos:line="1420" pos:column="48"/></name></name></expr> <pos:position pos:line="1420" pos:column="49"/></then><else pos:line="1420" pos:column="49">: <expr><literal type="string" pos:line="1420" pos:column="51">""<pos:position pos:line="1420" pos:column="53"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="1420" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="1420" pos:column="55"/></condition><then pos:line="1420" pos:column="55"> <block pos:line="1420" pos:column="56">{
                <expr_stmt><expr><name pos:line="1421" pos:column="17">vary_by_charset<pos:position pos:line="1421" pos:column="32"/></name> <operator pos:line="1421" pos:column="33">=<pos:position pos:line="1421" pos:column="34"/></operator> <literal type="number" pos:line="1421" pos:column="35">1<pos:position pos:line="1421" pos:column="36"/></literal></expr>;<pos:position pos:line="1421" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="1422" pos:column="14"/></block></then></if>
            <if pos:line="1423" pos:column="13">if <condition pos:line="1423" pos:column="16">(<expr><operator pos:line="1423" pos:column="17">!<pos:position pos:line="1423" pos:column="18"/></operator><name pos:line="1423" pos:column="18">vary_by_language<pos:position pos:line="1423" pos:column="34"/></name> <operator pos:line="1423" pos:column="35">&amp;&amp;<pos:position pos:line="1423" pos:column="45"/></operator>
                <call><name pos:line="1424" pos:column="17">strcmp<pos:position pos:line="1424" pos:column="23"/></name><argument_list pos:line="1424" pos:column="23">(<argument><expr><ternary><condition><expr><name pos:line="1424" pos:column="24">sample_language<pos:position pos:line="1424" pos:column="39"/></name></expr> ?<pos:position pos:line="1424" pos:column="41"/></condition><then pos:line="1424" pos:column="41"> <expr><name pos:line="1424" pos:column="42">sample_language<pos:position pos:line="1424" pos:column="57"/></name></expr> <pos:position pos:line="1424" pos:column="58"/></then><else pos:line="1424" pos:column="58">: <expr><literal type="string" pos:line="1424" pos:column="60">""<pos:position pos:line="1424" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
                       <argument><expr><ternary><condition><expr><name pos:line="1425" pos:column="24">lang<pos:position pos:line="1425" pos:column="28"/></name></expr> ?<pos:position pos:line="1425" pos:column="30"/></condition><then pos:line="1425" pos:column="30"> <expr><name pos:line="1425" pos:column="31">lang<pos:position pos:line="1425" pos:column="35"/></name></expr> <pos:position pos:line="1425" pos:column="36"/></then><else pos:line="1425" pos:column="36">: <expr><literal type="string" pos:line="1425" pos:column="38">""<pos:position pos:line="1425" pos:column="40"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="1425" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="1425" pos:column="42"/></condition><then pos:line="1425" pos:column="42"> <block pos:line="1425" pos:column="43">{
                <expr_stmt><expr><name pos:line="1426" pos:column="17">vary_by_language<pos:position pos:line="1426" pos:column="33"/></name> <operator pos:line="1426" pos:column="34">=<pos:position pos:line="1426" pos:column="35"/></operator> <literal type="number" pos:line="1426" pos:column="36">1<pos:position pos:line="1426" pos:column="37"/></literal></expr>;<pos:position pos:line="1426" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="1427" pos:column="14"/></block></then></if>
            <if pos:line="1428" pos:column="13">if <condition pos:line="1428" pos:column="16">(<expr><operator pos:line="1428" pos:column="17">!<pos:position pos:line="1428" pos:column="18"/></operator><name pos:line="1428" pos:column="18">vary_by_encoding<pos:position pos:line="1428" pos:column="34"/></name> <operator pos:line="1428" pos:column="35">&amp;&amp;<pos:position pos:line="1428" pos:column="45"/></operator>
                <call><name pos:line="1429" pos:column="17">strcmp<pos:position pos:line="1429" pos:column="23"/></name><argument_list pos:line="1429" pos:column="23">(<argument><expr><ternary><condition><expr><name pos:line="1429" pos:column="24">sample_encoding<pos:position pos:line="1429" pos:column="39"/></name></expr> ?<pos:position pos:line="1429" pos:column="41"/></condition><then pos:line="1429" pos:column="41"> <expr><name pos:line="1429" pos:column="42">sample_encoding<pos:position pos:line="1429" pos:column="57"/></name></expr> <pos:position pos:line="1429" pos:column="58"/></then><else pos:line="1429" pos:column="58">: <expr><literal type="string" pos:line="1429" pos:column="60">""<pos:position pos:line="1429" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
                       <argument><expr><ternary><condition><expr><name><name pos:line="1430" pos:column="24">variant<pos:position pos:line="1430" pos:column="31"/></name><operator pos:line="1430" pos:column="31">-&gt;<pos:position pos:line="1430" pos:column="36"/></operator><name pos:line="1430" pos:column="33">content_encoding<pos:position pos:line="1430" pos:column="49"/></name></name></expr> ?<pos:position pos:line="1430" pos:column="51"/></condition><then pos:line="1430" pos:column="51">
                       <expr><name><name pos:line="1431" pos:column="24">variant<pos:position pos:line="1431" pos:column="31"/></name><operator pos:line="1431" pos:column="31">-&gt;<pos:position pos:line="1431" pos:column="36"/></operator><name pos:line="1431" pos:column="33">content_encoding<pos:position pos:line="1431" pos:column="49"/></name></name></expr> <pos:position pos:line="1431" pos:column="50"/></then><else pos:line="1431" pos:column="50">: <expr><literal type="string" pos:line="1431" pos:column="52">""<pos:position pos:line="1431" pos:column="54"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="1431" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="1431" pos:column="56"/></condition><then pos:line="1431" pos:column="56"> <block pos:line="1431" pos:column="57">{
                <expr_stmt><expr><name pos:line="1432" pos:column="17">vary_by_encoding<pos:position pos:line="1432" pos:column="33"/></name> <operator pos:line="1432" pos:column="34">=<pos:position pos:line="1432" pos:column="35"/></operator> <literal type="number" pos:line="1432" pos:column="36">1<pos:position pos:line="1432" pos:column="37"/></literal></expr>;<pos:position pos:line="1432" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="1433" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1434" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="1435" pos:column="9">first_variant<pos:position pos:line="1435" pos:column="22"/></name> <operator pos:line="1435" pos:column="23">=<pos:position pos:line="1435" pos:column="24"/></operator> <literal type="number" pos:line="1435" pos:column="25">0<pos:position pos:line="1435" pos:column="26"/></literal></expr>;<pos:position pos:line="1435" pos:column="27"/></expr_stmt>

        <if pos:line="1437" pos:column="9">if <condition pos:line="1437" pos:column="12">(<expr><operator pos:line="1437" pos:column="13">!<pos:position pos:line="1437" pos:column="14"/></operator><name><name pos:line="1437" pos:column="14">neg<pos:position pos:line="1437" pos:column="17"/></name><operator pos:line="1437" pos:column="17">-&gt;<pos:position pos:line="1437" pos:column="22"/></operator><name pos:line="1437" pos:column="19">send_alternates<pos:position pos:line="1437" pos:column="34"/></name></name></expr>)<pos:position pos:line="1437" pos:column="35"/></condition><then pos:line="1437" pos:column="35">
            <block type="pseudo"><continue pos:line="1438" pos:column="13">continue;<pos:position pos:line="1438" pos:column="22"/></continue></block></then></if>

        <comment type="block" pos:line="1440" pos:column="9">/* Generate the string components for this Alternates entry */</comment>

        <expr_stmt><expr><operator pos:line="1442" pos:column="9">*<pos:position pos:line="1442" pos:column="10"/></operator><operator pos:line="1442" pos:column="10">(<pos:position pos:line="1442" pos:column="11"/></operator><operator pos:line="1442" pos:column="11">(<pos:position pos:line="1442" pos:column="12"/></operator><specifier pos:line="1442" pos:column="12">const<pos:position pos:line="1442" pos:column="17"/></specifier> <name pos:line="1442" pos:column="18">char<pos:position pos:line="1442" pos:column="22"/></name> <operator pos:line="1442" pos:column="23">*<pos:position pos:line="1442" pos:column="24"/></operator><operator pos:line="1442" pos:column="24">*<pos:position pos:line="1442" pos:column="25"/></operator><operator pos:line="1442" pos:column="25">)<pos:position pos:line="1442" pos:column="26"/></operator> <call><name pos:line="1442" pos:column="27">apr_array_push<pos:position pos:line="1442" pos:column="41"/></name><argument_list pos:line="1442" pos:column="41">(<argument><expr><name pos:line="1442" pos:column="42">arr<pos:position pos:line="1442" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1442" pos:column="46"/></argument_list></call><operator pos:line="1442" pos:column="46">)<pos:position pos:line="1442" pos:column="47"/></operator> <operator pos:line="1442" pos:column="48">=<pos:position pos:line="1442" pos:column="49"/></operator> <literal type="string" pos:line="1442" pos:column="50">"{\""<pos:position pos:line="1442" pos:column="55"/></literal></expr>;<pos:position pos:line="1442" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="1443" pos:column="9">*<pos:position pos:line="1443" pos:column="10"/></operator><operator pos:line="1443" pos:column="10">(<pos:position pos:line="1443" pos:column="11"/></operator><operator pos:line="1443" pos:column="11">(<pos:position pos:line="1443" pos:column="12"/></operator><specifier pos:line="1443" pos:column="12">const<pos:position pos:line="1443" pos:column="17"/></specifier> <name pos:line="1443" pos:column="18">char<pos:position pos:line="1443" pos:column="22"/></name> <operator pos:line="1443" pos:column="23">*<pos:position pos:line="1443" pos:column="24"/></operator><operator pos:line="1443" pos:column="24">*<pos:position pos:line="1443" pos:column="25"/></operator><operator pos:line="1443" pos:column="25">)<pos:position pos:line="1443" pos:column="26"/></operator> <call><name pos:line="1443" pos:column="27">apr_array_push<pos:position pos:line="1443" pos:column="41"/></name><argument_list pos:line="1443" pos:column="41">(<argument><expr><name pos:line="1443" pos:column="42">arr<pos:position pos:line="1443" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1443" pos:column="46"/></argument_list></call><operator pos:line="1443" pos:column="46">)<pos:position pos:line="1443" pos:column="47"/></operator> <operator pos:line="1443" pos:column="48">=<pos:position pos:line="1443" pos:column="49"/></operator> <call><name pos:line="1443" pos:column="50">ap_escape_path_segment<pos:position pos:line="1443" pos:column="72"/></name><argument_list pos:line="1443" pos:column="72">(<argument><expr><name><name pos:line="1443" pos:column="73">r<pos:position pos:line="1443" pos:column="74"/></name><operator pos:line="1443" pos:column="74">-&gt;<pos:position pos:line="1443" pos:column="79"/></operator><name pos:line="1443" pos:column="76">pool<pos:position pos:line="1443" pos:column="80"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1443" pos:column="82">variant<pos:position pos:line="1443" pos:column="89"/></name><operator pos:line="1443" pos:column="89">-&gt;<pos:position pos:line="1443" pos:column="94"/></operator><name pos:line="1443" pos:column="91">file_name<pos:position pos:line="1443" pos:column="100"/></name></name></expr></argument>)<pos:position pos:line="1443" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="1443" pos:column="102"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="1444" pos:column="9">*<pos:position pos:line="1444" pos:column="10"/></operator><operator pos:line="1444" pos:column="10">(<pos:position pos:line="1444" pos:column="11"/></operator><operator pos:line="1444" pos:column="11">(<pos:position pos:line="1444" pos:column="12"/></operator><specifier pos:line="1444" pos:column="12">const<pos:position pos:line="1444" pos:column="17"/></specifier> <name pos:line="1444" pos:column="18">char<pos:position pos:line="1444" pos:column="22"/></name> <operator pos:line="1444" pos:column="23">*<pos:position pos:line="1444" pos:column="24"/></operator><operator pos:line="1444" pos:column="24">*<pos:position pos:line="1444" pos:column="25"/></operator><operator pos:line="1444" pos:column="25">)<pos:position pos:line="1444" pos:column="26"/></operator> <call><name pos:line="1444" pos:column="27">apr_array_push<pos:position pos:line="1444" pos:column="41"/></name><argument_list pos:line="1444" pos:column="41">(<argument><expr><name pos:line="1444" pos:column="42">arr<pos:position pos:line="1444" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1444" pos:column="46"/></argument_list></call><operator pos:line="1444" pos:column="46">)<pos:position pos:line="1444" pos:column="47"/></operator> <operator pos:line="1444" pos:column="48">=<pos:position pos:line="1444" pos:column="49"/></operator> <literal type="string" pos:line="1444" pos:column="50">"\" "<pos:position pos:line="1444" pos:column="55"/></literal></expr>;<pos:position pos:line="1444" pos:column="56"/></expr_stmt>

        <expr_stmt><expr><name pos:line="1446" pos:column="9">qstr<pos:position pos:line="1446" pos:column="13"/></name> <operator pos:line="1446" pos:column="14">=<pos:position pos:line="1446" pos:column="15"/></operator> <operator pos:line="1446" pos:column="16">(<pos:position pos:line="1446" pos:column="17"/></operator><name pos:line="1446" pos:column="17">char<pos:position pos:line="1446" pos:column="21"/></name> <operator pos:line="1446" pos:column="22">*<pos:position pos:line="1446" pos:column="23"/></operator><operator pos:line="1446" pos:column="23">)<pos:position pos:line="1446" pos:column="24"/></operator> <call><name pos:line="1446" pos:column="25">apr_palloc<pos:position pos:line="1446" pos:column="35"/></name><argument_list pos:line="1446" pos:column="35">(<argument><expr><name><name pos:line="1446" pos:column="36">r<pos:position pos:line="1446" pos:column="37"/></name><operator pos:line="1446" pos:column="37">-&gt;<pos:position pos:line="1446" pos:column="42"/></operator><name pos:line="1446" pos:column="39">pool<pos:position pos:line="1446" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="1446" pos:column="45">6<pos:position pos:line="1446" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="1446" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="1446" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1447" pos:column="9">apr_snprintf<pos:position pos:line="1447" pos:column="21"/></name><argument_list pos:line="1447" pos:column="21">(<argument><expr><name pos:line="1447" pos:column="22">qstr<pos:position pos:line="1447" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1447" pos:column="28">6<pos:position pos:line="1447" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1447" pos:column="31">"%1.3f"<pos:position pos:line="1447" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="1447" pos:column="40">variant<pos:position pos:line="1447" pos:column="47"/></name><operator pos:line="1447" pos:column="47">-&gt;<pos:position pos:line="1447" pos:column="52"/></operator><name pos:line="1447" pos:column="49">source_quality<pos:position pos:line="1447" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="1447" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="1447" pos:column="65"/></expr_stmt>

        <comment type="block" pos:line="1449" pos:column="9">/* Strip trailing zeros (saves those valuable network bytes) */</comment>
        <if pos:line="1450" pos:column="9">if <condition pos:line="1450" pos:column="12">(<expr><name><name pos:line="1450" pos:column="13">qstr<pos:position pos:line="1450" pos:column="17"/></name><index pos:line="1450" pos:column="17">[<expr><literal type="number" pos:line="1450" pos:column="18">4<pos:position pos:line="1450" pos:column="19"/></literal></expr>]<pos:position pos:line="1450" pos:column="20"/></index></name> <operator pos:line="1450" pos:column="21">==<pos:position pos:line="1450" pos:column="23"/></operator> <literal type="char" pos:line="1450" pos:column="24">'0'<pos:position pos:line="1450" pos:column="27"/></literal></expr>)<pos:position pos:line="1450" pos:column="28"/></condition><then pos:line="1450" pos:column="28"> <block pos:line="1450" pos:column="29">{
            <expr_stmt><expr><name><name pos:line="1451" pos:column="13">qstr<pos:position pos:line="1451" pos:column="17"/></name><index pos:line="1451" pos:column="17">[<expr><literal type="number" pos:line="1451" pos:column="18">4<pos:position pos:line="1451" pos:column="19"/></literal></expr>]<pos:position pos:line="1451" pos:column="20"/></index></name> <operator pos:line="1451" pos:column="21">=<pos:position pos:line="1451" pos:column="22"/></operator> <literal type="char" pos:line="1451" pos:column="23">'\0'<pos:position pos:line="1451" pos:column="27"/></literal></expr>;<pos:position pos:line="1451" pos:column="28"/></expr_stmt>
            <if pos:line="1452" pos:column="13">if <condition pos:line="1452" pos:column="16">(<expr><name><name pos:line="1452" pos:column="17">qstr<pos:position pos:line="1452" pos:column="21"/></name><index pos:line="1452" pos:column="21">[<expr><literal type="number" pos:line="1452" pos:column="22">3<pos:position pos:line="1452" pos:column="23"/></literal></expr>]<pos:position pos:line="1452" pos:column="24"/></index></name> <operator pos:line="1452" pos:column="25">==<pos:position pos:line="1452" pos:column="27"/></operator> <literal type="char" pos:line="1452" pos:column="28">'0'<pos:position pos:line="1452" pos:column="31"/></literal></expr>)<pos:position pos:line="1452" pos:column="32"/></condition><then pos:line="1452" pos:column="32"> <block pos:line="1452" pos:column="33">{
                <expr_stmt><expr><name><name pos:line="1453" pos:column="17">qstr<pos:position pos:line="1453" pos:column="21"/></name><index pos:line="1453" pos:column="21">[<expr><literal type="number" pos:line="1453" pos:column="22">3<pos:position pos:line="1453" pos:column="23"/></literal></expr>]<pos:position pos:line="1453" pos:column="24"/></index></name> <operator pos:line="1453" pos:column="25">=<pos:position pos:line="1453" pos:column="26"/></operator> <literal type="char" pos:line="1453" pos:column="27">'\0'<pos:position pos:line="1453" pos:column="31"/></literal></expr>;<pos:position pos:line="1453" pos:column="32"/></expr_stmt>
                <if pos:line="1454" pos:column="17">if <condition pos:line="1454" pos:column="20">(<expr><name><name pos:line="1454" pos:column="21">qstr<pos:position pos:line="1454" pos:column="25"/></name><index pos:line="1454" pos:column="25">[<expr><literal type="number" pos:line="1454" pos:column="26">2<pos:position pos:line="1454" pos:column="27"/></literal></expr>]<pos:position pos:line="1454" pos:column="28"/></index></name> <operator pos:line="1454" pos:column="29">==<pos:position pos:line="1454" pos:column="31"/></operator> <literal type="char" pos:line="1454" pos:column="32">'0'<pos:position pos:line="1454" pos:column="35"/></literal></expr>)<pos:position pos:line="1454" pos:column="36"/></condition><then pos:line="1454" pos:column="36"> <block pos:line="1454" pos:column="37">{
                    <expr_stmt><expr><name><name pos:line="1455" pos:column="21">qstr<pos:position pos:line="1455" pos:column="25"/></name><index pos:line="1455" pos:column="25">[<expr><literal type="number" pos:line="1455" pos:column="26">1<pos:position pos:line="1455" pos:column="27"/></literal></expr>]<pos:position pos:line="1455" pos:column="28"/></index></name> <operator pos:line="1455" pos:column="29">=<pos:position pos:line="1455" pos:column="30"/></operator> <literal type="char" pos:line="1455" pos:column="31">'\0'<pos:position pos:line="1455" pos:column="35"/></literal></expr>;<pos:position pos:line="1455" pos:column="36"/></expr_stmt>
                }<pos:position pos:line="1456" pos:column="18"/></block></then></if>
            }<pos:position pos:line="1457" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1458" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="1459" pos:column="9">*<pos:position pos:line="1459" pos:column="10"/></operator><operator pos:line="1459" pos:column="10">(<pos:position pos:line="1459" pos:column="11"/></operator><operator pos:line="1459" pos:column="11">(<pos:position pos:line="1459" pos:column="12"/></operator><specifier pos:line="1459" pos:column="12">const<pos:position pos:line="1459" pos:column="17"/></specifier> <name pos:line="1459" pos:column="18">char<pos:position pos:line="1459" pos:column="22"/></name> <operator pos:line="1459" pos:column="23">*<pos:position pos:line="1459" pos:column="24"/></operator><operator pos:line="1459" pos:column="24">*<pos:position pos:line="1459" pos:column="25"/></operator><operator pos:line="1459" pos:column="25">)<pos:position pos:line="1459" pos:column="26"/></operator> <call><name pos:line="1459" pos:column="27">apr_array_push<pos:position pos:line="1459" pos:column="41"/></name><argument_list pos:line="1459" pos:column="41">(<argument><expr><name pos:line="1459" pos:column="42">arr<pos:position pos:line="1459" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1459" pos:column="46"/></argument_list></call><operator pos:line="1459" pos:column="46">)<pos:position pos:line="1459" pos:column="47"/></operator> <operator pos:line="1459" pos:column="48">=<pos:position pos:line="1459" pos:column="49"/></operator> <name pos:line="1459" pos:column="50">qstr<pos:position pos:line="1459" pos:column="54"/></name></expr>;<pos:position pos:line="1459" pos:column="55"/></expr_stmt>

        <if pos:line="1461" pos:column="9">if <condition pos:line="1461" pos:column="12">(<expr><name><name pos:line="1461" pos:column="13">variant<pos:position pos:line="1461" pos:column="20"/></name><operator pos:line="1461" pos:column="20">-&gt;<pos:position pos:line="1461" pos:column="25"/></operator><name pos:line="1461" pos:column="22">mime_type<pos:position pos:line="1461" pos:column="31"/></name></name> <operator pos:line="1461" pos:column="32">&amp;&amp;<pos:position pos:line="1461" pos:column="42"/></operator> <operator pos:line="1461" pos:column="35">*<pos:position pos:line="1461" pos:column="36"/></operator><name><name pos:line="1461" pos:column="36">variant<pos:position pos:line="1461" pos:column="43"/></name><operator pos:line="1461" pos:column="43">-&gt;<pos:position pos:line="1461" pos:column="48"/></operator><name pos:line="1461" pos:column="45">mime_type<pos:position pos:line="1461" pos:column="54"/></name></name></expr>)<pos:position pos:line="1461" pos:column="55"/></condition><then pos:line="1461" pos:column="55"> <block pos:line="1461" pos:column="56">{
            <expr_stmt><expr><operator pos:line="1462" pos:column="13">*<pos:position pos:line="1462" pos:column="14"/></operator><operator pos:line="1462" pos:column="14">(<pos:position pos:line="1462" pos:column="15"/></operator><operator pos:line="1462" pos:column="15">(<pos:position pos:line="1462" pos:column="16"/></operator><specifier pos:line="1462" pos:column="16">const<pos:position pos:line="1462" pos:column="21"/></specifier> <name pos:line="1462" pos:column="22">char<pos:position pos:line="1462" pos:column="26"/></name> <operator pos:line="1462" pos:column="27">*<pos:position pos:line="1462" pos:column="28"/></operator><operator pos:line="1462" pos:column="28">*<pos:position pos:line="1462" pos:column="29"/></operator><operator pos:line="1462" pos:column="29">)<pos:position pos:line="1462" pos:column="30"/></operator> <call><name pos:line="1462" pos:column="31">apr_array_push<pos:position pos:line="1462" pos:column="45"/></name><argument_list pos:line="1462" pos:column="45">(<argument><expr><name pos:line="1462" pos:column="46">arr<pos:position pos:line="1462" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1462" pos:column="50"/></argument_list></call><operator pos:line="1462" pos:column="50">)<pos:position pos:line="1462" pos:column="51"/></operator> <operator pos:line="1462" pos:column="52">=<pos:position pos:line="1462" pos:column="53"/></operator> <literal type="string" pos:line="1462" pos:column="54">" {type "<pos:position pos:line="1462" pos:column="63"/></literal></expr>;<pos:position pos:line="1462" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1463" pos:column="13">*<pos:position pos:line="1463" pos:column="14"/></operator><operator pos:line="1463" pos:column="14">(<pos:position pos:line="1463" pos:column="15"/></operator><operator pos:line="1463" pos:column="15">(<pos:position pos:line="1463" pos:column="16"/></operator><specifier pos:line="1463" pos:column="16">const<pos:position pos:line="1463" pos:column="21"/></specifier> <name pos:line="1463" pos:column="22">char<pos:position pos:line="1463" pos:column="26"/></name> <operator pos:line="1463" pos:column="27">*<pos:position pos:line="1463" pos:column="28"/></operator><operator pos:line="1463" pos:column="28">*<pos:position pos:line="1463" pos:column="29"/></operator><operator pos:line="1463" pos:column="29">)<pos:position pos:line="1463" pos:column="30"/></operator> <call><name pos:line="1463" pos:column="31">apr_array_push<pos:position pos:line="1463" pos:column="45"/></name><argument_list pos:line="1463" pos:column="45">(<argument><expr><name pos:line="1463" pos:column="46">arr<pos:position pos:line="1463" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1463" pos:column="50"/></argument_list></call><operator pos:line="1463" pos:column="50">)<pos:position pos:line="1463" pos:column="51"/></operator> <operator pos:line="1463" pos:column="52">=<pos:position pos:line="1463" pos:column="53"/></operator> <name><name pos:line="1463" pos:column="54">variant<pos:position pos:line="1463" pos:column="61"/></name><operator pos:line="1463" pos:column="61">-&gt;<pos:position pos:line="1463" pos:column="66"/></operator><name pos:line="1463" pos:column="63">mime_type<pos:position pos:line="1463" pos:column="72"/></name></name></expr>;<pos:position pos:line="1463" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1464" pos:column="13">*<pos:position pos:line="1464" pos:column="14"/></operator><operator pos:line="1464" pos:column="14">(<pos:position pos:line="1464" pos:column="15"/></operator><operator pos:line="1464" pos:column="15">(<pos:position pos:line="1464" pos:column="16"/></operator><specifier pos:line="1464" pos:column="16">const<pos:position pos:line="1464" pos:column="21"/></specifier> <name pos:line="1464" pos:column="22">char<pos:position pos:line="1464" pos:column="26"/></name> <operator pos:line="1464" pos:column="27">*<pos:position pos:line="1464" pos:column="28"/></operator><operator pos:line="1464" pos:column="28">*<pos:position pos:line="1464" pos:column="29"/></operator><operator pos:line="1464" pos:column="29">)<pos:position pos:line="1464" pos:column="30"/></operator> <call><name pos:line="1464" pos:column="31">apr_array_push<pos:position pos:line="1464" pos:column="45"/></name><argument_list pos:line="1464" pos:column="45">(<argument><expr><name pos:line="1464" pos:column="46">arr<pos:position pos:line="1464" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1464" pos:column="50"/></argument_list></call><operator pos:line="1464" pos:column="50">)<pos:position pos:line="1464" pos:column="51"/></operator> <operator pos:line="1464" pos:column="52">=<pos:position pos:line="1464" pos:column="53"/></operator> <literal type="string" pos:line="1464" pos:column="54">"}"<pos:position pos:line="1464" pos:column="57"/></literal></expr>;<pos:position pos:line="1464" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="1465" pos:column="10"/></block></then></if>
        <if pos:line="1466" pos:column="9">if <condition pos:line="1466" pos:column="12">(<expr><name><name pos:line="1466" pos:column="13">variant<pos:position pos:line="1466" pos:column="20"/></name><operator pos:line="1466" pos:column="20">-&gt;<pos:position pos:line="1466" pos:column="25"/></operator><name pos:line="1466" pos:column="22">content_charset<pos:position pos:line="1466" pos:column="37"/></name></name> <operator pos:line="1466" pos:column="38">&amp;&amp;<pos:position pos:line="1466" pos:column="48"/></operator> <operator pos:line="1466" pos:column="41">*<pos:position pos:line="1466" pos:column="42"/></operator><name><name pos:line="1466" pos:column="42">variant<pos:position pos:line="1466" pos:column="49"/></name><operator pos:line="1466" pos:column="49">-&gt;<pos:position pos:line="1466" pos:column="54"/></operator><name pos:line="1466" pos:column="51">content_charset<pos:position pos:line="1466" pos:column="66"/></name></name></expr>)<pos:position pos:line="1466" pos:column="67"/></condition><then pos:line="1466" pos:column="67"> <block pos:line="1466" pos:column="68">{
            <expr_stmt><expr><operator pos:line="1467" pos:column="13">*<pos:position pos:line="1467" pos:column="14"/></operator><operator pos:line="1467" pos:column="14">(<pos:position pos:line="1467" pos:column="15"/></operator><operator pos:line="1467" pos:column="15">(<pos:position pos:line="1467" pos:column="16"/></operator><specifier pos:line="1467" pos:column="16">const<pos:position pos:line="1467" pos:column="21"/></specifier> <name pos:line="1467" pos:column="22">char<pos:position pos:line="1467" pos:column="26"/></name> <operator pos:line="1467" pos:column="27">*<pos:position pos:line="1467" pos:column="28"/></operator><operator pos:line="1467" pos:column="28">*<pos:position pos:line="1467" pos:column="29"/></operator><operator pos:line="1467" pos:column="29">)<pos:position pos:line="1467" pos:column="30"/></operator> <call><name pos:line="1467" pos:column="31">apr_array_push<pos:position pos:line="1467" pos:column="45"/></name><argument_list pos:line="1467" pos:column="45">(<argument><expr><name pos:line="1467" pos:column="46">arr<pos:position pos:line="1467" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1467" pos:column="50"/></argument_list></call><operator pos:line="1467" pos:column="50">)<pos:position pos:line="1467" pos:column="51"/></operator> <operator pos:line="1467" pos:column="52">=<pos:position pos:line="1467" pos:column="53"/></operator> <literal type="string" pos:line="1467" pos:column="54">" {charset "<pos:position pos:line="1467" pos:column="66"/></literal></expr>;<pos:position pos:line="1467" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1468" pos:column="13">*<pos:position pos:line="1468" pos:column="14"/></operator><operator pos:line="1468" pos:column="14">(<pos:position pos:line="1468" pos:column="15"/></operator><operator pos:line="1468" pos:column="15">(<pos:position pos:line="1468" pos:column="16"/></operator><specifier pos:line="1468" pos:column="16">const<pos:position pos:line="1468" pos:column="21"/></specifier> <name pos:line="1468" pos:column="22">char<pos:position pos:line="1468" pos:column="26"/></name> <operator pos:line="1468" pos:column="27">*<pos:position pos:line="1468" pos:column="28"/></operator><operator pos:line="1468" pos:column="28">*<pos:position pos:line="1468" pos:column="29"/></operator><operator pos:line="1468" pos:column="29">)<pos:position pos:line="1468" pos:column="30"/></operator> <call><name pos:line="1468" pos:column="31">apr_array_push<pos:position pos:line="1468" pos:column="45"/></name><argument_list pos:line="1468" pos:column="45">(<argument><expr><name pos:line="1468" pos:column="46">arr<pos:position pos:line="1468" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1468" pos:column="50"/></argument_list></call><operator pos:line="1468" pos:column="50">)<pos:position pos:line="1468" pos:column="51"/></operator> <operator pos:line="1468" pos:column="52">=<pos:position pos:line="1468" pos:column="53"/></operator> <name><name pos:line="1468" pos:column="54">variant<pos:position pos:line="1468" pos:column="61"/></name><operator pos:line="1468" pos:column="61">-&gt;<pos:position pos:line="1468" pos:column="66"/></operator><name pos:line="1468" pos:column="63">content_charset<pos:position pos:line="1468" pos:column="78"/></name></name></expr>;<pos:position pos:line="1468" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1469" pos:column="13">*<pos:position pos:line="1469" pos:column="14"/></operator><operator pos:line="1469" pos:column="14">(<pos:position pos:line="1469" pos:column="15"/></operator><operator pos:line="1469" pos:column="15">(<pos:position pos:line="1469" pos:column="16"/></operator><specifier pos:line="1469" pos:column="16">const<pos:position pos:line="1469" pos:column="21"/></specifier> <name pos:line="1469" pos:column="22">char<pos:position pos:line="1469" pos:column="26"/></name> <operator pos:line="1469" pos:column="27">*<pos:position pos:line="1469" pos:column="28"/></operator><operator pos:line="1469" pos:column="28">*<pos:position pos:line="1469" pos:column="29"/></operator><operator pos:line="1469" pos:column="29">)<pos:position pos:line="1469" pos:column="30"/></operator> <call><name pos:line="1469" pos:column="31">apr_array_push<pos:position pos:line="1469" pos:column="45"/></name><argument_list pos:line="1469" pos:column="45">(<argument><expr><name pos:line="1469" pos:column="46">arr<pos:position pos:line="1469" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1469" pos:column="50"/></argument_list></call><operator pos:line="1469" pos:column="50">)<pos:position pos:line="1469" pos:column="51"/></operator> <operator pos:line="1469" pos:column="52">=<pos:position pos:line="1469" pos:column="53"/></operator> <literal type="string" pos:line="1469" pos:column="54">"}"<pos:position pos:line="1469" pos:column="57"/></literal></expr>;<pos:position pos:line="1469" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="1470" pos:column="10"/></block></then></if>
        <if pos:line="1471" pos:column="9">if <condition pos:line="1471" pos:column="12">(<expr><name pos:line="1471" pos:column="13">lang<pos:position pos:line="1471" pos:column="17"/></name></expr>)<pos:position pos:line="1471" pos:column="18"/></condition><then pos:line="1471" pos:column="18"> <block pos:line="1471" pos:column="19">{
            <expr_stmt><expr><operator pos:line="1472" pos:column="13">*<pos:position pos:line="1472" pos:column="14"/></operator><operator pos:line="1472" pos:column="14">(<pos:position pos:line="1472" pos:column="15"/></operator><operator pos:line="1472" pos:column="15">(<pos:position pos:line="1472" pos:column="16"/></operator><specifier pos:line="1472" pos:column="16">const<pos:position pos:line="1472" pos:column="21"/></specifier> <name pos:line="1472" pos:column="22">char<pos:position pos:line="1472" pos:column="26"/></name> <operator pos:line="1472" pos:column="27">*<pos:position pos:line="1472" pos:column="28"/></operator><operator pos:line="1472" pos:column="28">*<pos:position pos:line="1472" pos:column="29"/></operator><operator pos:line="1472" pos:column="29">)<pos:position pos:line="1472" pos:column="30"/></operator> <call><name pos:line="1472" pos:column="31">apr_array_push<pos:position pos:line="1472" pos:column="45"/></name><argument_list pos:line="1472" pos:column="45">(<argument><expr><name pos:line="1472" pos:column="46">arr<pos:position pos:line="1472" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1472" pos:column="50"/></argument_list></call><operator pos:line="1472" pos:column="50">)<pos:position pos:line="1472" pos:column="51"/></operator> <operator pos:line="1472" pos:column="52">=<pos:position pos:line="1472" pos:column="53"/></operator> <literal type="string" pos:line="1472" pos:column="54">" {language "<pos:position pos:line="1472" pos:column="67"/></literal></expr>;<pos:position pos:line="1472" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1473" pos:column="13">*<pos:position pos:line="1473" pos:column="14"/></operator><operator pos:line="1473" pos:column="14">(<pos:position pos:line="1473" pos:column="15"/></operator><operator pos:line="1473" pos:column="15">(<pos:position pos:line="1473" pos:column="16"/></operator><specifier pos:line="1473" pos:column="16">const<pos:position pos:line="1473" pos:column="21"/></specifier> <name pos:line="1473" pos:column="22">char<pos:position pos:line="1473" pos:column="26"/></name> <operator pos:line="1473" pos:column="27">*<pos:position pos:line="1473" pos:column="28"/></operator><operator pos:line="1473" pos:column="28">*<pos:position pos:line="1473" pos:column="29"/></operator><operator pos:line="1473" pos:column="29">)<pos:position pos:line="1473" pos:column="30"/></operator> <call><name pos:line="1473" pos:column="31">apr_array_push<pos:position pos:line="1473" pos:column="45"/></name><argument_list pos:line="1473" pos:column="45">(<argument><expr><name pos:line="1473" pos:column="46">arr<pos:position pos:line="1473" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1473" pos:column="50"/></argument_list></call><operator pos:line="1473" pos:column="50">)<pos:position pos:line="1473" pos:column="51"/></operator> <operator pos:line="1473" pos:column="52">=<pos:position pos:line="1473" pos:column="53"/></operator> <name pos:line="1473" pos:column="54">lang<pos:position pos:line="1473" pos:column="58"/></name></expr>;<pos:position pos:line="1473" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1474" pos:column="13">*<pos:position pos:line="1474" pos:column="14"/></operator><operator pos:line="1474" pos:column="14">(<pos:position pos:line="1474" pos:column="15"/></operator><operator pos:line="1474" pos:column="15">(<pos:position pos:line="1474" pos:column="16"/></operator><specifier pos:line="1474" pos:column="16">const<pos:position pos:line="1474" pos:column="21"/></specifier> <name pos:line="1474" pos:column="22">char<pos:position pos:line="1474" pos:column="26"/></name> <operator pos:line="1474" pos:column="27">*<pos:position pos:line="1474" pos:column="28"/></operator><operator pos:line="1474" pos:column="28">*<pos:position pos:line="1474" pos:column="29"/></operator><operator pos:line="1474" pos:column="29">)<pos:position pos:line="1474" pos:column="30"/></operator> <call><name pos:line="1474" pos:column="31">apr_array_push<pos:position pos:line="1474" pos:column="45"/></name><argument_list pos:line="1474" pos:column="45">(<argument><expr><name pos:line="1474" pos:column="46">arr<pos:position pos:line="1474" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1474" pos:column="50"/></argument_list></call><operator pos:line="1474" pos:column="50">)<pos:position pos:line="1474" pos:column="51"/></operator> <operator pos:line="1474" pos:column="52">=<pos:position pos:line="1474" pos:column="53"/></operator> <literal type="string" pos:line="1474" pos:column="54">"}"<pos:position pos:line="1474" pos:column="57"/></literal></expr>;<pos:position pos:line="1474" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="1475" pos:column="10"/></block></then></if>
        <if pos:line="1476" pos:column="9">if <condition pos:line="1476" pos:column="12">(<expr><name><name pos:line="1476" pos:column="13">variant<pos:position pos:line="1476" pos:column="20"/></name><operator pos:line="1476" pos:column="20">-&gt;<pos:position pos:line="1476" pos:column="25"/></operator><name pos:line="1476" pos:column="22">content_encoding<pos:position pos:line="1476" pos:column="38"/></name></name> <operator pos:line="1476" pos:column="39">&amp;&amp;<pos:position pos:line="1476" pos:column="49"/></operator> <operator pos:line="1476" pos:column="42">*<pos:position pos:line="1476" pos:column="43"/></operator><name><name pos:line="1476" pos:column="43">variant<pos:position pos:line="1476" pos:column="50"/></name><operator pos:line="1476" pos:column="50">-&gt;<pos:position pos:line="1476" pos:column="55"/></operator><name pos:line="1476" pos:column="52">content_encoding<pos:position pos:line="1476" pos:column="68"/></name></name></expr>)<pos:position pos:line="1476" pos:column="69"/></condition><then pos:line="1476" pos:column="69"> <block pos:line="1476" pos:column="70">{
            <comment type="block" pos:line="1477" pos:column="13">/* Strictly speaking, this is non-standard, but so is TCN */</comment>

            <expr_stmt><expr><operator pos:line="1479" pos:column="13">*<pos:position pos:line="1479" pos:column="14"/></operator><operator pos:line="1479" pos:column="14">(<pos:position pos:line="1479" pos:column="15"/></operator><operator pos:line="1479" pos:column="15">(<pos:position pos:line="1479" pos:column="16"/></operator><specifier pos:line="1479" pos:column="16">const<pos:position pos:line="1479" pos:column="21"/></specifier> <name pos:line="1479" pos:column="22">char<pos:position pos:line="1479" pos:column="26"/></name> <operator pos:line="1479" pos:column="27">*<pos:position pos:line="1479" pos:column="28"/></operator><operator pos:line="1479" pos:column="28">*<pos:position pos:line="1479" pos:column="29"/></operator><operator pos:line="1479" pos:column="29">)<pos:position pos:line="1479" pos:column="30"/></operator> <call><name pos:line="1479" pos:column="31">apr_array_push<pos:position pos:line="1479" pos:column="45"/></name><argument_list pos:line="1479" pos:column="45">(<argument><expr><name pos:line="1479" pos:column="46">arr<pos:position pos:line="1479" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1479" pos:column="50"/></argument_list></call><operator pos:line="1479" pos:column="50">)<pos:position pos:line="1479" pos:column="51"/></operator> <operator pos:line="1479" pos:column="52">=<pos:position pos:line="1479" pos:column="53"/></operator> <literal type="string" pos:line="1479" pos:column="54">" {encoding "<pos:position pos:line="1479" pos:column="67"/></literal></expr>;<pos:position pos:line="1479" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1480" pos:column="13">*<pos:position pos:line="1480" pos:column="14"/></operator><operator pos:line="1480" pos:column="14">(<pos:position pos:line="1480" pos:column="15"/></operator><operator pos:line="1480" pos:column="15">(<pos:position pos:line="1480" pos:column="16"/></operator><specifier pos:line="1480" pos:column="16">const<pos:position pos:line="1480" pos:column="21"/></specifier> <name pos:line="1480" pos:column="22">char<pos:position pos:line="1480" pos:column="26"/></name> <operator pos:line="1480" pos:column="27">*<pos:position pos:line="1480" pos:column="28"/></operator><operator pos:line="1480" pos:column="28">*<pos:position pos:line="1480" pos:column="29"/></operator><operator pos:line="1480" pos:column="29">)<pos:position pos:line="1480" pos:column="30"/></operator> <call><name pos:line="1480" pos:column="31">apr_array_push<pos:position pos:line="1480" pos:column="45"/></name><argument_list pos:line="1480" pos:column="45">(<argument><expr><name pos:line="1480" pos:column="46">arr<pos:position pos:line="1480" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1480" pos:column="50"/></argument_list></call><operator pos:line="1480" pos:column="50">)<pos:position pos:line="1480" pos:column="51"/></operator> <operator pos:line="1480" pos:column="52">=<pos:position pos:line="1480" pos:column="53"/></operator> <name><name pos:line="1480" pos:column="54">variant<pos:position pos:line="1480" pos:column="61"/></name><operator pos:line="1480" pos:column="61">-&gt;<pos:position pos:line="1480" pos:column="66"/></operator><name pos:line="1480" pos:column="63">content_encoding<pos:position pos:line="1480" pos:column="79"/></name></name></expr>;<pos:position pos:line="1480" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1481" pos:column="13">*<pos:position pos:line="1481" pos:column="14"/></operator><operator pos:line="1481" pos:column="14">(<pos:position pos:line="1481" pos:column="15"/></operator><operator pos:line="1481" pos:column="15">(<pos:position pos:line="1481" pos:column="16"/></operator><specifier pos:line="1481" pos:column="16">const<pos:position pos:line="1481" pos:column="21"/></specifier> <name pos:line="1481" pos:column="22">char<pos:position pos:line="1481" pos:column="26"/></name> <operator pos:line="1481" pos:column="27">*<pos:position pos:line="1481" pos:column="28"/></operator><operator pos:line="1481" pos:column="28">*<pos:position pos:line="1481" pos:column="29"/></operator><operator pos:line="1481" pos:column="29">)<pos:position pos:line="1481" pos:column="30"/></operator> <call><name pos:line="1481" pos:column="31">apr_array_push<pos:position pos:line="1481" pos:column="45"/></name><argument_list pos:line="1481" pos:column="45">(<argument><expr><name pos:line="1481" pos:column="46">arr<pos:position pos:line="1481" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1481" pos:column="50"/></argument_list></call><operator pos:line="1481" pos:column="50">)<pos:position pos:line="1481" pos:column="51"/></operator> <operator pos:line="1481" pos:column="52">=<pos:position pos:line="1481" pos:column="53"/></operator> <literal type="string" pos:line="1481" pos:column="54">"}"<pos:position pos:line="1481" pos:column="57"/></literal></expr>;<pos:position pos:line="1481" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="1482" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="1484" pos:column="9">/* Note that the Alternates specification (in rfc2295) does
         * not require that we include {length x}, so we could omit it
         * if determining the length is too expensive.  We currently
         * always include it though.
         *
         * If the variant is a CGI script, find_content_length would
         * return the length of the script, not the output it
         * produces, so we check for the presence of a handler and if
         * there is one we don't add a length.
         *
         * XXX: TODO: This check does not detect a CGI script if we
         * get the variant from a type map.  This needs to be fixed
         * (without breaking things if the type map specifies a
         * content-length, which currently leads to the correct result).
         */</comment>
        <if pos:line="1499" pos:column="9">if <condition pos:line="1499" pos:column="12">(<expr><operator pos:line="1499" pos:column="13">!<pos:position pos:line="1499" pos:column="14"/></operator><operator pos:line="1499" pos:column="14">(<pos:position pos:line="1499" pos:column="15"/></operator><name><name pos:line="1499" pos:column="15">variant<pos:position pos:line="1499" pos:column="22"/></name><operator pos:line="1499" pos:column="22">-&gt;<pos:position pos:line="1499" pos:column="27"/></operator><name pos:line="1499" pos:column="24">sub_req<pos:position pos:line="1499" pos:column="31"/></name></name> <operator pos:line="1499" pos:column="32">&amp;&amp;<pos:position pos:line="1499" pos:column="42"/></operator> <name><name pos:line="1499" pos:column="35">variant<pos:position pos:line="1499" pos:column="42"/></name><operator pos:line="1499" pos:column="42">-&gt;<pos:position pos:line="1499" pos:column="47"/></operator><name pos:line="1499" pos:column="44">sub_req<pos:position pos:line="1499" pos:column="51"/></name><operator pos:line="1499" pos:column="51">-&gt;<pos:position pos:line="1499" pos:column="56"/></operator><name pos:line="1499" pos:column="53">handler<pos:position pos:line="1499" pos:column="60"/></name></name><operator pos:line="1499" pos:column="60">)<pos:position pos:line="1499" pos:column="61"/></operator>
            <operator pos:line="1500" pos:column="13">&amp;&amp;<pos:position pos:line="1500" pos:column="23"/></operator> <operator pos:line="1500" pos:column="16">(<pos:position pos:line="1500" pos:column="17"/></operator><name pos:line="1500" pos:column="17">len<pos:position pos:line="1500" pos:column="20"/></name> <operator pos:line="1500" pos:column="21">=<pos:position pos:line="1500" pos:column="22"/></operator> <call><name pos:line="1500" pos:column="23">find_content_length<pos:position pos:line="1500" pos:column="42"/></name><argument_list pos:line="1500" pos:column="42">(<argument><expr><name pos:line="1500" pos:column="43">neg<pos:position pos:line="1500" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1500" pos:column="48">variant<pos:position pos:line="1500" pos:column="55"/></name></expr></argument>)<pos:position pos:line="1500" pos:column="56"/></argument_list></call><operator pos:line="1500" pos:column="56">)<pos:position pos:line="1500" pos:column="57"/></operator> <operator pos:line="1500" pos:column="58">&gt;=<pos:position pos:line="1500" pos:column="63"/></operator> <literal type="number" pos:line="1500" pos:column="61">0<pos:position pos:line="1500" pos:column="62"/></literal></expr>)<pos:position pos:line="1500" pos:column="63"/></condition><then pos:line="1500" pos:column="63"> <block pos:line="1500" pos:column="64">{

            <expr_stmt><expr><operator pos:line="1502" pos:column="13">*<pos:position pos:line="1502" pos:column="14"/></operator><operator pos:line="1502" pos:column="14">(<pos:position pos:line="1502" pos:column="15"/></operator><operator pos:line="1502" pos:column="15">(<pos:position pos:line="1502" pos:column="16"/></operator><specifier pos:line="1502" pos:column="16">const<pos:position pos:line="1502" pos:column="21"/></specifier> <name pos:line="1502" pos:column="22">char<pos:position pos:line="1502" pos:column="26"/></name> <operator pos:line="1502" pos:column="27">*<pos:position pos:line="1502" pos:column="28"/></operator><operator pos:line="1502" pos:column="28">*<pos:position pos:line="1502" pos:column="29"/></operator><operator pos:line="1502" pos:column="29">)<pos:position pos:line="1502" pos:column="30"/></operator> <call><name pos:line="1502" pos:column="31">apr_array_push<pos:position pos:line="1502" pos:column="45"/></name><argument_list pos:line="1502" pos:column="45">(<argument><expr><name pos:line="1502" pos:column="46">arr<pos:position pos:line="1502" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1502" pos:column="50"/></argument_list></call><operator pos:line="1502" pos:column="50">)<pos:position pos:line="1502" pos:column="51"/></operator> <operator pos:line="1502" pos:column="52">=<pos:position pos:line="1502" pos:column="53"/></operator> <literal type="string" pos:line="1502" pos:column="54">" {length "<pos:position pos:line="1502" pos:column="65"/></literal></expr>;<pos:position pos:line="1502" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1503" pos:column="13">*<pos:position pos:line="1503" pos:column="14"/></operator><operator pos:line="1503" pos:column="14">(<pos:position pos:line="1503" pos:column="15"/></operator><operator pos:line="1503" pos:column="15">(<pos:position pos:line="1503" pos:column="16"/></operator><specifier pos:line="1503" pos:column="16">const<pos:position pos:line="1503" pos:column="21"/></specifier> <name pos:line="1503" pos:column="22">char<pos:position pos:line="1503" pos:column="26"/></name> <operator pos:line="1503" pos:column="27">*<pos:position pos:line="1503" pos:column="28"/></operator><operator pos:line="1503" pos:column="28">*<pos:position pos:line="1503" pos:column="29"/></operator><operator pos:line="1503" pos:column="29">)<pos:position pos:line="1503" pos:column="30"/></operator> <call><name pos:line="1503" pos:column="31">apr_array_push<pos:position pos:line="1503" pos:column="45"/></name><argument_list pos:line="1503" pos:column="45">(<argument><expr><name pos:line="1503" pos:column="46">arr<pos:position pos:line="1503" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1503" pos:column="50"/></argument_list></call><operator pos:line="1503" pos:column="50">)<pos:position pos:line="1503" pos:column="51"/></operator> <operator pos:line="1503" pos:column="52">=<pos:position pos:line="1503" pos:column="53"/></operator> <call><name pos:line="1503" pos:column="54">apr_off_t_toa<pos:position pos:line="1503" pos:column="67"/></name><argument_list pos:line="1503" pos:column="67">(<argument><expr><name><name pos:line="1503" pos:column="68">r<pos:position pos:line="1503" pos:column="69"/></name><operator pos:line="1503" pos:column="69">-&gt;<pos:position pos:line="1503" pos:column="74"/></operator><name pos:line="1503" pos:column="71">pool<pos:position pos:line="1503" pos:column="75"/></name></name></expr></argument>,
                                                                   <argument><expr><name pos:line="1504" pos:column="68">len<pos:position pos:line="1504" pos:column="71"/></name></expr></argument>)<pos:position pos:line="1504" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1504" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1505" pos:column="13">*<pos:position pos:line="1505" pos:column="14"/></operator><operator pos:line="1505" pos:column="14">(<pos:position pos:line="1505" pos:column="15"/></operator><operator pos:line="1505" pos:column="15">(<pos:position pos:line="1505" pos:column="16"/></operator><specifier pos:line="1505" pos:column="16">const<pos:position pos:line="1505" pos:column="21"/></specifier> <name pos:line="1505" pos:column="22">char<pos:position pos:line="1505" pos:column="26"/></name> <operator pos:line="1505" pos:column="27">*<pos:position pos:line="1505" pos:column="28"/></operator><operator pos:line="1505" pos:column="28">*<pos:position pos:line="1505" pos:column="29"/></operator><operator pos:line="1505" pos:column="29">)<pos:position pos:line="1505" pos:column="30"/></operator> <call><name pos:line="1505" pos:column="31">apr_array_push<pos:position pos:line="1505" pos:column="45"/></name><argument_list pos:line="1505" pos:column="45">(<argument><expr><name pos:line="1505" pos:column="46">arr<pos:position pos:line="1505" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1505" pos:column="50"/></argument_list></call><operator pos:line="1505" pos:column="50">)<pos:position pos:line="1505" pos:column="51"/></operator> <operator pos:line="1505" pos:column="52">=<pos:position pos:line="1505" pos:column="53"/></operator> <literal type="string" pos:line="1505" pos:column="54">"}"<pos:position pos:line="1505" pos:column="57"/></literal></expr>;<pos:position pos:line="1505" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="1506" pos:column="10"/></block></then></if>

        <expr_stmt><expr><operator pos:line="1508" pos:column="9">*<pos:position pos:line="1508" pos:column="10"/></operator><operator pos:line="1508" pos:column="10">(<pos:position pos:line="1508" pos:column="11"/></operator><operator pos:line="1508" pos:column="11">(<pos:position pos:line="1508" pos:column="12"/></operator><specifier pos:line="1508" pos:column="12">const<pos:position pos:line="1508" pos:column="17"/></specifier> <name pos:line="1508" pos:column="18">char<pos:position pos:line="1508" pos:column="22"/></name> <operator pos:line="1508" pos:column="23">*<pos:position pos:line="1508" pos:column="24"/></operator><operator pos:line="1508" pos:column="24">*<pos:position pos:line="1508" pos:column="25"/></operator><operator pos:line="1508" pos:column="25">)<pos:position pos:line="1508" pos:column="26"/></operator> <call><name pos:line="1508" pos:column="27">apr_array_push<pos:position pos:line="1508" pos:column="41"/></name><argument_list pos:line="1508" pos:column="41">(<argument><expr><name pos:line="1508" pos:column="42">arr<pos:position pos:line="1508" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1508" pos:column="46"/></argument_list></call><operator pos:line="1508" pos:column="46">)<pos:position pos:line="1508" pos:column="47"/></operator> <operator pos:line="1508" pos:column="48">=<pos:position pos:line="1508" pos:column="49"/></operator> <literal type="string" pos:line="1508" pos:column="50">"}"<pos:position pos:line="1508" pos:column="53"/></literal></expr>;<pos:position pos:line="1508" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="1509" pos:column="9">*<pos:position pos:line="1509" pos:column="10"/></operator><operator pos:line="1509" pos:column="10">(<pos:position pos:line="1509" pos:column="11"/></operator><operator pos:line="1509" pos:column="11">(<pos:position pos:line="1509" pos:column="12"/></operator><specifier pos:line="1509" pos:column="12">const<pos:position pos:line="1509" pos:column="17"/></specifier> <name pos:line="1509" pos:column="18">char<pos:position pos:line="1509" pos:column="22"/></name> <operator pos:line="1509" pos:column="23">*<pos:position pos:line="1509" pos:column="24"/></operator><operator pos:line="1509" pos:column="24">*<pos:position pos:line="1509" pos:column="25"/></operator><operator pos:line="1509" pos:column="25">)<pos:position pos:line="1509" pos:column="26"/></operator> <call><name pos:line="1509" pos:column="27">apr_array_push<pos:position pos:line="1509" pos:column="41"/></name><argument_list pos:line="1509" pos:column="41">(<argument><expr><name pos:line="1509" pos:column="42">arr<pos:position pos:line="1509" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1509" pos:column="46"/></argument_list></call><operator pos:line="1509" pos:column="46">)<pos:position pos:line="1509" pos:column="47"/></operator> <operator pos:line="1509" pos:column="48">=<pos:position pos:line="1509" pos:column="49"/></operator> <literal type="string" pos:line="1509" pos:column="50">", "<pos:position pos:line="1509" pos:column="54"/></literal></expr>;<pos:position pos:line="1509" pos:column="55"/></expr_stmt> <comment type="block" pos:line="1509" pos:column="56">/* trimmed below */</comment>
    }<pos:position pos:line="1510" pos:column="6"/></block></for>

    <if pos:line="1512" pos:column="5">if <condition pos:line="1512" pos:column="8">(<expr><name><name pos:line="1512" pos:column="9">neg<pos:position pos:line="1512" pos:column="12"/></name><operator pos:line="1512" pos:column="12">-&gt;<pos:position pos:line="1512" pos:column="17"/></operator><name pos:line="1512" pos:column="14">send_alternates<pos:position pos:line="1512" pos:column="29"/></name></name> <operator pos:line="1512" pos:column="30">&amp;&amp;<pos:position pos:line="1512" pos:column="40"/></operator> <name><name pos:line="1512" pos:column="33">neg<pos:position pos:line="1512" pos:column="36"/></name><operator pos:line="1512" pos:column="36">-&gt;<pos:position pos:line="1512" pos:column="41"/></operator><name pos:line="1512" pos:column="38">avail_vars<pos:position pos:line="1512" pos:column="48"/></name><operator pos:line="1512" pos:column="48">-&gt;<pos:position pos:line="1512" pos:column="53"/></operator><name pos:line="1512" pos:column="50">nelts<pos:position pos:line="1512" pos:column="55"/></name></name></expr>)<pos:position pos:line="1512" pos:column="56"/></condition><then pos:line="1512" pos:column="56"> <block pos:line="1512" pos:column="57">{
        <expr_stmt><expr><name><name pos:line="1513" pos:column="9">arr<pos:position pos:line="1513" pos:column="12"/></name><operator pos:line="1513" pos:column="12">-&gt;<pos:position pos:line="1513" pos:column="17"/></operator><name pos:line="1513" pos:column="14">nelts<pos:position pos:line="1513" pos:column="19"/></name></name><operator pos:line="1513" pos:column="19">--<pos:position pos:line="1513" pos:column="21"/></operator></expr>;<pos:position pos:line="1513" pos:column="22"/></expr_stmt>                                 <comment type="block" pos:line="1513" pos:column="55">/* remove last comma */</comment>
        <expr_stmt><expr><call><name pos:line="1514" pos:column="9">apr_table_mergen<pos:position pos:line="1514" pos:column="25"/></name><argument_list pos:line="1514" pos:column="25">(<argument><expr><name pos:line="1514" pos:column="26">hdrs<pos:position pos:line="1514" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1514" pos:column="32">"Alternates"<pos:position pos:line="1514" pos:column="44"/></literal></expr></argument>,
                        <argument><expr><call><name pos:line="1515" pos:column="25">apr_array_pstrcat<pos:position pos:line="1515" pos:column="42"/></name><argument_list pos:line="1515" pos:column="42">(<argument><expr><name><name pos:line="1515" pos:column="43">r<pos:position pos:line="1515" pos:column="44"/></name><operator pos:line="1515" pos:column="44">-&gt;<pos:position pos:line="1515" pos:column="49"/></operator><name pos:line="1515" pos:column="46">pool<pos:position pos:line="1515" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="1515" pos:column="52">arr<pos:position pos:line="1515" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="1515" pos:column="57">'\0'<pos:position pos:line="1515" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="1515" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="1515" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="1515" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="1516" pos:column="6"/></block></then></if>

    <if pos:line="1518" pos:column="5">if <condition pos:line="1518" pos:column="8">(<expr><name><name pos:line="1518" pos:column="9">neg<pos:position pos:line="1518" pos:column="12"/></name><operator pos:line="1518" pos:column="12">-&gt;<pos:position pos:line="1518" pos:column="17"/></operator><name pos:line="1518" pos:column="14">is_transparent<pos:position pos:line="1518" pos:column="28"/></name></name> <operator pos:line="1518" pos:column="29">||<pos:position pos:line="1518" pos:column="31"/></operator> <name pos:line="1518" pos:column="32">vary_by_type<pos:position pos:line="1518" pos:column="44"/></name> <operator pos:line="1518" pos:column="45">||<pos:position pos:line="1518" pos:column="47"/></operator> <name pos:line="1518" pos:column="48">vary_by_language<pos:position pos:line="1518" pos:column="64"/></name> <operator pos:line="1518" pos:column="65">||<pos:position pos:line="1518" pos:column="67"/></operator>
        <name pos:line="1519" pos:column="9">vary_by_language<pos:position pos:line="1519" pos:column="25"/></name> <operator pos:line="1519" pos:column="26">||<pos:position pos:line="1519" pos:column="28"/></operator> <name pos:line="1519" pos:column="29">vary_by_charset<pos:position pos:line="1519" pos:column="44"/></name> <operator pos:line="1519" pos:column="45">||<pos:position pos:line="1519" pos:column="47"/></operator> <name pos:line="1519" pos:column="48">vary_by_encoding<pos:position pos:line="1519" pos:column="64"/></name></expr>)<pos:position pos:line="1519" pos:column="65"/></condition><then pos:line="1519" pos:column="65"> <block pos:line="1519" pos:column="66">{

        <expr_stmt><expr><call><name pos:line="1521" pos:column="9">apr_table_mergen<pos:position pos:line="1521" pos:column="25"/></name><argument_list pos:line="1521" pos:column="25">(<argument><expr><name pos:line="1521" pos:column="26">hdrs<pos:position pos:line="1521" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1521" pos:column="32">"Vary"<pos:position pos:line="1521" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1521" pos:column="40">2<pos:position pos:line="1521" pos:column="41"/></literal> <operator pos:line="1521" pos:column="42">+<pos:position pos:line="1521" pos:column="43"/></operator> <call><name pos:line="1521" pos:column="44">apr_pstrcat<pos:position pos:line="1521" pos:column="55"/></name><argument_list pos:line="1521" pos:column="55">(<argument><expr><name><name pos:line="1521" pos:column="56">r<pos:position pos:line="1521" pos:column="57"/></name><operator pos:line="1521" pos:column="57">-&gt;<pos:position pos:line="1521" pos:column="62"/></operator><name pos:line="1521" pos:column="59">pool<pos:position pos:line="1521" pos:column="63"/></name></name></expr></argument>,
            <argument><expr><ternary><condition><expr><name><name pos:line="1522" pos:column="13">neg<pos:position pos:line="1522" pos:column="16"/></name><operator pos:line="1522" pos:column="16">-&gt;<pos:position pos:line="1522" pos:column="21"/></operator><name pos:line="1522" pos:column="18">is_transparent<pos:position pos:line="1522" pos:column="32"/></name></name></expr> ?<pos:position pos:line="1522" pos:column="34"/></condition><then pos:line="1522" pos:column="34"> <expr><literal type="string" pos:line="1522" pos:column="35">", negotiate"<pos:position pos:line="1522" pos:column="48"/></literal></expr>       <pos:position pos:line="1522" pos:column="55"/></then><else pos:line="1522" pos:column="55">: <expr><literal type="string" pos:line="1522" pos:column="57">""<pos:position pos:line="1522" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
            <argument><expr><ternary><condition><expr><name pos:line="1523" pos:column="13">vary_by_type<pos:position pos:line="1523" pos:column="25"/></name></expr>        ?<pos:position pos:line="1523" pos:column="34"/></condition><then pos:line="1523" pos:column="34"> <expr><literal type="string" pos:line="1523" pos:column="35">", accept"<pos:position pos:line="1523" pos:column="45"/></literal></expr>          <pos:position pos:line="1523" pos:column="55"/></then><else pos:line="1523" pos:column="55">: <expr><literal type="string" pos:line="1523" pos:column="57">""<pos:position pos:line="1523" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
            <argument><expr><ternary><condition><expr><name pos:line="1524" pos:column="13">vary_by_language<pos:position pos:line="1524" pos:column="29"/></name></expr>    ?<pos:position pos:line="1524" pos:column="34"/></condition><then pos:line="1524" pos:column="34"> <expr><literal type="string" pos:line="1524" pos:column="35">", accept-language"<pos:position pos:line="1524" pos:column="54"/></literal></expr> <pos:position pos:line="1524" pos:column="55"/></then><else pos:line="1524" pos:column="55">: <expr><literal type="string" pos:line="1524" pos:column="57">""<pos:position pos:line="1524" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
            <argument><expr><ternary><condition><expr><name pos:line="1525" pos:column="13">vary_by_charset<pos:position pos:line="1525" pos:column="28"/></name></expr>     ?<pos:position pos:line="1525" pos:column="34"/></condition><then pos:line="1525" pos:column="34"> <expr><literal type="string" pos:line="1525" pos:column="35">", accept-charset"<pos:position pos:line="1525" pos:column="53"/></literal></expr>  <pos:position pos:line="1525" pos:column="55"/></then><else pos:line="1525" pos:column="55">: <expr><literal type="string" pos:line="1525" pos:column="57">""<pos:position pos:line="1525" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
            <argument><expr><ternary><condition><expr><name pos:line="1526" pos:column="13">vary_by_encoding<pos:position pos:line="1526" pos:column="29"/></name></expr>    ?<pos:position pos:line="1526" pos:column="34"/></condition><then pos:line="1526" pos:column="34"> <expr><literal type="string" pos:line="1526" pos:column="35">", accept-encoding"<pos:position pos:line="1526" pos:column="54"/></literal></expr> <pos:position pos:line="1526" pos:column="55"/></then><else pos:line="1526" pos:column="55">: <expr><literal type="string" pos:line="1526" pos:column="57">""<pos:position pos:line="1526" pos:column="59"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="1526" pos:column="61">NULL<pos:position pos:line="1526" pos:column="65"/></name></expr></argument>)<pos:position pos:line="1526" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="1526" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="1526" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="1527" pos:column="6"/></block></then></if>

    <if pos:line="1529" pos:column="5">if <condition pos:line="1529" pos:column="8">(<expr><name><name pos:line="1529" pos:column="9">neg<pos:position pos:line="1529" pos:column="12"/></name><operator pos:line="1529" pos:column="12">-&gt;<pos:position pos:line="1529" pos:column="17"/></operator><name pos:line="1529" pos:column="14">is_transparent<pos:position pos:line="1529" pos:column="28"/></name></name></expr>)<pos:position pos:line="1529" pos:column="29"/></condition><then pos:line="1529" pos:column="29"> <block pos:line="1529" pos:column="30">{ <comment type="block" pos:line="1529" pos:column="32">/* Create TCN response header */</comment>
        <expr_stmt><expr><call><name pos:line="1530" pos:column="9">apr_table_setn<pos:position pos:line="1530" pos:column="23"/></name><argument_list pos:line="1530" pos:column="23">(<argument><expr><name pos:line="1530" pos:column="24">hdrs<pos:position pos:line="1530" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1530" pos:column="30">"TCN"<pos:position pos:line="1530" pos:column="35"/></literal></expr></argument>,
                      <argument><expr><ternary><condition><expr><name pos:line="1531" pos:column="23">alg_result<pos:position pos:line="1531" pos:column="33"/></name> <operator pos:line="1531" pos:column="34">==<pos:position pos:line="1531" pos:column="36"/></operator> <name pos:line="1531" pos:column="37">alg_list<pos:position pos:line="1531" pos:column="45"/></name></expr> ?<pos:position pos:line="1531" pos:column="47"/></condition><then pos:line="1531" pos:column="47"> <expr><literal type="string" pos:line="1531" pos:column="48">"list"<pos:position pos:line="1531" pos:column="54"/></literal></expr> <pos:position pos:line="1531" pos:column="55"/></then><else pos:line="1531" pos:column="55">: <expr><literal type="string" pos:line="1531" pos:column="57">"choice"<pos:position pos:line="1531" pos:column="65"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="1531" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1531" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="1532" pos:column="6"/></block></then></if>
}<pos:position pos:line="1533" pos:column="2"/></block></function>

<comment type="block" format="doxygen" pos:line="1535" pos:column="1">/**********************************************************************
 *
 * Return an HTML list of variants. This is output as part of the
 * choice response or 406 status body.
 */</comment>

<function><specifier pos:line="1541" pos:column="1">static<pos:position pos:line="1541" pos:column="7"/></specifier> <type><name pos:line="1541" pos:column="8">char<pos:position pos:line="1541" pos:column="12"/></name> <modifier pos:line="1541" pos:column="13">*<pos:position pos:line="1541" pos:column="14"/></modifier></type><name pos:line="1541" pos:column="14">make_variant_list<pos:position pos:line="1541" pos:column="31"/></name><parameter_list pos:line="1541" pos:column="31">(<parameter><decl><type><name pos:line="1541" pos:column="32">request_rec<pos:position pos:line="1541" pos:column="43"/></name> <modifier pos:line="1541" pos:column="44">*<pos:position pos:line="1541" pos:column="45"/></modifier></type><name pos:line="1541" pos:column="45">r<pos:position pos:line="1541" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1541" pos:column="48">negotiation_state<pos:position pos:line="1541" pos:column="65"/></name> <modifier pos:line="1541" pos:column="66">*<pos:position pos:line="1541" pos:column="67"/></modifier></type><name pos:line="1541" pos:column="67">neg<pos:position pos:line="1541" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1541" pos:column="71"/></parameter_list>
<block pos:line="1542" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1543" pos:column="5">apr_array_header_t<pos:position pos:line="1543" pos:column="23"/></name> <modifier pos:line="1543" pos:column="24">*<pos:position pos:line="1543" pos:column="25"/></modifier></type><name pos:line="1543" pos:column="25">arr<pos:position pos:line="1543" pos:column="28"/></name></decl>;<pos:position pos:line="1543" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1544" pos:column="5">int<pos:position pos:line="1544" pos:column="8"/></name></type> <name pos:line="1544" pos:column="9">i<pos:position pos:line="1544" pos:column="10"/></name></decl>;<pos:position pos:line="1544" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1545" pos:column="5">int<pos:position pos:line="1545" pos:column="8"/></name></type> <name pos:line="1545" pos:column="9">max_vlist_array<pos:position pos:line="1545" pos:column="24"/></name> <init pos:line="1545" pos:column="25">= <expr><operator pos:line="1545" pos:column="27">(<pos:position pos:line="1545" pos:column="28"/></operator><name><name pos:line="1545" pos:column="28">neg<pos:position pos:line="1545" pos:column="31"/></name><operator pos:line="1545" pos:column="31">-&gt;<pos:position pos:line="1545" pos:column="36"/></operator><name pos:line="1545" pos:column="33">avail_vars<pos:position pos:line="1545" pos:column="43"/></name><operator pos:line="1545" pos:column="43">-&gt;<pos:position pos:line="1545" pos:column="48"/></operator><name pos:line="1545" pos:column="45">nelts<pos:position pos:line="1545" pos:column="50"/></name></name> <operator pos:line="1545" pos:column="51">*<pos:position pos:line="1545" pos:column="52"/></operator> <literal type="number" pos:line="1545" pos:column="53">15<pos:position pos:line="1545" pos:column="55"/></literal><operator pos:line="1545" pos:column="55">)<pos:position pos:line="1545" pos:column="56"/></operator> <operator pos:line="1545" pos:column="57">+<pos:position pos:line="1545" pos:column="58"/></operator> <literal type="number" pos:line="1545" pos:column="59">2<pos:position pos:line="1545" pos:column="60"/></literal></expr></init></decl>;<pos:position pos:line="1545" pos:column="61"/></decl_stmt>

    <comment type="block" pos:line="1547" pos:column="5">/* In order to avoid O(n^2) memory copies in building the list,
     * we preallocate a apr_table_t with the maximum substrings possible,
     * fill it with the variant list, and then concatenate the entire array.
     */</comment>
    <expr_stmt><expr><name pos:line="1551" pos:column="5">arr<pos:position pos:line="1551" pos:column="8"/></name> <operator pos:line="1551" pos:column="9">=<pos:position pos:line="1551" pos:column="10"/></operator> <call><name pos:line="1551" pos:column="11">apr_array_make<pos:position pos:line="1551" pos:column="25"/></name><argument_list pos:line="1551" pos:column="25">(<argument><expr><name><name pos:line="1551" pos:column="26">r<pos:position pos:line="1551" pos:column="27"/></name><operator pos:line="1551" pos:column="27">-&gt;<pos:position pos:line="1551" pos:column="32"/></operator><name pos:line="1551" pos:column="29">pool<pos:position pos:line="1551" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="1551" pos:column="35">max_vlist_array<pos:position pos:line="1551" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="1551" pos:column="52">sizeof<argument_list pos:line="1551" pos:column="58">(<argument><expr><name pos:line="1551" pos:column="59">char<pos:position pos:line="1551" pos:column="63"/></name> <operator pos:line="1551" pos:column="64">*<pos:position pos:line="1551" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="1551" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1551" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="1551" pos:column="68"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="1553" pos:column="5">*<pos:position pos:line="1553" pos:column="6"/></operator><operator pos:line="1553" pos:column="6">(<pos:position pos:line="1553" pos:column="7"/></operator><operator pos:line="1553" pos:column="7">(<pos:position pos:line="1553" pos:column="8"/></operator><specifier pos:line="1553" pos:column="8">const<pos:position pos:line="1553" pos:column="13"/></specifier> <name pos:line="1553" pos:column="14">char<pos:position pos:line="1553" pos:column="18"/></name> <operator pos:line="1553" pos:column="19">*<pos:position pos:line="1553" pos:column="20"/></operator><operator pos:line="1553" pos:column="20">*<pos:position pos:line="1553" pos:column="21"/></operator><operator pos:line="1553" pos:column="21">)<pos:position pos:line="1553" pos:column="22"/></operator> <call><name pos:line="1553" pos:column="23">apr_array_push<pos:position pos:line="1553" pos:column="37"/></name><argument_list pos:line="1553" pos:column="37">(<argument><expr><name pos:line="1553" pos:column="38">arr<pos:position pos:line="1553" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1553" pos:column="42"/></argument_list></call><operator pos:line="1553" pos:column="42">)<pos:position pos:line="1553" pos:column="43"/></operator> <operator pos:line="1553" pos:column="44">=<pos:position pos:line="1553" pos:column="45"/></operator> <literal type="string" pos:line="1553" pos:column="46">"Available variants:\n&lt;ul&gt;\n"<pos:position pos:line="1553" pos:column="81"/></literal></expr>;<pos:position pos:line="1553" pos:column="76"/></expr_stmt>

    <for pos:line="1555" pos:column="5">for <control pos:line="1555" pos:column="9">(<init><expr><name pos:line="1555" pos:column="10">i<pos:position pos:line="1555" pos:column="11"/></name> <operator pos:line="1555" pos:column="12">=<pos:position pos:line="1555" pos:column="13"/></operator> <literal type="number" pos:line="1555" pos:column="14">0<pos:position pos:line="1555" pos:column="15"/></literal></expr>;<pos:position pos:line="1555" pos:column="16"/></init> <condition><expr><name pos:line="1555" pos:column="17">i<pos:position pos:line="1555" pos:column="18"/></name> <operator pos:line="1555" pos:column="19">&lt;<pos:position pos:line="1555" pos:column="23"/></operator> <name><name pos:line="1555" pos:column="21">neg<pos:position pos:line="1555" pos:column="24"/></name><operator pos:line="1555" pos:column="24">-&gt;<pos:position pos:line="1555" pos:column="29"/></operator><name pos:line="1555" pos:column="26">avail_vars<pos:position pos:line="1555" pos:column="36"/></name><operator pos:line="1555" pos:column="36">-&gt;<pos:position pos:line="1555" pos:column="41"/></operator><name pos:line="1555" pos:column="38">nelts<pos:position pos:line="1555" pos:column="43"/></name></name></expr>;<pos:position pos:line="1555" pos:column="44"/></condition> <incr><expr><operator pos:line="1555" pos:column="45">++<pos:position pos:line="1555" pos:column="47"/></operator><name pos:line="1555" pos:column="47">i<pos:position pos:line="1555" pos:column="48"/></name></expr></incr>)<pos:position pos:line="1555" pos:column="49"/></control> <block pos:line="1555" pos:column="50">{
        <decl_stmt><decl><type><name pos:line="1556" pos:column="9">var_rec<pos:position pos:line="1556" pos:column="16"/></name> <modifier pos:line="1556" pos:column="17">*<pos:position pos:line="1556" pos:column="18"/></modifier></type><name pos:line="1556" pos:column="18">variant<pos:position pos:line="1556" pos:column="25"/></name> <init pos:line="1556" pos:column="26">= <expr><operator pos:line="1556" pos:column="28">&amp;<pos:position pos:line="1556" pos:column="33"/></operator><operator pos:line="1556" pos:column="29">(<pos:position pos:line="1556" pos:column="30"/></operator><operator pos:line="1556" pos:column="30">(<pos:position pos:line="1556" pos:column="31"/></operator><name pos:line="1556" pos:column="31">var_rec<pos:position pos:line="1556" pos:column="38"/></name> <operator pos:line="1556" pos:column="39">*<pos:position pos:line="1556" pos:column="40"/></operator><operator pos:line="1556" pos:column="40">)<pos:position pos:line="1556" pos:column="41"/></operator> <name><name pos:line="1556" pos:column="42">neg<pos:position pos:line="1556" pos:column="45"/></name><operator pos:line="1556" pos:column="45">-&gt;<pos:position pos:line="1556" pos:column="50"/></operator><name pos:line="1556" pos:column="47">avail_vars<pos:position pos:line="1556" pos:column="57"/></name><operator pos:line="1556" pos:column="57">-&gt;<pos:position pos:line="1556" pos:column="62"/></operator><name pos:line="1556" pos:column="59">elts<pos:position pos:line="1556" pos:column="63"/></name></name><operator pos:line="1556" pos:column="63">)<pos:position pos:line="1556" pos:column="64"/></operator><index pos:line="1556" pos:column="64">[<expr><name pos:line="1556" pos:column="65">i<pos:position pos:line="1556" pos:column="66"/></name></expr>]<pos:position pos:line="1556" pos:column="67"/></index></expr></init></decl>;<pos:position pos:line="1556" pos:column="68"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="1557" pos:column="9">const<pos:position pos:line="1557" pos:column="14"/></specifier> <name pos:line="1557" pos:column="15">char<pos:position pos:line="1557" pos:column="19"/></name> <modifier pos:line="1557" pos:column="20">*<pos:position pos:line="1557" pos:column="21"/></modifier></type><name pos:line="1557" pos:column="21">filename<pos:position pos:line="1557" pos:column="29"/></name> <init pos:line="1557" pos:column="30">= <expr><ternary><condition><expr><name><name pos:line="1557" pos:column="32">variant<pos:position pos:line="1557" pos:column="39"/></name><operator pos:line="1557" pos:column="39">-&gt;<pos:position pos:line="1557" pos:column="44"/></operator><name pos:line="1557" pos:column="41">file_name<pos:position pos:line="1557" pos:column="50"/></name></name></expr> ?<pos:position pos:line="1557" pos:column="52"/></condition><then pos:line="1557" pos:column="52"> <expr><name><name pos:line="1557" pos:column="53">variant<pos:position pos:line="1557" pos:column="60"/></name><operator pos:line="1557" pos:column="60">-&gt;<pos:position pos:line="1557" pos:column="65"/></operator><name pos:line="1557" pos:column="62">file_name<pos:position pos:line="1557" pos:column="71"/></name></name></expr> <pos:position pos:line="1557" pos:column="72"/></then><else pos:line="1557" pos:column="72">: <expr><literal type="string" pos:line="1557" pos:column="74">""<pos:position pos:line="1557" pos:column="76"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="1557" pos:column="77"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1558" pos:column="9">apr_array_header_t<pos:position pos:line="1558" pos:column="27"/></name> <modifier pos:line="1558" pos:column="28">*<pos:position pos:line="1558" pos:column="29"/></modifier></type><name pos:line="1558" pos:column="29">languages<pos:position pos:line="1558" pos:column="38"/></name> <init pos:line="1558" pos:column="39">= <expr><name><name pos:line="1558" pos:column="41">variant<pos:position pos:line="1558" pos:column="48"/></name><operator pos:line="1558" pos:column="48">-&gt;<pos:position pos:line="1558" pos:column="53"/></operator><name pos:line="1558" pos:column="50">content_languages<pos:position pos:line="1558" pos:column="67"/></name></name></expr></init></decl>;<pos:position pos:line="1558" pos:column="68"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="1559" pos:column="9">const<pos:position pos:line="1559" pos:column="14"/></specifier> <name pos:line="1559" pos:column="15">char<pos:position pos:line="1559" pos:column="19"/></name> <modifier pos:line="1559" pos:column="20">*<pos:position pos:line="1559" pos:column="21"/></modifier></type><name pos:line="1559" pos:column="21">description<pos:position pos:line="1559" pos:column="32"/></name> <init pos:line="1559" pos:column="33">= <expr><ternary><condition><expr><name><name pos:line="1559" pos:column="35">variant<pos:position pos:line="1559" pos:column="42"/></name><operator pos:line="1559" pos:column="42">-&gt;<pos:position pos:line="1559" pos:column="47"/></operator><name pos:line="1559" pos:column="44">description<pos:position pos:line="1559" pos:column="55"/></name></name></expr>
                                    ?<pos:position pos:line="1560" pos:column="38"/></condition><then pos:line="1560" pos:column="38"> <expr><name><name pos:line="1560" pos:column="39">variant<pos:position pos:line="1560" pos:column="46"/></name><operator pos:line="1560" pos:column="46">-&gt;<pos:position pos:line="1560" pos:column="51"/></operator><name pos:line="1560" pos:column="48">description<pos:position pos:line="1560" pos:column="59"/></name></name></expr>
                                    <pos:position pos:line="1561" pos:column="37"/></then><else pos:line="1561" pos:column="37">: <expr><literal type="string" pos:line="1561" pos:column="39">""<pos:position pos:line="1561" pos:column="41"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="1561" pos:column="42"/></decl_stmt>

        <comment type="block" pos:line="1563" pos:column="9">/* The format isn't very neat, and it would be nice to make
         * the tags human readable (eg replace 'language en' with 'English').
         * Note that if you change the number of substrings pushed, you also
         * need to change the calculation of max_vlist_array above.
         */</comment>
        <expr_stmt><expr><operator pos:line="1568" pos:column="9">*<pos:position pos:line="1568" pos:column="10"/></operator><operator pos:line="1568" pos:column="10">(<pos:position pos:line="1568" pos:column="11"/></operator><operator pos:line="1568" pos:column="11">(<pos:position pos:line="1568" pos:column="12"/></operator><specifier pos:line="1568" pos:column="12">const<pos:position pos:line="1568" pos:column="17"/></specifier> <name pos:line="1568" pos:column="18">char<pos:position pos:line="1568" pos:column="22"/></name> <operator pos:line="1568" pos:column="23">*<pos:position pos:line="1568" pos:column="24"/></operator><operator pos:line="1568" pos:column="24">*<pos:position pos:line="1568" pos:column="25"/></operator><operator pos:line="1568" pos:column="25">)<pos:position pos:line="1568" pos:column="26"/></operator> <call><name pos:line="1568" pos:column="27">apr_array_push<pos:position pos:line="1568" pos:column="41"/></name><argument_list pos:line="1568" pos:column="41">(<argument><expr><name pos:line="1568" pos:column="42">arr<pos:position pos:line="1568" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1568" pos:column="46"/></argument_list></call><operator pos:line="1568" pos:column="46">)<pos:position pos:line="1568" pos:column="47"/></operator> <operator pos:line="1568" pos:column="48">=<pos:position pos:line="1568" pos:column="49"/></operator> <literal type="string" pos:line="1568" pos:column="50">"&lt;li&gt;&lt;a href=\""<pos:position pos:line="1568" pos:column="75"/></literal></expr>;<pos:position pos:line="1568" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="1569" pos:column="9">*<pos:position pos:line="1569" pos:column="10"/></operator><operator pos:line="1569" pos:column="10">(<pos:position pos:line="1569" pos:column="11"/></operator><operator pos:line="1569" pos:column="11">(<pos:position pos:line="1569" pos:column="12"/></operator><specifier pos:line="1569" pos:column="12">const<pos:position pos:line="1569" pos:column="17"/></specifier> <name pos:line="1569" pos:column="18">char<pos:position pos:line="1569" pos:column="22"/></name> <operator pos:line="1569" pos:column="23">*<pos:position pos:line="1569" pos:column="24"/></operator><operator pos:line="1569" pos:column="24">*<pos:position pos:line="1569" pos:column="25"/></operator><operator pos:line="1569" pos:column="25">)<pos:position pos:line="1569" pos:column="26"/></operator> <call><name pos:line="1569" pos:column="27">apr_array_push<pos:position pos:line="1569" pos:column="41"/></name><argument_list pos:line="1569" pos:column="41">(<argument><expr><name pos:line="1569" pos:column="42">arr<pos:position pos:line="1569" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1569" pos:column="46"/></argument_list></call><operator pos:line="1569" pos:column="46">)<pos:position pos:line="1569" pos:column="47"/></operator> <operator pos:line="1569" pos:column="48">=<pos:position pos:line="1569" pos:column="49"/></operator> <name pos:line="1569" pos:column="50">filename<pos:position pos:line="1569" pos:column="58"/></name></expr>;<pos:position pos:line="1569" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="1570" pos:column="9">*<pos:position pos:line="1570" pos:column="10"/></operator><operator pos:line="1570" pos:column="10">(<pos:position pos:line="1570" pos:column="11"/></operator><operator pos:line="1570" pos:column="11">(<pos:position pos:line="1570" pos:column="12"/></operator><specifier pos:line="1570" pos:column="12">const<pos:position pos:line="1570" pos:column="17"/></specifier> <name pos:line="1570" pos:column="18">char<pos:position pos:line="1570" pos:column="22"/></name> <operator pos:line="1570" pos:column="23">*<pos:position pos:line="1570" pos:column="24"/></operator><operator pos:line="1570" pos:column="24">*<pos:position pos:line="1570" pos:column="25"/></operator><operator pos:line="1570" pos:column="25">)<pos:position pos:line="1570" pos:column="26"/></operator> <call><name pos:line="1570" pos:column="27">apr_array_push<pos:position pos:line="1570" pos:column="41"/></name><argument_list pos:line="1570" pos:column="41">(<argument><expr><name pos:line="1570" pos:column="42">arr<pos:position pos:line="1570" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1570" pos:column="46"/></argument_list></call><operator pos:line="1570" pos:column="46">)<pos:position pos:line="1570" pos:column="47"/></operator> <operator pos:line="1570" pos:column="48">=<pos:position pos:line="1570" pos:column="49"/></operator> <literal type="string" pos:line="1570" pos:column="50">"\"&gt;"<pos:position pos:line="1570" pos:column="58"/></literal></expr>;<pos:position pos:line="1570" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="1571" pos:column="9">*<pos:position pos:line="1571" pos:column="10"/></operator><operator pos:line="1571" pos:column="10">(<pos:position pos:line="1571" pos:column="11"/></operator><operator pos:line="1571" pos:column="11">(<pos:position pos:line="1571" pos:column="12"/></operator><specifier pos:line="1571" pos:column="12">const<pos:position pos:line="1571" pos:column="17"/></specifier> <name pos:line="1571" pos:column="18">char<pos:position pos:line="1571" pos:column="22"/></name> <operator pos:line="1571" pos:column="23">*<pos:position pos:line="1571" pos:column="24"/></operator><operator pos:line="1571" pos:column="24">*<pos:position pos:line="1571" pos:column="25"/></operator><operator pos:line="1571" pos:column="25">)<pos:position pos:line="1571" pos:column="26"/></operator> <call><name pos:line="1571" pos:column="27">apr_array_push<pos:position pos:line="1571" pos:column="41"/></name><argument_list pos:line="1571" pos:column="41">(<argument><expr><name pos:line="1571" pos:column="42">arr<pos:position pos:line="1571" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1571" pos:column="46"/></argument_list></call><operator pos:line="1571" pos:column="46">)<pos:position pos:line="1571" pos:column="47"/></operator> <operator pos:line="1571" pos:column="48">=<pos:position pos:line="1571" pos:column="49"/></operator> <name pos:line="1571" pos:column="50">filename<pos:position pos:line="1571" pos:column="58"/></name></expr>;<pos:position pos:line="1571" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="1572" pos:column="9">*<pos:position pos:line="1572" pos:column="10"/></operator><operator pos:line="1572" pos:column="10">(<pos:position pos:line="1572" pos:column="11"/></operator><operator pos:line="1572" pos:column="11">(<pos:position pos:line="1572" pos:column="12"/></operator><specifier pos:line="1572" pos:column="12">const<pos:position pos:line="1572" pos:column="17"/></specifier> <name pos:line="1572" pos:column="18">char<pos:position pos:line="1572" pos:column="22"/></name> <operator pos:line="1572" pos:column="23">*<pos:position pos:line="1572" pos:column="24"/></operator><operator pos:line="1572" pos:column="24">*<pos:position pos:line="1572" pos:column="25"/></operator><operator pos:line="1572" pos:column="25">)<pos:position pos:line="1572" pos:column="26"/></operator> <call><name pos:line="1572" pos:column="27">apr_array_push<pos:position pos:line="1572" pos:column="41"/></name><argument_list pos:line="1572" pos:column="41">(<argument><expr><name pos:line="1572" pos:column="42">arr<pos:position pos:line="1572" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1572" pos:column="46"/></argument_list></call><operator pos:line="1572" pos:column="46">)<pos:position pos:line="1572" pos:column="47"/></operator> <operator pos:line="1572" pos:column="48">=<pos:position pos:line="1572" pos:column="49"/></operator> <literal type="string" pos:line="1572" pos:column="50">"&lt;/a&gt; "<pos:position pos:line="1572" pos:column="63"/></literal></expr>;<pos:position pos:line="1572" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="1573" pos:column="9">*<pos:position pos:line="1573" pos:column="10"/></operator><operator pos:line="1573" pos:column="10">(<pos:position pos:line="1573" pos:column="11"/></operator><operator pos:line="1573" pos:column="11">(<pos:position pos:line="1573" pos:column="12"/></operator><specifier pos:line="1573" pos:column="12">const<pos:position pos:line="1573" pos:column="17"/></specifier> <name pos:line="1573" pos:column="18">char<pos:position pos:line="1573" pos:column="22"/></name> <operator pos:line="1573" pos:column="23">*<pos:position pos:line="1573" pos:column="24"/></operator><operator pos:line="1573" pos:column="24">*<pos:position pos:line="1573" pos:column="25"/></operator><operator pos:line="1573" pos:column="25">)<pos:position pos:line="1573" pos:column="26"/></operator> <call><name pos:line="1573" pos:column="27">apr_array_push<pos:position pos:line="1573" pos:column="41"/></name><argument_list pos:line="1573" pos:column="41">(<argument><expr><name pos:line="1573" pos:column="42">arr<pos:position pos:line="1573" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1573" pos:column="46"/></argument_list></call><operator pos:line="1573" pos:column="46">)<pos:position pos:line="1573" pos:column="47"/></operator> <operator pos:line="1573" pos:column="48">=<pos:position pos:line="1573" pos:column="49"/></operator> <name pos:line="1573" pos:column="50">description<pos:position pos:line="1573" pos:column="61"/></name></expr>;<pos:position pos:line="1573" pos:column="62"/></expr_stmt>

        <if pos:line="1575" pos:column="9">if <condition pos:line="1575" pos:column="12">(<expr><name><name pos:line="1575" pos:column="13">variant<pos:position pos:line="1575" pos:column="20"/></name><operator pos:line="1575" pos:column="20">-&gt;<pos:position pos:line="1575" pos:column="25"/></operator><name pos:line="1575" pos:column="22">mime_type<pos:position pos:line="1575" pos:column="31"/></name></name> <operator pos:line="1575" pos:column="32">&amp;&amp;<pos:position pos:line="1575" pos:column="42"/></operator> <operator pos:line="1575" pos:column="35">*<pos:position pos:line="1575" pos:column="36"/></operator><name><name pos:line="1575" pos:column="36">variant<pos:position pos:line="1575" pos:column="43"/></name><operator pos:line="1575" pos:column="43">-&gt;<pos:position pos:line="1575" pos:column="48"/></operator><name pos:line="1575" pos:column="45">mime_type<pos:position pos:line="1575" pos:column="54"/></name></name></expr>)<pos:position pos:line="1575" pos:column="55"/></condition><then pos:line="1575" pos:column="55"> <block pos:line="1575" pos:column="56">{
            <expr_stmt><expr><operator pos:line="1576" pos:column="13">*<pos:position pos:line="1576" pos:column="14"/></operator><operator pos:line="1576" pos:column="14">(<pos:position pos:line="1576" pos:column="15"/></operator><operator pos:line="1576" pos:column="15">(<pos:position pos:line="1576" pos:column="16"/></operator><specifier pos:line="1576" pos:column="16">const<pos:position pos:line="1576" pos:column="21"/></specifier> <name pos:line="1576" pos:column="22">char<pos:position pos:line="1576" pos:column="26"/></name> <operator pos:line="1576" pos:column="27">*<pos:position pos:line="1576" pos:column="28"/></operator><operator pos:line="1576" pos:column="28">*<pos:position pos:line="1576" pos:column="29"/></operator><operator pos:line="1576" pos:column="29">)<pos:position pos:line="1576" pos:column="30"/></operator> <call><name pos:line="1576" pos:column="31">apr_array_push<pos:position pos:line="1576" pos:column="45"/></name><argument_list pos:line="1576" pos:column="45">(<argument><expr><name pos:line="1576" pos:column="46">arr<pos:position pos:line="1576" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1576" pos:column="50"/></argument_list></call><operator pos:line="1576" pos:column="50">)<pos:position pos:line="1576" pos:column="51"/></operator> <operator pos:line="1576" pos:column="52">=<pos:position pos:line="1576" pos:column="53"/></operator> <literal type="string" pos:line="1576" pos:column="54">", type "<pos:position pos:line="1576" pos:column="63"/></literal></expr>;<pos:position pos:line="1576" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1577" pos:column="13">*<pos:position pos:line="1577" pos:column="14"/></operator><operator pos:line="1577" pos:column="14">(<pos:position pos:line="1577" pos:column="15"/></operator><operator pos:line="1577" pos:column="15">(<pos:position pos:line="1577" pos:column="16"/></operator><specifier pos:line="1577" pos:column="16">const<pos:position pos:line="1577" pos:column="21"/></specifier> <name pos:line="1577" pos:column="22">char<pos:position pos:line="1577" pos:column="26"/></name> <operator pos:line="1577" pos:column="27">*<pos:position pos:line="1577" pos:column="28"/></operator><operator pos:line="1577" pos:column="28">*<pos:position pos:line="1577" pos:column="29"/></operator><operator pos:line="1577" pos:column="29">)<pos:position pos:line="1577" pos:column="30"/></operator> <call><name pos:line="1577" pos:column="31">apr_array_push<pos:position pos:line="1577" pos:column="45"/></name><argument_list pos:line="1577" pos:column="45">(<argument><expr><name pos:line="1577" pos:column="46">arr<pos:position pos:line="1577" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1577" pos:column="50"/></argument_list></call><operator pos:line="1577" pos:column="50">)<pos:position pos:line="1577" pos:column="51"/></operator> <operator pos:line="1577" pos:column="52">=<pos:position pos:line="1577" pos:column="53"/></operator> <name><name pos:line="1577" pos:column="54">variant<pos:position pos:line="1577" pos:column="61"/></name><operator pos:line="1577" pos:column="61">-&gt;<pos:position pos:line="1577" pos:column="66"/></operator><name pos:line="1577" pos:column="63">mime_type<pos:position pos:line="1577" pos:column="72"/></name></name></expr>;<pos:position pos:line="1577" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="1578" pos:column="10"/></block></then></if>
        <if pos:line="1579" pos:column="9">if <condition pos:line="1579" pos:column="12">(<expr><name pos:line="1579" pos:column="13">languages<pos:position pos:line="1579" pos:column="22"/></name> <operator pos:line="1579" pos:column="23">&amp;&amp;<pos:position pos:line="1579" pos:column="33"/></operator> <name><name pos:line="1579" pos:column="26">languages<pos:position pos:line="1579" pos:column="35"/></name><operator pos:line="1579" pos:column="35">-&gt;<pos:position pos:line="1579" pos:column="40"/></operator><name pos:line="1579" pos:column="37">nelts<pos:position pos:line="1579" pos:column="42"/></name></name></expr>)<pos:position pos:line="1579" pos:column="43"/></condition><then pos:line="1579" pos:column="43"> <block pos:line="1579" pos:column="44">{
            <expr_stmt><expr><operator pos:line="1580" pos:column="13">*<pos:position pos:line="1580" pos:column="14"/></operator><operator pos:line="1580" pos:column="14">(<pos:position pos:line="1580" pos:column="15"/></operator><operator pos:line="1580" pos:column="15">(<pos:position pos:line="1580" pos:column="16"/></operator><specifier pos:line="1580" pos:column="16">const<pos:position pos:line="1580" pos:column="21"/></specifier> <name pos:line="1580" pos:column="22">char<pos:position pos:line="1580" pos:column="26"/></name> <operator pos:line="1580" pos:column="27">*<pos:position pos:line="1580" pos:column="28"/></operator><operator pos:line="1580" pos:column="28">*<pos:position pos:line="1580" pos:column="29"/></operator><operator pos:line="1580" pos:column="29">)<pos:position pos:line="1580" pos:column="30"/></operator> <call><name pos:line="1580" pos:column="31">apr_array_push<pos:position pos:line="1580" pos:column="45"/></name><argument_list pos:line="1580" pos:column="45">(<argument><expr><name pos:line="1580" pos:column="46">arr<pos:position pos:line="1580" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1580" pos:column="50"/></argument_list></call><operator pos:line="1580" pos:column="50">)<pos:position pos:line="1580" pos:column="51"/></operator> <operator pos:line="1580" pos:column="52">=<pos:position pos:line="1580" pos:column="53"/></operator> <literal type="string" pos:line="1580" pos:column="54">", language "<pos:position pos:line="1580" pos:column="67"/></literal></expr>;<pos:position pos:line="1580" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1581" pos:column="13">*<pos:position pos:line="1581" pos:column="14"/></operator><operator pos:line="1581" pos:column="14">(<pos:position pos:line="1581" pos:column="15"/></operator><operator pos:line="1581" pos:column="15">(<pos:position pos:line="1581" pos:column="16"/></operator><specifier pos:line="1581" pos:column="16">const<pos:position pos:line="1581" pos:column="21"/></specifier> <name pos:line="1581" pos:column="22">char<pos:position pos:line="1581" pos:column="26"/></name> <operator pos:line="1581" pos:column="27">*<pos:position pos:line="1581" pos:column="28"/></operator><operator pos:line="1581" pos:column="28">*<pos:position pos:line="1581" pos:column="29"/></operator><operator pos:line="1581" pos:column="29">)<pos:position pos:line="1581" pos:column="30"/></operator> <call><name pos:line="1581" pos:column="31">apr_array_push<pos:position pos:line="1581" pos:column="45"/></name><argument_list pos:line="1581" pos:column="45">(<argument><expr><name pos:line="1581" pos:column="46">arr<pos:position pos:line="1581" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1581" pos:column="50"/></argument_list></call><operator pos:line="1581" pos:column="50">)<pos:position pos:line="1581" pos:column="51"/></operator> <operator pos:line="1581" pos:column="52">=<pos:position pos:line="1581" pos:column="53"/></operator> <call><name pos:line="1581" pos:column="54">apr_array_pstrcat<pos:position pos:line="1581" pos:column="71"/></name><argument_list pos:line="1581" pos:column="71">(<argument><expr><name><name pos:line="1581" pos:column="72">r<pos:position pos:line="1581" pos:column="73"/></name><operator pos:line="1581" pos:column="73">-&gt;<pos:position pos:line="1581" pos:column="78"/></operator><name pos:line="1581" pos:column="75">pool<pos:position pos:line="1581" pos:column="79"/></name></name></expr></argument>,
                                                       <argument><expr><name pos:line="1582" pos:column="56">languages<pos:position pos:line="1582" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="1582" pos:column="67">','<pos:position pos:line="1582" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="1582" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="1582" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="1583" pos:column="10"/></block></then></if>
        <if pos:line="1584" pos:column="9">if <condition pos:line="1584" pos:column="12">(<expr><name><name pos:line="1584" pos:column="13">variant<pos:position pos:line="1584" pos:column="20"/></name><operator pos:line="1584" pos:column="20">-&gt;<pos:position pos:line="1584" pos:column="25"/></operator><name pos:line="1584" pos:column="22">content_charset<pos:position pos:line="1584" pos:column="37"/></name></name> <operator pos:line="1584" pos:column="38">&amp;&amp;<pos:position pos:line="1584" pos:column="48"/></operator> <operator pos:line="1584" pos:column="41">*<pos:position pos:line="1584" pos:column="42"/></operator><name><name pos:line="1584" pos:column="42">variant<pos:position pos:line="1584" pos:column="49"/></name><operator pos:line="1584" pos:column="49">-&gt;<pos:position pos:line="1584" pos:column="54"/></operator><name pos:line="1584" pos:column="51">content_charset<pos:position pos:line="1584" pos:column="66"/></name></name></expr>)<pos:position pos:line="1584" pos:column="67"/></condition><then pos:line="1584" pos:column="67"> <block pos:line="1584" pos:column="68">{
            <expr_stmt><expr><operator pos:line="1585" pos:column="13">*<pos:position pos:line="1585" pos:column="14"/></operator><operator pos:line="1585" pos:column="14">(<pos:position pos:line="1585" pos:column="15"/></operator><operator pos:line="1585" pos:column="15">(<pos:position pos:line="1585" pos:column="16"/></operator><specifier pos:line="1585" pos:column="16">const<pos:position pos:line="1585" pos:column="21"/></specifier> <name pos:line="1585" pos:column="22">char<pos:position pos:line="1585" pos:column="26"/></name> <operator pos:line="1585" pos:column="27">*<pos:position pos:line="1585" pos:column="28"/></operator><operator pos:line="1585" pos:column="28">*<pos:position pos:line="1585" pos:column="29"/></operator><operator pos:line="1585" pos:column="29">)<pos:position pos:line="1585" pos:column="30"/></operator> <call><name pos:line="1585" pos:column="31">apr_array_push<pos:position pos:line="1585" pos:column="45"/></name><argument_list pos:line="1585" pos:column="45">(<argument><expr><name pos:line="1585" pos:column="46">arr<pos:position pos:line="1585" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1585" pos:column="50"/></argument_list></call><operator pos:line="1585" pos:column="50">)<pos:position pos:line="1585" pos:column="51"/></operator> <operator pos:line="1585" pos:column="52">=<pos:position pos:line="1585" pos:column="53"/></operator> <literal type="string" pos:line="1585" pos:column="54">", charset "<pos:position pos:line="1585" pos:column="66"/></literal></expr>;<pos:position pos:line="1585" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1586" pos:column="13">*<pos:position pos:line="1586" pos:column="14"/></operator><operator pos:line="1586" pos:column="14">(<pos:position pos:line="1586" pos:column="15"/></operator><operator pos:line="1586" pos:column="15">(<pos:position pos:line="1586" pos:column="16"/></operator><specifier pos:line="1586" pos:column="16">const<pos:position pos:line="1586" pos:column="21"/></specifier> <name pos:line="1586" pos:column="22">char<pos:position pos:line="1586" pos:column="26"/></name> <operator pos:line="1586" pos:column="27">*<pos:position pos:line="1586" pos:column="28"/></operator><operator pos:line="1586" pos:column="28">*<pos:position pos:line="1586" pos:column="29"/></operator><operator pos:line="1586" pos:column="29">)<pos:position pos:line="1586" pos:column="30"/></operator> <call><name pos:line="1586" pos:column="31">apr_array_push<pos:position pos:line="1586" pos:column="45"/></name><argument_list pos:line="1586" pos:column="45">(<argument><expr><name pos:line="1586" pos:column="46">arr<pos:position pos:line="1586" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1586" pos:column="50"/></argument_list></call><operator pos:line="1586" pos:column="50">)<pos:position pos:line="1586" pos:column="51"/></operator> <operator pos:line="1586" pos:column="52">=<pos:position pos:line="1586" pos:column="53"/></operator> <name><name pos:line="1586" pos:column="54">variant<pos:position pos:line="1586" pos:column="61"/></name><operator pos:line="1586" pos:column="61">-&gt;<pos:position pos:line="1586" pos:column="66"/></operator><name pos:line="1586" pos:column="63">content_charset<pos:position pos:line="1586" pos:column="78"/></name></name></expr>;<pos:position pos:line="1586" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="1587" pos:column="10"/></block></then></if>
        <if pos:line="1588" pos:column="9">if <condition pos:line="1588" pos:column="12">(<expr><name><name pos:line="1588" pos:column="13">variant<pos:position pos:line="1588" pos:column="20"/></name><operator pos:line="1588" pos:column="20">-&gt;<pos:position pos:line="1588" pos:column="25"/></operator><name pos:line="1588" pos:column="22">content_encoding<pos:position pos:line="1588" pos:column="38"/></name></name></expr>)<pos:position pos:line="1588" pos:column="39"/></condition><then pos:line="1588" pos:column="39"> <block pos:line="1588" pos:column="40">{
            <expr_stmt><expr><operator pos:line="1589" pos:column="13">*<pos:position pos:line="1589" pos:column="14"/></operator><operator pos:line="1589" pos:column="14">(<pos:position pos:line="1589" pos:column="15"/></operator><operator pos:line="1589" pos:column="15">(<pos:position pos:line="1589" pos:column="16"/></operator><specifier pos:line="1589" pos:column="16">const<pos:position pos:line="1589" pos:column="21"/></specifier> <name pos:line="1589" pos:column="22">char<pos:position pos:line="1589" pos:column="26"/></name> <operator pos:line="1589" pos:column="27">*<pos:position pos:line="1589" pos:column="28"/></operator><operator pos:line="1589" pos:column="28">*<pos:position pos:line="1589" pos:column="29"/></operator><operator pos:line="1589" pos:column="29">)<pos:position pos:line="1589" pos:column="30"/></operator> <call><name pos:line="1589" pos:column="31">apr_array_push<pos:position pos:line="1589" pos:column="45"/></name><argument_list pos:line="1589" pos:column="45">(<argument><expr><name pos:line="1589" pos:column="46">arr<pos:position pos:line="1589" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1589" pos:column="50"/></argument_list></call><operator pos:line="1589" pos:column="50">)<pos:position pos:line="1589" pos:column="51"/></operator> <operator pos:line="1589" pos:column="52">=<pos:position pos:line="1589" pos:column="53"/></operator> <literal type="string" pos:line="1589" pos:column="54">", encoding "<pos:position pos:line="1589" pos:column="67"/></literal></expr>;<pos:position pos:line="1589" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1590" pos:column="13">*<pos:position pos:line="1590" pos:column="14"/></operator><operator pos:line="1590" pos:column="14">(<pos:position pos:line="1590" pos:column="15"/></operator><operator pos:line="1590" pos:column="15">(<pos:position pos:line="1590" pos:column="16"/></operator><specifier pos:line="1590" pos:column="16">const<pos:position pos:line="1590" pos:column="21"/></specifier> <name pos:line="1590" pos:column="22">char<pos:position pos:line="1590" pos:column="26"/></name> <operator pos:line="1590" pos:column="27">*<pos:position pos:line="1590" pos:column="28"/></operator><operator pos:line="1590" pos:column="28">*<pos:position pos:line="1590" pos:column="29"/></operator><operator pos:line="1590" pos:column="29">)<pos:position pos:line="1590" pos:column="30"/></operator> <call><name pos:line="1590" pos:column="31">apr_array_push<pos:position pos:line="1590" pos:column="45"/></name><argument_list pos:line="1590" pos:column="45">(<argument><expr><name pos:line="1590" pos:column="46">arr<pos:position pos:line="1590" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1590" pos:column="50"/></argument_list></call><operator pos:line="1590" pos:column="50">)<pos:position pos:line="1590" pos:column="51"/></operator> <operator pos:line="1590" pos:column="52">=<pos:position pos:line="1590" pos:column="53"/></operator> <name><name pos:line="1590" pos:column="54">variant<pos:position pos:line="1590" pos:column="61"/></name><operator pos:line="1590" pos:column="61">-&gt;<pos:position pos:line="1590" pos:column="66"/></operator><name pos:line="1590" pos:column="63">content_encoding<pos:position pos:line="1590" pos:column="79"/></name></name></expr>;<pos:position pos:line="1590" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="1591" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="1592" pos:column="9">*<pos:position pos:line="1592" pos:column="10"/></operator><operator pos:line="1592" pos:column="10">(<pos:position pos:line="1592" pos:column="11"/></operator><operator pos:line="1592" pos:column="11">(<pos:position pos:line="1592" pos:column="12"/></operator><specifier pos:line="1592" pos:column="12">const<pos:position pos:line="1592" pos:column="17"/></specifier> <name pos:line="1592" pos:column="18">char<pos:position pos:line="1592" pos:column="22"/></name> <operator pos:line="1592" pos:column="23">*<pos:position pos:line="1592" pos:column="24"/></operator><operator pos:line="1592" pos:column="24">*<pos:position pos:line="1592" pos:column="25"/></operator><operator pos:line="1592" pos:column="25">)<pos:position pos:line="1592" pos:column="26"/></operator> <call><name pos:line="1592" pos:column="27">apr_array_push<pos:position pos:line="1592" pos:column="41"/></name><argument_list pos:line="1592" pos:column="41">(<argument><expr><name pos:line="1592" pos:column="42">arr<pos:position pos:line="1592" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1592" pos:column="46"/></argument_list></call><operator pos:line="1592" pos:column="46">)<pos:position pos:line="1592" pos:column="47"/></operator> <operator pos:line="1592" pos:column="48">=<pos:position pos:line="1592" pos:column="49"/></operator> <literal type="string" pos:line="1592" pos:column="50">"&lt;/li&gt;\n"<pos:position pos:line="1592" pos:column="65"/></literal></expr>;<pos:position pos:line="1592" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="1593" pos:column="6"/></block></for>
    <expr_stmt><expr><operator pos:line="1594" pos:column="5">*<pos:position pos:line="1594" pos:column="6"/></operator><operator pos:line="1594" pos:column="6">(<pos:position pos:line="1594" pos:column="7"/></operator><operator pos:line="1594" pos:column="7">(<pos:position pos:line="1594" pos:column="8"/></operator><specifier pos:line="1594" pos:column="8">const<pos:position pos:line="1594" pos:column="13"/></specifier> <name pos:line="1594" pos:column="14">char<pos:position pos:line="1594" pos:column="18"/></name> <operator pos:line="1594" pos:column="19">*<pos:position pos:line="1594" pos:column="20"/></operator><operator pos:line="1594" pos:column="20">*<pos:position pos:line="1594" pos:column="21"/></operator><operator pos:line="1594" pos:column="21">)<pos:position pos:line="1594" pos:column="22"/></operator> <call><name pos:line="1594" pos:column="23">apr_array_push<pos:position pos:line="1594" pos:column="37"/></name><argument_list pos:line="1594" pos:column="37">(<argument><expr><name pos:line="1594" pos:column="38">arr<pos:position pos:line="1594" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1594" pos:column="42"/></argument_list></call><operator pos:line="1594" pos:column="42">)<pos:position pos:line="1594" pos:column="43"/></operator> <operator pos:line="1594" pos:column="44">=<pos:position pos:line="1594" pos:column="45"/></operator> <literal type="string" pos:line="1594" pos:column="46">"&lt;/ul&gt;\n"<pos:position pos:line="1594" pos:column="61"/></literal></expr>;<pos:position pos:line="1594" pos:column="56"/></expr_stmt>

    <return pos:line="1596" pos:column="5">return <expr><call><name pos:line="1596" pos:column="12">apr_array_pstrcat<pos:position pos:line="1596" pos:column="29"/></name><argument_list pos:line="1596" pos:column="29">(<argument><expr><name><name pos:line="1596" pos:column="30">r<pos:position pos:line="1596" pos:column="31"/></name><operator pos:line="1596" pos:column="31">-&gt;<pos:position pos:line="1596" pos:column="36"/></operator><name pos:line="1596" pos:column="33">pool<pos:position pos:line="1596" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="1596" pos:column="39">arr<pos:position pos:line="1596" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="1596" pos:column="44">'\0'<pos:position pos:line="1596" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="1596" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1596" pos:column="50"/></return>
}<pos:position pos:line="1597" pos:column="2"/></block></function>

<function><specifier pos:line="1599" pos:column="1">static<pos:position pos:line="1599" pos:column="7"/></specifier> <type><name pos:line="1599" pos:column="8">void<pos:position pos:line="1599" pos:column="12"/></name></type> <name pos:line="1599" pos:column="13">store_variant_list<pos:position pos:line="1599" pos:column="31"/></name><parameter_list pos:line="1599" pos:column="31">(<parameter><decl><type><name pos:line="1599" pos:column="32">request_rec<pos:position pos:line="1599" pos:column="43"/></name> <modifier pos:line="1599" pos:column="44">*<pos:position pos:line="1599" pos:column="45"/></modifier></type><name pos:line="1599" pos:column="45">r<pos:position pos:line="1599" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1599" pos:column="48">negotiation_state<pos:position pos:line="1599" pos:column="65"/></name> <modifier pos:line="1599" pos:column="66">*<pos:position pos:line="1599" pos:column="67"/></modifier></type><name pos:line="1599" pos:column="67">neg<pos:position pos:line="1599" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1599" pos:column="71"/></parameter_list>
<block pos:line="1600" pos:column="1">{
    <if pos:line="1601" pos:column="5">if <condition pos:line="1601" pos:column="8">(<expr><name><name pos:line="1601" pos:column="9">r<pos:position pos:line="1601" pos:column="10"/></name><operator pos:line="1601" pos:column="10">-&gt;<pos:position pos:line="1601" pos:column="15"/></operator><name pos:line="1601" pos:column="12">main<pos:position pos:line="1601" pos:column="16"/></name></name> <operator pos:line="1601" pos:column="17">==<pos:position pos:line="1601" pos:column="19"/></operator> <name pos:line="1601" pos:column="20">NULL<pos:position pos:line="1601" pos:column="24"/></name></expr>)<pos:position pos:line="1601" pos:column="25"/></condition><then pos:line="1601" pos:column="25"> <block pos:line="1601" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="1602" pos:column="9">apr_table_setn<pos:position pos:line="1602" pos:column="23"/></name><argument_list pos:line="1602" pos:column="23">(<argument><expr><name><name pos:line="1602" pos:column="24">r<pos:position pos:line="1602" pos:column="25"/></name><operator pos:line="1602" pos:column="25">-&gt;<pos:position pos:line="1602" pos:column="30"/></operator><name pos:line="1602" pos:column="27">notes<pos:position pos:line="1602" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1602" pos:column="34">"variant-list"<pos:position pos:line="1602" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="1602" pos:column="50">make_variant_list<pos:position pos:line="1602" pos:column="67"/></name><argument_list pos:line="1602" pos:column="67">(<argument><expr><name pos:line="1602" pos:column="68">r<pos:position pos:line="1602" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="1602" pos:column="71">neg<pos:position pos:line="1602" pos:column="74"/></name></expr></argument>)<pos:position pos:line="1602" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="1602" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="1602" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="1603" pos:column="6"/></block></then>
    <else pos:line="1604" pos:column="5">else <block pos:line="1604" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="1605" pos:column="9">apr_table_setn<pos:position pos:line="1605" pos:column="23"/></name><argument_list pos:line="1605" pos:column="23">(<argument><expr><name><name pos:line="1605" pos:column="24">r<pos:position pos:line="1605" pos:column="25"/></name><operator pos:line="1605" pos:column="25">-&gt;<pos:position pos:line="1605" pos:column="30"/></operator><name pos:line="1605" pos:column="27">main<pos:position pos:line="1605" pos:column="31"/></name><operator pos:line="1605" pos:column="31">-&gt;<pos:position pos:line="1605" pos:column="36"/></operator><name pos:line="1605" pos:column="33">notes<pos:position pos:line="1605" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1605" pos:column="40">"variant-list"<pos:position pos:line="1605" pos:column="54"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="1606" pos:column="23">make_variant_list<pos:position pos:line="1606" pos:column="40"/></name><argument_list pos:line="1606" pos:column="40">(<argument><expr><name><name pos:line="1606" pos:column="41">r<pos:position pos:line="1606" pos:column="42"/></name><operator pos:line="1606" pos:column="42">-&gt;<pos:position pos:line="1606" pos:column="47"/></operator><name pos:line="1606" pos:column="44">main<pos:position pos:line="1606" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="1606" pos:column="50">neg<pos:position pos:line="1606" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1606" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="1606" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="1606" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="1607" pos:column="6"/></block></else></if>
}<pos:position pos:line="1608" pos:column="2"/></block></function>

<comment type="block" pos:line="1610" pos:column="1">/* Called if we got a "Choice" response from the variant selection algorithm.
 * It checks the result of the chosen variant to see if it
 * is itself negotiated (if so, return error HTTP_VARIANT_ALSO_VARIES).
 * Otherwise, add the appropriate headers to the current response.
 */</comment>

<function><specifier pos:line="1616" pos:column="1">static<pos:position pos:line="1616" pos:column="7"/></specifier> <type><name pos:line="1616" pos:column="8">int<pos:position pos:line="1616" pos:column="11"/></name></type> <name pos:line="1616" pos:column="12">setup_choice_response<pos:position pos:line="1616" pos:column="33"/></name><parameter_list pos:line="1616" pos:column="33">(<parameter><decl><type><name pos:line="1616" pos:column="34">request_rec<pos:position pos:line="1616" pos:column="45"/></name> <modifier pos:line="1616" pos:column="46">*<pos:position pos:line="1616" pos:column="47"/></modifier></type><name pos:line="1616" pos:column="47">r<pos:position pos:line="1616" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1616" pos:column="50">negotiation_state<pos:position pos:line="1616" pos:column="67"/></name> <modifier pos:line="1616" pos:column="68">*<pos:position pos:line="1616" pos:column="69"/></modifier></type><name pos:line="1616" pos:column="69">neg<pos:position pos:line="1616" pos:column="72"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="1617" pos:column="34">var_rec<pos:position pos:line="1617" pos:column="41"/></name> <modifier pos:line="1617" pos:column="42">*<pos:position pos:line="1617" pos:column="43"/></modifier></type><name pos:line="1617" pos:column="43">variant<pos:position pos:line="1617" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1617" pos:column="51"/></parameter_list>
<block pos:line="1618" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1619" pos:column="5">request_rec<pos:position pos:line="1619" pos:column="16"/></name> <modifier pos:line="1619" pos:column="17">*<pos:position pos:line="1619" pos:column="18"/></modifier></type><name pos:line="1619" pos:column="18">sub_req<pos:position pos:line="1619" pos:column="25"/></name></decl>;<pos:position pos:line="1619" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="1620" pos:column="5">const<pos:position pos:line="1620" pos:column="10"/></specifier> <name pos:line="1620" pos:column="11">char<pos:position pos:line="1620" pos:column="15"/></name> <modifier pos:line="1620" pos:column="16">*<pos:position pos:line="1620" pos:column="17"/></modifier></type><name pos:line="1620" pos:column="17">sub_vary<pos:position pos:line="1620" pos:column="25"/></name></decl>;<pos:position pos:line="1620" pos:column="26"/></decl_stmt>

    <if pos:line="1622" pos:column="5">if <condition pos:line="1622" pos:column="8">(<expr><operator pos:line="1622" pos:column="9">!<pos:position pos:line="1622" pos:column="10"/></operator><name><name pos:line="1622" pos:column="10">variant<pos:position pos:line="1622" pos:column="17"/></name><operator pos:line="1622" pos:column="17">-&gt;<pos:position pos:line="1622" pos:column="22"/></operator><name pos:line="1622" pos:column="19">sub_req<pos:position pos:line="1622" pos:column="26"/></name></name></expr>)<pos:position pos:line="1622" pos:column="27"/></condition><then pos:line="1622" pos:column="27"> <block pos:line="1622" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="1623" pos:column="9">int<pos:position pos:line="1623" pos:column="12"/></name></type> <name pos:line="1623" pos:column="13">status<pos:position pos:line="1623" pos:column="19"/></name></decl>;<pos:position pos:line="1623" pos:column="20"/></decl_stmt>

        <expr_stmt><expr><name pos:line="1625" pos:column="9">sub_req<pos:position pos:line="1625" pos:column="16"/></name> <operator pos:line="1625" pos:column="17">=<pos:position pos:line="1625" pos:column="18"/></operator> <call><name pos:line="1625" pos:column="19">ap_sub_req_lookup_file<pos:position pos:line="1625" pos:column="41"/></name><argument_list pos:line="1625" pos:column="41">(<argument><expr><name><name pos:line="1625" pos:column="42">variant<pos:position pos:line="1625" pos:column="49"/></name><operator pos:line="1625" pos:column="49">-&gt;<pos:position pos:line="1625" pos:column="54"/></operator><name pos:line="1625" pos:column="51">file_name<pos:position pos:line="1625" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="1625" pos:column="62">r<pos:position pos:line="1625" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="1625" pos:column="65">r<pos:position pos:line="1625" pos:column="66"/></name><operator pos:line="1625" pos:column="66">-&gt;<pos:position pos:line="1625" pos:column="71"/></operator><name pos:line="1625" pos:column="68">output_filters<pos:position pos:line="1625" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="1625" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="1625" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1626" pos:column="9">status<pos:position pos:line="1626" pos:column="15"/></name> <operator pos:line="1626" pos:column="16">=<pos:position pos:line="1626" pos:column="17"/></operator> <name><name pos:line="1626" pos:column="18">sub_req<pos:position pos:line="1626" pos:column="25"/></name><operator pos:line="1626" pos:column="25">-&gt;<pos:position pos:line="1626" pos:column="30"/></operator><name pos:line="1626" pos:column="27">status<pos:position pos:line="1626" pos:column="33"/></name></name></expr>;<pos:position pos:line="1626" pos:column="34"/></expr_stmt>

        <if pos:line="1628" pos:column="9">if <condition pos:line="1628" pos:column="12">(<expr><name pos:line="1628" pos:column="13">status<pos:position pos:line="1628" pos:column="19"/></name> <operator pos:line="1628" pos:column="20">!=<pos:position pos:line="1628" pos:column="22"/></operator> <name pos:line="1628" pos:column="23">HTTP_OK<pos:position pos:line="1628" pos:column="30"/></name> <operator pos:line="1628" pos:column="31">&amp;&amp;<pos:position pos:line="1628" pos:column="41"/></operator>
            <operator pos:line="1629" pos:column="13">!<pos:position pos:line="1629" pos:column="14"/></operator><call><name pos:line="1629" pos:column="14">apr_table_get<pos:position pos:line="1629" pos:column="27"/></name><argument_list pos:line="1629" pos:column="27">(<argument><expr><name><name pos:line="1629" pos:column="28">sub_req<pos:position pos:line="1629" pos:column="35"/></name><operator pos:line="1629" pos:column="35">-&gt;<pos:position pos:line="1629" pos:column="40"/></operator><name pos:line="1629" pos:column="37">err_headers_out<pos:position pos:line="1629" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1629" pos:column="54">"TCN"<pos:position pos:line="1629" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="1629" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="1629" pos:column="61"/></condition><then pos:line="1629" pos:column="61"> <block pos:line="1629" pos:column="62">{
            <expr_stmt><expr><call><name pos:line="1630" pos:column="13">ap_destroy_sub_req<pos:position pos:line="1630" pos:column="31"/></name><argument_list pos:line="1630" pos:column="31">(<argument><expr><name pos:line="1630" pos:column="32">sub_req<pos:position pos:line="1630" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1630" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1630" pos:column="41"/></expr_stmt>
            <return pos:line="1631" pos:column="13">return <expr><name pos:line="1631" pos:column="20">status<pos:position pos:line="1631" pos:column="26"/></name></expr>;<pos:position pos:line="1631" pos:column="27"/></return>
        }<pos:position pos:line="1632" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="1633" pos:column="9">variant<pos:position pos:line="1633" pos:column="16"/></name><operator pos:line="1633" pos:column="16">-&gt;<pos:position pos:line="1633" pos:column="21"/></operator><name pos:line="1633" pos:column="18">sub_req<pos:position pos:line="1633" pos:column="25"/></name></name> <operator pos:line="1633" pos:column="26">=<pos:position pos:line="1633" pos:column="27"/></operator> <name pos:line="1633" pos:column="28">sub_req<pos:position pos:line="1633" pos:column="35"/></name></expr>;<pos:position pos:line="1633" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="1634" pos:column="6"/></block></then>
    <else pos:line="1635" pos:column="5">else <block pos:line="1635" pos:column="10">{
        <expr_stmt><expr><name pos:line="1636" pos:column="9">sub_req<pos:position pos:line="1636" pos:column="16"/></name> <operator pos:line="1636" pos:column="17">=<pos:position pos:line="1636" pos:column="18"/></operator> <name><name pos:line="1636" pos:column="19">variant<pos:position pos:line="1636" pos:column="26"/></name><operator pos:line="1636" pos:column="26">-&gt;<pos:position pos:line="1636" pos:column="31"/></operator><name pos:line="1636" pos:column="28">sub_req<pos:position pos:line="1636" pos:column="35"/></name></name></expr>;<pos:position pos:line="1636" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="1637" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="1639" pos:column="5">/* The variant selection algorithm told us to return a "Choice"
     * response. This is the normal variant response, with
     * some extra headers. First, ensure that the chosen
     * variant did or will not itself engage in transparent negotiation.
     * If not, set the appropriate headers, and fall through to
     * the normal variant handling
     */</comment>

    <comment type="block" pos:line="1647" pos:column="5">/* This catches the error that a transparent type map selects a
     * transparent multiviews resource as the best variant.
     *
     * XXX: We do not signal an error if a transparent type map
     * selects a _non_transparent multiviews resource as the best
     * variant, because we can generate a legal negotiation response
     * in this case.  In this case, the vlist_validator of the
     * nontransparent subrequest will be lost however.  This could
     * lead to cases in which a change in the set of variants or the
     * negotiation algorithm of the nontransparent resource is never
     * propagated up to a HTTP/1.1 cache which interprets Vary.  To be
     * completely on the safe side we should return HTTP_VARIANT_ALSO_VARIES
     * for this type of recursive negotiation too.
     */</comment>
    <if pos:line="1661" pos:column="5">if <condition pos:line="1661" pos:column="8">(<expr><name><name pos:line="1661" pos:column="9">neg<pos:position pos:line="1661" pos:column="12"/></name><operator pos:line="1661" pos:column="12">-&gt;<pos:position pos:line="1661" pos:column="17"/></operator><name pos:line="1661" pos:column="14">is_transparent<pos:position pos:line="1661" pos:column="28"/></name></name> <operator pos:line="1661" pos:column="29">&amp;&amp;<pos:position pos:line="1661" pos:column="39"/></operator>
        <call><name pos:line="1662" pos:column="9">apr_table_get<pos:position pos:line="1662" pos:column="22"/></name><argument_list pos:line="1662" pos:column="22">(<argument><expr><name><name pos:line="1662" pos:column="23">sub_req<pos:position pos:line="1662" pos:column="30"/></name><operator pos:line="1662" pos:column="30">-&gt;<pos:position pos:line="1662" pos:column="35"/></operator><name pos:line="1662" pos:column="32">err_headers_out<pos:position pos:line="1662" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1662" pos:column="49">"TCN"<pos:position pos:line="1662" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="1662" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="1662" pos:column="56"/></condition><then pos:line="1662" pos:column="56"> <block pos:line="1662" pos:column="57">{
        <return pos:line="1663" pos:column="9">return <expr><name pos:line="1663" pos:column="16">HTTP_VARIANT_ALSO_VARIES<pos:position pos:line="1663" pos:column="40"/></name></expr>;<pos:position pos:line="1663" pos:column="41"/></return>
    }<pos:position pos:line="1664" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1666" pos:column="5">/* This catches the error that a transparent type map recursively
     * selects, as the best variant, another type map which itself
     * causes transparent negotiation to be done.
     *
     * XXX: Actually, we catch this error by catching all cases of
     * type map recursion.  There are some borderline recursive type
     * map arrangements which would not produce transparent
     * negotiation protocol errors or lack of cache propagation
     * problems, but such arrangements are very hard to detect at this
     * point in the control flow, so we do not bother to single them
     * out.
     *
     * Recursive type maps imply a recursive arrangement of negotiated
     * resources which is visible to outside clients, and this is not
     * supported by the transparent negotiation caching protocols, so
     * if we are to have generic support for recursive type maps, we
     * have to create some configuration setting which makes all type
     * maps non-transparent when recursion is enabled.  Also, if we
     * want recursive type map support which ensures propagation of
     * type map changes into HTTP/1.1 caches that handle Vary, we
     * would have to extend the current mechanism for generating
     * variant list validators.
     */</comment>
    <if pos:line="1689" pos:column="5">if <condition pos:line="1689" pos:column="8">(<expr><name><name pos:line="1689" pos:column="9">sub_req<pos:position pos:line="1689" pos:column="16"/></name><operator pos:line="1689" pos:column="16">-&gt;<pos:position pos:line="1689" pos:column="21"/></operator><name pos:line="1689" pos:column="18">handler<pos:position pos:line="1689" pos:column="25"/></name></name> <operator pos:line="1689" pos:column="26">&amp;&amp;<pos:position pos:line="1689" pos:column="36"/></operator> <call><name pos:line="1689" pos:column="29">strcmp<pos:position pos:line="1689" pos:column="35"/></name><argument_list pos:line="1689" pos:column="35">(<argument><expr><name><name pos:line="1689" pos:column="36">sub_req<pos:position pos:line="1689" pos:column="43"/></name><operator pos:line="1689" pos:column="43">-&gt;<pos:position pos:line="1689" pos:column="48"/></operator><name pos:line="1689" pos:column="45">handler<pos:position pos:line="1689" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1689" pos:column="54">"type-map"<pos:position pos:line="1689" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="1689" pos:column="65"/></argument_list></call> <operator pos:line="1689" pos:column="66">==<pos:position pos:line="1689" pos:column="68"/></operator> <literal type="number" pos:line="1689" pos:column="69">0<pos:position pos:line="1689" pos:column="70"/></literal></expr>)<pos:position pos:line="1689" pos:column="71"/></condition><then pos:line="1689" pos:column="71"> <block pos:line="1689" pos:column="72">{
        <return pos:line="1690" pos:column="9">return <expr><name pos:line="1690" pos:column="16">HTTP_VARIANT_ALSO_VARIES<pos:position pos:line="1690" pos:column="40"/></name></expr>;<pos:position pos:line="1690" pos:column="41"/></return>
    }<pos:position pos:line="1691" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1693" pos:column="5">/* This adds an appropriate Variant-Vary header if the subrequest
     * is a multiviews resource.
     *
     * XXX: TODO: Note that this does _not_ handle any Vary header
     * returned by a CGI if sub_req is a CGI script, because we don't
     * see that Vary header yet at this point in the control flow.
     * This won't cause any cache consistency problems _unless_ the
     * CGI script also returns a Cache-Control header marking the
     * response as cachable.  This needs to be fixed, also there are
     * problems if a CGI returns an Etag header which also need to be
     * fixed.
     */</comment>
    <if pos:line="1705" pos:column="5">if <condition pos:line="1705" pos:column="8">(<expr><operator pos:line="1705" pos:column="9">(<pos:position pos:line="1705" pos:column="10"/></operator><name pos:line="1705" pos:column="10">sub_vary<pos:position pos:line="1705" pos:column="18"/></name> <operator pos:line="1705" pos:column="19">=<pos:position pos:line="1705" pos:column="20"/></operator> <call><name pos:line="1705" pos:column="21">apr_table_get<pos:position pos:line="1705" pos:column="34"/></name><argument_list pos:line="1705" pos:column="34">(<argument><expr><name><name pos:line="1705" pos:column="35">sub_req<pos:position pos:line="1705" pos:column="42"/></name><operator pos:line="1705" pos:column="42">-&gt;<pos:position pos:line="1705" pos:column="47"/></operator><name pos:line="1705" pos:column="44">err_headers_out<pos:position pos:line="1705" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1705" pos:column="61">"Vary"<pos:position pos:line="1705" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1705" pos:column="68"/></argument_list></call><operator pos:line="1705" pos:column="68">)<pos:position pos:line="1705" pos:column="69"/></operator> <operator pos:line="1705" pos:column="70">!=<pos:position pos:line="1705" pos:column="72"/></operator> <name pos:line="1705" pos:column="73">NULL<pos:position pos:line="1705" pos:column="77"/></name></expr>)<pos:position pos:line="1705" pos:column="78"/></condition><then pos:line="1705" pos:column="78"> <block pos:line="1705" pos:column="79">{
        <expr_stmt><expr><call><name pos:line="1706" pos:column="9">apr_table_setn<pos:position pos:line="1706" pos:column="23"/></name><argument_list pos:line="1706" pos:column="23">(<argument><expr><name><name pos:line="1706" pos:column="24">r<pos:position pos:line="1706" pos:column="25"/></name><operator pos:line="1706" pos:column="25">-&gt;<pos:position pos:line="1706" pos:column="30"/></operator><name pos:line="1706" pos:column="27">err_headers_out<pos:position pos:line="1706" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1706" pos:column="44">"Variant-Vary"<pos:position pos:line="1706" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="1706" pos:column="60">sub_vary<pos:position pos:line="1706" pos:column="68"/></name></expr></argument>)<pos:position pos:line="1706" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="1706" pos:column="70"/></expr_stmt>

        <comment type="block" pos:line="1708" pos:column="9">/* Move the subreq Vary header into the main request to
         * prevent having two Vary headers in the response, which
         * would be legal but strange.
         */</comment>
        <expr_stmt><expr><call><name pos:line="1712" pos:column="9">apr_table_setn<pos:position pos:line="1712" pos:column="23"/></name><argument_list pos:line="1712" pos:column="23">(<argument><expr><name><name pos:line="1712" pos:column="24">r<pos:position pos:line="1712" pos:column="25"/></name><operator pos:line="1712" pos:column="25">-&gt;<pos:position pos:line="1712" pos:column="30"/></operator><name pos:line="1712" pos:column="27">err_headers_out<pos:position pos:line="1712" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1712" pos:column="44">"Vary"<pos:position pos:line="1712" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="1712" pos:column="52">sub_vary<pos:position pos:line="1712" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1712" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1712" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1713" pos:column="9">apr_table_unset<pos:position pos:line="1713" pos:column="24"/></name><argument_list pos:line="1713" pos:column="24">(<argument><expr><name><name pos:line="1713" pos:column="25">sub_req<pos:position pos:line="1713" pos:column="32"/></name><operator pos:line="1713" pos:column="32">-&gt;<pos:position pos:line="1713" pos:column="37"/></operator><name pos:line="1713" pos:column="34">err_headers_out<pos:position pos:line="1713" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1713" pos:column="51">"Vary"<pos:position pos:line="1713" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="1713" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1713" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="1714" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="1716" pos:column="5">apr_table_setn<pos:position pos:line="1716" pos:column="19"/></name><argument_list pos:line="1716" pos:column="19">(<argument><expr><name><name pos:line="1716" pos:column="20">r<pos:position pos:line="1716" pos:column="21"/></name><operator pos:line="1716" pos:column="21">-&gt;<pos:position pos:line="1716" pos:column="26"/></operator><name pos:line="1716" pos:column="23">err_headers_out<pos:position pos:line="1716" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1716" pos:column="40">"Content-Location"<pos:position pos:line="1716" pos:column="58"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="1717" pos:column="19">ap_escape_path_segment<pos:position pos:line="1717" pos:column="41"/></name><argument_list pos:line="1717" pos:column="41">(<argument><expr><name><name pos:line="1717" pos:column="42">r<pos:position pos:line="1717" pos:column="43"/></name><operator pos:line="1717" pos:column="43">-&gt;<pos:position pos:line="1717" pos:column="48"/></operator><name pos:line="1717" pos:column="45">pool<pos:position pos:line="1717" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1717" pos:column="51">variant<pos:position pos:line="1717" pos:column="58"/></name><operator pos:line="1717" pos:column="58">-&gt;<pos:position pos:line="1717" pos:column="63"/></operator><name pos:line="1717" pos:column="60">file_name<pos:position pos:line="1717" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="1717" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="1717" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="1717" pos:column="72"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="1719" pos:column="5">set_neg_headers<pos:position pos:line="1719" pos:column="20"/></name><argument_list pos:line="1719" pos:column="20">(<argument><expr><name pos:line="1719" pos:column="21">r<pos:position pos:line="1719" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="1719" pos:column="24">neg<pos:position pos:line="1719" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1719" pos:column="29">alg_choice<pos:position pos:line="1719" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1719" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1719" pos:column="41"/></expr_stmt>         <comment type="block" pos:line="1719" pos:column="50">/* add Alternates and Vary */</comment>

    <comment type="block" pos:line="1721" pos:column="5">/* Still to do by caller: add Expires */</comment>

    <return pos:line="1723" pos:column="5">return <expr><literal type="number" pos:line="1723" pos:column="12">0<pos:position pos:line="1723" pos:column="13"/></literal></expr>;<pos:position pos:line="1723" pos:column="14"/></return>
}<pos:position pos:line="1724" pos:column="2"/></block></function>

<comment type="block" format="doxygen" pos:line="1726" pos:column="1">/****************************************************************
 *
 * Executive...
 */</comment>

<function><specifier pos:line="1731" pos:column="1">static<pos:position pos:line="1731" pos:column="7"/></specifier> <type><name pos:line="1731" pos:column="8">int<pos:position pos:line="1731" pos:column="11"/></name></type> <name pos:line="1731" pos:column="12">do_negotiation<pos:position pos:line="1731" pos:column="26"/></name><parameter_list pos:line="1731" pos:column="26">(<parameter><decl><type><name pos:line="1731" pos:column="27">request_rec<pos:position pos:line="1731" pos:column="38"/></name> <modifier pos:line="1731" pos:column="39">*<pos:position pos:line="1731" pos:column="40"/></modifier></type><name pos:line="1731" pos:column="40">r<pos:position pos:line="1731" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1731" pos:column="43">negotiation_state<pos:position pos:line="1731" pos:column="60"/></name> <modifier pos:line="1731" pos:column="61">*<pos:position pos:line="1731" pos:column="62"/></modifier></type><name pos:line="1731" pos:column="62">neg<pos:position pos:line="1731" pos:column="65"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="1732" pos:column="27">var_rec<pos:position pos:line="1732" pos:column="34"/></name> <modifier pos:line="1732" pos:column="35">*<pos:position pos:line="1732" pos:column="36"/></modifier><modifier pos:line="1732" pos:column="36">*<pos:position pos:line="1732" pos:column="37"/></modifier></type><name pos:line="1732" pos:column="37">bestp<pos:position pos:line="1732" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1732" pos:column="44">int<pos:position pos:line="1732" pos:column="47"/></name></type> <name pos:line="1732" pos:column="48">prefer_scripts<pos:position pos:line="1732" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1732" pos:column="63"/></parameter_list>
<block pos:line="1733" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1734" pos:column="5">var_rec<pos:position pos:line="1734" pos:column="12"/></name> <modifier pos:line="1734" pos:column="13">*<pos:position pos:line="1734" pos:column="14"/></modifier></type><name pos:line="1734" pos:column="14">avail_recs<pos:position pos:line="1734" pos:column="24"/></name> <init pos:line="1734" pos:column="25">= <expr><operator pos:line="1734" pos:column="27">(<pos:position pos:line="1734" pos:column="28"/></operator><name pos:line="1734" pos:column="28">var_rec<pos:position pos:line="1734" pos:column="35"/></name> <operator pos:line="1734" pos:column="36">*<pos:position pos:line="1734" pos:column="37"/></operator><operator pos:line="1734" pos:column="37">)<pos:position pos:line="1734" pos:column="38"/></operator> <name><name pos:line="1734" pos:column="39">neg<pos:position pos:line="1734" pos:column="42"/></name><operator pos:line="1734" pos:column="42">-&gt;<pos:position pos:line="1734" pos:column="47"/></operator><name pos:line="1734" pos:column="44">avail_vars<pos:position pos:line="1734" pos:column="54"/></name><operator pos:line="1734" pos:column="54">-&gt;<pos:position pos:line="1734" pos:column="59"/></operator><name pos:line="1734" pos:column="56">elts<pos:position pos:line="1734" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="1734" pos:column="61"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1735" pos:column="5">int<pos:position pos:line="1735" pos:column="8"/></name></type> <name pos:line="1735" pos:column="9">alg_result<pos:position pos:line="1735" pos:column="19"/></name></decl>;<pos:position pos:line="1735" pos:column="20"/></decl_stmt>              <comment type="block" pos:line="1735" pos:column="34">/* result of variant selection algorithm */</comment>
    <decl_stmt><decl><type><name pos:line="1736" pos:column="5">int<pos:position pos:line="1736" pos:column="8"/></name></type> <name pos:line="1736" pos:column="9">res<pos:position pos:line="1736" pos:column="12"/></name></decl>;<pos:position pos:line="1736" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1737" pos:column="5">int<pos:position pos:line="1737" pos:column="8"/></name></type> <name pos:line="1737" pos:column="9">j<pos:position pos:line="1737" pos:column="10"/></name></decl>;<pos:position pos:line="1737" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="1739" pos:column="5">/* Decide if resource is transparently negotiable */</comment>

    <comment type="block" pos:line="1741" pos:column="5">/* GET or HEAD? (HEAD has same method number as GET) */</comment>
    <if pos:line="1742" pos:column="5">if <condition pos:line="1742" pos:column="8">(<expr><name><name pos:line="1742" pos:column="9">r<pos:position pos:line="1742" pos:column="10"/></name><operator pos:line="1742" pos:column="10">-&gt;<pos:position pos:line="1742" pos:column="15"/></operator><name pos:line="1742" pos:column="12">method_number<pos:position pos:line="1742" pos:column="25"/></name></name> <operator pos:line="1742" pos:column="26">==<pos:position pos:line="1742" pos:column="28"/></operator> <name pos:line="1742" pos:column="29">M_GET<pos:position pos:line="1742" pos:column="34"/></name></expr>)<pos:position pos:line="1742" pos:column="35"/></condition><then pos:line="1742" pos:column="35"> <block pos:line="1742" pos:column="36">{

        <comment type="block" pos:line="1744" pos:column="9">/* maybe this should be configurable, see also the comment
         * about recursive type maps in setup_choice_response()
         */</comment>
        <expr_stmt><expr><name><name pos:line="1747" pos:column="9">neg<pos:position pos:line="1747" pos:column="12"/></name><operator pos:line="1747" pos:column="12">-&gt;<pos:position pos:line="1747" pos:column="17"/></operator><name pos:line="1747" pos:column="14">is_transparent<pos:position pos:line="1747" pos:column="28"/></name></name> <operator pos:line="1747" pos:column="29">=<pos:position pos:line="1747" pos:column="30"/></operator> <literal type="number" pos:line="1747" pos:column="31">1<pos:position pos:line="1747" pos:column="32"/></literal></expr>;<pos:position pos:line="1747" pos:column="33"/></expr_stmt>

        <comment type="block" pos:line="1749" pos:column="9">/* We can't be transparent if we are a map file in the middle
         * of the request URI.
         */</comment>
        <if pos:line="1752" pos:column="9">if <condition pos:line="1752" pos:column="12">(<expr><name><name pos:line="1752" pos:column="13">r<pos:position pos:line="1752" pos:column="14"/></name><operator pos:line="1752" pos:column="14">-&gt;<pos:position pos:line="1752" pos:column="19"/></operator><name pos:line="1752" pos:column="16">path_info<pos:position pos:line="1752" pos:column="25"/></name></name> <operator pos:line="1752" pos:column="26">&amp;&amp;<pos:position pos:line="1752" pos:column="36"/></operator> <operator pos:line="1752" pos:column="29">*<pos:position pos:line="1752" pos:column="30"/></operator><name><name pos:line="1752" pos:column="30">r<pos:position pos:line="1752" pos:column="31"/></name><operator pos:line="1752" pos:column="31">-&gt;<pos:position pos:line="1752" pos:column="36"/></operator><name pos:line="1752" pos:column="33">path_info<pos:position pos:line="1752" pos:column="42"/></name></name></expr>)<pos:position pos:line="1752" pos:column="43"/></condition><then pos:line="1752" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="1753" pos:column="13">neg<pos:position pos:line="1753" pos:column="16"/></name><operator pos:line="1753" pos:column="16">-&gt;<pos:position pos:line="1753" pos:column="21"/></operator><name pos:line="1753" pos:column="18">is_transparent<pos:position pos:line="1753" pos:column="32"/></name></name> <operator pos:line="1753" pos:column="33">=<pos:position pos:line="1753" pos:column="34"/></operator> <literal type="number" pos:line="1753" pos:column="35">0<pos:position pos:line="1753" pos:column="36"/></literal></expr>;<pos:position pos:line="1753" pos:column="37"/></expr_stmt></block></then></if>

        <for pos:line="1755" pos:column="9">for <control pos:line="1755" pos:column="13">(<init><expr><name pos:line="1755" pos:column="14">j<pos:position pos:line="1755" pos:column="15"/></name> <operator pos:line="1755" pos:column="16">=<pos:position pos:line="1755" pos:column="17"/></operator> <literal type="number" pos:line="1755" pos:column="18">0<pos:position pos:line="1755" pos:column="19"/></literal></expr>;<pos:position pos:line="1755" pos:column="20"/></init> <condition><expr><name pos:line="1755" pos:column="21">j<pos:position pos:line="1755" pos:column="22"/></name> <operator pos:line="1755" pos:column="23">&lt;<pos:position pos:line="1755" pos:column="27"/></operator> <name><name pos:line="1755" pos:column="25">neg<pos:position pos:line="1755" pos:column="28"/></name><operator pos:line="1755" pos:column="28">-&gt;<pos:position pos:line="1755" pos:column="33"/></operator><name pos:line="1755" pos:column="30">avail_vars<pos:position pos:line="1755" pos:column="40"/></name><operator pos:line="1755" pos:column="40">-&gt;<pos:position pos:line="1755" pos:column="45"/></operator><name pos:line="1755" pos:column="42">nelts<pos:position pos:line="1755" pos:column="47"/></name></name></expr>;<pos:position pos:line="1755" pos:column="48"/></condition> <incr><expr><operator pos:line="1755" pos:column="49">++<pos:position pos:line="1755" pos:column="51"/></operator><name pos:line="1755" pos:column="51">j<pos:position pos:line="1755" pos:column="52"/></name></expr></incr>)<pos:position pos:line="1755" pos:column="53"/></control> <block pos:line="1755" pos:column="54">{
            <decl_stmt><decl><type><name pos:line="1756" pos:column="13">var_rec<pos:position pos:line="1756" pos:column="20"/></name> <modifier pos:line="1756" pos:column="21">*<pos:position pos:line="1756" pos:column="22"/></modifier></type><name pos:line="1756" pos:column="22">variant<pos:position pos:line="1756" pos:column="29"/></name> <init pos:line="1756" pos:column="30">= <expr><operator pos:line="1756" pos:column="32">&amp;<pos:position pos:line="1756" pos:column="37"/></operator><name><name pos:line="1756" pos:column="33">avail_recs<pos:position pos:line="1756" pos:column="43"/></name><index pos:line="1756" pos:column="43">[<expr><name pos:line="1756" pos:column="44">j<pos:position pos:line="1756" pos:column="45"/></name></expr>]<pos:position pos:line="1756" pos:column="46"/></index></name></expr></init></decl>;<pos:position pos:line="1756" pos:column="47"/></decl_stmt>

            <comment type="block" pos:line="1758" pos:column="13">/* We can't be transparent, because of internal
             * assumptions in best_match(), if there is a
             * non-neighboring variant.  We can have a non-neighboring
             * variant when processing a type map.
             */</comment>
            <if pos:line="1763" pos:column="13">if <condition pos:line="1763" pos:column="16">(<expr><call><name pos:line="1763" pos:column="17">ap_strchr_c<pos:position pos:line="1763" pos:column="28"/></name><argument_list pos:line="1763" pos:column="28">(<argument><expr><name><name pos:line="1763" pos:column="29">variant<pos:position pos:line="1763" pos:column="36"/></name><operator pos:line="1763" pos:column="36">-&gt;<pos:position pos:line="1763" pos:column="41"/></operator><name pos:line="1763" pos:column="38">file_name<pos:position pos:line="1763" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="1763" pos:column="49">'/'<pos:position pos:line="1763" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="1763" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="1763" pos:column="54"/></condition><then pos:line="1763" pos:column="54">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="1764" pos:column="17">neg<pos:position pos:line="1764" pos:column="20"/></name><operator pos:line="1764" pos:column="20">-&gt;<pos:position pos:line="1764" pos:column="25"/></operator><name pos:line="1764" pos:column="22">is_transparent<pos:position pos:line="1764" pos:column="36"/></name></name> <operator pos:line="1764" pos:column="37">=<pos:position pos:line="1764" pos:column="38"/></operator> <literal type="number" pos:line="1764" pos:column="39">0<pos:position pos:line="1764" pos:column="40"/></literal></expr>;<pos:position pos:line="1764" pos:column="41"/></expr_stmt></block></then></if>

            <comment type="block" pos:line="1766" pos:column="13">/* We can't be transparent, because of the behavior
             * of variant typemap bodies.
             */</comment>
            <if pos:line="1769" pos:column="13">if <condition pos:line="1769" pos:column="16">(<expr><name><name pos:line="1769" pos:column="17">variant<pos:position pos:line="1769" pos:column="24"/></name><operator pos:line="1769" pos:column="24">-&gt;<pos:position pos:line="1769" pos:column="29"/></operator><name pos:line="1769" pos:column="26">body<pos:position pos:line="1769" pos:column="30"/></name></name></expr>)<pos:position pos:line="1769" pos:column="31"/></condition><then pos:line="1769" pos:column="31"> <block pos:line="1769" pos:column="32">{
                <expr_stmt><expr><name><name pos:line="1770" pos:column="17">neg<pos:position pos:line="1770" pos:column="20"/></name><operator pos:line="1770" pos:column="20">-&gt;<pos:position pos:line="1770" pos:column="25"/></operator><name pos:line="1770" pos:column="22">is_transparent<pos:position pos:line="1770" pos:column="36"/></name></name> <operator pos:line="1770" pos:column="37">=<pos:position pos:line="1770" pos:column="38"/></operator> <literal type="number" pos:line="1770" pos:column="39">0<pos:position pos:line="1770" pos:column="40"/></literal></expr>;<pos:position pos:line="1770" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="1771" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1772" pos:column="10"/></block></for>
    }<pos:position pos:line="1773" pos:column="6"/></block></then></if>

    <if pos:line="1775" pos:column="5">if <condition pos:line="1775" pos:column="8">(<expr><name><name pos:line="1775" pos:column="9">neg<pos:position pos:line="1775" pos:column="12"/></name><operator pos:line="1775" pos:column="12">-&gt;<pos:position pos:line="1775" pos:column="17"/></operator><name pos:line="1775" pos:column="14">is_transparent<pos:position pos:line="1775" pos:column="28"/></name></name></expr>)<pos:position pos:line="1775" pos:column="29"/></condition><then pos:line="1775" pos:column="29">  <block pos:line="1775" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="1776" pos:column="9">parse_negotiate_header<pos:position pos:line="1776" pos:column="31"/></name><argument_list pos:line="1776" pos:column="31">(<argument><expr><name pos:line="1776" pos:column="32">r<pos:position pos:line="1776" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1776" pos:column="35">neg<pos:position pos:line="1776" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1776" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1776" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="1777" pos:column="6"/></block></then>
    <else pos:line="1778" pos:column="5">else <block pos:line="1778" pos:column="10">{ <comment type="block" pos:line="1778" pos:column="12">/* configure negotiation on non-transparent resource */</comment>
        <expr_stmt><expr><name><name pos:line="1779" pos:column="9">neg<pos:position pos:line="1779" pos:column="12"/></name><operator pos:line="1779" pos:column="12">-&gt;<pos:position pos:line="1779" pos:column="17"/></operator><name pos:line="1779" pos:column="14">may_choose<pos:position pos:line="1779" pos:column="24"/></name></name> <operator pos:line="1779" pos:column="25">=<pos:position pos:line="1779" pos:column="26"/></operator> <literal type="number" pos:line="1779" pos:column="27">1<pos:position pos:line="1779" pos:column="28"/></literal></expr>;<pos:position pos:line="1779" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="1780" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="1782" pos:column="5">maybe_add_default_accepts<pos:position pos:line="1782" pos:column="30"/></name><argument_list pos:line="1782" pos:column="30">(<argument><expr><name pos:line="1782" pos:column="31">neg<pos:position pos:line="1782" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1782" pos:column="36">prefer_scripts<pos:position pos:line="1782" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1782" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1782" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><name pos:line="1784" pos:column="5">alg_result<pos:position pos:line="1784" pos:column="15"/></name> <operator pos:line="1784" pos:column="16">=<pos:position pos:line="1784" pos:column="17"/></operator> <call><name pos:line="1784" pos:column="18">best_match<pos:position pos:line="1784" pos:column="28"/></name><argument_list pos:line="1784" pos:column="28">(<argument><expr><name pos:line="1784" pos:column="29">neg<pos:position pos:line="1784" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1784" pos:column="34">bestp<pos:position pos:line="1784" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1784" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1784" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="1786" pos:column="5">/* alg_result is one of
     *   alg_choice: a best variant is chosen
     *   alg_list: no best variant is chosen
     */</comment>

    <if pos:line="1791" pos:column="5">if <condition pos:line="1791" pos:column="8">(<expr><name pos:line="1791" pos:column="9">alg_result<pos:position pos:line="1791" pos:column="19"/></name> <operator pos:line="1791" pos:column="20">==<pos:position pos:line="1791" pos:column="22"/></operator> <name pos:line="1791" pos:column="23">alg_list<pos:position pos:line="1791" pos:column="31"/></name></expr>)<pos:position pos:line="1791" pos:column="32"/></condition><then pos:line="1791" pos:column="32"> <block pos:line="1791" pos:column="33">{
        <comment type="block" pos:line="1792" pos:column="9">/* send a list response or HTTP_NOT_ACCEPTABLE error response  */</comment>

        <expr_stmt><expr><name><name pos:line="1794" pos:column="9">neg<pos:position pos:line="1794" pos:column="12"/></name><operator pos:line="1794" pos:column="12">-&gt;<pos:position pos:line="1794" pos:column="17"/></operator><name pos:line="1794" pos:column="14">send_alternates<pos:position pos:line="1794" pos:column="29"/></name></name> <operator pos:line="1794" pos:column="30">=<pos:position pos:line="1794" pos:column="31"/></operator> <literal type="number" pos:line="1794" pos:column="32">1<pos:position pos:line="1794" pos:column="33"/></literal></expr>;<pos:position pos:line="1794" pos:column="34"/></expr_stmt> <comment type="block" pos:line="1794" pos:column="35">/* always include Alternates header */</comment>
        <expr_stmt><expr><call><name pos:line="1795" pos:column="9">set_neg_headers<pos:position pos:line="1795" pos:column="24"/></name><argument_list pos:line="1795" pos:column="24">(<argument><expr><name pos:line="1795" pos:column="25">r<pos:position pos:line="1795" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="1795" pos:column="28">neg<pos:position pos:line="1795" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1795" pos:column="33">alg_result<pos:position pos:line="1795" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1795" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="1795" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1796" pos:column="9">store_variant_list<pos:position pos:line="1796" pos:column="27"/></name><argument_list pos:line="1796" pos:column="27">(<argument><expr><name pos:line="1796" pos:column="28">r<pos:position pos:line="1796" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1796" pos:column="31">neg<pos:position pos:line="1796" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1796" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1796" pos:column="36"/></expr_stmt>

        <if pos:line="1798" pos:column="9">if <condition pos:line="1798" pos:column="12">(<expr><name><name pos:line="1798" pos:column="13">neg<pos:position pos:line="1798" pos:column="16"/></name><operator pos:line="1798" pos:column="16">-&gt;<pos:position pos:line="1798" pos:column="21"/></operator><name pos:line="1798" pos:column="18">is_transparent<pos:position pos:line="1798" pos:column="32"/></name></name> <operator pos:line="1798" pos:column="33">&amp;&amp;<pos:position pos:line="1798" pos:column="43"/></operator> <name><name pos:line="1798" pos:column="36">neg<pos:position pos:line="1798" pos:column="39"/></name><operator pos:line="1798" pos:column="39">-&gt;<pos:position pos:line="1798" pos:column="44"/></operator><name pos:line="1798" pos:column="41">ua_supports_trans<pos:position pos:line="1798" pos:column="58"/></name></name></expr>)<pos:position pos:line="1798" pos:column="59"/></condition><then pos:line="1798" pos:column="59"> <block pos:line="1798" pos:column="60">{
            <comment type="block" pos:line="1799" pos:column="13">/* XXX todo: expires? cachability? */</comment>

            <comment type="block" pos:line="1801" pos:column="13">/* Some HTTP/1.0 clients are known to choke when they get
             * a 300 (multiple choices) response without a Location
             * header.  However the 300 code response we are are about
             * to generate will only reach 1.0 clients which support
             * transparent negotiation, and they should be OK. The
             * response should never reach older 1.0 clients, even if
             * we have CacheNegotiatedDocs enabled, because no 1.0
             * proxy cache (we know of) will cache and return 300
             * responses (they certainly won't if they conform to the
             * HTTP/1.0 specification).
             */</comment>
            <return pos:line="1812" pos:column="13">return <expr><name pos:line="1812" pos:column="20">HTTP_MULTIPLE_CHOICES<pos:position pos:line="1812" pos:column="41"/></name></expr>;<pos:position pos:line="1812" pos:column="42"/></return>
        }<pos:position pos:line="1813" pos:column="10"/></block></then></if>

        <if pos:line="1815" pos:column="9">if <condition pos:line="1815" pos:column="12">(<expr><operator pos:line="1815" pos:column="13">!<pos:position pos:line="1815" pos:column="14"/></operator><operator pos:line="1815" pos:column="14">*<pos:position pos:line="1815" pos:column="15"/></operator><name pos:line="1815" pos:column="15">bestp<pos:position pos:line="1815" pos:column="20"/></name></expr>)<pos:position pos:line="1815" pos:column="21"/></condition><then pos:line="1815" pos:column="21"> <block pos:line="1815" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="1816" pos:column="13">ap_log_rerror<pos:position pos:line="1816" pos:column="26"/></name><argument_list pos:line="1816" pos:column="26">(<argument><expr><name pos:line="1816" pos:column="27">APLOG_MARK<pos:position pos:line="1816" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1816" pos:column="39">APLOG_ERR<pos:position pos:line="1816" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1816" pos:column="50">0<pos:position pos:line="1816" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="1816" pos:column="53">r<pos:position pos:line="1816" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="1817" pos:column="27">"no acceptable variant: %s"<pos:position pos:line="1817" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="1817" pos:column="56">r<pos:position pos:line="1817" pos:column="57"/></name><operator pos:line="1817" pos:column="57">-&gt;<pos:position pos:line="1817" pos:column="62"/></operator><name pos:line="1817" pos:column="59">filename<pos:position pos:line="1817" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="1817" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1817" pos:column="69"/></expr_stmt>
            <return pos:line="1818" pos:column="13">return <expr><name pos:line="1818" pos:column="20">HTTP_NOT_ACCEPTABLE<pos:position pos:line="1818" pos:column="39"/></name></expr>;<pos:position pos:line="1818" pos:column="40"/></return>
        }<pos:position pos:line="1819" pos:column="10"/></block></then></if>
    }<pos:position pos:line="1820" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1822" pos:column="5">/* Variant selection chose a variant */</comment>

    <comment type="block" pos:line="1824" pos:column="5">/* XXX todo: merge the two cases in the if statement below */</comment>
    <if pos:line="1825" pos:column="5">if <condition pos:line="1825" pos:column="8">(<expr><name><name pos:line="1825" pos:column="9">neg<pos:position pos:line="1825" pos:column="12"/></name><operator pos:line="1825" pos:column="12">-&gt;<pos:position pos:line="1825" pos:column="17"/></operator><name pos:line="1825" pos:column="14">is_transparent<pos:position pos:line="1825" pos:column="28"/></name></name></expr>)<pos:position pos:line="1825" pos:column="29"/></condition><then pos:line="1825" pos:column="29"> <block pos:line="1825" pos:column="30">{

        <if pos:line="1827" pos:column="9">if <condition pos:line="1827" pos:column="12">(<expr><operator pos:line="1827" pos:column="13">(<pos:position pos:line="1827" pos:column="14"/></operator><name pos:line="1827" pos:column="14">res<pos:position pos:line="1827" pos:column="17"/></name> <operator pos:line="1827" pos:column="18">=<pos:position pos:line="1827" pos:column="19"/></operator> <call><name pos:line="1827" pos:column="20">setup_choice_response<pos:position pos:line="1827" pos:column="41"/></name><argument_list pos:line="1827" pos:column="41">(<argument><expr><name pos:line="1827" pos:column="42">r<pos:position pos:line="1827" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="1827" pos:column="45">neg<pos:position pos:line="1827" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="1827" pos:column="50">*<pos:position pos:line="1827" pos:column="51"/></operator><name pos:line="1827" pos:column="51">bestp<pos:position pos:line="1827" pos:column="56"/></name></expr></argument>)<pos:position pos:line="1827" pos:column="57"/></argument_list></call><operator pos:line="1827" pos:column="57">)<pos:position pos:line="1827" pos:column="58"/></operator> <operator pos:line="1827" pos:column="59">!=<pos:position pos:line="1827" pos:column="61"/></operator> <literal type="number" pos:line="1827" pos:column="62">0<pos:position pos:line="1827" pos:column="63"/></literal></expr>)<pos:position pos:line="1827" pos:column="64"/></condition><then pos:line="1827" pos:column="64"> <block pos:line="1827" pos:column="65">{
            <return pos:line="1828" pos:column="13">return <expr><name pos:line="1828" pos:column="20">res<pos:position pos:line="1828" pos:column="23"/></name></expr>;<pos:position pos:line="1828" pos:column="24"/></return> <comment type="block" pos:line="1828" pos:column="25">/* return if error */</comment>
        }<pos:position pos:line="1829" pos:column="10"/></block></then></if>
    }<pos:position pos:line="1830" pos:column="6"/></block></then>
    <else pos:line="1831" pos:column="5">else <block pos:line="1831" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="1832" pos:column="9">set_neg_headers<pos:position pos:line="1832" pos:column="24"/></name><argument_list pos:line="1832" pos:column="24">(<argument><expr><name pos:line="1832" pos:column="25">r<pos:position pos:line="1832" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="1832" pos:column="28">neg<pos:position pos:line="1832" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1832" pos:column="33">alg_result<pos:position pos:line="1832" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1832" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="1832" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="1833" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="1835" pos:column="5">/* Make sure caching works - Vary should handle HTTP/1.1, but for
     * HTTP/1.0, we can't allow caching at all.
     */</comment>

    <comment type="block" pos:line="1839" pos:column="5">/* XXX: Note that we only set r-&gt;no_cache to 1, which causes
     * Expires: &lt;now&gt; to be added, when responding to a HTTP/1.0
     * client.  If we return the response to a 1.1 client, we do not
     * add Expires &lt;now&gt;, because doing so would degrade 1.1 cache
     * performance by preventing re-use of the response without prior
     * revalidation.  On the other hand, if the 1.1 client is a proxy
     * which was itself contacted by a 1.0 client, or a proxy cache
     * which can be contacted later by 1.0 clients, then we currently
     * rely on this 1.1 proxy to add the Expires: &lt;now&gt; when it
     * forwards the response.
     *
     * XXX: TODO: Find out if the 1.1 spec requires proxies and
     * tunnels to add Expires: &lt;now&gt; when forwarding the response to
     * 1.0 clients.  I (kh) recall it is rather vague on this point.
     * Testing actual 1.1 proxy implementations would also be nice. If
     * Expires: &lt;now&gt; is not added by proxies then we need to always
     * include Expires: &lt;now&gt; ourselves to ensure correct caching, but
     * this would degrade HTTP/1.1 cache efficiency unless we also add
     * Cache-Control: max-age=N, which we currently don't.
     *
     * Roy: No, we are not going to screw over HTTP future just to
     *      ensure that people who can't be bothered to upgrade their
     *      clients will always receive perfect server-side negotiation.
     *      Hell, those clients are sending bogus accept headers anyway.
     *
     *      Manual setting of cache-control/expires always overrides this
     *      automated kluge, on purpose.
     */</comment>

    <if pos:line="1868" pos:column="5">if <condition pos:line="1868" pos:column="8">(<expr><operator pos:line="1868" pos:column="9">(<pos:position pos:line="1868" pos:column="10"/></operator><operator pos:line="1868" pos:column="10">!<pos:position pos:line="1868" pos:column="11"/></operator><call><name pos:line="1868" pos:column="11">do_cache_negotiated_docs<pos:position pos:line="1868" pos:column="35"/></name><argument_list pos:line="1868" pos:column="35">(<argument><expr><name><name pos:line="1868" pos:column="36">r<pos:position pos:line="1868" pos:column="37"/></name><operator pos:line="1868" pos:column="37">-&gt;<pos:position pos:line="1868" pos:column="42"/></operator><name pos:line="1868" pos:column="39">server<pos:position pos:line="1868" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="1868" pos:column="46"/></argument_list></call>
         <operator pos:line="1869" pos:column="10">&amp;&amp;<pos:position pos:line="1869" pos:column="20"/></operator> <operator pos:line="1869" pos:column="13">(<pos:position pos:line="1869" pos:column="14"/></operator><name><name pos:line="1869" pos:column="14">r<pos:position pos:line="1869" pos:column="15"/></name><operator pos:line="1869" pos:column="15">-&gt;<pos:position pos:line="1869" pos:column="20"/></operator><name pos:line="1869" pos:column="17">proto_num<pos:position pos:line="1869" pos:column="26"/></name></name> <operator pos:line="1869" pos:column="27">&lt;<pos:position pos:line="1869" pos:column="31"/></operator> <call><name pos:line="1869" pos:column="29">HTTP_VERSION<pos:position pos:line="1869" pos:column="41"/></name><argument_list pos:line="1869" pos:column="41">(<argument><expr><literal type="number" pos:line="1869" pos:column="42">1<pos:position pos:line="1869" pos:column="43"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="1869" pos:column="44">1<pos:position pos:line="1869" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="1869" pos:column="46"/></argument_list></call><operator pos:line="1869" pos:column="46">)<pos:position pos:line="1869" pos:column="47"/></operator><operator pos:line="1869" pos:column="47">)<pos:position pos:line="1869" pos:column="48"/></operator>
         <operator pos:line="1870" pos:column="10">&amp;&amp;<pos:position pos:line="1870" pos:column="20"/></operator> <name><name pos:line="1870" pos:column="13">neg<pos:position pos:line="1870" pos:column="16"/></name><operator pos:line="1870" pos:column="16">-&gt;<pos:position pos:line="1870" pos:column="21"/></operator><name pos:line="1870" pos:column="18">count_multiviews_variants<pos:position pos:line="1870" pos:column="43"/></name></name> <operator pos:line="1870" pos:column="44">!=<pos:position pos:line="1870" pos:column="46"/></operator> <literal type="number" pos:line="1870" pos:column="47">1<pos:position pos:line="1870" pos:column="48"/></literal></expr>)<pos:position pos:line="1870" pos:column="49"/></condition><then pos:line="1870" pos:column="49"> <block pos:line="1870" pos:column="50">{
        <expr_stmt><expr><name><name pos:line="1871" pos:column="9">r<pos:position pos:line="1871" pos:column="10"/></name><operator pos:line="1871" pos:column="10">-&gt;<pos:position pos:line="1871" pos:column="15"/></operator><name pos:line="1871" pos:column="12">no_cache<pos:position pos:line="1871" pos:column="20"/></name></name> <operator pos:line="1871" pos:column="21">=<pos:position pos:line="1871" pos:column="22"/></operator> <literal type="number" pos:line="1871" pos:column="23">1<pos:position pos:line="1871" pos:column="24"/></literal></expr>;<pos:position pos:line="1871" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="1872" pos:column="6"/></block></then></if>

    <return pos:line="1874" pos:column="5">return <expr><name pos:line="1874" pos:column="12">OK<pos:position pos:line="1874" pos:column="14"/></name></expr>;<pos:position pos:line="1874" pos:column="15"/></return>
}<pos:position pos:line="1875" pos:column="2"/></block></function>

<function><specifier pos:line="1877" pos:column="1">static<pos:position pos:line="1877" pos:column="7"/></specifier> <type><name pos:line="1877" pos:column="8">int<pos:position pos:line="1877" pos:column="11"/></name></type> <name pos:line="1877" pos:column="12">handle_map_file<pos:position pos:line="1877" pos:column="27"/></name><parameter_list pos:line="1877" pos:column="27">(<parameter><decl><type><name pos:line="1877" pos:column="28">request_rec<pos:position pos:line="1877" pos:column="39"/></name> <modifier pos:line="1877" pos:column="40">*<pos:position pos:line="1877" pos:column="41"/></modifier></type><name pos:line="1877" pos:column="41">r<pos:position pos:line="1877" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1877" pos:column="43"/></parameter_list>
<block pos:line="1878" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1879" pos:column="5">negotiation_state<pos:position pos:line="1879" pos:column="22"/></name> <modifier pos:line="1879" pos:column="23">*<pos:position pos:line="1879" pos:column="24"/></modifier></type><name pos:line="1879" pos:column="24">neg<pos:position pos:line="1879" pos:column="27"/></name></decl>;<pos:position pos:line="1879" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1880" pos:column="5">apr_file_t<pos:position pos:line="1880" pos:column="15"/></name> <modifier pos:line="1880" pos:column="16">*<pos:position pos:line="1880" pos:column="17"/></modifier></type><name pos:line="1880" pos:column="17">map<pos:position pos:line="1880" pos:column="20"/></name></decl>;<pos:position pos:line="1880" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1881" pos:column="5">var_rec<pos:position pos:line="1881" pos:column="12"/></name> <modifier pos:line="1881" pos:column="13">*<pos:position pos:line="1881" pos:column="14"/></modifier></type><name pos:line="1881" pos:column="14">best<pos:position pos:line="1881" pos:column="18"/></name></decl>;<pos:position pos:line="1881" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1882" pos:column="5">int<pos:position pos:line="1882" pos:column="8"/></name></type> <name pos:line="1882" pos:column="9">res<pos:position pos:line="1882" pos:column="12"/></name></decl>;<pos:position pos:line="1882" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1883" pos:column="5">char<pos:position pos:line="1883" pos:column="9"/></name> <modifier pos:line="1883" pos:column="10">*<pos:position pos:line="1883" pos:column="11"/></modifier></type><name pos:line="1883" pos:column="11">udir<pos:position pos:line="1883" pos:column="15"/></name></decl>;<pos:position pos:line="1883" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="1884" pos:column="5">const<pos:position pos:line="1884" pos:column="10"/></specifier> <name pos:line="1884" pos:column="11">char<pos:position pos:line="1884" pos:column="15"/></name> <modifier pos:line="1884" pos:column="16">*<pos:position pos:line="1884" pos:column="17"/></modifier></type><name pos:line="1884" pos:column="17">new_req<pos:position pos:line="1884" pos:column="24"/></name></decl>;<pos:position pos:line="1884" pos:column="25"/></decl_stmt>

    <if pos:line="1886" pos:column="5">if<condition pos:line="1886" pos:column="7">(<expr><call><name pos:line="1886" pos:column="8">strcmp<pos:position pos:line="1886" pos:column="14"/></name><argument_list pos:line="1886" pos:column="14">(<argument><expr><name><name pos:line="1886" pos:column="15">r<pos:position pos:line="1886" pos:column="16"/></name><operator pos:line="1886" pos:column="16">-&gt;<pos:position pos:line="1886" pos:column="21"/></operator><name pos:line="1886" pos:column="18">handler<pos:position pos:line="1886" pos:column="25"/></name></name></expr></argument>,<argument><expr><name pos:line="1886" pos:column="26">MAP_FILE_MAGIC_TYPE<pos:position pos:line="1886" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1886" pos:column="46"/></argument_list></call> <operator pos:line="1886" pos:column="47">&amp;&amp;<pos:position pos:line="1886" pos:column="57"/></operator> <call><name pos:line="1886" pos:column="50">strcmp<pos:position pos:line="1886" pos:column="56"/></name><argument_list pos:line="1886" pos:column="56">(<argument><expr><name><name pos:line="1886" pos:column="57">r<pos:position pos:line="1886" pos:column="58"/></name><operator pos:line="1886" pos:column="58">-&gt;<pos:position pos:line="1886" pos:column="63"/></operator><name pos:line="1886" pos:column="60">handler<pos:position pos:line="1886" pos:column="67"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="1886" pos:column="68">"type-map"<pos:position pos:line="1886" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="1886" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="1886" pos:column="80"/></condition><then pos:line="1886" pos:column="80">
        <block type="pseudo"><return pos:line="1887" pos:column="9">return <expr><name pos:line="1887" pos:column="16">DECLINED<pos:position pos:line="1887" pos:column="24"/></name></expr>;<pos:position pos:line="1887" pos:column="25"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="1889" pos:column="5">neg<pos:position pos:line="1889" pos:column="8"/></name> <operator pos:line="1889" pos:column="9">=<pos:position pos:line="1889" pos:column="10"/></operator> <call><name pos:line="1889" pos:column="11">parse_accept_headers<pos:position pos:line="1889" pos:column="31"/></name><argument_list pos:line="1889" pos:column="31">(<argument><expr><name pos:line="1889" pos:column="32">r<pos:position pos:line="1889" pos:column="33"/></name></expr></argument>)<pos:position pos:line="1889" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="1889" pos:column="35"/></expr_stmt>
    <if pos:line="1890" pos:column="5">if <condition pos:line="1890" pos:column="8">(<expr><operator pos:line="1890" pos:column="9">(<pos:position pos:line="1890" pos:column="10"/></operator><name pos:line="1890" pos:column="10">res<pos:position pos:line="1890" pos:column="13"/></name> <operator pos:line="1890" pos:column="14">=<pos:position pos:line="1890" pos:column="15"/></operator> <call><name pos:line="1890" pos:column="16">read_type_map<pos:position pos:line="1890" pos:column="29"/></name><argument_list pos:line="1890" pos:column="29">(<argument><expr><operator pos:line="1890" pos:column="30">&amp;<pos:position pos:line="1890" pos:column="35"/></operator><name pos:line="1890" pos:column="31">map<pos:position pos:line="1890" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1890" pos:column="36">neg<pos:position pos:line="1890" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1890" pos:column="41">r<pos:position pos:line="1890" pos:column="42"/></name></expr></argument>)<pos:position pos:line="1890" pos:column="43"/></argument_list></call><operator pos:line="1890" pos:column="43">)<pos:position pos:line="1890" pos:column="44"/></operator></expr>)<pos:position pos:line="1890" pos:column="45"/></condition><then pos:line="1890" pos:column="45"> <block pos:line="1890" pos:column="46">{
        <return pos:line="1891" pos:column="9">return <expr><name pos:line="1891" pos:column="16">res<pos:position pos:line="1891" pos:column="19"/></name></expr>;<pos:position pos:line="1891" pos:column="20"/></return>
    }<pos:position pos:line="1892" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="1894" pos:column="5">res<pos:position pos:line="1894" pos:column="8"/></name> <operator pos:line="1894" pos:column="9">=<pos:position pos:line="1894" pos:column="10"/></operator> <call><name pos:line="1894" pos:column="11">do_negotiation<pos:position pos:line="1894" pos:column="25"/></name><argument_list pos:line="1894" pos:column="25">(<argument><expr><name pos:line="1894" pos:column="26">r<pos:position pos:line="1894" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1894" pos:column="29">neg<pos:position pos:line="1894" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="1894" pos:column="34">&amp;<pos:position pos:line="1894" pos:column="39"/></operator><name pos:line="1894" pos:column="35">best<pos:position pos:line="1894" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1894" pos:column="41">0<pos:position pos:line="1894" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="1894" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1894" pos:column="44"/></expr_stmt>
    <if pos:line="1895" pos:column="5">if <condition pos:line="1895" pos:column="8">(<expr><name pos:line="1895" pos:column="9">res<pos:position pos:line="1895" pos:column="12"/></name> <operator pos:line="1895" pos:column="13">!=<pos:position pos:line="1895" pos:column="15"/></operator> <literal type="number" pos:line="1895" pos:column="16">0<pos:position pos:line="1895" pos:column="17"/></literal></expr>)<pos:position pos:line="1895" pos:column="18"/></condition><then pos:line="1895" pos:column="18"> <block type="pseudo"><return pos:line="1895" pos:column="19">return <expr><name pos:line="1895" pos:column="26">res<pos:position pos:line="1895" pos:column="29"/></name></expr>;<pos:position pos:line="1895" pos:column="30"/></return></block></then></if>

    <if pos:line="1897" pos:column="5">if <condition pos:line="1897" pos:column="8">(<expr><name><name pos:line="1897" pos:column="9">best<pos:position pos:line="1897" pos:column="13"/></name><operator pos:line="1897" pos:column="13">-&gt;<pos:position pos:line="1897" pos:column="18"/></operator><name pos:line="1897" pos:column="15">body<pos:position pos:line="1897" pos:column="19"/></name></name></expr>)<pos:position pos:line="1897" pos:column="20"/></condition><then pos:line="1897" pos:column="20">
    <block pos:line="1898" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="1899" pos:column="9">conn_rec<pos:position pos:line="1899" pos:column="17"/></name> <modifier pos:line="1899" pos:column="18">*<pos:position pos:line="1899" pos:column="19"/></modifier></type><name pos:line="1899" pos:column="19">c<pos:position pos:line="1899" pos:column="20"/></name> <init pos:line="1899" pos:column="21">= <expr><name><name pos:line="1899" pos:column="23">r<pos:position pos:line="1899" pos:column="24"/></name><operator pos:line="1899" pos:column="24">-&gt;<pos:position pos:line="1899" pos:column="29"/></operator><name pos:line="1899" pos:column="26">connection<pos:position pos:line="1899" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="1899" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1900" pos:column="9">apr_bucket_brigade<pos:position pos:line="1900" pos:column="27"/></name> <modifier pos:line="1900" pos:column="28">*<pos:position pos:line="1900" pos:column="29"/></modifier></type><name pos:line="1900" pos:column="29">bb<pos:position pos:line="1900" pos:column="31"/></name></decl>;<pos:position pos:line="1900" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1901" pos:column="9">apr_bucket<pos:position pos:line="1901" pos:column="19"/></name> <modifier pos:line="1901" pos:column="20">*<pos:position pos:line="1901" pos:column="21"/></modifier></type><name pos:line="1901" pos:column="21">e<pos:position pos:line="1901" pos:column="22"/></name></decl>;<pos:position pos:line="1901" pos:column="23"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="1903" pos:column="9">ap_allow_standard_methods<pos:position pos:line="1903" pos:column="34"/></name><argument_list pos:line="1903" pos:column="34">(<argument><expr><name pos:line="1903" pos:column="35">r<pos:position pos:line="1903" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1903" pos:column="38">REPLACE_ALLOW<pos:position pos:line="1903" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1903" pos:column="53">M_GET<pos:position pos:line="1903" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="1903" pos:column="60">M_OPTIONS<pos:position pos:line="1903" pos:column="69"/></name></expr></argument>,
                                  <argument><expr><name pos:line="1904" pos:column="35">M_POST<pos:position pos:line="1904" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="1904" pos:column="43">-<pos:position pos:line="1904" pos:column="44"/></operator><literal type="number" pos:line="1904" pos:column="44">1<pos:position pos:line="1904" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="1904" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="1904" pos:column="47"/></expr_stmt>
        <comment type="block" pos:line="1905" pos:column="9">/* XXX: ?
         * if (r-&gt;method_number == M_OPTIONS) {
         *    return ap_send_http_options(r);
         *}
         */</comment>
        <if pos:line="1910" pos:column="9">if <condition pos:line="1910" pos:column="12">(<expr><name><name pos:line="1910" pos:column="13">r<pos:position pos:line="1910" pos:column="14"/></name><operator pos:line="1910" pos:column="14">-&gt;<pos:position pos:line="1910" pos:column="19"/></operator><name pos:line="1910" pos:column="16">method_number<pos:position pos:line="1910" pos:column="29"/></name></name> <operator pos:line="1910" pos:column="30">!=<pos:position pos:line="1910" pos:column="32"/></operator> <name pos:line="1910" pos:column="33">M_GET<pos:position pos:line="1910" pos:column="38"/></name> <operator pos:line="1910" pos:column="39">&amp;&amp;<pos:position pos:line="1910" pos:column="49"/></operator> <name><name pos:line="1910" pos:column="42">r<pos:position pos:line="1910" pos:column="43"/></name><operator pos:line="1910" pos:column="43">-&gt;<pos:position pos:line="1910" pos:column="48"/></operator><name pos:line="1910" pos:column="45">method_number<pos:position pos:line="1910" pos:column="58"/></name></name> <operator pos:line="1910" pos:column="59">!=<pos:position pos:line="1910" pos:column="61"/></operator> <name pos:line="1910" pos:column="62">M_POST<pos:position pos:line="1910" pos:column="68"/></name></expr>)<pos:position pos:line="1910" pos:column="69"/></condition><then pos:line="1910" pos:column="69"> <block pos:line="1910" pos:column="70">{
            <return pos:line="1911" pos:column="13">return <expr><name pos:line="1911" pos:column="20">HTTP_METHOD_NOT_ALLOWED<pos:position pos:line="1911" pos:column="43"/></name></expr>;<pos:position pos:line="1911" pos:column="44"/></return>
        }<pos:position pos:line="1912" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="1914" pos:column="9">/* ### These may be implemented by adding some 'extra' info
         *     of the file offset onto the etag
         * ap_update_mtime(r, r-&gt;finfo.mtime);
         * ap_set_last_modified(r);
         * ap_set_etag(r);
         */</comment>
        <expr_stmt><expr><call><name pos:line="1920" pos:column="9">apr_table_setn<pos:position pos:line="1920" pos:column="23"/></name><argument_list pos:line="1920" pos:column="23">(<argument><expr><name><name pos:line="1920" pos:column="24">r<pos:position pos:line="1920" pos:column="25"/></name><operator pos:line="1920" pos:column="25">-&gt;<pos:position pos:line="1920" pos:column="30"/></operator><name pos:line="1920" pos:column="27">headers_out<pos:position pos:line="1920" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1920" pos:column="40">"Accept-Ranges"<pos:position pos:line="1920" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1920" pos:column="57">"bytes"<pos:position pos:line="1920" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="1920" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="1920" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1921" pos:column="9">ap_set_content_length<pos:position pos:line="1921" pos:column="30"/></name><argument_list pos:line="1921" pos:column="30">(<argument><expr><name pos:line="1921" pos:column="31">r<pos:position pos:line="1921" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="1921" pos:column="34">best<pos:position pos:line="1921" pos:column="38"/></name><operator pos:line="1921" pos:column="38">-&gt;<pos:position pos:line="1921" pos:column="43"/></operator><name pos:line="1921" pos:column="40">bytes<pos:position pos:line="1921" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="1921" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="1921" pos:column="47"/></expr_stmt>

        <comment type="block" pos:line="1923" pos:column="9">/* set MIME type and charset as negotiated */</comment>
        <if pos:line="1924" pos:column="9">if <condition pos:line="1924" pos:column="12">(<expr><name><name pos:line="1924" pos:column="13">best<pos:position pos:line="1924" pos:column="17"/></name><operator pos:line="1924" pos:column="17">-&gt;<pos:position pos:line="1924" pos:column="22"/></operator><name pos:line="1924" pos:column="19">mime_type<pos:position pos:line="1924" pos:column="28"/></name></name> <operator pos:line="1924" pos:column="29">&amp;&amp;<pos:position pos:line="1924" pos:column="39"/></operator> <operator pos:line="1924" pos:column="32">*<pos:position pos:line="1924" pos:column="33"/></operator><name><name pos:line="1924" pos:column="33">best<pos:position pos:line="1924" pos:column="37"/></name><operator pos:line="1924" pos:column="37">-&gt;<pos:position pos:line="1924" pos:column="42"/></operator><name pos:line="1924" pos:column="39">mime_type<pos:position pos:line="1924" pos:column="48"/></name></name></expr>)<pos:position pos:line="1924" pos:column="49"/></condition><then pos:line="1924" pos:column="49"> <block pos:line="1924" pos:column="50">{
            <if pos:line="1925" pos:column="13">if <condition pos:line="1925" pos:column="16">(<expr><name><name pos:line="1925" pos:column="17">best<pos:position pos:line="1925" pos:column="21"/></name><operator pos:line="1925" pos:column="21">-&gt;<pos:position pos:line="1925" pos:column="26"/></operator><name pos:line="1925" pos:column="23">content_charset<pos:position pos:line="1925" pos:column="38"/></name></name> <operator pos:line="1925" pos:column="39">&amp;&amp;<pos:position pos:line="1925" pos:column="49"/></operator> <operator pos:line="1925" pos:column="42">*<pos:position pos:line="1925" pos:column="43"/></operator><name><name pos:line="1925" pos:column="43">best<pos:position pos:line="1925" pos:column="47"/></name><operator pos:line="1925" pos:column="47">-&gt;<pos:position pos:line="1925" pos:column="52"/></operator><name pos:line="1925" pos:column="49">content_charset<pos:position pos:line="1925" pos:column="64"/></name></name></expr>)<pos:position pos:line="1925" pos:column="65"/></condition><then pos:line="1925" pos:column="65"> <block pos:line="1925" pos:column="66">{
                <expr_stmt><expr><call><name pos:line="1926" pos:column="17">ap_set_content_type<pos:position pos:line="1926" pos:column="36"/></name><argument_list pos:line="1926" pos:column="36">(<argument><expr><name pos:line="1926" pos:column="37">r<pos:position pos:line="1926" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="1926" pos:column="40">apr_pstrcat<pos:position pos:line="1926" pos:column="51"/></name><argument_list pos:line="1926" pos:column="51">(<argument><expr><name><name pos:line="1926" pos:column="52">r<pos:position pos:line="1926" pos:column="53"/></name><operator pos:line="1926" pos:column="53">-&gt;<pos:position pos:line="1926" pos:column="58"/></operator><name pos:line="1926" pos:column="55">pool<pos:position pos:line="1926" pos:column="59"/></name></name></expr></argument>,
                                                   <argument><expr><name><name pos:line="1927" pos:column="52">best<pos:position pos:line="1927" pos:column="56"/></name><operator pos:line="1927" pos:column="56">-&gt;<pos:position pos:line="1927" pos:column="61"/></operator><name pos:line="1927" pos:column="58">mime_type<pos:position pos:line="1927" pos:column="67"/></name></name></expr></argument>,
                                                   <argument><expr><literal type="string" pos:line="1928" pos:column="52">"; charset="<pos:position pos:line="1928" pos:column="64"/></literal></expr></argument>,
                                                   <argument><expr><name><name pos:line="1929" pos:column="52">best<pos:position pos:line="1929" pos:column="56"/></name><operator pos:line="1929" pos:column="56">-&gt;<pos:position pos:line="1929" pos:column="61"/></operator><name pos:line="1929" pos:column="58">content_charset<pos:position pos:line="1929" pos:column="73"/></name></name></expr></argument>,
                                                   <argument><expr><name pos:line="1930" pos:column="52">NULL<pos:position pos:line="1930" pos:column="56"/></name></expr></argument>)<pos:position pos:line="1930" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="1930" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1930" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="1931" pos:column="14"/></block></then>
            <else pos:line="1932" pos:column="13">else <block pos:line="1932" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="1933" pos:column="17">ap_set_content_type<pos:position pos:line="1933" pos:column="36"/></name><argument_list pos:line="1933" pos:column="36">(<argument><expr><name pos:line="1933" pos:column="37">r<pos:position pos:line="1933" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="1933" pos:column="40">apr_pstrdup<pos:position pos:line="1933" pos:column="51"/></name><argument_list pos:line="1933" pos:column="51">(<argument><expr><name><name pos:line="1933" pos:column="52">r<pos:position pos:line="1933" pos:column="53"/></name><operator pos:line="1933" pos:column="53">-&gt;<pos:position pos:line="1933" pos:column="58"/></operator><name pos:line="1933" pos:column="55">pool<pos:position pos:line="1933" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1933" pos:column="61">best<pos:position pos:line="1933" pos:column="65"/></name><operator pos:line="1933" pos:column="65">-&gt;<pos:position pos:line="1933" pos:column="70"/></operator><name pos:line="1933" pos:column="67">mime_type<pos:position pos:line="1933" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="1933" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="1933" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="1933" pos:column="79"/></expr_stmt>
            }<pos:position pos:line="1934" pos:column="14"/></block></else></if>
        }<pos:position pos:line="1935" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="1937" pos:column="9">/* set Content-language(s) as negotiated */</comment>
        <if pos:line="1938" pos:column="9">if <condition pos:line="1938" pos:column="12">(<expr><name><name pos:line="1938" pos:column="13">best<pos:position pos:line="1938" pos:column="17"/></name><operator pos:line="1938" pos:column="17">-&gt;<pos:position pos:line="1938" pos:column="22"/></operator><name pos:line="1938" pos:column="19">content_languages<pos:position pos:line="1938" pos:column="36"/></name></name> <operator pos:line="1938" pos:column="37">&amp;&amp;<pos:position pos:line="1938" pos:column="47"/></operator> <name><name pos:line="1938" pos:column="40">best<pos:position pos:line="1938" pos:column="44"/></name><operator pos:line="1938" pos:column="44">-&gt;<pos:position pos:line="1938" pos:column="49"/></operator><name pos:line="1938" pos:column="46">content_languages<pos:position pos:line="1938" pos:column="63"/></name><operator pos:line="1938" pos:column="63">-&gt;<pos:position pos:line="1938" pos:column="68"/></operator><name pos:line="1938" pos:column="65">nelts<pos:position pos:line="1938" pos:column="70"/></name></name></expr>)<pos:position pos:line="1938" pos:column="71"/></condition><then pos:line="1938" pos:column="71"> <block pos:line="1938" pos:column="72">{
            <expr_stmt><expr><name><name pos:line="1939" pos:column="13">r<pos:position pos:line="1939" pos:column="14"/></name><operator pos:line="1939" pos:column="14">-&gt;<pos:position pos:line="1939" pos:column="19"/></operator><name pos:line="1939" pos:column="16">content_languages<pos:position pos:line="1939" pos:column="33"/></name></name> <operator pos:line="1939" pos:column="34">=<pos:position pos:line="1939" pos:column="35"/></operator> <call><name pos:line="1939" pos:column="36">apr_array_copy<pos:position pos:line="1939" pos:column="50"/></name><argument_list pos:line="1939" pos:column="50">(<argument><expr><name><name pos:line="1939" pos:column="51">r<pos:position pos:line="1939" pos:column="52"/></name><operator pos:line="1939" pos:column="52">-&gt;<pos:position pos:line="1939" pos:column="57"/></operator><name pos:line="1939" pos:column="54">pool<pos:position pos:line="1939" pos:column="58"/></name></name></expr></argument>,
                                                  <argument><expr><name><name pos:line="1940" pos:column="51">best<pos:position pos:line="1940" pos:column="55"/></name><operator pos:line="1940" pos:column="55">-&gt;<pos:position pos:line="1940" pos:column="60"/></operator><name pos:line="1940" pos:column="57">content_languages<pos:position pos:line="1940" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="1940" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="1940" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="1941" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="1943" pos:column="9">/* set Content-Encoding as negotiated */</comment>
        <if pos:line="1944" pos:column="9">if <condition pos:line="1944" pos:column="12">(<expr><name><name pos:line="1944" pos:column="13">best<pos:position pos:line="1944" pos:column="17"/></name><operator pos:line="1944" pos:column="17">-&gt;<pos:position pos:line="1944" pos:column="22"/></operator><name pos:line="1944" pos:column="19">content_encoding<pos:position pos:line="1944" pos:column="35"/></name></name> <operator pos:line="1944" pos:column="36">&amp;&amp;<pos:position pos:line="1944" pos:column="46"/></operator> <operator pos:line="1944" pos:column="39">*<pos:position pos:line="1944" pos:column="40"/></operator><name><name pos:line="1944" pos:column="40">best<pos:position pos:line="1944" pos:column="44"/></name><operator pos:line="1944" pos:column="44">-&gt;<pos:position pos:line="1944" pos:column="49"/></operator><name pos:line="1944" pos:column="46">content_encoding<pos:position pos:line="1944" pos:column="62"/></name></name></expr>)<pos:position pos:line="1944" pos:column="63"/></condition><then pos:line="1944" pos:column="63"> <block pos:line="1944" pos:column="64">{
            <expr_stmt><expr><name><name pos:line="1945" pos:column="13">r<pos:position pos:line="1945" pos:column="14"/></name><operator pos:line="1945" pos:column="14">-&gt;<pos:position pos:line="1945" pos:column="19"/></operator><name pos:line="1945" pos:column="16">content_encoding<pos:position pos:line="1945" pos:column="32"/></name></name> <operator pos:line="1945" pos:column="33">=<pos:position pos:line="1945" pos:column="34"/></operator> <call><name pos:line="1945" pos:column="35">apr_pstrdup<pos:position pos:line="1945" pos:column="46"/></name><argument_list pos:line="1945" pos:column="46">(<argument><expr><name><name pos:line="1945" pos:column="47">r<pos:position pos:line="1945" pos:column="48"/></name><operator pos:line="1945" pos:column="48">-&gt;<pos:position pos:line="1945" pos:column="53"/></operator><name pos:line="1945" pos:column="50">pool<pos:position pos:line="1945" pos:column="54"/></name></name></expr></argument>,
                                              <argument><expr><name><name pos:line="1946" pos:column="47">best<pos:position pos:line="1946" pos:column="51"/></name><operator pos:line="1946" pos:column="51">-&gt;<pos:position pos:line="1946" pos:column="56"/></operator><name pos:line="1946" pos:column="53">content_encoding<pos:position pos:line="1946" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="1946" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1946" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="1947" pos:column="10"/></block></then></if>

        <if pos:line="1949" pos:column="9">if <condition pos:line="1949" pos:column="12">(<expr><operator pos:line="1949" pos:column="13">(<pos:position pos:line="1949" pos:column="14"/></operator><name pos:line="1949" pos:column="14">res<pos:position pos:line="1949" pos:column="17"/></name> <operator pos:line="1949" pos:column="18">=<pos:position pos:line="1949" pos:column="19"/></operator> <call><name pos:line="1949" pos:column="20">ap_meets_conditions<pos:position pos:line="1949" pos:column="39"/></name><argument_list pos:line="1949" pos:column="39">(<argument><expr><name pos:line="1949" pos:column="40">r<pos:position pos:line="1949" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1949" pos:column="42"/></argument_list></call><operator pos:line="1949" pos:column="42">)<pos:position pos:line="1949" pos:column="43"/></operator> <operator pos:line="1949" pos:column="44">!=<pos:position pos:line="1949" pos:column="46"/></operator> <name pos:line="1949" pos:column="47">OK<pos:position pos:line="1949" pos:column="49"/></name></expr>)<pos:position pos:line="1949" pos:column="50"/></condition><then pos:line="1949" pos:column="50"> <block pos:line="1949" pos:column="51">{
            <return pos:line="1950" pos:column="13">return <expr><name pos:line="1950" pos:column="20">res<pos:position pos:line="1950" pos:column="23"/></name></expr>;<pos:position pos:line="1950" pos:column="24"/></return>
        }<pos:position pos:line="1951" pos:column="10"/></block></then></if>

        <if pos:line="1953" pos:column="9">if <condition pos:line="1953" pos:column="12">(<expr><operator pos:line="1953" pos:column="13">(<pos:position pos:line="1953" pos:column="14"/></operator><name pos:line="1953" pos:column="14">res<pos:position pos:line="1953" pos:column="17"/></name> <operator pos:line="1953" pos:column="18">=<pos:position pos:line="1953" pos:column="19"/></operator> <call><name pos:line="1953" pos:column="20">ap_discard_request_body<pos:position pos:line="1953" pos:column="43"/></name><argument_list pos:line="1953" pos:column="43">(<argument><expr><name pos:line="1953" pos:column="44">r<pos:position pos:line="1953" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1953" pos:column="46"/></argument_list></call><operator pos:line="1953" pos:column="46">)<pos:position pos:line="1953" pos:column="47"/></operator> <operator pos:line="1953" pos:column="48">!=<pos:position pos:line="1953" pos:column="50"/></operator> <name pos:line="1953" pos:column="51">OK<pos:position pos:line="1953" pos:column="53"/></name></expr>)<pos:position pos:line="1953" pos:column="54"/></condition><then pos:line="1953" pos:column="54"> <block pos:line="1953" pos:column="55">{
            <return pos:line="1954" pos:column="13">return <expr><name pos:line="1954" pos:column="20">res<pos:position pos:line="1954" pos:column="23"/></name></expr>;<pos:position pos:line="1954" pos:column="24"/></return>
        }<pos:position pos:line="1955" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="1956" pos:column="9">bb<pos:position pos:line="1956" pos:column="11"/></name> <operator pos:line="1956" pos:column="12">=<pos:position pos:line="1956" pos:column="13"/></operator> <call><name pos:line="1956" pos:column="14">apr_brigade_create<pos:position pos:line="1956" pos:column="32"/></name><argument_list pos:line="1956" pos:column="32">(<argument><expr><name><name pos:line="1956" pos:column="33">r<pos:position pos:line="1956" pos:column="34"/></name><operator pos:line="1956" pos:column="34">-&gt;<pos:position pos:line="1956" pos:column="39"/></operator><name pos:line="1956" pos:column="36">pool<pos:position pos:line="1956" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1956" pos:column="42">c<pos:position pos:line="1956" pos:column="43"/></name><operator pos:line="1956" pos:column="43">-&gt;<pos:position pos:line="1956" pos:column="48"/></operator><name pos:line="1956" pos:column="45">bucket_alloc<pos:position pos:line="1956" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="1956" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1956" pos:column="59"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="1958" pos:column="9">apr_brigade_insert_file<pos:position pos:line="1958" pos:column="32"/></name><argument_list pos:line="1958" pos:column="32">(<argument><expr><name pos:line="1958" pos:column="33">bb<pos:position pos:line="1958" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1958" pos:column="37">map<pos:position pos:line="1958" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="1958" pos:column="42">best<pos:position pos:line="1958" pos:column="46"/></name><operator pos:line="1958" pos:column="46">-&gt;<pos:position pos:line="1958" pos:column="51"/></operator><name pos:line="1958" pos:column="48">body<pos:position pos:line="1958" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1958" pos:column="54">best<pos:position pos:line="1958" pos:column="58"/></name><operator pos:line="1958" pos:column="58">-&gt;<pos:position pos:line="1958" pos:column="63"/></operator><name pos:line="1958" pos:column="60">bytes<pos:position pos:line="1958" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1958" pos:column="67">r<pos:position pos:line="1958" pos:column="68"/></name><operator pos:line="1958" pos:column="68">-&gt;<pos:position pos:line="1958" pos:column="73"/></operator><name pos:line="1958" pos:column="70">pool<pos:position pos:line="1958" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="1958" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="1958" pos:column="76"/></expr_stmt>

        <expr_stmt><expr><name pos:line="1960" pos:column="9">e<pos:position pos:line="1960" pos:column="10"/></name> <operator pos:line="1960" pos:column="11">=<pos:position pos:line="1960" pos:column="12"/></operator> <call><name pos:line="1960" pos:column="13">apr_bucket_eos_create<pos:position pos:line="1960" pos:column="34"/></name><argument_list pos:line="1960" pos:column="34">(<argument><expr><name><name pos:line="1960" pos:column="35">c<pos:position pos:line="1960" pos:column="36"/></name><operator pos:line="1960" pos:column="36">-&gt;<pos:position pos:line="1960" pos:column="41"/></operator><name pos:line="1960" pos:column="38">bucket_alloc<pos:position pos:line="1960" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="1960" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1960" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1961" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="1961" pos:column="32"/></name><argument_list pos:line="1961" pos:column="32">(<argument><expr><name pos:line="1961" pos:column="33">bb<pos:position pos:line="1961" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1961" pos:column="37">e<pos:position pos:line="1961" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1961" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1961" pos:column="40"/></expr_stmt>

        <return pos:line="1963" pos:column="9">return <expr><call><name pos:line="1963" pos:column="16">ap_pass_brigade<pos:position pos:line="1963" pos:column="31"/></name><argument_list pos:line="1963" pos:column="31">(<argument><expr><name><name pos:line="1963" pos:column="32">r<pos:position pos:line="1963" pos:column="33"/></name><operator pos:line="1963" pos:column="33">-&gt;<pos:position pos:line="1963" pos:column="38"/></operator><name pos:line="1963" pos:column="35">output_filters<pos:position pos:line="1963" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="1963" pos:column="51">bb<pos:position pos:line="1963" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1963" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1963" pos:column="55"/></return>
    }<pos:position pos:line="1964" pos:column="6"/></block></then></if>

    <if pos:line="1966" pos:column="5">if <condition pos:line="1966" pos:column="8">(<expr><name><name pos:line="1966" pos:column="9">r<pos:position pos:line="1966" pos:column="10"/></name><operator pos:line="1966" pos:column="10">-&gt;<pos:position pos:line="1966" pos:column="15"/></operator><name pos:line="1966" pos:column="12">path_info<pos:position pos:line="1966" pos:column="21"/></name></name> <operator pos:line="1966" pos:column="22">&amp;&amp;<pos:position pos:line="1966" pos:column="32"/></operator> <operator pos:line="1966" pos:column="25">*<pos:position pos:line="1966" pos:column="26"/></operator><name><name pos:line="1966" pos:column="26">r<pos:position pos:line="1966" pos:column="27"/></name><operator pos:line="1966" pos:column="27">-&gt;<pos:position pos:line="1966" pos:column="32"/></operator><name pos:line="1966" pos:column="29">path_info<pos:position pos:line="1966" pos:column="38"/></name></name></expr>)<pos:position pos:line="1966" pos:column="39"/></condition><then pos:line="1966" pos:column="39"> <block pos:line="1966" pos:column="40">{
        <comment type="block" pos:line="1967" pos:column="9">/* remove any path_info from the end of the uri before trying
         * to change the filename.  r-&gt;path_info from the original
         * request is passed along on the redirect.
         */</comment>
        <expr_stmt><expr><name><name pos:line="1971" pos:column="9">r<pos:position pos:line="1971" pos:column="10"/></name><operator pos:line="1971" pos:column="10">-&gt;<pos:position pos:line="1971" pos:column="15"/></operator><name pos:line="1971" pos:column="12">uri<pos:position pos:line="1971" pos:column="15"/></name><index pos:line="1971" pos:column="15">[<expr><call><name pos:line="1971" pos:column="16">ap_find_path_info<pos:position pos:line="1971" pos:column="33"/></name><argument_list pos:line="1971" pos:column="33">(<argument><expr><name><name pos:line="1971" pos:column="34">r<pos:position pos:line="1971" pos:column="35"/></name><operator pos:line="1971" pos:column="35">-&gt;<pos:position pos:line="1971" pos:column="40"/></operator><name pos:line="1971" pos:column="37">uri<pos:position pos:line="1971" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1971" pos:column="42">r<pos:position pos:line="1971" pos:column="43"/></name><operator pos:line="1971" pos:column="43">-&gt;<pos:position pos:line="1971" pos:column="48"/></operator><name pos:line="1971" pos:column="45">path_info<pos:position pos:line="1971" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="1971" pos:column="55"/></argument_list></call></expr>]<pos:position pos:line="1971" pos:column="56"/></index></name> <operator pos:line="1971" pos:column="57">=<pos:position pos:line="1971" pos:column="58"/></operator> <literal type="char" pos:line="1971" pos:column="59">'\0'<pos:position pos:line="1971" pos:column="63"/></literal></expr>;<pos:position pos:line="1971" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="1972" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="1973" pos:column="5">udir<pos:position pos:line="1973" pos:column="9"/></name> <operator pos:line="1973" pos:column="10">=<pos:position pos:line="1973" pos:column="11"/></operator> <call><name pos:line="1973" pos:column="12">ap_make_dirstr_parent<pos:position pos:line="1973" pos:column="33"/></name><argument_list pos:line="1973" pos:column="33">(<argument><expr><name><name pos:line="1973" pos:column="34">r<pos:position pos:line="1973" pos:column="35"/></name><operator pos:line="1973" pos:column="35">-&gt;<pos:position pos:line="1973" pos:column="40"/></operator><name pos:line="1973" pos:column="37">pool<pos:position pos:line="1973" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1973" pos:column="43">r<pos:position pos:line="1973" pos:column="44"/></name><operator pos:line="1973" pos:column="44">-&gt;<pos:position pos:line="1973" pos:column="49"/></operator><name pos:line="1973" pos:column="46">uri<pos:position pos:line="1973" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="1973" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1973" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1974" pos:column="5">udir<pos:position pos:line="1974" pos:column="9"/></name> <operator pos:line="1974" pos:column="10">=<pos:position pos:line="1974" pos:column="11"/></operator> <call><name pos:line="1974" pos:column="12">ap_escape_uri<pos:position pos:line="1974" pos:column="25"/></name><argument_list pos:line="1974" pos:column="25">(<argument><expr><name><name pos:line="1974" pos:column="26">r<pos:position pos:line="1974" pos:column="27"/></name><operator pos:line="1974" pos:column="27">-&gt;<pos:position pos:line="1974" pos:column="32"/></operator><name pos:line="1974" pos:column="29">pool<pos:position pos:line="1974" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="1974" pos:column="35">udir<pos:position pos:line="1974" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1974" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1974" pos:column="41"/></expr_stmt>
    <if pos:line="1975" pos:column="5">if <condition pos:line="1975" pos:column="8">(<expr><name><name pos:line="1975" pos:column="9">r<pos:position pos:line="1975" pos:column="10"/></name><operator pos:line="1975" pos:column="10">-&gt;<pos:position pos:line="1975" pos:column="15"/></operator><name pos:line="1975" pos:column="12">args<pos:position pos:line="1975" pos:column="16"/></name></name></expr>)<pos:position pos:line="1975" pos:column="17"/></condition><then pos:line="1975" pos:column="17"> <block pos:line="1975" pos:column="18">{
        <if pos:line="1976" pos:column="9">if <condition pos:line="1976" pos:column="12">(<expr><name><name pos:line="1976" pos:column="13">r<pos:position pos:line="1976" pos:column="14"/></name><operator pos:line="1976" pos:column="14">-&gt;<pos:position pos:line="1976" pos:column="19"/></operator><name pos:line="1976" pos:column="16">path_info<pos:position pos:line="1976" pos:column="25"/></name></name></expr>)<pos:position pos:line="1976" pos:column="26"/></condition><then pos:line="1976" pos:column="26"> <block pos:line="1976" pos:column="27">{
            <expr_stmt><expr><name pos:line="1977" pos:column="13">new_req<pos:position pos:line="1977" pos:column="20"/></name> <operator pos:line="1977" pos:column="21">=<pos:position pos:line="1977" pos:column="22"/></operator> <call><name pos:line="1977" pos:column="23">apr_pstrcat<pos:position pos:line="1977" pos:column="34"/></name><argument_list pos:line="1977" pos:column="34">(<argument><expr><name><name pos:line="1977" pos:column="35">r<pos:position pos:line="1977" pos:column="36"/></name><operator pos:line="1977" pos:column="36">-&gt;<pos:position pos:line="1977" pos:column="41"/></operator><name pos:line="1977" pos:column="38">pool<pos:position pos:line="1977" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="1977" pos:column="44">udir<pos:position pos:line="1977" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="1977" pos:column="50">best<pos:position pos:line="1977" pos:column="54"/></name><operator pos:line="1977" pos:column="54">-&gt;<pos:position pos:line="1977" pos:column="59"/></operator><name pos:line="1977" pos:column="56">file_name<pos:position pos:line="1977" pos:column="65"/></name></name></expr></argument>,
                                  <argument><expr><name><name pos:line="1978" pos:column="35">r<pos:position pos:line="1978" pos:column="36"/></name><operator pos:line="1978" pos:column="36">-&gt;<pos:position pos:line="1978" pos:column="41"/></operator><name pos:line="1978" pos:column="38">path_info<pos:position pos:line="1978" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1978" pos:column="49">"?"<pos:position pos:line="1978" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="1978" pos:column="54">r<pos:position pos:line="1978" pos:column="55"/></name><operator pos:line="1978" pos:column="55">-&gt;<pos:position pos:line="1978" pos:column="60"/></operator><name pos:line="1978" pos:column="57">args<pos:position pos:line="1978" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="1978" pos:column="63">NULL<pos:position pos:line="1978" pos:column="67"/></name></expr></argument>)<pos:position pos:line="1978" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1978" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="1979" pos:column="10"/></block></then>
        <else pos:line="1980" pos:column="9">else <block pos:line="1980" pos:column="14">{
            <expr_stmt><expr><name pos:line="1981" pos:column="13">new_req<pos:position pos:line="1981" pos:column="20"/></name> <operator pos:line="1981" pos:column="21">=<pos:position pos:line="1981" pos:column="22"/></operator> <call><name pos:line="1981" pos:column="23">apr_pstrcat<pos:position pos:line="1981" pos:column="34"/></name><argument_list pos:line="1981" pos:column="34">(<argument><expr><name><name pos:line="1981" pos:column="35">r<pos:position pos:line="1981" pos:column="36"/></name><operator pos:line="1981" pos:column="36">-&gt;<pos:position pos:line="1981" pos:column="41"/></operator><name pos:line="1981" pos:column="38">pool<pos:position pos:line="1981" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="1981" pos:column="44">udir<pos:position pos:line="1981" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="1981" pos:column="50">best<pos:position pos:line="1981" pos:column="54"/></name><operator pos:line="1981" pos:column="54">-&gt;<pos:position pos:line="1981" pos:column="59"/></operator><name pos:line="1981" pos:column="56">file_name<pos:position pos:line="1981" pos:column="65"/></name></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="1982" pos:column="35">"?"<pos:position pos:line="1982" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="1982" pos:column="40">r<pos:position pos:line="1982" pos:column="41"/></name><operator pos:line="1982" pos:column="41">-&gt;<pos:position pos:line="1982" pos:column="46"/></operator><name pos:line="1982" pos:column="43">args<pos:position pos:line="1982" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="1982" pos:column="49">NULL<pos:position pos:line="1982" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1982" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1982" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="1983" pos:column="10"/></block></else></if>
    }<pos:position pos:line="1984" pos:column="6"/></block></then>
    <else pos:line="1985" pos:column="5">else <block pos:line="1985" pos:column="10">{
        <expr_stmt><expr><name pos:line="1986" pos:column="9">new_req<pos:position pos:line="1986" pos:column="16"/></name> <operator pos:line="1986" pos:column="17">=<pos:position pos:line="1986" pos:column="18"/></operator> <call><name pos:line="1986" pos:column="19">apr_pstrcat<pos:position pos:line="1986" pos:column="30"/></name><argument_list pos:line="1986" pos:column="30">(<argument><expr><name><name pos:line="1986" pos:column="31">r<pos:position pos:line="1986" pos:column="32"/></name><operator pos:line="1986" pos:column="32">-&gt;<pos:position pos:line="1986" pos:column="37"/></operator><name pos:line="1986" pos:column="34">pool<pos:position pos:line="1986" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="1986" pos:column="40">udir<pos:position pos:line="1986" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="1986" pos:column="46">best<pos:position pos:line="1986" pos:column="50"/></name><operator pos:line="1986" pos:column="50">-&gt;<pos:position pos:line="1986" pos:column="55"/></operator><name pos:line="1986" pos:column="52">file_name<pos:position pos:line="1986" pos:column="61"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="1987" pos:column="31">r<pos:position pos:line="1987" pos:column="32"/></name><operator pos:line="1987" pos:column="32">-&gt;<pos:position pos:line="1987" pos:column="37"/></operator><name pos:line="1987" pos:column="34">path_info<pos:position pos:line="1987" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="1987" pos:column="45">NULL<pos:position pos:line="1987" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1987" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1987" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="1988" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="1989" pos:column="5">ap_internal_redirect<pos:position pos:line="1989" pos:column="25"/></name><argument_list pos:line="1989" pos:column="25">(<argument><expr><name pos:line="1989" pos:column="26">new_req<pos:position pos:line="1989" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1989" pos:column="35">r<pos:position pos:line="1989" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1989" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1989" pos:column="38"/></expr_stmt>
    <return pos:line="1990" pos:column="5">return <expr><name pos:line="1990" pos:column="12">OK<pos:position pos:line="1990" pos:column="14"/></name></expr>;<pos:position pos:line="1990" pos:column="15"/></return>
}<pos:position pos:line="1991" pos:column="2"/></block></function>

<function><specifier pos:line="1993" pos:column="1">static<pos:position pos:line="1993" pos:column="7"/></specifier> <type><name pos:line="1993" pos:column="8">int<pos:position pos:line="1993" pos:column="11"/></name></type> <name pos:line="1993" pos:column="12">handle_multi<pos:position pos:line="1993" pos:column="24"/></name><parameter_list pos:line="1993" pos:column="24">(<parameter><decl><type><name pos:line="1993" pos:column="25">request_rec<pos:position pos:line="1993" pos:column="36"/></name> <modifier pos:line="1993" pos:column="37">*<pos:position pos:line="1993" pos:column="38"/></modifier></type><name pos:line="1993" pos:column="38">r<pos:position pos:line="1993" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1993" pos:column="40"/></parameter_list>
<block pos:line="1994" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1995" pos:column="5">negotiation_state<pos:position pos:line="1995" pos:column="22"/></name> <modifier pos:line="1995" pos:column="23">*<pos:position pos:line="1995" pos:column="24"/></modifier></type><name pos:line="1995" pos:column="24">neg<pos:position pos:line="1995" pos:column="27"/></name></decl>;<pos:position pos:line="1995" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1996" pos:column="5">var_rec<pos:position pos:line="1996" pos:column="12"/></name> <modifier pos:line="1996" pos:column="13">*<pos:position pos:line="1996" pos:column="14"/></modifier></type><name pos:line="1996" pos:column="14">best<pos:position pos:line="1996" pos:column="18"/></name></decl>, <modifier pos:line="1996" pos:column="20">*<pos:position pos:line="1996" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="1996" pos:column="21">avail_recs<pos:position pos:line="1996" pos:column="31"/></name></decl>;<pos:position pos:line="1996" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1997" pos:column="5">request_rec<pos:position pos:line="1997" pos:column="16"/></name> <modifier pos:line="1997" pos:column="17">*<pos:position pos:line="1997" pos:column="18"/></modifier></type><name pos:line="1997" pos:column="18">sub_req<pos:position pos:line="1997" pos:column="25"/></name></decl>;<pos:position pos:line="1997" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1998" pos:column="5">int<pos:position pos:line="1998" pos:column="8"/></name></type> <name pos:line="1998" pos:column="9">res<pos:position pos:line="1998" pos:column="12"/></name></decl>;<pos:position pos:line="1998" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1999" pos:column="5">int<pos:position pos:line="1999" pos:column="8"/></name></type> <name pos:line="1999" pos:column="9">j<pos:position pos:line="1999" pos:column="10"/></name></decl>;<pos:position pos:line="1999" pos:column="11"/></decl_stmt>

    <if pos:line="2001" pos:column="5">if <condition pos:line="2001" pos:column="8">(<expr><name><name pos:line="2001" pos:column="9">r<pos:position pos:line="2001" pos:column="10"/></name><operator pos:line="2001" pos:column="10">-&gt;<pos:position pos:line="2001" pos:column="15"/></operator><name pos:line="2001" pos:column="12">finfo<pos:position pos:line="2001" pos:column="17"/></name><operator pos:line="2001" pos:column="17">.<pos:position pos:line="2001" pos:column="18"/></operator><name pos:line="2001" pos:column="18">filetype<pos:position pos:line="2001" pos:column="26"/></name></name> <operator pos:line="2001" pos:column="27">!=<pos:position pos:line="2001" pos:column="29"/></operator> <name pos:line="2001" pos:column="30">APR_NOFILE<pos:position pos:line="2001" pos:column="40"/></name>
        <operator pos:line="2002" pos:column="9">||<pos:position pos:line="2002" pos:column="11"/></operator> <operator pos:line="2002" pos:column="12">!<pos:position pos:line="2002" pos:column="13"/></operator><operator pos:line="2002" pos:column="13">(<pos:position pos:line="2002" pos:column="14"/></operator><call><name pos:line="2002" pos:column="14">ap_allow_options<pos:position pos:line="2002" pos:column="30"/></name><argument_list pos:line="2002" pos:column="30">(<argument><expr><name pos:line="2002" pos:column="31">r<pos:position pos:line="2002" pos:column="32"/></name></expr></argument>)<pos:position pos:line="2002" pos:column="33"/></argument_list></call> <operator pos:line="2002" pos:column="34">&amp;<pos:position pos:line="2002" pos:column="39"/></operator> <name pos:line="2002" pos:column="36">OPT_MULTI<pos:position pos:line="2002" pos:column="45"/></name><operator pos:line="2002" pos:column="45">)<pos:position pos:line="2002" pos:column="46"/></operator></expr>)<pos:position pos:line="2002" pos:column="47"/></condition><then pos:line="2002" pos:column="47"> <block pos:line="2002" pos:column="48">{
        <return pos:line="2003" pos:column="9">return <expr><name pos:line="2003" pos:column="16">DECLINED<pos:position pos:line="2003" pos:column="24"/></name></expr>;<pos:position pos:line="2003" pos:column="25"/></return>
    }<pos:position pos:line="2004" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="2006" pos:column="5">neg<pos:position pos:line="2006" pos:column="8"/></name> <operator pos:line="2006" pos:column="9">=<pos:position pos:line="2006" pos:column="10"/></operator> <call><name pos:line="2006" pos:column="11">parse_accept_headers<pos:position pos:line="2006" pos:column="31"/></name><argument_list pos:line="2006" pos:column="31">(<argument><expr><name pos:line="2006" pos:column="32">r<pos:position pos:line="2006" pos:column="33"/></name></expr></argument>)<pos:position pos:line="2006" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="2006" pos:column="35"/></expr_stmt>

    <if pos:line="2008" pos:column="5">if <condition pos:line="2008" pos:column="8">(<expr><operator pos:line="2008" pos:column="9">(<pos:position pos:line="2008" pos:column="10"/></operator><name pos:line="2008" pos:column="10">res<pos:position pos:line="2008" pos:column="13"/></name> <operator pos:line="2008" pos:column="14">=<pos:position pos:line="2008" pos:column="15"/></operator> <call><name pos:line="2008" pos:column="16">read_types_multi<pos:position pos:line="2008" pos:column="32"/></name><argument_list pos:line="2008" pos:column="32">(<argument><expr><name pos:line="2008" pos:column="33">neg<pos:position pos:line="2008" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2008" pos:column="37"/></argument_list></call><operator pos:line="2008" pos:column="37">)<pos:position pos:line="2008" pos:column="38"/></operator></expr>)<pos:position pos:line="2008" pos:column="39"/></condition><then pos:line="2008" pos:column="39"> <block pos:line="2008" pos:column="40">{
      <label><name pos:line="2009" pos:column="7">return_from_multi<pos:position pos:line="2009" pos:column="24"/></name>:<pos:position pos:line="2009" pos:column="25"/></label>
        <comment type="block" pos:line="2010" pos:column="9">/* free all allocated memory from subrequests */</comment>
        <expr_stmt><expr><name pos:line="2011" pos:column="9">avail_recs<pos:position pos:line="2011" pos:column="19"/></name> <operator pos:line="2011" pos:column="20">=<pos:position pos:line="2011" pos:column="21"/></operator> <operator pos:line="2011" pos:column="22">(<pos:position pos:line="2011" pos:column="23"/></operator><name pos:line="2011" pos:column="23">var_rec<pos:position pos:line="2011" pos:column="30"/></name> <operator pos:line="2011" pos:column="31">*<pos:position pos:line="2011" pos:column="32"/></operator><operator pos:line="2011" pos:column="32">)<pos:position pos:line="2011" pos:column="33"/></operator> <name><name pos:line="2011" pos:column="34">neg<pos:position pos:line="2011" pos:column="37"/></name><operator pos:line="2011" pos:column="37">-&gt;<pos:position pos:line="2011" pos:column="42"/></operator><name pos:line="2011" pos:column="39">avail_vars<pos:position pos:line="2011" pos:column="49"/></name><operator pos:line="2011" pos:column="49">-&gt;<pos:position pos:line="2011" pos:column="54"/></operator><name pos:line="2011" pos:column="51">elts<pos:position pos:line="2011" pos:column="55"/></name></name></expr>;<pos:position pos:line="2011" pos:column="56"/></expr_stmt>
        <for pos:line="2012" pos:column="9">for <control pos:line="2012" pos:column="13">(<init><expr><name pos:line="2012" pos:column="14">j<pos:position pos:line="2012" pos:column="15"/></name> <operator pos:line="2012" pos:column="16">=<pos:position pos:line="2012" pos:column="17"/></operator> <literal type="number" pos:line="2012" pos:column="18">0<pos:position pos:line="2012" pos:column="19"/></literal></expr>;<pos:position pos:line="2012" pos:column="20"/></init> <condition><expr><name pos:line="2012" pos:column="21">j<pos:position pos:line="2012" pos:column="22"/></name> <operator pos:line="2012" pos:column="23">&lt;<pos:position pos:line="2012" pos:column="27"/></operator> <name><name pos:line="2012" pos:column="25">neg<pos:position pos:line="2012" pos:column="28"/></name><operator pos:line="2012" pos:column="28">-&gt;<pos:position pos:line="2012" pos:column="33"/></operator><name pos:line="2012" pos:column="30">avail_vars<pos:position pos:line="2012" pos:column="40"/></name><operator pos:line="2012" pos:column="40">-&gt;<pos:position pos:line="2012" pos:column="45"/></operator><name pos:line="2012" pos:column="42">nelts<pos:position pos:line="2012" pos:column="47"/></name></name></expr>;<pos:position pos:line="2012" pos:column="48"/></condition> <incr><expr><operator pos:line="2012" pos:column="49">++<pos:position pos:line="2012" pos:column="51"/></operator><name pos:line="2012" pos:column="51">j<pos:position pos:line="2012" pos:column="52"/></name></expr></incr>)<pos:position pos:line="2012" pos:column="53"/></control> <block pos:line="2012" pos:column="54">{
            <decl_stmt><decl><type><name pos:line="2013" pos:column="13">var_rec<pos:position pos:line="2013" pos:column="20"/></name> <modifier pos:line="2013" pos:column="21">*<pos:position pos:line="2013" pos:column="22"/></modifier></type><name pos:line="2013" pos:column="22">variant<pos:position pos:line="2013" pos:column="29"/></name> <init pos:line="2013" pos:column="30">= <expr><operator pos:line="2013" pos:column="32">&amp;<pos:position pos:line="2013" pos:column="37"/></operator><name><name pos:line="2013" pos:column="33">avail_recs<pos:position pos:line="2013" pos:column="43"/></name><index pos:line="2013" pos:column="43">[<expr><name pos:line="2013" pos:column="44">j<pos:position pos:line="2013" pos:column="45"/></name></expr>]<pos:position pos:line="2013" pos:column="46"/></index></name></expr></init></decl>;<pos:position pos:line="2013" pos:column="47"/></decl_stmt>
            <if pos:line="2014" pos:column="13">if <condition pos:line="2014" pos:column="16">(<expr><name><name pos:line="2014" pos:column="17">variant<pos:position pos:line="2014" pos:column="24"/></name><operator pos:line="2014" pos:column="24">-&gt;<pos:position pos:line="2014" pos:column="29"/></operator><name pos:line="2014" pos:column="26">sub_req<pos:position pos:line="2014" pos:column="33"/></name></name></expr>)<pos:position pos:line="2014" pos:column="34"/></condition><then pos:line="2014" pos:column="34"> <block pos:line="2014" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="2015" pos:column="17">ap_destroy_sub_req<pos:position pos:line="2015" pos:column="35"/></name><argument_list pos:line="2015" pos:column="35">(<argument><expr><name><name pos:line="2015" pos:column="36">variant<pos:position pos:line="2015" pos:column="43"/></name><operator pos:line="2015" pos:column="43">-&gt;<pos:position pos:line="2015" pos:column="48"/></operator><name pos:line="2015" pos:column="45">sub_req<pos:position pos:line="2015" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="2015" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="2015" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="2016" pos:column="14"/></block></then></if>
        }<pos:position pos:line="2017" pos:column="10"/></block></for>
        <return pos:line="2018" pos:column="9">return <expr><name pos:line="2018" pos:column="16">res<pos:position pos:line="2018" pos:column="19"/></name></expr>;<pos:position pos:line="2018" pos:column="20"/></return>
    }<pos:position pos:line="2019" pos:column="6"/></block></then></if>
    <if pos:line="2020" pos:column="5">if <condition pos:line="2020" pos:column="8">(<expr><name><name pos:line="2020" pos:column="9">neg<pos:position pos:line="2020" pos:column="12"/></name><operator pos:line="2020" pos:column="12">-&gt;<pos:position pos:line="2020" pos:column="17"/></operator><name pos:line="2020" pos:column="14">avail_vars<pos:position pos:line="2020" pos:column="24"/></name><operator pos:line="2020" pos:column="24">-&gt;<pos:position pos:line="2020" pos:column="29"/></operator><name pos:line="2020" pos:column="26">nelts<pos:position pos:line="2020" pos:column="31"/></name></name> <operator pos:line="2020" pos:column="32">==<pos:position pos:line="2020" pos:column="34"/></operator> <literal type="number" pos:line="2020" pos:column="35">0<pos:position pos:line="2020" pos:column="36"/></literal></expr>)<pos:position pos:line="2020" pos:column="37"/></condition><then pos:line="2020" pos:column="37"> <block pos:line="2020" pos:column="38">{
        <return pos:line="2021" pos:column="9">return <expr><name pos:line="2021" pos:column="16">DECLINED<pos:position pos:line="2021" pos:column="24"/></name></expr>;<pos:position pos:line="2021" pos:column="25"/></return>
    }<pos:position pos:line="2022" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="2024" pos:column="5">res<pos:position pos:line="2024" pos:column="8"/></name> <operator pos:line="2024" pos:column="9">=<pos:position pos:line="2024" pos:column="10"/></operator> <call><name pos:line="2024" pos:column="11">do_negotiation<pos:position pos:line="2024" pos:column="25"/></name><argument_list pos:line="2024" pos:column="25">(<argument><expr><name pos:line="2024" pos:column="26">r<pos:position pos:line="2024" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2024" pos:column="29">neg<pos:position pos:line="2024" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="2024" pos:column="34">&amp;<pos:position pos:line="2024" pos:column="39"/></operator><name pos:line="2024" pos:column="35">best<pos:position pos:line="2024" pos:column="39"/></name></expr></argument>,
                         <argument><expr><operator pos:line="2025" pos:column="26">(<pos:position pos:line="2025" pos:column="27"/></operator><name><name pos:line="2025" pos:column="27">r<pos:position pos:line="2025" pos:column="28"/></name><operator pos:line="2025" pos:column="28">-&gt;<pos:position pos:line="2025" pos:column="33"/></operator><name pos:line="2025" pos:column="30">method_number<pos:position pos:line="2025" pos:column="43"/></name></name> <operator pos:line="2025" pos:column="44">!=<pos:position pos:line="2025" pos:column="46"/></operator> <name pos:line="2025" pos:column="47">M_GET<pos:position pos:line="2025" pos:column="52"/></name><operator pos:line="2025" pos:column="52">)<pos:position pos:line="2025" pos:column="53"/></operator> <operator pos:line="2025" pos:column="54">||<pos:position pos:line="2025" pos:column="56"/></operator> <name><name pos:line="2025" pos:column="57">r<pos:position pos:line="2025" pos:column="58"/></name><operator pos:line="2025" pos:column="58">-&gt;<pos:position pos:line="2025" pos:column="63"/></operator><name pos:line="2025" pos:column="60">args<pos:position pos:line="2025" pos:column="64"/></name></name> <operator pos:line="2025" pos:column="65">||<pos:position pos:line="2025" pos:column="67"/></operator>
                         <operator pos:line="2026" pos:column="26">(<pos:position pos:line="2026" pos:column="27"/></operator><name><name pos:line="2026" pos:column="27">r<pos:position pos:line="2026" pos:column="28"/></name><operator pos:line="2026" pos:column="28">-&gt;<pos:position pos:line="2026" pos:column="33"/></operator><name pos:line="2026" pos:column="30">path_info<pos:position pos:line="2026" pos:column="39"/></name></name> <operator pos:line="2026" pos:column="40">&amp;&amp;<pos:position pos:line="2026" pos:column="50"/></operator> <operator pos:line="2026" pos:column="43">*<pos:position pos:line="2026" pos:column="44"/></operator><name><name pos:line="2026" pos:column="44">r<pos:position pos:line="2026" pos:column="45"/></name><operator pos:line="2026" pos:column="45">-&gt;<pos:position pos:line="2026" pos:column="50"/></operator><name pos:line="2026" pos:column="47">path_info<pos:position pos:line="2026" pos:column="56"/></name></name><operator pos:line="2026" pos:column="56">)<pos:position pos:line="2026" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="2026" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="2026" pos:column="59"/></expr_stmt>
    <if pos:line="2027" pos:column="5">if <condition pos:line="2027" pos:column="8">(<expr><name pos:line="2027" pos:column="9">res<pos:position pos:line="2027" pos:column="12"/></name> <operator pos:line="2027" pos:column="13">!=<pos:position pos:line="2027" pos:column="15"/></operator> <literal type="number" pos:line="2027" pos:column="16">0<pos:position pos:line="2027" pos:column="17"/></literal></expr>)<pos:position pos:line="2027" pos:column="18"/></condition><then pos:line="2027" pos:column="18">
        <block type="pseudo"><goto pos:line="2028" pos:column="9">goto <name pos:line="2028" pos:column="14">return_from_multi<pos:position pos:line="2028" pos:column="31"/></name>;<pos:position pos:line="2028" pos:column="32"/></goto></block></then></if>

    <if pos:line="2030" pos:column="5">if <condition pos:line="2030" pos:column="8">(<expr><operator pos:line="2030" pos:column="9">!<pos:position pos:line="2030" pos:column="10"/></operator><operator pos:line="2030" pos:column="10">(<pos:position pos:line="2030" pos:column="11"/></operator><name pos:line="2030" pos:column="11">sub_req<pos:position pos:line="2030" pos:column="18"/></name> <operator pos:line="2030" pos:column="19">=<pos:position pos:line="2030" pos:column="20"/></operator> <name><name pos:line="2030" pos:column="21">best<pos:position pos:line="2030" pos:column="25"/></name><operator pos:line="2030" pos:column="25">-&gt;<pos:position pos:line="2030" pos:column="30"/></operator><name pos:line="2030" pos:column="27">sub_req<pos:position pos:line="2030" pos:column="34"/></name></name><operator pos:line="2030" pos:column="34">)<pos:position pos:line="2030" pos:column="35"/></operator></expr>)<pos:position pos:line="2030" pos:column="36"/></condition><then pos:line="2030" pos:column="36"> <block pos:line="2030" pos:column="37">{
        <comment type="block" pos:line="2031" pos:column="9">/* We got this out of a map file, so we don't actually have
         * a sub_req structure yet.  Get one now.
         */</comment>

        <expr_stmt><expr><name pos:line="2035" pos:column="9">sub_req<pos:position pos:line="2035" pos:column="16"/></name> <operator pos:line="2035" pos:column="17">=<pos:position pos:line="2035" pos:column="18"/></operator> <call><name pos:line="2035" pos:column="19">ap_sub_req_lookup_file<pos:position pos:line="2035" pos:column="41"/></name><argument_list pos:line="2035" pos:column="41">(<argument><expr><name><name pos:line="2035" pos:column="42">best<pos:position pos:line="2035" pos:column="46"/></name><operator pos:line="2035" pos:column="46">-&gt;<pos:position pos:line="2035" pos:column="51"/></operator><name pos:line="2035" pos:column="48">file_name<pos:position pos:line="2035" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="2035" pos:column="59">r<pos:position pos:line="2035" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="2035" pos:column="62">r<pos:position pos:line="2035" pos:column="63"/></name><operator pos:line="2035" pos:column="63">-&gt;<pos:position pos:line="2035" pos:column="68"/></operator><name pos:line="2035" pos:column="65">output_filters<pos:position pos:line="2035" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="2035" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="2035" pos:column="81"/></expr_stmt>
        <if pos:line="2036" pos:column="9">if <condition pos:line="2036" pos:column="12">(<expr><name><name pos:line="2036" pos:column="13">sub_req<pos:position pos:line="2036" pos:column="20"/></name><operator pos:line="2036" pos:column="20">-&gt;<pos:position pos:line="2036" pos:column="25"/></operator><name pos:line="2036" pos:column="22">status<pos:position pos:line="2036" pos:column="28"/></name></name> <operator pos:line="2036" pos:column="29">!=<pos:position pos:line="2036" pos:column="31"/></operator> <name pos:line="2036" pos:column="32">HTTP_OK<pos:position pos:line="2036" pos:column="39"/></name></expr>)<pos:position pos:line="2036" pos:column="40"/></condition><then pos:line="2036" pos:column="40"> <block pos:line="2036" pos:column="41">{
            <expr_stmt><expr><name pos:line="2037" pos:column="13">res<pos:position pos:line="2037" pos:column="16"/></name> <operator pos:line="2037" pos:column="17">=<pos:position pos:line="2037" pos:column="18"/></operator> <name><name pos:line="2037" pos:column="19">sub_req<pos:position pos:line="2037" pos:column="26"/></name><operator pos:line="2037" pos:column="26">-&gt;<pos:position pos:line="2037" pos:column="31"/></operator><name pos:line="2037" pos:column="28">status<pos:position pos:line="2037" pos:column="34"/></name></name></expr>;<pos:position pos:line="2037" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="2038" pos:column="13">ap_destroy_sub_req<pos:position pos:line="2038" pos:column="31"/></name><argument_list pos:line="2038" pos:column="31">(<argument><expr><name pos:line="2038" pos:column="32">sub_req<pos:position pos:line="2038" pos:column="39"/></name></expr></argument>)<pos:position pos:line="2038" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="2038" pos:column="41"/></expr_stmt>
            <goto pos:line="2039" pos:column="13">goto <name pos:line="2039" pos:column="18">return_from_multi<pos:position pos:line="2039" pos:column="35"/></name>;<pos:position pos:line="2039" pos:column="36"/></goto>
        }<pos:position pos:line="2040" pos:column="10"/></block></then></if>
    }<pos:position pos:line="2041" pos:column="6"/></block></then></if>
    <if pos:line="2042" pos:column="5">if <condition pos:line="2042" pos:column="8">(<expr><name><name pos:line="2042" pos:column="9">sub_req<pos:position pos:line="2042" pos:column="16"/></name><operator pos:line="2042" pos:column="16">-&gt;<pos:position pos:line="2042" pos:column="21"/></operator><name pos:line="2042" pos:column="18">args<pos:position pos:line="2042" pos:column="22"/></name></name> <operator pos:line="2042" pos:column="23">==<pos:position pos:line="2042" pos:column="25"/></operator> <name pos:line="2042" pos:column="26">NULL<pos:position pos:line="2042" pos:column="30"/></name></expr>)<pos:position pos:line="2042" pos:column="31"/></condition><then pos:line="2042" pos:column="31"> <block pos:line="2042" pos:column="32">{
        <expr_stmt><expr><name><name pos:line="2043" pos:column="9">sub_req<pos:position pos:line="2043" pos:column="16"/></name><operator pos:line="2043" pos:column="16">-&gt;<pos:position pos:line="2043" pos:column="21"/></operator><name pos:line="2043" pos:column="18">args<pos:position pos:line="2043" pos:column="22"/></name></name> <operator pos:line="2043" pos:column="23">=<pos:position pos:line="2043" pos:column="24"/></operator> <name><name pos:line="2043" pos:column="25">r<pos:position pos:line="2043" pos:column="26"/></name><operator pos:line="2043" pos:column="26">-&gt;<pos:position pos:line="2043" pos:column="31"/></operator><name pos:line="2043" pos:column="28">args<pos:position pos:line="2043" pos:column="32"/></name></name></expr>;<pos:position pos:line="2043" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="2044" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="2046" pos:column="5">/* now do a "fast redirect" ... promotes the sub_req into the main req */</comment>
    <expr_stmt><expr><call><name pos:line="2047" pos:column="5">ap_internal_fast_redirect<pos:position pos:line="2047" pos:column="30"/></name><argument_list pos:line="2047" pos:column="30">(<argument><expr><name pos:line="2047" pos:column="31">sub_req<pos:position pos:line="2047" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="2047" pos:column="40">r<pos:position pos:line="2047" pos:column="41"/></name></expr></argument>)<pos:position pos:line="2047" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="2047" pos:column="43"/></expr_stmt>

    <comment type="block" pos:line="2049" pos:column="5">/* give no advise for time on this subrequest.  Perhaps we
     * should tally the last mtime amoung all variants, and date
     * the most recent, but that could confuse the proxies.
     */</comment>
    <expr_stmt><expr><name><name pos:line="2053" pos:column="5">r<pos:position pos:line="2053" pos:column="6"/></name><operator pos:line="2053" pos:column="6">-&gt;<pos:position pos:line="2053" pos:column="11"/></operator><name pos:line="2053" pos:column="8">mtime<pos:position pos:line="2053" pos:column="13"/></name></name> <operator pos:line="2053" pos:column="14">=<pos:position pos:line="2053" pos:column="15"/></operator> <literal type="number" pos:line="2053" pos:column="16">0<pos:position pos:line="2053" pos:column="17"/></literal></expr>;<pos:position pos:line="2053" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="2055" pos:column="5">/* clean up all but our favorite variant, since that sub_req
     * is now merged into the main request!
     */</comment>
    <expr_stmt><expr><name pos:line="2058" pos:column="5">avail_recs<pos:position pos:line="2058" pos:column="15"/></name> <operator pos:line="2058" pos:column="16">=<pos:position pos:line="2058" pos:column="17"/></operator> <operator pos:line="2058" pos:column="18">(<pos:position pos:line="2058" pos:column="19"/></operator><name pos:line="2058" pos:column="19">var_rec<pos:position pos:line="2058" pos:column="26"/></name> <operator pos:line="2058" pos:column="27">*<pos:position pos:line="2058" pos:column="28"/></operator><operator pos:line="2058" pos:column="28">)<pos:position pos:line="2058" pos:column="29"/></operator> <name><name pos:line="2058" pos:column="30">neg<pos:position pos:line="2058" pos:column="33"/></name><operator pos:line="2058" pos:column="33">-&gt;<pos:position pos:line="2058" pos:column="38"/></operator><name pos:line="2058" pos:column="35">avail_vars<pos:position pos:line="2058" pos:column="45"/></name><operator pos:line="2058" pos:column="45">-&gt;<pos:position pos:line="2058" pos:column="50"/></operator><name pos:line="2058" pos:column="47">elts<pos:position pos:line="2058" pos:column="51"/></name></name></expr>;<pos:position pos:line="2058" pos:column="52"/></expr_stmt>
    <for pos:line="2059" pos:column="5">for <control pos:line="2059" pos:column="9">(<init><expr><name pos:line="2059" pos:column="10">j<pos:position pos:line="2059" pos:column="11"/></name> <operator pos:line="2059" pos:column="12">=<pos:position pos:line="2059" pos:column="13"/></operator> <literal type="number" pos:line="2059" pos:column="14">0<pos:position pos:line="2059" pos:column="15"/></literal></expr>;<pos:position pos:line="2059" pos:column="16"/></init> <condition><expr><name pos:line="2059" pos:column="17">j<pos:position pos:line="2059" pos:column="18"/></name> <operator pos:line="2059" pos:column="19">&lt;<pos:position pos:line="2059" pos:column="23"/></operator> <name><name pos:line="2059" pos:column="21">neg<pos:position pos:line="2059" pos:column="24"/></name><operator pos:line="2059" pos:column="24">-&gt;<pos:position pos:line="2059" pos:column="29"/></operator><name pos:line="2059" pos:column="26">avail_vars<pos:position pos:line="2059" pos:column="36"/></name><operator pos:line="2059" pos:column="36">-&gt;<pos:position pos:line="2059" pos:column="41"/></operator><name pos:line="2059" pos:column="38">nelts<pos:position pos:line="2059" pos:column="43"/></name></name></expr>;<pos:position pos:line="2059" pos:column="44"/></condition> <incr><expr><operator pos:line="2059" pos:column="45">++<pos:position pos:line="2059" pos:column="47"/></operator><name pos:line="2059" pos:column="47">j<pos:position pos:line="2059" pos:column="48"/></name></expr></incr>)<pos:position pos:line="2059" pos:column="49"/></control> <block pos:line="2059" pos:column="50">{
        <decl_stmt><decl><type><name pos:line="2060" pos:column="9">var_rec<pos:position pos:line="2060" pos:column="16"/></name> <modifier pos:line="2060" pos:column="17">*<pos:position pos:line="2060" pos:column="18"/></modifier></type><name pos:line="2060" pos:column="18">variant<pos:position pos:line="2060" pos:column="25"/></name> <init pos:line="2060" pos:column="26">= <expr><operator pos:line="2060" pos:column="28">&amp;<pos:position pos:line="2060" pos:column="33"/></operator><name><name pos:line="2060" pos:column="29">avail_recs<pos:position pos:line="2060" pos:column="39"/></name><index pos:line="2060" pos:column="39">[<expr><name pos:line="2060" pos:column="40">j<pos:position pos:line="2060" pos:column="41"/></name></expr>]<pos:position pos:line="2060" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="2060" pos:column="43"/></decl_stmt>
        <if pos:line="2061" pos:column="9">if <condition pos:line="2061" pos:column="12">(<expr><name pos:line="2061" pos:column="13">variant<pos:position pos:line="2061" pos:column="20"/></name> <operator pos:line="2061" pos:column="21">!=<pos:position pos:line="2061" pos:column="23"/></operator> <name pos:line="2061" pos:column="24">best<pos:position pos:line="2061" pos:column="28"/></name> <operator pos:line="2061" pos:column="29">&amp;&amp;<pos:position pos:line="2061" pos:column="39"/></operator> <name><name pos:line="2061" pos:column="32">variant<pos:position pos:line="2061" pos:column="39"/></name><operator pos:line="2061" pos:column="39">-&gt;<pos:position pos:line="2061" pos:column="44"/></operator><name pos:line="2061" pos:column="41">sub_req<pos:position pos:line="2061" pos:column="48"/></name></name></expr>)<pos:position pos:line="2061" pos:column="49"/></condition><then pos:line="2061" pos:column="49"> <block pos:line="2061" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="2062" pos:column="13">ap_destroy_sub_req<pos:position pos:line="2062" pos:column="31"/></name><argument_list pos:line="2062" pos:column="31">(<argument><expr><name><name pos:line="2062" pos:column="32">variant<pos:position pos:line="2062" pos:column="39"/></name><operator pos:line="2062" pos:column="39">-&gt;<pos:position pos:line="2062" pos:column="44"/></operator><name pos:line="2062" pos:column="41">sub_req<pos:position pos:line="2062" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="2062" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="2062" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="2063" pos:column="10"/></block></then></if>
    }<pos:position pos:line="2064" pos:column="6"/></block></for>
    <return pos:line="2065" pos:column="5">return <expr><name pos:line="2065" pos:column="12">OK<pos:position pos:line="2065" pos:column="14"/></name></expr>;<pos:position pos:line="2065" pos:column="15"/></return>
}<pos:position pos:line="2066" pos:column="2"/></block></function>

<comment type="block" format="doxygen" pos:line="2068" pos:column="1">/**********************************************************************
 * There is a problem with content-encoding, as some clients send and
 * expect an x- token (e.g. x-gzip) while others expect the plain token
 * (i.e. gzip). To try and deal with this as best as possible we do
 * the following: if the client sent an Accept-Encoding header and it
 * contains a plain token corresponding to the content encoding of the
 * response, then set content encoding using the plain token. Else if
 * the A-E header contains the x- token use the x- token in the C-E
 * header. Else don't do anything.
 *
 * Note that if no A-E header was sent, or it does not contain a token
 * compatible with the final content encoding, then the token in the
 * C-E header will be whatever was specified in the AddEncoding
 * directive.
 */</comment>
<function><specifier pos:line="2083" pos:column="1">static<pos:position pos:line="2083" pos:column="7"/></specifier> <type><name pos:line="2083" pos:column="8">int<pos:position pos:line="2083" pos:column="11"/></name></type> <name pos:line="2083" pos:column="12">fix_encoding<pos:position pos:line="2083" pos:column="24"/></name><parameter_list pos:line="2083" pos:column="24">(<parameter><decl><type><name pos:line="2083" pos:column="25">request_rec<pos:position pos:line="2083" pos:column="36"/></name> <modifier pos:line="2083" pos:column="37">*<pos:position pos:line="2083" pos:column="38"/></modifier></type><name pos:line="2083" pos:column="38">r<pos:position pos:line="2083" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2083" pos:column="40"/></parameter_list>
<block pos:line="2084" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="2085" pos:column="5">const<pos:position pos:line="2085" pos:column="10"/></specifier> <name pos:line="2085" pos:column="11">char<pos:position pos:line="2085" pos:column="15"/></name> <modifier pos:line="2085" pos:column="16">*<pos:position pos:line="2085" pos:column="17"/></modifier></type><name pos:line="2085" pos:column="17">enc<pos:position pos:line="2085" pos:column="20"/></name> <init pos:line="2085" pos:column="21">= <expr><name><name pos:line="2085" pos:column="23">r<pos:position pos:line="2085" pos:column="24"/></name><operator pos:line="2085" pos:column="24">-&gt;<pos:position pos:line="2085" pos:column="29"/></operator><name pos:line="2085" pos:column="26">content_encoding<pos:position pos:line="2085" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="2085" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="2086" pos:column="5">char<pos:position pos:line="2086" pos:column="9"/></name> <modifier pos:line="2086" pos:column="10">*<pos:position pos:line="2086" pos:column="11"/></modifier></type><name pos:line="2086" pos:column="11">x_enc<pos:position pos:line="2086" pos:column="16"/></name> <init pos:line="2086" pos:column="17">= <expr><name pos:line="2086" pos:column="19">NULL<pos:position pos:line="2086" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="2086" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="2087" pos:column="5">apr_array_header_t<pos:position pos:line="2087" pos:column="23"/></name> <modifier pos:line="2087" pos:column="24">*<pos:position pos:line="2087" pos:column="25"/></modifier></type><name pos:line="2087" pos:column="25">accept_encodings<pos:position pos:line="2087" pos:column="41"/></name></decl>;<pos:position pos:line="2087" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="2088" pos:column="5">accept_rec<pos:position pos:line="2088" pos:column="15"/></name> <modifier pos:line="2088" pos:column="16">*<pos:position pos:line="2088" pos:column="17"/></modifier></type><name pos:line="2088" pos:column="17">accept_recs<pos:position pos:line="2088" pos:column="28"/></name></decl>;<pos:position pos:line="2088" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="2089" pos:column="5">int<pos:position pos:line="2089" pos:column="8"/></name></type> <name pos:line="2089" pos:column="9">i<pos:position pos:line="2089" pos:column="10"/></name></decl>;<pos:position pos:line="2089" pos:column="11"/></decl_stmt>

    <if pos:line="2091" pos:column="5">if <condition pos:line="2091" pos:column="8">(<expr><operator pos:line="2091" pos:column="9">!<pos:position pos:line="2091" pos:column="10"/></operator><name pos:line="2091" pos:column="10">enc<pos:position pos:line="2091" pos:column="13"/></name> <operator pos:line="2091" pos:column="14">||<pos:position pos:line="2091" pos:column="16"/></operator> <operator pos:line="2091" pos:column="17">!<pos:position pos:line="2091" pos:column="18"/></operator><operator pos:line="2091" pos:column="18">*<pos:position pos:line="2091" pos:column="19"/></operator><name pos:line="2091" pos:column="19">enc<pos:position pos:line="2091" pos:column="22"/></name></expr>)<pos:position pos:line="2091" pos:column="23"/></condition><then pos:line="2091" pos:column="23"> <block pos:line="2091" pos:column="24">{
        <return pos:line="2092" pos:column="9">return <expr><name pos:line="2092" pos:column="16">DECLINED<pos:position pos:line="2092" pos:column="24"/></name></expr>;<pos:position pos:line="2092" pos:column="25"/></return>
    }<pos:position pos:line="2093" pos:column="6"/></block></then></if>

    <if pos:line="2095" pos:column="5">if <condition pos:line="2095" pos:column="8">(<expr><name><name pos:line="2095" pos:column="9">enc<pos:position pos:line="2095" pos:column="12"/></name><index pos:line="2095" pos:column="12">[<expr><literal type="number" pos:line="2095" pos:column="13">0<pos:position pos:line="2095" pos:column="14"/></literal></expr>]<pos:position pos:line="2095" pos:column="15"/></index></name> <operator pos:line="2095" pos:column="16">==<pos:position pos:line="2095" pos:column="18"/></operator> <literal type="char" pos:line="2095" pos:column="19">'x'<pos:position pos:line="2095" pos:column="22"/></literal> <operator pos:line="2095" pos:column="23">&amp;&amp;<pos:position pos:line="2095" pos:column="33"/></operator> <name><name pos:line="2095" pos:column="26">enc<pos:position pos:line="2095" pos:column="29"/></name><index pos:line="2095" pos:column="29">[<expr><literal type="number" pos:line="2095" pos:column="30">1<pos:position pos:line="2095" pos:column="31"/></literal></expr>]<pos:position pos:line="2095" pos:column="32"/></index></name> <operator pos:line="2095" pos:column="33">==<pos:position pos:line="2095" pos:column="35"/></operator> <literal type="char" pos:line="2095" pos:column="36">'-'<pos:position pos:line="2095" pos:column="39"/></literal></expr>)<pos:position pos:line="2095" pos:column="40"/></condition><then pos:line="2095" pos:column="40"> <block pos:line="2095" pos:column="41">{
        <expr_stmt><expr><name pos:line="2096" pos:column="9">enc<pos:position pos:line="2096" pos:column="12"/></name> <operator pos:line="2096" pos:column="13">+=<pos:position pos:line="2096" pos:column="15"/></operator> <literal type="number" pos:line="2096" pos:column="16">2<pos:position pos:line="2096" pos:column="17"/></literal></expr>;<pos:position pos:line="2096" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="2097" pos:column="6"/></block></then></if>

    <if pos:line="2099" pos:column="5">if <condition pos:line="2099" pos:column="8">(<expr><operator pos:line="2099" pos:column="9">(<pos:position pos:line="2099" pos:column="10"/></operator><name pos:line="2099" pos:column="10">accept_encodings<pos:position pos:line="2099" pos:column="26"/></name> <operator pos:line="2099" pos:column="27">=<pos:position pos:line="2099" pos:column="28"/></operator> <call><name pos:line="2099" pos:column="29">do_header_line<pos:position pos:line="2099" pos:column="43"/></name><argument_list pos:line="2099" pos:column="43">(<argument><expr><name><name pos:line="2099" pos:column="44">r<pos:position pos:line="2099" pos:column="45"/></name><operator pos:line="2099" pos:column="45">-&gt;<pos:position pos:line="2099" pos:column="50"/></operator><name pos:line="2099" pos:column="47">pool<pos:position pos:line="2099" pos:column="51"/></name></name></expr></argument>,
             <argument><expr><call><name pos:line="2100" pos:column="14">apr_table_get<pos:position pos:line="2100" pos:column="27"/></name><argument_list pos:line="2100" pos:column="27">(<argument><expr><name><name pos:line="2100" pos:column="28">r<pos:position pos:line="2100" pos:column="29"/></name><operator pos:line="2100" pos:column="29">-&gt;<pos:position pos:line="2100" pos:column="34"/></operator><name pos:line="2100" pos:column="31">headers_in<pos:position pos:line="2100" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="2100" pos:column="43">"Accept-Encoding"<pos:position pos:line="2100" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="2100" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="2100" pos:column="62"/></argument_list></call><operator pos:line="2100" pos:column="62">)<pos:position pos:line="2100" pos:column="63"/></operator> <operator pos:line="2100" pos:column="64">==<pos:position pos:line="2100" pos:column="66"/></operator> <name pos:line="2100" pos:column="67">NULL<pos:position pos:line="2100" pos:column="71"/></name></expr>)<pos:position pos:line="2100" pos:column="72"/></condition><then pos:line="2100" pos:column="72"> <block pos:line="2100" pos:column="73">{
        <return pos:line="2101" pos:column="9">return <expr><name pos:line="2101" pos:column="16">DECLINED<pos:position pos:line="2101" pos:column="24"/></name></expr>;<pos:position pos:line="2101" pos:column="25"/></return>
    }<pos:position pos:line="2102" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="2104" pos:column="5">accept_recs<pos:position pos:line="2104" pos:column="16"/></name> <operator pos:line="2104" pos:column="17">=<pos:position pos:line="2104" pos:column="18"/></operator> <operator pos:line="2104" pos:column="19">(<pos:position pos:line="2104" pos:column="20"/></operator><name pos:line="2104" pos:column="20">accept_rec<pos:position pos:line="2104" pos:column="30"/></name> <operator pos:line="2104" pos:column="31">*<pos:position pos:line="2104" pos:column="32"/></operator><operator pos:line="2104" pos:column="32">)<pos:position pos:line="2104" pos:column="33"/></operator> <name><name pos:line="2104" pos:column="34">accept_encodings<pos:position pos:line="2104" pos:column="50"/></name><operator pos:line="2104" pos:column="50">-&gt;<pos:position pos:line="2104" pos:column="55"/></operator><name pos:line="2104" pos:column="52">elts<pos:position pos:line="2104" pos:column="56"/></name></name></expr>;<pos:position pos:line="2104" pos:column="57"/></expr_stmt>

    <for pos:line="2106" pos:column="5">for <control pos:line="2106" pos:column="9">(<init><expr><name pos:line="2106" pos:column="10">i<pos:position pos:line="2106" pos:column="11"/></name> <operator pos:line="2106" pos:column="12">=<pos:position pos:line="2106" pos:column="13"/></operator> <literal type="number" pos:line="2106" pos:column="14">0<pos:position pos:line="2106" pos:column="15"/></literal></expr>;<pos:position pos:line="2106" pos:column="16"/></init> <condition><expr><name pos:line="2106" pos:column="17">i<pos:position pos:line="2106" pos:column="18"/></name> <operator pos:line="2106" pos:column="19">&lt;<pos:position pos:line="2106" pos:column="23"/></operator> <name><name pos:line="2106" pos:column="21">accept_encodings<pos:position pos:line="2106" pos:column="37"/></name><operator pos:line="2106" pos:column="37">-&gt;<pos:position pos:line="2106" pos:column="42"/></operator><name pos:line="2106" pos:column="39">nelts<pos:position pos:line="2106" pos:column="44"/></name></name></expr>;<pos:position pos:line="2106" pos:column="45"/></condition> <incr><expr><operator pos:line="2106" pos:column="46">++<pos:position pos:line="2106" pos:column="48"/></operator><name pos:line="2106" pos:column="48">i<pos:position pos:line="2106" pos:column="49"/></name></expr></incr>)<pos:position pos:line="2106" pos:column="50"/></control> <block pos:line="2106" pos:column="51">{
        <decl_stmt><decl><type><name pos:line="2107" pos:column="9">char<pos:position pos:line="2107" pos:column="13"/></name> <modifier pos:line="2107" pos:column="14">*<pos:position pos:line="2107" pos:column="15"/></modifier></type><name pos:line="2107" pos:column="15">name<pos:position pos:line="2107" pos:column="19"/></name> <init pos:line="2107" pos:column="20">= <expr><name><name pos:line="2107" pos:column="22">accept_recs<pos:position pos:line="2107" pos:column="33"/></name><index pos:line="2107" pos:column="33">[<expr><name pos:line="2107" pos:column="34">i<pos:position pos:line="2107" pos:column="35"/></name></expr>]<pos:position pos:line="2107" pos:column="36"/></index></name><operator pos:line="2107" pos:column="36">.<pos:position pos:line="2107" pos:column="37"/></operator><name pos:line="2107" pos:column="37">name<pos:position pos:line="2107" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="2107" pos:column="42"/></decl_stmt>

        <if pos:line="2109" pos:column="9">if <condition pos:line="2109" pos:column="12">(<expr><operator pos:line="2109" pos:column="13">!<pos:position pos:line="2109" pos:column="14"/></operator><call><name pos:line="2109" pos:column="14">strcmp<pos:position pos:line="2109" pos:column="20"/></name><argument_list pos:line="2109" pos:column="20">(<argument><expr><name pos:line="2109" pos:column="21">name<pos:position pos:line="2109" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="2109" pos:column="27">enc<pos:position pos:line="2109" pos:column="30"/></name></expr></argument>)<pos:position pos:line="2109" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="2109" pos:column="32"/></condition><then pos:line="2109" pos:column="32"> <block pos:line="2109" pos:column="33">{
            <expr_stmt><expr><name><name pos:line="2110" pos:column="13">r<pos:position pos:line="2110" pos:column="14"/></name><operator pos:line="2110" pos:column="14">-&gt;<pos:position pos:line="2110" pos:column="19"/></operator><name pos:line="2110" pos:column="16">content_encoding<pos:position pos:line="2110" pos:column="32"/></name></name> <operator pos:line="2110" pos:column="33">=<pos:position pos:line="2110" pos:column="34"/></operator> <name pos:line="2110" pos:column="35">name<pos:position pos:line="2110" pos:column="39"/></name></expr>;<pos:position pos:line="2110" pos:column="40"/></expr_stmt>
            <return pos:line="2111" pos:column="13">return <expr><name pos:line="2111" pos:column="20">OK<pos:position pos:line="2111" pos:column="22"/></name></expr>;<pos:position pos:line="2111" pos:column="23"/></return>
        }<pos:position pos:line="2112" pos:column="10"/></block></then></if>

        <if pos:line="2114" pos:column="9">if <condition pos:line="2114" pos:column="12">(<expr><name><name pos:line="2114" pos:column="13">name<pos:position pos:line="2114" pos:column="17"/></name><index pos:line="2114" pos:column="17">[<expr><literal type="number" pos:line="2114" pos:column="18">0<pos:position pos:line="2114" pos:column="19"/></literal></expr>]<pos:position pos:line="2114" pos:column="20"/></index></name> <operator pos:line="2114" pos:column="21">==<pos:position pos:line="2114" pos:column="23"/></operator> <literal type="char" pos:line="2114" pos:column="24">'x'<pos:position pos:line="2114" pos:column="27"/></literal> <operator pos:line="2114" pos:column="28">&amp;&amp;<pos:position pos:line="2114" pos:column="38"/></operator> <name><name pos:line="2114" pos:column="31">name<pos:position pos:line="2114" pos:column="35"/></name><index pos:line="2114" pos:column="35">[<expr><literal type="number" pos:line="2114" pos:column="36">1<pos:position pos:line="2114" pos:column="37"/></literal></expr>]<pos:position pos:line="2114" pos:column="38"/></index></name> <operator pos:line="2114" pos:column="39">==<pos:position pos:line="2114" pos:column="41"/></operator> <literal type="char" pos:line="2114" pos:column="42">'-'<pos:position pos:line="2114" pos:column="45"/></literal> <operator pos:line="2114" pos:column="46">&amp;&amp;<pos:position pos:line="2114" pos:column="56"/></operator> <operator pos:line="2114" pos:column="49">!<pos:position pos:line="2114" pos:column="50"/></operator><call><name pos:line="2114" pos:column="50">strcmp<pos:position pos:line="2114" pos:column="56"/></name><argument_list pos:line="2114" pos:column="56">(<argument><expr><name pos:line="2114" pos:column="57">name<pos:position pos:line="2114" pos:column="61"/></name><operator pos:line="2114" pos:column="61">+<pos:position pos:line="2114" pos:column="62"/></operator><literal type="number" pos:line="2114" pos:column="62">2<pos:position pos:line="2114" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="2114" pos:column="65">enc<pos:position pos:line="2114" pos:column="68"/></name></expr></argument>)<pos:position pos:line="2114" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="2114" pos:column="70"/></condition><then pos:line="2114" pos:column="70"> <block pos:line="2114" pos:column="71">{
            <expr_stmt><expr><name pos:line="2115" pos:column="13">x_enc<pos:position pos:line="2115" pos:column="18"/></name> <operator pos:line="2115" pos:column="19">=<pos:position pos:line="2115" pos:column="20"/></operator> <name pos:line="2115" pos:column="21">name<pos:position pos:line="2115" pos:column="25"/></name></expr>;<pos:position pos:line="2115" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="2116" pos:column="10"/></block></then></if>
    }<pos:position pos:line="2117" pos:column="6"/></block></for>

    <if pos:line="2119" pos:column="5">if <condition pos:line="2119" pos:column="8">(<expr><name pos:line="2119" pos:column="9">x_enc<pos:position pos:line="2119" pos:column="14"/></name></expr>)<pos:position pos:line="2119" pos:column="15"/></condition><then pos:line="2119" pos:column="15"> <block pos:line="2119" pos:column="16">{
        <expr_stmt><expr><name><name pos:line="2120" pos:column="9">r<pos:position pos:line="2120" pos:column="10"/></name><operator pos:line="2120" pos:column="10">-&gt;<pos:position pos:line="2120" pos:column="15"/></operator><name pos:line="2120" pos:column="12">content_encoding<pos:position pos:line="2120" pos:column="28"/></name></name> <operator pos:line="2120" pos:column="29">=<pos:position pos:line="2120" pos:column="30"/></operator> <name pos:line="2120" pos:column="31">x_enc<pos:position pos:line="2120" pos:column="36"/></name></expr>;<pos:position pos:line="2120" pos:column="37"/></expr_stmt>
        <return pos:line="2121" pos:column="9">return <expr><name pos:line="2121" pos:column="16">OK<pos:position pos:line="2121" pos:column="18"/></name></expr>;<pos:position pos:line="2121" pos:column="19"/></return>
    }<pos:position pos:line="2122" pos:column="6"/></block></then></if>

    <return pos:line="2124" pos:column="5">return <expr><name pos:line="2124" pos:column="12">DECLINED<pos:position pos:line="2124" pos:column="20"/></name></expr>;<pos:position pos:line="2124" pos:column="21"/></return>
}<pos:position pos:line="2125" pos:column="2"/></block></function>

<function><specifier pos:line="2127" pos:column="1">static<pos:position pos:line="2127" pos:column="7"/></specifier> <type><name pos:line="2127" pos:column="8">void<pos:position pos:line="2127" pos:column="12"/></name></type> <name pos:line="2127" pos:column="13">register_hooks<pos:position pos:line="2127" pos:column="27"/></name><parameter_list pos:line="2127" pos:column="27">(<parameter><decl><type><name pos:line="2127" pos:column="28">apr_pool_t<pos:position pos:line="2127" pos:column="38"/></name> <modifier pos:line="2127" pos:column="39">*<pos:position pos:line="2127" pos:column="40"/></modifier></type><name pos:line="2127" pos:column="40">p<pos:position pos:line="2127" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2127" pos:column="42"/></parameter_list>
<block pos:line="2128" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="2129" pos:column="5">ap_hook_fixups<pos:position pos:line="2129" pos:column="19"/></name><argument_list pos:line="2129" pos:column="19">(<argument><expr><name pos:line="2129" pos:column="20">fix_encoding<pos:position pos:line="2129" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="2129" pos:column="33">NULL<pos:position pos:line="2129" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="2129" pos:column="38">NULL<pos:position pos:line="2129" pos:column="42"/></name></expr></argument>,<argument><expr><name pos:line="2129" pos:column="43">APR_HOOK_MIDDLE<pos:position pos:line="2129" pos:column="58"/></name></expr></argument>)<pos:position pos:line="2129" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="2129" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="2130" pos:column="5">ap_hook_type_checker<pos:position pos:line="2130" pos:column="25"/></name><argument_list pos:line="2130" pos:column="25">(<argument><expr><name pos:line="2130" pos:column="26">handle_multi<pos:position pos:line="2130" pos:column="38"/></name></expr></argument>,<argument><expr><name pos:line="2130" pos:column="39">NULL<pos:position pos:line="2130" pos:column="43"/></name></expr></argument>,<argument><expr><name pos:line="2130" pos:column="44">NULL<pos:position pos:line="2130" pos:column="48"/></name></expr></argument>,<argument><expr><name pos:line="2130" pos:column="49">APR_HOOK_FIRST<pos:position pos:line="2130" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2130" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2130" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="2131" pos:column="5">ap_hook_handler<pos:position pos:line="2131" pos:column="20"/></name><argument_list pos:line="2131" pos:column="20">(<argument><expr><name pos:line="2131" pos:column="21">handle_map_file<pos:position pos:line="2131" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="2131" pos:column="37">NULL<pos:position pos:line="2131" pos:column="41"/></name></expr></argument>,<argument><expr><name pos:line="2131" pos:column="42">NULL<pos:position pos:line="2131" pos:column="46"/></name></expr></argument>,<argument><expr><name pos:line="2131" pos:column="47">APR_HOOK_MIDDLE<pos:position pos:line="2131" pos:column="62"/></name></expr></argument>)<pos:position pos:line="2131" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="2131" pos:column="64"/></expr_stmt>
}<pos:position pos:line="2132" pos:column="2"/></block></function>

<expr_stmt><expr><call><name pos:line="2134" pos:column="1">AP_DECLARE_MODULE<pos:position pos:line="2134" pos:column="18"/></name><argument_list pos:line="2134" pos:column="18">(<argument><expr><name pos:line="2134" pos:column="19">negotiation<pos:position pos:line="2134" pos:column="30"/></name></expr></argument>)<pos:position pos:line="2134" pos:column="31"/></argument_list></call> <operator pos:line="2134" pos:column="32">=<pos:position pos:line="2134" pos:column="33"/></operator>
<block pos:line="2135" pos:column="1">{
    <expr><name pos:line="2136" pos:column="5">STANDARD20_MODULE_STUFF<pos:position pos:line="2136" pos:column="28"/></name></expr>,
    <expr><name pos:line="2137" pos:column="5">create_neg_dir_config<pos:position pos:line="2137" pos:column="26"/></name></expr>,      <comment type="block" pos:line="2137" pos:column="33">/* dir config creator */</comment>
    <expr><name pos:line="2138" pos:column="5">merge_neg_dir_configs<pos:position pos:line="2138" pos:column="26"/></name></expr>,      <comment type="block" pos:line="2138" pos:column="33">/* dir merger --- default is to override */</comment>
    <expr><name pos:line="2139" pos:column="5">NULL<pos:position pos:line="2139" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="2139" pos:column="33">/* server config */</comment>
    <expr><name pos:line="2140" pos:column="5">NULL<pos:position pos:line="2140" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="2140" pos:column="33">/* merge server config */</comment>
    <expr><name pos:line="2141" pos:column="5">negotiation_cmds<pos:position pos:line="2141" pos:column="21"/></name></expr>,           <comment type="block" pos:line="2141" pos:column="33">/* command apr_table_t */</comment>
    <expr><name pos:line="2142" pos:column="5">register_hooks<pos:position pos:line="2142" pos:column="19"/></name></expr>              <comment type="block" pos:line="2142" pos:column="33">/* register hooks */</comment>
}<pos:position pos:line="2143" pos:column="2"/></block></expr></expr_stmt></block></while></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_279_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_propdb_define_namespaces<pos:position pos:line="1" pos:column="48"/></name><parameter_list pos:line="1" pos:column="48">(<parameter><decl><type><name pos:line="1" pos:column="49">dav_db<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">db<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">dav_xmlns_info<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">xi<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">ns<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">uri<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name><name pos:line="4" pos:column="23">db<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">ns_table<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">.<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="36">buf<pos:position pos:line="4" pos:column="39"/></name></name> <operator pos:line="4" pos:column="40">+<pos:position pos:line="4" pos:column="41"/></operator> <sizeof pos:line="4" pos:column="42">sizeof<argument_list pos:line="4" pos:column="48">(<argument><expr><name pos:line="4" pos:column="49">dav_propdb_metadata<pos:position pos:line="4" pos:column="68"/></name></expr></argument>)<pos:position pos:line="4" pos:column="69"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="4" pos:column="70"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* within the prop values, we use "ns%d" for prefixes... register them */</comment>
    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">ns<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr>;<pos:position pos:line="7" pos:column="17"/></init> <condition><expr><name pos:line="7" pos:column="18">ns<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">&lt;<pos:position pos:line="7" pos:column="25"/></operator> <name><name pos:line="7" pos:column="23">db<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">ns_count<pos:position pos:line="7" pos:column="35"/></name></name></expr>;<pos:position pos:line="7" pos:column="36"/></condition> <incr><expr><operator pos:line="7" pos:column="37">++<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">ns<pos:position pos:line="7" pos:column="41"/></name></expr><operator pos:line="7" pos:column="41">,<pos:position pos:line="7" pos:column="42"/></operator> <expr><name pos:line="7" pos:column="43">uri<pos:position pos:line="7" pos:column="46"/></name> <operator pos:line="7" pos:column="47">+=<pos:position pos:line="7" pos:column="49"/></operator> <call><name pos:line="7" pos:column="50">strlen<pos:position pos:line="7" pos:column="56"/></name><argument_list pos:line="7" pos:column="56">(<argument><expr><name pos:line="7" pos:column="57">uri<pos:position pos:line="7" pos:column="60"/></name></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call> <operator pos:line="7" pos:column="62">+<pos:position pos:line="7" pos:column="63"/></operator> <literal type="number" pos:line="7" pos:column="64">1<pos:position pos:line="7" pos:column="65"/></literal></expr></incr>)<pos:position pos:line="7" pos:column="66"/></control> <block pos:line="7" pos:column="67">{

        <comment type="block" pos:line="9" pos:column="9">/* Empty URIs signify the empty namespace. These do not get a
           namespace prefix. when we generate the value, we will simply
           leave off the prefix, which is defined by mod_dav to be the
           empty namespace. */</comment>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">uri<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">==<pos:position pos:line="13" pos:column="20"/></operator> <literal type="char" pos:line="13" pos:column="21">'\0'<pos:position pos:line="13" pos:column="25"/></literal></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26">
            <block type="pseudo"><continue pos:line="14" pos:column="13">continue;<pos:position pos:line="14" pos:column="22"/></continue></block></then></if>

        <comment type="block" pos:line="16" pos:column="9">/* ns_table.buf can move, so copy its value (we want the values to
           last as long as the provided dav_xmlns_info). */</comment>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">dav_xmlns_add<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">xi<pos:position pos:line="18" pos:column="25"/></name></expr></argument>,
                      <argument><expr><call><name pos:line="19" pos:column="23">apr_psprintf<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name><name pos:line="19" pos:column="36">xi<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">-&gt;<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="40">pool<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="46">"ns%d"<pos:position pos:line="19" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="54">ns<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr></argument>,
                      <argument><expr><call><name pos:line="20" pos:column="23">apr_pstrdup<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><name><name pos:line="20" pos:column="35">xi<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">pool<pos:position pos:line="20" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">uri<pos:position pos:line="20" pos:column="48"/></name></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></for>

    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">NULL<pos:position pos:line="23" pos:column="16"/></name></expr>;<pos:position pos:line="23" pos:column="17"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

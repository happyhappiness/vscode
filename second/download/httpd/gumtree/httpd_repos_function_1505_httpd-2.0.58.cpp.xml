<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1505_httpd-2.0.58.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">serialize_table<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">cache_header_tbl_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier><modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">obj<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, 
                                    <parameter><decl><type><name pos:line="2" pos:column="37">apr_ssize_t<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">nelts<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, 
                                    <parameter><decl><type><name pos:line="3" pos:column="37">apr_table_t<pos:position pos:line="3" pos:column="48"/></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type><name pos:line="3" pos:column="50">table<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">apr_array_header_t<pos:position pos:line="5" pos:column="29"/></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">elts_arr<pos:position pos:line="5" pos:column="39"/></name> <init pos:line="5" pos:column="40">= <expr><call><name pos:line="5" pos:column="42">apr_table_elts<pos:position pos:line="5" pos:column="56"/></name><argument_list pos:line="5" pos:column="56">(<argument><expr><name pos:line="5" pos:column="57">table<pos:position pos:line="5" pos:column="62"/></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_table_entry_t<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">elts<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><operator pos:line="6" pos:column="31">(<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="32">apr_table_entry_t<pos:position pos:line="6" pos:column="49"/></name> <operator pos:line="6" pos:column="50">*<pos:position pos:line="6" pos:column="51"/></operator><operator pos:line="6" pos:column="51">)<pos:position pos:line="6" pos:column="52"/></operator> <name><name pos:line="6" pos:column="53">elts_arr<pos:position pos:line="6" pos:column="61"/></name><operator pos:line="6" pos:column="61">-&gt;<pos:position pos:line="6" pos:column="66"/></operator><name pos:line="6" pos:column="63">elts<pos:position pos:line="6" pos:column="67"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_ssize_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">i<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">len<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">idx<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">buf<pos:position pos:line="10" pos:column="14"/></name></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>
   
    <expr_stmt><expr><operator pos:line="12" pos:column="5">*<pos:position pos:line="12" pos:column="6"/></operator><name pos:line="12" pos:column="6">nelts<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <name><name pos:line="12" pos:column="14">elts_arr<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">nelts<pos:position pos:line="12" pos:column="29"/></name></name></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">nelts<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr> )<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22"> <block pos:line="13" pos:column="23">{
        <expr_stmt><expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">obj<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">NULL<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">APR_SUCCESS<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="17" pos:column="5">*<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">obj<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">malloc<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><sizeof pos:line="17" pos:column="19">sizeof<argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">cache_header_tbl_t<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></sizeof> <operator pos:line="17" pos:column="46">*<pos:position pos:line="17" pos:column="47"/></operator> <name><name pos:line="17" pos:column="48">elts_arr<pos:position pos:line="17" pos:column="56"/></name><operator pos:line="17" pos:column="56">-&gt;<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="58">nelts<pos:position pos:line="17" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">NULL<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">==<pos:position pos:line="18" pos:column="16"/></operator> <operator pos:line="18" pos:column="17">*<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">obj<pos:position pos:line="18" pos:column="21"/></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22"> <block pos:line="18" pos:column="23">{
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">APR_ENOMEM<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init><expr><name pos:line="21" pos:column="10">i<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>;<pos:position pos:line="21" pos:column="16"/></init> <condition><expr><name pos:line="21" pos:column="17">i<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">&lt;<pos:position pos:line="21" pos:column="23"/></operator> <name><name pos:line="21" pos:column="21">elts_arr<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">nelts<pos:position pos:line="21" pos:column="36"/></name></name></expr>;<pos:position pos:line="21" pos:column="37"/></condition> <incr><expr><operator pos:line="21" pos:column="38">++<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="40">i<pos:position pos:line="21" pos:column="41"/></name></expr></incr>)<pos:position pos:line="21" pos:column="42"/></control> <block pos:line="21" pos:column="43">{
        <expr_stmt><expr><name pos:line="22" pos:column="9">len<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">+=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">strlen<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name><name pos:line="22" pos:column="23">elts<pos:position pos:line="22" pos:column="27"/></name><index pos:line="22" pos:column="27">[<expr><name pos:line="22" pos:column="28">i<pos:position pos:line="22" pos:column="29"/></name></expr>]<pos:position pos:line="22" pos:column="30"/></index></name><operator pos:line="22" pos:column="30">.<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">key<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">len<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">+=<pos:position pos:line="23" pos:column="15"/></operator> <call><name pos:line="23" pos:column="16">strlen<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name><name pos:line="23" pos:column="23">elts<pos:position pos:line="23" pos:column="27"/></name><index pos:line="23" pos:column="27">[<expr><name pos:line="23" pos:column="28">i<pos:position pos:line="23" pos:column="29"/></name></expr>]<pos:position pos:line="23" pos:column="30"/></index></name><operator pos:line="23" pos:column="30">.<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">val<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">len<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">+=<pos:position pos:line="24" pos:column="15"/></operator> <literal type="number" pos:line="24" pos:column="16">2<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></expr_stmt>  <comment type="block" pos:line="24" pos:column="20">/* Extra space for NULL string terminator for key and val */</comment>
    }<pos:position pos:line="25" pos:column="6"/></block></for>

    <comment type="block" pos:line="27" pos:column="5">/* Transfer the headers into a contiguous memory block */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">buf<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <call><name pos:line="28" pos:column="11">malloc<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">len<pos:position pos:line="28" pos:column="21"/></name></expr></argument>)<pos:position pos:line="28" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">buf<pos:position pos:line="29" pos:column="13"/></name></expr>)<pos:position pos:line="29" pos:column="14"/></condition><then pos:line="29" pos:column="14"> <block pos:line="29" pos:column="15">{
        <expr_stmt><expr><operator pos:line="30" pos:column="9">*<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">obj<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <name pos:line="30" pos:column="16">NULL<pos:position pos:line="30" pos:column="20"/></name></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">APR_ENOMEM<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <for pos:line="34" pos:column="5">for <control pos:line="34" pos:column="9">(<init><expr><name pos:line="34" pos:column="10">i<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <literal type="number" pos:line="34" pos:column="14">0<pos:position pos:line="34" pos:column="15"/></literal></expr>;<pos:position pos:line="34" pos:column="16"/></init> <condition><expr><name pos:line="34" pos:column="17">i<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">&lt;<pos:position pos:line="34" pos:column="23"/></operator> <operator pos:line="34" pos:column="21">*<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">nelts<pos:position pos:line="34" pos:column="27"/></name></expr>;<pos:position pos:line="34" pos:column="28"/></condition> <incr><expr><operator pos:line="34" pos:column="29">++<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="31">i<pos:position pos:line="34" pos:column="32"/></name></expr></incr>)<pos:position pos:line="34" pos:column="33"/></control> <block pos:line="34" pos:column="34">{
        <expr_stmt><expr><operator pos:line="35" pos:column="9">(<pos:position pos:line="35" pos:column="10"/></operator><operator pos:line="35" pos:column="10">*<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">obj<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">)<pos:position pos:line="35" pos:column="15"/></operator><index pos:line="35" pos:column="15">[<expr><name pos:line="35" pos:column="16">i<pos:position pos:line="35" pos:column="17"/></name></expr>]<pos:position pos:line="35" pos:column="18"/></index><operator pos:line="35" pos:column="18">.<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="19">hdr<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <operator pos:line="35" pos:column="25">&amp;<pos:position pos:line="35" pos:column="30"/></operator><name><name pos:line="35" pos:column="26">buf<pos:position pos:line="35" pos:column="29"/></name><index pos:line="35" pos:column="29">[<expr><name pos:line="35" pos:column="30">idx<pos:position pos:line="35" pos:column="33"/></name></expr>]<pos:position pos:line="35" pos:column="34"/></index></name></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">len<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <call><name pos:line="36" pos:column="15">strlen<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name><name pos:line="36" pos:column="22">elts<pos:position pos:line="36" pos:column="26"/></name><index pos:line="36" pos:column="26">[<expr><name pos:line="36" pos:column="27">i<pos:position pos:line="36" pos:column="28"/></name></expr>]<pos:position pos:line="36" pos:column="29"/></index></name><operator pos:line="36" pos:column="29">.<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="30">key<pos:position pos:line="36" pos:column="33"/></name></expr></argument>)<pos:position pos:line="36" pos:column="34"/></argument_list></call> <operator pos:line="36" pos:column="35">+<pos:position pos:line="36" pos:column="36"/></operator> <literal type="number" pos:line="36" pos:column="37">1<pos:position pos:line="36" pos:column="38"/></literal></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>              <comment type="block" pos:line="36" pos:column="53">/* Include NULL terminator */</comment>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">memcpy<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><operator pos:line="37" pos:column="16">&amp;<pos:position pos:line="37" pos:column="21"/></operator><name><name pos:line="37" pos:column="17">buf<pos:position pos:line="37" pos:column="20"/></name><index pos:line="37" pos:column="20">[<expr><name pos:line="37" pos:column="21">idx<pos:position pos:line="37" pos:column="24"/></name></expr>]<pos:position pos:line="37" pos:column="25"/></index></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="27">elts<pos:position pos:line="37" pos:column="31"/></name><index pos:line="37" pos:column="31">[<expr><name pos:line="37" pos:column="32">i<pos:position pos:line="37" pos:column="33"/></name></expr>]<pos:position pos:line="37" pos:column="34"/></index></name><operator pos:line="37" pos:column="34">.<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="35">key<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="40">len<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="38" pos:column="9">idx<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">+=<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">len<pos:position pos:line="38" pos:column="17"/></name></expr>;<pos:position pos:line="38" pos:column="18"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="40" pos:column="9">(<pos:position pos:line="40" pos:column="10"/></operator><operator pos:line="40" pos:column="10">*<pos:position pos:line="40" pos:column="11"/></operator><name pos:line="40" pos:column="11">obj<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">)<pos:position pos:line="40" pos:column="15"/></operator><index pos:line="40" pos:column="15">[<expr><name pos:line="40" pos:column="16">i<pos:position pos:line="40" pos:column="17"/></name></expr>]<pos:position pos:line="40" pos:column="18"/></index><operator pos:line="40" pos:column="18">.<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="19">val<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <operator pos:line="40" pos:column="25">&amp;<pos:position pos:line="40" pos:column="30"/></operator><name><name pos:line="40" pos:column="26">buf<pos:position pos:line="40" pos:column="29"/></name><index pos:line="40" pos:column="29">[<expr><name pos:line="40" pos:column="30">idx<pos:position pos:line="40" pos:column="33"/></name></expr>]<pos:position pos:line="40" pos:column="34"/></index></name></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="41" pos:column="9">len<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <call><name pos:line="41" pos:column="15">strlen<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name><name pos:line="41" pos:column="22">elts<pos:position pos:line="41" pos:column="26"/></name><index pos:line="41" pos:column="26">[<expr><name pos:line="41" pos:column="27">i<pos:position pos:line="41" pos:column="28"/></name></expr>]<pos:position pos:line="41" pos:column="29"/></index></name><operator pos:line="41" pos:column="29">.<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="30">val<pos:position pos:line="41" pos:column="33"/></name></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call> <operator pos:line="41" pos:column="35">+<pos:position pos:line="41" pos:column="36"/></operator> <literal type="number" pos:line="41" pos:column="37">1<pos:position pos:line="41" pos:column="38"/></literal></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">memcpy<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><operator pos:line="42" pos:column="16">&amp;<pos:position pos:line="42" pos:column="21"/></operator><name><name pos:line="42" pos:column="17">buf<pos:position pos:line="42" pos:column="20"/></name><index pos:line="42" pos:column="20">[<expr><name pos:line="42" pos:column="21">idx<pos:position pos:line="42" pos:column="24"/></name></expr>]<pos:position pos:line="42" pos:column="25"/></index></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="27">elts<pos:position pos:line="42" pos:column="31"/></name><index pos:line="42" pos:column="31">[<expr><name pos:line="42" pos:column="32">i<pos:position pos:line="42" pos:column="33"/></name></expr>]<pos:position pos:line="42" pos:column="34"/></index></name><operator pos:line="42" pos:column="34">.<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="35">val<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="40">len<pos:position pos:line="42" pos:column="43"/></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="43" pos:column="9">idx<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">+=<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">len<pos:position pos:line="43" pos:column="17"/></name></expr>;<pos:position pos:line="43" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></for>
    <return pos:line="45" pos:column="5">return <expr><name pos:line="45" pos:column="12">APR_SUCCESS<pos:position pos:line="45" pos:column="23"/></name></expr>;<pos:position pos:line="45" pos:column="24"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

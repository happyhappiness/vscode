<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1169.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">uri_meets_conditions<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">apr_uri_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">filter<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">int<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">pathlen<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">apr_uri_t<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">url<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <comment type="block" pos:line="5" pos:column="5">/* Scheme, hostname port and local part. The filter URI and the
     * URI we test may have the following shapes:
     *   /&lt;path&gt;
     *   &lt;scheme&gt;[:://&lt;hostname&gt;[:&lt;port&gt;][/&lt;path&gt;]]
     * That is, if there is no scheme then there must be only the path,
     * and we check only the path; if there is a scheme, we check the
     * scheme for equality, and then if present we match the hostname,
     * and then if present match the port, and finally the path if any.
     *
     * Note that this means that "/&lt;path&gt;" only matches local paths,
     * and to match proxied paths one *must* specify the scheme.
     */</comment>

    <comment type="block" pos:line="18" pos:column="5">/* Is the filter is just for a local path or a proxy URI? */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name><name pos:line="19" pos:column="10">filter<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">scheme<pos:position pos:line="19" pos:column="24"/></name></name></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25"> <block pos:line="19" pos:column="26">{
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">url<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">scheme<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">||<pos:position pos:line="20" pos:column="27"/></operator> <name><name pos:line="20" pos:column="28">url<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">hostname<pos:position pos:line="20" pos:column="41"/></name></name></expr>)<pos:position pos:line="20" pos:column="42"/></condition><then pos:line="20" pos:column="42"> <block pos:line="20" pos:column="43">{
            <return pos:line="21" pos:column="13">return <expr><literal type="number" pos:line="21" pos:column="20">0<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
    }<pos:position pos:line="23" pos:column="6"/></block></then>
    <else pos:line="24" pos:column="5">else <block pos:line="24" pos:column="10">{
        <comment type="block" pos:line="25" pos:column="9">/* The URI scheme must be present and identical except for case. */</comment>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><name><name pos:line="26" pos:column="14">url<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">scheme<pos:position pos:line="26" pos:column="25"/></name></name> <operator pos:line="26" pos:column="26">||<pos:position pos:line="26" pos:column="28"/></operator> <call><name pos:line="26" pos:column="29">strcasecmp<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><name><name pos:line="26" pos:column="40">filter<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">-&gt;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="48">scheme<pos:position pos:line="26" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="56">url<pos:position pos:line="26" pos:column="59"/></name><operator pos:line="26" pos:column="59">-&gt;<pos:position pos:line="26" pos:column="64"/></operator><name pos:line="26" pos:column="61">scheme<pos:position pos:line="26" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="69"/></condition><then pos:line="26" pos:column="69"> <block pos:line="26" pos:column="70">{
            <return pos:line="27" pos:column="13">return <expr><literal type="number" pos:line="27" pos:column="20">0<pos:position pos:line="27" pos:column="21"/></literal></expr>;<pos:position pos:line="27" pos:column="22"/></return>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="30" pos:column="9">/* If the filter hostname is null or empty it matches any hostname,
         * if it begins with a "*" it matches the _end_ of the URI hostname
         * excluding the "*", if it begins with a "." it matches the _end_
         * of the URI * hostname including the ".", otherwise it must match
         * the URI hostname exactly. */</comment>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">filter<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">-&gt;<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="21">hostname<pos:position pos:line="36" pos:column="29"/></name></name> <operator pos:line="36" pos:column="30">&amp;&amp;<pos:position pos:line="36" pos:column="40"/></operator> <name><name pos:line="36" pos:column="33">filter<pos:position pos:line="36" pos:column="39"/></name><operator pos:line="36" pos:column="39">-&gt;<pos:position pos:line="36" pos:column="44"/></operator><name pos:line="36" pos:column="41">hostname<pos:position pos:line="36" pos:column="49"/></name><index pos:line="36" pos:column="49">[<expr><literal type="number" pos:line="36" pos:column="50">0<pos:position pos:line="36" pos:column="51"/></literal></expr>]<pos:position pos:line="36" pos:column="52"/></index></name></expr>)<pos:position pos:line="36" pos:column="53"/></condition><then pos:line="36" pos:column="53"> <block pos:line="36" pos:column="54">{
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><name><name pos:line="37" pos:column="17">filter<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">-&gt;<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="25">hostname<pos:position pos:line="37" pos:column="33"/></name><index pos:line="37" pos:column="33">[<expr><literal type="number" pos:line="37" pos:column="34">0<pos:position pos:line="37" pos:column="35"/></literal></expr>]<pos:position pos:line="37" pos:column="36"/></index></name> <operator pos:line="37" pos:column="37">==<pos:position pos:line="37" pos:column="39"/></operator> <literal type="char" pos:line="37" pos:column="40">'.'<pos:position pos:line="37" pos:column="43"/></literal></expr>)<pos:position pos:line="37" pos:column="44"/></condition><then pos:line="37" pos:column="44"> <block pos:line="37" pos:column="45">{
                <decl_stmt><decl><type><specifier pos:line="38" pos:column="17">const<pos:position pos:line="38" pos:column="22"/></specifier> <name pos:line="38" pos:column="23">size_t<pos:position pos:line="38" pos:column="29"/></name></type> <name pos:line="38" pos:column="30">fhostlen<pos:position pos:line="38" pos:column="38"/></name> <init pos:line="38" pos:column="39">= <expr><call><name pos:line="38" pos:column="41">strlen<pos:position pos:line="38" pos:column="47"/></name><argument_list pos:line="38" pos:column="47">(<argument><expr><name><name pos:line="38" pos:column="48">filter<pos:position pos:line="38" pos:column="54"/></name><operator pos:line="38" pos:column="54">-&gt;<pos:position pos:line="38" pos:column="59"/></operator><name pos:line="38" pos:column="56">hostname<pos:position pos:line="38" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="66"/></decl_stmt>
                <decl_stmt><decl><type><specifier pos:line="39" pos:column="17">const<pos:position pos:line="39" pos:column="22"/></specifier> <name pos:line="39" pos:column="23">size_t<pos:position pos:line="39" pos:column="29"/></name></type> <name pos:line="39" pos:column="30">uhostlen<pos:position pos:line="39" pos:column="38"/></name> <init pos:line="39" pos:column="39">= <expr><ternary><condition><expr><name><name pos:line="39" pos:column="41">url<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">-&gt;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="46">hostname<pos:position pos:line="39" pos:column="54"/></name></name></expr> ?<pos:position pos:line="39" pos:column="56"/></condition><then pos:line="39" pos:column="56"> <expr><call><name pos:line="39" pos:column="57">strlen<pos:position pos:line="39" pos:column="63"/></name><argument_list pos:line="39" pos:column="63">(<argument><expr><name><name pos:line="39" pos:column="64">url<pos:position pos:line="39" pos:column="67"/></name><operator pos:line="39" pos:column="67">-&gt;<pos:position pos:line="39" pos:column="72"/></operator><name pos:line="39" pos:column="69">hostname<pos:position pos:line="39" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="78"/></argument_list></call></expr> <pos:position pos:line="39" pos:column="79"/></then><else pos:line="39" pos:column="79">: <expr><literal type="number" pos:line="39" pos:column="81">0<pos:position pos:line="39" pos:column="82"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="39" pos:column="83"/></decl_stmt>

                <if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">fhostlen<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">&gt;<pos:position pos:line="41" pos:column="34"/></operator> <name pos:line="41" pos:column="32">uhostlen<pos:position pos:line="41" pos:column="40"/></name> <operator pos:line="41" pos:column="41">||<pos:position pos:line="41" pos:column="43"/></operator> <call><name pos:line="41" pos:column="44">strcasecmp<pos:position pos:line="41" pos:column="54"/></name><argument_list pos:line="41" pos:column="54">(<argument><expr><name><name pos:line="41" pos:column="55">filter<pos:position pos:line="41" pos:column="61"/></name><operator pos:line="41" pos:column="61">-&gt;<pos:position pos:line="41" pos:column="66"/></operator><name pos:line="41" pos:column="63">hostname<pos:position pos:line="41" pos:column="71"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="42" pos:column="25">url<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-&gt;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="30">hostname<pos:position pos:line="42" pos:column="38"/></name></name> <operator pos:line="42" pos:column="39">+<pos:position pos:line="42" pos:column="40"/></operator> <name pos:line="42" pos:column="41">uhostlen<pos:position pos:line="42" pos:column="49"/></name> <operator pos:line="42" pos:column="50">-<pos:position pos:line="42" pos:column="51"/></operator> <name pos:line="42" pos:column="52">fhostlen<pos:position pos:line="42" pos:column="60"/></name></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="62"/></condition><then pos:line="42" pos:column="62"> <block pos:line="42" pos:column="63">{
                    <return pos:line="43" pos:column="21">return <expr><literal type="number" pos:line="43" pos:column="28">0<pos:position pos:line="43" pos:column="29"/></literal></expr>;<pos:position pos:line="43" pos:column="30"/></return>
                }<pos:position pos:line="44" pos:column="18"/></block></then></if>
            }<pos:position pos:line="45" pos:column="14"/></block></then>
            <elseif pos:line="46" pos:column="13">else <if pos:line="46" pos:column="18">if <condition pos:line="46" pos:column="21">(<expr><name><name pos:line="46" pos:column="22">filter<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">-&gt;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="30">hostname<pos:position pos:line="46" pos:column="38"/></name><index pos:line="46" pos:column="38">[<expr><literal type="number" pos:line="46" pos:column="39">0<pos:position pos:line="46" pos:column="40"/></literal></expr>]<pos:position pos:line="46" pos:column="41"/></index></name> <operator pos:line="46" pos:column="42">==<pos:position pos:line="46" pos:column="44"/></operator> <literal type="char" pos:line="46" pos:column="45">'*'<pos:position pos:line="46" pos:column="48"/></literal></expr>)<pos:position pos:line="46" pos:column="49"/></condition><then pos:line="46" pos:column="49"> <block pos:line="46" pos:column="50">{
                <decl_stmt><decl><type><specifier pos:line="47" pos:column="17">const<pos:position pos:line="47" pos:column="22"/></specifier> <name pos:line="47" pos:column="23">size_t<pos:position pos:line="47" pos:column="29"/></name></type> <name pos:line="47" pos:column="30">fhostlen<pos:position pos:line="47" pos:column="38"/></name> <init pos:line="47" pos:column="39">= <expr><call><name pos:line="47" pos:column="41">strlen<pos:position pos:line="47" pos:column="47"/></name><argument_list pos:line="47" pos:column="47">(<argument><expr><name><name pos:line="47" pos:column="48">filter<pos:position pos:line="47" pos:column="54"/></name><operator pos:line="47" pos:column="54">-&gt;<pos:position pos:line="47" pos:column="59"/></operator><name pos:line="47" pos:column="56">hostname<pos:position pos:line="47" pos:column="64"/></name></name> <operator pos:line="47" pos:column="65">+<pos:position pos:line="47" pos:column="66"/></operator> <literal type="number" pos:line="47" pos:column="67">1<pos:position pos:line="47" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="70"/></decl_stmt>
                <decl_stmt><decl><type><specifier pos:line="48" pos:column="17">const<pos:position pos:line="48" pos:column="22"/></specifier> <name pos:line="48" pos:column="23">size_t<pos:position pos:line="48" pos:column="29"/></name></type> <name pos:line="48" pos:column="30">uhostlen<pos:position pos:line="48" pos:column="38"/></name> <init pos:line="48" pos:column="39">= <expr><ternary><condition><expr><name><name pos:line="48" pos:column="41">url<pos:position pos:line="48" pos:column="44"/></name><operator pos:line="48" pos:column="44">-&gt;<pos:position pos:line="48" pos:column="49"/></operator><name pos:line="48" pos:column="46">hostname<pos:position pos:line="48" pos:column="54"/></name></name></expr> ?<pos:position pos:line="48" pos:column="56"/></condition><then pos:line="48" pos:column="56"> <expr><call><name pos:line="48" pos:column="57">strlen<pos:position pos:line="48" pos:column="63"/></name><argument_list pos:line="48" pos:column="63">(<argument><expr><name><name pos:line="48" pos:column="64">url<pos:position pos:line="48" pos:column="67"/></name><operator pos:line="48" pos:column="67">-&gt;<pos:position pos:line="48" pos:column="72"/></operator><name pos:line="48" pos:column="69">hostname<pos:position pos:line="48" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="78"/></argument_list></call></expr> <pos:position pos:line="48" pos:column="79"/></then><else pos:line="48" pos:column="79">: <expr><literal type="number" pos:line="48" pos:column="81">0<pos:position pos:line="48" pos:column="82"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="48" pos:column="83"/></decl_stmt>

                <if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">fhostlen<pos:position pos:line="50" pos:column="29"/></name> <operator pos:line="50" pos:column="30">&gt;<pos:position pos:line="50" pos:column="34"/></operator> <name pos:line="50" pos:column="32">uhostlen<pos:position pos:line="50" pos:column="40"/></name> <operator pos:line="50" pos:column="41">||<pos:position pos:line="50" pos:column="43"/></operator> <call><name pos:line="50" pos:column="44">strcasecmp<pos:position pos:line="50" pos:column="54"/></name><argument_list pos:line="50" pos:column="54">(<argument><expr><name><name pos:line="50" pos:column="55">filter<pos:position pos:line="50" pos:column="61"/></name><operator pos:line="50" pos:column="61">-&gt;<pos:position pos:line="50" pos:column="66"/></operator><name pos:line="50" pos:column="63">hostname<pos:position pos:line="50" pos:column="71"/></name></name> <operator pos:line="50" pos:column="72">+<pos:position pos:line="50" pos:column="73"/></operator> <literal type="number" pos:line="50" pos:column="74">1<pos:position pos:line="50" pos:column="75"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="51" pos:column="25">url<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">-&gt;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="30">hostname<pos:position pos:line="51" pos:column="38"/></name></name> <operator pos:line="51" pos:column="39">+<pos:position pos:line="51" pos:column="40"/></operator> <name pos:line="51" pos:column="41">uhostlen<pos:position pos:line="51" pos:column="49"/></name> <operator pos:line="51" pos:column="50">-<pos:position pos:line="51" pos:column="51"/></operator> <name pos:line="51" pos:column="52">fhostlen<pos:position pos:line="51" pos:column="60"/></name></expr></argument>)<pos:position pos:line="51" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="62"/></condition><then pos:line="51" pos:column="62"> <block pos:line="51" pos:column="63">{
                    <return pos:line="52" pos:column="21">return <expr><literal type="number" pos:line="52" pos:column="28">0<pos:position pos:line="52" pos:column="29"/></literal></expr>;<pos:position pos:line="52" pos:column="30"/></return>
                }<pos:position pos:line="53" pos:column="18"/></block></then></if>
            }<pos:position pos:line="54" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="55" pos:column="13">else <if pos:line="55" pos:column="18">if <condition pos:line="55" pos:column="21">(<expr><operator pos:line="55" pos:column="22">!<pos:position pos:line="55" pos:column="23"/></operator><name><name pos:line="55" pos:column="23">url<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">-&gt;<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="28">hostname<pos:position pos:line="55" pos:column="36"/></name></name> <operator pos:line="55" pos:column="37">||<pos:position pos:line="55" pos:column="39"/></operator> <call><name pos:line="55" pos:column="40">strcasecmp<pos:position pos:line="55" pos:column="50"/></name><argument_list pos:line="55" pos:column="50">(<argument><expr><name><name pos:line="55" pos:column="51">filter<pos:position pos:line="55" pos:column="57"/></name><operator pos:line="55" pos:column="57">-&gt;<pos:position pos:line="55" pos:column="62"/></operator><name pos:line="55" pos:column="59">hostname<pos:position pos:line="55" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="69">url<pos:position pos:line="55" pos:column="72"/></name><operator pos:line="55" pos:column="72">-&gt;<pos:position pos:line="55" pos:column="77"/></operator><name pos:line="55" pos:column="74">hostname<pos:position pos:line="55" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="84"/></condition><then pos:line="55" pos:column="84"> <block pos:line="55" pos:column="85">{
                <return pos:line="56" pos:column="17">return <expr><literal type="number" pos:line="56" pos:column="24">0<pos:position pos:line="56" pos:column="25"/></literal></expr>;<pos:position pos:line="56" pos:column="26"/></return>
            }<pos:position pos:line="57" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="60" pos:column="9">/* If the filter port is empty it matches any URL port.
         * If the filter or URL port are missing, or the URL port is
         * empty, they default to the port for their scheme. */</comment>

        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">!<pos:position pos:line="64" pos:column="14"/></operator><operator pos:line="64" pos:column="14">(<pos:position pos:line="64" pos:column="15"/></operator><name><name pos:line="64" pos:column="15">filter<pos:position pos:line="64" pos:column="21"/></name><operator pos:line="64" pos:column="21">-&gt;<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="23">port_str<pos:position pos:line="64" pos:column="31"/></name></name> <operator pos:line="64" pos:column="32">&amp;&amp;<pos:position pos:line="64" pos:column="42"/></operator> <operator pos:line="64" pos:column="35">!<pos:position pos:line="64" pos:column="36"/></operator><name><name pos:line="64" pos:column="36">filter<pos:position pos:line="64" pos:column="42"/></name><operator pos:line="64" pos:column="42">-&gt;<pos:position pos:line="64" pos:column="47"/></operator><name pos:line="64" pos:column="44">port_str<pos:position pos:line="64" pos:column="52"/></name><index pos:line="64" pos:column="52">[<expr><literal type="number" pos:line="64" pos:column="53">0<pos:position pos:line="64" pos:column="54"/></literal></expr>]<pos:position pos:line="64" pos:column="55"/></index></name><operator pos:line="64" pos:column="55">)<pos:position pos:line="64" pos:column="56"/></operator></expr>)<pos:position pos:line="64" pos:column="57"/></condition><then pos:line="64" pos:column="57"> <block pos:line="64" pos:column="58">{
            <comment type="block" pos:line="65" pos:column="13">/* NOTE:  ap_port_of_scheme will return 0 if given NULL input */</comment>
            <decl_stmt><decl><type><specifier pos:line="66" pos:column="13">const<pos:position pos:line="66" pos:column="18"/></specifier> <name pos:line="66" pos:column="19">unsigned<pos:position pos:line="66" pos:column="27"/></name></type> <name pos:line="66" pos:column="28">fport<pos:position pos:line="66" pos:column="33"/></name> <init pos:line="66" pos:column="34">= <expr><ternary><condition><expr><name><name pos:line="66" pos:column="36">filter<pos:position pos:line="66" pos:column="42"/></name><operator pos:line="66" pos:column="42">-&gt;<pos:position pos:line="66" pos:column="47"/></operator><name pos:line="66" pos:column="44">port_str<pos:position pos:line="66" pos:column="52"/></name></name></expr> ?<pos:position pos:line="66" pos:column="54"/></condition><then pos:line="66" pos:column="54"> <expr><name><name pos:line="66" pos:column="55">filter<pos:position pos:line="66" pos:column="61"/></name><operator pos:line="66" pos:column="61">-&gt;<pos:position pos:line="66" pos:column="66"/></operator><name pos:line="66" pos:column="63">port<pos:position pos:line="66" pos:column="67"/></name></name></expr>
                    <pos:position pos:line="67" pos:column="21"/></then><else pos:line="67" pos:column="21">: <expr><call><name pos:line="67" pos:column="23">apr_uri_port_of_scheme<pos:position pos:line="67" pos:column="45"/></name><argument_list pos:line="67" pos:column="45">(<argument><expr><name><name pos:line="67" pos:column="46">filter<pos:position pos:line="67" pos:column="52"/></name><operator pos:line="67" pos:column="52">-&gt;<pos:position pos:line="67" pos:column="57"/></operator><name pos:line="67" pos:column="54">scheme<pos:position pos:line="67" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="61"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="67" pos:column="62"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="68" pos:column="13">const<pos:position pos:line="68" pos:column="18"/></specifier> <name pos:line="68" pos:column="19">unsigned<pos:position pos:line="68" pos:column="27"/></name></type> <name pos:line="68" pos:column="28">uport<pos:position pos:line="68" pos:column="33"/></name> <init pos:line="68" pos:column="34">= <expr><ternary><condition><expr><operator pos:line="68" pos:column="36">(<pos:position pos:line="68" pos:column="37"/></operator><name><name pos:line="68" pos:column="37">url<pos:position pos:line="68" pos:column="40"/></name><operator pos:line="68" pos:column="40">-&gt;<pos:position pos:line="68" pos:column="45"/></operator><name pos:line="68" pos:column="42">port_str<pos:position pos:line="68" pos:column="50"/></name></name> <operator pos:line="68" pos:column="51">&amp;&amp;<pos:position pos:line="68" pos:column="61"/></operator> <name><name pos:line="68" pos:column="54">url<pos:position pos:line="68" pos:column="57"/></name><operator pos:line="68" pos:column="57">-&gt;<pos:position pos:line="68" pos:column="62"/></operator><name pos:line="68" pos:column="59">port_str<pos:position pos:line="68" pos:column="67"/></name><index pos:line="68" pos:column="67">[<expr><literal type="number" pos:line="68" pos:column="68">0<pos:position pos:line="68" pos:column="69"/></literal></expr>]<pos:position pos:line="68" pos:column="70"/></index></name><operator pos:line="68" pos:column="70">)<pos:position pos:line="68" pos:column="71"/></operator></expr>
                    ?<pos:position pos:line="69" pos:column="22"/></condition><then pos:line="69" pos:column="22"> <expr><name><name pos:line="69" pos:column="23">url<pos:position pos:line="69" pos:column="26"/></name><operator pos:line="69" pos:column="26">-&gt;<pos:position pos:line="69" pos:column="31"/></operator><name pos:line="69" pos:column="28">port<pos:position pos:line="69" pos:column="32"/></name></name></expr> <pos:position pos:line="69" pos:column="33"/></then><else pos:line="69" pos:column="33">: <expr><call><name pos:line="69" pos:column="35">apr_uri_port_of_scheme<pos:position pos:line="69" pos:column="57"/></name><argument_list pos:line="69" pos:column="57">(<argument><expr><name><name pos:line="69" pos:column="58">url<pos:position pos:line="69" pos:column="61"/></name><operator pos:line="69" pos:column="61">-&gt;<pos:position pos:line="69" pos:column="66"/></operator><name pos:line="69" pos:column="63">scheme<pos:position pos:line="69" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="70"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="69" pos:column="71"/></decl_stmt>

            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><name pos:line="71" pos:column="17">fport<pos:position pos:line="71" pos:column="22"/></name> <operator pos:line="71" pos:column="23">!=<pos:position pos:line="71" pos:column="25"/></operator> <name pos:line="71" pos:column="26">uport<pos:position pos:line="71" pos:column="31"/></name></expr>)<pos:position pos:line="71" pos:column="32"/></condition><then pos:line="71" pos:column="32"> <block pos:line="71" pos:column="33">{
                <return pos:line="72" pos:column="17">return <expr><literal type="number" pos:line="72" pos:column="24">0<pos:position pos:line="72" pos:column="25"/></literal></expr>;<pos:position pos:line="72" pos:column="26"/></return>
            }<pos:position pos:line="73" pos:column="14"/></block></then></if>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>
    }<pos:position pos:line="75" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="77" pos:column="5">/* For HTTP caching purposes, an empty (NULL) path is equivalent to
     * a single "/" path. RFCs 3986/2396
     */</comment>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><operator pos:line="80" pos:column="9">!<pos:position pos:line="80" pos:column="10"/></operator><name><name pos:line="80" pos:column="10">url<pos:position pos:line="80" pos:column="13"/></name><operator pos:line="80" pos:column="13">-&gt;<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="15">path<pos:position pos:line="80" pos:column="19"/></name></name></expr>)<pos:position pos:line="80" pos:column="20"/></condition><then pos:line="80" pos:column="20"> <block pos:line="80" pos:column="21">{
        <if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><operator pos:line="81" pos:column="13">*<pos:position pos:line="81" pos:column="14"/></operator><name><name pos:line="81" pos:column="14">filter<pos:position pos:line="81" pos:column="20"/></name><operator pos:line="81" pos:column="20">-&gt;<pos:position pos:line="81" pos:column="25"/></operator><name pos:line="81" pos:column="22">path<pos:position pos:line="81" pos:column="26"/></name></name> <operator pos:line="81" pos:column="27">==<pos:position pos:line="81" pos:column="29"/></operator> <literal type="char" pos:line="81" pos:column="30">'/'<pos:position pos:line="81" pos:column="33"/></literal> <operator pos:line="81" pos:column="34">&amp;&amp;<pos:position pos:line="81" pos:column="44"/></operator> <name pos:line="81" pos:column="37">pathlen<pos:position pos:line="81" pos:column="44"/></name> <operator pos:line="81" pos:column="45">==<pos:position pos:line="81" pos:column="47"/></operator> <literal type="number" pos:line="81" pos:column="48">1<pos:position pos:line="81" pos:column="49"/></literal></expr>)<pos:position pos:line="81" pos:column="50"/></condition><then pos:line="81" pos:column="50"> <block pos:line="81" pos:column="51">{
            <return pos:line="82" pos:column="13">return <expr><literal type="number" pos:line="82" pos:column="20">1<pos:position pos:line="82" pos:column="21"/></literal></expr>;<pos:position pos:line="82" pos:column="22"/></return>
        }<pos:position pos:line="83" pos:column="10"/></block></then>
        <else pos:line="84" pos:column="9">else <block pos:line="84" pos:column="14">{
            <return pos:line="85" pos:column="13">return <expr><literal type="number" pos:line="85" pos:column="20">0<pos:position pos:line="85" pos:column="21"/></literal></expr>;<pos:position pos:line="85" pos:column="22"/></return>
        }<pos:position pos:line="86" pos:column="10"/></block></else></if>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="89" pos:column="5">/* Url has met all of the filter conditions so far, determine
     * if the paths match.
     */</comment>
    <return pos:line="92" pos:column="5">return <expr><operator pos:line="92" pos:column="12">!<pos:position pos:line="92" pos:column="13"/></operator><call><name pos:line="92" pos:column="13">strncmp<pos:position pos:line="92" pos:column="20"/></name><argument_list pos:line="92" pos:column="20">(<argument><expr><name><name pos:line="92" pos:column="21">filter<pos:position pos:line="92" pos:column="27"/></name><operator pos:line="92" pos:column="27">-&gt;<pos:position pos:line="92" pos:column="32"/></operator><name pos:line="92" pos:column="29">path<pos:position pos:line="92" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="35">url<pos:position pos:line="92" pos:column="38"/></name><operator pos:line="92" pos:column="38">-&gt;<pos:position pos:line="92" pos:column="43"/></operator><name pos:line="92" pos:column="40">path<pos:position pos:line="92" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="46">pathlen<pos:position pos:line="92" pos:column="53"/></name></expr></argument>)<pos:position pos:line="92" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="55"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_449_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">server_rec<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">serv<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">apr_pool_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">p<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">l<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">lineno<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">struct<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">magic<pos:position pos:line="3" pos:column="17"/></name></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">m<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">t<pos:position pos:line="4" pos:column="12"/></name></decl>, <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="15">s<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">magic_server_config_rec<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">conf<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><operator pos:line="5" pos:column="37">(<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">magic_server_config_rec<pos:position pos:line="5" pos:column="61"/></name> <operator pos:line="5" pos:column="62">*<pos:position pos:line="5" pos:column="63"/></operator><operator pos:line="5" pos:column="63">)<pos:position pos:line="5" pos:column="64"/></operator>
		    <call><name pos:line="6" pos:column="21">ap_get_module_config<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">(<argument><expr><name><name pos:line="6" pos:column="42">serv<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">-&gt;<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="48">module_config<pos:position pos:line="6" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="63">&amp;<pos:position pos:line="6" pos:column="68"/></operator><name pos:line="6" pos:column="64">mime_magic_module<pos:position pos:line="6" pos:column="81"/></name></expr></argument>)<pos:position pos:line="6" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="83"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* allocate magic structure entry */</comment>
    <expr_stmt><expr><name pos:line="9" pos:column="5">m<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator>struct <name pos:line="9" pos:column="17">magic<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></operator><operator pos:line="9" pos:column="24">)<pos:position pos:line="9" pos:column="25"/></operator> <call><name pos:line="9" pos:column="26">apr_pcalloc<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><name pos:line="9" pos:column="38">p<pos:position pos:line="9" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="41">sizeof<argument_list pos:line="9" pos:column="47">(<argument><expr pos:line="9" pos:column="48">struct <name pos:line="9" pos:column="55">magic<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="63"/></expr_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* append to linked list */</comment>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">m<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">next<pos:position pos:line="12" pos:column="12"/></name></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">NULL<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name><name pos:line="13" pos:column="10">conf<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">magic<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">||<pos:position pos:line="13" pos:column="24"/></operator> <operator pos:line="13" pos:column="25">!<pos:position pos:line="13" pos:column="26"/></operator><name><name pos:line="13" pos:column="26">conf<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">last<pos:position pos:line="13" pos:column="36"/></name></name></expr>)<pos:position pos:line="13" pos:column="37"/></condition><then pos:line="13" pos:column="37"> <block pos:line="13" pos:column="38">{
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">conf<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">magic<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name><name pos:line="14" pos:column="23">conf<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">last<pos:position pos:line="14" pos:column="33"/></name></name> <operator pos:line="14" pos:column="34">=<pos:position pos:line="14" pos:column="35"/></operator> <name pos:line="14" pos:column="36">m<pos:position pos:line="14" pos:column="37"/></name></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then>
    <else pos:line="16" pos:column="5">else <block pos:line="16" pos:column="10">{
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">conf<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">last<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">next<pos:position pos:line="17" pos:column="25"/></name></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="28">m<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">conf<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">last<pos:position pos:line="18" pos:column="19"/></name></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">m<pos:position pos:line="18" pos:column="23"/></name></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="21" pos:column="5">/* set values in magic structure */</comment>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">m<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">-&gt;<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="8">flag<pos:position pos:line="22" pos:column="12"/></name></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <literal type="number" pos:line="22" pos:column="15">0<pos:position pos:line="22" pos:column="16"/></literal></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">m<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">cont_level<pos:position pos:line="23" pos:column="18"/></name></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <literal type="number" pos:line="23" pos:column="21">0<pos:position pos:line="23" pos:column="22"/></literal></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">m<pos:position pos:line="24" pos:column="6"/></name><operator pos:line="24" pos:column="6">-&gt;<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="8">lineno<pos:position pos:line="24" pos:column="14"/></name></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">lineno<pos:position pos:line="24" pos:column="23"/></name></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>

    <while pos:line="26" pos:column="5">while <condition pos:line="26" pos:column="11">(<expr><operator pos:line="26" pos:column="12">*<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="13">l<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">==<pos:position pos:line="26" pos:column="17"/></operator> <literal type="char" pos:line="26" pos:column="18">'&gt;'<pos:position pos:line="26" pos:column="24"/></literal></expr>)<pos:position pos:line="26" pos:column="22"/></condition> <block pos:line="26" pos:column="23">{
	<expr_stmt><expr><operator pos:line="27" pos:column="9">++<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">l<pos:position pos:line="27" pos:column="12"/></name></expr>;<pos:position pos:line="27" pos:column="13"/></expr_stmt>			<comment type="block" pos:line="27" pos:column="33">/* step over */</comment>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">m<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">cont_level<pos:position pos:line="28" pos:column="22"/></name></name><operator pos:line="28" pos:column="22">++<pos:position pos:line="28" pos:column="24"/></operator></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></while>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">m<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">cont_level<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">!=<pos:position pos:line="31" pos:column="25"/></operator> <literal type="number" pos:line="31" pos:column="26">0<pos:position pos:line="31" pos:column="27"/></literal> <operator pos:line="31" pos:column="28">&amp;&amp;<pos:position pos:line="31" pos:column="38"/></operator> <operator pos:line="31" pos:column="31">*<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="32">l<pos:position pos:line="31" pos:column="33"/></name> <operator pos:line="31" pos:column="34">==<pos:position pos:line="31" pos:column="36"/></operator> <literal type="char" pos:line="31" pos:column="37">'('<pos:position pos:line="31" pos:column="40"/></literal></expr>)<pos:position pos:line="31" pos:column="41"/></condition><then pos:line="31" pos:column="41"> <block pos:line="31" pos:column="42">{
	<expr_stmt><expr><operator pos:line="32" pos:column="9">++<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">l<pos:position pos:line="32" pos:column="12"/></name></expr>;<pos:position pos:line="32" pos:column="13"/></expr_stmt>			<comment type="block" pos:line="32" pos:column="33">/* step over */</comment>
	<expr_stmt><expr><name><name pos:line="33" pos:column="9">m<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">-&gt;<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="12">flag<pos:position pos:line="33" pos:column="16"/></name></name> <operator pos:line="33" pos:column="17">|=<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">INDIR<pos:position pos:line="33" pos:column="25"/></name></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="36" pos:column="5">/* get offset, then skip over it */</comment>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">m<pos:position pos:line="37" pos:column="6"/></name><operator pos:line="37" pos:column="6">-&gt;<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="8">offset<pos:position pos:line="37" pos:column="14"/></name></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <operator pos:line="37" pos:column="17">(<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">int<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">)<pos:position pos:line="37" pos:column="22"/></operator> <call><name pos:line="37" pos:column="23">strtol<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">l<pos:position pos:line="37" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="33">&amp;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="34">t<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="37">0<pos:position pos:line="37" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">l<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">==<pos:position pos:line="38" pos:column="13"/></operator> <name pos:line="38" pos:column="14">t<pos:position pos:line="38" pos:column="15"/></name></expr>)<pos:position pos:line="38" pos:column="16"/></condition><then pos:line="38" pos:column="16"> <block pos:line="38" pos:column="17">{
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">ap_log_error<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name pos:line="39" pos:column="22">APLOG_MARK<pos:position pos:line="39" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="34">APLOG_ERR<pos:position pos:line="39" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="45">0<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="48">serv<pos:position pos:line="39" pos:column="52"/></name></expr></argument>,
		    <argument><expr><name pos:line="40" pos:column="21">MODNAME<pos:position pos:line="40" pos:column="28"/></name> <literal type="string" pos:line="40" pos:column="29">": offset %s invalid"<pos:position pos:line="40" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="52">l<pos:position pos:line="40" pos:column="53"/></name></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="42" pos:column="5">l<pos:position pos:line="42" pos:column="6"/></name> <operator pos:line="42" pos:column="7">=<pos:position pos:line="42" pos:column="8"/></operator> <name pos:line="42" pos:column="9">t<pos:position pos:line="42" pos:column="10"/></name></expr>;<pos:position pos:line="42" pos:column="11"/></expr_stmt>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name><name pos:line="44" pos:column="9">m<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">flag<pos:position pos:line="44" pos:column="16"/></name></name> <operator pos:line="44" pos:column="17">&amp;<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="19">INDIR<pos:position pos:line="44" pos:column="24"/></name></expr>)<pos:position pos:line="44" pos:column="25"/></condition><then pos:line="44" pos:column="25"> <block pos:line="44" pos:column="26">{
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">m<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">in<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">.<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="15">type<pos:position pos:line="45" pos:column="19"/></name></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <name pos:line="45" pos:column="22">LONG<pos:position pos:line="45" pos:column="26"/></name></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">m<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">in<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">.<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">offset<pos:position pos:line="46" pos:column="21"/></name></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <literal type="number" pos:line="46" pos:column="24">0<pos:position pos:line="46" pos:column="25"/></literal></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>
	<comment type="block" pos:line="47" pos:column="9">/*
	 * read [.lbs][+-]nnnnn)
	 */</comment>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">*<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">l<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">==<pos:position pos:line="50" pos:column="18"/></operator> <literal type="char" pos:line="50" pos:column="19">'.'<pos:position pos:line="50" pos:column="22"/></literal></expr>)<pos:position pos:line="50" pos:column="23"/></condition><then pos:line="50" pos:column="23"> <block pos:line="50" pos:column="24">{
	    <switch pos:line="51" pos:column="13">switch <condition pos:line="51" pos:column="20">(<expr><operator pos:line="51" pos:column="21">*<pos:position pos:line="51" pos:column="22"/></operator><operator pos:line="51" pos:column="22">++<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="24">l<pos:position pos:line="51" pos:column="25"/></name></expr>)<pos:position pos:line="51" pos:column="26"/></condition> <block pos:line="51" pos:column="27">{
	    <case pos:line="52" pos:column="13">case <expr><literal type="char" pos:line="52" pos:column="18">'l'<pos:position pos:line="52" pos:column="21"/></literal></expr>:<pos:position pos:line="52" pos:column="22"/></case>
		<expr_stmt><expr><name><name pos:line="53" pos:column="17">m<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">-&gt;<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="20">in<pos:position pos:line="53" pos:column="22"/></name><operator pos:line="53" pos:column="22">.<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="23">type<pos:position pos:line="53" pos:column="27"/></name></name> <operator pos:line="53" pos:column="28">=<pos:position pos:line="53" pos:column="29"/></operator> <name pos:line="53" pos:column="30">LONG<pos:position pos:line="53" pos:column="34"/></name></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt>
		<break pos:line="54" pos:column="17">break;<pos:position pos:line="54" pos:column="23"/></break>
	    <case pos:line="55" pos:column="13">case <expr><literal type="char" pos:line="55" pos:column="18">'s'<pos:position pos:line="55" pos:column="21"/></literal></expr>:<pos:position pos:line="55" pos:column="22"/></case>
		<expr_stmt><expr><name><name pos:line="56" pos:column="17">m<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">-&gt;<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="20">in<pos:position pos:line="56" pos:column="22"/></name><operator pos:line="56" pos:column="22">.<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="23">type<pos:position pos:line="56" pos:column="27"/></name></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <name pos:line="56" pos:column="30">SHORT<pos:position pos:line="56" pos:column="35"/></name></expr>;<pos:position pos:line="56" pos:column="36"/></expr_stmt>
		<break pos:line="57" pos:column="17">break;<pos:position pos:line="57" pos:column="23"/></break>
	    <case pos:line="58" pos:column="13">case <expr><literal type="char" pos:line="58" pos:column="18">'b'<pos:position pos:line="58" pos:column="21"/></literal></expr>:<pos:position pos:line="58" pos:column="22"/></case>
		<expr_stmt><expr><name><name pos:line="59" pos:column="17">m<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">-&gt;<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="20">in<pos:position pos:line="59" pos:column="22"/></name><operator pos:line="59" pos:column="22">.<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="23">type<pos:position pos:line="59" pos:column="27"/></name></name> <operator pos:line="59" pos:column="28">=<pos:position pos:line="59" pos:column="29"/></operator> <name pos:line="59" pos:column="30">BYTE<pos:position pos:line="59" pos:column="34"/></name></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
		<break pos:line="60" pos:column="17">break;<pos:position pos:line="60" pos:column="23"/></break>
	    <default pos:line="61" pos:column="13">default:<pos:position pos:line="61" pos:column="21"/></default>
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">ap_log_error<pos:position pos:line="62" pos:column="29"/></name><argument_list pos:line="62" pos:column="29">(<argument><expr><name pos:line="62" pos:column="30">APLOG_MARK<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="42">APLOG_ERR<pos:position pos:line="62" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="53">0<pos:position pos:line="62" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="56">serv<pos:position pos:line="62" pos:column="60"/></name></expr></argument>,
			<argument><expr><name pos:line="63" pos:column="25">MODNAME<pos:position pos:line="63" pos:column="32"/></name> <literal type="string" pos:line="63" pos:column="33">": indirect offset type %c invalid"<pos:position pos:line="63" pos:column="68"/></literal></expr></argument>, <argument><expr><operator pos:line="63" pos:column="70">*<pos:position pos:line="63" pos:column="71"/></operator><name pos:line="63" pos:column="71">l<pos:position pos:line="63" pos:column="72"/></name></expr></argument>)<pos:position pos:line="63" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="74"/></expr_stmt>
		<break pos:line="64" pos:column="17">break;<pos:position pos:line="64" pos:column="23"/></break>
	    }<pos:position pos:line="65" pos:column="14"/></block></switch>
	    <expr_stmt><expr><name pos:line="66" pos:column="13">l<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">++<pos:position pos:line="66" pos:column="16"/></operator></expr>;<pos:position pos:line="66" pos:column="17"/></expr_stmt>
	}<pos:position pos:line="67" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="68" pos:column="9">s<pos:position pos:line="68" pos:column="10"/></name> <operator pos:line="68" pos:column="11">=<pos:position pos:line="68" pos:column="12"/></operator> <name pos:line="68" pos:column="13">l<pos:position pos:line="68" pos:column="14"/></name></expr>;<pos:position pos:line="68" pos:column="15"/></expr_stmt>
	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><operator pos:line="69" pos:column="13">*<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="14">l<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">==<pos:position pos:line="69" pos:column="18"/></operator> <literal type="char" pos:line="69" pos:column="19">'+'<pos:position pos:line="69" pos:column="22"/></literal> <operator pos:line="69" pos:column="23">||<pos:position pos:line="69" pos:column="25"/></operator> <operator pos:line="69" pos:column="26">*<pos:position pos:line="69" pos:column="27"/></operator><name pos:line="69" pos:column="27">l<pos:position pos:line="69" pos:column="28"/></name> <operator pos:line="69" pos:column="29">==<pos:position pos:line="69" pos:column="31"/></operator> <literal type="char" pos:line="69" pos:column="32">'-'<pos:position pos:line="69" pos:column="35"/></literal></expr>)<pos:position pos:line="69" pos:column="36"/></condition><then pos:line="69" pos:column="36">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="13">l<pos:position pos:line="70" pos:column="14"/></name><operator pos:line="70" pos:column="14">++<pos:position pos:line="70" pos:column="16"/></operator></expr>;<pos:position pos:line="70" pos:column="17"/></expr_stmt></block></then></if>
	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><call><name pos:line="71" pos:column="13">apr_isdigit<pos:position pos:line="71" pos:column="24"/></name><argument_list pos:line="71" pos:column="24">(<argument><expr><operator pos:line="71" pos:column="25">(<pos:position pos:line="71" pos:column="26"/></operator><name pos:line="71" pos:column="26">unsigned<pos:position pos:line="71" pos:column="34"/></name> <name pos:line="71" pos:column="35">char<pos:position pos:line="71" pos:column="39"/></name><operator pos:line="71" pos:column="39">)<pos:position pos:line="71" pos:column="40"/></operator> <operator pos:line="71" pos:column="41">*<pos:position pos:line="71" pos:column="42"/></operator><name pos:line="71" pos:column="42">l<pos:position pos:line="71" pos:column="43"/></name></expr></argument>)<pos:position pos:line="71" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="45"/></condition><then pos:line="71" pos:column="45"> <block pos:line="71" pos:column="46">{
	    <expr_stmt><expr><name><name pos:line="72" pos:column="13">m<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">-&gt;<pos:position pos:line="72" pos:column="19"/></operator><name pos:line="72" pos:column="16">in<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">.<pos:position pos:line="72" pos:column="19"/></operator><name pos:line="72" pos:column="19">offset<pos:position pos:line="72" pos:column="25"/></name></name> <operator pos:line="72" pos:column="26">=<pos:position pos:line="72" pos:column="27"/></operator> <call><name pos:line="72" pos:column="28">strtol<pos:position pos:line="72" pos:column="34"/></name><argument_list pos:line="72" pos:column="34">(<argument><expr><name pos:line="72" pos:column="35">l<pos:position pos:line="72" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="38">&amp;<pos:position pos:line="72" pos:column="43"/></operator><name pos:line="72" pos:column="39">t<pos:position pos:line="72" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="42">0<pos:position pos:line="72" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="45"/></expr_stmt>
	    <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><operator pos:line="73" pos:column="17">*<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="18">s<pos:position pos:line="73" pos:column="19"/></name> <operator pos:line="73" pos:column="20">==<pos:position pos:line="73" pos:column="22"/></operator> <literal type="char" pos:line="73" pos:column="23">'-'<pos:position pos:line="73" pos:column="26"/></literal></expr>)<pos:position pos:line="73" pos:column="27"/></condition><then pos:line="73" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="74" pos:column="17">m<pos:position pos:line="74" pos:column="18"/></name><operator pos:line="74" pos:column="18">-&gt;<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="20">in<pos:position pos:line="74" pos:column="22"/></name><operator pos:line="74" pos:column="22">.<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="23">offset<pos:position pos:line="74" pos:column="29"/></name></name> <operator pos:line="74" pos:column="30">=<pos:position pos:line="74" pos:column="31"/></operator> <operator pos:line="74" pos:column="32">-<pos:position pos:line="74" pos:column="33"/></operator><name><name pos:line="74" pos:column="33">m<pos:position pos:line="74" pos:column="34"/></name><operator pos:line="74" pos:column="34">-&gt;<pos:position pos:line="74" pos:column="39"/></operator><name pos:line="74" pos:column="36">in<pos:position pos:line="74" pos:column="38"/></name><operator pos:line="74" pos:column="38">.<pos:position pos:line="74" pos:column="39"/></operator><name pos:line="74" pos:column="39">offset<pos:position pos:line="74" pos:column="45"/></name></name></expr>;<pos:position pos:line="74" pos:column="46"/></expr_stmt></block></then></if>
	}<pos:position pos:line="75" pos:column="10"/></block></then>
	<else pos:line="76" pos:column="9">else
	    <block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="13">t<pos:position pos:line="77" pos:column="14"/></name> <operator pos:line="77" pos:column="15">=<pos:position pos:line="77" pos:column="16"/></operator> <name pos:line="77" pos:column="17">l<pos:position pos:line="77" pos:column="18"/></name></expr>;<pos:position pos:line="77" pos:column="19"/></expr_stmt></block></else></if>
	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><operator pos:line="78" pos:column="13">*<pos:position pos:line="78" pos:column="14"/></operator><name pos:line="78" pos:column="14">t<pos:position pos:line="78" pos:column="15"/></name><operator pos:line="78" pos:column="15">++<pos:position pos:line="78" pos:column="17"/></operator> <operator pos:line="78" pos:column="18">!=<pos:position pos:line="78" pos:column="20"/></operator> <literal type="char" pos:line="78" pos:column="21">')'<pos:position pos:line="78" pos:column="24"/></literal></expr>)<pos:position pos:line="78" pos:column="25"/></condition><then pos:line="78" pos:column="25"> <block pos:line="78" pos:column="26">{
	    <expr_stmt><expr><call><name pos:line="79" pos:column="13">ap_log_error<pos:position pos:line="79" pos:column="25"/></name><argument_list pos:line="79" pos:column="25">(<argument><expr><name pos:line="79" pos:column="26">APLOG_MARK<pos:position pos:line="79" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="38">APLOG_ERR<pos:position pos:line="79" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="49">0<pos:position pos:line="79" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="52">serv<pos:position pos:line="79" pos:column="56"/></name></expr></argument>,
			<argument><expr><name pos:line="80" pos:column="25">MODNAME<pos:position pos:line="80" pos:column="32"/></name> <literal type="string" pos:line="80" pos:column="33">": missing ')' in indirect offset"<pos:position pos:line="80" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="69"/></expr_stmt>
	}<pos:position pos:line="81" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="82" pos:column="9">l<pos:position pos:line="82" pos:column="10"/></name> <operator pos:line="82" pos:column="11">=<pos:position pos:line="82" pos:column="12"/></operator> <name pos:line="82" pos:column="13">t<pos:position pos:line="82" pos:column="14"/></name></expr>;<pos:position pos:line="82" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>


    <while pos:line="86" pos:column="5">while <condition pos:line="86" pos:column="11">(<expr><call><name pos:line="86" pos:column="12">apr_isdigit<pos:position pos:line="86" pos:column="23"/></name><argument_list pos:line="86" pos:column="23">(<argument><expr><operator pos:line="86" pos:column="24">(<pos:position pos:line="86" pos:column="25"/></operator><name pos:line="86" pos:column="25">unsigned<pos:position pos:line="86" pos:column="33"/></name> <name pos:line="86" pos:column="34">char<pos:position pos:line="86" pos:column="38"/></name><operator pos:line="86" pos:column="38">)<pos:position pos:line="86" pos:column="39"/></operator> <operator pos:line="86" pos:column="40">*<pos:position pos:line="86" pos:column="41"/></operator><name pos:line="86" pos:column="41">l<pos:position pos:line="86" pos:column="42"/></name></expr></argument>)<pos:position pos:line="86" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="44"/></condition>
	<block type="pseudo"><expr_stmt><expr><operator pos:line="87" pos:column="9">++<pos:position pos:line="87" pos:column="11"/></operator><name pos:line="87" pos:column="11">l<pos:position pos:line="87" pos:column="12"/></name></expr>;<pos:position pos:line="87" pos:column="13"/></expr_stmt></block></while>
    <expr_stmt><expr><name pos:line="88" pos:column="5">EATAB<pos:position pos:line="88" pos:column="10"/></name></expr>;<pos:position pos:line="88" pos:column="11"/></expr_stmt>

<cpp:define pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">define<pos:position pos:line="90" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="90" pos:column="9">NBYTE<pos:position pos:line="90" pos:column="14"/></name></cpp:macro>           <cpp:value pos:line="90" pos:column="25">4<pos:position pos:line="90" pos:column="26"/></cpp:value></cpp:define>
<cpp:define pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">define<pos:position pos:line="91" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="91" pos:column="9">NSHORT<pos:position pos:line="91" pos:column="15"/></name></cpp:macro>          <cpp:value pos:line="91" pos:column="25">5<pos:position pos:line="91" pos:column="26"/></cpp:value></cpp:define>
<cpp:define pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">define<pos:position pos:line="92" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="92" pos:column="9">NLONG<pos:position pos:line="92" pos:column="14"/></name></cpp:macro>           <cpp:value pos:line="92" pos:column="25">4<pos:position pos:line="92" pos:column="26"/></cpp:value></cpp:define>
<cpp:define pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">define<pos:position pos:line="93" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="93" pos:column="9">NSTRING<pos:position pos:line="93" pos:column="16"/></name></cpp:macro>         <cpp:value pos:line="93" pos:column="25">6<pos:position pos:line="93" pos:column="26"/></cpp:value></cpp:define>
<cpp:define pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">define<pos:position pos:line="94" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="94" pos:column="9">NDATE<pos:position pos:line="94" pos:column="14"/></name></cpp:macro>           <cpp:value pos:line="94" pos:column="25">4<pos:position pos:line="94" pos:column="26"/></cpp:value></cpp:define>
<cpp:define pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">define<pos:position pos:line="95" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="95" pos:column="9">NBESHORT<pos:position pos:line="95" pos:column="17"/></name></cpp:macro>        <cpp:value pos:line="95" pos:column="25">7<pos:position pos:line="95" pos:column="26"/></cpp:value></cpp:define>
<cpp:define pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">define<pos:position pos:line="96" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="96" pos:column="9">NBELONG<pos:position pos:line="96" pos:column="16"/></name></cpp:macro>         <cpp:value pos:line="96" pos:column="25">6<pos:position pos:line="96" pos:column="26"/></cpp:value></cpp:define>
<cpp:define pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">define<pos:position pos:line="97" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="97" pos:column="9">NBEDATE<pos:position pos:line="97" pos:column="16"/></name></cpp:macro>         <cpp:value pos:line="97" pos:column="25">6<pos:position pos:line="97" pos:column="26"/></cpp:value></cpp:define>
<cpp:define pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">define<pos:position pos:line="98" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="98" pos:column="9">NLESHORT<pos:position pos:line="98" pos:column="17"/></name></cpp:macro>        <cpp:value pos:line="98" pos:column="25">7<pos:position pos:line="98" pos:column="26"/></cpp:value></cpp:define>
<cpp:define pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">define<pos:position pos:line="99" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="99" pos:column="9">NLELONG<pos:position pos:line="99" pos:column="16"/></name></cpp:macro>         <cpp:value pos:line="99" pos:column="25">6<pos:position pos:line="99" pos:column="26"/></cpp:value></cpp:define>
<cpp:define pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">define<pos:position pos:line="100" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="100" pos:column="9">NLEDATE<pos:position pos:line="100" pos:column="16"/></name></cpp:macro>         <cpp:value pos:line="100" pos:column="25">6<pos:position pos:line="100" pos:column="26"/></cpp:value></cpp:define>

    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><operator pos:line="102" pos:column="9">*<pos:position pos:line="102" pos:column="10"/></operator><name pos:line="102" pos:column="10">l<pos:position pos:line="102" pos:column="11"/></name> <operator pos:line="102" pos:column="12">==<pos:position pos:line="102" pos:column="14"/></operator> <literal type="char" pos:line="102" pos:column="15">'u'<pos:position pos:line="102" pos:column="18"/></literal></expr>)<pos:position pos:line="102" pos:column="19"/></condition><then pos:line="102" pos:column="19"> <block pos:line="102" pos:column="20">{
	<expr_stmt><expr><operator pos:line="103" pos:column="9">++<pos:position pos:line="103" pos:column="11"/></operator><name pos:line="103" pos:column="11">l<pos:position pos:line="103" pos:column="12"/></name></expr>;<pos:position pos:line="103" pos:column="13"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="104" pos:column="9">m<pos:position pos:line="104" pos:column="10"/></name><operator pos:line="104" pos:column="10">-&gt;<pos:position pos:line="104" pos:column="15"/></operator><name pos:line="104" pos:column="12">flag<pos:position pos:line="104" pos:column="16"/></name></name> <operator pos:line="104" pos:column="17">|=<pos:position pos:line="104" pos:column="19"/></operator> <name pos:line="104" pos:column="20">UNSIGNED<pos:position pos:line="104" pos:column="28"/></name></expr>;<pos:position pos:line="104" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="105" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="107" pos:column="5">/* get type, skip it */</comment>
    <if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><call><name pos:line="108" pos:column="9">strncmp<pos:position pos:line="108" pos:column="16"/></name><argument_list pos:line="108" pos:column="16">(<argument><expr><name pos:line="108" pos:column="17">l<pos:position pos:line="108" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="20">"byte"<pos:position pos:line="108" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="28">NBYTE<pos:position pos:line="108" pos:column="33"/></name></expr></argument>)<pos:position pos:line="108" pos:column="34"/></argument_list></call> <operator pos:line="108" pos:column="35">==<pos:position pos:line="108" pos:column="37"/></operator> <literal type="number" pos:line="108" pos:column="38">0<pos:position pos:line="108" pos:column="39"/></literal></expr>)<pos:position pos:line="108" pos:column="40"/></condition><then pos:line="108" pos:column="40"> <block pos:line="108" pos:column="41">{
	<expr_stmt><expr><name><name pos:line="109" pos:column="9">m<pos:position pos:line="109" pos:column="10"/></name><operator pos:line="109" pos:column="10">-&gt;<pos:position pos:line="109" pos:column="15"/></operator><name pos:line="109" pos:column="12">type<pos:position pos:line="109" pos:column="16"/></name></name> <operator pos:line="109" pos:column="17">=<pos:position pos:line="109" pos:column="18"/></operator> <name pos:line="109" pos:column="19">BYTE<pos:position pos:line="109" pos:column="23"/></name></expr>;<pos:position pos:line="109" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="110" pos:column="9">l<pos:position pos:line="110" pos:column="10"/></name> <operator pos:line="110" pos:column="11">+=<pos:position pos:line="110" pos:column="13"/></operator> <name pos:line="110" pos:column="14">NBYTE<pos:position pos:line="110" pos:column="19"/></name></expr>;<pos:position pos:line="110" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="111" pos:column="6"/></block></then>
    <elseif pos:line="112" pos:column="5">else <if pos:line="112" pos:column="10">if <condition pos:line="112" pos:column="13">(<expr><call><name pos:line="112" pos:column="14">strncmp<pos:position pos:line="112" pos:column="21"/></name><argument_list pos:line="112" pos:column="21">(<argument><expr><name pos:line="112" pos:column="22">l<pos:position pos:line="112" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="25">"short"<pos:position pos:line="112" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="34">NSHORT<pos:position pos:line="112" pos:column="40"/></name></expr></argument>)<pos:position pos:line="112" pos:column="41"/></argument_list></call> <operator pos:line="112" pos:column="42">==<pos:position pos:line="112" pos:column="44"/></operator> <literal type="number" pos:line="112" pos:column="45">0<pos:position pos:line="112" pos:column="46"/></literal></expr>)<pos:position pos:line="112" pos:column="47"/></condition><then pos:line="112" pos:column="47"> <block pos:line="112" pos:column="48">{
	<expr_stmt><expr><name><name pos:line="113" pos:column="9">m<pos:position pos:line="113" pos:column="10"/></name><operator pos:line="113" pos:column="10">-&gt;<pos:position pos:line="113" pos:column="15"/></operator><name pos:line="113" pos:column="12">type<pos:position pos:line="113" pos:column="16"/></name></name> <operator pos:line="113" pos:column="17">=<pos:position pos:line="113" pos:column="18"/></operator> <name pos:line="113" pos:column="19">SHORT<pos:position pos:line="113" pos:column="24"/></name></expr>;<pos:position pos:line="113" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="114" pos:column="9">l<pos:position pos:line="114" pos:column="10"/></name> <operator pos:line="114" pos:column="11">+=<pos:position pos:line="114" pos:column="13"/></operator> <name pos:line="114" pos:column="14">NSHORT<pos:position pos:line="114" pos:column="20"/></name></expr>;<pos:position pos:line="114" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="115" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="116" pos:column="5">else <if pos:line="116" pos:column="10">if <condition pos:line="116" pos:column="13">(<expr><call><name pos:line="116" pos:column="14">strncmp<pos:position pos:line="116" pos:column="21"/></name><argument_list pos:line="116" pos:column="21">(<argument><expr><name pos:line="116" pos:column="22">l<pos:position pos:line="116" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="25">"long"<pos:position pos:line="116" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="33">NLONG<pos:position pos:line="116" pos:column="38"/></name></expr></argument>)<pos:position pos:line="116" pos:column="39"/></argument_list></call> <operator pos:line="116" pos:column="40">==<pos:position pos:line="116" pos:column="42"/></operator> <literal type="number" pos:line="116" pos:column="43">0<pos:position pos:line="116" pos:column="44"/></literal></expr>)<pos:position pos:line="116" pos:column="45"/></condition><then pos:line="116" pos:column="45"> <block pos:line="116" pos:column="46">{
	<expr_stmt><expr><name><name pos:line="117" pos:column="9">m<pos:position pos:line="117" pos:column="10"/></name><operator pos:line="117" pos:column="10">-&gt;<pos:position pos:line="117" pos:column="15"/></operator><name pos:line="117" pos:column="12">type<pos:position pos:line="117" pos:column="16"/></name></name> <operator pos:line="117" pos:column="17">=<pos:position pos:line="117" pos:column="18"/></operator> <name pos:line="117" pos:column="19">LONG<pos:position pos:line="117" pos:column="23"/></name></expr>;<pos:position pos:line="117" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="118" pos:column="9">l<pos:position pos:line="118" pos:column="10"/></name> <operator pos:line="118" pos:column="11">+=<pos:position pos:line="118" pos:column="13"/></operator> <name pos:line="118" pos:column="14">NLONG<pos:position pos:line="118" pos:column="19"/></name></expr>;<pos:position pos:line="118" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="119" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="120" pos:column="5">else <if pos:line="120" pos:column="10">if <condition pos:line="120" pos:column="13">(<expr><call><name pos:line="120" pos:column="14">strncmp<pos:position pos:line="120" pos:column="21"/></name><argument_list pos:line="120" pos:column="21">(<argument><expr><name pos:line="120" pos:column="22">l<pos:position pos:line="120" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="25">"string"<pos:position pos:line="120" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="120" pos:column="35">NSTRING<pos:position pos:line="120" pos:column="42"/></name></expr></argument>)<pos:position pos:line="120" pos:column="43"/></argument_list></call> <operator pos:line="120" pos:column="44">==<pos:position pos:line="120" pos:column="46"/></operator> <literal type="number" pos:line="120" pos:column="47">0<pos:position pos:line="120" pos:column="48"/></literal></expr>)<pos:position pos:line="120" pos:column="49"/></condition><then pos:line="120" pos:column="49"> <block pos:line="120" pos:column="50">{
	<expr_stmt><expr><name><name pos:line="121" pos:column="9">m<pos:position pos:line="121" pos:column="10"/></name><operator pos:line="121" pos:column="10">-&gt;<pos:position pos:line="121" pos:column="15"/></operator><name pos:line="121" pos:column="12">type<pos:position pos:line="121" pos:column="16"/></name></name> <operator pos:line="121" pos:column="17">=<pos:position pos:line="121" pos:column="18"/></operator> <name pos:line="121" pos:column="19">STRING<pos:position pos:line="121" pos:column="25"/></name></expr>;<pos:position pos:line="121" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="122" pos:column="9">l<pos:position pos:line="122" pos:column="10"/></name> <operator pos:line="122" pos:column="11">+=<pos:position pos:line="122" pos:column="13"/></operator> <name pos:line="122" pos:column="14">NSTRING<pos:position pos:line="122" pos:column="21"/></name></expr>;<pos:position pos:line="122" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="123" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="124" pos:column="5">else <if pos:line="124" pos:column="10">if <condition pos:line="124" pos:column="13">(<expr><call><name pos:line="124" pos:column="14">strncmp<pos:position pos:line="124" pos:column="21"/></name><argument_list pos:line="124" pos:column="21">(<argument><expr><name pos:line="124" pos:column="22">l<pos:position pos:line="124" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="25">"date"<pos:position pos:line="124" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="124" pos:column="33">NDATE<pos:position pos:line="124" pos:column="38"/></name></expr></argument>)<pos:position pos:line="124" pos:column="39"/></argument_list></call> <operator pos:line="124" pos:column="40">==<pos:position pos:line="124" pos:column="42"/></operator> <literal type="number" pos:line="124" pos:column="43">0<pos:position pos:line="124" pos:column="44"/></literal></expr>)<pos:position pos:line="124" pos:column="45"/></condition><then pos:line="124" pos:column="45"> <block pos:line="124" pos:column="46">{
	<expr_stmt><expr><name><name pos:line="125" pos:column="9">m<pos:position pos:line="125" pos:column="10"/></name><operator pos:line="125" pos:column="10">-&gt;<pos:position pos:line="125" pos:column="15"/></operator><name pos:line="125" pos:column="12">type<pos:position pos:line="125" pos:column="16"/></name></name> <operator pos:line="125" pos:column="17">=<pos:position pos:line="125" pos:column="18"/></operator> <name pos:line="125" pos:column="19">DATE<pos:position pos:line="125" pos:column="23"/></name></expr>;<pos:position pos:line="125" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="126" pos:column="9">l<pos:position pos:line="126" pos:column="10"/></name> <operator pos:line="126" pos:column="11">+=<pos:position pos:line="126" pos:column="13"/></operator> <name pos:line="126" pos:column="14">NDATE<pos:position pos:line="126" pos:column="19"/></name></expr>;<pos:position pos:line="126" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="127" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="128" pos:column="5">else <if pos:line="128" pos:column="10">if <condition pos:line="128" pos:column="13">(<expr><call><name pos:line="128" pos:column="14">strncmp<pos:position pos:line="128" pos:column="21"/></name><argument_list pos:line="128" pos:column="21">(<argument><expr><name pos:line="128" pos:column="22">l<pos:position pos:line="128" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="25">"beshort"<pos:position pos:line="128" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="128" pos:column="36">NBESHORT<pos:position pos:line="128" pos:column="44"/></name></expr></argument>)<pos:position pos:line="128" pos:column="45"/></argument_list></call> <operator pos:line="128" pos:column="46">==<pos:position pos:line="128" pos:column="48"/></operator> <literal type="number" pos:line="128" pos:column="49">0<pos:position pos:line="128" pos:column="50"/></literal></expr>)<pos:position pos:line="128" pos:column="51"/></condition><then pos:line="128" pos:column="51"> <block pos:line="128" pos:column="52">{
	<expr_stmt><expr><name><name pos:line="129" pos:column="9">m<pos:position pos:line="129" pos:column="10"/></name><operator pos:line="129" pos:column="10">-&gt;<pos:position pos:line="129" pos:column="15"/></operator><name pos:line="129" pos:column="12">type<pos:position pos:line="129" pos:column="16"/></name></name> <operator pos:line="129" pos:column="17">=<pos:position pos:line="129" pos:column="18"/></operator> <name pos:line="129" pos:column="19">BESHORT<pos:position pos:line="129" pos:column="26"/></name></expr>;<pos:position pos:line="129" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="130" pos:column="9">l<pos:position pos:line="130" pos:column="10"/></name> <operator pos:line="130" pos:column="11">+=<pos:position pos:line="130" pos:column="13"/></operator> <name pos:line="130" pos:column="14">NBESHORT<pos:position pos:line="130" pos:column="22"/></name></expr>;<pos:position pos:line="130" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="131" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="132" pos:column="5">else <if pos:line="132" pos:column="10">if <condition pos:line="132" pos:column="13">(<expr><call><name pos:line="132" pos:column="14">strncmp<pos:position pos:line="132" pos:column="21"/></name><argument_list pos:line="132" pos:column="21">(<argument><expr><name pos:line="132" pos:column="22">l<pos:position pos:line="132" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="25">"belong"<pos:position pos:line="132" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="35">NBELONG<pos:position pos:line="132" pos:column="42"/></name></expr></argument>)<pos:position pos:line="132" pos:column="43"/></argument_list></call> <operator pos:line="132" pos:column="44">==<pos:position pos:line="132" pos:column="46"/></operator> <literal type="number" pos:line="132" pos:column="47">0<pos:position pos:line="132" pos:column="48"/></literal></expr>)<pos:position pos:line="132" pos:column="49"/></condition><then pos:line="132" pos:column="49"> <block pos:line="132" pos:column="50">{
	<expr_stmt><expr><name><name pos:line="133" pos:column="9">m<pos:position pos:line="133" pos:column="10"/></name><operator pos:line="133" pos:column="10">-&gt;<pos:position pos:line="133" pos:column="15"/></operator><name pos:line="133" pos:column="12">type<pos:position pos:line="133" pos:column="16"/></name></name> <operator pos:line="133" pos:column="17">=<pos:position pos:line="133" pos:column="18"/></operator> <name pos:line="133" pos:column="19">BELONG<pos:position pos:line="133" pos:column="25"/></name></expr>;<pos:position pos:line="133" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="134" pos:column="9">l<pos:position pos:line="134" pos:column="10"/></name> <operator pos:line="134" pos:column="11">+=<pos:position pos:line="134" pos:column="13"/></operator> <name pos:line="134" pos:column="14">NBELONG<pos:position pos:line="134" pos:column="21"/></name></expr>;<pos:position pos:line="134" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="135" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="136" pos:column="5">else <if pos:line="136" pos:column="10">if <condition pos:line="136" pos:column="13">(<expr><call><name pos:line="136" pos:column="14">strncmp<pos:position pos:line="136" pos:column="21"/></name><argument_list pos:line="136" pos:column="21">(<argument><expr><name pos:line="136" pos:column="22">l<pos:position pos:line="136" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="25">"bedate"<pos:position pos:line="136" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="136" pos:column="35">NBEDATE<pos:position pos:line="136" pos:column="42"/></name></expr></argument>)<pos:position pos:line="136" pos:column="43"/></argument_list></call> <operator pos:line="136" pos:column="44">==<pos:position pos:line="136" pos:column="46"/></operator> <literal type="number" pos:line="136" pos:column="47">0<pos:position pos:line="136" pos:column="48"/></literal></expr>)<pos:position pos:line="136" pos:column="49"/></condition><then pos:line="136" pos:column="49"> <block pos:line="136" pos:column="50">{
	<expr_stmt><expr><name><name pos:line="137" pos:column="9">m<pos:position pos:line="137" pos:column="10"/></name><operator pos:line="137" pos:column="10">-&gt;<pos:position pos:line="137" pos:column="15"/></operator><name pos:line="137" pos:column="12">type<pos:position pos:line="137" pos:column="16"/></name></name> <operator pos:line="137" pos:column="17">=<pos:position pos:line="137" pos:column="18"/></operator> <name pos:line="137" pos:column="19">BEDATE<pos:position pos:line="137" pos:column="25"/></name></expr>;<pos:position pos:line="137" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="138" pos:column="9">l<pos:position pos:line="138" pos:column="10"/></name> <operator pos:line="138" pos:column="11">+=<pos:position pos:line="138" pos:column="13"/></operator> <name pos:line="138" pos:column="14">NBEDATE<pos:position pos:line="138" pos:column="21"/></name></expr>;<pos:position pos:line="138" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="139" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="140" pos:column="5">else <if pos:line="140" pos:column="10">if <condition pos:line="140" pos:column="13">(<expr><call><name pos:line="140" pos:column="14">strncmp<pos:position pos:line="140" pos:column="21"/></name><argument_list pos:line="140" pos:column="21">(<argument><expr><name pos:line="140" pos:column="22">l<pos:position pos:line="140" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="25">"leshort"<pos:position pos:line="140" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="140" pos:column="36">NLESHORT<pos:position pos:line="140" pos:column="44"/></name></expr></argument>)<pos:position pos:line="140" pos:column="45"/></argument_list></call> <operator pos:line="140" pos:column="46">==<pos:position pos:line="140" pos:column="48"/></operator> <literal type="number" pos:line="140" pos:column="49">0<pos:position pos:line="140" pos:column="50"/></literal></expr>)<pos:position pos:line="140" pos:column="51"/></condition><then pos:line="140" pos:column="51"> <block pos:line="140" pos:column="52">{
	<expr_stmt><expr><name><name pos:line="141" pos:column="9">m<pos:position pos:line="141" pos:column="10"/></name><operator pos:line="141" pos:column="10">-&gt;<pos:position pos:line="141" pos:column="15"/></operator><name pos:line="141" pos:column="12">type<pos:position pos:line="141" pos:column="16"/></name></name> <operator pos:line="141" pos:column="17">=<pos:position pos:line="141" pos:column="18"/></operator> <name pos:line="141" pos:column="19">LESHORT<pos:position pos:line="141" pos:column="26"/></name></expr>;<pos:position pos:line="141" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="142" pos:column="9">l<pos:position pos:line="142" pos:column="10"/></name> <operator pos:line="142" pos:column="11">+=<pos:position pos:line="142" pos:column="13"/></operator> <name pos:line="142" pos:column="14">NLESHORT<pos:position pos:line="142" pos:column="22"/></name></expr>;<pos:position pos:line="142" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="143" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="144" pos:column="5">else <if pos:line="144" pos:column="10">if <condition pos:line="144" pos:column="13">(<expr><call><name pos:line="144" pos:column="14">strncmp<pos:position pos:line="144" pos:column="21"/></name><argument_list pos:line="144" pos:column="21">(<argument><expr><name pos:line="144" pos:column="22">l<pos:position pos:line="144" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="25">"lelong"<pos:position pos:line="144" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="144" pos:column="35">NLELONG<pos:position pos:line="144" pos:column="42"/></name></expr></argument>)<pos:position pos:line="144" pos:column="43"/></argument_list></call> <operator pos:line="144" pos:column="44">==<pos:position pos:line="144" pos:column="46"/></operator> <literal type="number" pos:line="144" pos:column="47">0<pos:position pos:line="144" pos:column="48"/></literal></expr>)<pos:position pos:line="144" pos:column="49"/></condition><then pos:line="144" pos:column="49"> <block pos:line="144" pos:column="50">{
	<expr_stmt><expr><name><name pos:line="145" pos:column="9">m<pos:position pos:line="145" pos:column="10"/></name><operator pos:line="145" pos:column="10">-&gt;<pos:position pos:line="145" pos:column="15"/></operator><name pos:line="145" pos:column="12">type<pos:position pos:line="145" pos:column="16"/></name></name> <operator pos:line="145" pos:column="17">=<pos:position pos:line="145" pos:column="18"/></operator> <name pos:line="145" pos:column="19">LELONG<pos:position pos:line="145" pos:column="25"/></name></expr>;<pos:position pos:line="145" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="146" pos:column="9">l<pos:position pos:line="146" pos:column="10"/></name> <operator pos:line="146" pos:column="11">+=<pos:position pos:line="146" pos:column="13"/></operator> <name pos:line="146" pos:column="14">NLELONG<pos:position pos:line="146" pos:column="21"/></name></expr>;<pos:position pos:line="146" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="148" pos:column="5">else <if pos:line="148" pos:column="10">if <condition pos:line="148" pos:column="13">(<expr><call><name pos:line="148" pos:column="14">strncmp<pos:position pos:line="148" pos:column="21"/></name><argument_list pos:line="148" pos:column="21">(<argument><expr><name pos:line="148" pos:column="22">l<pos:position pos:line="148" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="25">"ledate"<pos:position pos:line="148" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="148" pos:column="35">NLEDATE<pos:position pos:line="148" pos:column="42"/></name></expr></argument>)<pos:position pos:line="148" pos:column="43"/></argument_list></call> <operator pos:line="148" pos:column="44">==<pos:position pos:line="148" pos:column="46"/></operator> <literal type="number" pos:line="148" pos:column="47">0<pos:position pos:line="148" pos:column="48"/></literal></expr>)<pos:position pos:line="148" pos:column="49"/></condition><then pos:line="148" pos:column="49"> <block pos:line="148" pos:column="50">{
	<expr_stmt><expr><name><name pos:line="149" pos:column="9">m<pos:position pos:line="149" pos:column="10"/></name><operator pos:line="149" pos:column="10">-&gt;<pos:position pos:line="149" pos:column="15"/></operator><name pos:line="149" pos:column="12">type<pos:position pos:line="149" pos:column="16"/></name></name> <operator pos:line="149" pos:column="17">=<pos:position pos:line="149" pos:column="18"/></operator> <name pos:line="149" pos:column="19">LEDATE<pos:position pos:line="149" pos:column="25"/></name></expr>;<pos:position pos:line="149" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="150" pos:column="9">l<pos:position pos:line="150" pos:column="10"/></name> <operator pos:line="150" pos:column="11">+=<pos:position pos:line="150" pos:column="13"/></operator> <name pos:line="150" pos:column="14">NLEDATE<pos:position pos:line="150" pos:column="21"/></name></expr>;<pos:position pos:line="150" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="151" pos:column="6"/></block></then></if></elseif>
    <else pos:line="152" pos:column="5">else <block pos:line="152" pos:column="10">{
	<expr_stmt><expr><call><name pos:line="153" pos:column="9">ap_log_error<pos:position pos:line="153" pos:column="21"/></name><argument_list pos:line="153" pos:column="21">(<argument><expr><name pos:line="153" pos:column="22">APLOG_MARK<pos:position pos:line="153" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="34">APLOG_ERR<pos:position pos:line="153" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="153" pos:column="45">0<pos:position pos:line="153" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="48">serv<pos:position pos:line="153" pos:column="52"/></name></expr></argument>,
		    <argument><expr><name pos:line="154" pos:column="21">MODNAME<pos:position pos:line="154" pos:column="28"/></name> <literal type="string" pos:line="154" pos:column="29">": type %s invalid"<pos:position pos:line="154" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="154" pos:column="50">l<pos:position pos:line="154" pos:column="51"/></name></expr></argument>)<pos:position pos:line="154" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="53"/></expr_stmt>
	<return pos:line="155" pos:column="9">return <expr><operator pos:line="155" pos:column="16">-<pos:position pos:line="155" pos:column="17"/></operator><literal type="number" pos:line="155" pos:column="17">1<pos:position pos:line="155" pos:column="18"/></literal></expr>;<pos:position pos:line="155" pos:column="19"/></return>
    }<pos:position pos:line="156" pos:column="6"/></block></else></if>
    <comment type="block" pos:line="157" pos:column="5">/* New-style anding: "0 byte&amp;0x80 =0x80 dynamically linked" */</comment>
    <if pos:line="158" pos:column="5">if <condition pos:line="158" pos:column="8">(<expr><operator pos:line="158" pos:column="9">*<pos:position pos:line="158" pos:column="10"/></operator><name pos:line="158" pos:column="10">l<pos:position pos:line="158" pos:column="11"/></name> <operator pos:line="158" pos:column="12">==<pos:position pos:line="158" pos:column="14"/></operator> <literal type="char" pos:line="158" pos:column="15">'&amp;'<pos:position pos:line="158" pos:column="22"/></literal></expr>)<pos:position pos:line="158" pos:column="19"/></condition><then pos:line="158" pos:column="19"> <block pos:line="158" pos:column="20">{
	<expr_stmt><expr><operator pos:line="159" pos:column="9">++<pos:position pos:line="159" pos:column="11"/></operator><name pos:line="159" pos:column="11">l<pos:position pos:line="159" pos:column="12"/></name></expr>;<pos:position pos:line="159" pos:column="13"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="160" pos:column="9">m<pos:position pos:line="160" pos:column="10"/></name><operator pos:line="160" pos:column="10">-&gt;<pos:position pos:line="160" pos:column="15"/></operator><name pos:line="160" pos:column="12">mask<pos:position pos:line="160" pos:column="16"/></name></name> <operator pos:line="160" pos:column="17">=<pos:position pos:line="160" pos:column="18"/></operator> <call><name pos:line="160" pos:column="19">signextend<pos:position pos:line="160" pos:column="29"/></name><argument_list pos:line="160" pos:column="29">(<argument><expr><name pos:line="160" pos:column="30">serv<pos:position pos:line="160" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="36">m<pos:position pos:line="160" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="160" pos:column="39">strtol<pos:position pos:line="160" pos:column="45"/></name><argument_list pos:line="160" pos:column="45">(<argument><expr><name pos:line="160" pos:column="46">l<pos:position pos:line="160" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="160" pos:column="49">&amp;<pos:position pos:line="160" pos:column="54"/></operator><name pos:line="160" pos:column="50">l<pos:position pos:line="160" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="160" pos:column="53">0<pos:position pos:line="160" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="160" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="161" pos:column="6"/></block></then>
    <else pos:line="162" pos:column="5">else
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="163" pos:column="9">m<pos:position pos:line="163" pos:column="10"/></name><operator pos:line="163" pos:column="10">-&gt;<pos:position pos:line="163" pos:column="15"/></operator><name pos:line="163" pos:column="12">mask<pos:position pos:line="163" pos:column="16"/></name></name> <operator pos:line="163" pos:column="17">=<pos:position pos:line="163" pos:column="18"/></operator> <operator pos:line="163" pos:column="19">~<pos:position pos:line="163" pos:column="20"/></operator><literal type="number" pos:line="163" pos:column="20">0L<pos:position pos:line="163" pos:column="22"/></literal></expr>;<pos:position pos:line="163" pos:column="23"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name pos:line="164" pos:column="5">EATAB<pos:position pos:line="164" pos:column="10"/></name></expr>;<pos:position pos:line="164" pos:column="11"/></expr_stmt>

    <switch pos:line="166" pos:column="5">switch <condition pos:line="166" pos:column="12">(<expr><operator pos:line="166" pos:column="13">*<pos:position pos:line="166" pos:column="14"/></operator><name pos:line="166" pos:column="14">l<pos:position pos:line="166" pos:column="15"/></name></expr>)<pos:position pos:line="166" pos:column="16"/></condition> <block pos:line="166" pos:column="17">{
    <case pos:line="167" pos:column="5">case <expr><literal type="char" pos:line="167" pos:column="10">'&gt;'<pos:position pos:line="167" pos:column="16"/></literal></expr>:<pos:position pos:line="167" pos:column="14"/></case>
    <case pos:line="168" pos:column="5">case <expr><literal type="char" pos:line="168" pos:column="10">'&lt;'<pos:position pos:line="168" pos:column="16"/></literal></expr>:<pos:position pos:line="168" pos:column="14"/></case>
	<comment type="block" pos:line="169" pos:column="9">/* Old-style anding: "0 byte &amp;0x80 dynamically linked" */</comment>
    <case pos:line="170" pos:column="5">case <expr><literal type="char" pos:line="170" pos:column="10">'&amp;'<pos:position pos:line="170" pos:column="17"/></literal></expr>:<pos:position pos:line="170" pos:column="14"/></case>
    <case pos:line="171" pos:column="5">case <expr><literal type="char" pos:line="171" pos:column="10">'^'<pos:position pos:line="171" pos:column="13"/></literal></expr>:<pos:position pos:line="171" pos:column="14"/></case>
    <case pos:line="172" pos:column="5">case <expr><literal type="char" pos:line="172" pos:column="10">'='<pos:position pos:line="172" pos:column="13"/></literal></expr>:<pos:position pos:line="172" pos:column="14"/></case>
	<expr_stmt><expr><name><name pos:line="173" pos:column="9">m<pos:position pos:line="173" pos:column="10"/></name><operator pos:line="173" pos:column="10">-&gt;<pos:position pos:line="173" pos:column="15"/></operator><name pos:line="173" pos:column="12">reln<pos:position pos:line="173" pos:column="16"/></name></name> <operator pos:line="173" pos:column="17">=<pos:position pos:line="173" pos:column="18"/></operator> <operator pos:line="173" pos:column="19">*<pos:position pos:line="173" pos:column="20"/></operator><name pos:line="173" pos:column="20">l<pos:position pos:line="173" pos:column="21"/></name></expr>;<pos:position pos:line="173" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="174" pos:column="9">++<pos:position pos:line="174" pos:column="11"/></operator><name pos:line="174" pos:column="11">l<pos:position pos:line="174" pos:column="12"/></name></expr>;<pos:position pos:line="174" pos:column="13"/></expr_stmt>
	<break pos:line="175" pos:column="9">break;<pos:position pos:line="175" pos:column="15"/></break>
    <case pos:line="176" pos:column="5">case <expr><literal type="char" pos:line="176" pos:column="10">'!'<pos:position pos:line="176" pos:column="13"/></literal></expr>:<pos:position pos:line="176" pos:column="14"/></case>
	<if pos:line="177" pos:column="9">if <condition pos:line="177" pos:column="12">(<expr><name><name pos:line="177" pos:column="13">m<pos:position pos:line="177" pos:column="14"/></name><operator pos:line="177" pos:column="14">-&gt;<pos:position pos:line="177" pos:column="19"/></operator><name pos:line="177" pos:column="16">type<pos:position pos:line="177" pos:column="20"/></name></name> <operator pos:line="177" pos:column="21">!=<pos:position pos:line="177" pos:column="23"/></operator> <name pos:line="177" pos:column="24">STRING<pos:position pos:line="177" pos:column="30"/></name></expr>)<pos:position pos:line="177" pos:column="31"/></condition><then pos:line="177" pos:column="31"> <block pos:line="177" pos:column="32">{
	    <expr_stmt><expr><name><name pos:line="178" pos:column="13">m<pos:position pos:line="178" pos:column="14"/></name><operator pos:line="178" pos:column="14">-&gt;<pos:position pos:line="178" pos:column="19"/></operator><name pos:line="178" pos:column="16">reln<pos:position pos:line="178" pos:column="20"/></name></name> <operator pos:line="178" pos:column="21">=<pos:position pos:line="178" pos:column="22"/></operator> <operator pos:line="178" pos:column="23">*<pos:position pos:line="178" pos:column="24"/></operator><name pos:line="178" pos:column="24">l<pos:position pos:line="178" pos:column="25"/></name></expr>;<pos:position pos:line="178" pos:column="26"/></expr_stmt>
	    <expr_stmt><expr><operator pos:line="179" pos:column="13">++<pos:position pos:line="179" pos:column="15"/></operator><name pos:line="179" pos:column="15">l<pos:position pos:line="179" pos:column="16"/></name></expr>;<pos:position pos:line="179" pos:column="17"/></expr_stmt>
	    <break pos:line="180" pos:column="13">break;<pos:position pos:line="180" pos:column="19"/></break>
	}<pos:position pos:line="181" pos:column="10"/></block></then></if>
	<comment type="block" pos:line="182" pos:column="9">/* FALL THROUGH */</comment>
    <default pos:line="183" pos:column="5">default:<pos:position pos:line="183" pos:column="13"/></default>
	<if pos:line="184" pos:column="9">if <condition pos:line="184" pos:column="12">(<expr><operator pos:line="184" pos:column="13">*<pos:position pos:line="184" pos:column="14"/></operator><name pos:line="184" pos:column="14">l<pos:position pos:line="184" pos:column="15"/></name> <operator pos:line="184" pos:column="16">==<pos:position pos:line="184" pos:column="18"/></operator> <literal type="char" pos:line="184" pos:column="19">'x'<pos:position pos:line="184" pos:column="22"/></literal> <operator pos:line="184" pos:column="23">&amp;&amp;<pos:position pos:line="184" pos:column="33"/></operator> <call><name pos:line="184" pos:column="26">apr_isspace<pos:position pos:line="184" pos:column="37"/></name><argument_list pos:line="184" pos:column="37">(<argument><expr><name><name pos:line="184" pos:column="38">l<pos:position pos:line="184" pos:column="39"/></name><index pos:line="184" pos:column="39">[<expr><literal type="number" pos:line="184" pos:column="40">1<pos:position pos:line="184" pos:column="41"/></literal></expr>]<pos:position pos:line="184" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="184" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="184" pos:column="44"/></condition><then pos:line="184" pos:column="44"> <block pos:line="184" pos:column="45">{
	    <expr_stmt><expr><name><name pos:line="185" pos:column="13">m<pos:position pos:line="185" pos:column="14"/></name><operator pos:line="185" pos:column="14">-&gt;<pos:position pos:line="185" pos:column="19"/></operator><name pos:line="185" pos:column="16">reln<pos:position pos:line="185" pos:column="20"/></name></name> <operator pos:line="185" pos:column="21">=<pos:position pos:line="185" pos:column="22"/></operator> <operator pos:line="185" pos:column="23">*<pos:position pos:line="185" pos:column="24"/></operator><name pos:line="185" pos:column="24">l<pos:position pos:line="185" pos:column="25"/></name></expr>;<pos:position pos:line="185" pos:column="26"/></expr_stmt>
	    <expr_stmt><expr><operator pos:line="186" pos:column="13">++<pos:position pos:line="186" pos:column="15"/></operator><name pos:line="186" pos:column="15">l<pos:position pos:line="186" pos:column="16"/></name></expr>;<pos:position pos:line="186" pos:column="17"/></expr_stmt>
	    <goto pos:line="187" pos:column="13">goto <name pos:line="187" pos:column="18">GetDesc<pos:position pos:line="187" pos:column="25"/></name>;<pos:position pos:line="187" pos:column="26"/></goto>	<comment type="block" pos:line="187" pos:column="33">/* Bill The Cat */</comment>
	}<pos:position pos:line="188" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="189" pos:column="9">m<pos:position pos:line="189" pos:column="10"/></name><operator pos:line="189" pos:column="10">-&gt;<pos:position pos:line="189" pos:column="15"/></operator><name pos:line="189" pos:column="12">reln<pos:position pos:line="189" pos:column="16"/></name></name> <operator pos:line="189" pos:column="17">=<pos:position pos:line="189" pos:column="18"/></operator> <literal type="char" pos:line="189" pos:column="19">'='<pos:position pos:line="189" pos:column="22"/></literal></expr>;<pos:position pos:line="189" pos:column="23"/></expr_stmt>
	<break pos:line="190" pos:column="9">break;<pos:position pos:line="190" pos:column="15"/></break>
    }<pos:position pos:line="191" pos:column="6"/></block></switch>
    <expr_stmt><expr><name pos:line="192" pos:column="5">EATAB<pos:position pos:line="192" pos:column="10"/></name></expr>;<pos:position pos:line="192" pos:column="11"/></expr_stmt>

    <if pos:line="194" pos:column="5">if <condition pos:line="194" pos:column="8">(<expr><call><name pos:line="194" pos:column="9">getvalue<pos:position pos:line="194" pos:column="17"/></name><argument_list pos:line="194" pos:column="17">(<argument><expr><name pos:line="194" pos:column="18">serv<pos:position pos:line="194" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="24">m<pos:position pos:line="194" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="194" pos:column="27">&amp;<pos:position pos:line="194" pos:column="32"/></operator><name pos:line="194" pos:column="28">l<pos:position pos:line="194" pos:column="29"/></name></expr></argument>)<pos:position pos:line="194" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="194" pos:column="31"/></condition><then pos:line="194" pos:column="31">
	<block type="pseudo"><return pos:line="195" pos:column="9">return <expr><operator pos:line="195" pos:column="16">-<pos:position pos:line="195" pos:column="17"/></operator><literal type="number" pos:line="195" pos:column="17">1<pos:position pos:line="195" pos:column="18"/></literal></expr>;<pos:position pos:line="195" pos:column="19"/></return></block></then></if>
    <comment type="block" pos:line="196" pos:column="5">/*
     * now get last part - the description
     */</comment>
  <label><name pos:line="199" pos:column="3">GetDesc<pos:position pos:line="199" pos:column="10"/></name>:<pos:position pos:line="199" pos:column="11"/></label>
    <expr_stmt><expr><name pos:line="200" pos:column="5">EATAB<pos:position pos:line="200" pos:column="10"/></name></expr>;<pos:position pos:line="200" pos:column="11"/></expr_stmt>
    <if pos:line="201" pos:column="5">if <condition pos:line="201" pos:column="8">(<expr><name><name pos:line="201" pos:column="9">l<pos:position pos:line="201" pos:column="10"/></name><index pos:line="201" pos:column="10">[<expr><literal type="number" pos:line="201" pos:column="11">0<pos:position pos:line="201" pos:column="12"/></literal></expr>]<pos:position pos:line="201" pos:column="13"/></index></name> <operator pos:line="201" pos:column="14">==<pos:position pos:line="201" pos:column="16"/></operator> <literal type="char" pos:line="201" pos:column="17">'\b'<pos:position pos:line="201" pos:column="21"/></literal></expr>)<pos:position pos:line="201" pos:column="22"/></condition><then pos:line="201" pos:column="22"> <block pos:line="201" pos:column="23">{
	<expr_stmt><expr><operator pos:line="202" pos:column="9">++<pos:position pos:line="202" pos:column="11"/></operator><name pos:line="202" pos:column="11">l<pos:position pos:line="202" pos:column="12"/></name></expr>;<pos:position pos:line="202" pos:column="13"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="203" pos:column="9">m<pos:position pos:line="203" pos:column="10"/></name><operator pos:line="203" pos:column="10">-&gt;<pos:position pos:line="203" pos:column="15"/></operator><name pos:line="203" pos:column="12">nospflag<pos:position pos:line="203" pos:column="20"/></name></name> <operator pos:line="203" pos:column="21">=<pos:position pos:line="203" pos:column="22"/></operator> <literal type="number" pos:line="203" pos:column="23">1<pos:position pos:line="203" pos:column="24"/></literal></expr>;<pos:position pos:line="203" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="204" pos:column="6"/></block></then>
    <elseif pos:line="205" pos:column="5">else <if pos:line="205" pos:column="10">if <condition pos:line="205" pos:column="13">(<expr><operator pos:line="205" pos:column="14">(<pos:position pos:line="205" pos:column="15"/></operator><name><name pos:line="205" pos:column="15">l<pos:position pos:line="205" pos:column="16"/></name><index pos:line="205" pos:column="16">[<expr><literal type="number" pos:line="205" pos:column="17">0<pos:position pos:line="205" pos:column="18"/></literal></expr>]<pos:position pos:line="205" pos:column="19"/></index></name> <operator pos:line="205" pos:column="20">==<pos:position pos:line="205" pos:column="22"/></operator> <literal type="char" pos:line="205" pos:column="23">'\\'<pos:position pos:line="205" pos:column="27"/></literal><operator pos:line="205" pos:column="27">)<pos:position pos:line="205" pos:column="28"/></operator> <operator pos:line="205" pos:column="29">&amp;&amp;<pos:position pos:line="205" pos:column="39"/></operator> <operator pos:line="205" pos:column="32">(<pos:position pos:line="205" pos:column="33"/></operator><name><name pos:line="205" pos:column="33">l<pos:position pos:line="205" pos:column="34"/></name><index pos:line="205" pos:column="34">[<expr><literal type="number" pos:line="205" pos:column="35">1<pos:position pos:line="205" pos:column="36"/></literal></expr>]<pos:position pos:line="205" pos:column="37"/></index></name> <operator pos:line="205" pos:column="38">==<pos:position pos:line="205" pos:column="40"/></operator> <literal type="char" pos:line="205" pos:column="41">'b'<pos:position pos:line="205" pos:column="44"/></literal><operator pos:line="205" pos:column="44">)<pos:position pos:line="205" pos:column="45"/></operator></expr>)<pos:position pos:line="205" pos:column="46"/></condition><then pos:line="205" pos:column="46"> <block pos:line="205" pos:column="47">{
	<expr_stmt><expr><operator pos:line="206" pos:column="9">++<pos:position pos:line="206" pos:column="11"/></operator><name pos:line="206" pos:column="11">l<pos:position pos:line="206" pos:column="12"/></name></expr>;<pos:position pos:line="206" pos:column="13"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="207" pos:column="9">++<pos:position pos:line="207" pos:column="11"/></operator><name pos:line="207" pos:column="11">l<pos:position pos:line="207" pos:column="12"/></name></expr>;<pos:position pos:line="207" pos:column="13"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="208" pos:column="9">m<pos:position pos:line="208" pos:column="10"/></name><operator pos:line="208" pos:column="10">-&gt;<pos:position pos:line="208" pos:column="15"/></operator><name pos:line="208" pos:column="12">nospflag<pos:position pos:line="208" pos:column="20"/></name></name> <operator pos:line="208" pos:column="21">=<pos:position pos:line="208" pos:column="22"/></operator> <literal type="number" pos:line="208" pos:column="23">1<pos:position pos:line="208" pos:column="24"/></literal></expr>;<pos:position pos:line="208" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="209" pos:column="6"/></block></then></if></elseif>
    <else pos:line="210" pos:column="5">else
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="211" pos:column="9">m<pos:position pos:line="211" pos:column="10"/></name><operator pos:line="211" pos:column="10">-&gt;<pos:position pos:line="211" pos:column="15"/></operator><name pos:line="211" pos:column="12">nospflag<pos:position pos:line="211" pos:column="20"/></name></name> <operator pos:line="211" pos:column="21">=<pos:position pos:line="211" pos:column="22"/></operator> <literal type="number" pos:line="211" pos:column="23">0<pos:position pos:line="211" pos:column="24"/></literal></expr>;<pos:position pos:line="211" pos:column="25"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="212" pos:column="5">strncpy<pos:position pos:line="212" pos:column="12"/></name><argument_list pos:line="212" pos:column="12">(<argument><expr><name><name pos:line="212" pos:column="13">m<pos:position pos:line="212" pos:column="14"/></name><operator pos:line="212" pos:column="14">-&gt;<pos:position pos:line="212" pos:column="19"/></operator><name pos:line="212" pos:column="16">desc<pos:position pos:line="212" pos:column="20"/></name></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="22">l<pos:position pos:line="212" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="212" pos:column="25">sizeof<argument_list pos:line="212" pos:column="31">(<argument><expr><name><name pos:line="212" pos:column="32">m<pos:position pos:line="212" pos:column="33"/></name><operator pos:line="212" pos:column="33">-&gt;<pos:position pos:line="212" pos:column="38"/></operator><name pos:line="212" pos:column="35">desc<pos:position pos:line="212" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="212" pos:column="40"/></argument_list></sizeof> <operator pos:line="212" pos:column="41">-<pos:position pos:line="212" pos:column="42"/></operator> <literal type="number" pos:line="212" pos:column="43">1<pos:position pos:line="212" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="212" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="213" pos:column="5">m<pos:position pos:line="213" pos:column="6"/></name><operator pos:line="213" pos:column="6">-&gt;<pos:position pos:line="213" pos:column="11"/></operator><name pos:line="213" pos:column="8">desc<pos:position pos:line="213" pos:column="12"/></name><index pos:line="213" pos:column="12">[<expr><sizeof pos:line="213" pos:column="13">sizeof<argument_list pos:line="213" pos:column="19">(<argument><expr><name><name pos:line="213" pos:column="20">m<pos:position pos:line="213" pos:column="21"/></name><operator pos:line="213" pos:column="21">-&gt;<pos:position pos:line="213" pos:column="26"/></operator><name pos:line="213" pos:column="23">desc<pos:position pos:line="213" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="213" pos:column="28"/></argument_list></sizeof> <operator pos:line="213" pos:column="29">-<pos:position pos:line="213" pos:column="30"/></operator> <literal type="number" pos:line="213" pos:column="31">1<pos:position pos:line="213" pos:column="32"/></literal></expr>]<pos:position pos:line="213" pos:column="33"/></index></name> <operator pos:line="213" pos:column="34">=<pos:position pos:line="213" pos:column="35"/></operator> <literal type="char" pos:line="213" pos:column="36">'\0'<pos:position pos:line="213" pos:column="40"/></literal></expr>;<pos:position pos:line="213" pos:column="41"/></expr_stmt>

<cpp:if pos:line="215" pos:column="1">#<cpp:directive pos:line="215" pos:column="2">if<pos:position pos:line="215" pos:column="4"/></cpp:directive> <expr><name pos:line="215" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="215" pos:column="21"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="216" pos:column="5">ap_log_error<pos:position pos:line="216" pos:column="17"/></name><argument_list pos:line="216" pos:column="17">(<argument><expr><name pos:line="216" pos:column="18">APLOG_MARK<pos:position pos:line="216" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="30">APLOG_DEBUG<pos:position pos:line="216" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="216" pos:column="43">0<pos:position pos:line="216" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="216" pos:column="46">serv<pos:position pos:line="216" pos:column="50"/></name></expr></argument>,
		<argument><expr><name pos:line="217" pos:column="17">MODNAME<pos:position pos:line="217" pos:column="24"/></name> <literal type="string" pos:line="217" pos:column="25">": parse line=%d m=%x next=%x cont=%d desc=%s"<pos:position pos:line="217" pos:column="71"/></literal></expr></argument>,
		<argument><expr><name pos:line="218" pos:column="17">lineno<pos:position pos:line="218" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="25">m<pos:position pos:line="218" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="218" pos:column="28">m<pos:position pos:line="218" pos:column="29"/></name><operator pos:line="218" pos:column="29">-&gt;<pos:position pos:line="218" pos:column="34"/></operator><name pos:line="218" pos:column="31">next<pos:position pos:line="218" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="218" pos:column="37">m<pos:position pos:line="218" pos:column="38"/></name><operator pos:line="218" pos:column="38">-&gt;<pos:position pos:line="218" pos:column="43"/></operator><name pos:line="218" pos:column="40">cont_level<pos:position pos:line="218" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="218" pos:column="52">m<pos:position pos:line="218" pos:column="53"/></name><operator pos:line="218" pos:column="53">-&gt;<pos:position pos:line="218" pos:column="58"/></operator><name pos:line="218" pos:column="55">desc<pos:position pos:line="218" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="218" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="61"/></expr_stmt>
<cpp:endif pos:line="219" pos:column="1">#<cpp:directive pos:line="219" pos:column="2">endif<pos:position pos:line="219" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="219" pos:column="8">/* MIME_MAGIC_DEBUG */</comment>

    <return pos:line="221" pos:column="5">return <expr><literal type="number" pos:line="221" pos:column="12">0<pos:position pos:line="221" pos:column="13"/></literal></expr>;<pos:position pos:line="221" pos:column="14"/></return>
}<pos:position pos:line="222" pos:column="2"/></block></function></unit>

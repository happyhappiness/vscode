<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_357_httpd-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_propfind_walker<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">dav_walk_resource<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">wres<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">calltype<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_walker_ctx<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">ctx<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name><name pos:line="3" pos:column="27">wres<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">-&gt;<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="33">walk_ctx<pos:position pos:line="3" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">dav_error<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">err<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dav_propdb<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">propdb<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">dav_get_props_result<pos:position pos:line="6" pos:column="25"/></name></type> <name pos:line="6" pos:column="26">propstats<pos:position pos:line="6" pos:column="35"/></name> <init pos:line="6" pos:column="36">= <expr><block pos:line="6" pos:column="38">{ <expr><literal type="number" pos:line="6" pos:column="40">0<pos:position pos:line="6" pos:column="41"/></literal></expr> }<pos:position pos:line="6" pos:column="43"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/*
    ** Note: ctx-&gt;doc can only be NULL for DAV_PROPFIND_IS_ALLPROP. Since
    ** dav_get_allprops() does not need to do namespace translation,
    ** we're okay.
    **
    ** Note: we cast to lose the "const". The propdb won't try to change
    ** the resource, however, since we are opening readonly.
    */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">err<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <call><name pos:line="16" pos:column="11">dav_open_propdb<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name><name pos:line="16" pos:column="27">ctx<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">r<pos:position pos:line="16" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="35">ctx<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">w<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">.<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="42">lockdb<pos:position pos:line="16" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="50">wres<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">-&gt;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="56">resource<pos:position pos:line="16" pos:column="64"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="66">1<pos:position pos:line="16" pos:column="67"/></literal></expr></argument>,
                          <argument><expr><ternary><condition><expr><name><name pos:line="17" pos:column="27">ctx<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">doc<pos:position pos:line="17" pos:column="35"/></name></name></expr> ?<pos:position pos:line="17" pos:column="37"/></condition><then pos:line="17" pos:column="37"> <expr><name><name pos:line="17" pos:column="38">ctx<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">doc<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">namespaces<pos:position pos:line="17" pos:column="58"/></name></name></expr> <pos:position pos:line="17" pos:column="59"/></then><else pos:line="17" pos:column="59">: <expr><name pos:line="17" pos:column="61">NULL<pos:position pos:line="17" pos:column="65"/></name></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="17" pos:column="67">&amp;<pos:position pos:line="17" pos:column="72"/></operator><name pos:line="17" pos:column="68">propdb<pos:position pos:line="17" pos:column="74"/></name></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="76"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">err<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">!=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">NULL<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <block pos:line="18" pos:column="22">{
        <comment type="block" pos:line="19" pos:column="9">/* ### do something with err! */</comment>

        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">ctx<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">propfind_type<pos:position pos:line="21" pos:column="31"/></name></name> <operator pos:line="21" pos:column="32">==<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="35">DAV_PROPFIND_IS_PROP<pos:position pos:line="21" pos:column="55"/></name></expr>)<pos:position pos:line="21" pos:column="56"/></condition><then pos:line="21" pos:column="56"> <block pos:line="21" pos:column="57">{
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">dav_get_props_result<pos:position pos:line="22" pos:column="33"/></name></type> <name pos:line="22" pos:column="34">badprops<pos:position pos:line="22" pos:column="42"/></name> <init pos:line="22" pos:column="43">= <expr><block pos:line="22" pos:column="45">{ <expr><literal type="number" pos:line="22" pos:column="47">0<pos:position pos:line="22" pos:column="48"/></literal></expr> }<pos:position pos:line="22" pos:column="50"/></block></expr></init></decl>;<pos:position pos:line="22" pos:column="51"/></decl_stmt>

            <comment type="block" pos:line="24" pos:column="13">/* some props were expected on this collection/resource */</comment>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">dav_cache_badprops<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">ctx<pos:position pos:line="25" pos:column="35"/></name></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="26" pos:column="13">badprops<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">.<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">propstats<pos:position pos:line="26" pos:column="31"/></name></name> <operator pos:line="26" pos:column="32">=<pos:position pos:line="26" pos:column="33"/></operator> <name><name pos:line="26" pos:column="34">ctx<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">propstat_404<pos:position pos:line="26" pos:column="51"/></name></name></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">dav_stream_response<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">wres<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="39">0<pos:position pos:line="27" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="42">&amp;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="43">badprops<pos:position pos:line="27" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="53">ctx<pos:position pos:line="27" pos:column="56"/></name><operator pos:line="27" pos:column="56">-&gt;<pos:position pos:line="27" pos:column="61"/></operator><name pos:line="27" pos:column="58">scratchpool<pos:position pos:line="27" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then>
        <else pos:line="29" pos:column="9">else <block pos:line="29" pos:column="14">{
            <comment type="block" pos:line="30" pos:column="13">/* no props on this collection/resource */</comment>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">dav_stream_response<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name pos:line="31" pos:column="33">wres<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="39">HTTP_OK<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">NULL<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="54">ctx<pos:position pos:line="31" pos:column="57"/></name><operator pos:line="31" pos:column="57">-&gt;<pos:position pos:line="31" pos:column="62"/></operator><name pos:line="31" pos:column="59">scratchpool<pos:position pos:line="31" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="34" pos:column="9">apr_pool_clear<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name><name pos:line="34" pos:column="24">ctx<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">scratchpool<pos:position pos:line="34" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
        <return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">NULL<pos:position pos:line="35" pos:column="20"/></name></expr>;<pos:position pos:line="35" pos:column="21"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="37" pos:column="5">/* ### what to do about closing the propdb on server failure? */</comment>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">ctx<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">propfind_type<pos:position pos:line="39" pos:column="27"/></name></name> <operator pos:line="39" pos:column="28">==<pos:position pos:line="39" pos:column="30"/></operator> <name pos:line="39" pos:column="31">DAV_PROPFIND_IS_PROP<pos:position pos:line="39" pos:column="51"/></name></expr>)<pos:position pos:line="39" pos:column="52"/></condition><then pos:line="39" pos:column="52"> <block pos:line="39" pos:column="53">{
        <expr_stmt><expr><name pos:line="40" pos:column="9">propstats<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <call><name pos:line="40" pos:column="21">dav_get_props<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">propdb<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="43">ctx<pos:position pos:line="40" pos:column="46"/></name><operator pos:line="40" pos:column="46">-&gt;<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="48">doc<pos:position pos:line="40" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then>
    <else pos:line="42" pos:column="5">else <block pos:line="42" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="43" pos:column="9">dav_prop_insert<pos:position pos:line="43" pos:column="24"/></name></type> <name pos:line="43" pos:column="25">what<pos:position pos:line="43" pos:column="29"/></name> <init pos:line="43" pos:column="30">= <expr><ternary><condition><expr><name><name pos:line="43" pos:column="32">ctx<pos:position pos:line="43" pos:column="35"/></name><operator pos:line="43" pos:column="35">-&gt;<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="37">propfind_type<pos:position pos:line="43" pos:column="50"/></name></name> <operator pos:line="43" pos:column="51">==<pos:position pos:line="43" pos:column="53"/></operator> <name pos:line="43" pos:column="54">DAV_PROPFIND_IS_ALLPROP<pos:position pos:line="43" pos:column="77"/></name></expr>
                                 ?<pos:position pos:line="44" pos:column="35"/></condition><then pos:line="44" pos:column="35"> <expr><name pos:line="44" pos:column="36">DAV_PROP_INSERT_VALUE<pos:position pos:line="44" pos:column="57"/></name></expr>
                                 <pos:position pos:line="45" pos:column="34"/></then><else pos:line="45" pos:column="34">: <expr><name pos:line="45" pos:column="36">DAV_PROP_INSERT_NAME<pos:position pos:line="45" pos:column="56"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="45" pos:column="57"/></decl_stmt>
        <expr_stmt><expr><name pos:line="46" pos:column="9">propstats<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <call><name pos:line="46" pos:column="21">dav_get_allprops<pos:position pos:line="46" pos:column="37"/></name><argument_list pos:line="46" pos:column="37">(<argument><expr><name pos:line="46" pos:column="38">propdb<pos:position pos:line="46" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="46">what<pos:position pos:line="46" pos:column="50"/></name></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">dav_close_propdb<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">propdb<pos:position pos:line="48" pos:column="28"/></name></expr></argument>)<pos:position pos:line="48" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">dav_stream_response<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">wres<pos:position pos:line="50" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="31">0<pos:position pos:line="50" pos:column="32"/></literal></expr></argument>, <argument><expr><operator pos:line="50" pos:column="34">&amp;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="35">propstats<pos:position pos:line="50" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="46">ctx<pos:position pos:line="50" pos:column="49"/></name><operator pos:line="50" pos:column="49">-&gt;<pos:position pos:line="50" pos:column="54"/></operator><name pos:line="50" pos:column="51">scratchpool<pos:position pos:line="50" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="64"/></expr_stmt>

    <comment type="block" pos:line="52" pos:column="5">/* at this point, ctx-&gt;scratchpool has been used to stream a
       single response.  this function fully controls the pool, and
       thus has the right to clear it for the next iteration of this
       callback. */</comment>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">apr_pool_clear<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><name><name pos:line="56" pos:column="20">ctx<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">-&gt;<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="25">scratchpool<pos:position pos:line="56" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="38"/></expr_stmt>

    <return pos:line="58" pos:column="5">return <expr><name pos:line="58" pos:column="12">NULL<pos:position pos:line="58" pos:column="16"/></name></expr>;<pos:position pos:line="58" pos:column="17"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3454_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">aprerr<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">fn<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">apr_status_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">rv<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">buf<pos:position pos:line="3" pos:column="13"/></name><index pos:line="3" pos:column="13">[<expr><literal type="number" pos:line="3" pos:column="14">120<pos:position pos:line="3" pos:column="17"/></literal></expr>]<pos:position pos:line="3" pos:column="18"/></index></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">fprintf<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">stderr<pos:position pos:line="5" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="21">"%s-&gt;%d/%s\n"<pos:position pos:line="5" pos:column="37"/></literal></expr></argument>,
            <argument><expr><name pos:line="6" pos:column="13">fn<pos:position pos:line="6" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="17">rv<pos:position pos:line="6" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="21">apr_strerror<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name pos:line="6" pos:column="34">rv<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="38">buf<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="43">sizeof <name pos:line="6" pos:column="50">buf<pos:position pos:line="6" pos:column="53"/></name></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">exit<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><literal type="number" pos:line="7" pos:column="10">1<pos:position pos:line="7" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="13"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

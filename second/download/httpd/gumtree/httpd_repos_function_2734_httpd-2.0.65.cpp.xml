<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2734_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name> <name pos:line="1" pos:column="12">PTRCALL<pos:position pos:line="1" pos:column="19"/></name>
<name pos:line="2" pos:column="1">PREFIX<pos:position pos:line="2" pos:column="7"/></name></type>(<name pos:line="2" pos:column="8">scanEndTag<pos:position pos:line="2" pos:column="18"/></name>)<parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">ENCODING<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">enc<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">ptr<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
                   <parameter><decl><type><specifier pos:line="3" pos:column="20">const<pos:position pos:line="3" pos:column="25"/></specifier> <name pos:line="3" pos:column="26">char<pos:position pos:line="3" pos:column="30"/></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">end<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="37">const<pos:position pos:line="3" pos:column="42"/></specifier> <name pos:line="3" pos:column="43">char<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier><modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type><name pos:line="3" pos:column="50">nextTokPtr<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="61"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">ptr<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">==<pos:position pos:line="5" pos:column="13"/></operator> <name pos:line="5" pos:column="14">end<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">XML_TOK_PARTIAL<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></return></block></then></if>
  <switch pos:line="7" pos:column="3">switch <condition pos:line="7" pos:column="10">(<expr><call><name pos:line="7" pos:column="11">BYTE_TYPE<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">enc<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="26">ptr<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="31"/></condition> <block pos:line="7" pos:column="32">{
  <macro><name pos:line="8" pos:column="3">CHECK_NMSTRT_CASES<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument pos:line="8" pos:column="22">enc<pos:position pos:line="8" pos:column="25"/></argument>, <argument pos:line="8" pos:column="27">ptr<pos:position pos:line="8" pos:column="30"/></argument>, <argument pos:line="8" pos:column="32">end<pos:position pos:line="8" pos:column="35"/></argument>, <argument pos:line="8" pos:column="37">nextTokPtr<pos:position pos:line="8" pos:column="47"/></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></macro>
  <default pos:line="9" pos:column="3">default:<pos:position pos:line="9" pos:column="11"/></default>
    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">nextTokPtr<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">ptr<pos:position pos:line="10" pos:column="22"/></name></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">XML_TOK_INVALID<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></switch>
  <while pos:line="13" pos:column="3">while <condition pos:line="13" pos:column="9">(<expr><name pos:line="13" pos:column="10">ptr<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">!=<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">end<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition> <block pos:line="13" pos:column="22">{
    <switch pos:line="14" pos:column="5">switch <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">BYTE_TYPE<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">enc<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">ptr<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="33"/></condition> <block pos:line="14" pos:column="34">{
    <macro><name pos:line="15" pos:column="5">CHECK_NAME_CASES<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument pos:line="15" pos:column="22">enc<pos:position pos:line="15" pos:column="25"/></argument>, <argument pos:line="15" pos:column="27">ptr<pos:position pos:line="15" pos:column="30"/></argument>, <argument pos:line="15" pos:column="32">end<pos:position pos:line="15" pos:column="35"/></argument>, <argument pos:line="15" pos:column="37">nextTokPtr<pos:position pos:line="15" pos:column="47"/></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></macro>
    <case pos:line="16" pos:column="5">case <expr><name pos:line="16" pos:column="10">BT_S<pos:position pos:line="16" pos:column="14"/></name></expr>:<pos:position pos:line="16" pos:column="15"/></case> <case pos:line="16" pos:column="16">case <expr><name pos:line="16" pos:column="21">BT_CR<pos:position pos:line="16" pos:column="26"/></name></expr>:<pos:position pos:line="16" pos:column="27"/></case> <case pos:line="16" pos:column="28">case <expr><name pos:line="16" pos:column="33">BT_LF<pos:position pos:line="16" pos:column="38"/></name></expr>:<pos:position pos:line="16" pos:column="39"/></case>
      <for pos:line="17" pos:column="7">for <control pos:line="17" pos:column="11">(<init><expr><name pos:line="17" pos:column="12">ptr<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">+=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">MINBPC<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">enc<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></init> <condition><expr><name pos:line="17" pos:column="32">ptr<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">!=<pos:position pos:line="17" pos:column="38"/></operator> <name pos:line="17" pos:column="39">end<pos:position pos:line="17" pos:column="42"/></name></expr>;<pos:position pos:line="17" pos:column="43"/></condition> <incr><expr><name pos:line="17" pos:column="44">ptr<pos:position pos:line="17" pos:column="47"/></name> <operator pos:line="17" pos:column="48">+=<pos:position pos:line="17" pos:column="50"/></operator> <call><name pos:line="17" pos:column="51">MINBPC<pos:position pos:line="17" pos:column="57"/></name><argument_list pos:line="17" pos:column="57">(<argument><expr><name pos:line="17" pos:column="58">enc<pos:position pos:line="17" pos:column="61"/></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr></incr>)<pos:position pos:line="17" pos:column="63"/></control> <block pos:line="17" pos:column="64">{
        <switch pos:line="18" pos:column="9">switch <condition pos:line="18" pos:column="16">(<expr><call><name pos:line="18" pos:column="17">BYTE_TYPE<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">enc<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="32">ptr<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="37"/></condition> <block pos:line="18" pos:column="38">{
        <case pos:line="19" pos:column="9">case <expr><name pos:line="19" pos:column="14">BT_S<pos:position pos:line="19" pos:column="18"/></name></expr>:<pos:position pos:line="19" pos:column="19"/></case> <case pos:line="19" pos:column="20">case <expr><name pos:line="19" pos:column="25">BT_CR<pos:position pos:line="19" pos:column="30"/></name></expr>:<pos:position pos:line="19" pos:column="31"/></case> <case pos:line="19" pos:column="32">case <expr><name pos:line="19" pos:column="37">BT_LF<pos:position pos:line="19" pos:column="42"/></name></expr>:<pos:position pos:line="19" pos:column="43"/></case>
          <break pos:line="20" pos:column="11">break;<pos:position pos:line="20" pos:column="17"/></break>
        <case pos:line="21" pos:column="9">case <expr><name pos:line="21" pos:column="14">BT_GT<pos:position pos:line="21" pos:column="19"/></name></expr>:<pos:position pos:line="21" pos:column="20"/></case>
          <expr_stmt><expr><operator pos:line="22" pos:column="11">*<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">nextTokPtr<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">ptr<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">+<pos:position pos:line="22" pos:column="30"/></operator> <call><name pos:line="22" pos:column="31">MINBPC<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">enc<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
          <return pos:line="23" pos:column="11">return <expr><name pos:line="23" pos:column="18">XML_TOK_END_TAG<pos:position pos:line="23" pos:column="33"/></name></expr>;<pos:position pos:line="23" pos:column="34"/></return>
        <default pos:line="24" pos:column="9">default:<pos:position pos:line="24" pos:column="17"/></default>
          <expr_stmt><expr><operator pos:line="25" pos:column="11">*<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">nextTokPtr<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">ptr<pos:position pos:line="25" pos:column="28"/></name></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
          <return pos:line="26" pos:column="11">return <expr><name pos:line="26" pos:column="18">XML_TOK_INVALID<pos:position pos:line="26" pos:column="33"/></name></expr>;<pos:position pos:line="26" pos:column="34"/></return>
        }<pos:position pos:line="27" pos:column="10"/></block></switch>
      }<pos:position pos:line="28" pos:column="8"/></block></for>
      <return pos:line="29" pos:column="7">return <expr><name pos:line="29" pos:column="14">XML_TOK_PARTIAL<pos:position pos:line="29" pos:column="29"/></name></expr>;<pos:position pos:line="29" pos:column="30"/></return>
<cpp:ifdef pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">ifdef<pos:position pos:line="30" pos:column="7"/></cpp:directive> <name pos:line="30" pos:column="8">XML_NS<pos:position pos:line="30" pos:column="14"/></name></cpp:ifdef>
    <case pos:line="31" pos:column="5">case <expr><name pos:line="31" pos:column="10">BT_COLON<pos:position pos:line="31" pos:column="18"/></name></expr>:<pos:position pos:line="31" pos:column="19"/></case>
      <comment type="block" pos:line="32" pos:column="7">/* no need to check qname syntax here,
         since end-tag must match exactly */</comment>
      <expr_stmt><expr><name pos:line="34" pos:column="7">ptr<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">+=<pos:position pos:line="34" pos:column="13"/></operator> <call><name pos:line="34" pos:column="14">MINBPC<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">enc<pos:position pos:line="34" pos:column="24"/></name></expr></argument>)<pos:position pos:line="34" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
      <break pos:line="35" pos:column="7">break;<pos:position pos:line="35" pos:column="13"/></break>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="37" pos:column="5">case <expr><name pos:line="37" pos:column="10">BT_GT<pos:position pos:line="37" pos:column="15"/></name></expr>:<pos:position pos:line="37" pos:column="16"/></case>
      <expr_stmt><expr><operator pos:line="38" pos:column="7">*<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">nextTokPtr<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">ptr<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">+<pos:position pos:line="38" pos:column="26"/></operator> <call><name pos:line="38" pos:column="27">MINBPC<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">enc<pos:position pos:line="38" pos:column="37"/></name></expr></argument>)<pos:position pos:line="38" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="39"/></expr_stmt>
      <return pos:line="39" pos:column="7">return <expr><name pos:line="39" pos:column="14">XML_TOK_END_TAG<pos:position pos:line="39" pos:column="29"/></name></expr>;<pos:position pos:line="39" pos:column="30"/></return>
    <default pos:line="40" pos:column="5">default:<pos:position pos:line="40" pos:column="13"/></default>
      <expr_stmt><expr><operator pos:line="41" pos:column="7">*<pos:position pos:line="41" pos:column="8"/></operator><name pos:line="41" pos:column="8">nextTokPtr<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">ptr<pos:position pos:line="41" pos:column="24"/></name></expr>;<pos:position pos:line="41" pos:column="25"/></expr_stmt>
      <return pos:line="42" pos:column="7">return <expr><name pos:line="42" pos:column="14">XML_TOK_INVALID<pos:position pos:line="42" pos:column="29"/></name></expr>;<pos:position pos:line="42" pos:column="30"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></switch>
  }<pos:position pos:line="44" pos:column="4"/></block></while>
  <return pos:line="45" pos:column="3">return <expr><name pos:line="45" pos:column="10">XML_TOK_PARTIAL<pos:position pos:line="45" pos:column="25"/></name></expr>;<pos:position pos:line="45" pos:column="26"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

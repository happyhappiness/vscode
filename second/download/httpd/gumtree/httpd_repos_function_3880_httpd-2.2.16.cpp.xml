<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3880_httpd-2.2.16.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_socket_sendfile<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">apr_socket_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">sock<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">apr_file_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">file<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">apr_hdtr_t<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">hdtr<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">apr_off_t<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">offset<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">apr_size_t<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">len<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="51">apr_int32_t<pos:position pos:line="3" pos:column="62"/></name></type> <name pos:line="3" pos:column="63">flags<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="69"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="22">arv<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">nbytes<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">sendfilevec_t<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">sfv<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">vecs<pos:position pos:line="8" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="15">curvec<pos:position pos:line="8" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="23">i<pos:position pos:line="8" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="26">repeat<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">requested_len<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><literal type="number" pos:line="9" pos:column="32">0<pos:position pos:line="9" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">hdtr<pos:position pos:line="11" pos:column="14"/></name></expr>)<pos:position pos:line="11" pos:column="15"/></condition><then pos:line="11" pos:column="15"> <block pos:line="11" pos:column="16">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">hdtr<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <operator pos:line="12" pos:column="16">&amp;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="17">no_hdtr<pos:position pos:line="12" pos:column="24"/></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* Ignore flags for now. */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">flags<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <literal type="number" pos:line="16" pos:column="13">0<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="18" pos:column="5">/* Calculate how much space we need. */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">vecs<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name><name pos:line="19" pos:column="12">hdtr<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">numheaders<pos:position pos:line="19" pos:column="28"/></name></name> <operator pos:line="19" pos:column="29">+<pos:position pos:line="19" pos:column="30"/></operator> <name><name pos:line="19" pos:column="31">hdtr<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">numtrailers<pos:position pos:line="19" pos:column="48"/></name></name> <operator pos:line="19" pos:column="49">+<pos:position pos:line="19" pos:column="50"/></operator> <literal type="number" pos:line="19" pos:column="51">1<pos:position pos:line="19" pos:column="52"/></literal></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">sfv<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <call><name pos:line="20" pos:column="11">apr_palloc<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name><name pos:line="20" pos:column="22">sock<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">pool<pos:position pos:line="20" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="34">sizeof<argument_list pos:line="20" pos:column="40">(<argument><expr><name pos:line="20" pos:column="41">sendfilevec_t<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></sizeof> <operator pos:line="20" pos:column="56">*<pos:position pos:line="20" pos:column="57"/></operator> <name pos:line="20" pos:column="58">vecs<pos:position pos:line="20" pos:column="62"/></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">curvec<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <literal type="number" pos:line="22" pos:column="14">0<pos:position pos:line="22" pos:column="15"/></literal></expr>;<pos:position pos:line="22" pos:column="16"/></expr_stmt>

    <comment type="block" pos:line="24" pos:column="5">/* Add the headers */</comment>
    <for pos:line="25" pos:column="5">for <control pos:line="25" pos:column="9">(<init><expr><name pos:line="25" pos:column="10">i<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <literal type="number" pos:line="25" pos:column="14">0<pos:position pos:line="25" pos:column="15"/></literal></expr>;<pos:position pos:line="25" pos:column="16"/></init> <condition><expr><name pos:line="25" pos:column="17">i<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">&lt;<pos:position pos:line="25" pos:column="23"/></operator> <name><name pos:line="25" pos:column="21">hdtr<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">numheaders<pos:position pos:line="25" pos:column="37"/></name></name></expr>;<pos:position pos:line="25" pos:column="38"/></condition> <incr><expr><name pos:line="25" pos:column="39">i<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">++<pos:position pos:line="25" pos:column="42"/></operator></expr><operator pos:line="25" pos:column="42">,<pos:position pos:line="25" pos:column="43"/></operator> <expr><name pos:line="25" pos:column="44">curvec<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">++<pos:position pos:line="25" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="53"/></control> <block pos:line="25" pos:column="54">{
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">sfv<pos:position pos:line="26" pos:column="12"/></name><index pos:line="26" pos:column="12">[<expr><name pos:line="26" pos:column="13">curvec<pos:position pos:line="26" pos:column="19"/></name></expr>]<pos:position pos:line="26" pos:column="20"/></index></name><operator pos:line="26" pos:column="20">.<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">sfv_fd<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="30">SFV_FD_SELF<pos:position pos:line="26" pos:column="41"/></name></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">sfv<pos:position pos:line="27" pos:column="12"/></name><index pos:line="27" pos:column="12">[<expr><name pos:line="27" pos:column="13">curvec<pos:position pos:line="27" pos:column="19"/></name></expr>]<pos:position pos:line="27" pos:column="20"/></index></name><operator pos:line="27" pos:column="20">.<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">sfv_flag<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">=<pos:position pos:line="27" pos:column="31"/></operator> <literal type="number" pos:line="27" pos:column="32">0<pos:position pos:line="27" pos:column="33"/></literal></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
        <comment type="block" pos:line="28" pos:column="9">/* Cast to unsigned long to prevent sign extension of the
         * pointer value for the LFS case; see PR 39463. */</comment>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">sfv<pos:position pos:line="30" pos:column="12"/></name><index pos:line="30" pos:column="12">[<expr><name pos:line="30" pos:column="13">curvec<pos:position pos:line="30" pos:column="19"/></name></expr>]<pos:position pos:line="30" pos:column="20"/></index></name><operator pos:line="30" pos:column="20">.<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">sfv_off<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <operator pos:line="30" pos:column="31">(<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">unsigned<pos:position pos:line="30" pos:column="40"/></name> <name pos:line="30" pos:column="41">long<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">)<pos:position pos:line="30" pos:column="46"/></operator><name><name pos:line="30" pos:column="46">hdtr<pos:position pos:line="30" pos:column="50"/></name><operator pos:line="30" pos:column="50">-&gt;<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="52">headers<pos:position pos:line="30" pos:column="59"/></name><index pos:line="30" pos:column="59">[<expr><name pos:line="30" pos:column="60">i<pos:position pos:line="30" pos:column="61"/></name></expr>]<pos:position pos:line="30" pos:column="62"/></index></name><operator pos:line="30" pos:column="62">.<pos:position pos:line="30" pos:column="63"/></operator><name pos:line="30" pos:column="63">iov_base<pos:position pos:line="30" pos:column="71"/></name></expr>;<pos:position pos:line="30" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">sfv<pos:position pos:line="31" pos:column="12"/></name><index pos:line="31" pos:column="12">[<expr><name pos:line="31" pos:column="13">curvec<pos:position pos:line="31" pos:column="19"/></name></expr>]<pos:position pos:line="31" pos:column="20"/></index></name><operator pos:line="31" pos:column="20">.<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">sfv_len<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <name><name pos:line="31" pos:column="31">hdtr<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">-&gt;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="37">headers<pos:position pos:line="31" pos:column="44"/></name><index pos:line="31" pos:column="44">[<expr><name pos:line="31" pos:column="45">i<pos:position pos:line="31" pos:column="46"/></name></expr>]<pos:position pos:line="31" pos:column="47"/></index></name><operator pos:line="31" pos:column="47">.<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="48">iov_len<pos:position pos:line="31" pos:column="55"/></name></expr>;<pos:position pos:line="31" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">requested_len<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">+=<pos:position pos:line="32" pos:column="25"/></operator> <name><name pos:line="32" pos:column="26">sfv<pos:position pos:line="32" pos:column="29"/></name><index pos:line="32" pos:column="29">[<expr><name pos:line="32" pos:column="30">curvec<pos:position pos:line="32" pos:column="36"/></name></expr>]<pos:position pos:line="32" pos:column="37"/></index></name><operator pos:line="32" pos:column="37">.<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="38">sfv_len<pos:position pos:line="32" pos:column="45"/></name></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></for>

    <comment type="block" pos:line="35" pos:column="5">/* If the len is 0, we skip the file. */</comment>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">len<pos:position pos:line="36" pos:column="13"/></name></expr>)<pos:position pos:line="36" pos:column="14"/></condition><then pos:line="36" pos:column="14">
    <block pos:line="37" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">sfv<pos:position pos:line="38" pos:column="12"/></name><index pos:line="38" pos:column="12">[<expr><name pos:line="38" pos:column="13">curvec<pos:position pos:line="38" pos:column="19"/></name></expr>]<pos:position pos:line="38" pos:column="20"/></index></name><operator pos:line="38" pos:column="20">.<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">sfv_fd<pos:position pos:line="38" pos:column="27"/></name> <operator pos:line="38" pos:column="28">=<pos:position pos:line="38" pos:column="29"/></operator> <name><name pos:line="38" pos:column="30">file<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">filedes<pos:position pos:line="38" pos:column="43"/></name></name></expr>;<pos:position pos:line="38" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">sfv<pos:position pos:line="39" pos:column="12"/></name><index pos:line="39" pos:column="12">[<expr><name pos:line="39" pos:column="13">curvec<pos:position pos:line="39" pos:column="19"/></name></expr>]<pos:position pos:line="39" pos:column="20"/></index></name><operator pos:line="39" pos:column="20">.<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="21">sfv_flag<pos:position pos:line="39" pos:column="29"/></name> <operator pos:line="39" pos:column="30">=<pos:position pos:line="39" pos:column="31"/></operator> <literal type="number" pos:line="39" pos:column="32">0<pos:position pos:line="39" pos:column="33"/></literal></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">sfv<pos:position pos:line="40" pos:column="12"/></name><index pos:line="40" pos:column="12">[<expr><name pos:line="40" pos:column="13">curvec<pos:position pos:line="40" pos:column="19"/></name></expr>]<pos:position pos:line="40" pos:column="20"/></index></name><operator pos:line="40" pos:column="20">.<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">sfv_off<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">=<pos:position pos:line="40" pos:column="30"/></operator> <operator pos:line="40" pos:column="31">*<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="32">offset<pos:position pos:line="40" pos:column="38"/></name></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">sfv<pos:position pos:line="41" pos:column="12"/></name><index pos:line="41" pos:column="12">[<expr><name pos:line="41" pos:column="13">curvec<pos:position pos:line="41" pos:column="19"/></name></expr>]<pos:position pos:line="41" pos:column="20"/></index></name><operator pos:line="41" pos:column="20">.<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">sfv_len<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">=<pos:position pos:line="41" pos:column="30"/></operator> <operator pos:line="41" pos:column="31">*<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="32">len<pos:position pos:line="41" pos:column="35"/></name></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt> 
        <expr_stmt><expr><name pos:line="42" pos:column="9">requested_len<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">+=<pos:position pos:line="42" pos:column="25"/></operator> <name><name pos:line="42" pos:column="26">sfv<pos:position pos:line="42" pos:column="29"/></name><index pos:line="42" pos:column="29">[<expr><name pos:line="42" pos:column="30">curvec<pos:position pos:line="42" pos:column="36"/></name></expr>]<pos:position pos:line="42" pos:column="37"/></index></name><operator pos:line="42" pos:column="37">.<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="38">sfv_len<pos:position pos:line="42" pos:column="45"/></name></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><name pos:line="44" pos:column="9">curvec<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">++<pos:position pos:line="44" pos:column="17"/></operator></expr>;<pos:position pos:line="44" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then>
    <else pos:line="46" pos:column="5">else <block pos:line="46" pos:column="10">{
        <expr_stmt><expr><name pos:line="47" pos:column="9">vecs<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">--<pos:position pos:line="47" pos:column="15"/></operator></expr>;<pos:position pos:line="47" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="50" pos:column="5">/* Add the footers */</comment>
    <for pos:line="51" pos:column="5">for <control pos:line="51" pos:column="9">(<init><expr><name pos:line="51" pos:column="10">i<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <literal type="number" pos:line="51" pos:column="14">0<pos:position pos:line="51" pos:column="15"/></literal></expr>;<pos:position pos:line="51" pos:column="16"/></init> <condition><expr><name pos:line="51" pos:column="17">i<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">&lt;<pos:position pos:line="51" pos:column="23"/></operator> <name><name pos:line="51" pos:column="21">hdtr<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">-&gt;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="27">numtrailers<pos:position pos:line="51" pos:column="38"/></name></name></expr>;<pos:position pos:line="51" pos:column="39"/></condition> <incr><expr><name pos:line="51" pos:column="40">i<pos:position pos:line="51" pos:column="41"/></name><operator pos:line="51" pos:column="41">++<pos:position pos:line="51" pos:column="43"/></operator></expr><operator pos:line="51" pos:column="43">,<pos:position pos:line="51" pos:column="44"/></operator> <expr><name pos:line="51" pos:column="45">curvec<pos:position pos:line="51" pos:column="51"/></name><operator pos:line="51" pos:column="51">++<pos:position pos:line="51" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="54"/></control> <block pos:line="51" pos:column="55">{
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">sfv<pos:position pos:line="52" pos:column="12"/></name><index pos:line="52" pos:column="12">[<expr><name pos:line="52" pos:column="13">curvec<pos:position pos:line="52" pos:column="19"/></name></expr>]<pos:position pos:line="52" pos:column="20"/></index></name><operator pos:line="52" pos:column="20">.<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="21">sfv_fd<pos:position pos:line="52" pos:column="27"/></name> <operator pos:line="52" pos:column="28">=<pos:position pos:line="52" pos:column="29"/></operator> <name pos:line="52" pos:column="30">SFV_FD_SELF<pos:position pos:line="52" pos:column="41"/></name></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">sfv<pos:position pos:line="53" pos:column="12"/></name><index pos:line="53" pos:column="12">[<expr><name pos:line="53" pos:column="13">curvec<pos:position pos:line="53" pos:column="19"/></name></expr>]<pos:position pos:line="53" pos:column="20"/></index></name><operator pos:line="53" pos:column="20">.<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="21">sfv_flag<pos:position pos:line="53" pos:column="29"/></name> <operator pos:line="53" pos:column="30">=<pos:position pos:line="53" pos:column="31"/></operator> <literal type="number" pos:line="53" pos:column="32">0<pos:position pos:line="53" pos:column="33"/></literal></expr>;<pos:position pos:line="53" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">sfv<pos:position pos:line="54" pos:column="12"/></name><index pos:line="54" pos:column="12">[<expr><name pos:line="54" pos:column="13">curvec<pos:position pos:line="54" pos:column="19"/></name></expr>]<pos:position pos:line="54" pos:column="20"/></index></name><operator pos:line="54" pos:column="20">.<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="21">sfv_off<pos:position pos:line="54" pos:column="28"/></name> <operator pos:line="54" pos:column="29">=<pos:position pos:line="54" pos:column="30"/></operator> <operator pos:line="54" pos:column="31">(<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="32">unsigned<pos:position pos:line="54" pos:column="40"/></name> <name pos:line="54" pos:column="41">long<pos:position pos:line="54" pos:column="45"/></name><operator pos:line="54" pos:column="45">)<pos:position pos:line="54" pos:column="46"/></operator><name><name pos:line="54" pos:column="46">hdtr<pos:position pos:line="54" pos:column="50"/></name><operator pos:line="54" pos:column="50">-&gt;<pos:position pos:line="54" pos:column="55"/></operator><name pos:line="54" pos:column="52">trailers<pos:position pos:line="54" pos:column="60"/></name><index pos:line="54" pos:column="60">[<expr><name pos:line="54" pos:column="61">i<pos:position pos:line="54" pos:column="62"/></name></expr>]<pos:position pos:line="54" pos:column="63"/></index></name><operator pos:line="54" pos:column="63">.<pos:position pos:line="54" pos:column="64"/></operator><name pos:line="54" pos:column="64">iov_base<pos:position pos:line="54" pos:column="72"/></name></expr>;<pos:position pos:line="54" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="55" pos:column="9">sfv<pos:position pos:line="55" pos:column="12"/></name><index pos:line="55" pos:column="12">[<expr><name pos:line="55" pos:column="13">curvec<pos:position pos:line="55" pos:column="19"/></name></expr>]<pos:position pos:line="55" pos:column="20"/></index></name><operator pos:line="55" pos:column="20">.<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="21">sfv_len<pos:position pos:line="55" pos:column="28"/></name> <operator pos:line="55" pos:column="29">=<pos:position pos:line="55" pos:column="30"/></operator> <name><name pos:line="55" pos:column="31">hdtr<pos:position pos:line="55" pos:column="35"/></name><operator pos:line="55" pos:column="35">-&gt;<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="37">trailers<pos:position pos:line="55" pos:column="45"/></name><index pos:line="55" pos:column="45">[<expr><name pos:line="55" pos:column="46">i<pos:position pos:line="55" pos:column="47"/></name></expr>]<pos:position pos:line="55" pos:column="48"/></index></name><operator pos:line="55" pos:column="48">.<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="49">iov_len<pos:position pos:line="55" pos:column="56"/></name></expr>;<pos:position pos:line="55" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name pos:line="56" pos:column="9">requested_len<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">+=<pos:position pos:line="56" pos:column="25"/></operator> <name><name pos:line="56" pos:column="26">sfv<pos:position pos:line="56" pos:column="29"/></name><index pos:line="56" pos:column="29">[<expr><name pos:line="56" pos:column="30">curvec<pos:position pos:line="56" pos:column="36"/></name></expr>]<pos:position pos:line="56" pos:column="37"/></index></name><operator pos:line="56" pos:column="37">.<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="38">sfv_len<pos:position pos:line="56" pos:column="45"/></name></expr>;<pos:position pos:line="56" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></for>

    <comment type="block" pos:line="59" pos:column="5">/* If the last write couldn't send all the requested data,
     * wait for the socket to become writable before proceeding
     */</comment>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name><name pos:line="62" pos:column="9">sock<pos:position pos:line="62" pos:column="13"/></name><operator pos:line="62" pos:column="13">-&gt;<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="15">options<pos:position pos:line="62" pos:column="22"/></name></name> <operator pos:line="62" pos:column="23">&amp;<pos:position pos:line="62" pos:column="28"/></operator> <name pos:line="62" pos:column="25">APR_INCOMPLETE_WRITE<pos:position pos:line="62" pos:column="45"/></name></expr>)<pos:position pos:line="62" pos:column="46"/></condition><then pos:line="62" pos:column="46"> <block pos:line="62" pos:column="47">{
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">sock<pos:position pos:line="63" pos:column="13"/></name><operator pos:line="63" pos:column="13">-&gt;<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="15">options<pos:position pos:line="63" pos:column="22"/></name></name> <operator pos:line="63" pos:column="23">&amp;=<pos:position pos:line="63" pos:column="29"/></operator> <operator pos:line="63" pos:column="26">~<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="27">APR_INCOMPLETE_WRITE<pos:position pos:line="63" pos:column="47"/></name></expr>;<pos:position pos:line="63" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="64" pos:column="9">arv<pos:position pos:line="64" pos:column="12"/></name> <operator pos:line="64" pos:column="13">=<pos:position pos:line="64" pos:column="14"/></operator> <call><name pos:line="64" pos:column="15">apr_wait_for_io_or_timeout<pos:position pos:line="64" pos:column="41"/></name><argument_list pos:line="64" pos:column="41">(<argument><expr><name pos:line="64" pos:column="42">NULL<pos:position pos:line="64" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="48">sock<pos:position pos:line="64" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="54">0<pos:position pos:line="64" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="57"/></expr_stmt>
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">arv<pos:position pos:line="65" pos:column="16"/></name> <operator pos:line="65" pos:column="17">!=<pos:position pos:line="65" pos:column="19"/></operator> <name pos:line="65" pos:column="20">APR_SUCCESS<pos:position pos:line="65" pos:column="31"/></name></expr>)<pos:position pos:line="65" pos:column="32"/></condition><then pos:line="65" pos:column="32"> <block pos:line="65" pos:column="33">{
            <expr_stmt><expr><operator pos:line="66" pos:column="13">*<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="14">len<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">=<pos:position pos:line="66" pos:column="19"/></operator> <literal type="number" pos:line="66" pos:column="20">0<pos:position pos:line="66" pos:column="21"/></literal></expr>;<pos:position pos:line="66" pos:column="22"/></expr_stmt>
            <return pos:line="67" pos:column="13">return <expr><name pos:line="67" pos:column="20">arv<pos:position pos:line="67" pos:column="23"/></name></expr>;<pos:position pos:line="67" pos:column="24"/></return>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>
 
    <comment type="block" pos:line="71" pos:column="5">/* Actually do the sendfilev
     *
     * Solaris may return -1/EAGAIN even if it sent bytes on a non-block sock.
     *
     * If no bytes were originally sent (nbytes == 0) and we are on a TIMEOUT 
     * socket (which as far as the OS is concerned is a non-blocking socket), 
     * we want to retry after waiting for the other side to read the data (as 
     * determined by poll).  Once it is clear to send, we want to retry
     * sending the sendfilevec_t once more.
     */</comment>
    <expr_stmt><expr><name pos:line="81" pos:column="5">arv<pos:position pos:line="81" pos:column="8"/></name> <operator pos:line="81" pos:column="9">=<pos:position pos:line="81" pos:column="10"/></operator> <literal type="number" pos:line="81" pos:column="11">0<pos:position pos:line="81" pos:column="12"/></literal></expr>;<pos:position pos:line="81" pos:column="13"/></expr_stmt>
    <do pos:line="82" pos:column="5">do <block pos:line="82" pos:column="8">{
        <comment type="block" pos:line="83" pos:column="9">/* Clear out the repeat */</comment>
        <expr_stmt><expr><name pos:line="84" pos:column="9">repeat<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <literal type="number" pos:line="84" pos:column="18">0<pos:position pos:line="84" pos:column="19"/></literal></expr>;<pos:position pos:line="84" pos:column="20"/></expr_stmt>

        <comment type="block" pos:line="86" pos:column="9">/* socket, vecs, number of vecs, bytes written */</comment>
        <expr_stmt><expr><name pos:line="87" pos:column="9">rv<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <call><name pos:line="87" pos:column="14">sendfilev<pos:position pos:line="87" pos:column="23"/></name><argument_list pos:line="87" pos:column="23">(<argument><expr><name><name pos:line="87" pos:column="24">sock<pos:position pos:line="87" pos:column="28"/></name><operator pos:line="87" pos:column="28">-&gt;<pos:position pos:line="87" pos:column="33"/></operator><name pos:line="87" pos:column="30">socketdes<pos:position pos:line="87" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="41">sfv<pos:position pos:line="87" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="46">vecs<pos:position pos:line="87" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="52">&amp;<pos:position pos:line="87" pos:column="57"/></operator><name pos:line="87" pos:column="53">nbytes<pos:position pos:line="87" pos:column="59"/></name></expr></argument>)<pos:position pos:line="87" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="61"/></expr_stmt>

        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">rv<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">==<pos:position pos:line="89" pos:column="18"/></operator> <operator pos:line="89" pos:column="19">-<pos:position pos:line="89" pos:column="20"/></operator><literal type="number" pos:line="89" pos:column="20">1<pos:position pos:line="89" pos:column="21"/></literal> <operator pos:line="89" pos:column="22">&amp;&amp;<pos:position pos:line="89" pos:column="32"/></operator> <name pos:line="89" pos:column="25">errno<pos:position pos:line="89" pos:column="30"/></name> <operator pos:line="89" pos:column="31">==<pos:position pos:line="89" pos:column="33"/></operator> <name pos:line="89" pos:column="34">EAGAIN<pos:position pos:line="89" pos:column="40"/></name></expr>)<pos:position pos:line="89" pos:column="41"/></condition><then pos:line="89" pos:column="41"> <block pos:line="89" pos:column="42">{
            <if pos:line="90" pos:column="13">if <condition pos:line="90" pos:column="16">(<expr><name pos:line="90" pos:column="17">nbytes<pos:position pos:line="90" pos:column="23"/></name></expr>)<pos:position pos:line="90" pos:column="24"/></condition><then pos:line="90" pos:column="24"> <block pos:line="90" pos:column="25">{
                <expr_stmt><expr><name pos:line="91" pos:column="17">rv<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">=<pos:position pos:line="91" pos:column="21"/></operator> <literal type="number" pos:line="91" pos:column="22">0<pos:position pos:line="91" pos:column="23"/></literal></expr>;<pos:position pos:line="91" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="92" pos:column="14"/></block></then>
            <elseif pos:line="93" pos:column="13">else <if pos:line="93" pos:column="18">if <condition pos:line="93" pos:column="21">(<expr><operator pos:line="93" pos:column="22">!<pos:position pos:line="93" pos:column="23"/></operator><name pos:line="93" pos:column="23">arv<pos:position pos:line="93" pos:column="26"/></name> <operator pos:line="93" pos:column="27">&amp;&amp;<pos:position pos:line="93" pos:column="37"/></operator> <operator pos:line="93" pos:column="30">(<pos:position pos:line="93" pos:column="31"/></operator><name><name pos:line="93" pos:column="31">sock<pos:position pos:line="93" pos:column="35"/></name><operator pos:line="93" pos:column="35">-&gt;<pos:position pos:line="93" pos:column="40"/></operator><name pos:line="93" pos:column="37">timeout<pos:position pos:line="93" pos:column="44"/></name></name> <operator pos:line="93" pos:column="45">&gt;<pos:position pos:line="93" pos:column="49"/></operator> <literal type="number" pos:line="93" pos:column="47">0<pos:position pos:line="93" pos:column="48"/></literal><operator pos:line="93" pos:column="48">)<pos:position pos:line="93" pos:column="49"/></operator></expr>)<pos:position pos:line="93" pos:column="50"/></condition><then pos:line="93" pos:column="50"> <block pos:line="93" pos:column="51">{
                <decl_stmt><decl><type><name pos:line="94" pos:column="17">apr_status_t<pos:position pos:line="94" pos:column="29"/></name></type> <name pos:line="94" pos:column="30">t<pos:position pos:line="94" pos:column="31"/></name> <init pos:line="94" pos:column="32">= <expr><call><name pos:line="94" pos:column="34">apr_wait_for_io_or_timeout<pos:position pos:line="94" pos:column="60"/></name><argument_list pos:line="94" pos:column="60">(<argument><expr><name pos:line="94" pos:column="61">NULL<pos:position pos:line="94" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="67">sock<pos:position pos:line="94" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="73">0<pos:position pos:line="94" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="94" pos:column="76"/></decl_stmt>

                <if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><name pos:line="96" pos:column="21">t<pos:position pos:line="96" pos:column="22"/></name> <operator pos:line="96" pos:column="23">!=<pos:position pos:line="96" pos:column="25"/></operator> <name pos:line="96" pos:column="26">APR_SUCCESS<pos:position pos:line="96" pos:column="37"/></name></expr>)<pos:position pos:line="96" pos:column="38"/></condition><then pos:line="96" pos:column="38"> <block pos:line="96" pos:column="39">{
                    <expr_stmt><expr><operator pos:line="97" pos:column="21">*<pos:position pos:line="97" pos:column="22"/></operator><name pos:line="97" pos:column="22">len<pos:position pos:line="97" pos:column="25"/></name> <operator pos:line="97" pos:column="26">=<pos:position pos:line="97" pos:column="27"/></operator> <literal type="number" pos:line="97" pos:column="28">0<pos:position pos:line="97" pos:column="29"/></literal></expr>;<pos:position pos:line="97" pos:column="30"/></expr_stmt>
                    <return pos:line="98" pos:column="21">return <expr><name pos:line="98" pos:column="28">t<pos:position pos:line="98" pos:column="29"/></name></expr>;<pos:position pos:line="98" pos:column="30"/></return>
                }<pos:position pos:line="99" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="101" pos:column="17">arv<pos:position pos:line="101" pos:column="20"/></name> <operator pos:line="101" pos:column="21">=<pos:position pos:line="101" pos:column="22"/></operator> <literal type="number" pos:line="101" pos:column="23">1<pos:position pos:line="101" pos:column="24"/></literal></expr>;<pos:position pos:line="101" pos:column="25"/></expr_stmt> 
                <expr_stmt><expr><name pos:line="102" pos:column="17">repeat<pos:position pos:line="102" pos:column="23"/></name> <operator pos:line="102" pos:column="24">=<pos:position pos:line="102" pos:column="25"/></operator> <literal type="number" pos:line="102" pos:column="26">1<pos:position pos:line="102" pos:column="27"/></literal></expr>;<pos:position pos:line="102" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="103" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="104" pos:column="10"/></block></then></if>
    }<pos:position pos:line="105" pos:column="6"/></block> while <condition pos:line="105" pos:column="13">(<expr><operator pos:line="105" pos:column="14">(<pos:position pos:line="105" pos:column="15"/></operator><name pos:line="105" pos:column="15">rv<pos:position pos:line="105" pos:column="17"/></name> <operator pos:line="105" pos:column="18">==<pos:position pos:line="105" pos:column="20"/></operator> <operator pos:line="105" pos:column="21">-<pos:position pos:line="105" pos:column="22"/></operator><literal type="number" pos:line="105" pos:column="22">1<pos:position pos:line="105" pos:column="23"/></literal> <operator pos:line="105" pos:column="24">&amp;&amp;<pos:position pos:line="105" pos:column="34"/></operator> <name pos:line="105" pos:column="27">errno<pos:position pos:line="105" pos:column="32"/></name> <operator pos:line="105" pos:column="33">==<pos:position pos:line="105" pos:column="35"/></operator> <name pos:line="105" pos:column="36">EINTR<pos:position pos:line="105" pos:column="41"/></name><operator pos:line="105" pos:column="41">)<pos:position pos:line="105" pos:column="42"/></operator> <operator pos:line="105" pos:column="43">||<pos:position pos:line="105" pos:column="45"/></operator> <name pos:line="105" pos:column="46">repeat<pos:position pos:line="105" pos:column="52"/></name></expr>)<pos:position pos:line="105" pos:column="53"/></condition>;<pos:position pos:line="105" pos:column="54"/></do>

    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><name pos:line="107" pos:column="9">rv<pos:position pos:line="107" pos:column="11"/></name> <operator pos:line="107" pos:column="12">==<pos:position pos:line="107" pos:column="14"/></operator> <operator pos:line="107" pos:column="15">-<pos:position pos:line="107" pos:column="16"/></operator><literal type="number" pos:line="107" pos:column="16">1<pos:position pos:line="107" pos:column="17"/></literal></expr>)<pos:position pos:line="107" pos:column="18"/></condition><then pos:line="107" pos:column="18"> <block pos:line="107" pos:column="19">{
        <expr_stmt><expr><operator pos:line="108" pos:column="9">*<pos:position pos:line="108" pos:column="10"/></operator><name pos:line="108" pos:column="10">len<pos:position pos:line="108" pos:column="13"/></name> <operator pos:line="108" pos:column="14">=<pos:position pos:line="108" pos:column="15"/></operator> <literal type="number" pos:line="108" pos:column="16">0<pos:position pos:line="108" pos:column="17"/></literal></expr>;<pos:position pos:line="108" pos:column="18"/></expr_stmt>
        <return pos:line="109" pos:column="9">return <expr><name pos:line="109" pos:column="16">errno<pos:position pos:line="109" pos:column="21"/></name></expr>;<pos:position pos:line="109" pos:column="22"/></return>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="112" pos:column="5">/* Update how much we sent */</comment>
    <expr_stmt><expr><operator pos:line="113" pos:column="5">*<pos:position pos:line="113" pos:column="6"/></operator><name pos:line="113" pos:column="6">len<pos:position pos:line="113" pos:column="9"/></name> <operator pos:line="113" pos:column="10">=<pos:position pos:line="113" pos:column="11"/></operator> <name pos:line="113" pos:column="12">nbytes<pos:position pos:line="113" pos:column="18"/></name></expr>;<pos:position pos:line="113" pos:column="19"/></expr_stmt>

    <if pos:line="115" pos:column="5">if <condition pos:line="115" pos:column="8">(<expr><name pos:line="115" pos:column="9">nbytes<pos:position pos:line="115" pos:column="15"/></name> <operator pos:line="115" pos:column="16">==<pos:position pos:line="115" pos:column="18"/></operator> <literal type="number" pos:line="115" pos:column="19">0<pos:position pos:line="115" pos:column="20"/></literal></expr>)<pos:position pos:line="115" pos:column="21"/></condition><then pos:line="115" pos:column="21"> <block pos:line="115" pos:column="22">{
        <comment type="block" pos:line="116" pos:column="9">/* Most likely the file got smaller after the stat.
         * Return an error so the caller can do the Right Thing.
         */</comment>
        <return pos:line="119" pos:column="9">return <expr><name pos:line="119" pos:column="16">APR_EOF<pos:position pos:line="119" pos:column="23"/></name></expr>;<pos:position pos:line="119" pos:column="24"/></return>
    }<pos:position pos:line="120" pos:column="6"/></block></then></if>

    <if pos:line="122" pos:column="5">if <condition pos:line="122" pos:column="8">(<expr><operator pos:line="122" pos:column="9">(<pos:position pos:line="122" pos:column="10"/></operator><name><name pos:line="122" pos:column="10">sock<pos:position pos:line="122" pos:column="14"/></name><operator pos:line="122" pos:column="14">-&gt;<pos:position pos:line="122" pos:column="19"/></operator><name pos:line="122" pos:column="16">timeout<pos:position pos:line="122" pos:column="23"/></name></name> <operator pos:line="122" pos:column="24">&gt;<pos:position pos:line="122" pos:column="28"/></operator> <literal type="number" pos:line="122" pos:column="26">0<pos:position pos:line="122" pos:column="27"/></literal><operator pos:line="122" pos:column="27">)<pos:position pos:line="122" pos:column="28"/></operator> <operator pos:line="122" pos:column="29">&amp;&amp;<pos:position pos:line="122" pos:column="39"/></operator> <operator pos:line="122" pos:column="32">(<pos:position pos:line="122" pos:column="33"/></operator><operator pos:line="122" pos:column="33">*<pos:position pos:line="122" pos:column="34"/></operator><name pos:line="122" pos:column="34">len<pos:position pos:line="122" pos:column="37"/></name> <operator pos:line="122" pos:column="38">&lt;<pos:position pos:line="122" pos:column="42"/></operator> <name pos:line="122" pos:column="40">requested_len<pos:position pos:line="122" pos:column="53"/></name><operator pos:line="122" pos:column="53">)<pos:position pos:line="122" pos:column="54"/></operator></expr>)<pos:position pos:line="122" pos:column="55"/></condition><then pos:line="122" pos:column="55"> <block pos:line="122" pos:column="56">{
        <expr_stmt><expr><name><name pos:line="123" pos:column="9">sock<pos:position pos:line="123" pos:column="13"/></name><operator pos:line="123" pos:column="13">-&gt;<pos:position pos:line="123" pos:column="18"/></operator><name pos:line="123" pos:column="15">options<pos:position pos:line="123" pos:column="22"/></name></name> <operator pos:line="123" pos:column="23">|=<pos:position pos:line="123" pos:column="25"/></operator> <name pos:line="123" pos:column="26">APR_INCOMPLETE_WRITE<pos:position pos:line="123" pos:column="46"/></name></expr>;<pos:position pos:line="123" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if>
    <return pos:line="125" pos:column="5">return <expr><name pos:line="125" pos:column="12">APR_SUCCESS<pos:position pos:line="125" pos:column="23"/></name></expr>;<pos:position pos:line="125" pos:column="24"/></return>
}<pos:position pos:line="126" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3749_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">find_addresses<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">apr_sockaddr_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">sa<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, 
                                   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">hostname<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">apr_int32_t<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">family<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="3" pos:column="36">apr_port_t<pos:position pos:line="3" pos:column="46"/></name></type> <name pos:line="3" pos:column="47">port<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="53">apr_int32_t<pos:position pos:line="3" pos:column="64"/></name></type> <name pos:line="3" pos:column="65">flags<pos:position pos:line="3" pos:column="70"/></name></decl></parameter>, 
                                   <parameter><decl><type><name pos:line="4" pos:column="36">apr_pool_t<pos:position pos:line="4" pos:column="46"/></name> <modifier pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></modifier></type><name pos:line="4" pos:column="48">p<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="50"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">hostent<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">hp<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_sockaddr_t<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">prev_sa<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">curaddr<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">APR_HAS_THREADS<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">&amp;&amp;<pos:position pos:line="9" pos:column="31"/></operator> <operator pos:line="9" pos:column="24">!<pos:position pos:line="9" pos:column="25"/></operator><call><name pos:line="9" pos:column="25">defined<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">GETHOSTBYNAME_IS_THREAD_SAFE<pos:position pos:line="9" pos:column="61"/></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call> <operator pos:line="9" pos:column="63">&amp;&amp;<pos:position pos:line="9" pos:column="73"/></operator> \
    <call><name pos:line="10" pos:column="5">defined<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">HAVE_GETHOSTBYNAME_R<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call> <operator pos:line="10" pos:column="35">&amp;&amp;<pos:position pos:line="10" pos:column="45"/></operator> <operator pos:line="10" pos:column="38">!<pos:position pos:line="10" pos:column="39"/></operator><call><name pos:line="10" pos:column="39">defined<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><name pos:line="10" pos:column="47">BEOS<pos:position pos:line="10" pos:column="51"/></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr></cpp:if>
<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">GETHOSTBYNAME_R_HOSTENT_DATA<pos:position pos:line="11" pos:column="36"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">struct<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">hostent_data<pos:position pos:line="12" pos:column="24"/></name></name></type> <name pos:line="12" pos:column="25">hd<pos:position pos:line="12" pos:column="27"/></name></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>
    <comment type="block" pos:line="14" pos:column="5">/* If you see ERANGE, that means GETHOSBYNAME_BUFLEN needs to be
     * bumped. */</comment>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name></type> <name><name pos:line="16" pos:column="10">tmp<pos:position pos:line="16" pos:column="13"/></name><index pos:line="16" pos:column="13">[<expr><name pos:line="16" pos:column="14">GETHOSTBYNAME_BUFLEN<pos:position pos:line="16" pos:column="34"/></name></expr>]<pos:position pos:line="16" pos:column="35"/></index></name></decl>;<pos:position pos:line="16" pos:column="36"/></decl_stmt>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">hosterror<pos:position pos:line="18" pos:column="18"/></name></decl>;<pos:position pos:line="18" pos:column="19"/></decl_stmt>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name><name pos:line="20" pos:column="5">struct<pos:position pos:line="20" pos:column="11"/></name> <name pos:line="20" pos:column="12">hostent<pos:position pos:line="20" pos:column="19"/></name></name></type> <name pos:line="20" pos:column="20">hs<pos:position pos:line="20" pos:column="22"/></name></decl>;<pos:position pos:line="20" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="21" pos:column="5">struct<pos:position pos:line="21" pos:column="11"/></name> <name pos:line="21" pos:column="12">in_addr<pos:position pos:line="21" pos:column="19"/></name></name></type> <name pos:line="21" pos:column="20">ipaddr<pos:position pos:line="21" pos:column="26"/></name></decl>;<pos:position pos:line="21" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">char<pos:position pos:line="22" pos:column="9"/></name> <modifier pos:line="22" pos:column="10">*<pos:position pos:line="22" pos:column="11"/></modifier></type><name><name pos:line="22" pos:column="11">addr_list<pos:position pos:line="22" pos:column="20"/></name><index pos:line="22" pos:column="20">[<expr><literal type="number" pos:line="22" pos:column="21">2<pos:position pos:line="22" pos:column="22"/></literal></expr>]<pos:position pos:line="22" pos:column="23"/></index></name></decl>;<pos:position pos:line="22" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="23" pos:column="5">const<pos:position pos:line="23" pos:column="10"/></specifier> <name pos:line="23" pos:column="11">char<pos:position pos:line="23" pos:column="15"/></name> <modifier pos:line="23" pos:column="16">*<pos:position pos:line="23" pos:column="17"/></modifier></type><name pos:line="23" pos:column="17">orig_hostname<pos:position pos:line="23" pos:column="30"/></name> <init pos:line="23" pos:column="31">= <expr><name pos:line="23" pos:column="33">hostname<pos:position pos:line="23" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="42"/></decl_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">hostname<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">==<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">NULL<pos:position pos:line="25" pos:column="25"/></name></expr>)<pos:position pos:line="25" pos:column="26"/></condition><then pos:line="25" pos:column="26"> <block pos:line="25" pos:column="27">{
        <comment type="block" pos:line="26" pos:column="9">/* if we are given a NULL hostname, assume '0.0.0.0' */</comment>
        <expr_stmt><expr><name pos:line="27" pos:column="9">hostname<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <literal type="string" pos:line="27" pos:column="20">"0.0.0.0"<pos:position pos:line="27" pos:column="29"/></literal></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">*<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">hostname<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&gt;=<pos:position pos:line="30" pos:column="24"/></operator> <literal type="char" pos:line="30" pos:column="22">'0'<pos:position pos:line="30" pos:column="25"/></literal> <operator pos:line="30" pos:column="26">&amp;&amp;<pos:position pos:line="30" pos:column="36"/></operator> <operator pos:line="30" pos:column="29">*<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="30">hostname<pos:position pos:line="30" pos:column="38"/></name> <operator pos:line="30" pos:column="39">&lt;=<pos:position pos:line="30" pos:column="44"/></operator> <literal type="char" pos:line="30" pos:column="42">'9'<pos:position pos:line="30" pos:column="45"/></literal> <operator pos:line="30" pos:column="46">&amp;&amp;<pos:position pos:line="30" pos:column="56"/></operator>
        <call><name pos:line="31" pos:column="9">strspn<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">hostname<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="26">"0123456789."<pos:position pos:line="31" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call> <operator pos:line="31" pos:column="41">==<pos:position pos:line="31" pos:column="43"/></operator> <call><name pos:line="31" pos:column="44">strlen<pos:position pos:line="31" pos:column="50"/></name><argument_list pos:line="31" pos:column="50">(<argument><expr><name pos:line="31" pos:column="51">hostname<pos:position pos:line="31" pos:column="59"/></name></expr></argument>)<pos:position pos:line="31" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="61"/></condition><then pos:line="31" pos:column="61"> <block pos:line="31" pos:column="62">{

        <expr_stmt><expr><name><name pos:line="33" pos:column="9">ipaddr<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">.<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">s_addr<pos:position pos:line="33" pos:column="22"/></name></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <call><name pos:line="33" pos:column="25">inet_addr<pos:position pos:line="33" pos:column="34"/></name><argument_list pos:line="33" pos:column="34">(<argument><expr><name pos:line="33" pos:column="35">hostname<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">addr_list<pos:position pos:line="34" pos:column="18"/></name><index pos:line="34" pos:column="18">[<expr><literal type="number" pos:line="34" pos:column="19">0<pos:position pos:line="34" pos:column="20"/></literal></expr>]<pos:position pos:line="34" pos:column="21"/></index></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <operator pos:line="34" pos:column="24">(<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">char<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">*<pos:position pos:line="34" pos:column="31"/></operator><operator pos:line="34" pos:column="31">)<pos:position pos:line="34" pos:column="32"/></operator><operator pos:line="34" pos:column="32">&amp;<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="33">ipaddr<pos:position pos:line="34" pos:column="39"/></name></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">addr_list<pos:position pos:line="35" pos:column="18"/></name><index pos:line="35" pos:column="18">[<expr><literal type="number" pos:line="35" pos:column="19">1<pos:position pos:line="35" pos:column="20"/></literal></expr>]<pos:position pos:line="35" pos:column="21"/></index></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <name pos:line="35" pos:column="24">NULL<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt> <comment type="block" pos:line="35" pos:column="30">/* just one IP in list */</comment>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">hs<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">.<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">h_addr_list<pos:position pos:line="36" pos:column="23"/></name></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <operator pos:line="36" pos:column="26">(<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">char<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">*<pos:position pos:line="36" pos:column="33"/></operator><operator pos:line="36" pos:column="33">*<pos:position pos:line="36" pos:column="34"/></operator><operator pos:line="36" pos:column="34">)<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="35">addr_list<pos:position pos:line="36" pos:column="44"/></name></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">hp<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <operator pos:line="37" pos:column="14">&amp;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="15">hs<pos:position pos:line="37" pos:column="17"/></name></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then>
    <else pos:line="39" pos:column="5">else <block pos:line="39" pos:column="10">{
<cpp:if pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">if<pos:position pos:line="40" pos:column="4"/></cpp:directive> <expr><name pos:line="40" pos:column="5">APR_HAS_THREADS<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">&amp;&amp;<pos:position pos:line="40" pos:column="31"/></operator> <operator pos:line="40" pos:column="24">!<pos:position pos:line="40" pos:column="25"/></operator><call><name pos:line="40" pos:column="25">defined<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">GETHOSTBYNAME_IS_THREAD_SAFE<pos:position pos:line="40" pos:column="61"/></name></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call> <operator pos:line="40" pos:column="63">&amp;&amp;<pos:position pos:line="40" pos:column="73"/></operator> \
    <call><name pos:line="41" pos:column="5">defined<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">HAVE_GETHOSTBYNAME_R<pos:position pos:line="41" pos:column="33"/></name></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call> <operator pos:line="41" pos:column="35">&amp;&amp;<pos:position pos:line="41" pos:column="45"/></operator> <operator pos:line="41" pos:column="38">!<pos:position pos:line="41" pos:column="39"/></operator><call><name pos:line="41" pos:column="39">defined<pos:position pos:line="41" pos:column="46"/></name><argument_list pos:line="41" pos:column="46">(<argument><expr><name pos:line="41" pos:column="47">BEOS<pos:position pos:line="41" pos:column="51"/></name></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call></expr></cpp:if>
<cpp:if pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">if<pos:position pos:line="42" pos:column="4"/></cpp:directive> <expr><call><name pos:line="42" pos:column="5">defined<pos:position pos:line="42" pos:column="12"/></name><argument_list pos:line="42" pos:column="12">(<argument><expr><name pos:line="42" pos:column="13">GETHOSTBYNAME_R_HOSTENT_DATA<pos:position pos:line="42" pos:column="41"/></name></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call></expr></cpp:if>
        <comment type="block" pos:line="43" pos:column="9">/* AIX, HP/UX, D/UX et alia */</comment>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">gethostbyname_r<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name pos:line="44" pos:column="25">hostname<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="35">&amp;<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="36">hs<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="40">&amp;<pos:position pos:line="44" pos:column="45"/></operator><name pos:line="44" pos:column="41">hd<pos:position pos:line="44" pos:column="43"/></name></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="45" pos:column="9">hp<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <operator pos:line="45" pos:column="14">&amp;<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="15">hs<pos:position pos:line="45" pos:column="17"/></name></expr>;<pos:position pos:line="45" pos:column="18"/></expr_stmt>
<cpp:else pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">else<pos:position pos:line="46" pos:column="6"/></cpp:directive></cpp:else>
<cpp:if pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">if<pos:position pos:line="47" pos:column="4"/></cpp:directive> <expr><call><name pos:line="47" pos:column="5">defined<pos:position pos:line="47" pos:column="12"/></name><argument_list pos:line="47" pos:column="12">(<argument><expr><name pos:line="47" pos:column="13">GETHOSTBYNAME_R_GLIBC2<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr></cpp:if>
        <comment type="block" pos:line="48" pos:column="9">/* Linux glibc2+ */</comment>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">gethostbyname_r<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><name pos:line="49" pos:column="25">hostname<pos:position pos:line="49" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="35">&amp;<pos:position pos:line="49" pos:column="40"/></operator><name pos:line="49" pos:column="36">hs<pos:position pos:line="49" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="40">tmp<pos:position pos:line="49" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="45">GETHOSTBYNAME_BUFLEN<pos:position pos:line="49" pos:column="65"/></name> <operator pos:line="49" pos:column="66">-<pos:position pos:line="49" pos:column="67"/></operator> <literal type="number" pos:line="49" pos:column="68">1<pos:position pos:line="49" pos:column="69"/></literal></expr></argument>, 
                        <argument><expr><operator pos:line="50" pos:column="25">&amp;<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="26">hp<pos:position pos:line="50" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="30">&amp;<pos:position pos:line="50" pos:column="35"/></operator><name pos:line="50" pos:column="31">hosterror<pos:position pos:line="50" pos:column="40"/></name></expr></argument>)<pos:position pos:line="50" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="42"/></expr_stmt>
<cpp:else pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">else<pos:position pos:line="51" pos:column="6"/></cpp:directive></cpp:else>
        <comment type="block" pos:line="52" pos:column="9">/* Solaris, Irix et alia */</comment>
        <expr_stmt><expr><name pos:line="53" pos:column="9">hp<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <call><name pos:line="53" pos:column="14">gethostbyname_r<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">hostname<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="40">&amp;<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="41">hs<pos:position pos:line="53" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="45">tmp<pos:position pos:line="53" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="50">GETHOSTBYNAME_BUFLEN<pos:position pos:line="53" pos:column="70"/></name> <operator pos:line="53" pos:column="71">-<pos:position pos:line="53" pos:column="72"/></operator> <literal type="number" pos:line="53" pos:column="73">1<pos:position pos:line="53" pos:column="74"/></literal></expr></argument>,
                             <argument><expr><operator pos:line="54" pos:column="30">&amp;<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="31">hosterror<pos:position pos:line="54" pos:column="40"/></name></expr></argument>)<pos:position pos:line="54" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">endif<pos:position pos:line="55" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="55" pos:column="8">/* !defined(GETHOSTBYNAME_R_GLIBC2) */</comment>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">!<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">hp<pos:position pos:line="56" pos:column="16"/></name></expr>)<pos:position pos:line="56" pos:column="17"/></condition><then pos:line="56" pos:column="17"> <block pos:line="56" pos:column="18">{
            <return pos:line="57" pos:column="13">return <expr><operator pos:line="57" pos:column="20">(<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="21">hosterror<pos:position pos:line="57" pos:column="30"/></name> <operator pos:line="57" pos:column="31">+<pos:position pos:line="57" pos:column="32"/></operator> <name pos:line="57" pos:column="33">APR_OS_START_SYSERR<pos:position pos:line="57" pos:column="52"/></name><operator pos:line="57" pos:column="52">)<pos:position pos:line="57" pos:column="53"/></operator></expr>;<pos:position pos:line="57" pos:column="54"/></return>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
<cpp:endif pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">endif<pos:position pos:line="59" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="59" pos:column="8">/* !defined(GETHOSTBYNAME_R_HOSTENT_DATA) */</comment>
<cpp:else pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">else<pos:position pos:line="60" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="61" pos:column="9">hp<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <call><name pos:line="61" pos:column="14">gethostbyname<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><name pos:line="61" pos:column="28">hostname<pos:position pos:line="61" pos:column="36"/></name></expr></argument>)<pos:position pos:line="61" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif>

        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">!<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="14">hp<pos:position pos:line="64" pos:column="16"/></name></expr>)<pos:position pos:line="64" pos:column="17"/></condition><then pos:line="64" pos:column="17"> <block pos:line="64" pos:column="18">{
<cpp:ifdef pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">ifdef<pos:position pos:line="65" pos:column="7"/></cpp:directive> <name pos:line="65" pos:column="8">WIN32<pos:position pos:line="65" pos:column="13"/></name></cpp:ifdef>
            <return pos:line="66" pos:column="13">return <expr><call><name pos:line="66" pos:column="20">apr_get_netos_error<pos:position pos:line="66" pos:column="39"/></name><argument_list pos:line="66" pos:column="39">()<pos:position pos:line="66" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="42"/></return>
<cpp:else pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">else<pos:position pos:line="67" pos:column="6"/></cpp:directive></cpp:else>
            <return pos:line="68" pos:column="13">return <expr><operator pos:line="68" pos:column="20">(<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="21">h_errno<pos:position pos:line="68" pos:column="28"/></name> <operator pos:line="68" pos:column="29">+<pos:position pos:line="68" pos:column="30"/></operator> <name pos:line="68" pos:column="31">APR_OS_START_SYSERR<pos:position pos:line="68" pos:column="50"/></name><operator pos:line="68" pos:column="50">)<pos:position pos:line="68" pos:column="51"/></operator></expr>;<pos:position pos:line="68" pos:column="52"/></return>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="73" pos:column="5">prev_sa<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">=<pos:position pos:line="73" pos:column="14"/></operator> <name pos:line="73" pos:column="15">NULL<pos:position pos:line="73" pos:column="19"/></name></expr>;<pos:position pos:line="73" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="74" pos:column="5">curaddr<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">=<pos:position pos:line="74" pos:column="14"/></operator> <literal type="number" pos:line="74" pos:column="15">0<pos:position pos:line="74" pos:column="16"/></literal></expr>;<pos:position pos:line="74" pos:column="17"/></expr_stmt>
    <while pos:line="75" pos:column="5">while <condition pos:line="75" pos:column="11">(<expr><name><name pos:line="75" pos:column="12">hp<pos:position pos:line="75" pos:column="14"/></name><operator pos:line="75" pos:column="14">-&gt;<pos:position pos:line="75" pos:column="19"/></operator><name pos:line="75" pos:column="16">h_addr_list<pos:position pos:line="75" pos:column="27"/></name><index pos:line="75" pos:column="27">[<expr><name pos:line="75" pos:column="28">curaddr<pos:position pos:line="75" pos:column="35"/></name></expr>]<pos:position pos:line="75" pos:column="36"/></index></name></expr>)<pos:position pos:line="75" pos:column="37"/></condition> <block pos:line="75" pos:column="38">{
        <decl_stmt><decl><type><name pos:line="76" pos:column="9">apr_sockaddr_t<pos:position pos:line="76" pos:column="23"/></name> <modifier pos:line="76" pos:column="24">*<pos:position pos:line="76" pos:column="25"/></modifier></type><name pos:line="76" pos:column="25">new_sa<pos:position pos:line="76" pos:column="31"/></name> <init pos:line="76" pos:column="32">= <expr><call><name pos:line="76" pos:column="34">apr_pcalloc<pos:position pos:line="76" pos:column="45"/></name><argument_list pos:line="76" pos:column="45">(<argument><expr><name pos:line="76" pos:column="46">p<pos:position pos:line="76" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="49">sizeof<argument_list pos:line="76" pos:column="55">(<argument><expr><name pos:line="76" pos:column="56">apr_sockaddr_t<pos:position pos:line="76" pos:column="70"/></name></expr></argument>)<pos:position pos:line="76" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="76" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="76" pos:column="73"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="78" pos:column="9">new_sa<pos:position pos:line="78" pos:column="15"/></name><operator pos:line="78" pos:column="15">-&gt;<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="17">pool<pos:position pos:line="78" pos:column="21"/></name></name> <operator pos:line="78" pos:column="22">=<pos:position pos:line="78" pos:column="23"/></operator> <name pos:line="78" pos:column="24">p<pos:position pos:line="78" pos:column="25"/></name></expr>;<pos:position pos:line="78" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="79" pos:column="9">new_sa<pos:position pos:line="79" pos:column="15"/></name><operator pos:line="79" pos:column="15">-&gt;<pos:position pos:line="79" pos:column="20"/></operator><name pos:line="79" pos:column="17">sa<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">.<pos:position pos:line="79" pos:column="20"/></operator><name pos:line="79" pos:column="20">sin<pos:position pos:line="79" pos:column="23"/></name><operator pos:line="79" pos:column="23">.<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="24">sin_addr<pos:position pos:line="79" pos:column="32"/></name></name> <operator pos:line="79" pos:column="33">=<pos:position pos:line="79" pos:column="34"/></operator> <operator pos:line="79" pos:column="35">*<pos:position pos:line="79" pos:column="36"/></operator><operator pos:line="79" pos:column="36">(<pos:position pos:line="79" pos:column="37"/></operator>struct <name pos:line="79" pos:column="44">in_addr<pos:position pos:line="79" pos:column="51"/></name> <operator pos:line="79" pos:column="52">*<pos:position pos:line="79" pos:column="53"/></operator><operator pos:line="79" pos:column="53">)<pos:position pos:line="79" pos:column="54"/></operator><name><name pos:line="79" pos:column="54">hp<pos:position pos:line="79" pos:column="56"/></name><operator pos:line="79" pos:column="56">-&gt;<pos:position pos:line="79" pos:column="61"/></operator><name pos:line="79" pos:column="58">h_addr_list<pos:position pos:line="79" pos:column="69"/></name><index pos:line="79" pos:column="69">[<expr><name pos:line="79" pos:column="70">curaddr<pos:position pos:line="79" pos:column="77"/></name></expr>]<pos:position pos:line="79" pos:column="78"/></index></name></expr>;<pos:position pos:line="79" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">apr_sockaddr_vars_set<pos:position pos:line="80" pos:column="30"/></name><argument_list pos:line="80" pos:column="30">(<argument><expr><name pos:line="80" pos:column="31">new_sa<pos:position pos:line="80" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="39">AF_INET<pos:position pos:line="80" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="48">port<pos:position pos:line="80" pos:column="52"/></name></expr></argument>)<pos:position pos:line="80" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="54"/></expr_stmt>

        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><operator pos:line="82" pos:column="13">!<pos:position pos:line="82" pos:column="14"/></operator><name pos:line="82" pos:column="14">prev_sa<pos:position pos:line="82" pos:column="21"/></name></expr>)<pos:position pos:line="82" pos:column="22"/></condition><then pos:line="82" pos:column="22"> <block pos:line="82" pos:column="23">{ <comment type="block" pos:line="82" pos:column="25">/* first element in new list */</comment>
            <if pos:line="83" pos:column="13">if <condition pos:line="83" pos:column="16">(<expr><name pos:line="83" pos:column="17">orig_hostname<pos:position pos:line="83" pos:column="30"/></name></expr>)<pos:position pos:line="83" pos:column="31"/></condition><then pos:line="83" pos:column="31"> <block pos:line="83" pos:column="32">{
                <expr_stmt><expr><name><name pos:line="84" pos:column="17">new_sa<pos:position pos:line="84" pos:column="23"/></name><operator pos:line="84" pos:column="23">-&gt;<pos:position pos:line="84" pos:column="28"/></operator><name pos:line="84" pos:column="25">hostname<pos:position pos:line="84" pos:column="33"/></name></name> <operator pos:line="84" pos:column="34">=<pos:position pos:line="84" pos:column="35"/></operator> <call><name pos:line="84" pos:column="36">apr_pstrdup<pos:position pos:line="84" pos:column="47"/></name><argument_list pos:line="84" pos:column="47">(<argument><expr><name pos:line="84" pos:column="48">p<pos:position pos:line="84" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="51">orig_hostname<pos:position pos:line="84" pos:column="64"/></name></expr></argument>)<pos:position pos:line="84" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="66"/></expr_stmt>
            }<pos:position pos:line="85" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="86" pos:column="13">*<pos:position pos:line="86" pos:column="14"/></operator><name pos:line="86" pos:column="14">sa<pos:position pos:line="86" pos:column="16"/></name> <operator pos:line="86" pos:column="17">=<pos:position pos:line="86" pos:column="18"/></operator> <name pos:line="86" pos:column="19">new_sa<pos:position pos:line="86" pos:column="25"/></name></expr>;<pos:position pos:line="86" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="87" pos:column="10"/></block></then>
        <else pos:line="88" pos:column="9">else <block pos:line="88" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="89" pos:column="13">new_sa<pos:position pos:line="89" pos:column="19"/></name><operator pos:line="89" pos:column="19">-&gt;<pos:position pos:line="89" pos:column="24"/></operator><name pos:line="89" pos:column="21">hostname<pos:position pos:line="89" pos:column="29"/></name></name> <operator pos:line="89" pos:column="30">=<pos:position pos:line="89" pos:column="31"/></operator> <name><name pos:line="89" pos:column="32">prev_sa<pos:position pos:line="89" pos:column="39"/></name><operator pos:line="89" pos:column="39">-&gt;<pos:position pos:line="89" pos:column="44"/></operator><name pos:line="89" pos:column="41">hostname<pos:position pos:line="89" pos:column="49"/></name></name></expr>;<pos:position pos:line="89" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="90" pos:column="13">prev_sa<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">-&gt;<pos:position pos:line="90" pos:column="25"/></operator><name pos:line="90" pos:column="22">next<pos:position pos:line="90" pos:column="26"/></name></name> <operator pos:line="90" pos:column="27">=<pos:position pos:line="90" pos:column="28"/></operator> <name pos:line="90" pos:column="29">new_sa<pos:position pos:line="90" pos:column="35"/></name></expr>;<pos:position pos:line="90" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="91" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="93" pos:column="9">prev_sa<pos:position pos:line="93" pos:column="16"/></name> <operator pos:line="93" pos:column="17">=<pos:position pos:line="93" pos:column="18"/></operator> <name pos:line="93" pos:column="19">new_sa<pos:position pos:line="93" pos:column="25"/></name></expr>;<pos:position pos:line="93" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="94" pos:column="9">++<pos:position pos:line="94" pos:column="11"/></operator><name pos:line="94" pos:column="11">curaddr<pos:position pos:line="94" pos:column="18"/></name></expr>;<pos:position pos:line="94" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="95" pos:column="6"/></block></while>

    <return pos:line="97" pos:column="5">return <expr><name pos:line="97" pos:column="12">APR_SUCCESS<pos:position pos:line="97" pos:column="23"/></name></expr>;<pos:position pos:line="97" pos:column="24"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

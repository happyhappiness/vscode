<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1326_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">sock_read<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">fd<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">void<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">vbuf<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">size_t<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">buf_size<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">buf<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">vbuf<pos:position pos:line="3" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rc<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">bytes_read<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>

    <do pos:line="7" pos:column="5">do <block pos:line="7" pos:column="8">{
        <do pos:line="8" pos:column="9">do <block pos:line="8" pos:column="12">{
            <expr_stmt><expr><name pos:line="9" pos:column="13">rc<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <call><name pos:line="9" pos:column="18">read<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">fd<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="27">buf<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">+<pos:position pos:line="9" pos:column="32"/></operator> <name pos:line="9" pos:column="33">bytes_read<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="45">buf_size<pos:position pos:line="9" pos:column="53"/></name> <operator pos:line="9" pos:column="54">-<pos:position pos:line="9" pos:column="55"/></operator> <name pos:line="9" pos:column="56">bytes_read<pos:position pos:line="9" pos:column="66"/></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="10" pos:column="10"/></block> while <condition pos:line="10" pos:column="17">(<expr><name pos:line="10" pos:column="18">rc<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">&lt;<pos:position pos:line="10" pos:column="25"/></operator> <literal type="number" pos:line="10" pos:column="23">0<pos:position pos:line="10" pos:column="24"/></literal> <operator pos:line="10" pos:column="25">&amp;&amp;<pos:position pos:line="10" pos:column="35"/></operator> <name pos:line="10" pos:column="28">errno<pos:position pos:line="10" pos:column="33"/></name> <operator pos:line="10" pos:column="34">==<pos:position pos:line="10" pos:column="36"/></operator> <name pos:line="10" pos:column="37">EINTR<pos:position pos:line="10" pos:column="42"/></name></expr>)<pos:position pos:line="10" pos:column="43"/></condition>;<pos:position pos:line="10" pos:column="44"/></do>
        <switch pos:line="11" pos:column="9">switch<condition pos:line="11" pos:column="15">(<expr><name pos:line="11" pos:column="16">rc<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition> <block pos:line="11" pos:column="20">{
        <case pos:line="12" pos:column="9">case <expr><operator pos:line="12" pos:column="14">-<pos:position pos:line="12" pos:column="15"/></operator><literal type="number" pos:line="12" pos:column="15">1<pos:position pos:line="12" pos:column="16"/></literal></expr>:<pos:position pos:line="12" pos:column="17"/></case>
            <return pos:line="13" pos:column="13">return <expr><name pos:line="13" pos:column="20">errno<pos:position pos:line="13" pos:column="25"/></name></expr>;<pos:position pos:line="13" pos:column="26"/></return>
        <case pos:line="14" pos:column="9">case <expr><literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>:<pos:position pos:line="14" pos:column="16"/></case> <comment type="block" pos:line="14" pos:column="17">/* unexpected */</comment>
            <return pos:line="15" pos:column="13">return <expr><name pos:line="15" pos:column="20">ECONNRESET<pos:position pos:line="15" pos:column="30"/></name></expr>;<pos:position pos:line="15" pos:column="31"/></return>
        <default pos:line="16" pos:column="9">default:<pos:position pos:line="16" pos:column="17"/></default>
            <expr_stmt><expr><name pos:line="17" pos:column="13">bytes_read<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">+=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">rc<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></switch>
    }<pos:position pos:line="19" pos:column="6"/></block> while <condition pos:line="19" pos:column="13">(<expr><name pos:line="19" pos:column="14">bytes_read<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">&lt;<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="27">buf_size<pos:position pos:line="19" pos:column="35"/></name></expr>)<pos:position pos:line="19" pos:column="36"/></condition>;<pos:position pos:line="19" pos:column="37"/></do>

    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">APR_SUCCESS<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

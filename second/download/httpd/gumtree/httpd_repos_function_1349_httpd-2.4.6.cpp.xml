<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1349_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">remove_header_do<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">v<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">key<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">val<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">(<pos:position pos:line="3" pos:column="10"/></operator><operator pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></operator><name pos:line="3" pos:column="11">key<pos:position pos:line="3" pos:column="14"/></name> <operator pos:line="3" pos:column="15">==<pos:position pos:line="3" pos:column="17"/></operator> <literal type="char" pos:line="3" pos:column="18">'W'<pos:position pos:line="3" pos:column="21"/></literal> <operator pos:line="3" pos:column="22">||<pos:position pos:line="3" pos:column="24"/></operator> <operator pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="26">key<pos:position pos:line="3" pos:column="29"/></name> <operator pos:line="3" pos:column="30">==<pos:position pos:line="3" pos:column="32"/></operator> <literal type="char" pos:line="3" pos:column="33">'w'<pos:position pos:line="3" pos:column="36"/></literal><operator pos:line="3" pos:column="36">)<pos:position pos:line="3" pos:column="37"/></operator> <operator pos:line="3" pos:column="38">&amp;&amp;<pos:position pos:line="3" pos:column="48"/></operator> <operator pos:line="3" pos:column="41">!<pos:position pos:line="3" pos:column="42"/></operator><call><name pos:line="3" pos:column="42">strcasecmp<pos:position pos:line="3" pos:column="52"/></name><argument_list pos:line="3" pos:column="52">(<argument><expr><name pos:line="3" pos:column="53">key<pos:position pos:line="3" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="58">"Warning"<pos:position pos:line="3" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="69"/></condition><then pos:line="3" pos:column="69"> <block pos:line="3" pos:column="70">{
        <comment type="block" pos:line="4" pos:column="9">/* any stored Warning headers with warn-code 2xx MUST be retained
         * in the cache entry and the forwarded response.
         */</comment>
    }<pos:position pos:line="7" pos:column="6"/></block></then>
    <else pos:line="8" pos:column="5">else <block pos:line="8" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">apr_table_unset<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">v<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="28">key<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></else></if>
    <return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">1<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6566.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_from_h1_parse_response<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">h2_task<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">task<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">ap_filter_t<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">f<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, 
                                       <parameter><decl><type><name pos:line="2" pos:column="40">apr_bucket_brigade<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">bb<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">h2_response_parser<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">parser<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><name><name pos:line="4" pos:column="34">task<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">-&gt;<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="40">output<pos:position pos:line="4" pos:column="46"/></name><operator pos:line="4" pos:column="46">.<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="47">rparser<pos:position pos:line="4" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">line<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">HUGE_STRING_LEN<pos:position pos:line="5" pos:column="30"/></name></expr>]<pos:position pos:line="5" pos:column="31"/></index></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">status<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">APR_SUCCESS<pos:position pos:line="6" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">parser<pos:position pos:line="8" pos:column="16"/></name></expr>)<pos:position pos:line="8" pos:column="17"/></condition><then pos:line="8" pos:column="17"> <block pos:line="8" pos:column="18">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">parser<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <call><name pos:line="9" pos:column="18">apr_pcalloc<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name><name pos:line="9" pos:column="30">task<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">pool<pos:position pos:line="9" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="42">sizeof<argument_list pos:line="9" pos:column="48">(<argument><expr><operator pos:line="9" pos:column="49">*<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="50">parser<pos:position pos:line="9" pos:column="56"/></name></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">parser<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">task<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">task<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">parser<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">state<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">H2_RP_STATUS_LINE<pos:position pos:line="11" pos:column="42"/></name></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">parser<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">hlines<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <call><name pos:line="12" pos:column="26">apr_array_make<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><name><name pos:line="12" pos:column="41">task<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">-&gt;<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="47">pool<pos:position pos:line="12" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="53">10<pos:position pos:line="12" pos:column="55"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="57">sizeof<argument_list pos:line="12" pos:column="63">(<argument><expr><name pos:line="12" pos:column="64">char<pos:position pos:line="12" pos:column="68"/></name> <operator pos:line="12" pos:column="69">*<pos:position pos:line="12" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">task<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">output<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">.<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">rparser<pos:position pos:line="13" pos:column="29"/></name></name> <operator pos:line="13" pos:column="30">=<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">parser<pos:position pos:line="13" pos:column="38"/></name></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    
    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">(<expr><operator pos:line="16" pos:column="12">!<pos:position pos:line="16" pos:column="13"/></operator><call><name pos:line="16" pos:column="13">APR_BRIGADE_EMPTY<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">bb<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call> <operator pos:line="16" pos:column="35">&amp;&amp;<pos:position pos:line="16" pos:column="45"/></operator> <name pos:line="16" pos:column="38">status<pos:position pos:line="16" pos:column="44"/></name> <operator pos:line="16" pos:column="45">==<pos:position pos:line="16" pos:column="47"/></operator> <name pos:line="16" pos:column="48">APR_SUCCESS<pos:position pos:line="16" pos:column="59"/></name></expr>)<pos:position pos:line="16" pos:column="60"/></condition> <block pos:line="16" pos:column="61">{
        <switch pos:line="17" pos:column="9">switch <condition pos:line="17" pos:column="16">(<expr><name><name pos:line="17" pos:column="17">parser<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">-&gt;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="25">state<pos:position pos:line="17" pos:column="30"/></name></name></expr>)<pos:position pos:line="17" pos:column="31"/></condition> <block pos:line="17" pos:column="32">{
            <case pos:line="18" pos:column="13">case <expr><name pos:line="18" pos:column="18">H2_RP_STATUS_LINE<pos:position pos:line="18" pos:column="35"/></name></expr>:<pos:position pos:line="18" pos:column="36"/></case>
            <case pos:line="19" pos:column="13">case <expr><name pos:line="19" pos:column="18">H2_RP_HEADER_LINE<pos:position pos:line="19" pos:column="35"/></name></expr>:<pos:position pos:line="19" pos:column="36"/></case>
                <expr_stmt><expr><name pos:line="20" pos:column="17">status<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <call><name pos:line="20" pos:column="26">get_line<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><name pos:line="20" pos:column="35">parser<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">bb<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">line<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="53">sizeof<argument_list pos:line="20" pos:column="59">(<argument><expr><name pos:line="20" pos:column="60">line<pos:position pos:line="20" pos:column="64"/></name></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt>
                <if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">status<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">==<pos:position pos:line="21" pos:column="30"/></operator> <name pos:line="21" pos:column="31">APR_EAGAIN<pos:position pos:line="21" pos:column="41"/></name></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42"> <block pos:line="21" pos:column="43">{
                    <comment type="block" pos:line="22" pos:column="21">/* need more data */</comment>
                    <return pos:line="23" pos:column="21">return <expr><name pos:line="23" pos:column="28">APR_SUCCESS<pos:position pos:line="23" pos:column="39"/></name></expr>;<pos:position pos:line="23" pos:column="40"/></return>
                }<pos:position pos:line="24" pos:column="18"/></block></then>
                <elseif pos:line="25" pos:column="17">else <if pos:line="25" pos:column="22">if <condition pos:line="25" pos:column="25">(<expr><name pos:line="25" pos:column="26">status<pos:position pos:line="25" pos:column="32"/></name> <operator pos:line="25" pos:column="33">!=<pos:position pos:line="25" pos:column="35"/></operator> <name pos:line="25" pos:column="36">APR_SUCCESS<pos:position pos:line="25" pos:column="47"/></name></expr>)<pos:position pos:line="25" pos:column="48"/></condition><then pos:line="25" pos:column="48"> <block pos:line="25" pos:column="49">{
                    <return pos:line="26" pos:column="21">return <expr><name pos:line="26" pos:column="28">status<pos:position pos:line="26" pos:column="34"/></name></expr>;<pos:position pos:line="26" pos:column="35"/></return>
                }<pos:position pos:line="27" pos:column="18"/></block></then></if></elseif></if>
                <if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name><name pos:line="28" pos:column="21">parser<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">-&gt;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="29">state<pos:position pos:line="28" pos:column="34"/></name></name> <operator pos:line="28" pos:column="35">==<pos:position pos:line="28" pos:column="37"/></operator> <name pos:line="28" pos:column="38">H2_RP_STATUS_LINE<pos:position pos:line="28" pos:column="55"/></name></expr>)<pos:position pos:line="28" pos:column="56"/></condition><then pos:line="28" pos:column="56"> <block pos:line="28" pos:column="57">{
                    <comment type="block" pos:line="29" pos:column="21">/* instead of parsing, just take it directly */</comment>
                    <expr_stmt><expr><name pos:line="30" pos:column="21">status<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">=<pos:position pos:line="30" pos:column="29"/></operator> <call><name pos:line="30" pos:column="30">parse_status<pos:position pos:line="30" pos:column="42"/></name><argument_list pos:line="30" pos:column="42">(<argument><expr><name pos:line="30" pos:column="43">task<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">line<pos:position pos:line="30" pos:column="53"/></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>
                }<pos:position pos:line="31" pos:column="18"/></block></then>
                <elseif pos:line="32" pos:column="17">else <if pos:line="32" pos:column="22">if <condition pos:line="32" pos:column="25">(<expr><name><name pos:line="32" pos:column="26">line<pos:position pos:line="32" pos:column="30"/></name><index pos:line="32" pos:column="30">[<expr><literal type="number" pos:line="32" pos:column="31">0<pos:position pos:line="32" pos:column="32"/></literal></expr>]<pos:position pos:line="32" pos:column="33"/></index></name> <operator pos:line="32" pos:column="34">==<pos:position pos:line="32" pos:column="36"/></operator> <literal type="char" pos:line="32" pos:column="37">'\0'<pos:position pos:line="32" pos:column="41"/></literal></expr>)<pos:position pos:line="32" pos:column="42"/></condition><then pos:line="32" pos:column="42"> <block pos:line="32" pos:column="43">{
                    <comment type="block" pos:line="33" pos:column="21">/* end of headers, pass response onward */</comment>
                    <expr_stmt><expr><call><name pos:line="34" pos:column="21">ap_log_cerror<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">APLOG_MARK<pos:position pos:line="34" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="47">APLOG_TRACE1<pos:position pos:line="34" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="61">0<pos:position pos:line="34" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="64">f<pos:position pos:line="34" pos:column="65"/></name><operator pos:line="34" pos:column="65">-&gt;<pos:position pos:line="34" pos:column="70"/></operator><name pos:line="34" pos:column="67">c<pos:position pos:line="34" pos:column="68"/></name></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="35" pos:column="35">"h2_task(%s): end of response"<pos:position pos:line="35" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="67">task<pos:position pos:line="35" pos:column="71"/></name><operator pos:line="35" pos:column="71">-&gt;<pos:position pos:line="35" pos:column="76"/></operator><name pos:line="35" pos:column="73">id<pos:position pos:line="35" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="77"/></expr_stmt>
                    <return pos:line="36" pos:column="21">return <expr><call><name pos:line="36" pos:column="28">pass_response<pos:position pos:line="36" pos:column="41"/></name><argument_list pos:line="36" pos:column="41">(<argument><expr><name pos:line="36" pos:column="42">task<pos:position pos:line="36" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="48">f<pos:position pos:line="36" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">parser<pos:position pos:line="36" pos:column="57"/></name></expr></argument>)<pos:position pos:line="36" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="59"/></return>
                }<pos:position pos:line="37" pos:column="18"/></block></then></if></elseif>
                <else pos:line="38" pos:column="17">else <block pos:line="38" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="39" pos:column="21">ap_log_cerror<pos:position pos:line="39" pos:column="34"/></name><argument_list pos:line="39" pos:column="34">(<argument><expr><name pos:line="39" pos:column="35">APLOG_MARK<pos:position pos:line="39" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="47">APLOG_TRACE1<pos:position pos:line="39" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="61">0<pos:position pos:line="39" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="64">f<pos:position pos:line="39" pos:column="65"/></name><operator pos:line="39" pos:column="65">-&gt;<pos:position pos:line="39" pos:column="70"/></operator><name pos:line="39" pos:column="67">c<pos:position pos:line="39" pos:column="68"/></name></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="40" pos:column="35">"h2_task(%s): response header %s"<pos:position pos:line="40" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="70">task<pos:position pos:line="40" pos:column="74"/></name><operator pos:line="40" pos:column="74">-&gt;<pos:position pos:line="40" pos:column="79"/></operator><name pos:line="40" pos:column="76">id<pos:position pos:line="40" pos:column="78"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="80">line<pos:position pos:line="40" pos:column="84"/></name></expr></argument>)<pos:position pos:line="40" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="86"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="41" pos:column="21">status<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">=<pos:position pos:line="41" pos:column="29"/></operator> <call><name pos:line="41" pos:column="30">parse_header<pos:position pos:line="41" pos:column="42"/></name><argument_list pos:line="41" pos:column="42">(<argument><expr><name pos:line="41" pos:column="43">parser<pos:position pos:line="41" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="51">line<pos:position pos:line="41" pos:column="55"/></name></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="42" pos:column="18"/></block></else></if>
                <break pos:line="43" pos:column="17">break;<pos:position pos:line="43" pos:column="23"/></break>
                
            <default pos:line="45" pos:column="13">default:<pos:position pos:line="45" pos:column="21"/></default>
                <return pos:line="46" pos:column="17">return <expr><name pos:line="46" pos:column="24">status<pos:position pos:line="46" pos:column="30"/></name></expr>;<pos:position pos:line="46" pos:column="31"/></return>
        }<pos:position pos:line="47" pos:column="10"/></block></switch>
    }<pos:position pos:line="48" pos:column="6"/></block></while>
    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">status<pos:position pos:line="49" pos:column="18"/></name></expr>;<pos:position pos:line="49" pos:column="19"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

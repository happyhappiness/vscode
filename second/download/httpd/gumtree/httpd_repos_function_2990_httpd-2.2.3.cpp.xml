<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2990_httpd-2.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">abts_suite<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">abts_add_suite<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">abts_suite<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">suite<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">suite_name_full<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">sub_suite<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">subsuite<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">p<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">suite_name<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">curr_char<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>
    
    <comment type="block" pos:line="8" pos:column="5">/* Only end the suite if we actually ran it */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">suite<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">&amp;&amp;<pos:position pos:line="9" pos:column="25"/></operator> <name><name pos:line="9" pos:column="18">suite<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">tail<pos:position pos:line="9" pos:column="29"/></name></name> <operator pos:line="9" pos:column="30">&amp;&amp;<pos:position pos:line="9" pos:column="40"/></operator><operator pos:line="9" pos:column="32">!<pos:position pos:line="9" pos:column="33"/></operator><name><name pos:line="9" pos:column="33">suite<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">tail<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">-&gt;<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="46">not_run<pos:position pos:line="9" pos:column="53"/></name></name></expr>)<pos:position pos:line="9" pos:column="54"/></condition><then pos:line="9" pos:column="54"> <block pos:line="9" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">end_suite<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">suite<pos:position pos:line="10" pos:column="24"/></name></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="13" pos:column="5">subsuite<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <call><name pos:line="13" pos:column="16">malloc<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><sizeof pos:line="13" pos:column="23">sizeof<argument_list pos:line="13" pos:column="29">(<argument><expr><operator pos:line="13" pos:column="30">*<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">subsuite<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">subsuite<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">num_test<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">subsuite<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">failed<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">subsuite<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">next<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">NULL<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
    <comment type="block" pos:line="17" pos:column="5">/* suite_name_full may be an absolute path depending on __FILE__ 
     * expansion */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">suite_name<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">strrchr<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">suite_name_full<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="43">'/'<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">suite_name<pos:position pos:line="20" pos:column="19"/></name></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20"> <block pos:line="20" pos:column="21">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">suite_name<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">++<pos:position pos:line="21" pos:column="21"/></operator></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then> <else pos:line="22" pos:column="7">else <block pos:line="22" pos:column="12">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">suite_name<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">suite_name_full<pos:position pos:line="23" pos:column="37"/></name></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="25" pos:column="5">p<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <call><name pos:line="25" pos:column="9">strrchr<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">suite_name<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="25" pos:column="29">'.'<pos:position pos:line="25" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">p<pos:position pos:line="26" pos:column="10"/></name></expr>)<pos:position pos:line="26" pos:column="11"/></condition><then pos:line="26" pos:column="11"> <block pos:line="26" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">subsuite<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">name<pos:position pos:line="27" pos:column="23"/></name></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <call><name pos:line="27" pos:column="26">memcpy<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><call><name pos:line="27" pos:column="33">calloc<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><name pos:line="27" pos:column="40">p<pos:position pos:line="27" pos:column="41"/></name> <operator pos:line="27" pos:column="42">-<pos:position pos:line="27" pos:column="43"/></operator> <name pos:line="27" pos:column="44">suite_name<pos:position pos:line="27" pos:column="54"/></name> <operator pos:line="27" pos:column="55">+<pos:position pos:line="27" pos:column="56"/></operator> <literal type="number" pos:line="27" pos:column="57">1<pos:position pos:line="27" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="60">1<pos:position pos:line="27" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr></argument>,
                                <argument><expr><name pos:line="28" pos:column="33">suite_name<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="45">p<pos:position pos:line="28" pos:column="46"/></name> <operator pos:line="28" pos:column="47">-<pos:position pos:line="28" pos:column="48"/></operator> <name pos:line="28" pos:column="49">suite_name<pos:position pos:line="28" pos:column="59"/></name></expr></argument>)<pos:position pos:line="28" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then>
    <else pos:line="30" pos:column="5">else <block pos:line="30" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">subsuite<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">name<pos:position pos:line="31" pos:column="23"/></name></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <name pos:line="31" pos:column="26">suite_name<pos:position pos:line="31" pos:column="36"/></name></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">list_tests<pos:position pos:line="34" pos:column="19"/></name></expr>)<pos:position pos:line="34" pos:column="20"/></condition><then pos:line="34" pos:column="20"> <block pos:line="34" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">fprintf<pos:position pos:line="35" pos:column="16"/></name><argument_list pos:line="35" pos:column="16">(<argument><expr><name pos:line="35" pos:column="17">stdout<pos:position pos:line="35" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="25">"%s\n"<pos:position pos:line="35" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="33">subsuite<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">-&gt;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="43">name<pos:position pos:line="35" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">subsuite<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">not_run<pos:position pos:line="38" pos:column="22"/></name></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <literal type="number" pos:line="38" pos:column="25">0<pos:position pos:line="38" pos:column="26"/></literal></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">suite<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">==<pos:position pos:line="40" pos:column="17"/></operator> <name pos:line="40" pos:column="18">NULL<pos:position pos:line="40" pos:column="22"/></name></expr>)<pos:position pos:line="40" pos:column="23"/></condition><then pos:line="40" pos:column="23"> <block pos:line="40" pos:column="24">{
        <expr_stmt><expr><name pos:line="41" pos:column="9">suite<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <call><name pos:line="41" pos:column="17">malloc<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><sizeof pos:line="41" pos:column="24">sizeof<argument_list pos:line="41" pos:column="30">(<argument><expr><operator pos:line="41" pos:column="31">*<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="32">suite<pos:position pos:line="41" pos:column="37"/></name></expr></argument>)<pos:position pos:line="41" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">suite<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">head<pos:position pos:line="42" pos:column="20"/></name></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <name pos:line="42" pos:column="23">subsuite<pos:position pos:line="42" pos:column="31"/></name></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">suite<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">tail<pos:position pos:line="43" pos:column="20"/></name></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <name pos:line="43" pos:column="23">subsuite<pos:position pos:line="43" pos:column="31"/></name></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then>
    <else pos:line="45" pos:column="5">else <block pos:line="45" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">suite<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">-&gt;<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="16">tail<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">next<pos:position pos:line="46" pos:column="26"/></name></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="29">subsuite<pos:position pos:line="46" pos:column="37"/></name></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">suite<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">tail<pos:position pos:line="47" pos:column="20"/></name></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <name pos:line="47" pos:column="23">subsuite<pos:position pos:line="47" pos:column="31"/></name></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></else></if>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">!<pos:position pos:line="50" pos:column="10"/></operator><call><name pos:line="50" pos:column="10">should_test_run<pos:position pos:line="50" pos:column="25"/></name><argument_list pos:line="50" pos:column="25">(<argument><expr><name><name pos:line="50" pos:column="26">subsuite<pos:position pos:line="50" pos:column="34"/></name><operator pos:line="50" pos:column="34">-&gt;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="36">name<pos:position pos:line="50" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="42"/></condition><then pos:line="50" pos:column="42"> <block pos:line="50" pos:column="43">{
        <expr_stmt><expr><name><name pos:line="51" pos:column="9">subsuite<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">-&gt;<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="19">not_run<pos:position pos:line="51" pos:column="26"/></name></name> <operator pos:line="51" pos:column="27">=<pos:position pos:line="51" pos:column="28"/></operator> <literal type="number" pos:line="51" pos:column="29">1<pos:position pos:line="51" pos:column="30"/></literal></expr>;<pos:position pos:line="51" pos:column="31"/></expr_stmt>
        <return pos:line="52" pos:column="9">return <expr><name pos:line="52" pos:column="16">suite<pos:position pos:line="52" pos:column="21"/></name></expr>;<pos:position pos:line="52" pos:column="22"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">reset_status<pos:position pos:line="55" pos:column="17"/></name><argument_list pos:line="55" pos:column="17">()<pos:position pos:line="55" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">fprintf<pos:position pos:line="56" pos:column="12"/></name><argument_list pos:line="56" pos:column="12">(<argument><expr><name pos:line="56" pos:column="13">stdout<pos:position pos:line="56" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="21">"%-20s:  "<pos:position pos:line="56" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="33">subsuite<pos:position pos:line="56" pos:column="41"/></name><operator pos:line="56" pos:column="41">-&gt;<pos:position pos:line="56" pos:column="46"/></operator><name pos:line="56" pos:column="43">name<pos:position pos:line="56" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">update_status<pos:position pos:line="57" pos:column="18"/></name><argument_list pos:line="57" pos:column="18">()<pos:position pos:line="57" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">fflush<pos:position pos:line="58" pos:column="11"/></name><argument_list pos:line="58" pos:column="11">(<argument><expr><name pos:line="58" pos:column="12">stdout<pos:position pos:line="58" pos:column="18"/></name></expr></argument>)<pos:position pos:line="58" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>

    <return pos:line="60" pos:column="5">return <expr><name pos:line="60" pos:column="12">suite<pos:position pos:line="60" pos:column="17"/></name></expr>;<pos:position pos:line="60" pos:column="18"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

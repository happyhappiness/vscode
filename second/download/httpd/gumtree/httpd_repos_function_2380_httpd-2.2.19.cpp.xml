<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2380_httpd-2.2.19.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">mpm_merge_service_args<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">apr_pool_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">p<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">apr_array_header_t<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">args<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="3" pos:column="36">int<pos:position pos:line="3" pos:column="39"/></name></type> <name pos:line="3" pos:column="40">fixed_args<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="51"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_array_header_t<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">svc_args<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><name pos:line="5" pos:column="36">NULL<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">conf_key<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><name pos:line="6" pos:column="19">MAX_PATH<pos:position pos:line="6" pos:column="27"/></name></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier><modifier pos:line="7" pos:column="11">*<pos:position pos:line="7" pos:column="12"/></modifier></type><name pos:line="7" pos:column="12">cmb_data<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ap_regkey_t<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">key<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">apr_snprintf<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">conf_key<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="28">sizeof<argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">conf_key<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">SERVICEPARAMS<pos:position pos:line="11" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="61">mpm_service_name<pos:position pos:line="11" pos:column="77"/></name></expr></argument>)<pos:position pos:line="11" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">rv<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <call><name pos:line="12" pos:column="10">ap_regkey_open<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><operator pos:line="12" pos:column="25">&amp;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="26">key<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="31">AP_REGKEY_LOCAL_MACHINE<pos:position pos:line="12" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="56">conf_key<pos:position pos:line="12" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="66">APR_READ<pos:position pos:line="12" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="76">p<pos:position pos:line="12" pos:column="77"/></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="79"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">rv<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">==<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">APR_SUCCESS<pos:position pos:line="13" pos:column="26"/></name></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27"> <block pos:line="13" pos:column="28">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">ap_regkey_value_array_get<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><operator pos:line="14" pos:column="40">&amp;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="41">svc_args<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">key<pos:position pos:line="14" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="56">"ConfigArgs"<pos:position pos:line="14" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="70">p<pos:position pos:line="14" pos:column="71"/></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ap_regkey_close<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">key<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">rv<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">!=<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">APR_SUCCESS<pos:position pos:line="17" pos:column="26"/></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27"> <block pos:line="17" pos:column="28">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">rv<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">==<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">ERROR_FILE_NOT_FOUND<pos:position pos:line="18" pos:column="39"/></name></expr>)<pos:position pos:line="18" pos:column="40"/></condition><then pos:line="18" pos:column="40"> <block pos:line="18" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">ap_log_error<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">APLOG_MARK<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">APLOG_INFO<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="50">0<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">NULL<pos:position pos:line="19" pos:column="57"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="20" pos:column="26">"No ConfigArgs registered for %s, perhaps "<pos:position pos:line="20" pos:column="69"/></literal>
                         <literal type="string" pos:line="21" pos:column="26">"this service is not installed?"<pos:position pos:line="21" pos:column="58"/></literal></expr></argument>,
                         <argument><expr><name pos:line="22" pos:column="26">mpm_service_name<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
            <return pos:line="23" pos:column="13">return <expr><name pos:line="23" pos:column="20">APR_SUCCESS<pos:position pos:line="23" pos:column="31"/></name></expr>;<pos:position pos:line="23" pos:column="32"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then>
        <else pos:line="25" pos:column="9">else
            <block type="pseudo"><return pos:line="26" pos:column="13">return <expr><operator pos:line="26" pos:column="20">(<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">rv<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">)<pos:position pos:line="26" pos:column="24"/></operator></expr>;<pos:position pos:line="26" pos:column="25"/></return></block></else></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">svc_args<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">||<pos:position pos:line="29" pos:column="21"/></operator> <name><name pos:line="29" pos:column="22">svc_args<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">nelts<pos:position pos:line="29" pos:column="37"/></name></name> <operator pos:line="29" pos:column="38">==<pos:position pos:line="29" pos:column="40"/></operator> <literal type="number" pos:line="29" pos:column="41">0<pos:position pos:line="29" pos:column="42"/></literal></expr>)<pos:position pos:line="29" pos:column="43"/></condition><then pos:line="29" pos:column="43"> <block pos:line="29" pos:column="44">{
        <return pos:line="30" pos:column="9">return <expr><operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">APR_SUCCESS<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">)<pos:position pos:line="30" pos:column="29"/></operator></expr>;<pos:position pos:line="30" pos:column="30"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="33" pos:column="5">/* Now we have the mpm_service_name arg, and the mpm_runservice_nt()
     * call appended the arguments passed by StartService(), so it's
     * time to _prepend_ the default arguments for the server from
     * the service's default arguments (all others override them)...
     */</comment>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">args<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">nalloc<pos:position pos:line="38" pos:column="17"/></name></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <name><name pos:line="38" pos:column="20">args<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">nelts<pos:position pos:line="38" pos:column="31"/></name></name> <operator pos:line="38" pos:column="32">+<pos:position pos:line="38" pos:column="33"/></operator> <name><name pos:line="38" pos:column="34">svc_args<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">-&gt;<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="44">nelts<pos:position pos:line="38" pos:column="49"/></name></name></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">cmb_data<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">malloc<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><name><name pos:line="39" pos:column="23">args<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">nalloc<pos:position pos:line="39" pos:column="35"/></name></name> <operator pos:line="39" pos:column="36">*<pos:position pos:line="39" pos:column="37"/></operator> <sizeof pos:line="39" pos:column="38">sizeof<argument_list pos:line="39" pos:column="44">(<argument><expr><specifier pos:line="39" pos:column="45">const<pos:position pos:line="39" pos:column="50"/></specifier> <name pos:line="39" pos:column="51">char<pos:position pos:line="39" pos:column="55"/></name> <operator pos:line="39" pos:column="56">*<pos:position pos:line="39" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="60"/></expr_stmt>

    <comment type="block" pos:line="41" pos:column="5">/* First three args (argv[0], -f, path) remain first */</comment>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">memcpy<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><name pos:line="42" pos:column="12">cmb_data<pos:position pos:line="42" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="22">args<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">-&gt;<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="28">elts<pos:position pos:line="42" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="34">args<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">-&gt;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="40">elt_size<pos:position pos:line="42" pos:column="48"/></name></name> <operator pos:line="42" pos:column="49">*<pos:position pos:line="42" pos:column="50"/></operator> <name pos:line="42" pos:column="51">fixed_args<pos:position pos:line="42" pos:column="61"/></name></expr></argument>)<pos:position pos:line="42" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="63"/></expr_stmt>

    <comment type="block" pos:line="44" pos:column="5">/* Service args follow from service registry array */</comment>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">memcpy<pos:position pos:line="45" pos:column="11"/></name><argument_list pos:line="45" pos:column="11">(<argument><expr><name pos:line="45" pos:column="12">cmb_data<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">+<pos:position pos:line="45" pos:column="22"/></operator> <name pos:line="45" pos:column="23">fixed_args<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="35">svc_args<pos:position pos:line="45" pos:column="43"/></name><operator pos:line="45" pos:column="43">-&gt;<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="45">elts<pos:position pos:line="45" pos:column="49"/></name></name></expr></argument>,
           <argument><expr><name><name pos:line="46" pos:column="12">svc_args<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">elt_size<pos:position pos:line="46" pos:column="30"/></name></name> <operator pos:line="46" pos:column="31">*<pos:position pos:line="46" pos:column="32"/></operator> <name><name pos:line="46" pos:column="33">svc_args<pos:position pos:line="46" pos:column="41"/></name><operator pos:line="46" pos:column="41">-&gt;<pos:position pos:line="46" pos:column="46"/></operator><name pos:line="46" pos:column="43">nelts<pos:position pos:line="46" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* Remaining new args follow  */</comment>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">memcpy<pos:position pos:line="49" pos:column="11"/></name><argument_list pos:line="49" pos:column="11">(<argument><expr><name pos:line="49" pos:column="12">cmb_data<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">+<pos:position pos:line="49" pos:column="22"/></operator> <name pos:line="49" pos:column="23">fixed_args<pos:position pos:line="49" pos:column="33"/></name> <operator pos:line="49" pos:column="34">+<pos:position pos:line="49" pos:column="35"/></operator> <name><name pos:line="49" pos:column="36">svc_args<pos:position pos:line="49" pos:column="44"/></name><operator pos:line="49" pos:column="44">-&gt;<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="46">nelts<pos:position pos:line="49" pos:column="51"/></name></name></expr></argument>,
           <argument><expr><operator pos:line="50" pos:column="12">(<pos:position pos:line="50" pos:column="13"/></operator><specifier pos:line="50" pos:column="13">const<pos:position pos:line="50" pos:column="18"/></specifier> <name pos:line="50" pos:column="19">char<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">*<pos:position pos:line="50" pos:column="25"/></operator><operator pos:line="50" pos:column="25">*<pos:position pos:line="50" pos:column="26"/></operator><operator pos:line="50" pos:column="26">)<pos:position pos:line="50" pos:column="27"/></operator><name><name pos:line="50" pos:column="27">args<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">-&gt;<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="33">elts<pos:position pos:line="50" pos:column="37"/></name></name> <operator pos:line="50" pos:column="38">+<pos:position pos:line="50" pos:column="39"/></operator> <name pos:line="50" pos:column="40">fixed_args<pos:position pos:line="50" pos:column="50"/></name></expr></argument>,
           <argument><expr><name><name pos:line="51" pos:column="12">args<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">-&gt;<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="18">elt_size<pos:position pos:line="51" pos:column="26"/></name></name> <operator pos:line="51" pos:column="27">*<pos:position pos:line="51" pos:column="28"/></operator> <operator pos:line="51" pos:column="29">(<pos:position pos:line="51" pos:column="30"/></operator><name><name pos:line="51" pos:column="30">args<pos:position pos:line="51" pos:column="34"/></name><operator pos:line="51" pos:column="34">-&gt;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="36">nelts<pos:position pos:line="51" pos:column="41"/></name></name> <operator pos:line="51" pos:column="42">-<pos:position pos:line="51" pos:column="43"/></operator> <name pos:line="51" pos:column="44">fixed_args<pos:position pos:line="51" pos:column="54"/></name><operator pos:line="51" pos:column="54">)<pos:position pos:line="51" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="53" pos:column="5">args<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">-&gt;<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="11">elts<pos:position pos:line="53" pos:column="15"/></name></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <operator pos:line="53" pos:column="18">(<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="19">char<pos:position pos:line="53" pos:column="23"/></name> <operator pos:line="53" pos:column="24">*<pos:position pos:line="53" pos:column="25"/></operator><operator pos:line="53" pos:column="25">)<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="26">cmb_data<pos:position pos:line="53" pos:column="34"/></name></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">args<pos:position pos:line="54" pos:column="9"/></name><operator pos:line="54" pos:column="9">-&gt;<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="11">nelts<pos:position pos:line="54" pos:column="16"/></name></name> <operator pos:line="54" pos:column="17">=<pos:position pos:line="54" pos:column="18"/></operator> <name><name pos:line="54" pos:column="19">args<pos:position pos:line="54" pos:column="23"/></name><operator pos:line="54" pos:column="23">-&gt;<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="25">nalloc<pos:position pos:line="54" pos:column="31"/></name></name></expr>;<pos:position pos:line="54" pos:column="32"/></expr_stmt>

    <return pos:line="56" pos:column="5">return <expr><name pos:line="56" pos:column="12">APR_SUCCESS<pos:position pos:line="56" pos:column="23"/></name></expr>;<pos:position pos:line="56" pos:column="24"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

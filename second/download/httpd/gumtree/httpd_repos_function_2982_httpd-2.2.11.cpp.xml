<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2982_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">write_elem<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">s<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">apr_xml_elem<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">elem<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">style<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="2" pos:column="25">apr_array_header_t<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">namespaces<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">int<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">ns_map<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">apr_xml_elem<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">child<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">ns<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">style<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">==<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">APR_XML_X2T_FULL<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">||<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="38">style<pos:position pos:line="8" pos:column="43"/></name> <operator pos:line="8" pos:column="44">==<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="47">APR_XML_X2T_FULL_NS_LANG<pos:position pos:line="8" pos:column="71"/></name></expr>)<pos:position pos:line="8" pos:column="72"/></condition><then pos:line="8" pos:column="72"> <block pos:line="8" pos:column="73">{
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">empty<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><call><name pos:line="9" pos:column="21">APR_XML_ELEM_IS_EMPTY<pos:position pos:line="9" pos:column="42"/></name><argument_list pos:line="9" pos:column="42">(<argument><expr><name pos:line="9" pos:column="43">elem<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">apr_xml_attr<pos:position pos:line="10" pos:column="27"/></name> <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">attr<pos:position pos:line="10" pos:column="33"/></name></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">elem<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">ns<pos:position pos:line="12" pos:column="21"/></name></name> <operator pos:line="12" pos:column="22">==<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="25">APR_XML_NS_NONE<pos:position pos:line="12" pos:column="40"/></name></expr>)<pos:position pos:line="12" pos:column="41"/></condition><then pos:line="12" pos:column="41"> <block pos:line="12" pos:column="42">{
	    <expr_stmt><expr><name pos:line="13" pos:column="13">len<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <call><name pos:line="13" pos:column="19">sprintf<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">s<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="30">"&lt;%s"<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="37">elem<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">name<pos:position pos:line="13" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then>
	<else pos:line="15" pos:column="9">else <block pos:line="15" pos:column="14">{
	    <expr_stmt><expr><name pos:line="16" pos:column="13">ns<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <ternary><condition><expr><name pos:line="16" pos:column="18">ns_map<pos:position pos:line="16" pos:column="24"/></name></expr> ?<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26"> <expr><name><name pos:line="16" pos:column="27">ns_map<pos:position pos:line="16" pos:column="33"/></name><index pos:line="16" pos:column="33">[<expr><name><name pos:line="16" pos:column="34">elem<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">ns<pos:position pos:line="16" pos:column="42"/></name></name></expr>]<pos:position pos:line="16" pos:column="43"/></index></name></expr> <pos:position pos:line="16" pos:column="44"/></then><else pos:line="16" pos:column="44">: <expr><name><name pos:line="16" pos:column="46">elem<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">ns<pos:position pos:line="16" pos:column="54"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="17" pos:column="13">len<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">sprintf<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">s<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="30">"&lt;ns%d:%s"<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">ns<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="46">elem<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">-&gt;<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="52">name<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name pos:line="19" pos:column="9">s<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">+=<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">len<pos:position pos:line="19" pos:column="17"/></name></expr>;<pos:position pos:line="19" pos:column="18"/></expr_stmt>

	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">attr<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <name><name pos:line="21" pos:column="21">elem<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">attr<pos:position pos:line="21" pos:column="31"/></name></name></expr>;<pos:position pos:line="21" pos:column="32"/></init> <condition><expr><name pos:line="21" pos:column="33">attr<pos:position pos:line="21" pos:column="37"/></name></expr>;<pos:position pos:line="21" pos:column="38"/></condition> <incr><expr><name pos:line="21" pos:column="39">attr<pos:position pos:line="21" pos:column="43"/></name> <operator pos:line="21" pos:column="44">=<pos:position pos:line="21" pos:column="45"/></operator> <name><name pos:line="21" pos:column="46">attr<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">next<pos:position pos:line="21" pos:column="56"/></name></name></expr></incr>)<pos:position pos:line="21" pos:column="57"/></control> <block pos:line="21" pos:column="58">{
	    <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><name><name pos:line="22" pos:column="17">attr<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">ns<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">==<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="29">APR_XML_NS_NONE<pos:position pos:line="22" pos:column="44"/></name></expr>)<pos:position pos:line="22" pos:column="45"/></condition><then pos:line="22" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="17">len<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <call><name pos:line="23" pos:column="23">sprintf<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">s<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="34">" %s=\"%s\""<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="48">attr<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">-&gt;<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="54">name<pos:position pos:line="23" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="60">attr<pos:position pos:line="23" pos:column="64"/></name><operator pos:line="23" pos:column="64">-&gt;<pos:position pos:line="23" pos:column="69"/></operator><name pos:line="23" pos:column="66">value<pos:position pos:line="23" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="73"/></expr_stmt></block></then>
            <else pos:line="24" pos:column="13">else <block pos:line="24" pos:column="18">{
                <expr_stmt><expr><name pos:line="25" pos:column="17">ns<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <ternary><condition><expr><name pos:line="25" pos:column="22">ns_map<pos:position pos:line="25" pos:column="28"/></name></expr> ?<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30"> <expr><name><name pos:line="25" pos:column="31">ns_map<pos:position pos:line="25" pos:column="37"/></name><index pos:line="25" pos:column="37">[<expr><name><name pos:line="25" pos:column="38">attr<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">ns<pos:position pos:line="25" pos:column="46"/></name></name></expr>]<pos:position pos:line="25" pos:column="47"/></index></name></expr> <pos:position pos:line="25" pos:column="48"/></then><else pos:line="25" pos:column="48">: <expr><name><name pos:line="25" pos:column="50">attr<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">-&gt;<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="56">ns<pos:position pos:line="25" pos:column="58"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><name pos:line="26" pos:column="17">len<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <call><name pos:line="26" pos:column="23">sprintf<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">s<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="34">" ns%d:%s=\"%s\""<pos:position pos:line="26" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="53">ns<pos:position pos:line="26" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="57">attr<pos:position pos:line="26" pos:column="61"/></name><operator pos:line="26" pos:column="61">-&gt;<pos:position pos:line="26" pos:column="66"/></operator><name pos:line="26" pos:column="63">name<pos:position pos:line="26" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="69">attr<pos:position pos:line="26" pos:column="73"/></name><operator pos:line="26" pos:column="73">-&gt;<pos:position pos:line="26" pos:column="78"/></operator><name pos:line="26" pos:column="75">value<pos:position pos:line="26" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="82"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></else></if>
	    <expr_stmt><expr><name pos:line="28" pos:column="13">s<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">+=<pos:position pos:line="28" pos:column="17"/></operator> <name pos:line="28" pos:column="18">len<pos:position pos:line="28" pos:column="21"/></name></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></for>

	<comment type="block" pos:line="31" pos:column="9">/* add the xml:lang value if necessary */</comment>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">elem<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">lang<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">!=<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">NULL<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">&amp;&amp;<pos:position pos:line="32" pos:column="42"/></operator>
	    <operator pos:line="33" pos:column="13">(<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">style<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">==<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">APR_XML_X2T_FULL_NS_LANG<pos:position pos:line="33" pos:column="47"/></name> <operator pos:line="33" pos:column="48">||<pos:position pos:line="33" pos:column="50"/></operator>
	     <name><name pos:line="34" pos:column="14">elem<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">parent<pos:position pos:line="34" pos:column="26"/></name></name> <operator pos:line="34" pos:column="27">==<pos:position pos:line="34" pos:column="29"/></operator> <name pos:line="34" pos:column="30">NULL<pos:position pos:line="34" pos:column="34"/></name> <operator pos:line="34" pos:column="35">||<pos:position pos:line="34" pos:column="37"/></operator>
	     <name><name pos:line="35" pos:column="14">elem<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">-&gt;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="20">lang<pos:position pos:line="35" pos:column="24"/></name></name> <operator pos:line="35" pos:column="25">!=<pos:position pos:line="35" pos:column="27"/></operator> <name><name pos:line="35" pos:column="28">elem<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">-&gt;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="34">parent<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">-&gt;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="42">lang<pos:position pos:line="35" pos:column="46"/></name></name><operator pos:line="35" pos:column="46">)<pos:position pos:line="35" pos:column="47"/></operator></expr>)<pos:position pos:line="35" pos:column="48"/></condition><then pos:line="35" pos:column="48"> <block pos:line="35" pos:column="49">{
	    <expr_stmt><expr><name pos:line="36" pos:column="13">len<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <call><name pos:line="36" pos:column="19">sprintf<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><name pos:line="36" pos:column="27">s<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="30">" xml:lang=\"%s\""<pos:position pos:line="36" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="50">elem<pos:position pos:line="36" pos:column="54"/></name><operator pos:line="36" pos:column="54">-&gt;<pos:position pos:line="36" pos:column="59"/></operator><name pos:line="36" pos:column="56">lang<pos:position pos:line="36" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="62"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="37" pos:column="13">s<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">+=<pos:position pos:line="37" pos:column="17"/></operator> <name pos:line="37" pos:column="18">len<pos:position pos:line="37" pos:column="21"/></name></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="40" pos:column="9">/* add namespace definitions, if required */</comment>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">style<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">==<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="22">APR_XML_X2T_FULL_NS_LANG<pos:position pos:line="41" pos:column="46"/></name></expr>)<pos:position pos:line="41" pos:column="47"/></condition><then pos:line="41" pos:column="47"> <block pos:line="41" pos:column="48">{
	    <decl_stmt><decl><type><name pos:line="42" pos:column="13">int<pos:position pos:line="42" pos:column="16"/></name></type> <name pos:line="42" pos:column="17">i<pos:position pos:line="42" pos:column="18"/></name></decl>;<pos:position pos:line="42" pos:column="19"/></decl_stmt>

	    <for pos:line="44" pos:column="13">for <control pos:line="44" pos:column="17">(<init><expr><name pos:line="44" pos:column="18">i<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <name><name pos:line="44" pos:column="22">namespaces<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">nelts<pos:position pos:line="44" pos:column="39"/></name></name></expr>;<pos:position pos:line="44" pos:column="40"/></init> <condition><expr><name pos:line="44" pos:column="41">i<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">--<pos:position pos:line="44" pos:column="44"/></operator></expr>;<pos:position pos:line="44" pos:column="45"/></condition><incr/>)<pos:position pos:line="44" pos:column="46"/></control> <block pos:line="44" pos:column="47">{
		<expr_stmt><expr><name pos:line="45" pos:column="17">len<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">=<pos:position pos:line="45" pos:column="22"/></operator> <call><name pos:line="45" pos:column="23">sprintf<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">s<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="34">" xmlns:ns%d=\"%s\""<pos:position pos:line="45" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="56">i<pos:position pos:line="45" pos:column="57"/></name></expr></argument>,
			      <argument><expr><call><name pos:line="46" pos:column="31">APR_XML_GET_URI_ITEM<pos:position pos:line="46" pos:column="51"/></name><argument_list pos:line="46" pos:column="51">(<argument><expr><name pos:line="46" pos:column="52">namespaces<pos:position pos:line="46" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="64">i<pos:position pos:line="46" pos:column="65"/></name></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name pos:line="47" pos:column="17">s<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">+=<pos:position pos:line="47" pos:column="21"/></operator> <name pos:line="47" pos:column="22">len<pos:position pos:line="47" pos:column="25"/></name></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
	    }<pos:position pos:line="48" pos:column="14"/></block></for>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="51" pos:column="9">/* no more to do. close it up and go. */</comment>
	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">empty<pos:position pos:line="52" pos:column="18"/></name></expr>)<pos:position pos:line="52" pos:column="19"/></condition><then pos:line="52" pos:column="19"> <block pos:line="52" pos:column="20">{
	    <expr_stmt><expr><operator pos:line="53" pos:column="13">*<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">s<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">++<pos:position pos:line="53" pos:column="17"/></operator> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <literal type="char" pos:line="53" pos:column="20">'/'<pos:position pos:line="53" pos:column="23"/></literal></expr>;<pos:position pos:line="53" pos:column="24"/></expr_stmt>
	    <expr_stmt><expr><operator pos:line="54" pos:column="13">*<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="14">s<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">++<pos:position pos:line="54" pos:column="17"/></operator> <operator pos:line="54" pos:column="18">=<pos:position pos:line="54" pos:column="19"/></operator> <literal type="char" pos:line="54" pos:column="20">'&gt;'<pos:position pos:line="54" pos:column="26"/></literal></expr>;<pos:position pos:line="54" pos:column="24"/></expr_stmt>
	    <return pos:line="55" pos:column="13">return <expr><name pos:line="55" pos:column="20">s<pos:position pos:line="55" pos:column="21"/></name></expr>;<pos:position pos:line="55" pos:column="22"/></return>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="58" pos:column="9">/* just close it */</comment>
	<expr_stmt><expr><operator pos:line="59" pos:column="9">*<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">s<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">++<pos:position pos:line="59" pos:column="13"/></operator> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <literal type="char" pos:line="59" pos:column="16">'&gt;'<pos:position pos:line="59" pos:column="22"/></literal></expr>;<pos:position pos:line="59" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then>
    <elseif pos:line="61" pos:column="5">else <if pos:line="61" pos:column="10">if <condition pos:line="61" pos:column="13">(<expr><name pos:line="61" pos:column="14">style<pos:position pos:line="61" pos:column="19"/></name> <operator pos:line="61" pos:column="20">==<pos:position pos:line="61" pos:column="22"/></operator> <name pos:line="61" pos:column="23">APR_XML_X2T_LANG_INNER<pos:position pos:line="61" pos:column="45"/></name></expr>)<pos:position pos:line="61" pos:column="46"/></condition><then pos:line="61" pos:column="46"> <block pos:line="61" pos:column="47">{
	<comment type="block" pos:line="62" pos:column="9">/* prepend the xml:lang value */</comment>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name><name pos:line="63" pos:column="13">elem<pos:position pos:line="63" pos:column="17"/></name><operator pos:line="63" pos:column="17">-&gt;<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="19">lang<pos:position pos:line="63" pos:column="23"/></name></name> <operator pos:line="63" pos:column="24">!=<pos:position pos:line="63" pos:column="26"/></operator> <name pos:line="63" pos:column="27">NULL<pos:position pos:line="63" pos:column="31"/></name></expr>)<pos:position pos:line="63" pos:column="32"/></condition><then pos:line="63" pos:column="32"> <block pos:line="63" pos:column="33">{
	    <expr_stmt><expr><name pos:line="64" pos:column="13">len<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">=<pos:position pos:line="64" pos:column="18"/></operator> <call><name pos:line="64" pos:column="19">strlen<pos:position pos:line="64" pos:column="25"/></name><argument_list pos:line="64" pos:column="25">(<argument><expr><name><name pos:line="64" pos:column="26">elem<pos:position pos:line="64" pos:column="30"/></name><operator pos:line="64" pos:column="30">-&gt;<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="32">lang<pos:position pos:line="64" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="65" pos:column="13">memcpy<pos:position pos:line="65" pos:column="19"/></name><argument_list pos:line="65" pos:column="19">(<argument><expr><name pos:line="65" pos:column="20">s<pos:position pos:line="65" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="23">elem<pos:position pos:line="65" pos:column="27"/></name><operator pos:line="65" pos:column="27">-&gt;<pos:position pos:line="65" pos:column="32"/></operator><name pos:line="65" pos:column="29">lang<pos:position pos:line="65" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="35">len<pos:position pos:line="65" pos:column="38"/></name></expr></argument>)<pos:position pos:line="65" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="40"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="66" pos:column="13">s<pos:position pos:line="66" pos:column="14"/></name> <operator pos:line="66" pos:column="15">+=<pos:position pos:line="66" pos:column="17"/></operator> <name pos:line="66" pos:column="18">len<pos:position pos:line="66" pos:column="21"/></name></expr>;<pos:position pos:line="66" pos:column="22"/></expr_stmt>
	}<pos:position pos:line="67" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="68" pos:column="9">*<pos:position pos:line="68" pos:column="10"/></operator><name pos:line="68" pos:column="10">s<pos:position pos:line="68" pos:column="11"/></name><operator pos:line="68" pos:column="11">++<pos:position pos:line="68" pos:column="13"/></operator> <operator pos:line="68" pos:column="14">=<pos:position pos:line="68" pos:column="15"/></operator> <literal type="char" pos:line="68" pos:column="16">'\0'<pos:position pos:line="68" pos:column="20"/></literal></expr>;<pos:position pos:line="68" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="71" pos:column="5">s<pos:position pos:line="71" pos:column="6"/></name> <operator pos:line="71" pos:column="7">=<pos:position pos:line="71" pos:column="8"/></operator> <call><name pos:line="71" pos:column="9">write_text<pos:position pos:line="71" pos:column="19"/></name><argument_list pos:line="71" pos:column="19">(<argument><expr><name pos:line="71" pos:column="20">s<pos:position pos:line="71" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="23">elem<pos:position pos:line="71" pos:column="27"/></name><operator pos:line="71" pos:column="27">-&gt;<pos:position pos:line="71" pos:column="32"/></operator><name pos:line="71" pos:column="29">first_cdata<pos:position pos:line="71" pos:column="40"/></name><operator pos:line="71" pos:column="40">.<pos:position pos:line="71" pos:column="41"/></operator><name pos:line="71" pos:column="41">first<pos:position pos:line="71" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="48"/></expr_stmt>

    <for pos:line="73" pos:column="5">for <control pos:line="73" pos:column="9">(<init><expr><name pos:line="73" pos:column="10">child<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">=<pos:position pos:line="73" pos:column="17"/></operator> <name><name pos:line="73" pos:column="18">elem<pos:position pos:line="73" pos:column="22"/></name><operator pos:line="73" pos:column="22">-&gt;<pos:position pos:line="73" pos:column="27"/></operator><name pos:line="73" pos:column="24">first_child<pos:position pos:line="73" pos:column="35"/></name></name></expr>;<pos:position pos:line="73" pos:column="36"/></init> <condition><expr><name pos:line="73" pos:column="37">child<pos:position pos:line="73" pos:column="42"/></name></expr>;<pos:position pos:line="73" pos:column="43"/></condition> <incr><expr><name pos:line="73" pos:column="44">child<pos:position pos:line="73" pos:column="49"/></name> <operator pos:line="73" pos:column="50">=<pos:position pos:line="73" pos:column="51"/></operator> <name><name pos:line="73" pos:column="52">child<pos:position pos:line="73" pos:column="57"/></name><operator pos:line="73" pos:column="57">-&gt;<pos:position pos:line="73" pos:column="62"/></operator><name pos:line="73" pos:column="59">next<pos:position pos:line="73" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="73" pos:column="64"/></control> <block pos:line="73" pos:column="65">{
	<expr_stmt><expr><name pos:line="74" pos:column="9">s<pos:position pos:line="74" pos:column="10"/></name> <operator pos:line="74" pos:column="11">=<pos:position pos:line="74" pos:column="12"/></operator> <call><name pos:line="74" pos:column="13">write_elem<pos:position pos:line="74" pos:column="23"/></name><argument_list pos:line="74" pos:column="23">(<argument><expr><name pos:line="74" pos:column="24">s<pos:position pos:line="74" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="27">child<pos:position pos:line="74" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="34">APR_XML_X2T_FULL<pos:position pos:line="74" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="52">NULL<pos:position pos:line="74" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="58">ns_map<pos:position pos:line="74" pos:column="64"/></name></expr></argument>)<pos:position pos:line="74" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><name pos:line="75" pos:column="9">s<pos:position pos:line="75" pos:column="10"/></name> <operator pos:line="75" pos:column="11">=<pos:position pos:line="75" pos:column="12"/></operator> <call><name pos:line="75" pos:column="13">write_text<pos:position pos:line="75" pos:column="23"/></name><argument_list pos:line="75" pos:column="23">(<argument><expr><name pos:line="75" pos:column="24">s<pos:position pos:line="75" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="27">child<pos:position pos:line="75" pos:column="32"/></name><operator pos:line="75" pos:column="32">-&gt;<pos:position pos:line="75" pos:column="37"/></operator><name pos:line="75" pos:column="34">following_cdata<pos:position pos:line="75" pos:column="49"/></name><operator pos:line="75" pos:column="49">.<pos:position pos:line="75" pos:column="50"/></operator><name pos:line="75" pos:column="50">first<pos:position pos:line="75" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></for>

    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><name pos:line="78" pos:column="9">style<pos:position pos:line="78" pos:column="14"/></name> <operator pos:line="78" pos:column="15">==<pos:position pos:line="78" pos:column="17"/></operator> <name pos:line="78" pos:column="18">APR_XML_X2T_FULL<pos:position pos:line="78" pos:column="34"/></name> <operator pos:line="78" pos:column="35">||<pos:position pos:line="78" pos:column="37"/></operator> <name pos:line="78" pos:column="38">style<pos:position pos:line="78" pos:column="43"/></name> <operator pos:line="78" pos:column="44">==<pos:position pos:line="78" pos:column="46"/></operator> <name pos:line="78" pos:column="47">APR_XML_X2T_FULL_NS_LANG<pos:position pos:line="78" pos:column="71"/></name></expr>)<pos:position pos:line="78" pos:column="72"/></condition><then pos:line="78" pos:column="72"> <block pos:line="78" pos:column="73">{
	<if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name><name pos:line="79" pos:column="13">elem<pos:position pos:line="79" pos:column="17"/></name><operator pos:line="79" pos:column="17">-&gt;<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="19">ns<pos:position pos:line="79" pos:column="21"/></name></name> <operator pos:line="79" pos:column="22">==<pos:position pos:line="79" pos:column="24"/></operator> <name pos:line="79" pos:column="25">APR_XML_NS_NONE<pos:position pos:line="79" pos:column="40"/></name></expr>)<pos:position pos:line="79" pos:column="41"/></condition><then pos:line="79" pos:column="41"> <block pos:line="79" pos:column="42">{
	    <expr_stmt><expr><name pos:line="80" pos:column="13">len<pos:position pos:line="80" pos:column="16"/></name> <operator pos:line="80" pos:column="17">=<pos:position pos:line="80" pos:column="18"/></operator> <call><name pos:line="80" pos:column="19">sprintf<pos:position pos:line="80" pos:column="26"/></name><argument_list pos:line="80" pos:column="26">(<argument><expr><name pos:line="80" pos:column="27">s<pos:position pos:line="80" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="30">"&lt;/%s&gt;"<pos:position pos:line="80" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="39">elem<pos:position pos:line="80" pos:column="43"/></name><operator pos:line="80" pos:column="43">-&gt;<pos:position pos:line="80" pos:column="48"/></operator><name pos:line="80" pos:column="45">name<pos:position pos:line="80" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="81" pos:column="10"/></block></then>
	<else pos:line="82" pos:column="9">else <block pos:line="82" pos:column="14">{
	    <expr_stmt><expr><name pos:line="83" pos:column="13">ns<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">=<pos:position pos:line="83" pos:column="17"/></operator> <ternary><condition><expr><name pos:line="83" pos:column="18">ns_map<pos:position pos:line="83" pos:column="24"/></name></expr> ?<pos:position pos:line="83" pos:column="26"/></condition><then pos:line="83" pos:column="26"> <expr><name><name pos:line="83" pos:column="27">ns_map<pos:position pos:line="83" pos:column="33"/></name><index pos:line="83" pos:column="33">[<expr><name><name pos:line="83" pos:column="34">elem<pos:position pos:line="83" pos:column="38"/></name><operator pos:line="83" pos:column="38">-&gt;<pos:position pos:line="83" pos:column="43"/></operator><name pos:line="83" pos:column="40">ns<pos:position pos:line="83" pos:column="42"/></name></name></expr>]<pos:position pos:line="83" pos:column="43"/></index></name></expr> <pos:position pos:line="83" pos:column="44"/></then><else pos:line="83" pos:column="44">: <expr><name><name pos:line="83" pos:column="46">elem<pos:position pos:line="83" pos:column="50"/></name><operator pos:line="83" pos:column="50">-&gt;<pos:position pos:line="83" pos:column="55"/></operator><name pos:line="83" pos:column="52">ns<pos:position pos:line="83" pos:column="54"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="83" pos:column="55"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="84" pos:column="13">len<pos:position pos:line="84" pos:column="16"/></name> <operator pos:line="84" pos:column="17">=<pos:position pos:line="84" pos:column="18"/></operator> <call><name pos:line="84" pos:column="19">sprintf<pos:position pos:line="84" pos:column="26"/></name><argument_list pos:line="84" pos:column="26">(<argument><expr><name pos:line="84" pos:column="27">s<pos:position pos:line="84" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="30">"&lt;/ns%d:%s&gt;"<pos:position pos:line="84" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="44">ns<pos:position pos:line="84" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="48">elem<pos:position pos:line="84" pos:column="52"/></name><operator pos:line="84" pos:column="52">-&gt;<pos:position pos:line="84" pos:column="57"/></operator><name pos:line="84" pos:column="54">name<pos:position pos:line="84" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="85" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name pos:line="86" pos:column="9">s<pos:position pos:line="86" pos:column="10"/></name> <operator pos:line="86" pos:column="11">+=<pos:position pos:line="86" pos:column="13"/></operator> <name pos:line="86" pos:column="14">len<pos:position pos:line="86" pos:column="17"/></name></expr>;<pos:position pos:line="86" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>

    <return pos:line="89" pos:column="5">return <expr><name pos:line="89" pos:column="12">s<pos:position pos:line="89" pos:column="13"/></name></expr>;<pos:position pos:line="89" pos:column="14"/></return>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3809_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">log_table_entry<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">apr_table_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">table<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">name<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">buf<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">buflen<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:ifndef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifndef<pos:position pos:line="4" pos:column="8"/></cpp:directive> <name pos:line="4" pos:column="9">AP_UNSAFE_ERROR_LOG_UNESCAPED<pos:position pos:line="4" pos:column="38"/></name></cpp:ifndef>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">value<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">scratch<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><name pos:line="6" pos:column="18">MAX_STRING_LEN<pos:position pos:line="6" pos:column="32"/></name></expr>]<pos:position pos:line="6" pos:column="33"/></index></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">value<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">apr_table_get<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name pos:line="8" pos:column="32">table<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="39">name<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call><operator pos:line="8" pos:column="44">)<pos:position pos:line="8" pos:column="45"/></operator> <operator pos:line="8" pos:column="46">!=<pos:position pos:line="8" pos:column="48"/></operator> <name pos:line="8" pos:column="49">NULL<pos:position pos:line="8" pos:column="53"/></name></expr>)<pos:position pos:line="8" pos:column="54"/></condition><then pos:line="8" pos:column="54"> <block pos:line="8" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">ap_escape_errorlog_item<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">scratch<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">value<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="49">MAX_STRING_LEN<pos:position pos:line="9" pos:column="63"/></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="65"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><call><name pos:line="10" pos:column="16">cpystrn<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">buf<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="29">scratch<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">buflen<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>
    <return pos:line="15" pos:column="5">return <expr><call><name pos:line="15" pos:column="12">cpystrn<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">buf<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="25">apr_table_get<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><name pos:line="15" pos:column="39">table<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">name<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="53">buflen<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></return>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2302_httpd-2.0.61.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">worker_stack_wait<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">worker_stack<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">stack<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">apr_uint32_t<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">worker_id<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">worker_wakeup_info<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">wakeup<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><name><name pos:line="4" pos:column="34">worker_wakeups<pos:position pos:line="4" pos:column="48"/></name><index pos:line="4" pos:column="48">[<expr><name pos:line="4" pos:column="49">worker_id<pos:position pos:line="4" pos:column="58"/></name></expr>]<pos:position pos:line="4" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><literal type="number" pos:line="6" pos:column="12">1<pos:position pos:line="6" pos:column="13"/></literal></expr>)<pos:position pos:line="6" pos:column="14"/></condition> <block pos:line="6" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">apr_uint32_t<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">state<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><name><name pos:line="7" pos:column="30">stack<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">state<pos:position pos:line="7" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">state<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&amp;<pos:position pos:line="8" pos:column="24"/></operator> <operator pos:line="8" pos:column="21">(<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">STACK_TERMINATED<pos:position pos:line="8" pos:column="38"/></name> <operator pos:line="8" pos:column="39">|<pos:position pos:line="8" pos:column="40"/></operator> <name pos:line="8" pos:column="41">STACK_NO_LISTENER<pos:position pos:line="8" pos:column="58"/></name><operator pos:line="8" pos:column="58">)<pos:position pos:line="8" pos:column="59"/></operator></expr>)<pos:position pos:line="8" pos:column="60"/></condition><then pos:line="8" pos:column="60"> <block pos:line="8" pos:column="61">{
            <if pos:line="9" pos:column="13">if <condition pos:line="9" pos:column="16">(<expr><name pos:line="9" pos:column="17">state<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&amp;<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="25">STACK_TERMINATED<pos:position pos:line="9" pos:column="41"/></name></expr>)<pos:position pos:line="9" pos:column="42"/></condition><then pos:line="9" pos:column="42"> <block pos:line="9" pos:column="43">{
                <return pos:line="10" pos:column="17">return <expr><name pos:line="10" pos:column="24">APR_EINVAL<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></return>
            }<pos:position pos:line="11" pos:column="14"/></block></then></if>
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><call><name pos:line="12" pos:column="17">apr_atomic_cas<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><operator pos:line="12" pos:column="32">&amp;<pos:position pos:line="12" pos:column="37"/></operator><operator pos:line="12" pos:column="33">(<pos:position pos:line="12" pos:column="34"/></operator><name><name pos:line="12" pos:column="34">stack<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">state<pos:position pos:line="12" pos:column="46"/></name></name><operator pos:line="12" pos:column="46">)<pos:position pos:line="12" pos:column="47"/></operator></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">STACK_LIST_END<pos:position pos:line="12" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="65">state<pos:position pos:line="12" pos:column="70"/></name></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call> <operator pos:line="12" pos:column="72">!=<pos:position pos:line="12" pos:column="74"/></operator>
                <name pos:line="13" pos:column="17">state<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23"> <block pos:line="13" pos:column="24">{
                <continue pos:line="14" pos:column="17">continue;<pos:position pos:line="14" pos:column="26"/></continue>
            }<pos:position pos:line="15" pos:column="14"/></block></then>
            <else pos:line="16" pos:column="13">else <block pos:line="16" pos:column="18">{
                <return pos:line="17" pos:column="17">return <expr><name pos:line="17" pos:column="24">APR_SUCCESS<pos:position pos:line="17" pos:column="35"/></name></expr>;<pos:position pos:line="17" pos:column="36"/></return>
            }<pos:position pos:line="18" pos:column="14"/></block></else></if>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">wakeup<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">next<pos:position pos:line="20" pos:column="21"/></name></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="24">state<pos:position pos:line="20" pos:column="29"/></name></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">apr_atomic_cas<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><operator pos:line="21" pos:column="28">&amp;<pos:position pos:line="21" pos:column="33"/></operator><operator pos:line="21" pos:column="29">(<pos:position pos:line="21" pos:column="30"/></operator><name><name pos:line="21" pos:column="30">stack<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">state<pos:position pos:line="21" pos:column="42"/></name></name><operator pos:line="21" pos:column="42">)<pos:position pos:line="21" pos:column="43"/></operator></expr></argument>, <argument><expr><name pos:line="21" pos:column="45">worker_id<pos:position pos:line="21" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="56">state<pos:position pos:line="21" pos:column="61"/></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call> <operator pos:line="21" pos:column="63">!=<pos:position pos:line="21" pos:column="65"/></operator> <name pos:line="21" pos:column="66">state<pos:position pos:line="21" pos:column="71"/></name></expr>)<pos:position pos:line="21" pos:column="72"/></condition><then pos:line="21" pos:column="72"> <block pos:line="21" pos:column="73">{
            <continue pos:line="22" pos:column="13">continue;<pos:position pos:line="22" pos:column="22"/></continue>
        }<pos:position pos:line="23" pos:column="10"/></block></then>
        <else pos:line="24" pos:column="9">else <block pos:line="24" pos:column="14">{
            <return pos:line="25" pos:column="13">return <expr><call><name pos:line="25" pos:column="20">apr_thread_cond_wait<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name><name pos:line="25" pos:column="41">wakeup<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">cond<pos:position pos:line="25" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="55">wakeup<pos:position pos:line="25" pos:column="61"/></name><operator pos:line="25" pos:column="61">-&gt;<pos:position pos:line="25" pos:column="66"/></operator><name pos:line="25" pos:column="63">mutex<pos:position pos:line="25" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></else></if>
    }<pos:position pos:line="27" pos:column="6"/></block></while>    
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_778.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">proxy_handler<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">request_rec<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">r<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">uri<pos:position pos:line="3" pos:column="14"/></name></decl>, <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="17">scheme<pos:position pos:line="3" pos:column="23"/></name></decl>, <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="26">p<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">p2<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">void<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">sconf<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name><name pos:line="5" pos:column="19">r<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">-&gt;<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="22">server<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">module_config<pos:position pos:line="5" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">proxy_server_conf<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">conf<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><operator pos:line="6" pos:column="31">(<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="32">proxy_server_conf<pos:position pos:line="6" pos:column="49"/></name> <operator pos:line="6" pos:column="50">*<pos:position pos:line="6" pos:column="51"/></operator><operator pos:line="6" pos:column="51">)<pos:position pos:line="6" pos:column="52"/></operator>
        <call><name pos:line="7" pos:column="9">ap_get_module_config<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">sconf<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="37">&amp;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="38">proxy_module<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_array_header_t<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">proxies<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><name><name pos:line="8" pos:column="35">conf<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">proxies<pos:position pos:line="8" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">proxy_remote<pos:position pos:line="9" pos:column="24"/></name></name> <modifier pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></modifier></type><name pos:line="9" pos:column="26">ents<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><operator pos:line="9" pos:column="33">(<pos:position pos:line="9" pos:column="34"/></operator>struct <name pos:line="9" pos:column="41">proxy_remote<pos:position pos:line="9" pos:column="53"/></name> <operator pos:line="9" pos:column="54">*<pos:position pos:line="9" pos:column="55"/></operator><operator pos:line="9" pos:column="55">)<pos:position pos:line="9" pos:column="56"/></operator> <name><name pos:line="9" pos:column="57">proxies<pos:position pos:line="9" pos:column="64"/></name><operator pos:line="9" pos:column="64">-&gt;<pos:position pos:line="9" pos:column="69"/></operator><name pos:line="9" pos:column="66">elts<pos:position pos:line="9" pos:column="70"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">i<pos:position pos:line="10" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="12">rc<pos:position pos:line="10" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="16">access_status<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">direct_connect<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">char<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">str<pos:position pos:line="12" pos:column="20"/></name></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">long<pos:position pos:line="13" pos:column="9"/></name></type> <name pos:line="13" pos:column="10">maxfwd<pos:position pos:line="13" pos:column="16"/></name></decl>;<pos:position pos:line="13" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">proxy_balancer<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">balancer<pos:position pos:line="14" pos:column="29"/></name> <init pos:line="14" pos:column="30">= <expr><name pos:line="14" pos:column="32">NULL<pos:position pos:line="14" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">proxy_worker<pos:position pos:line="15" pos:column="17"/></name> <modifier pos:line="15" pos:column="18">*<pos:position pos:line="15" pos:column="19"/></modifier></type><name pos:line="15" pos:column="19">worker<pos:position pos:line="15" pos:column="25"/></name> <init pos:line="15" pos:column="26">= <expr><name pos:line="15" pos:column="28">NULL<pos:position pos:line="15" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">attempts<pos:position pos:line="16" pos:column="17"/></name> <init pos:line="16" pos:column="18">= <expr><literal type="number" pos:line="16" pos:column="20">0<pos:position pos:line="16" pos:column="21"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="23">max_attempts<pos:position pos:line="16" pos:column="35"/></name> <init pos:line="16" pos:column="36">= <expr><literal type="number" pos:line="16" pos:column="38">0<pos:position pos:line="16" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="17" pos:column="5">struct<pos:position pos:line="17" pos:column="11"/></name> <name pos:line="17" pos:column="12">dirconn_entry<pos:position pos:line="17" pos:column="25"/></name></name> <modifier pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></modifier></type><name pos:line="17" pos:column="27">list<pos:position pos:line="17" pos:column="31"/></name> <init pos:line="17" pos:column="32">= <expr><operator pos:line="17" pos:column="34">(<pos:position pos:line="17" pos:column="35"/></operator>struct <name pos:line="17" pos:column="42">dirconn_entry<pos:position pos:line="17" pos:column="55"/></name> <operator pos:line="17" pos:column="56">*<pos:position pos:line="17" pos:column="57"/></operator><operator pos:line="17" pos:column="57">)<pos:position pos:line="17" pos:column="58"/></operator><name><name pos:line="17" pos:column="58">conf<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">dirconn<pos:position pos:line="17" pos:column="71"/></name><operator pos:line="17" pos:column="71">-&gt;<pos:position pos:line="17" pos:column="76"/></operator><name pos:line="17" pos:column="73">elts<pos:position pos:line="17" pos:column="77"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="78"/></decl_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* is this for us? */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><name><name pos:line="20" pos:column="10">r<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">proxyreq<pos:position pos:line="20" pos:column="21"/></name></name> <operator pos:line="20" pos:column="22">||<pos:position pos:line="20" pos:column="24"/></operator> <operator pos:line="20" pos:column="25">!<pos:position pos:line="20" pos:column="26"/></operator><name><name pos:line="20" pos:column="26">r<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">-&gt;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="29">filename<pos:position pos:line="20" pos:column="37"/></name></name> <operator pos:line="20" pos:column="38">||<pos:position pos:line="20" pos:column="40"/></operator> <call><name pos:line="20" pos:column="41">strncmp<pos:position pos:line="20" pos:column="48"/></name><argument_list pos:line="20" pos:column="48">(<argument><expr><name><name pos:line="20" pos:column="49">r<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">-&gt;<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="52">filename<pos:position pos:line="20" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="62">"proxy:"<pos:position pos:line="20" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="72">6<pos:position pos:line="20" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call> <operator pos:line="20" pos:column="75">!=<pos:position pos:line="20" pos:column="77"/></operator> <literal type="number" pos:line="20" pos:column="78">0<pos:position pos:line="20" pos:column="79"/></literal></expr>)<pos:position pos:line="20" pos:column="80"/></condition><then pos:line="20" pos:column="80">
        <block type="pseudo"><return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">DECLINED<pos:position pos:line="21" pos:column="24"/></name></expr>;<pos:position pos:line="21" pos:column="25"/></return></block></then></if>

    <comment type="block" pos:line="23" pos:column="5">/* handle max-forwards / OPTIONS / TRACE */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">str<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">apr_table_get<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name><name pos:line="24" pos:column="30">r<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-&gt;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="33">headers_in<pos:position pos:line="24" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="45">"Max-Forwards"<pos:position pos:line="24" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call><operator pos:line="24" pos:column="60">)<pos:position pos:line="24" pos:column="61"/></operator></expr>)<pos:position pos:line="24" pos:column="62"/></condition><then pos:line="24" pos:column="62"> <block pos:line="24" pos:column="63">{
        <expr_stmt><expr><name pos:line="25" pos:column="9">maxfwd<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name pos:line="25" pos:column="18">strtol<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">str<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="30">NULL<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="36">10<pos:position pos:line="25" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">maxfwd<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">&lt;<pos:position pos:line="26" pos:column="24"/></operator> <literal type="number" pos:line="26" pos:column="22">1<pos:position pos:line="26" pos:column="23"/></literal></expr>)<pos:position pos:line="26" pos:column="24"/></condition><then pos:line="26" pos:column="24"> <block pos:line="26" pos:column="25">{
            <switch pos:line="27" pos:column="13">switch <condition pos:line="27" pos:column="20">(<expr><name><name pos:line="27" pos:column="21">r<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">method_number<pos:position pos:line="27" pos:column="37"/></name></name></expr>)<pos:position pos:line="27" pos:column="38"/></condition> <block pos:line="27" pos:column="39">{
            <case pos:line="28" pos:column="13">case <expr><name pos:line="28" pos:column="18">M_TRACE<pos:position pos:line="28" pos:column="25"/></name></expr>:<pos:position pos:line="28" pos:column="26"/></case> <block pos:line="28" pos:column="27">{
                <decl_stmt><decl><type><name pos:line="29" pos:column="17">int<pos:position pos:line="29" pos:column="20"/></name></type> <name pos:line="29" pos:column="21">access_status<pos:position pos:line="29" pos:column="34"/></name></decl>;<pos:position pos:line="29" pos:column="35"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="30" pos:column="17">r<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">-&gt;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="20">proxyreq<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <name pos:line="30" pos:column="31">PROXYREQ_NONE<pos:position pos:line="30" pos:column="44"/></name></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>
                <if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><operator pos:line="31" pos:column="21">(<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">access_status<pos:position pos:line="31" pos:column="35"/></name> <operator pos:line="31" pos:column="36">=<pos:position pos:line="31" pos:column="37"/></operator> <call><name pos:line="31" pos:column="38">ap_send_http_trace<pos:position pos:line="31" pos:column="56"/></name><argument_list pos:line="31" pos:column="56">(<argument><expr><name pos:line="31" pos:column="57">r<pos:position pos:line="31" pos:column="58"/></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call><operator pos:line="31" pos:column="59">)<pos:position pos:line="31" pos:column="60"/></operator></expr>)<pos:position pos:line="31" pos:column="61"/></condition><then pos:line="31" pos:column="61">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="21">ap_die<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">access_status<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="43">r<pos:position pos:line="32" pos:column="44"/></name></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt></block></then>
                <else pos:line="33" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="21">ap_finalize_request_protocol<pos:position pos:line="34" pos:column="49"/></name><argument_list pos:line="34" pos:column="49">(<argument><expr><name pos:line="34" pos:column="50">r<pos:position pos:line="34" pos:column="51"/></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt></block></else></if>
                <return pos:line="35" pos:column="17">return <expr><name pos:line="35" pos:column="24">OK<pos:position pos:line="35" pos:column="26"/></name></expr>;<pos:position pos:line="35" pos:column="27"/></return>
            }<pos:position pos:line="36" pos:column="14"/></block>
            <case pos:line="37" pos:column="13">case <expr><name pos:line="37" pos:column="18">M_OPTIONS<pos:position pos:line="37" pos:column="27"/></name></expr>:<pos:position pos:line="37" pos:column="28"/></case> <block pos:line="37" pos:column="29">{
                <decl_stmt><decl><type><name pos:line="38" pos:column="17">int<pos:position pos:line="38" pos:column="20"/></name></type> <name pos:line="38" pos:column="21">access_status<pos:position pos:line="38" pos:column="34"/></name></decl>;<pos:position pos:line="38" pos:column="35"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="39" pos:column="17">r<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">proxyreq<pos:position pos:line="39" pos:column="28"/></name></name> <operator pos:line="39" pos:column="29">=<pos:position pos:line="39" pos:column="30"/></operator> <name pos:line="39" pos:column="31">PROXYREQ_NONE<pos:position pos:line="39" pos:column="44"/></name></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt>
                <if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><operator pos:line="40" pos:column="21">(<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">access_status<pos:position pos:line="40" pos:column="35"/></name> <operator pos:line="40" pos:column="36">=<pos:position pos:line="40" pos:column="37"/></operator> <call><name pos:line="40" pos:column="38">ap_send_http_options<pos:position pos:line="40" pos:column="58"/></name><argument_list pos:line="40" pos:column="58">(<argument><expr><name pos:line="40" pos:column="59">r<pos:position pos:line="40" pos:column="60"/></name></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call><operator pos:line="40" pos:column="61">)<pos:position pos:line="40" pos:column="62"/></operator></expr>)<pos:position pos:line="40" pos:column="63"/></condition><then pos:line="40" pos:column="63">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="21">ap_die<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">access_status<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="43">r<pos:position pos:line="41" pos:column="44"/></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt></block></then>
                <else pos:line="42" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="21">ap_finalize_request_protocol<pos:position pos:line="43" pos:column="49"/></name><argument_list pos:line="43" pos:column="49">(<argument><expr><name pos:line="43" pos:column="50">r<pos:position pos:line="43" pos:column="51"/></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt></block></else></if>
                <return pos:line="44" pos:column="17">return <expr><name pos:line="44" pos:column="24">OK<pos:position pos:line="44" pos:column="26"/></name></expr>;<pos:position pos:line="44" pos:column="27"/></return>
            }<pos:position pos:line="45" pos:column="14"/></block>
            <default pos:line="46" pos:column="13">default:<pos:position pos:line="46" pos:column="21"/></default> <block pos:line="46" pos:column="22">{
                <return pos:line="47" pos:column="17">return <expr><call><name pos:line="47" pos:column="24">ap_proxyerror<pos:position pos:line="47" pos:column="37"/></name><argument_list pos:line="47" pos:column="37">(<argument><expr><name pos:line="47" pos:column="38">r<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="41">HTTP_BAD_GATEWAY<pos:position pos:line="47" pos:column="57"/></name></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="48" pos:column="38">"Max-Forwards has reached zero - proxy loop?"<pos:position pos:line="48" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="85"/></return>
            }<pos:position pos:line="49" pos:column="14"/></block>
            }<pos:position pos:line="50" pos:column="14"/></block></switch>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="52" pos:column="9">maxfwd<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="52" pos:column="18">(<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="19">maxfwd<pos:position pos:line="52" pos:column="25"/></name> <operator pos:line="52" pos:column="26">&gt;<pos:position pos:line="52" pos:column="30"/></operator> <literal type="number" pos:line="52" pos:column="28">0<pos:position pos:line="52" pos:column="29"/></literal><operator pos:line="52" pos:column="29">)<pos:position pos:line="52" pos:column="30"/></operator></expr> ?<pos:position pos:line="52" pos:column="32"/></condition><then pos:line="52" pos:column="32"> <expr><name pos:line="52" pos:column="33">maxfwd<pos:position pos:line="52" pos:column="39"/></name> <operator pos:line="52" pos:column="40">-<pos:position pos:line="52" pos:column="41"/></operator> <literal type="number" pos:line="52" pos:column="42">1<pos:position pos:line="52" pos:column="43"/></literal></expr> <pos:position pos:line="52" pos:column="44"/></then><else pos:line="52" pos:column="44">: <expr><literal type="number" pos:line="52" pos:column="46">0<pos:position pos:line="52" pos:column="47"/></literal></expr></else></ternary></expr>;<pos:position pos:line="52" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then>
    <else pos:line="54" pos:column="5">else <block pos:line="54" pos:column="10">{
        <comment type="block" pos:line="55" pos:column="9">/* set configured max-forwards */</comment>
        <expr_stmt><expr><name pos:line="56" pos:column="9">maxfwd<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <name><name pos:line="56" pos:column="18">conf<pos:position pos:line="56" pos:column="22"/></name><operator pos:line="56" pos:column="22">-&gt;<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="24">maxfwd<pos:position pos:line="56" pos:column="30"/></name></name></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">apr_table_set<pos:position pos:line="58" pos:column="18"/></name><argument_list pos:line="58" pos:column="18">(<argument><expr><name><name pos:line="58" pos:column="19">r<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">-&gt;<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="22">headers_in<pos:position pos:line="58" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="34">"Max-Forwards"<pos:position pos:line="58" pos:column="48"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="59" pos:column="19">apr_psprintf<pos:position pos:line="59" pos:column="31"/></name><argument_list pos:line="59" pos:column="31">(<argument><expr><name><name pos:line="59" pos:column="32">r<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">-&gt;<pos:position pos:line="59" pos:column="38"/></operator><name pos:line="59" pos:column="35">pool<pos:position pos:line="59" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="41">"%ld"<pos:position pos:line="59" pos:column="46"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="59" pos:column="48">(<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="49">maxfwd<pos:position pos:line="59" pos:column="55"/></name> <operator pos:line="59" pos:column="56">&gt;<pos:position pos:line="59" pos:column="60"/></operator> <literal type="number" pos:line="59" pos:column="58">0<pos:position pos:line="59" pos:column="59"/></literal><operator pos:line="59" pos:column="59">)<pos:position pos:line="59" pos:column="60"/></operator></expr> ?<pos:position pos:line="59" pos:column="62"/></condition><then pos:line="59" pos:column="62"> <expr><name pos:line="59" pos:column="63">maxfwd<pos:position pos:line="59" pos:column="69"/></name></expr> <pos:position pos:line="59" pos:column="70"/></then><else pos:line="59" pos:column="70">: <expr><literal type="number" pos:line="59" pos:column="72">0<pos:position pos:line="59" pos:column="73"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="59" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="76"/></expr_stmt>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name><name pos:line="61" pos:column="9">r<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">-&gt;<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="12">method_number<pos:position pos:line="61" pos:column="25"/></name></name> <operator pos:line="61" pos:column="26">==<pos:position pos:line="61" pos:column="28"/></operator> <name pos:line="61" pos:column="29">M_TRACE<pos:position pos:line="61" pos:column="36"/></name></expr>)<pos:position pos:line="61" pos:column="37"/></condition><then pos:line="61" pos:column="37"> <block pos:line="61" pos:column="38">{
        <decl_stmt><decl><type><name pos:line="62" pos:column="9">core_server_config<pos:position pos:line="62" pos:column="27"/></name> <modifier pos:line="62" pos:column="28">*<pos:position pos:line="62" pos:column="29"/></modifier></type><name pos:line="62" pos:column="29">coreconf<pos:position pos:line="62" pos:column="37"/></name> <init pos:line="62" pos:column="38">= <expr><operator pos:line="62" pos:column="40">(<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="41">core_server_config<pos:position pos:line="62" pos:column="59"/></name> <operator pos:line="62" pos:column="60">*<pos:position pos:line="62" pos:column="61"/></operator><operator pos:line="62" pos:column="61">)<pos:position pos:line="62" pos:column="62"/></operator>
                            <call><name pos:line="63" pos:column="29">ap_get_module_config<pos:position pos:line="63" pos:column="49"/></name><argument_list pos:line="63" pos:column="49">(<argument><expr><name pos:line="63" pos:column="50">sconf<pos:position pos:line="63" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="57">&amp;<pos:position pos:line="63" pos:column="62"/></operator><name pos:line="63" pos:column="58">core_module<pos:position pos:line="63" pos:column="69"/></name></expr></argument>)<pos:position pos:line="63" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="63" pos:column="71"/></decl_stmt>

        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name><name pos:line="65" pos:column="13">coreconf<pos:position pos:line="65" pos:column="21"/></name><operator pos:line="65" pos:column="21">-&gt;<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="23">trace_enable<pos:position pos:line="65" pos:column="35"/></name></name> <operator pos:line="65" pos:column="36">==<pos:position pos:line="65" pos:column="38"/></operator> <name pos:line="65" pos:column="39">AP_TRACE_DISABLE<pos:position pos:line="65" pos:column="55"/></name></expr>)<pos:position pos:line="65" pos:column="56"/></condition><then pos:line="65" pos:column="56">
        <block pos:line="66" pos:column="9">{
            <comment type="block" pos:line="67" pos:column="13">/* Allow "error-notes" string to be printed by ap_send_error_response()
             * Note; this goes nowhere, canned error response need an overhaul.
             */</comment>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">apr_table_setn<pos:position pos:line="70" pos:column="27"/></name><argument_list pos:line="70" pos:column="27">(<argument><expr><name><name pos:line="70" pos:column="28">r<pos:position pos:line="70" pos:column="29"/></name><operator pos:line="70" pos:column="29">-&gt;<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="31">notes<pos:position pos:line="70" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="38">"error-notes"<pos:position pos:line="70" pos:column="51"/></literal></expr></argument>,
                           <argument><expr><literal type="string" pos:line="71" pos:column="28">"TRACE forbidden by server configuration"<pos:position pos:line="71" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="72" pos:column="13">apr_table_setn<pos:position pos:line="72" pos:column="27"/></name><argument_list pos:line="72" pos:column="27">(<argument><expr><name><name pos:line="72" pos:column="28">r<pos:position pos:line="72" pos:column="29"/></name><operator pos:line="72" pos:column="29">-&gt;<pos:position pos:line="72" pos:column="34"/></operator><name pos:line="72" pos:column="31">notes<pos:position pos:line="72" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="38">"verbose-error-to"<pos:position pos:line="72" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="58">"*"<pos:position pos:line="72" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">ap_log_rerror<pos:position pos:line="73" pos:column="26"/></name><argument_list pos:line="73" pos:column="26">(<argument><expr><name pos:line="73" pos:column="27">APLOG_MARK<pos:position pos:line="73" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="39">APLOG_ERR<pos:position pos:line="73" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="50">0<pos:position pos:line="73" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="53">r<pos:position pos:line="73" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="74" pos:column="27">"proxy: TRACE forbidden by server configuration"<pos:position pos:line="74" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="77"/></expr_stmt>
            <return pos:line="75" pos:column="13">return <expr><name pos:line="75" pos:column="20">HTTP_FORBIDDEN<pos:position pos:line="75" pos:column="34"/></name></expr>;<pos:position pos:line="75" pos:column="35"/></return>
        }<pos:position pos:line="76" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="78" pos:column="9">/* Can't test ap_should_client_block, we aren't ready to send
         * the client a 100 Continue response till the connection has
         * been established
         */</comment>
        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name><name pos:line="82" pos:column="13">coreconf<pos:position pos:line="82" pos:column="21"/></name><operator pos:line="82" pos:column="21">-&gt;<pos:position pos:line="82" pos:column="26"/></operator><name pos:line="82" pos:column="23">trace_enable<pos:position pos:line="82" pos:column="35"/></name></name> <operator pos:line="82" pos:column="36">!=<pos:position pos:line="82" pos:column="38"/></operator> <name pos:line="82" pos:column="39">AP_TRACE_EXTENDED<pos:position pos:line="82" pos:column="56"/></name>
            <operator pos:line="83" pos:column="13">&amp;&amp;<pos:position pos:line="83" pos:column="23"/></operator> <operator pos:line="83" pos:column="16">(<pos:position pos:line="83" pos:column="17"/></operator><name><name pos:line="83" pos:column="17">r<pos:position pos:line="83" pos:column="18"/></name><operator pos:line="83" pos:column="18">-&gt;<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="20">read_length<pos:position pos:line="83" pos:column="31"/></name></name> <operator pos:line="83" pos:column="32">||<pos:position pos:line="83" pos:column="34"/></operator> <name><name pos:line="83" pos:column="35">r<pos:position pos:line="83" pos:column="36"/></name><operator pos:line="83" pos:column="36">-&gt;<pos:position pos:line="83" pos:column="41"/></operator><name pos:line="83" pos:column="38">read_chunked<pos:position pos:line="83" pos:column="50"/></name></name> <operator pos:line="83" pos:column="51">||<pos:position pos:line="83" pos:column="53"/></operator> <name><name pos:line="83" pos:column="54">r<pos:position pos:line="83" pos:column="55"/></name><operator pos:line="83" pos:column="55">-&gt;<pos:position pos:line="83" pos:column="60"/></operator><name pos:line="83" pos:column="57">remaining<pos:position pos:line="83" pos:column="66"/></name></name><operator pos:line="83" pos:column="66">)<pos:position pos:line="83" pos:column="67"/></operator></expr>)<pos:position pos:line="83" pos:column="68"/></condition><then pos:line="83" pos:column="68">
        <block pos:line="84" pos:column="9">{
            <comment type="block" pos:line="85" pos:column="13">/* Allow "error-notes" string to be printed by ap_send_error_response()
             * Note; this goes nowhere, canned error response need an overhaul.
             */</comment>
            <expr_stmt><expr><call><name pos:line="88" pos:column="13">apr_table_setn<pos:position pos:line="88" pos:column="27"/></name><argument_list pos:line="88" pos:column="27">(<argument><expr><name><name pos:line="88" pos:column="28">r<pos:position pos:line="88" pos:column="29"/></name><operator pos:line="88" pos:column="29">-&gt;<pos:position pos:line="88" pos:column="34"/></operator><name pos:line="88" pos:column="31">notes<pos:position pos:line="88" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="38">"error-notes"<pos:position pos:line="88" pos:column="51"/></literal></expr></argument>,
                           <argument><expr><literal type="string" pos:line="89" pos:column="28">"TRACE with request body is not allowed"<pos:position pos:line="89" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">apr_table_setn<pos:position pos:line="90" pos:column="27"/></name><argument_list pos:line="90" pos:column="27">(<argument><expr><name><name pos:line="90" pos:column="28">r<pos:position pos:line="90" pos:column="29"/></name><operator pos:line="90" pos:column="29">-&gt;<pos:position pos:line="90" pos:column="34"/></operator><name pos:line="90" pos:column="31">notes<pos:position pos:line="90" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="38">"verbose-error-to"<pos:position pos:line="90" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="58">"*"<pos:position pos:line="90" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="91" pos:column="13">ap_log_rerror<pos:position pos:line="91" pos:column="26"/></name><argument_list pos:line="91" pos:column="26">(<argument><expr><name pos:line="91" pos:column="27">APLOG_MARK<pos:position pos:line="91" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="39">APLOG_ERR<pos:position pos:line="91" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="50">0<pos:position pos:line="91" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="53">r<pos:position pos:line="91" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="92" pos:column="27">"proxy: TRACE with request body is not allowed"<pos:position pos:line="92" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="76"/></expr_stmt>
            <return pos:line="93" pos:column="13">return <expr><name pos:line="93" pos:column="20">HTTP_REQUEST_ENTITY_TOO_LARGE<pos:position pos:line="93" pos:column="49"/></name></expr>;<pos:position pos:line="93" pos:column="50"/></return>
        }<pos:position pos:line="94" pos:column="10"/></block></then></if>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="97" pos:column="5">uri<pos:position pos:line="97" pos:column="8"/></name> <operator pos:line="97" pos:column="9">=<pos:position pos:line="97" pos:column="10"/></operator> <name><name pos:line="97" pos:column="11">r<pos:position pos:line="97" pos:column="12"/></name><operator pos:line="97" pos:column="12">-&gt;<pos:position pos:line="97" pos:column="17"/></operator><name pos:line="97" pos:column="14">filename<pos:position pos:line="97" pos:column="22"/></name></name> <operator pos:line="97" pos:column="23">+<pos:position pos:line="97" pos:column="24"/></operator> <literal type="number" pos:line="97" pos:column="25">6<pos:position pos:line="97" pos:column="26"/></literal></expr>;<pos:position pos:line="97" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="98" pos:column="5">p<pos:position pos:line="98" pos:column="6"/></name> <operator pos:line="98" pos:column="7">=<pos:position pos:line="98" pos:column="8"/></operator> <call><name pos:line="98" pos:column="9">strchr<pos:position pos:line="98" pos:column="15"/></name><argument_list pos:line="98" pos:column="15">(<argument><expr><name pos:line="98" pos:column="16">uri<pos:position pos:line="98" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="98" pos:column="21">':'<pos:position pos:line="98" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="26"/></expr_stmt>
    <if pos:line="99" pos:column="5">if <condition pos:line="99" pos:column="8">(<expr><name pos:line="99" pos:column="9">p<pos:position pos:line="99" pos:column="10"/></name> <operator pos:line="99" pos:column="11">==<pos:position pos:line="99" pos:column="13"/></operator> <name pos:line="99" pos:column="14">NULL<pos:position pos:line="99" pos:column="18"/></name></expr>)<pos:position pos:line="99" pos:column="19"/></condition><then pos:line="99" pos:column="19"> <block pos:line="99" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">ap_log_rerror<pos:position pos:line="100" pos:column="22"/></name><argument_list pos:line="100" pos:column="22">(<argument><expr><name pos:line="100" pos:column="23">APLOG_MARK<pos:position pos:line="100" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="35">APLOG_DEBUG<pos:position pos:line="100" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="48">0<pos:position pos:line="100" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="51">r<pos:position pos:line="100" pos:column="52"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="101" pos:column="23">"proxy_handler no URL in %s"<pos:position pos:line="101" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="53">r<pos:position pos:line="101" pos:column="54"/></name><operator pos:line="101" pos:column="54">-&gt;<pos:position pos:line="101" pos:column="59"/></operator><name pos:line="101" pos:column="56">filename<pos:position pos:line="101" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="66"/></expr_stmt>
        <return pos:line="102" pos:column="9">return <expr><name pos:line="102" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="102" pos:column="32"/></name></expr>;<pos:position pos:line="102" pos:column="33"/></return>
    }<pos:position pos:line="103" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="105" pos:column="5">/* If the host doesn't have a domain name, add one and redirect. */</comment>
    <if pos:line="106" pos:column="5">if <condition pos:line="106" pos:column="8">(<expr><name><name pos:line="106" pos:column="9">conf<pos:position pos:line="106" pos:column="13"/></name><operator pos:line="106" pos:column="13">-&gt;<pos:position pos:line="106" pos:column="18"/></operator><name pos:line="106" pos:column="15">domain<pos:position pos:line="106" pos:column="21"/></name></name> <operator pos:line="106" pos:column="22">!=<pos:position pos:line="106" pos:column="24"/></operator> <name pos:line="106" pos:column="25">NULL<pos:position pos:line="106" pos:column="29"/></name></expr>)<pos:position pos:line="106" pos:column="30"/></condition><then pos:line="106" pos:column="30"> <block pos:line="106" pos:column="31">{
        <expr_stmt><expr><name pos:line="107" pos:column="9">rc<pos:position pos:line="107" pos:column="11"/></name> <operator pos:line="107" pos:column="12">=<pos:position pos:line="107" pos:column="13"/></operator> <call><name pos:line="107" pos:column="14">proxy_needsdomain<pos:position pos:line="107" pos:column="31"/></name><argument_list pos:line="107" pos:column="31">(<argument><expr><name pos:line="107" pos:column="32">r<pos:position pos:line="107" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="35">uri<pos:position pos:line="107" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="40">conf<pos:position pos:line="107" pos:column="44"/></name><operator pos:line="107" pos:column="44">-&gt;<pos:position pos:line="107" pos:column="49"/></operator><name pos:line="107" pos:column="46">domain<pos:position pos:line="107" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="54"/></expr_stmt>
        <if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><call><name pos:line="108" pos:column="13">ap_is_HTTP_REDIRECT<pos:position pos:line="108" pos:column="32"/></name><argument_list pos:line="108" pos:column="32">(<argument><expr><name pos:line="108" pos:column="33">rc<pos:position pos:line="108" pos:column="35"/></name></expr></argument>)<pos:position pos:line="108" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="108" pos:column="37"/></condition><then pos:line="108" pos:column="37">
            <block type="pseudo"><return pos:line="109" pos:column="13">return <expr><name pos:line="109" pos:column="20">HTTP_MOVED_PERMANENTLY<pos:position pos:line="109" pos:column="42"/></name></expr>;<pos:position pos:line="109" pos:column="43"/></return></block></then></if>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="112" pos:column="5">scheme<pos:position pos:line="112" pos:column="11"/></name> <operator pos:line="112" pos:column="12">=<pos:position pos:line="112" pos:column="13"/></operator> <call><name pos:line="112" pos:column="14">apr_pstrndup<pos:position pos:line="112" pos:column="26"/></name><argument_list pos:line="112" pos:column="26">(<argument><expr><name><name pos:line="112" pos:column="27">r<pos:position pos:line="112" pos:column="28"/></name><operator pos:line="112" pos:column="28">-&gt;<pos:position pos:line="112" pos:column="33"/></operator><name pos:line="112" pos:column="30">pool<pos:position pos:line="112" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="36">uri<pos:position pos:line="112" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="41">p<pos:position pos:line="112" pos:column="42"/></name> <operator pos:line="112" pos:column="43">-<pos:position pos:line="112" pos:column="44"/></operator> <name pos:line="112" pos:column="45">uri<pos:position pos:line="112" pos:column="48"/></name></expr></argument>)<pos:position pos:line="112" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="50"/></expr_stmt>
    <comment type="block" pos:line="113" pos:column="5">/* Check URI's destination host against NoProxy hosts */</comment>
    <comment type="block" pos:line="114" pos:column="5">/* Bypass ProxyRemote server lookup if configured as NoProxy */</comment>
    <for pos:line="115" pos:column="5">for <control pos:line="115" pos:column="9">(<init><expr><name pos:line="115" pos:column="10">direct_connect<pos:position pos:line="115" pos:column="24"/></name> <operator pos:line="115" pos:column="25">=<pos:position pos:line="115" pos:column="26"/></operator> <name pos:line="115" pos:column="27">i<pos:position pos:line="115" pos:column="28"/></name> <operator pos:line="115" pos:column="29">=<pos:position pos:line="115" pos:column="30"/></operator> <literal type="number" pos:line="115" pos:column="31">0<pos:position pos:line="115" pos:column="32"/></literal></expr>;<pos:position pos:line="115" pos:column="33"/></init> <condition><expr><name pos:line="115" pos:column="34">i<pos:position pos:line="115" pos:column="35"/></name> <operator pos:line="115" pos:column="36">&lt;<pos:position pos:line="115" pos:column="40"/></operator> <name><name pos:line="115" pos:column="38">conf<pos:position pos:line="115" pos:column="42"/></name><operator pos:line="115" pos:column="42">-&gt;<pos:position pos:line="115" pos:column="47"/></operator><name pos:line="115" pos:column="44">dirconn<pos:position pos:line="115" pos:column="51"/></name><operator pos:line="115" pos:column="51">-&gt;<pos:position pos:line="115" pos:column="56"/></operator><name pos:line="115" pos:column="53">nelts<pos:position pos:line="115" pos:column="58"/></name></name> <operator pos:line="115" pos:column="59">&amp;&amp;<pos:position pos:line="115" pos:column="69"/></operator>
                                        <operator pos:line="116" pos:column="41">!<pos:position pos:line="116" pos:column="42"/></operator><name pos:line="116" pos:column="42">direct_connect<pos:position pos:line="116" pos:column="56"/></name></expr>;<pos:position pos:line="116" pos:column="57"/></condition> <incr><expr><name pos:line="116" pos:column="58">i<pos:position pos:line="116" pos:column="59"/></name><operator pos:line="116" pos:column="59">++<pos:position pos:line="116" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="116" pos:column="62"/></control> <block pos:line="116" pos:column="63">{
        <expr_stmt><expr><name pos:line="117" pos:column="9">direct_connect<pos:position pos:line="117" pos:column="23"/></name> <operator pos:line="117" pos:column="24">=<pos:position pos:line="117" pos:column="25"/></operator> <name><name pos:line="117" pos:column="26">list<pos:position pos:line="117" pos:column="30"/></name><index pos:line="117" pos:column="30">[<expr><name pos:line="117" pos:column="31">i<pos:position pos:line="117" pos:column="32"/></name></expr>]<pos:position pos:line="117" pos:column="33"/></index></name><operator pos:line="117" pos:column="33">.<pos:position pos:line="117" pos:column="34"/></operator><call><name pos:line="117" pos:column="34">matcher<pos:position pos:line="117" pos:column="41"/></name><argument_list pos:line="117" pos:column="41">(<argument><expr><operator pos:line="117" pos:column="42">&amp;<pos:position pos:line="117" pos:column="47"/></operator><name><name pos:line="117" pos:column="43">list<pos:position pos:line="117" pos:column="47"/></name><index pos:line="117" pos:column="47">[<expr><name pos:line="117" pos:column="48">i<pos:position pos:line="117" pos:column="49"/></name></expr>]<pos:position pos:line="117" pos:column="50"/></index></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="52">r<pos:position pos:line="117" pos:column="53"/></name></expr></argument>)<pos:position pos:line="117" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="118" pos:column="6"/></block></for>
<cpp:if pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">if<pos:position pos:line="119" pos:column="4"/></cpp:directive> <expr><name pos:line="119" pos:column="5">DEBUGGING<pos:position pos:line="119" pos:column="14"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="120" pos:column="5">ap_log_rerror<pos:position pos:line="120" pos:column="18"/></name><argument_list pos:line="120" pos:column="18">(<argument><expr><name pos:line="120" pos:column="19">APLOG_MARK<pos:position pos:line="120" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="31">APLOG_DEBUG<pos:position pos:line="120" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="120" pos:column="44">0<pos:position pos:line="120" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="120" pos:column="47">r<pos:position pos:line="120" pos:column="48"/></name></expr></argument>,
                <argument><expr><ternary><condition><expr><operator pos:line="121" pos:column="17">(<pos:position pos:line="121" pos:column="18"/></operator><name pos:line="121" pos:column="18">direct_connect<pos:position pos:line="121" pos:column="32"/></name><operator pos:line="121" pos:column="32">)<pos:position pos:line="121" pos:column="33"/></operator></expr> ?<pos:position pos:line="121" pos:column="35"/></condition><then pos:line="121" pos:column="35"> <expr><literal type="string" pos:line="121" pos:column="36">"NoProxy for %s"<pos:position pos:line="121" pos:column="52"/></literal></expr> <pos:position pos:line="121" pos:column="53"/></then><else pos:line="121" pos:column="53">: <expr><literal type="string" pos:line="121" pos:column="55">"UseProxy for %s"<pos:position pos:line="121" pos:column="72"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><name><name pos:line="122" pos:column="17">r<pos:position pos:line="122" pos:column="18"/></name><operator pos:line="122" pos:column="18">-&gt;<pos:position pos:line="122" pos:column="23"/></operator><name pos:line="122" pos:column="20">uri<pos:position pos:line="122" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="123" pos:column="1">#<cpp:directive pos:line="123" pos:column="2">endif<pos:position pos:line="123" pos:column="7"/></cpp:directive></cpp:endif>

    <do pos:line="125" pos:column="5">do <block pos:line="125" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="126" pos:column="9">char<pos:position pos:line="126" pos:column="13"/></name> <modifier pos:line="126" pos:column="14">*<pos:position pos:line="126" pos:column="15"/></modifier></type><name pos:line="126" pos:column="15">url<pos:position pos:line="126" pos:column="18"/></name> <init pos:line="126" pos:column="19">= <expr><name pos:line="126" pos:column="21">uri<pos:position pos:line="126" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="126" pos:column="25"/></decl_stmt>
        <comment type="block" pos:line="127" pos:column="9">/* Try to obtain the most suitable worker */</comment>
        <expr_stmt><expr><name pos:line="128" pos:column="9">access_status<pos:position pos:line="128" pos:column="22"/></name> <operator pos:line="128" pos:column="23">=<pos:position pos:line="128" pos:column="24"/></operator> <call><name pos:line="128" pos:column="25">ap_proxy_pre_request<pos:position pos:line="128" pos:column="45"/></name><argument_list pos:line="128" pos:column="45">(<argument><expr><operator pos:line="128" pos:column="46">&amp;<pos:position pos:line="128" pos:column="51"/></operator><name pos:line="128" pos:column="47">worker<pos:position pos:line="128" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="128" pos:column="55">&amp;<pos:position pos:line="128" pos:column="60"/></operator><name pos:line="128" pos:column="56">balancer<pos:position pos:line="128" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="66">r<pos:position pos:line="128" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="69">conf<pos:position pos:line="128" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="128" pos:column="75">&amp;<pos:position pos:line="128" pos:column="80"/></operator><name pos:line="128" pos:column="76">url<pos:position pos:line="128" pos:column="79"/></name></expr></argument>)<pos:position pos:line="128" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="81"/></expr_stmt>
        <if pos:line="129" pos:column="9">if <condition pos:line="129" pos:column="12">(<expr><name pos:line="129" pos:column="13">access_status<pos:position pos:line="129" pos:column="26"/></name> <operator pos:line="129" pos:column="27">!=<pos:position pos:line="129" pos:column="29"/></operator> <name pos:line="129" pos:column="30">OK<pos:position pos:line="129" pos:column="32"/></name></expr>)<pos:position pos:line="129" pos:column="33"/></condition><then pos:line="129" pos:column="33"> <block pos:line="129" pos:column="34">{
            <comment type="block" pos:line="130" pos:column="13">/*
             * Only return if access_status is not HTTP_SERVICE_UNAVAILABLE
             * This gives other modules the chance to hook into the
             * request_status hook and decide what to do in this situation.
             */</comment>
            <if pos:line="135" pos:column="13">if <condition pos:line="135" pos:column="16">(<expr><name pos:line="135" pos:column="17">access_status<pos:position pos:line="135" pos:column="30"/></name> <operator pos:line="135" pos:column="31">!=<pos:position pos:line="135" pos:column="33"/></operator> <name pos:line="135" pos:column="34">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="135" pos:column="58"/></name></expr>)<pos:position pos:line="135" pos:column="59"/></condition><then pos:line="135" pos:column="59">
                <block type="pseudo"><return pos:line="136" pos:column="17">return <expr><name pos:line="136" pos:column="24">access_status<pos:position pos:line="136" pos:column="37"/></name></expr>;<pos:position pos:line="136" pos:column="38"/></return></block></then></if>
            <comment type="block" pos:line="137" pos:column="13">/*
             * Ensure that balancer is NULL if worker is NULL to prevent
             * potential problems in the post_request hook.
             */</comment>
            <if pos:line="141" pos:column="13">if <condition pos:line="141" pos:column="16">(<expr><operator pos:line="141" pos:column="17">!<pos:position pos:line="141" pos:column="18"/></operator><name pos:line="141" pos:column="18">worker<pos:position pos:line="141" pos:column="24"/></name></expr>)<pos:position pos:line="141" pos:column="25"/></condition><then pos:line="141" pos:column="25">
                <block type="pseudo"><expr_stmt><expr><name pos:line="142" pos:column="17">balancer<pos:position pos:line="142" pos:column="25"/></name> <operator pos:line="142" pos:column="26">=<pos:position pos:line="142" pos:column="27"/></operator> <name pos:line="142" pos:column="28">NULL<pos:position pos:line="142" pos:column="32"/></name></expr>;<pos:position pos:line="142" pos:column="33"/></expr_stmt></block></then></if>
            <goto pos:line="143" pos:column="13">goto <name pos:line="143" pos:column="18">cleanup<pos:position pos:line="143" pos:column="25"/></name>;<pos:position pos:line="143" pos:column="26"/></goto>
        }<pos:position pos:line="144" pos:column="10"/></block></then></if>
        <if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><name pos:line="145" pos:column="13">balancer<pos:position pos:line="145" pos:column="21"/></name> <operator pos:line="145" pos:column="22">&amp;&amp;<pos:position pos:line="145" pos:column="32"/></operator> <name><name pos:line="145" pos:column="25">balancer<pos:position pos:line="145" pos:column="33"/></name><operator pos:line="145" pos:column="33">-&gt;<pos:position pos:line="145" pos:column="38"/></operator><name pos:line="145" pos:column="35">max_attempts_set<pos:position pos:line="145" pos:column="51"/></name></name> <operator pos:line="145" pos:column="52">&amp;&amp;<pos:position pos:line="145" pos:column="62"/></operator> <operator pos:line="145" pos:column="55">!<pos:position pos:line="145" pos:column="56"/></operator><name pos:line="145" pos:column="56">max_attempts<pos:position pos:line="145" pos:column="68"/></name></expr>)<pos:position pos:line="145" pos:column="69"/></condition><then pos:line="145" pos:column="69">
            <block type="pseudo"><expr_stmt><expr><name pos:line="146" pos:column="13">max_attempts<pos:position pos:line="146" pos:column="25"/></name> <operator pos:line="146" pos:column="26">=<pos:position pos:line="146" pos:column="27"/></operator> <name><name pos:line="146" pos:column="28">balancer<pos:position pos:line="146" pos:column="36"/></name><operator pos:line="146" pos:column="36">-&gt;<pos:position pos:line="146" pos:column="41"/></operator><name pos:line="146" pos:column="38">max_attempts<pos:position pos:line="146" pos:column="50"/></name></name></expr>;<pos:position pos:line="146" pos:column="51"/></expr_stmt></block></then></if>
        <comment type="block" pos:line="147" pos:column="9">/* firstly, try a proxy, unless a NoProxy directive is active */</comment>
        <if pos:line="148" pos:column="9">if <condition pos:line="148" pos:column="12">(<expr><operator pos:line="148" pos:column="13">!<pos:position pos:line="148" pos:column="14"/></operator><name pos:line="148" pos:column="14">direct_connect<pos:position pos:line="148" pos:column="28"/></name></expr>)<pos:position pos:line="148" pos:column="29"/></condition><then pos:line="148" pos:column="29"> <block pos:line="148" pos:column="30">{
            <for pos:line="149" pos:column="13">for <control pos:line="149" pos:column="17">(<init><expr><name pos:line="149" pos:column="18">i<pos:position pos:line="149" pos:column="19"/></name> <operator pos:line="149" pos:column="20">=<pos:position pos:line="149" pos:column="21"/></operator> <literal type="number" pos:line="149" pos:column="22">0<pos:position pos:line="149" pos:column="23"/></literal></expr>;<pos:position pos:line="149" pos:column="24"/></init> <condition><expr><name pos:line="149" pos:column="25">i<pos:position pos:line="149" pos:column="26"/></name> <operator pos:line="149" pos:column="27">&lt;<pos:position pos:line="149" pos:column="31"/></operator> <name><name pos:line="149" pos:column="29">proxies<pos:position pos:line="149" pos:column="36"/></name><operator pos:line="149" pos:column="36">-&gt;<pos:position pos:line="149" pos:column="41"/></operator><name pos:line="149" pos:column="38">nelts<pos:position pos:line="149" pos:column="43"/></name></name></expr>;<pos:position pos:line="149" pos:column="44"/></condition> <incr><expr><name pos:line="149" pos:column="45">i<pos:position pos:line="149" pos:column="46"/></name><operator pos:line="149" pos:column="46">++<pos:position pos:line="149" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="149" pos:column="49"/></control> <block pos:line="149" pos:column="50">{
                <expr_stmt><expr><name pos:line="150" pos:column="17">p2<pos:position pos:line="150" pos:column="19"/></name> <operator pos:line="150" pos:column="20">=<pos:position pos:line="150" pos:column="21"/></operator> <call><name pos:line="150" pos:column="22">ap_strchr_c<pos:position pos:line="150" pos:column="33"/></name><argument_list pos:line="150" pos:column="33">(<argument><expr><name><name pos:line="150" pos:column="34">ents<pos:position pos:line="150" pos:column="38"/></name><index pos:line="150" pos:column="38">[<expr><name pos:line="150" pos:column="39">i<pos:position pos:line="150" pos:column="40"/></name></expr>]<pos:position pos:line="150" pos:column="41"/></index></name><operator pos:line="150" pos:column="41">.<pos:position pos:line="150" pos:column="42"/></operator><name pos:line="150" pos:column="42">scheme<pos:position pos:line="150" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="150" pos:column="50">':'<pos:position pos:line="150" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="55"/></expr_stmt>  <comment type="block" pos:line="150" pos:column="57">/* is it a partial URL? */</comment>
                <if pos:line="151" pos:column="17">if <condition pos:line="151" pos:column="20">(<expr><call><name pos:line="151" pos:column="21">strcmp<pos:position pos:line="151" pos:column="27"/></name><argument_list pos:line="151" pos:column="27">(<argument><expr><name><name pos:line="151" pos:column="28">ents<pos:position pos:line="151" pos:column="32"/></name><index pos:line="151" pos:column="32">[<expr><name pos:line="151" pos:column="33">i<pos:position pos:line="151" pos:column="34"/></name></expr>]<pos:position pos:line="151" pos:column="35"/></index></name><operator pos:line="151" pos:column="35">.<pos:position pos:line="151" pos:column="36"/></operator><name pos:line="151" pos:column="36">scheme<pos:position pos:line="151" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="44">"*"<pos:position pos:line="151" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="48"/></argument_list></call> <operator pos:line="151" pos:column="49">==<pos:position pos:line="151" pos:column="51"/></operator> <literal type="number" pos:line="151" pos:column="52">0<pos:position pos:line="151" pos:column="53"/></literal> <operator pos:line="151" pos:column="54">||<pos:position pos:line="151" pos:column="56"/></operator>
                    <operator pos:line="152" pos:column="21">(<pos:position pos:line="152" pos:column="22"/></operator><name><name pos:line="152" pos:column="22">ents<pos:position pos:line="152" pos:column="26"/></name><index pos:line="152" pos:column="26">[<expr><name pos:line="152" pos:column="27">i<pos:position pos:line="152" pos:column="28"/></name></expr>]<pos:position pos:line="152" pos:column="29"/></index></name><operator pos:line="152" pos:column="29">.<pos:position pos:line="152" pos:column="30"/></operator><name pos:line="152" pos:column="30">use_regex<pos:position pos:line="152" pos:column="39"/></name> <operator pos:line="152" pos:column="40">&amp;&amp;<pos:position pos:line="152" pos:column="50"/></operator>
                     <call><name pos:line="153" pos:column="22">ap_regexec<pos:position pos:line="153" pos:column="32"/></name><argument_list pos:line="153" pos:column="32">(<argument><expr><name><name pos:line="153" pos:column="33">ents<pos:position pos:line="153" pos:column="37"/></name><index pos:line="153" pos:column="37">[<expr><name pos:line="153" pos:column="38">i<pos:position pos:line="153" pos:column="39"/></name></expr>]<pos:position pos:line="153" pos:column="40"/></index></name><operator pos:line="153" pos:column="40">.<pos:position pos:line="153" pos:column="41"/></operator><name pos:line="153" pos:column="41">regexp<pos:position pos:line="153" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="49">url<pos:position pos:line="153" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="153" pos:column="54">0<pos:position pos:line="153" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="57">NULL<pos:position pos:line="153" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="153" pos:column="63">0<pos:position pos:line="153" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="65"/></argument_list></call> <operator pos:line="153" pos:column="66">==<pos:position pos:line="153" pos:column="68"/></operator> <literal type="number" pos:line="153" pos:column="69">0<pos:position pos:line="153" pos:column="70"/></literal><operator pos:line="153" pos:column="70">)<pos:position pos:line="153" pos:column="71"/></operator> <operator pos:line="153" pos:column="72">||<pos:position pos:line="153" pos:column="74"/></operator>
                    <operator pos:line="154" pos:column="21">(<pos:position pos:line="154" pos:column="22"/></operator><name pos:line="154" pos:column="22">p2<pos:position pos:line="154" pos:column="24"/></name> <operator pos:line="154" pos:column="25">==<pos:position pos:line="154" pos:column="27"/></operator> <name pos:line="154" pos:column="28">NULL<pos:position pos:line="154" pos:column="32"/></name> <operator pos:line="154" pos:column="33">&amp;&amp;<pos:position pos:line="154" pos:column="43"/></operator> <call><name pos:line="154" pos:column="36">strcasecmp<pos:position pos:line="154" pos:column="46"/></name><argument_list pos:line="154" pos:column="46">(<argument><expr><name pos:line="154" pos:column="47">scheme<pos:position pos:line="154" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="154" pos:column="55">ents<pos:position pos:line="154" pos:column="59"/></name><index pos:line="154" pos:column="59">[<expr><name pos:line="154" pos:column="60">i<pos:position pos:line="154" pos:column="61"/></name></expr>]<pos:position pos:line="154" pos:column="62"/></index></name><operator pos:line="154" pos:column="62">.<pos:position pos:line="154" pos:column="63"/></operator><name pos:line="154" pos:column="63">scheme<pos:position pos:line="154" pos:column="69"/></name></expr></argument>)<pos:position pos:line="154" pos:column="70"/></argument_list></call> <operator pos:line="154" pos:column="71">==<pos:position pos:line="154" pos:column="73"/></operator> <literal type="number" pos:line="154" pos:column="74">0<pos:position pos:line="154" pos:column="75"/></literal><operator pos:line="154" pos:column="75">)<pos:position pos:line="154" pos:column="76"/></operator> <operator pos:line="154" pos:column="77">||<pos:position pos:line="154" pos:column="79"/></operator>
                    <operator pos:line="155" pos:column="21">(<pos:position pos:line="155" pos:column="22"/></operator><name pos:line="155" pos:column="22">p2<pos:position pos:line="155" pos:column="24"/></name> <operator pos:line="155" pos:column="25">!=<pos:position pos:line="155" pos:column="27"/></operator> <name pos:line="155" pos:column="28">NULL<pos:position pos:line="155" pos:column="32"/></name> <operator pos:line="155" pos:column="33">&amp;&amp;<pos:position pos:line="155" pos:column="43"/></operator>
                    <call><name pos:line="156" pos:column="21">strncasecmp<pos:position pos:line="156" pos:column="32"/></name><argument_list pos:line="156" pos:column="32">(<argument><expr><name pos:line="156" pos:column="33">url<pos:position pos:line="156" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="156" pos:column="38">ents<pos:position pos:line="156" pos:column="42"/></name><index pos:line="156" pos:column="42">[<expr><name pos:line="156" pos:column="43">i<pos:position pos:line="156" pos:column="44"/></name></expr>]<pos:position pos:line="156" pos:column="45"/></index></name><operator pos:line="156" pos:column="45">.<pos:position pos:line="156" pos:column="46"/></operator><name pos:line="156" pos:column="46">scheme<pos:position pos:line="156" pos:column="52"/></name></expr></argument>,
                                <argument><expr><call><name pos:line="157" pos:column="33">strlen<pos:position pos:line="157" pos:column="39"/></name><argument_list pos:line="157" pos:column="39">(<argument><expr><name><name pos:line="157" pos:column="40">ents<pos:position pos:line="157" pos:column="44"/></name><index pos:line="157" pos:column="44">[<expr><name pos:line="157" pos:column="45">i<pos:position pos:line="157" pos:column="46"/></name></expr>]<pos:position pos:line="157" pos:column="47"/></index></name><operator pos:line="157" pos:column="47">.<pos:position pos:line="157" pos:column="48"/></operator><name pos:line="157" pos:column="48">scheme<pos:position pos:line="157" pos:column="54"/></name></expr></argument>)<pos:position pos:line="157" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="157" pos:column="56"/></argument_list></call> <operator pos:line="157" pos:column="57">==<pos:position pos:line="157" pos:column="59"/></operator> <literal type="number" pos:line="157" pos:column="60">0<pos:position pos:line="157" pos:column="61"/></literal><operator pos:line="157" pos:column="61">)<pos:position pos:line="157" pos:column="62"/></operator></expr>)<pos:position pos:line="157" pos:column="63"/></condition><then pos:line="157" pos:column="63"> <block pos:line="157" pos:column="64">{

                    <comment type="block" pos:line="159" pos:column="21">/* handle the scheme */</comment>
                    <expr_stmt><expr><call><name pos:line="160" pos:column="21">ap_log_error<pos:position pos:line="160" pos:column="33"/></name><argument_list pos:line="160" pos:column="33">(<argument><expr><name pos:line="160" pos:column="34">APLOG_MARK<pos:position pos:line="160" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="46">APLOG_DEBUG<pos:position pos:line="160" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="160" pos:column="59">0<pos:position pos:line="160" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="160" pos:column="62">r<pos:position pos:line="160" pos:column="63"/></name><operator pos:line="160" pos:column="63">-&gt;<pos:position pos:line="160" pos:column="68"/></operator><name pos:line="160" pos:column="65">server<pos:position pos:line="160" pos:column="71"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="161" pos:column="34">"Trying to run scheme_handler against proxy"<pos:position pos:line="161" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="80"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="162" pos:column="21">access_status<pos:position pos:line="162" pos:column="34"/></name> <operator pos:line="162" pos:column="35">=<pos:position pos:line="162" pos:column="36"/></operator> <call><name pos:line="162" pos:column="37">proxy_run_scheme_handler<pos:position pos:line="162" pos:column="61"/></name><argument_list pos:line="162" pos:column="61">(<argument><expr><name pos:line="162" pos:column="62">r<pos:position pos:line="162" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="65">worker<pos:position pos:line="162" pos:column="71"/></name></expr></argument>,
                                                             <argument><expr><name pos:line="163" pos:column="62">conf<pos:position pos:line="163" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="68">url<pos:position pos:line="163" pos:column="71"/></name></expr></argument>,
                                                             <argument><expr><name><name pos:line="164" pos:column="62">ents<pos:position pos:line="164" pos:column="66"/></name><index pos:line="164" pos:column="66">[<expr><name pos:line="164" pos:column="67">i<pos:position pos:line="164" pos:column="68"/></name></expr>]<pos:position pos:line="164" pos:column="69"/></index></name><operator pos:line="164" pos:column="69">.<pos:position pos:line="164" pos:column="70"/></operator><name pos:line="164" pos:column="70">hostname<pos:position pos:line="164" pos:column="78"/></name></expr></argument>,
                                                             <argument><expr><name><name pos:line="165" pos:column="62">ents<pos:position pos:line="165" pos:column="66"/></name><index pos:line="165" pos:column="66">[<expr><name pos:line="165" pos:column="67">i<pos:position pos:line="165" pos:column="68"/></name></expr>]<pos:position pos:line="165" pos:column="69"/></index></name><operator pos:line="165" pos:column="69">.<pos:position pos:line="165" pos:column="70"/></operator><name pos:line="165" pos:column="70">port<pos:position pos:line="165" pos:column="74"/></name></expr></argument>)<pos:position pos:line="165" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="76"/></expr_stmt>

                    <comment type="block" pos:line="167" pos:column="21">/* an error or success */</comment>
                    <if pos:line="168" pos:column="21">if <condition pos:line="168" pos:column="24">(<expr><name pos:line="168" pos:column="25">access_status<pos:position pos:line="168" pos:column="38"/></name> <operator pos:line="168" pos:column="39">!=<pos:position pos:line="168" pos:column="41"/></operator> <name pos:line="168" pos:column="42">DECLINED<pos:position pos:line="168" pos:column="50"/></name> <operator pos:line="168" pos:column="51">&amp;&amp;<pos:position pos:line="168" pos:column="61"/></operator>
                        <name pos:line="169" pos:column="25">access_status<pos:position pos:line="169" pos:column="38"/></name> <operator pos:line="169" pos:column="39">!=<pos:position pos:line="169" pos:column="41"/></operator> <name pos:line="169" pos:column="42">HTTP_BAD_GATEWAY<pos:position pos:line="169" pos:column="58"/></name></expr>)<pos:position pos:line="169" pos:column="59"/></condition><then pos:line="169" pos:column="59"> <block pos:line="169" pos:column="60">{
                        <goto pos:line="170" pos:column="25">goto <name pos:line="170" pos:column="30">cleanup<pos:position pos:line="170" pos:column="37"/></name>;<pos:position pos:line="170" pos:column="38"/></goto>
                    }<pos:position pos:line="171" pos:column="22"/></block></then></if>
                    <comment type="block" pos:line="172" pos:column="21">/* we failed to talk to the upstream proxy */</comment>
                }<pos:position pos:line="173" pos:column="18"/></block></then></if>
            }<pos:position pos:line="174" pos:column="14"/></block></for>
        }<pos:position pos:line="175" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="177" pos:column="9">/* otherwise, try it direct */</comment>
        <comment type="block" pos:line="178" pos:column="9">/* N.B. what if we're behind a firewall, where we must use a proxy or
        * give up??
        */</comment>

        <comment type="block" pos:line="182" pos:column="9">/* handle the scheme */</comment>
        <expr_stmt><expr><call><name pos:line="183" pos:column="9">ap_log_error<pos:position pos:line="183" pos:column="21"/></name><argument_list pos:line="183" pos:column="21">(<argument><expr><name pos:line="183" pos:column="22">APLOG_MARK<pos:position pos:line="183" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="34">APLOG_DEBUG<pos:position pos:line="183" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="183" pos:column="47">0<pos:position pos:line="183" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="183" pos:column="50">r<pos:position pos:line="183" pos:column="51"/></name><operator pos:line="183" pos:column="51">-&gt;<pos:position pos:line="183" pos:column="56"/></operator><name pos:line="183" pos:column="53">server<pos:position pos:line="183" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="184" pos:column="22">"Running scheme %s handler (attempt %d)"<pos:position pos:line="184" pos:column="62"/></literal></expr></argument>,
                     <argument><expr><name pos:line="185" pos:column="22">scheme<pos:position pos:line="185" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="30">attempts<pos:position pos:line="185" pos:column="38"/></name></expr></argument>)<pos:position pos:line="185" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="186" pos:column="9">access_status<pos:position pos:line="186" pos:column="22"/></name> <operator pos:line="186" pos:column="23">=<pos:position pos:line="186" pos:column="24"/></operator> <call><name pos:line="186" pos:column="25">proxy_run_scheme_handler<pos:position pos:line="186" pos:column="49"/></name><argument_list pos:line="186" pos:column="49">(<argument><expr><name pos:line="186" pos:column="50">r<pos:position pos:line="186" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="53">worker<pos:position pos:line="186" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="61">conf<pos:position pos:line="186" pos:column="65"/></name></expr></argument>,
                                                 <argument><expr><name pos:line="187" pos:column="50">url<pos:position pos:line="187" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="55">NULL<pos:position pos:line="187" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="187" pos:column="61">0<pos:position pos:line="187" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="64"/></expr_stmt>
        <if pos:line="188" pos:column="9">if <condition pos:line="188" pos:column="12">(<expr><name pos:line="188" pos:column="13">access_status<pos:position pos:line="188" pos:column="26"/></name> <operator pos:line="188" pos:column="27">==<pos:position pos:line="188" pos:column="29"/></operator> <name pos:line="188" pos:column="30">OK<pos:position pos:line="188" pos:column="32"/></name></expr>)<pos:position pos:line="188" pos:column="33"/></condition><then pos:line="188" pos:column="33">
            <block type="pseudo"><break pos:line="189" pos:column="13">break;<pos:position pos:line="189" pos:column="19"/></break></block></then>
        <elseif pos:line="190" pos:column="9">else <if pos:line="190" pos:column="14">if <condition pos:line="190" pos:column="17">(<expr><name pos:line="190" pos:column="18">access_status<pos:position pos:line="190" pos:column="31"/></name> <operator pos:line="190" pos:column="32">==<pos:position pos:line="190" pos:column="34"/></operator> <name pos:line="190" pos:column="35">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="190" pos:column="61"/></name></expr>)<pos:position pos:line="190" pos:column="62"/></condition><then pos:line="190" pos:column="62"> <block pos:line="190" pos:column="63">{
            <comment type="block" pos:line="191" pos:column="13">/* Unrecoverable server error.
             * We can not failover to another worker.
             * Mark the worker as unusable if member of load balancer
             */</comment>
            <if pos:line="195" pos:column="13">if <condition pos:line="195" pos:column="16">(<expr><name pos:line="195" pos:column="17">balancer<pos:position pos:line="195" pos:column="25"/></name></expr>)<pos:position pos:line="195" pos:column="26"/></condition><then pos:line="195" pos:column="26">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="196" pos:column="17">worker<pos:position pos:line="196" pos:column="23"/></name><operator pos:line="196" pos:column="23">-&gt;<pos:position pos:line="196" pos:column="28"/></operator><name pos:line="196" pos:column="25">s<pos:position pos:line="196" pos:column="26"/></name><operator pos:line="196" pos:column="26">-&gt;<pos:position pos:line="196" pos:column="31"/></operator><name pos:line="196" pos:column="28">status<pos:position pos:line="196" pos:column="34"/></name></name> <operator pos:line="196" pos:column="35">|=<pos:position pos:line="196" pos:column="37"/></operator> <name pos:line="196" pos:column="38">PROXY_WORKER_IN_ERROR<pos:position pos:line="196" pos:column="59"/></name></expr>;<pos:position pos:line="196" pos:column="60"/></expr_stmt></block></then></if>
            <break pos:line="197" pos:column="13">break;<pos:position pos:line="197" pos:column="19"/></break>
        }<pos:position pos:line="198" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="199" pos:column="9">else <if pos:line="199" pos:column="14">if <condition pos:line="199" pos:column="17">(<expr><name pos:line="199" pos:column="18">access_status<pos:position pos:line="199" pos:column="31"/></name> <operator pos:line="199" pos:column="32">==<pos:position pos:line="199" pos:column="34"/></operator> <name pos:line="199" pos:column="35">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="199" pos:column="59"/></name></expr>)<pos:position pos:line="199" pos:column="60"/></condition><then pos:line="199" pos:column="60"> <block pos:line="199" pos:column="61">{
            <comment type="block" pos:line="200" pos:column="13">/* Recoverable server error.
             * We can failover to another worker
             * Mark the worker as unusable if member of load balancer
             */</comment>
            <if pos:line="204" pos:column="13">if <condition pos:line="204" pos:column="16">(<expr><name pos:line="204" pos:column="17">balancer<pos:position pos:line="204" pos:column="25"/></name></expr>)<pos:position pos:line="204" pos:column="26"/></condition><then pos:line="204" pos:column="26"> <block pos:line="204" pos:column="27">{
                <expr_stmt><expr><name><name pos:line="205" pos:column="17">worker<pos:position pos:line="205" pos:column="23"/></name><operator pos:line="205" pos:column="23">-&gt;<pos:position pos:line="205" pos:column="28"/></operator><name pos:line="205" pos:column="25">s<pos:position pos:line="205" pos:column="26"/></name><operator pos:line="205" pos:column="26">-&gt;<pos:position pos:line="205" pos:column="31"/></operator><name pos:line="205" pos:column="28">status<pos:position pos:line="205" pos:column="34"/></name></name> <operator pos:line="205" pos:column="35">|=<pos:position pos:line="205" pos:column="37"/></operator> <name pos:line="205" pos:column="38">PROXY_WORKER_IN_ERROR<pos:position pos:line="205" pos:column="59"/></name></expr>;<pos:position pos:line="205" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="206" pos:column="14"/></block></then></if>
        }<pos:position pos:line="207" pos:column="10"/></block></then></if></elseif>
        <else pos:line="208" pos:column="9">else <block pos:line="208" pos:column="14">{
            <comment type="block" pos:line="209" pos:column="13">/* Unrecoverable error.
             * Return the origin status code to the client.
             */</comment>
            <break pos:line="212" pos:column="13">break;<pos:position pos:line="212" pos:column="19"/></break>
        }<pos:position pos:line="213" pos:column="10"/></block></else></if>
        <comment type="block" pos:line="214" pos:column="9">/* Try again if the worker is unusable and the service is
         * unavailable.
         */</comment>
    }<pos:position pos:line="217" pos:column="6"/></block> while <condition pos:line="217" pos:column="13">(<expr><operator pos:line="217" pos:column="14">!<pos:position pos:line="217" pos:column="15"/></operator><call><name pos:line="217" pos:column="15">PROXY_WORKER_IS_USABLE<pos:position pos:line="217" pos:column="37"/></name><argument_list pos:line="217" pos:column="37">(<argument><expr><name pos:line="217" pos:column="38">worker<pos:position pos:line="217" pos:column="44"/></name></expr></argument>)<pos:position pos:line="217" pos:column="45"/></argument_list></call> <operator pos:line="217" pos:column="46">&amp;&amp;<pos:position pos:line="217" pos:column="56"/></operator>
             <name pos:line="218" pos:column="14">max_attempts<pos:position pos:line="218" pos:column="26"/></name> <operator pos:line="218" pos:column="27">&gt;<pos:position pos:line="218" pos:column="31"/></operator> <name pos:line="218" pos:column="29">attempts<pos:position pos:line="218" pos:column="37"/></name><operator pos:line="218" pos:column="37">++<pos:position pos:line="218" pos:column="39"/></operator></expr>)<pos:position pos:line="218" pos:column="40"/></condition>;<pos:position pos:line="218" pos:column="41"/></do>

    <if pos:line="220" pos:column="5">if <condition pos:line="220" pos:column="8">(<expr><name pos:line="220" pos:column="9">DECLINED<pos:position pos:line="220" pos:column="17"/></name> <operator pos:line="220" pos:column="18">==<pos:position pos:line="220" pos:column="20"/></operator> <name pos:line="220" pos:column="21">access_status<pos:position pos:line="220" pos:column="34"/></name></expr>)<pos:position pos:line="220" pos:column="35"/></condition><then pos:line="220" pos:column="35"> <block pos:line="220" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="221" pos:column="9">ap_log_error<pos:position pos:line="221" pos:column="21"/></name><argument_list pos:line="221" pos:column="21">(<argument><expr><name pos:line="221" pos:column="22">APLOG_MARK<pos:position pos:line="221" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="34">APLOG_WARNING<pos:position pos:line="221" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="221" pos:column="49">0<pos:position pos:line="221" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="221" pos:column="52">r<pos:position pos:line="221" pos:column="53"/></name><operator pos:line="221" pos:column="53">-&gt;<pos:position pos:line="221" pos:column="58"/></operator><name pos:line="221" pos:column="55">server<pos:position pos:line="221" pos:column="61"/></name></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="222" pos:column="21">"proxy: No protocol handler was valid for the URL %s. "<pos:position pos:line="222" pos:column="76"/></literal>
                    <literal type="string" pos:line="223" pos:column="21">"If you are using a DSO version of mod_proxy, make sure "<pos:position pos:line="223" pos:column="78"/></literal>
                    <literal type="string" pos:line="224" pos:column="21">"the proxy submodules are included in the configuration "<pos:position pos:line="224" pos:column="78"/></literal>
                    <literal type="string" pos:line="225" pos:column="21">"using LoadModule."<pos:position pos:line="225" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="225" pos:column="42">r<pos:position pos:line="225" pos:column="43"/></name><operator pos:line="225" pos:column="43">-&gt;<pos:position pos:line="225" pos:column="48"/></operator><name pos:line="225" pos:column="45">uri<pos:position pos:line="225" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="225" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="226" pos:column="9">access_status<pos:position pos:line="226" pos:column="22"/></name> <operator pos:line="226" pos:column="23">=<pos:position pos:line="226" pos:column="24"/></operator> <name pos:line="226" pos:column="25">HTTP_FORBIDDEN<pos:position pos:line="226" pos:column="39"/></name></expr>;<pos:position pos:line="226" pos:column="40"/></expr_stmt>
        <goto pos:line="227" pos:column="9">goto <name pos:line="227" pos:column="14">cleanup<pos:position pos:line="227" pos:column="21"/></name>;<pos:position pos:line="227" pos:column="22"/></goto>
    }<pos:position pos:line="228" pos:column="6"/></block></then></if>
<label><name pos:line="229" pos:column="1">cleanup<pos:position pos:line="229" pos:column="8"/></name>:<pos:position pos:line="229" pos:column="9"/></label>
    <if pos:line="230" pos:column="5">if <condition pos:line="230" pos:column="8">(<expr><name pos:line="230" pos:column="9">balancer<pos:position pos:line="230" pos:column="17"/></name></expr>)<pos:position pos:line="230" pos:column="18"/></condition><then pos:line="230" pos:column="18"> <block pos:line="230" pos:column="19">{
        <decl_stmt><decl><type><name pos:line="231" pos:column="9">int<pos:position pos:line="231" pos:column="12"/></name></type> <name pos:line="231" pos:column="13">post_status<pos:position pos:line="231" pos:column="24"/></name> <init pos:line="231" pos:column="25">= <expr><call><name pos:line="231" pos:column="27">proxy_run_post_request<pos:position pos:line="231" pos:column="49"/></name><argument_list pos:line="231" pos:column="49">(<argument><expr><name pos:line="231" pos:column="50">worker<pos:position pos:line="231" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="231" pos:column="58">balancer<pos:position pos:line="231" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="231" pos:column="68">r<pos:position pos:line="231" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="231" pos:column="71">conf<pos:position pos:line="231" pos:column="75"/></name></expr></argument>)<pos:position pos:line="231" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="231" pos:column="77"/></decl_stmt>
        <if pos:line="232" pos:column="9">if <condition pos:line="232" pos:column="12">(<expr><name pos:line="232" pos:column="13">post_status<pos:position pos:line="232" pos:column="24"/></name> <operator pos:line="232" pos:column="25">==<pos:position pos:line="232" pos:column="27"/></operator> <name pos:line="232" pos:column="28">DECLINED<pos:position pos:line="232" pos:column="36"/></name></expr>)<pos:position pos:line="232" pos:column="37"/></condition><then pos:line="232" pos:column="37"> <block pos:line="232" pos:column="38">{
            <expr_stmt><expr><name pos:line="233" pos:column="13">post_status<pos:position pos:line="233" pos:column="24"/></name> <operator pos:line="233" pos:column="25">=<pos:position pos:line="233" pos:column="26"/></operator> <name pos:line="233" pos:column="27">OK<pos:position pos:line="233" pos:column="29"/></name></expr>;<pos:position pos:line="233" pos:column="30"/></expr_stmt> <comment type="block" pos:line="233" pos:column="31">/* no post_request handler available */</comment>
            <comment type="block" pos:line="234" pos:column="13">/* TODO: recycle direct worker */</comment>
        }<pos:position pos:line="235" pos:column="10"/></block></then></if>
    }<pos:position pos:line="236" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="238" pos:column="5">proxy_run_request_status<pos:position pos:line="238" pos:column="29"/></name><argument_list pos:line="238" pos:column="29">(<argument><expr><operator pos:line="238" pos:column="30">&amp;<pos:position pos:line="238" pos:column="35"/></operator><name pos:line="238" pos:column="31">access_status<pos:position pos:line="238" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="46">r<pos:position pos:line="238" pos:column="47"/></name></expr></argument>)<pos:position pos:line="238" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="49"/></expr_stmt>

    <return pos:line="240" pos:column="5">return <expr><name pos:line="240" pos:column="12">access_status<pos:position pos:line="240" pos:column="25"/></name></expr>;<pos:position pos:line="240" pos:column="26"/></return>
}<pos:position pos:line="241" pos:column="2"/></block></function></unit>

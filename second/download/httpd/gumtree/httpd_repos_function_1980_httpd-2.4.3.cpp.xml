<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1980_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">preserve<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">saxctxt<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">ctx<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">len<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">newbuf<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">len<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">&lt;=<pos:position pos:line="4" pos:column="18"/></operator> <operator pos:line="4" pos:column="16">(<pos:position pos:line="4" pos:column="17"/></operator><name><name pos:line="4" pos:column="17">ctx<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">avail<pos:position pos:line="4" pos:column="27"/></name></name> <operator pos:line="4" pos:column="28">-<pos:position pos:line="4" pos:column="29"/></operator> <name><name pos:line="4" pos:column="30">ctx<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">offset<pos:position pos:line="4" pos:column="41"/></name></name><operator pos:line="4" pos:column="41">)<pos:position pos:line="4" pos:column="42"/></operator></expr>)<pos:position pos:line="4" pos:column="43"/></condition><then pos:line="4" pos:column="43">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then>
    <else pos:line="6" pos:column="5">else <block type="pseudo"><while pos:line="6" pos:column="10">while <condition pos:line="6" pos:column="16">(<expr><name pos:line="6" pos:column="17">len<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">&gt;<pos:position pos:line="6" pos:column="25"/></operator> <operator pos:line="6" pos:column="23">(<pos:position pos:line="6" pos:column="24"/></operator><name><name pos:line="6" pos:column="24">ctx<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">avail<pos:position pos:line="6" pos:column="34"/></name></name> <operator pos:line="6" pos:column="35">-<pos:position pos:line="6" pos:column="36"/></operator> <name><name pos:line="6" pos:column="37">ctx<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="42">offset<pos:position pos:line="6" pos:column="48"/></name></name><operator pos:line="6" pos:column="48">)<pos:position pos:line="6" pos:column="49"/></operator></expr>)<pos:position pos:line="6" pos:column="50"/></condition>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="7" pos:column="9">ctx<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">avail<pos:position pos:line="7" pos:column="19"/></name></name> <operator pos:line="7" pos:column="20">+=<pos:position pos:line="7" pos:column="22"/></operator> <name><name pos:line="7" pos:column="23">ctx<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">cfg<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">bufsz<pos:position pos:line="7" pos:column="38"/></name></name></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt></block></while></block></else></if>

    <expr_stmt><expr><name pos:line="9" pos:column="5">newbuf<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">realloc<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name><name pos:line="9" pos:column="22">ctx<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">buf<pos:position pos:line="9" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="32">ctx<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">avail<pos:position pos:line="9" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">newbuf<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">!=<pos:position pos:line="10" pos:column="18"/></operator> <name><name pos:line="10" pos:column="19">ctx<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">buf<pos:position pos:line="10" pos:column="27"/></name></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28"> <block pos:line="10" pos:column="29">{
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">ctx<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">buf<pos:position pos:line="11" pos:column="21"/></name></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="13">apr_pool_cleanup_kill<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name><name pos:line="12" pos:column="35">ctx<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">f<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">-&gt;<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="43">r<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">-&gt;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="46">pool<pos:position pos:line="12" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="52">ctx<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">-&gt;<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="57">buf<pos:position pos:line="12" pos:column="60"/></name></name></expr></argument>,
                                  <argument><expr><operator pos:line="13" pos:column="35">(<pos:position pos:line="13" pos:column="36"/></operator><call><call><name pos:line="13" pos:column="36">int<pos:position pos:line="13" pos:column="39"/></name><argument_list pos:line="13" pos:column="39">(<argument><expr><operator pos:line="13" pos:column="40">*<pos:position pos:line="13" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call><argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">void<pos:position pos:line="13" pos:column="47"/></name><operator pos:line="13" pos:column="47">*<pos:position pos:line="13" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call><operator pos:line="13" pos:column="49">)<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="50">free<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">apr_pool_cleanup_register<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><name><name pos:line="14" pos:column="35">ctx<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">-&gt;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="40">f<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">r<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">-&gt;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="46">pool<pos:position pos:line="14" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="52">newbuf<pos:position pos:line="14" pos:column="58"/></name></expr></argument>,
                                  <argument><expr><operator pos:line="15" pos:column="35">(<pos:position pos:line="15" pos:column="36"/></operator><call><call><name pos:line="15" pos:column="36">int<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><operator pos:line="15" pos:column="40">*<pos:position pos:line="15" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call><argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">void<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">*<pos:position pos:line="15" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call><operator pos:line="15" pos:column="49">)<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">free<pos:position pos:line="15" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="56">apr_pool_cleanup_null<pos:position pos:line="15" pos:column="77"/></name></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">ctx<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">buf<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">newbuf<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

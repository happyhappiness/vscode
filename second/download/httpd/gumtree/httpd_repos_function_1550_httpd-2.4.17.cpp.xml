<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1550_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">select_random_value_part<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">request_rec<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">r<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">value<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">p<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><name pos:line="3" pos:column="15">value<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">n<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">1<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* count number of distinct values */</comment>
    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">p<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <call><name pos:line="7" pos:column="17">ap_strchr<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">p<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="30">'|'<pos:position pos:line="7" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call><operator pos:line="7" pos:column="34">)<pos:position pos:line="7" pos:column="35"/></operator> <operator pos:line="7" pos:column="36">!=<pos:position pos:line="7" pos:column="38"/></operator> <name pos:line="7" pos:column="39">NULL<pos:position pos:line="7" pos:column="43"/></name></expr>)<pos:position pos:line="7" pos:column="44"/></condition> <block pos:line="7" pos:column="45">{
        <expr_stmt><expr><operator pos:line="8" pos:column="9">++<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">n<pos:position pos:line="8" pos:column="12"/></name></expr>;<pos:position pos:line="8" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="9" pos:column="9">++<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">p<pos:position pos:line="9" pos:column="12"/></name></expr>;<pos:position pos:line="9" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></while>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">n<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">&gt;<pos:position pos:line="12" pos:column="15"/></operator> <literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>)<pos:position pos:line="12" pos:column="15"/></condition><then pos:line="12" pos:column="15"> <block pos:line="12" pos:column="16">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">n<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">ap_random_pick<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><literal type="number" pos:line="13" pos:column="28">1<pos:position pos:line="13" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="31">n<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>

        <comment type="block" pos:line="15" pos:column="9">/* extract it from the whole string */</comment>
        <while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><operator pos:line="16" pos:column="16">--<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">n<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">&amp;&amp;<pos:position pos:line="16" pos:column="30"/></operator> <operator pos:line="16" pos:column="23">(<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">value<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">=<pos:position pos:line="16" pos:column="31"/></operator> <call><name pos:line="16" pos:column="32">ap_strchr<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><name pos:line="16" pos:column="42">value<pos:position pos:line="16" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="49">'|'<pos:position pos:line="16" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call><operator pos:line="16" pos:column="53">)<pos:position pos:line="16" pos:column="54"/></operator> <operator pos:line="16" pos:column="55">!=<pos:position pos:line="16" pos:column="57"/></operator> <name pos:line="16" pos:column="58">NULL<pos:position pos:line="16" pos:column="62"/></name></expr>)<pos:position pos:line="16" pos:column="63"/></condition> <block pos:line="16" pos:column="64">{
            <expr_stmt><expr><operator pos:line="17" pos:column="13">++<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">value<pos:position pos:line="17" pos:column="20"/></name></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></while>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">value<pos:position pos:line="20" pos:column="18"/></name></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19"> <block pos:line="20" pos:column="20">{ <comment type="block" pos:line="20" pos:column="22">/* should not be NULL, but ... */</comment>
            <expr_stmt><expr><name pos:line="21" pos:column="13">p<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">ap_strchr<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">value<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="34">'|'<pos:position pos:line="21" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><name pos:line="22" pos:column="17">p<pos:position pos:line="22" pos:column="18"/></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19"> <block pos:line="22" pos:column="20">{
                <expr_stmt><expr><operator pos:line="23" pos:column="17">*<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">p<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <literal type="char" pos:line="23" pos:column="22">'\0'<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="24" pos:column="14"/></block></then></if>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">value<pos:position pos:line="28" pos:column="17"/></name></expr>;<pos:position pos:line="28" pos:column="18"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

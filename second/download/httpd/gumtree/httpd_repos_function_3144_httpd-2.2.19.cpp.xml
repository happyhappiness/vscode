<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3144_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">reportDefault<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">XML_Parser<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">parser<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">ENCODING<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">enc<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
              <parameter><decl><type><specifier pos:line="3" pos:column="15">const<pos:position pos:line="3" pos:column="20"/></specifier> <name pos:line="3" pos:column="21">char<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">s<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="30">const<pos:position pos:line="3" pos:column="35"/></specifier> <name pos:line="3" pos:column="36">char<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">end<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="46"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">MUST_CONVERT<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><name pos:line="5" pos:column="20">enc<pos:position pos:line="5" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="25">s<pos:position pos:line="5" pos:column="26"/></name></expr></argument>)<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28"> <block pos:line="5" pos:column="29">{
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier><modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">eventPP<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier><modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">eventEndPP<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">enc<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">==<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">encoding<pos:position pos:line="8" pos:column="24"/></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25"> <block pos:line="8" pos:column="26">{
      <expr_stmt><expr><name pos:line="9" pos:column="7">eventPP<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <operator pos:line="9" pos:column="17">&amp;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="18">eventPtr<pos:position pos:line="9" pos:column="26"/></name></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name pos:line="10" pos:column="7">eventEndPP<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <operator pos:line="10" pos:column="20">&amp;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="21">eventEndPtr<pos:position pos:line="10" pos:column="32"/></name></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then>
    <else pos:line="12" pos:column="5">else <block pos:line="12" pos:column="10">{
      <expr_stmt><expr><name pos:line="13" pos:column="7">eventPP<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <operator pos:line="13" pos:column="17">&amp;<pos:position pos:line="13" pos:column="22"/></operator><operator pos:line="13" pos:column="18">(<pos:position pos:line="13" pos:column="19"/></operator><name><name pos:line="13" pos:column="19">openInternalEntities<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">internalEventPtr<pos:position pos:line="13" pos:column="57"/></name></name><operator pos:line="13" pos:column="57">)<pos:position pos:line="13" pos:column="58"/></operator></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><name pos:line="14" pos:column="7">eventEndPP<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <operator pos:line="14" pos:column="20">&amp;<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="21">(<pos:position pos:line="14" pos:column="22"/></operator><name><name pos:line="14" pos:column="22">openInternalEntities<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">internalEventEndPtr<pos:position pos:line="14" pos:column="63"/></name></name><operator pos:line="14" pos:column="63">)<pos:position pos:line="14" pos:column="64"/></operator></expr>;<pos:position pos:line="14" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></else></if>
    <do pos:line="16" pos:column="5">do <block pos:line="16" pos:column="8">{
      <decl_stmt><decl><type><name pos:line="17" pos:column="7">ICHAR<pos:position pos:line="17" pos:column="12"/></name> <modifier pos:line="17" pos:column="13">*<pos:position pos:line="17" pos:column="14"/></modifier></type><name pos:line="17" pos:column="14">dataPtr<pos:position pos:line="17" pos:column="21"/></name> <init pos:line="17" pos:column="22">= <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">ICHAR<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">*<pos:position pos:line="17" pos:column="32"/></operator><operator pos:line="17" pos:column="32">)<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">dataBuf<pos:position pos:line="17" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="41"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">XmlConvert<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">enc<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="23">&amp;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="24">s<pos:position pos:line="18" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="27">end<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="32">&amp;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="33">dataPtr<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="42">(<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="43">ICHAR<pos:position pos:line="18" pos:column="48"/></name> <operator pos:line="18" pos:column="49">*<pos:position pos:line="18" pos:column="50"/></operator><operator pos:line="18" pos:column="50">)<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="51">dataBufEnd<pos:position pos:line="18" pos:column="61"/></name></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="63"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="19" pos:column="7">*<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">eventEndPP<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <name pos:line="19" pos:column="21">s<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">defaultHandler<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">handlerArg<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">dataBuf<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">dataPtr<pos:position pos:line="20" pos:column="50"/></name> <operator pos:line="20" pos:column="51">-<pos:position pos:line="20" pos:column="52"/></operator> <operator pos:line="20" pos:column="53">(<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="54">ICHAR<pos:position pos:line="20" pos:column="59"/></name> <operator pos:line="20" pos:column="60">*<pos:position pos:line="20" pos:column="61"/></operator><operator pos:line="20" pos:column="61">)<pos:position pos:line="20" pos:column="62"/></operator><name pos:line="20" pos:column="62">dataBuf<pos:position pos:line="20" pos:column="69"/></name></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="21" pos:column="7">*<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">eventPP<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">s<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block> while <condition pos:line="22" pos:column="13">(<expr><name pos:line="22" pos:column="14">s<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">!=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">end<pos:position pos:line="22" pos:column="22"/></name></expr>)<pos:position pos:line="22" pos:column="23"/></condition>;<pos:position pos:line="22" pos:column="24"/></do>
  }<pos:position pos:line="23" pos:column="4"/></block></then>
  <else pos:line="24" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="5">defaultHandler<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">handlerArg<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="32">(<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="33">XML_Char<pos:position pos:line="25" pos:column="41"/></name> <operator pos:line="25" pos:column="42">*<pos:position pos:line="25" pos:column="43"/></operator><operator pos:line="25" pos:column="43">)<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="44">s<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="47">(<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="48">XML_Char<pos:position pos:line="25" pos:column="56"/></name> <operator pos:line="25" pos:column="57">*<pos:position pos:line="25" pos:column="58"/></operator><operator pos:line="25" pos:column="58">)<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="59">end<pos:position pos:line="25" pos:column="62"/></name> <operator pos:line="25" pos:column="63">-<pos:position pos:line="25" pos:column="64"/></operator> <operator pos:line="25" pos:column="65">(<pos:position pos:line="25" pos:column="66"/></operator><name pos:line="25" pos:column="66">XML_Char<pos:position pos:line="25" pos:column="74"/></name> <operator pos:line="25" pos:column="75">*<pos:position pos:line="25" pos:column="76"/></operator><operator pos:line="25" pos:column="76">)<pos:position pos:line="25" pos:column="77"/></operator><name pos:line="25" pos:column="77">s<pos:position pos:line="25" pos:column="78"/></name></expr></argument>)<pos:position pos:line="25" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="80"/></expr_stmt></block></else></if>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_637_httpd-2.2.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">yy_get_next_buffer<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">()<pos:position pos:line="1" pos:column="32"/></parameter_list>
        <block pos:line="2" pos:column="9">{
        <decl_stmt><decl><type><specifier pos:line="3" pos:column="9">register<pos:position pos:line="3" pos:column="17"/></specifier> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">dest<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><name><name pos:line="3" pos:column="31">yy_current_buffer<pos:position pos:line="3" pos:column="48"/></name><operator pos:line="3" pos:column="48">-&gt;<pos:position pos:line="3" pos:column="53"/></operator><name pos:line="3" pos:column="50">yy_ch_buf<pos:position pos:line="3" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="60"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="4" pos:column="9">register<pos:position pos:line="4" pos:column="17"/></specifier> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">source<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name pos:line="4" pos:column="33">yytext_ptr<pos:position pos:line="4" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="5" pos:column="9">register<pos:position pos:line="5" pos:column="17"/></specifier> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">number_to_move<pos:position pos:line="5" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="38">i<pos:position pos:line="5" pos:column="39"/></name></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ret_val<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">( <expr><name pos:line="8" pos:column="14">yy_c_buf_p<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">&gt;<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="27">&amp;<pos:position pos:line="8" pos:column="32"/></operator><name><name pos:line="8" pos:column="28">yy_current_buffer<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">-&gt;<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="47">yy_ch_buf<pos:position pos:line="8" pos:column="56"/></name><index pos:line="8" pos:column="56">[<expr><name pos:line="8" pos:column="57">yy_n_chars<pos:position pos:line="8" pos:column="67"/></name> <operator pos:line="8" pos:column="68">+<pos:position pos:line="8" pos:column="69"/></operator> <literal type="number" pos:line="8" pos:column="70">1<pos:position pos:line="8" pos:column="71"/></literal></expr>]<pos:position pos:line="8" pos:column="72"/></index></name></expr> )<pos:position pos:line="8" pos:column="74"/></condition><then pos:line="8" pos:column="74">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">YY_FATAL_ERROR<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(
                <argument><expr><literal type="string" pos:line="10" pos:column="17">"fatal flex scanner internal error--end of buffer missed"<pos:position pos:line="10" pos:column="74"/></literal></expr></argument> )<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></expr_stmt></block></then></if>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">( <expr><name><name pos:line="12" pos:column="14">yy_current_buffer<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">yy_fill_buffer<pos:position pos:line="12" pos:column="47"/></name></name> <operator pos:line="12" pos:column="48">==<pos:position pos:line="12" pos:column="50"/></operator> <literal type="number" pos:line="12" pos:column="51">0<pos:position pos:line="12" pos:column="52"/></literal></expr> )<pos:position pos:line="12" pos:column="54"/></condition><then pos:line="12" pos:column="54">
                <block pos:line="13" pos:column="17">{ <comment type="block" pos:line="13" pos:column="19">/* Don't try to fill the buffer, so this is an EOF. */</comment>
                <if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">( <expr><name pos:line="14" pos:column="22">yy_c_buf_p<pos:position pos:line="14" pos:column="32"/></name> <operator pos:line="14" pos:column="33">-<pos:position pos:line="14" pos:column="34"/></operator> <name pos:line="14" pos:column="35">yytext_ptr<pos:position pos:line="14" pos:column="45"/></name> <operator pos:line="14" pos:column="46">-<pos:position pos:line="14" pos:column="47"/></operator> <name pos:line="14" pos:column="48">YY_MORE_ADJ<pos:position pos:line="14" pos:column="59"/></name> <operator pos:line="14" pos:column="60">==<pos:position pos:line="14" pos:column="62"/></operator> <literal type="number" pos:line="14" pos:column="63">1<pos:position pos:line="14" pos:column="64"/></literal></expr> )<pos:position pos:line="14" pos:column="66"/></condition><then pos:line="14" pos:column="66">
                        <block pos:line="15" pos:column="25">{
                        <comment type="block" pos:line="16" pos:column="25">/* We matched a single character, the EOB, so
                         * treat this as a final EOF.
                         */</comment>
                        <return pos:line="19" pos:column="25">return <expr><name pos:line="19" pos:column="32">EOB_ACT_END_OF_FILE<pos:position pos:line="19" pos:column="51"/></name></expr>;<pos:position pos:line="19" pos:column="52"/></return>
                        }<pos:position pos:line="20" pos:column="26"/></block></then>

                <else pos:line="22" pos:column="17">else
                        <block pos:line="23" pos:column="25">{
                        <comment type="block" pos:line="24" pos:column="25">/* We matched some text prior to the EOB, first
                         * process it.
                         */</comment>
                        <return pos:line="27" pos:column="25">return <expr><name pos:line="27" pos:column="32">EOB_ACT_LAST_MATCH<pos:position pos:line="27" pos:column="50"/></name></expr>;<pos:position pos:line="27" pos:column="51"/></return>
                        }<pos:position pos:line="28" pos:column="26"/></block></else></if>
                }<pos:position pos:line="29" pos:column="18"/></block></then></if>

        <comment type="block" pos:line="31" pos:column="9">/* Try to read more data. */</comment>

        <comment type="block" pos:line="33" pos:column="9">/* First move last chars to start of buffer. */</comment>
        <expr_stmt><expr><name pos:line="34" pos:column="9">number_to_move<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <call pos:line="34" pos:column="26">(<name pos:line="34" pos:column="27">int<pos:position pos:line="34" pos:column="30"/></name>) <argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">yy_c_buf_p<pos:position pos:line="34" pos:column="43"/></name> <operator pos:line="34" pos:column="44">-<pos:position pos:line="34" pos:column="45"/></operator> <name pos:line="34" pos:column="46">yytext_ptr<pos:position pos:line="34" pos:column="56"/></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call> <operator pos:line="34" pos:column="58">-<pos:position pos:line="34" pos:column="59"/></operator> <literal type="number" pos:line="34" pos:column="60">1<pos:position pos:line="34" pos:column="61"/></literal></expr>;<pos:position pos:line="34" pos:column="62"/></expr_stmt>

        <for pos:line="36" pos:column="9">for <control pos:line="36" pos:column="13">( <init><expr><name pos:line="36" pos:column="15">i<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <literal type="number" pos:line="36" pos:column="19">0<pos:position pos:line="36" pos:column="20"/></literal></expr>;<pos:position pos:line="36" pos:column="21"/></init> <condition><expr><name pos:line="36" pos:column="22">i<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">&lt;<pos:position pos:line="36" pos:column="28"/></operator> <name pos:line="36" pos:column="26">number_to_move<pos:position pos:line="36" pos:column="40"/></name></expr>;<pos:position pos:line="36" pos:column="41"/></condition> <incr><expr><operator pos:line="36" pos:column="42">++<pos:position pos:line="36" pos:column="44"/></operator><name pos:line="36" pos:column="44">i<pos:position pos:line="36" pos:column="45"/></name></expr></incr> )<pos:position pos:line="36" pos:column="47"/></control>
                <block type="pseudo"><expr_stmt><expr><operator pos:line="37" pos:column="17">*<pos:position pos:line="37" pos:column="18"/></operator><operator pos:line="37" pos:column="18">(<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="19">dest<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">++<pos:position pos:line="37" pos:column="25"/></operator><operator pos:line="37" pos:column="25">)<pos:position pos:line="37" pos:column="26"/></operator> <operator pos:line="37" pos:column="27">=<pos:position pos:line="37" pos:column="28"/></operator> <operator pos:line="37" pos:column="29">*<pos:position pos:line="37" pos:column="30"/></operator><operator pos:line="37" pos:column="30">(<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="31">source<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">++<pos:position pos:line="37" pos:column="39"/></operator><operator pos:line="37" pos:column="39">)<pos:position pos:line="37" pos:column="40"/></operator></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt></block></for>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">( <expr><name><name pos:line="39" pos:column="14">yy_current_buffer<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">yy_buffer_status<pos:position pos:line="39" pos:column="49"/></name></name> <operator pos:line="39" pos:column="50">==<pos:position pos:line="39" pos:column="52"/></operator> <name pos:line="39" pos:column="53">YY_BUFFER_EOF_PENDING<pos:position pos:line="39" pos:column="74"/></name></expr> )<pos:position pos:line="39" pos:column="76"/></condition><then pos:line="39" pos:column="76">
                <comment type="block" pos:line="40" pos:column="17">/* don't do the read, it's not guaranteed to return an EOF,
                 * just force an EOF
                 */</comment>
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="43" pos:column="17">yy_current_buffer<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">-&gt;<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="36">yy_n_chars<pos:position pos:line="43" pos:column="46"/></name></name> <operator pos:line="43" pos:column="47">=<pos:position pos:line="43" pos:column="48"/></operator> <name pos:line="43" pos:column="49">yy_n_chars<pos:position pos:line="43" pos:column="59"/></name> <operator pos:line="43" pos:column="60">=<pos:position pos:line="43" pos:column="61"/></operator> <literal type="number" pos:line="43" pos:column="62">0<pos:position pos:line="43" pos:column="63"/></literal></expr>;<pos:position pos:line="43" pos:column="64"/></expr_stmt></block></then>

        <else pos:line="45" pos:column="9">else
                <block pos:line="46" pos:column="17">{
                <decl_stmt><decl><type><name pos:line="47" pos:column="17">int<pos:position pos:line="47" pos:column="20"/></name></type> <name pos:line="47" pos:column="21">num_to_read<pos:position pos:line="47" pos:column="32"/></name> <init pos:line="47" pos:column="33">=
                        <expr><name><name pos:line="48" pos:column="25">yy_current_buffer<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">-&gt;<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="44">yy_buf_size<pos:position pos:line="48" pos:column="55"/></name></name> <operator pos:line="48" pos:column="56">-<pos:position pos:line="48" pos:column="57"/></operator> <name pos:line="48" pos:column="58">number_to_move<pos:position pos:line="48" pos:column="72"/></name> <operator pos:line="48" pos:column="73">-<pos:position pos:line="48" pos:column="74"/></operator> <literal type="number" pos:line="48" pos:column="75">1<pos:position pos:line="48" pos:column="76"/></literal></expr></init></decl>;<pos:position pos:line="48" pos:column="77"/></decl_stmt>

                <while pos:line="50" pos:column="17">while <condition pos:line="50" pos:column="23">( <expr><name pos:line="50" pos:column="25">num_to_read<pos:position pos:line="50" pos:column="36"/></name> <operator pos:line="50" pos:column="37">&lt;=<pos:position pos:line="50" pos:column="42"/></operator> <literal type="number" pos:line="50" pos:column="40">0<pos:position pos:line="50" pos:column="41"/></literal></expr> )<pos:position pos:line="50" pos:column="43"/></condition>
                        <block pos:line="51" pos:column="25">{ <comment type="block" pos:line="51" pos:column="27">/* Not enough room in the buffer - grow it. */</comment>
<cpp:ifdef pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">ifdef<pos:position pos:line="52" pos:column="7"/></cpp:directive> <name pos:line="52" pos:column="8">YY_USES_REJECT<pos:position pos:line="52" pos:column="22"/></name></cpp:ifdef>
                        <expr_stmt><expr><call><name pos:line="53" pos:column="25">YY_FATAL_ERROR<pos:position pos:line="53" pos:column="39"/></name><argument_list pos:line="53" pos:column="39">(
<argument><expr><literal type="string" pos:line="54" pos:column="1">"input buffer overflow, can't enlarge buffer because scanner uses REJECT"<pos:position pos:line="54" pos:column="74"/></literal></expr></argument> )<pos:position pos:line="54" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="77"/></expr_stmt>
<cpp:else pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">else<pos:position pos:line="55" pos:column="6"/></cpp:directive></cpp:else>

                        <comment type="block" pos:line="57" pos:column="25">/* just a shorter name for the current buffer */</comment>
                        <decl_stmt><decl><type><name pos:line="58" pos:column="25">YY_BUFFER_STATE<pos:position pos:line="58" pos:column="40"/></name></type> <name pos:line="58" pos:column="41">b<pos:position pos:line="58" pos:column="42"/></name> <init pos:line="58" pos:column="43">= <expr><name pos:line="58" pos:column="45">yy_current_buffer<pos:position pos:line="58" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="58" pos:column="63"/></decl_stmt>

                        <decl_stmt><decl><type><name pos:line="60" pos:column="25">int<pos:position pos:line="60" pos:column="28"/></name></type> <name pos:line="60" pos:column="29">yy_c_buf_p_offset<pos:position pos:line="60" pos:column="46"/></name> <init pos:line="60" pos:column="47">=
                                <expr><call pos:line="61" pos:column="33">(<name pos:line="61" pos:column="34">int<pos:position pos:line="61" pos:column="37"/></name>) <argument_list pos:line="61" pos:column="39">(<argument><expr><name pos:line="61" pos:column="40">yy_c_buf_p<pos:position pos:line="61" pos:column="50"/></name> <operator pos:line="61" pos:column="51">-<pos:position pos:line="61" pos:column="52"/></operator> <name><name pos:line="61" pos:column="53">b<pos:position pos:line="61" pos:column="54"/></name><operator pos:line="61" pos:column="54">-&gt;<pos:position pos:line="61" pos:column="59"/></operator><name pos:line="61" pos:column="56">yy_ch_buf<pos:position pos:line="61" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="61" pos:column="67"/></decl_stmt>

                        <if pos:line="63" pos:column="25">if <condition pos:line="63" pos:column="28">( <expr><name><name pos:line="63" pos:column="30">b<pos:position pos:line="63" pos:column="31"/></name><operator pos:line="63" pos:column="31">-&gt;<pos:position pos:line="63" pos:column="36"/></operator><name pos:line="63" pos:column="33">yy_is_our_buffer<pos:position pos:line="63" pos:column="49"/></name></name></expr> )<pos:position pos:line="63" pos:column="51"/></condition><then pos:line="63" pos:column="51">
                                <block pos:line="64" pos:column="33">{
                                <decl_stmt><decl><type><name pos:line="65" pos:column="33">int<pos:position pos:line="65" pos:column="36"/></name></type> <name pos:line="65" pos:column="37">new_size<pos:position pos:line="65" pos:column="45"/></name> <init pos:line="65" pos:column="46">= <expr><name><name pos:line="65" pos:column="48">b<pos:position pos:line="65" pos:column="49"/></name><operator pos:line="65" pos:column="49">-&gt;<pos:position pos:line="65" pos:column="54"/></operator><name pos:line="65" pos:column="51">yy_buf_size<pos:position pos:line="65" pos:column="62"/></name></name> <operator pos:line="65" pos:column="63">*<pos:position pos:line="65" pos:column="64"/></operator> <literal type="number" pos:line="65" pos:column="65">2<pos:position pos:line="65" pos:column="66"/></literal></expr></init></decl>;<pos:position pos:line="65" pos:column="67"/></decl_stmt>

                                <if pos:line="67" pos:column="33">if <condition pos:line="67" pos:column="36">( <expr><name pos:line="67" pos:column="38">new_size<pos:position pos:line="67" pos:column="46"/></name> <operator pos:line="67" pos:column="47">&lt;=<pos:position pos:line="67" pos:column="52"/></operator> <literal type="number" pos:line="67" pos:column="50">0<pos:position pos:line="67" pos:column="51"/></literal></expr> )<pos:position pos:line="67" pos:column="53"/></condition><then pos:line="67" pos:column="53">
                                        <block type="pseudo"><expr_stmt><expr><name><name pos:line="68" pos:column="41">b<pos:position pos:line="68" pos:column="42"/></name><operator pos:line="68" pos:column="42">-&gt;<pos:position pos:line="68" pos:column="47"/></operator><name pos:line="68" pos:column="44">yy_buf_size<pos:position pos:line="68" pos:column="55"/></name></name> <operator pos:line="68" pos:column="56">+=<pos:position pos:line="68" pos:column="58"/></operator> <name><name pos:line="68" pos:column="59">b<pos:position pos:line="68" pos:column="60"/></name><operator pos:line="68" pos:column="60">-&gt;<pos:position pos:line="68" pos:column="65"/></operator><name pos:line="68" pos:column="62">yy_buf_size<pos:position pos:line="68" pos:column="73"/></name></name> <operator pos:line="68" pos:column="74">/<pos:position pos:line="68" pos:column="75"/></operator> <literal type="number" pos:line="68" pos:column="76">8<pos:position pos:line="68" pos:column="77"/></literal></expr>;<pos:position pos:line="68" pos:column="78"/></expr_stmt></block></then>
                                <else pos:line="69" pos:column="33">else
                                        <block type="pseudo"><expr_stmt><expr><name><name pos:line="70" pos:column="41">b<pos:position pos:line="70" pos:column="42"/></name><operator pos:line="70" pos:column="42">-&gt;<pos:position pos:line="70" pos:column="47"/></operator><name pos:line="70" pos:column="44">yy_buf_size<pos:position pos:line="70" pos:column="55"/></name></name> <operator pos:line="70" pos:column="56">*=<pos:position pos:line="70" pos:column="58"/></operator> <literal type="number" pos:line="70" pos:column="59">2<pos:position pos:line="70" pos:column="60"/></literal></expr>;<pos:position pos:line="70" pos:column="61"/></expr_stmt></block></else></if>

                                <expr_stmt><expr><name><name pos:line="72" pos:column="33">b<pos:position pos:line="72" pos:column="34"/></name><operator pos:line="72" pos:column="34">-&gt;<pos:position pos:line="72" pos:column="39"/></operator><name pos:line="72" pos:column="36">yy_ch_buf<pos:position pos:line="72" pos:column="45"/></name></name> <operator pos:line="72" pos:column="46">=<pos:position pos:line="72" pos:column="47"/></operator> <operator pos:line="72" pos:column="48">(<pos:position pos:line="72" pos:column="49"/></operator><name pos:line="72" pos:column="49">char<pos:position pos:line="72" pos:column="53"/></name> <operator pos:line="72" pos:column="54">*<pos:position pos:line="72" pos:column="55"/></operator><operator pos:line="72" pos:column="55">)<pos:position pos:line="72" pos:column="56"/></operator>
                                        <comment type="block" pos:line="73" pos:column="41">/* Include room in for 2 EOB chars. */</comment>
                                        <call><name pos:line="74" pos:column="41">yy_flex_realloc<pos:position pos:line="74" pos:column="56"/></name><argument_list pos:line="74" pos:column="56">( <argument><expr><operator pos:line="74" pos:column="58">(<pos:position pos:line="74" pos:column="59"/></operator><name pos:line="74" pos:column="59">void<pos:position pos:line="74" pos:column="63"/></name> <operator pos:line="74" pos:column="64">*<pos:position pos:line="74" pos:column="65"/></operator><operator pos:line="74" pos:column="65">)<pos:position pos:line="74" pos:column="66"/></operator> <name><name pos:line="74" pos:column="67">b<pos:position pos:line="74" pos:column="68"/></name><operator pos:line="74" pos:column="68">-&gt;<pos:position pos:line="74" pos:column="73"/></operator><name pos:line="74" pos:column="70">yy_ch_buf<pos:position pos:line="74" pos:column="79"/></name></name></expr></argument>,
                                                         <argument><expr><name><name pos:line="75" pos:column="58">b<pos:position pos:line="75" pos:column="59"/></name><operator pos:line="75" pos:column="59">-&gt;<pos:position pos:line="75" pos:column="64"/></operator><name pos:line="75" pos:column="61">yy_buf_size<pos:position pos:line="75" pos:column="72"/></name></name> <operator pos:line="75" pos:column="73">+<pos:position pos:line="75" pos:column="74"/></operator> <literal type="number" pos:line="75" pos:column="75">2<pos:position pos:line="75" pos:column="76"/></literal></expr></argument> )<pos:position pos:line="75" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="79"/></expr_stmt>
                                }<pos:position pos:line="76" pos:column="34"/></block></then>
                        <else pos:line="77" pos:column="25">else
                                <comment type="block" pos:line="78" pos:column="33">/* Can't grow it, we don't own it. */</comment>
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="79" pos:column="33">b<pos:position pos:line="79" pos:column="34"/></name><operator pos:line="79" pos:column="34">-&gt;<pos:position pos:line="79" pos:column="39"/></operator><name pos:line="79" pos:column="36">yy_ch_buf<pos:position pos:line="79" pos:column="45"/></name></name> <operator pos:line="79" pos:column="46">=<pos:position pos:line="79" pos:column="47"/></operator> <literal type="number" pos:line="79" pos:column="48">0<pos:position pos:line="79" pos:column="49"/></literal></expr>;<pos:position pos:line="79" pos:column="50"/></expr_stmt></block></else></if>

                        <if pos:line="81" pos:column="25">if <condition pos:line="81" pos:column="28">( <expr><operator pos:line="81" pos:column="30">!<pos:position pos:line="81" pos:column="31"/></operator> <name><name pos:line="81" pos:column="32">b<pos:position pos:line="81" pos:column="33"/></name><operator pos:line="81" pos:column="33">-&gt;<pos:position pos:line="81" pos:column="38"/></operator><name pos:line="81" pos:column="35">yy_ch_buf<pos:position pos:line="81" pos:column="44"/></name></name></expr> )<pos:position pos:line="81" pos:column="46"/></condition><then pos:line="81" pos:column="46">
                                <block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="33">YY_FATAL_ERROR<pos:position pos:line="82" pos:column="47"/></name><argument_list pos:line="82" pos:column="47">(
                                <argument><expr><literal type="string" pos:line="83" pos:column="33">"fatal error - scanner input buffer overflow"<pos:position pos:line="83" pos:column="78"/></literal></expr></argument> )<pos:position pos:line="83" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="81"/></expr_stmt></block></then></if>

                        <expr_stmt><expr><name pos:line="85" pos:column="25">yy_c_buf_p<pos:position pos:line="85" pos:column="35"/></name> <operator pos:line="85" pos:column="36">=<pos:position pos:line="85" pos:column="37"/></operator> <operator pos:line="85" pos:column="38">&amp;<pos:position pos:line="85" pos:column="43"/></operator><name><name pos:line="85" pos:column="39">b<pos:position pos:line="85" pos:column="40"/></name><operator pos:line="85" pos:column="40">-&gt;<pos:position pos:line="85" pos:column="45"/></operator><name pos:line="85" pos:column="42">yy_ch_buf<pos:position pos:line="85" pos:column="51"/></name><index pos:line="85" pos:column="51">[<expr><name pos:line="85" pos:column="52">yy_c_buf_p_offset<pos:position pos:line="85" pos:column="69"/></name></expr>]<pos:position pos:line="85" pos:column="70"/></index></name></expr>;<pos:position pos:line="85" pos:column="71"/></expr_stmt>

                        <expr_stmt><expr><name pos:line="87" pos:column="25">num_to_read<pos:position pos:line="87" pos:column="36"/></name> <operator pos:line="87" pos:column="37">=<pos:position pos:line="87" pos:column="38"/></operator> <name><name pos:line="87" pos:column="39">yy_current_buffer<pos:position pos:line="87" pos:column="56"/></name><operator pos:line="87" pos:column="56">-&gt;<pos:position pos:line="87" pos:column="61"/></operator><name pos:line="87" pos:column="58">yy_buf_size<pos:position pos:line="87" pos:column="69"/></name></name> <operator pos:line="87" pos:column="70">-<pos:position pos:line="87" pos:column="71"/></operator>
                                                <name pos:line="88" pos:column="49">number_to_move<pos:position pos:line="88" pos:column="63"/></name> <operator pos:line="88" pos:column="64">-<pos:position pos:line="88" pos:column="65"/></operator> <literal type="number" pos:line="88" pos:column="66">1<pos:position pos:line="88" pos:column="67"/></literal></expr>;<pos:position pos:line="88" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">endif<pos:position pos:line="89" pos:column="7"/></cpp:directive></cpp:endif>
                        }<pos:position pos:line="90" pos:column="26"/></block></while>

                <if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">( <expr><name pos:line="92" pos:column="22">num_to_read<pos:position pos:line="92" pos:column="33"/></name> <operator pos:line="92" pos:column="34">&gt;<pos:position pos:line="92" pos:column="38"/></operator> <name pos:line="92" pos:column="36">YY_READ_BUF_SIZE<pos:position pos:line="92" pos:column="52"/></name></expr> )<pos:position pos:line="92" pos:column="54"/></condition><then pos:line="92" pos:column="54">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="93" pos:column="25">num_to_read<pos:position pos:line="93" pos:column="36"/></name> <operator pos:line="93" pos:column="37">=<pos:position pos:line="93" pos:column="38"/></operator> <name pos:line="93" pos:column="39">YY_READ_BUF_SIZE<pos:position pos:line="93" pos:column="55"/></name></expr>;<pos:position pos:line="93" pos:column="56"/></expr_stmt></block></then></if>

                <comment type="block" pos:line="95" pos:column="17">/* Read in more data. */</comment>
                <expr_stmt><expr><call><name pos:line="96" pos:column="17">YY_INPUT<pos:position pos:line="96" pos:column="25"/></name><argument_list pos:line="96" pos:column="25">( <argument><expr><operator pos:line="96" pos:column="27">(<pos:position pos:line="96" pos:column="28"/></operator><operator pos:line="96" pos:column="28">&amp;<pos:position pos:line="96" pos:column="33"/></operator><name><name pos:line="96" pos:column="29">yy_current_buffer<pos:position pos:line="96" pos:column="46"/></name><operator pos:line="96" pos:column="46">-&gt;<pos:position pos:line="96" pos:column="51"/></operator><name pos:line="96" pos:column="48">yy_ch_buf<pos:position pos:line="96" pos:column="57"/></name><index pos:line="96" pos:column="57">[<expr><name pos:line="96" pos:column="58">number_to_move<pos:position pos:line="96" pos:column="72"/></name></expr>]<pos:position pos:line="96" pos:column="73"/></index></name><operator pos:line="96" pos:column="73">)<pos:position pos:line="96" pos:column="74"/></operator></expr></argument>,
                        <argument><expr><name pos:line="97" pos:column="25">yy_n_chars<pos:position pos:line="97" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="37">num_to_read<pos:position pos:line="97" pos:column="48"/></name></expr></argument> )<pos:position pos:line="97" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="51"/></expr_stmt>

                <expr_stmt><expr><name><name pos:line="99" pos:column="17">yy_current_buffer<pos:position pos:line="99" pos:column="34"/></name><operator pos:line="99" pos:column="34">-&gt;<pos:position pos:line="99" pos:column="39"/></operator><name pos:line="99" pos:column="36">yy_n_chars<pos:position pos:line="99" pos:column="46"/></name></name> <operator pos:line="99" pos:column="47">=<pos:position pos:line="99" pos:column="48"/></operator> <name pos:line="99" pos:column="49">yy_n_chars<pos:position pos:line="99" pos:column="59"/></name></expr>;<pos:position pos:line="99" pos:column="60"/></expr_stmt>
                }<pos:position pos:line="100" pos:column="18"/></block></else></if>

        <if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">( <expr><name pos:line="102" pos:column="14">yy_n_chars<pos:position pos:line="102" pos:column="24"/></name> <operator pos:line="102" pos:column="25">==<pos:position pos:line="102" pos:column="27"/></operator> <literal type="number" pos:line="102" pos:column="28">0<pos:position pos:line="102" pos:column="29"/></literal></expr> )<pos:position pos:line="102" pos:column="31"/></condition><then pos:line="102" pos:column="31">
                <block pos:line="103" pos:column="17">{
                <if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">( <expr><name pos:line="104" pos:column="22">number_to_move<pos:position pos:line="104" pos:column="36"/></name> <operator pos:line="104" pos:column="37">==<pos:position pos:line="104" pos:column="39"/></operator> <name pos:line="104" pos:column="40">YY_MORE_ADJ<pos:position pos:line="104" pos:column="51"/></name></expr> )<pos:position pos:line="104" pos:column="53"/></condition><then pos:line="104" pos:column="53">
                        <block pos:line="105" pos:column="25">{
                        <macro><name pos:line="106" pos:column="25">re<pos:position pos:line="106" pos:column="27"/></name></macro></block></then></if></block></then></if></block></function></unit>

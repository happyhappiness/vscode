<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_508.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">spool_reqbody_cl<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">apr_pool_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">p<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">request_rec<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">r<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">proxy_http_conn_t<pos:position pos:line="3" pos:column="55"/></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">p_conn<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="4" pos:column="38">conn_rec<pos:position pos:line="4" pos:column="46"/></name> <modifier pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></modifier></type><name pos:line="4" pos:column="48">origin<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="5" pos:column="38">apr_bucket_brigade<pos:position pos:line="5" pos:column="56"/></name> <modifier pos:line="5" pos:column="57">*<pos:position pos:line="5" pos:column="58"/></modifier></type><name pos:line="5" pos:column="58">header_brigade<pos:position pos:line="5" pos:column="72"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="6" pos:column="38">apr_bucket_brigade<pos:position pos:line="6" pos:column="56"/></name> <modifier pos:line="6" pos:column="57">*<pos:position pos:line="6" pos:column="58"/></modifier></type><name pos:line="6" pos:column="58">input_brigade<pos:position pos:line="6" pos:column="71"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="7" pos:column="38">int<pos:position pos:line="7" pos:column="41"/></name></type> <name pos:line="7" pos:column="42">force_cl<pos:position pos:line="7" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="51"/></parameter_list>
<block pos:line="8" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">seen_eos<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_status_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">status<pos:position pos:line="10" pos:column="24"/></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_bucket_alloc_t<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">bucket_alloc<pos:position pos:line="11" pos:column="37"/></name> <init pos:line="11" pos:column="38">= <expr><name><name pos:line="11" pos:column="40">r<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">-&gt;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="43">connection<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">-&gt;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="55">bucket_alloc<pos:position pos:line="11" pos:column="67"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_bucket_brigade<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">body_brigade<pos:position pos:line="12" pos:column="37"/></name></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_bucket<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">e<pos:position pos:line="13" pos:column="18"/></name></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_off_t<pos:position pos:line="14" pos:column="14"/></name></type> <name pos:line="14" pos:column="15">bytes<pos:position pos:line="14" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="22">bytes_spooled<pos:position pos:line="14" pos:column="35"/></name> <init pos:line="14" pos:column="36">= <expr><literal type="number" pos:line="14" pos:column="38">0<pos:position pos:line="14" pos:column="39"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="41">fsize<pos:position pos:line="14" pos:column="46"/></name> <init pos:line="14" pos:column="47">= <expr><literal type="number" pos:line="14" pos:column="49">0<pos:position pos:line="14" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_file_t<pos:position pos:line="15" pos:column="15"/></name> <modifier pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></modifier></type><name pos:line="15" pos:column="17">tmpfile<pos:position pos:line="15" pos:column="24"/></name> <init pos:line="15" pos:column="25">= <expr><name pos:line="15" pos:column="27">NULL<pos:position pos:line="15" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">body_brigade<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <call><name pos:line="17" pos:column="20">apr_brigade_create<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">p<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">bucket_alloc<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>

    <while pos:line="19" pos:column="5">while <condition pos:line="19" pos:column="11">(<expr><operator pos:line="19" pos:column="12">!<pos:position pos:line="19" pos:column="13"/></operator><call><name pos:line="19" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><call><name pos:line="19" pos:column="31">APR_BRIGADE_FIRST<pos:position pos:line="19" pos:column="48"/></name><argument_list pos:line="19" pos:column="48">(<argument><expr><name pos:line="19" pos:column="49">input_brigade<pos:position pos:line="19" pos:column="62"/></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="65"/></condition>
    <block pos:line="20" pos:column="5">{
        <comment type="block" pos:line="21" pos:column="9">/* If this brigade contains EOS, either stop or remove it. */</comment>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><call><name pos:line="22" pos:column="31">APR_BRIGADE_LAST<pos:position pos:line="22" pos:column="47"/></name><argument_list pos:line="22" pos:column="47">(<argument><expr><name pos:line="22" pos:column="48">input_brigade<pos:position pos:line="22" pos:column="61"/></name></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="64"/></condition><then pos:line="22" pos:column="64"> <block pos:line="22" pos:column="65">{
            <expr_stmt><expr><name pos:line="23" pos:column="13">seen_eos<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <literal type="number" pos:line="23" pos:column="24">1<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>

            <comment type="block" pos:line="25" pos:column="13">/* We can't pass this EOS to the output_filters. */</comment>
            <expr_stmt><expr><name pos:line="26" pos:column="13">e<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <call><name pos:line="26" pos:column="17">APR_BRIGADE_LAST<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">input_brigade<pos:position pos:line="26" pos:column="47"/></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">apr_bucket_delete<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">e<pos:position pos:line="27" pos:column="32"/></name></expr></argument>)<pos:position pos:line="27" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="30" pos:column="9">apr_brigade_length<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">input_brigade<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="43">1<pos:position pos:line="30" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="46">&amp;<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="47">bytes<pos:position pos:line="30" pos:column="52"/></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">bytes_spooled<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">+<pos:position pos:line="32" pos:column="28"/></operator> <name pos:line="32" pos:column="29">bytes<pos:position pos:line="32" pos:column="34"/></name> <operator pos:line="32" pos:column="35">&gt;<pos:position pos:line="32" pos:column="39"/></operator> <name pos:line="32" pos:column="37">MAX_MEM_SPOOL<pos:position pos:line="32" pos:column="50"/></name></expr>)<pos:position pos:line="32" pos:column="51"/></condition><then pos:line="32" pos:column="51"> <block pos:line="32" pos:column="52">{
            <comment type="block" pos:line="33" pos:column="13">/* can't spool any more in memory; write latest brigade to disk */</comment>
            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><name pos:line="34" pos:column="17">tmpfile<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">==<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">NULL<pos:position pos:line="34" pos:column="32"/></name></expr>)<pos:position pos:line="34" pos:column="33"/></condition><then pos:line="34" pos:column="33"> <block pos:line="34" pos:column="34">{
                <decl_stmt><decl><type><specifier pos:line="35" pos:column="17">const<pos:position pos:line="35" pos:column="22"/></specifier> <name pos:line="35" pos:column="23">char<pos:position pos:line="35" pos:column="27"/></name> <modifier pos:line="35" pos:column="28">*<pos:position pos:line="35" pos:column="29"/></modifier></type><name pos:line="35" pos:column="29">temp_dir<pos:position pos:line="35" pos:column="37"/></name></decl>;<pos:position pos:line="35" pos:column="38"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="36" pos:column="17">char<pos:position pos:line="36" pos:column="21"/></name> <modifier pos:line="36" pos:column="22">*<pos:position pos:line="36" pos:column="23"/></modifier><specifier pos:line="36" pos:column="23">template<pos:position pos:line="36" pos:column="31"/></specifier></type></decl>;<pos:position pos:line="36" pos:column="32"/></decl_stmt>

                <expr_stmt><expr><name pos:line="38" pos:column="17">status<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <call><name pos:line="38" pos:column="26">apr_temp_dir_get<pos:position pos:line="38" pos:column="42"/></name><argument_list pos:line="38" pos:column="42">(<argument><expr><operator pos:line="38" pos:column="43">&amp;<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="44">temp_dir<pos:position pos:line="38" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="54">p<pos:position pos:line="38" pos:column="55"/></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt>
                <if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">status<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">!=<pos:position pos:line="39" pos:column="30"/></operator> <name pos:line="39" pos:column="31">APR_SUCCESS<pos:position pos:line="39" pos:column="42"/></name></expr>)<pos:position pos:line="39" pos:column="43"/></condition><then pos:line="39" pos:column="43"> <block pos:line="39" pos:column="44">{
                    <expr_stmt><expr><call><name pos:line="40" pos:column="21">ap_log_error<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">APLOG_MARK<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="46">APLOG_ERR<pos:position pos:line="40" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="57">status<pos:position pos:line="40" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="65">r<pos:position pos:line="40" pos:column="66"/></name><operator pos:line="40" pos:column="66">-&gt;<pos:position pos:line="40" pos:column="71"/></operator><name pos:line="40" pos:column="68">server<pos:position pos:line="40" pos:column="74"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="41" pos:column="34">"proxy: search for temporary directory failed"<pos:position pos:line="41" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="82"/></expr_stmt>
                    <return pos:line="42" pos:column="21">return <expr><name pos:line="42" pos:column="28">status<pos:position pos:line="42" pos:column="34"/></name></expr>;<pos:position pos:line="42" pos:column="35"/></return>
                }<pos:position pos:line="43" pos:column="18"/></block></then></if>
                <macro><name pos:line="44" pos:column="17">apr_filepath_merge<pos:position pos:line="44" pos:column="35"/></name><argument_list pos:line="44" pos:column="35">(<argument pos:line="44" pos:column="36">&amp;template<pos:position pos:line="44" pos:column="45"/></argument>, <argument pos:line="44" pos:column="47">temp_dir<pos:position pos:line="44" pos:column="55"/></argument>,
                                   <argument><literal type="string" pos:line="45" pos:column="36">"modproxy.tmp.XXXXXX"<pos:position pos:line="45" pos:column="57"/></literal></argument>,
                                   <argument pos:line="46" pos:column="36">APR_FILEPATH_NATIVE<pos:position pos:line="46" pos:column="55"/></argument>, <argument pos:line="46" pos:column="57">p<pos:position pos:line="46" pos:column="58"/></argument>)<pos:position pos:line="46" pos:column="59"/></argument_list></macro><empty_stmt pos:line="46" pos:column="59">;<pos:position pos:line="46" pos:column="60"/></empty_stmt>
                <expr_stmt><expr><name pos:line="47" pos:column="17">status<pos:position pos:line="47" pos:column="23"/></name> <operator pos:line="47" pos:column="24">=<pos:position pos:line="47" pos:column="25"/></operator> <macro><name pos:line="47" pos:column="26">apr_file_mktemp<pos:position pos:line="47" pos:column="41"/></name><argument_list pos:line="47" pos:column="41">(<argument pos:line="47" pos:column="42">&amp;tmpfile<pos:position pos:line="47" pos:column="50"/></argument>, <argument pos:line="47" pos:column="52">template<pos:position pos:line="47" pos:column="60"/></argument>, <argument><literal type="number" pos:line="47" pos:column="62">0<pos:position pos:line="47" pos:column="63"/></literal></argument>, <argument pos:line="47" pos:column="65">p<pos:position pos:line="47" pos:column="66"/></argument>)<pos:position pos:line="47" pos:column="67"/></argument_list></macro></expr>;<pos:position pos:line="47" pos:column="68"/></expr_stmt>
                <if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">status<pos:position pos:line="48" pos:column="27"/></name> <operator pos:line="48" pos:column="28">!=<pos:position pos:line="48" pos:column="30"/></operator> <name pos:line="48" pos:column="31">APR_SUCCESS<pos:position pos:line="48" pos:column="42"/></name></expr>)<pos:position pos:line="48" pos:column="43"/></condition><then pos:line="48" pos:column="43"> <block pos:line="48" pos:column="44">{
                    <expr_stmt><expr><call><name pos:line="49" pos:column="21">ap_log_error<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">APLOG_MARK<pos:position pos:line="49" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="46">APLOG_ERR<pos:position pos:line="49" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="57">status<pos:position pos:line="49" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="65">r<pos:position pos:line="49" pos:column="66"/></name><operator pos:line="49" pos:column="66">-&gt;<pos:position pos:line="49" pos:column="71"/></operator><name pos:line="49" pos:column="68">server<pos:position pos:line="49" pos:column="74"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="50" pos:column="34">"proxy: creation of temporary file in directory %s failed"<pos:position pos:line="50" pos:column="92"/></literal></expr></argument>,
                                 <argument><expr><name pos:line="51" pos:column="34">temp_dir<pos:position pos:line="51" pos:column="42"/></name></expr></argument>)<pos:position pos:line="51" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="44"/></expr_stmt>
                    <return pos:line="52" pos:column="21">return <expr><name pos:line="52" pos:column="28">status<pos:position pos:line="52" pos:column="34"/></name></expr>;<pos:position pos:line="52" pos:column="35"/></return>
                }<pos:position pos:line="53" pos:column="18"/></block></then></if>
            }<pos:position pos:line="54" pos:column="14"/></block></then></if>
            <for pos:line="55" pos:column="13">for <control pos:line="55" pos:column="17">(<init><expr><name pos:line="55" pos:column="18">e<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">=<pos:position pos:line="55" pos:column="21"/></operator> <call><name pos:line="55" pos:column="22">APR_BRIGADE_FIRST<pos:position pos:line="55" pos:column="39"/></name><argument_list pos:line="55" pos:column="39">(<argument><expr><name pos:line="55" pos:column="40">input_brigade<pos:position pos:line="55" pos:column="53"/></name></expr></argument>)<pos:position pos:line="55" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="55"/></init>
                 <condition><expr><name pos:line="56" pos:column="18">e<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">!=<pos:position pos:line="56" pos:column="22"/></operator> <call><name pos:line="56" pos:column="23">APR_BRIGADE_SENTINEL<pos:position pos:line="56" pos:column="43"/></name><argument_list pos:line="56" pos:column="43">(<argument><expr><name pos:line="56" pos:column="44">input_brigade<pos:position pos:line="56" pos:column="57"/></name></expr></argument>)<pos:position pos:line="56" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="59"/></condition>
                 <incr><expr><name pos:line="57" pos:column="18">e<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">=<pos:position pos:line="57" pos:column="21"/></operator> <call><name pos:line="57" pos:column="22">APR_BUCKET_NEXT<pos:position pos:line="57" pos:column="37"/></name><argument_list pos:line="57" pos:column="37">(<argument><expr><name pos:line="57" pos:column="38">e<pos:position pos:line="57" pos:column="39"/></name></expr></argument>)<pos:position pos:line="57" pos:column="40"/></argument_list></call></expr></incr>)<pos:position pos:line="57" pos:column="41"/></control> <block pos:line="57" pos:column="42">{
                <decl_stmt><decl><type><specifier pos:line="58" pos:column="17">const<pos:position pos:line="58" pos:column="22"/></specifier> <name pos:line="58" pos:column="23">char<pos:position pos:line="58" pos:column="27"/></name> <modifier pos:line="58" pos:column="28">*<pos:position pos:line="58" pos:column="29"/></modifier></type><name pos:line="58" pos:column="29">data<pos:position pos:line="58" pos:column="33"/></name></decl>;<pos:position pos:line="58" pos:column="34"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="59" pos:column="17">apr_size_t<pos:position pos:line="59" pos:column="27"/></name></type> <name pos:line="59" pos:column="28">bytes_read<pos:position pos:line="59" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="59" pos:column="40">bytes_written<pos:position pos:line="59" pos:column="53"/></name></decl>;<pos:position pos:line="59" pos:column="54"/></decl_stmt>

                <expr_stmt><expr><call><name pos:line="61" pos:column="17">apr_bucket_read<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name pos:line="61" pos:column="33">e<pos:position pos:line="61" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="36">&amp;<pos:position pos:line="61" pos:column="41"/></operator><name pos:line="61" pos:column="37">data<pos:position pos:line="61" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="43">&amp;<pos:position pos:line="61" pos:column="48"/></operator><name pos:line="61" pos:column="44">bytes_read<pos:position pos:line="61" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="56">APR_BLOCK_READ<pos:position pos:line="61" pos:column="70"/></name></expr></argument>)<pos:position pos:line="61" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="72"/></expr_stmt>
                <expr_stmt><expr><name pos:line="62" pos:column="17">status<pos:position pos:line="62" pos:column="23"/></name> <operator pos:line="62" pos:column="24">=<pos:position pos:line="62" pos:column="25"/></operator> <call><name pos:line="62" pos:column="26">apr_file_write_full<pos:position pos:line="62" pos:column="45"/></name><argument_list pos:line="62" pos:column="45">(<argument><expr><name pos:line="62" pos:column="46">tmpfile<pos:position pos:line="62" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="55">data<pos:position pos:line="62" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="61">bytes_read<pos:position pos:line="62" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="73">&amp;<pos:position pos:line="62" pos:column="78"/></operator><name pos:line="62" pos:column="74">bytes_written<pos:position pos:line="62" pos:column="87"/></name></expr></argument>)<pos:position pos:line="62" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="89"/></expr_stmt>
                <if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><name pos:line="63" pos:column="21">status<pos:position pos:line="63" pos:column="27"/></name> <operator pos:line="63" pos:column="28">!=<pos:position pos:line="63" pos:column="30"/></operator> <name pos:line="63" pos:column="31">APR_SUCCESS<pos:position pos:line="63" pos:column="42"/></name></expr>)<pos:position pos:line="63" pos:column="43"/></condition><then pos:line="63" pos:column="43"> <block pos:line="63" pos:column="44">{
                    <decl_stmt><decl><type><specifier pos:line="64" pos:column="21">const<pos:position pos:line="64" pos:column="26"/></specifier> <name pos:line="64" pos:column="27">char<pos:position pos:line="64" pos:column="31"/></name> <modifier pos:line="64" pos:column="32">*<pos:position pos:line="64" pos:column="33"/></modifier></type><name pos:line="64" pos:column="33">tmpfile_name<pos:position pos:line="64" pos:column="45"/></name></decl>;<pos:position pos:line="64" pos:column="46"/></decl_stmt>

                    <if pos:line="66" pos:column="21">if <condition pos:line="66" pos:column="24">(<expr><call><name pos:line="66" pos:column="25">apr_file_name_get<pos:position pos:line="66" pos:column="42"/></name><argument_list pos:line="66" pos:column="42">(<argument><expr><operator pos:line="66" pos:column="43">&amp;<pos:position pos:line="66" pos:column="48"/></operator><name pos:line="66" pos:column="44">tmpfile_name<pos:position pos:line="66" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="58">tmpfile<pos:position pos:line="66" pos:column="65"/></name></expr></argument>)<pos:position pos:line="66" pos:column="66"/></argument_list></call> <operator pos:line="66" pos:column="67">!=<pos:position pos:line="66" pos:column="69"/></operator> <name pos:line="66" pos:column="70">APR_SUCCESS<pos:position pos:line="66" pos:column="81"/></name></expr>)<pos:position pos:line="66" pos:column="82"/></condition><then pos:line="66" pos:column="82"> <block pos:line="66" pos:column="83">{
                        <expr_stmt><expr><name pos:line="67" pos:column="25">tmpfile_name<pos:position pos:line="67" pos:column="37"/></name> <operator pos:line="67" pos:column="38">=<pos:position pos:line="67" pos:column="39"/></operator> <literal type="string" pos:line="67" pos:column="40">"(unknown)"<pos:position pos:line="67" pos:column="51"/></literal></expr>;<pos:position pos:line="67" pos:column="52"/></expr_stmt>
                    }<pos:position pos:line="68" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="69" pos:column="21">ap_log_error<pos:position pos:line="69" pos:column="33"/></name><argument_list pos:line="69" pos:column="33">(<argument><expr><name pos:line="69" pos:column="34">APLOG_MARK<pos:position pos:line="69" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="46">APLOG_ERR<pos:position pos:line="69" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="57">status<pos:position pos:line="69" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="65">r<pos:position pos:line="69" pos:column="66"/></name><operator pos:line="69" pos:column="66">-&gt;<pos:position pos:line="69" pos:column="71"/></operator><name pos:line="69" pos:column="68">server<pos:position pos:line="69" pos:column="74"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="70" pos:column="34">"proxy: write to temporary file %s failed"<pos:position pos:line="70" pos:column="76"/></literal></expr></argument>,
                                 <argument><expr><name pos:line="71" pos:column="34">tmpfile_name<pos:position pos:line="71" pos:column="46"/></name></expr></argument>)<pos:position pos:line="71" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="48"/></expr_stmt>
                    <return pos:line="72" pos:column="21">return <expr><name pos:line="72" pos:column="28">status<pos:position pos:line="72" pos:column="34"/></name></expr>;<pos:position pos:line="72" pos:column="35"/></return>
                }<pos:position pos:line="73" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="74" pos:column="17">AP_DEBUG_ASSERT<pos:position pos:line="74" pos:column="32"/></name><argument_list pos:line="74" pos:column="32">(<argument><expr><name pos:line="74" pos:column="33">bytes_read<pos:position pos:line="74" pos:column="43"/></name> <operator pos:line="74" pos:column="44">==<pos:position pos:line="74" pos:column="46"/></operator> <name pos:line="74" pos:column="47">bytes_written<pos:position pos:line="74" pos:column="60"/></name></expr></argument>)<pos:position pos:line="74" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><name pos:line="75" pos:column="17">fsize<pos:position pos:line="75" pos:column="22"/></name> <operator pos:line="75" pos:column="23">+=<pos:position pos:line="75" pos:column="25"/></operator> <name pos:line="75" pos:column="26">bytes_written<pos:position pos:line="75" pos:column="39"/></name></expr>;<pos:position pos:line="75" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></for>
            <expr_stmt><expr><call><name pos:line="77" pos:column="13">apr_brigade_cleanup<pos:position pos:line="77" pos:column="32"/></name><argument_list pos:line="77" pos:column="32">(<argument><expr><name pos:line="77" pos:column="33">input_brigade<pos:position pos:line="77" pos:column="46"/></name></expr></argument>)<pos:position pos:line="77" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="78" pos:column="10"/></block></then>
        <else pos:line="79" pos:column="9">else <block pos:line="79" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">APR_BRIGADE_CONCAT<pos:position pos:line="80" pos:column="31"/></name><argument_list pos:line="80" pos:column="31">(<argument><expr><name pos:line="80" pos:column="32">body_brigade<pos:position pos:line="80" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="46">input_brigade<pos:position pos:line="80" pos:column="59"/></name></expr></argument>)<pos:position pos:line="80" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="81" pos:column="10"/></block></else></if>
        
        <expr_stmt><expr><name pos:line="83" pos:column="9">bytes_spooled<pos:position pos:line="83" pos:column="22"/></name> <operator pos:line="83" pos:column="23">+=<pos:position pos:line="83" pos:column="25"/></operator> <name pos:line="83" pos:column="26">bytes<pos:position pos:line="83" pos:column="31"/></name></expr>;<pos:position pos:line="83" pos:column="32"/></expr_stmt>

        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">seen_eos<pos:position pos:line="85" pos:column="21"/></name></expr>)<pos:position pos:line="85" pos:column="22"/></condition><then pos:line="85" pos:column="22"> <block pos:line="85" pos:column="23">{
            <break pos:line="86" pos:column="13">break;<pos:position pos:line="86" pos:column="19"/></break>
        }<pos:position pos:line="87" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="89" pos:column="9">status<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">=<pos:position pos:line="89" pos:column="17"/></operator> <call><name pos:line="89" pos:column="18">ap_get_brigade<pos:position pos:line="89" pos:column="32"/></name><argument_list pos:line="89" pos:column="32">(<argument><expr><name><name pos:line="89" pos:column="33">r<pos:position pos:line="89" pos:column="34"/></name><operator pos:line="89" pos:column="34">-&gt;<pos:position pos:line="89" pos:column="39"/></operator><name pos:line="89" pos:column="36">input_filters<pos:position pos:line="89" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="51">input_brigade<pos:position pos:line="89" pos:column="64"/></name></expr></argument>,
                                <argument><expr><name pos:line="90" pos:column="33">AP_MODE_READBYTES<pos:position pos:line="90" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="52">APR_BLOCK_READ<pos:position pos:line="90" pos:column="66"/></name></expr></argument>,
                                <argument><expr><name pos:line="91" pos:column="33">HUGE_STRING_LEN<pos:position pos:line="91" pos:column="48"/></name></expr></argument>)<pos:position pos:line="91" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="50"/></expr_stmt>

        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">status<pos:position pos:line="93" pos:column="19"/></name> <operator pos:line="93" pos:column="20">!=<pos:position pos:line="93" pos:column="22"/></operator> <name pos:line="93" pos:column="23">APR_SUCCESS<pos:position pos:line="93" pos:column="34"/></name></expr>)<pos:position pos:line="93" pos:column="35"/></condition><then pos:line="93" pos:column="35"> <block pos:line="93" pos:column="36">{
            <return pos:line="94" pos:column="13">return <expr><name pos:line="94" pos:column="20">status<pos:position pos:line="94" pos:column="26"/></name></expr>;<pos:position pos:line="94" pos:column="27"/></return>
        }<pos:position pos:line="95" pos:column="10"/></block></then></if>
    }<pos:position pos:line="96" pos:column="6"/></block></while>

    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><name pos:line="98" pos:column="9">bytes_spooled<pos:position pos:line="98" pos:column="22"/></name> <operator pos:line="98" pos:column="23">||<pos:position pos:line="98" pos:column="25"/></operator> <name pos:line="98" pos:column="26">force_cl<pos:position pos:line="98" pos:column="34"/></name></expr>)<pos:position pos:line="98" pos:column="35"/></condition><then pos:line="98" pos:column="35"> <block pos:line="98" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">add_cl<pos:position pos:line="99" pos:column="15"/></name><argument_list pos:line="99" pos:column="15">(<argument><expr><name pos:line="99" pos:column="16">p<pos:position pos:line="99" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="19">bucket_alloc<pos:position pos:line="99" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="33">header_brigade<pos:position pos:line="99" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="99" pos:column="49">apr_off_t_toa<pos:position pos:line="99" pos:column="62"/></name><argument_list pos:line="99" pos:column="62">(<argument><expr><name pos:line="99" pos:column="63">p<pos:position pos:line="99" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="66">bytes_spooled<pos:position pos:line="99" pos:column="79"/></name></expr></argument>)<pos:position pos:line="99" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="99" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="82"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">terminate_headers<pos:position pos:line="101" pos:column="22"/></name><argument_list pos:line="101" pos:column="22">(<argument><expr><name pos:line="101" pos:column="23">bucket_alloc<pos:position pos:line="101" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="37">header_brigade<pos:position pos:line="101" pos:column="51"/></name></expr></argument>)<pos:position pos:line="101" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="102" pos:column="5">APR_BRIGADE_CONCAT<pos:position pos:line="102" pos:column="23"/></name><argument_list pos:line="102" pos:column="23">(<argument><expr><name pos:line="102" pos:column="24">header_brigade<pos:position pos:line="102" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="40">body_brigade<pos:position pos:line="102" pos:column="52"/></name></expr></argument>)<pos:position pos:line="102" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="54"/></expr_stmt>
    <if pos:line="103" pos:column="5">if <condition pos:line="103" pos:column="8">(<expr><name pos:line="103" pos:column="9">tmpfile<pos:position pos:line="103" pos:column="16"/></name></expr>)<pos:position pos:line="103" pos:column="17"/></condition><then pos:line="103" pos:column="17"> <block pos:line="103" pos:column="18">{
        <comment type="block" pos:line="104" pos:column="9">/* For platforms where the size of the file may be larger than
         * that which can be stored in a single bucket (where the
         * length field is an apr_size_t), split it into several
         * buckets: */</comment>
        <if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><sizeof pos:line="108" pos:column="13">sizeof<argument_list pos:line="108" pos:column="19">(<argument><expr><name pos:line="108" pos:column="20">apr_off_t<pos:position pos:line="108" pos:column="29"/></name></expr></argument>)<pos:position pos:line="108" pos:column="30"/></argument_list></sizeof> <operator pos:line="108" pos:column="31">&gt;<pos:position pos:line="108" pos:column="35"/></operator> <sizeof pos:line="108" pos:column="33">sizeof<argument_list pos:line="108" pos:column="39">(<argument><expr><name pos:line="108" pos:column="40">apr_size_t<pos:position pos:line="108" pos:column="50"/></name></expr></argument>)<pos:position pos:line="108" pos:column="51"/></argument_list></sizeof>
            <operator pos:line="109" pos:column="13">&amp;&amp;<pos:position pos:line="109" pos:column="23"/></operator> <name pos:line="109" pos:column="16">fsize<pos:position pos:line="109" pos:column="21"/></name> <operator pos:line="109" pos:column="22">&gt;<pos:position pos:line="109" pos:column="26"/></operator> <name pos:line="109" pos:column="24">AP_MAX_SENDFILE<pos:position pos:line="109" pos:column="39"/></name></expr>)<pos:position pos:line="109" pos:column="40"/></condition><then pos:line="109" pos:column="40"> <block pos:line="109" pos:column="41">{
            <expr_stmt><expr><name pos:line="110" pos:column="13">e<pos:position pos:line="110" pos:column="14"/></name> <operator pos:line="110" pos:column="15">=<pos:position pos:line="110" pos:column="16"/></operator> <call><name pos:line="110" pos:column="17">apr_bucket_file_create<pos:position pos:line="110" pos:column="39"/></name><argument_list pos:line="110" pos:column="39">(<argument><expr><name pos:line="110" pos:column="40">tmpfile<pos:position pos:line="110" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="110" pos:column="49">0<pos:position pos:line="110" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="110" pos:column="52">AP_MAX_SENDFILE<pos:position pos:line="110" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="69">p<pos:position pos:line="110" pos:column="70"/></name></expr></argument>,
                                       <argument><expr><name pos:line="111" pos:column="40">bucket_alloc<pos:position pos:line="111" pos:column="52"/></name></expr></argument>)<pos:position pos:line="111" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="54"/></expr_stmt>
            <while pos:line="112" pos:column="13">while <condition pos:line="112" pos:column="19">(<expr><name pos:line="112" pos:column="20">fsize<pos:position pos:line="112" pos:column="25"/></name> <operator pos:line="112" pos:column="26">&gt;<pos:position pos:line="112" pos:column="30"/></operator> <name pos:line="112" pos:column="28">AP_MAX_SENDFILE<pos:position pos:line="112" pos:column="43"/></name></expr>)<pos:position pos:line="112" pos:column="44"/></condition> <block pos:line="112" pos:column="45">{
                <decl_stmt><decl><type><name pos:line="113" pos:column="17">apr_bucket<pos:position pos:line="113" pos:column="27"/></name> <modifier pos:line="113" pos:column="28">*<pos:position pos:line="113" pos:column="29"/></modifier></type><name pos:line="113" pos:column="29">ce<pos:position pos:line="113" pos:column="31"/></name></decl>;<pos:position pos:line="113" pos:column="32"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="114" pos:column="17">apr_bucket_copy<pos:position pos:line="114" pos:column="32"/></name><argument_list pos:line="114" pos:column="32">(<argument><expr><name pos:line="114" pos:column="33">e<pos:position pos:line="114" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="36">&amp;<pos:position pos:line="114" pos:column="41"/></operator><name pos:line="114" pos:column="37">ce<pos:position pos:line="114" pos:column="39"/></name></expr></argument>)<pos:position pos:line="114" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="115" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="115" pos:column="40"/></name><argument_list pos:line="115" pos:column="40">(<argument><expr><name pos:line="115" pos:column="41">header_brigade<pos:position pos:line="115" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="57">ce<pos:position pos:line="115" pos:column="59"/></name></expr></argument>)<pos:position pos:line="115" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="116" pos:column="17">e<pos:position pos:line="116" pos:column="18"/></name><operator pos:line="116" pos:column="18">-&gt;<pos:position pos:line="116" pos:column="23"/></operator><name pos:line="116" pos:column="20">start<pos:position pos:line="116" pos:column="25"/></name></name> <operator pos:line="116" pos:column="26">+=<pos:position pos:line="116" pos:column="28"/></operator> <name pos:line="116" pos:column="29">AP_MAX_SENDFILE<pos:position pos:line="116" pos:column="44"/></name></expr>;<pos:position pos:line="116" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><name pos:line="117" pos:column="17">fsize<pos:position pos:line="117" pos:column="22"/></name> <operator pos:line="117" pos:column="23">-=<pos:position pos:line="117" pos:column="25"/></operator> <name pos:line="117" pos:column="26">AP_MAX_SENDFILE<pos:position pos:line="117" pos:column="41"/></name></expr>;<pos:position pos:line="117" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="118" pos:column="14"/></block></while>
            <expr_stmt><expr><name><name pos:line="119" pos:column="13">e<pos:position pos:line="119" pos:column="14"/></name><operator pos:line="119" pos:column="14">-&gt;<pos:position pos:line="119" pos:column="19"/></operator><name pos:line="119" pos:column="16">length<pos:position pos:line="119" pos:column="22"/></name></name> <operator pos:line="119" pos:column="23">=<pos:position pos:line="119" pos:column="24"/></operator> <operator pos:line="119" pos:column="25">(<pos:position pos:line="119" pos:column="26"/></operator><name pos:line="119" pos:column="26">apr_size_t<pos:position pos:line="119" pos:column="36"/></name><operator pos:line="119" pos:column="36">)<pos:position pos:line="119" pos:column="37"/></operator><name pos:line="119" pos:column="37">fsize<pos:position pos:line="119" pos:column="42"/></name></expr>;<pos:position pos:line="119" pos:column="43"/></expr_stmt> <comment type="block" pos:line="119" pos:column="44">/* Resize just the last bucket */</comment>
        }<pos:position pos:line="120" pos:column="10"/></block></then>
        <else pos:line="121" pos:column="9">else <block pos:line="121" pos:column="14">{
            <expr_stmt><expr><name pos:line="122" pos:column="13">e<pos:position pos:line="122" pos:column="14"/></name> <operator pos:line="122" pos:column="15">=<pos:position pos:line="122" pos:column="16"/></operator> <call><name pos:line="122" pos:column="17">apr_bucket_file_create<pos:position pos:line="122" pos:column="39"/></name><argument_list pos:line="122" pos:column="39">(<argument><expr><name pos:line="122" pos:column="40">tmpfile<pos:position pos:line="122" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="49">0<pos:position pos:line="122" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="122" pos:column="52">(<pos:position pos:line="122" pos:column="53"/></operator><name pos:line="122" pos:column="53">apr_size_t<pos:position pos:line="122" pos:column="63"/></name><operator pos:line="122" pos:column="63">)<pos:position pos:line="122" pos:column="64"/></operator><name pos:line="122" pos:column="64">fsize<pos:position pos:line="122" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="71">p<pos:position pos:line="122" pos:column="72"/></name></expr></argument>,
                                       <argument><expr><name pos:line="123" pos:column="40">bucket_alloc<pos:position pos:line="123" pos:column="52"/></name></expr></argument>)<pos:position pos:line="123" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="124" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="125" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="125" pos:column="32"/></name><argument_list pos:line="125" pos:column="32">(<argument><expr><name pos:line="125" pos:column="33">header_brigade<pos:position pos:line="125" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="49">e<pos:position pos:line="125" pos:column="50"/></name></expr></argument>)<pos:position pos:line="125" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="126" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="127" pos:column="5">/* This is all a single brigade, pass with flush flagged */</comment>
    <expr_stmt><expr><name pos:line="128" pos:column="5">status<pos:position pos:line="128" pos:column="11"/></name> <operator pos:line="128" pos:column="12">=<pos:position pos:line="128" pos:column="13"/></operator> <call><name pos:line="128" pos:column="14">pass_brigade<pos:position pos:line="128" pos:column="26"/></name><argument_list pos:line="128" pos:column="26">(<argument><expr><name pos:line="128" pos:column="27">bucket_alloc<pos:position pos:line="128" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="41">r<pos:position pos:line="128" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="44">p_conn<pos:position pos:line="128" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="52">origin<pos:position pos:line="128" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="60">header_brigade<pos:position pos:line="128" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="128" pos:column="76">1<pos:position pos:line="128" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="79"/></expr_stmt>
    <return pos:line="129" pos:column="5">return <expr><name pos:line="129" pos:column="12">status<pos:position pos:line="129" pos:column="18"/></name></expr>;<pos:position pos:line="129" pos:column="19"/></return>
}<pos:position pos:line="130" pos:column="2"/></block></function></unit>

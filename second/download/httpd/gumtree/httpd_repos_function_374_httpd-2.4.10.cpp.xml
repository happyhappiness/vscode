<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_374_httpd-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_method_lock<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">request_rec<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">r<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_error<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">err<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">dav_resource<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">resource<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dav_resource<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">parent<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">dav_hooks_locks<pos:position pos:line="6" pos:column="26"/></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">locks_hooks<pos:position pos:line="6" pos:column="39"/></name></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">result<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">depth<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">new_lock_request<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><literal type="number" pos:line="9" pos:column="28">0<pos:position pos:line="9" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_xml_doc<pos:position pos:line="10" pos:column="16"/></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">doc<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">dav_lock<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">lock<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">dav_response<pos:position pos:line="12" pos:column="17"/></name> <modifier pos:line="12" pos:column="18">*<pos:position pos:line="12" pos:column="19"/></modifier></type><name pos:line="12" pos:column="19">multi_response<pos:position pos:line="12" pos:column="33"/></name> <init pos:line="12" pos:column="34">= <expr><name pos:line="12" pos:column="36">NULL<pos:position pos:line="12" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">dav_lockdb<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">lockdb<pos:position pos:line="13" pos:column="23"/></name></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">resource_state<pos:position pos:line="14" pos:column="23"/></name></decl>;<pos:position pos:line="14" pos:column="24"/></decl_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* If no locks provider, decline the request */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">locks_hooks<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">DAV_GET_HOOKS_LOCKS<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">r<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">locks_hooks<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">==<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">NULL<pos:position pos:line="18" pos:column="28"/></name></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">DECLINED<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></return></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">result<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">ap_xml_parse_input<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">r<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="41">&amp;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="42">doc<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call><operator pos:line="21" pos:column="46">)<pos:position pos:line="21" pos:column="47"/></operator> <operator pos:line="21" pos:column="48">!=<pos:position pos:line="21" pos:column="50"/></operator> <name pos:line="21" pos:column="51">OK<pos:position pos:line="21" pos:column="53"/></name></expr>)<pos:position pos:line="21" pos:column="54"/></condition><then pos:line="21" pos:column="54">
        <block type="pseudo"><return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">result<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="24" pos:column="5">depth<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <call><name pos:line="24" pos:column="13">dav_get_depth<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">r<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="30">DAV_INFINITY<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">depth<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">!=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal> <operator pos:line="25" pos:column="20">&amp;&amp;<pos:position pos:line="25" pos:column="30"/></operator> <name pos:line="25" pos:column="23">depth<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">!=<pos:position pos:line="25" pos:column="31"/></operator> <name pos:line="25" pos:column="32">DAV_INFINITY<pos:position pos:line="25" pos:column="44"/></name></expr>)<pos:position pos:line="25" pos:column="45"/></condition><then pos:line="25" pos:column="45"> <block pos:line="25" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">ap_log_rerror<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">APLOG_MARK<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="35">APLOG_ERR<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="46">0<pos:position pos:line="26" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">r<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="52">APLOGNO<pos:position pos:line="26" pos:column="59"/></name><argument_list pos:line="26" pos:column="59">(<argument><expr><literal type="number" pos:line="26" pos:column="60">00595<pos:position pos:line="26" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="27" pos:column="23">"Depth must be 0 or \"infinity\" for LOCK."<pos:position pos:line="27" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="28" pos:column="32"/></name></expr>;<pos:position pos:line="28" pos:column="33"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="31" pos:column="5">/* Ask repository module to resolve the resource */</comment>
    <expr_stmt><expr><name pos:line="32" pos:column="5">err<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <call><name pos:line="32" pos:column="11">dav_get_resource<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">r<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="31">0<pos:position pos:line="32" pos:column="32"/></literal></expr></argument> <comment type="block" pos:line="32" pos:column="33">/* label_allowed */</comment>, <argument><expr><literal type="number" pos:line="32" pos:column="54">0<pos:position pos:line="32" pos:column="55"/></literal></expr></argument> <comment type="block" pos:line="32" pos:column="56">/* use_checked_in */</comment>,
                           <argument><expr><operator pos:line="33" pos:column="28">&amp;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="29">resource<pos:position pos:line="33" pos:column="37"/></name></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">err<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">!=<pos:position pos:line="34" pos:column="15"/></operator> <name pos:line="34" pos:column="16">NULL<pos:position pos:line="34" pos:column="20"/></name></expr>)<pos:position pos:line="34" pos:column="21"/></condition><then pos:line="34" pos:column="21">
        <block type="pseudo"><return pos:line="35" pos:column="9">return <expr><call><name pos:line="35" pos:column="16">dav_handle_err<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">r<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">err<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">NULL<pos:position pos:line="35" pos:column="43"/></name></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></return></block></then></if>

    <comment type="block" pos:line="37" pos:column="5">/* Check if parent collection exists */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">(<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">err<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name><name pos:line="38" pos:column="16">resource<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">hooks<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">-&gt;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="33">get_parent_resource<pos:position pos:line="38" pos:column="52"/></name></name><argument_list pos:line="38" pos:column="52">(<argument><expr><name pos:line="38" pos:column="53">resource<pos:position pos:line="38" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="63">&amp;<pos:position pos:line="38" pos:column="68"/></operator><name pos:line="38" pos:column="64">parent<pos:position pos:line="38" pos:column="70"/></name></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call><operator pos:line="38" pos:column="71">)<pos:position pos:line="38" pos:column="72"/></operator> <operator pos:line="38" pos:column="73">!=<pos:position pos:line="38" pos:column="75"/></operator> <name pos:line="38" pos:column="76">NULL<pos:position pos:line="38" pos:column="80"/></name></expr>)<pos:position pos:line="38" pos:column="81"/></condition><then pos:line="38" pos:column="81"> <block pos:line="38" pos:column="82">{
        <comment type="block" pos:line="39" pos:column="9">/* ### add a higher-level description? */</comment>
        <return pos:line="40" pos:column="9">return <expr><call><name pos:line="40" pos:column="16">dav_handle_err<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">r<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="34">err<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="39">NULL<pos:position pos:line="40" pos:column="43"/></name></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="45"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">parent<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">&amp;&amp;<pos:position pos:line="42" pos:column="26"/></operator> <operator pos:line="42" pos:column="19">(<pos:position pos:line="42" pos:column="20"/></operator><operator pos:line="42" pos:column="20">!<pos:position pos:line="42" pos:column="21"/></operator><name><name pos:line="42" pos:column="21">parent<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">exists<pos:position pos:line="42" pos:column="35"/></name></name> <operator pos:line="42" pos:column="36">||<pos:position pos:line="42" pos:column="38"/></operator> <name><name pos:line="42" pos:column="39">parent<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">-&gt;<pos:position pos:line="42" pos:column="50"/></operator><name pos:line="42" pos:column="47">collection<pos:position pos:line="42" pos:column="57"/></name></name> <operator pos:line="42" pos:column="58">!=<pos:position pos:line="42" pos:column="60"/></operator> <literal type="number" pos:line="42" pos:column="61">1<pos:position pos:line="42" pos:column="62"/></literal><operator pos:line="42" pos:column="62">)<pos:position pos:line="42" pos:column="63"/></operator></expr>)<pos:position pos:line="42" pos:column="64"/></condition><then pos:line="42" pos:column="64"> <block pos:line="42" pos:column="65">{
        <expr_stmt><expr><name pos:line="43" pos:column="9">err<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <call><name pos:line="43" pos:column="15">dav_new_error<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><name><name pos:line="43" pos:column="29">r<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">-&gt;<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="32">pool<pos:position pos:line="43" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="38">HTTP_CONFLICT<pos:position pos:line="43" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="53">0<pos:position pos:line="43" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="56">0<pos:position pos:line="43" pos:column="57"/></literal></expr></argument>,
                           <argument><expr><call><name pos:line="44" pos:column="28">apr_psprintf<pos:position pos:line="44" pos:column="40"/></name><argument_list pos:line="44" pos:column="40">(<argument><expr><name><name pos:line="44" pos:column="41">r<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">-&gt;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="44">pool<pos:position pos:line="44" pos:column="48"/></name></name></expr></argument>,
                                        <argument><expr><literal type="string" pos:line="45" pos:column="41">"The parent resource of %s does not "<pos:position pos:line="45" pos:column="78"/></literal>
                                        <literal type="string" pos:line="46" pos:column="41">"exist or is not a collection."<pos:position pos:line="46" pos:column="72"/></literal></expr></argument>,
                                        <argument><expr><call><name pos:line="47" pos:column="41">ap_escape_html<pos:position pos:line="47" pos:column="55"/></name><argument_list pos:line="47" pos:column="55">(<argument><expr><name><name pos:line="47" pos:column="56">r<pos:position pos:line="47" pos:column="57"/></name><operator pos:line="47" pos:column="57">-&gt;<pos:position pos:line="47" pos:column="62"/></operator><name pos:line="47" pos:column="59">pool<pos:position pos:line="47" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="65">r<pos:position pos:line="47" pos:column="66"/></name><operator pos:line="47" pos:column="66">-&gt;<pos:position pos:line="47" pos:column="71"/></operator><name pos:line="47" pos:column="68">uri<pos:position pos:line="47" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="75"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><call><name pos:line="48" pos:column="16">dav_handle_err<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><name pos:line="48" pos:column="31">r<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="34">err<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="39">NULL<pos:position pos:line="48" pos:column="43"/></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="45"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="51" pos:column="5">/*
     * Open writable. Unless an error occurs, we'll be
     * writing into the database.
     */</comment>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">(<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">err<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <call pos:line="55" pos:column="16">(<modifier pos:line="55" pos:column="17">*<pos:position pos:line="55" pos:column="18"/></modifier><name><name pos:line="55" pos:column="18">locks_hooks<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">-&gt;<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="31">open_lockdb<pos:position pos:line="55" pos:column="42"/></name></name>)<argument_list pos:line="55" pos:column="43">(<argument><expr><name pos:line="55" pos:column="44">r<pos:position pos:line="55" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="47">0<pos:position pos:line="55" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="50">0<pos:position pos:line="55" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="55" pos:column="53">&amp;<pos:position pos:line="55" pos:column="58"/></operator><name pos:line="55" pos:column="54">lockdb<pos:position pos:line="55" pos:column="60"/></name></expr></argument>)<pos:position pos:line="55" pos:column="61"/></argument_list></call><operator pos:line="55" pos:column="61">)<pos:position pos:line="55" pos:column="62"/></operator> <operator pos:line="55" pos:column="63">!=<pos:position pos:line="55" pos:column="65"/></operator> <name pos:line="55" pos:column="66">NULL<pos:position pos:line="55" pos:column="70"/></name></expr>)<pos:position pos:line="55" pos:column="71"/></condition><then pos:line="55" pos:column="71"> <block pos:line="55" pos:column="72">{
        <comment type="block" pos:line="56" pos:column="9">/* ### add a higher-level description? */</comment>
        <return pos:line="57" pos:column="9">return <expr><call><name pos:line="57" pos:column="16">dav_handle_err<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">r<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="34">err<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="39">NULL<pos:position pos:line="57" pos:column="43"/></name></expr></argument>)<pos:position pos:line="57" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="45"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">doc<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">!=<pos:position pos:line="60" pos:column="15"/></operator> <name pos:line="60" pos:column="16">NULL<pos:position pos:line="60" pos:column="20"/></name></expr>)<pos:position pos:line="60" pos:column="21"/></condition><then pos:line="60" pos:column="21"> <block pos:line="60" pos:column="22">{
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">(<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">err<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">=<pos:position pos:line="61" pos:column="19"/></operator> <call><name pos:line="61" pos:column="20">dav_lock_parse_lockinfo<pos:position pos:line="61" pos:column="43"/></name><argument_list pos:line="61" pos:column="43">(<argument><expr><name pos:line="61" pos:column="44">r<pos:position pos:line="61" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="47">resource<pos:position pos:line="61" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="57">lockdb<pos:position pos:line="61" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="65">doc<pos:position pos:line="61" pos:column="68"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="62" pos:column="48">&amp;<pos:position pos:line="62" pos:column="53"/></operator><name pos:line="62" pos:column="49">lock<pos:position pos:line="62" pos:column="53"/></name></expr></argument>)<pos:position pos:line="62" pos:column="54"/></argument_list></call><operator pos:line="62" pos:column="54">)<pos:position pos:line="62" pos:column="55"/></operator> <operator pos:line="62" pos:column="56">!=<pos:position pos:line="62" pos:column="58"/></operator> <name pos:line="62" pos:column="59">NULL<pos:position pos:line="62" pos:column="63"/></name></expr>)<pos:position pos:line="62" pos:column="64"/></condition><then pos:line="62" pos:column="64"> <block pos:line="62" pos:column="65">{
            <comment type="block" pos:line="63" pos:column="13">/* ### add a higher-level description to err? */</comment>
            <goto pos:line="64" pos:column="13">goto <name pos:line="64" pos:column="18">error<pos:position pos:line="64" pos:column="23"/></name>;<pos:position pos:line="64" pos:column="24"/></goto>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="66" pos:column="9">new_lock_request<pos:position pos:line="66" pos:column="25"/></name> <operator pos:line="66" pos:column="26">=<pos:position pos:line="66" pos:column="27"/></operator> <literal type="number" pos:line="66" pos:column="28">1<pos:position pos:line="66" pos:column="29"/></literal></expr>;<pos:position pos:line="66" pos:column="30"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="68" pos:column="9">lock<pos:position pos:line="68" pos:column="13"/></name><operator pos:line="68" pos:column="13">-&gt;<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="15">auth_user<pos:position pos:line="68" pos:column="24"/></name></name> <operator pos:line="68" pos:column="25">=<pos:position pos:line="68" pos:column="26"/></operator> <call><name pos:line="68" pos:column="27">apr_pstrdup<pos:position pos:line="68" pos:column="38"/></name><argument_list pos:line="68" pos:column="38">(<argument><expr><name><name pos:line="68" pos:column="39">r<pos:position pos:line="68" pos:column="40"/></name><operator pos:line="68" pos:column="40">-&gt;<pos:position pos:line="68" pos:column="45"/></operator><name pos:line="68" pos:column="42">pool<pos:position pos:line="68" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="48">r<pos:position pos:line="68" pos:column="49"/></name><operator pos:line="68" pos:column="49">-&gt;<pos:position pos:line="68" pos:column="54"/></operator><name pos:line="68" pos:column="51">user<pos:position pos:line="68" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="71" pos:column="5">resource_state<pos:position pos:line="71" pos:column="19"/></name> <operator pos:line="71" pos:column="20">=<pos:position pos:line="71" pos:column="21"/></operator> <call><name pos:line="71" pos:column="22">dav_get_resource_state<pos:position pos:line="71" pos:column="44"/></name><argument_list pos:line="71" pos:column="44">(<argument><expr><name pos:line="71" pos:column="45">r<pos:position pos:line="71" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="48">resource<pos:position pos:line="71" pos:column="56"/></name></expr></argument>)<pos:position pos:line="71" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="58"/></expr_stmt>

    <comment type="block" pos:line="73" pos:column="5">/*
     * Check If-Headers and existing locks.
     *
     * If this will create a locknull resource, then the LOCK will affect
     * the parent collection (much like a PUT/MKCOL). For that case, we must
     * validate the parent resource's conditions.
     */</comment>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><operator pos:line="80" pos:column="9">(<pos:position pos:line="80" pos:column="10"/></operator><name pos:line="80" pos:column="10">err<pos:position pos:line="80" pos:column="13"/></name> <operator pos:line="80" pos:column="14">=<pos:position pos:line="80" pos:column="15"/></operator> <call><name pos:line="80" pos:column="16">dav_validate_request<pos:position pos:line="80" pos:column="36"/></name><argument_list pos:line="80" pos:column="36">(<argument><expr><name pos:line="80" pos:column="37">r<pos:position pos:line="80" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="40">resource<pos:position pos:line="80" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="50">depth<pos:position pos:line="80" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="57">NULL<pos:position pos:line="80" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="63">&amp;<pos:position pos:line="80" pos:column="68"/></operator><name pos:line="80" pos:column="64">multi_response<pos:position pos:line="80" pos:column="78"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="81" pos:column="37">(<pos:position pos:line="81" pos:column="38"/></operator><ternary><condition><expr><name pos:line="81" pos:column="38">resource_state<pos:position pos:line="81" pos:column="52"/></name> <operator pos:line="81" pos:column="53">==<pos:position pos:line="81" pos:column="55"/></operator> <name pos:line="81" pos:column="56">DAV_RESOURCE_NULL<pos:position pos:line="81" pos:column="73"/></name></expr>
                                     ?<pos:position pos:line="82" pos:column="39"/></condition><then pos:line="82" pos:column="39"> <expr><name pos:line="82" pos:column="40">DAV_VALIDATE_PARENT<pos:position pos:line="82" pos:column="59"/></name></expr>
                                     <pos:position pos:line="83" pos:column="38"/></then><else pos:line="83" pos:column="38">: <expr><name pos:line="83" pos:column="40">DAV_VALIDATE_RESOURCE<pos:position pos:line="83" pos:column="61"/></name></expr></else></ternary><operator pos:line="83" pos:column="61">)<pos:position pos:line="83" pos:column="62"/></operator>
                                    <operator pos:line="84" pos:column="37">|<pos:position pos:line="84" pos:column="38"/></operator> <operator pos:line="84" pos:column="39">(<pos:position pos:line="84" pos:column="40"/></operator><ternary><condition><expr><name pos:line="84" pos:column="40">new_lock_request<pos:position pos:line="84" pos:column="56"/></name></expr> ?<pos:position pos:line="84" pos:column="58"/></condition><then pos:line="84" pos:column="58"> <expr><name><name pos:line="84" pos:column="59">lock<pos:position pos:line="84" pos:column="63"/></name><operator pos:line="84" pos:column="63">-&gt;<pos:position pos:line="84" pos:column="68"/></operator><name pos:line="84" pos:column="65">scope<pos:position pos:line="84" pos:column="70"/></name></name></expr> <pos:position pos:line="84" pos:column="71"/></then><else pos:line="84" pos:column="71">: <expr><literal type="number" pos:line="84" pos:column="73">0<pos:position pos:line="84" pos:column="74"/></literal></expr></else></ternary><operator pos:line="84" pos:column="74">)<pos:position pos:line="84" pos:column="75"/></operator>
                                    <operator pos:line="85" pos:column="37">|<pos:position pos:line="85" pos:column="38"/></operator> <name pos:line="85" pos:column="39">DAV_VALIDATE_ADD_LD<pos:position pos:line="85" pos:column="58"/></name></expr></argument>,
                                    <argument><expr><name pos:line="86" pos:column="37">lockdb<pos:position pos:line="86" pos:column="43"/></name></expr></argument>)<pos:position pos:line="86" pos:column="44"/></argument_list></call><operator pos:line="86" pos:column="44">)<pos:position pos:line="86" pos:column="45"/></operator> <operator pos:line="86" pos:column="46">!=<pos:position pos:line="86" pos:column="48"/></operator> <name pos:line="86" pos:column="49">OK<pos:position pos:line="86" pos:column="51"/></name></expr>)<pos:position pos:line="86" pos:column="52"/></condition><then pos:line="86" pos:column="52"> <block pos:line="86" pos:column="53">{
        <expr_stmt><expr><name pos:line="87" pos:column="9">err<pos:position pos:line="87" pos:column="12"/></name> <operator pos:line="87" pos:column="13">=<pos:position pos:line="87" pos:column="14"/></operator> <call><name pos:line="87" pos:column="15">dav_push_error<pos:position pos:line="87" pos:column="29"/></name><argument_list pos:line="87" pos:column="29">(<argument><expr><name><name pos:line="87" pos:column="30">r<pos:position pos:line="87" pos:column="31"/></name><operator pos:line="87" pos:column="31">-&gt;<pos:position pos:line="87" pos:column="36"/></operator><name pos:line="87" pos:column="33">pool<pos:position pos:line="87" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="39">err<pos:position pos:line="87" pos:column="42"/></name><operator pos:line="87" pos:column="42">-&gt;<pos:position pos:line="87" pos:column="47"/></operator><name pos:line="87" pos:column="44">status<pos:position pos:line="87" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="52">0<pos:position pos:line="87" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="88" pos:column="30">apr_psprintf<pos:position pos:line="88" pos:column="42"/></name><argument_list pos:line="88" pos:column="42">(<argument><expr><name><name pos:line="88" pos:column="43">r<pos:position pos:line="88" pos:column="44"/></name><operator pos:line="88" pos:column="44">-&gt;<pos:position pos:line="88" pos:column="49"/></operator><name pos:line="88" pos:column="46">pool<pos:position pos:line="88" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="89" pos:column="43">"Could not LOCK %s due to a failed "<pos:position pos:line="89" pos:column="79"/></literal>
                                          <literal type="string" pos:line="90" pos:column="43">"precondition (e.g. other locks)."<pos:position pos:line="90" pos:column="77"/></literal></expr></argument>,
                                          <argument><expr><call><name pos:line="91" pos:column="43">ap_escape_html<pos:position pos:line="91" pos:column="57"/></name><argument_list pos:line="91" pos:column="57">(<argument><expr><name><name pos:line="91" pos:column="58">r<pos:position pos:line="91" pos:column="59"/></name><operator pos:line="91" pos:column="59">-&gt;<pos:position pos:line="91" pos:column="64"/></operator><name pos:line="91" pos:column="61">pool<pos:position pos:line="91" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="67">r<pos:position pos:line="91" pos:column="68"/></name><operator pos:line="91" pos:column="68">-&gt;<pos:position pos:line="91" pos:column="73"/></operator><name pos:line="91" pos:column="70">uri<pos:position pos:line="91" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="75"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="92" pos:column="30">err<pos:position pos:line="92" pos:column="33"/></name></expr></argument>)<pos:position pos:line="92" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="35"/></expr_stmt>
        <goto pos:line="93" pos:column="9">goto <name pos:line="93" pos:column="14">error<pos:position pos:line="93" pos:column="19"/></name>;<pos:position pos:line="93" pos:column="20"/></goto>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name pos:line="96" pos:column="9">new_lock_request<pos:position pos:line="96" pos:column="25"/></name> <operator pos:line="96" pos:column="26">==<pos:position pos:line="96" pos:column="28"/></operator> <literal type="number" pos:line="96" pos:column="29">0<pos:position pos:line="96" pos:column="30"/></literal></expr>)<pos:position pos:line="96" pos:column="31"/></condition><then pos:line="96" pos:column="31"> <block pos:line="96" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="97" pos:column="9">dav_locktoken_list<pos:position pos:line="97" pos:column="27"/></name> <modifier pos:line="97" pos:column="28">*<pos:position pos:line="97" pos:column="29"/></modifier></type><name pos:line="97" pos:column="29">ltl<pos:position pos:line="97" pos:column="32"/></name></decl>;<pos:position pos:line="97" pos:column="33"/></decl_stmt>

        <comment type="block" pos:line="99" pos:column="9">/*
         * Refresh request
         * ### Assumption:  We can renew multiple locks on the same resource
         * ### at once. First harvest all the positive lock-tokens given in
         * ### the If header. Then modify the lock entries for this resource
         * ### with the new Timeout val.
         */</comment>

        <if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><operator pos:line="107" pos:column="13">(<pos:position pos:line="107" pos:column="14"/></operator><name pos:line="107" pos:column="14">err<pos:position pos:line="107" pos:column="17"/></name> <operator pos:line="107" pos:column="18">=<pos:position pos:line="107" pos:column="19"/></operator> <call><name pos:line="107" pos:column="20">dav_get_locktoken_list<pos:position pos:line="107" pos:column="42"/></name><argument_list pos:line="107" pos:column="42">(<argument><expr><name pos:line="107" pos:column="43">r<pos:position pos:line="107" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="46">&amp;<pos:position pos:line="107" pos:column="51"/></operator><name pos:line="107" pos:column="47">ltl<pos:position pos:line="107" pos:column="50"/></name></expr></argument>)<pos:position pos:line="107" pos:column="51"/></argument_list></call><operator pos:line="107" pos:column="51">)<pos:position pos:line="107" pos:column="52"/></operator> <operator pos:line="107" pos:column="53">!=<pos:position pos:line="107" pos:column="55"/></operator> <name pos:line="107" pos:column="56">NULL<pos:position pos:line="107" pos:column="60"/></name></expr>)<pos:position pos:line="107" pos:column="61"/></condition><then pos:line="107" pos:column="61"> <block pos:line="107" pos:column="62">{
            <expr_stmt><expr><name pos:line="108" pos:column="13">err<pos:position pos:line="108" pos:column="16"/></name> <operator pos:line="108" pos:column="17">=<pos:position pos:line="108" pos:column="18"/></operator> <call><name pos:line="108" pos:column="19">dav_push_error<pos:position pos:line="108" pos:column="33"/></name><argument_list pos:line="108" pos:column="33">(<argument><expr><name><name pos:line="108" pos:column="34">r<pos:position pos:line="108" pos:column="35"/></name><operator pos:line="108" pos:column="35">-&gt;<pos:position pos:line="108" pos:column="40"/></operator><name pos:line="108" pos:column="37">pool<pos:position pos:line="108" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="43">err<pos:position pos:line="108" pos:column="46"/></name><operator pos:line="108" pos:column="46">-&gt;<pos:position pos:line="108" pos:column="51"/></operator><name pos:line="108" pos:column="48">status<pos:position pos:line="108" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="56">0<pos:position pos:line="108" pos:column="57"/></literal></expr></argument>,
                                 <argument><expr><call><name pos:line="109" pos:column="34">apr_psprintf<pos:position pos:line="109" pos:column="46"/></name><argument_list pos:line="109" pos:column="46">(<argument><expr><name><name pos:line="109" pos:column="47">r<pos:position pos:line="109" pos:column="48"/></name><operator pos:line="109" pos:column="48">-&gt;<pos:position pos:line="109" pos:column="53"/></operator><name pos:line="109" pos:column="50">pool<pos:position pos:line="109" pos:column="54"/></name></name></expr></argument>,
                                              <argument><expr><literal type="string" pos:line="110" pos:column="47">"The lock refresh for %s failed "<pos:position pos:line="110" pos:column="80"/></literal>
                                              <literal type="string" pos:line="111" pos:column="47">"because no lock tokens were "<pos:position pos:line="111" pos:column="77"/></literal>
                                              <literal type="string" pos:line="112" pos:column="47">"specified in an \"If:\" "<pos:position pos:line="112" pos:column="73"/></literal>
                                              <literal type="string" pos:line="113" pos:column="47">"header."<pos:position pos:line="113" pos:column="56"/></literal></expr></argument>,
                                              <argument><expr><call><name pos:line="114" pos:column="47">ap_escape_html<pos:position pos:line="114" pos:column="61"/></name><argument_list pos:line="114" pos:column="61">(<argument><expr><name><name pos:line="114" pos:column="62">r<pos:position pos:line="114" pos:column="63"/></name><operator pos:line="114" pos:column="63">-&gt;<pos:position pos:line="114" pos:column="68"/></operator><name pos:line="114" pos:column="65">pool<pos:position pos:line="114" pos:column="69"/></name></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="71">r<pos:position pos:line="114" pos:column="72"/></name><operator pos:line="114" pos:column="72">-&gt;<pos:position pos:line="114" pos:column="77"/></operator><name pos:line="114" pos:column="74">uri<pos:position pos:line="114" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="114" pos:column="79"/></argument_list></call></expr></argument>,
                                 <argument><expr><name pos:line="115" pos:column="34">err<pos:position pos:line="115" pos:column="37"/></name></expr></argument>)<pos:position pos:line="115" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="39"/></expr_stmt>
            <goto pos:line="116" pos:column="13">goto <name pos:line="116" pos:column="18">error<pos:position pos:line="116" pos:column="23"/></name>;<pos:position pos:line="116" pos:column="24"/></goto>
        }<pos:position pos:line="117" pos:column="10"/></block></then></if>

        <if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><operator pos:line="119" pos:column="13">(<pos:position pos:line="119" pos:column="14"/></operator><name pos:line="119" pos:column="14">err<pos:position pos:line="119" pos:column="17"/></name> <operator pos:line="119" pos:column="18">=<pos:position pos:line="119" pos:column="19"/></operator> <call pos:line="119" pos:column="20">(<modifier pos:line="119" pos:column="21">*<pos:position pos:line="119" pos:column="22"/></modifier><name><name pos:line="119" pos:column="22">locks_hooks<pos:position pos:line="119" pos:column="33"/></name><operator pos:line="119" pos:column="33">-&gt;<pos:position pos:line="119" pos:column="38"/></operator><name pos:line="119" pos:column="35">refresh_locks<pos:position pos:line="119" pos:column="48"/></name></name>)<argument_list pos:line="119" pos:column="49">(<argument><expr><name pos:line="119" pos:column="50">lockdb<pos:position pos:line="119" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="58">resource<pos:position pos:line="119" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="68">ltl<pos:position pos:line="119" pos:column="71"/></name></expr></argument>,
                                                 <argument><expr><call><name pos:line="120" pos:column="50">dav_get_timeout<pos:position pos:line="120" pos:column="65"/></name><argument_list pos:line="120" pos:column="65">(<argument><expr><name pos:line="120" pos:column="66">r<pos:position pos:line="120" pos:column="67"/></name></expr></argument>)<pos:position pos:line="120" pos:column="68"/></argument_list></call></expr></argument>,
                                                 <argument><expr><operator pos:line="121" pos:column="50">&amp;<pos:position pos:line="121" pos:column="55"/></operator><name pos:line="121" pos:column="51">lock<pos:position pos:line="121" pos:column="55"/></name></expr></argument>)<pos:position pos:line="121" pos:column="56"/></argument_list></call><operator pos:line="121" pos:column="56">)<pos:position pos:line="121" pos:column="57"/></operator> <operator pos:line="121" pos:column="58">!=<pos:position pos:line="121" pos:column="60"/></operator> <name pos:line="121" pos:column="61">NULL<pos:position pos:line="121" pos:column="65"/></name></expr>)<pos:position pos:line="121" pos:column="66"/></condition><then pos:line="121" pos:column="66"> <block pos:line="121" pos:column="67">{
            <comment type="block" pos:line="122" pos:column="13">/* ### add a higher-level description to err? */</comment>
            <goto pos:line="123" pos:column="13">goto <name pos:line="123" pos:column="18">error<pos:position pos:line="123" pos:column="23"/></name>;<pos:position pos:line="123" pos:column="24"/></goto>
        }<pos:position pos:line="124" pos:column="10"/></block></then></if>
    }<pos:position pos:line="125" pos:column="6"/></block></then> <else pos:line="125" pos:column="7">else <block pos:line="125" pos:column="12">{
        <comment type="block" pos:line="126" pos:column="9">/* New lock request */</comment>
        <decl_stmt><decl><type><name pos:line="127" pos:column="9">char<pos:position pos:line="127" pos:column="13"/></name> <modifier pos:line="127" pos:column="14">*<pos:position pos:line="127" pos:column="15"/></modifier></type><name pos:line="127" pos:column="15">locktoken_txt<pos:position pos:line="127" pos:column="28"/></name></decl>;<pos:position pos:line="127" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="128" pos:column="9">dav_dir_conf<pos:position pos:line="128" pos:column="21"/></name> <modifier pos:line="128" pos:column="22">*<pos:position pos:line="128" pos:column="23"/></modifier></type><name pos:line="128" pos:column="23">conf<pos:position pos:line="128" pos:column="27"/></name></decl>;<pos:position pos:line="128" pos:column="28"/></decl_stmt>

        <expr_stmt><expr><name pos:line="130" pos:column="9">conf<pos:position pos:line="130" pos:column="13"/></name> <operator pos:line="130" pos:column="14">=<pos:position pos:line="130" pos:column="15"/></operator> <operator pos:line="130" pos:column="16">(<pos:position pos:line="130" pos:column="17"/></operator><name pos:line="130" pos:column="17">dav_dir_conf<pos:position pos:line="130" pos:column="29"/></name> <operator pos:line="130" pos:column="30">*<pos:position pos:line="130" pos:column="31"/></operator><operator pos:line="130" pos:column="31">)<pos:position pos:line="130" pos:column="32"/></operator><call><name pos:line="130" pos:column="32">ap_get_module_config<pos:position pos:line="130" pos:column="52"/></name><argument_list pos:line="130" pos:column="52">(<argument><expr><name><name pos:line="130" pos:column="53">r<pos:position pos:line="130" pos:column="54"/></name><operator pos:line="130" pos:column="54">-&gt;<pos:position pos:line="130" pos:column="59"/></operator><name pos:line="130" pos:column="56">per_dir_config<pos:position pos:line="130" pos:column="70"/></name></name></expr></argument>,
                                                    <argument><expr><operator pos:line="131" pos:column="53">&amp;<pos:position pos:line="131" pos:column="58"/></operator><name pos:line="131" pos:column="54">dav_module<pos:position pos:line="131" pos:column="64"/></name></expr></argument>)<pos:position pos:line="131" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="66"/></expr_stmt>

        <comment type="block" pos:line="133" pos:column="9">/* apply lower bound (if any) from DAVMinTimeout directive */</comment>
        <if pos:line="134" pos:column="9">if <condition pos:line="134" pos:column="12">(<expr><name><name pos:line="134" pos:column="13">lock<pos:position pos:line="134" pos:column="17"/></name><operator pos:line="134" pos:column="17">-&gt;<pos:position pos:line="134" pos:column="22"/></operator><name pos:line="134" pos:column="19">timeout<pos:position pos:line="134" pos:column="26"/></name></name> <operator pos:line="134" pos:column="27">!=<pos:position pos:line="134" pos:column="29"/></operator> <name pos:line="134" pos:column="30">DAV_TIMEOUT_INFINITE<pos:position pos:line="134" pos:column="50"/></name>
            <operator pos:line="135" pos:column="13">&amp;&amp;<pos:position pos:line="135" pos:column="23"/></operator> <name><name pos:line="135" pos:column="16">lock<pos:position pos:line="135" pos:column="20"/></name><operator pos:line="135" pos:column="20">-&gt;<pos:position pos:line="135" pos:column="25"/></operator><name pos:line="135" pos:column="22">timeout<pos:position pos:line="135" pos:column="29"/></name></name> <operator pos:line="135" pos:column="30">&lt;<pos:position pos:line="135" pos:column="34"/></operator> <call><name pos:line="135" pos:column="32">time<pos:position pos:line="135" pos:column="36"/></name><argument_list pos:line="135" pos:column="36">(<argument><expr><name pos:line="135" pos:column="37">NULL<pos:position pos:line="135" pos:column="41"/></name></expr></argument>)<pos:position pos:line="135" pos:column="42"/></argument_list></call> <operator pos:line="135" pos:column="43">+<pos:position pos:line="135" pos:column="44"/></operator> <name><name pos:line="135" pos:column="45">conf<pos:position pos:line="135" pos:column="49"/></name><operator pos:line="135" pos:column="49">-&gt;<pos:position pos:line="135" pos:column="54"/></operator><name pos:line="135" pos:column="51">locktimeout<pos:position pos:line="135" pos:column="62"/></name></name></expr>)<pos:position pos:line="135" pos:column="63"/></condition><then pos:line="135" pos:column="63">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="136" pos:column="13">lock<pos:position pos:line="136" pos:column="17"/></name><operator pos:line="136" pos:column="17">-&gt;<pos:position pos:line="136" pos:column="22"/></operator><name pos:line="136" pos:column="19">timeout<pos:position pos:line="136" pos:column="26"/></name></name> <operator pos:line="136" pos:column="27">=<pos:position pos:line="136" pos:column="28"/></operator> <call><name pos:line="136" pos:column="29">time<pos:position pos:line="136" pos:column="33"/></name><argument_list pos:line="136" pos:column="33">(<argument><expr><name pos:line="136" pos:column="34">NULL<pos:position pos:line="136" pos:column="38"/></name></expr></argument>)<pos:position pos:line="136" pos:column="39"/></argument_list></call> <operator pos:line="136" pos:column="40">+<pos:position pos:line="136" pos:column="41"/></operator> <name><name pos:line="136" pos:column="42">conf<pos:position pos:line="136" pos:column="46"/></name><operator pos:line="136" pos:column="46">-&gt;<pos:position pos:line="136" pos:column="51"/></operator><name pos:line="136" pos:column="48">locktimeout<pos:position pos:line="136" pos:column="59"/></name></name></expr>;<pos:position pos:line="136" pos:column="60"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="138" pos:column="9">err<pos:position pos:line="138" pos:column="12"/></name> <operator pos:line="138" pos:column="13">=<pos:position pos:line="138" pos:column="14"/></operator> <call><name pos:line="138" pos:column="15">dav_add_lock<pos:position pos:line="138" pos:column="27"/></name><argument_list pos:line="138" pos:column="27">(<argument><expr><name pos:line="138" pos:column="28">r<pos:position pos:line="138" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="31">resource<pos:position pos:line="138" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="41">lockdb<pos:position pos:line="138" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="49">lock<pos:position pos:line="138" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="138" pos:column="55">&amp;<pos:position pos:line="138" pos:column="60"/></operator><name pos:line="138" pos:column="56">multi_response<pos:position pos:line="138" pos:column="70"/></name></expr></argument>)<pos:position pos:line="138" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="72"/></expr_stmt>
        <if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><name pos:line="139" pos:column="13">err<pos:position pos:line="139" pos:column="16"/></name> <operator pos:line="139" pos:column="17">!=<pos:position pos:line="139" pos:column="19"/></operator> <name pos:line="139" pos:column="20">NULL<pos:position pos:line="139" pos:column="24"/></name></expr>)<pos:position pos:line="139" pos:column="25"/></condition><then pos:line="139" pos:column="25"> <block pos:line="139" pos:column="26">{
            <comment type="block" pos:line="140" pos:column="13">/* ### add a higher-level description to err? */</comment>
            <goto pos:line="141" pos:column="13">goto <name pos:line="141" pos:column="18">error<pos:position pos:line="141" pos:column="23"/></name>;<pos:position pos:line="141" pos:column="24"/></goto>
        }<pos:position pos:line="142" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="144" pos:column="9">locktoken_txt<pos:position pos:line="144" pos:column="22"/></name> <operator pos:line="144" pos:column="23">=<pos:position pos:line="144" pos:column="24"/></operator> <call><name pos:line="144" pos:column="25">apr_pstrcat<pos:position pos:line="144" pos:column="36"/></name><argument_list pos:line="144" pos:column="36">(<argument><expr><name><name pos:line="144" pos:column="37">r<pos:position pos:line="144" pos:column="38"/></name><operator pos:line="144" pos:column="38">-&gt;<pos:position pos:line="144" pos:column="43"/></operator><name pos:line="144" pos:column="40">pool<pos:position pos:line="144" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="46">"&lt;"<pos:position pos:line="144" pos:column="52"/></literal></expr></argument>,
                                    <argument><expr><call pos:line="145" pos:column="37">(<modifier pos:line="145" pos:column="38">*<pos:position pos:line="145" pos:column="39"/></modifier><name><name pos:line="145" pos:column="39">locks_hooks<pos:position pos:line="145" pos:column="50"/></name><operator pos:line="145" pos:column="50">-&gt;<pos:position pos:line="145" pos:column="55"/></operator><name pos:line="145" pos:column="52">format_locktoken<pos:position pos:line="145" pos:column="68"/></name></name>)<argument_list pos:line="145" pos:column="69">(<argument><expr><name><name pos:line="145" pos:column="70">r<pos:position pos:line="145" pos:column="71"/></name><operator pos:line="145" pos:column="71">-&gt;<pos:position pos:line="145" pos:column="76"/></operator><name pos:line="145" pos:column="73">pool<pos:position pos:line="145" pos:column="77"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="146" pos:column="41">lock<pos:position pos:line="146" pos:column="45"/></name><operator pos:line="146" pos:column="45">-&gt;<pos:position pos:line="146" pos:column="50"/></operator><name pos:line="146" pos:column="47">locktoken<pos:position pos:line="146" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="146" pos:column="57"/></argument_list></call></expr></argument>,
                                    <argument><expr><literal type="string" pos:line="147" pos:column="37">"&gt;"<pos:position pos:line="147" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="147" pos:column="42">NULL<pos:position pos:line="147" pos:column="46"/></name></expr></argument>)<pos:position pos:line="147" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="48"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="149" pos:column="9">apr_table_setn<pos:position pos:line="149" pos:column="23"/></name><argument_list pos:line="149" pos:column="23">(<argument><expr><name><name pos:line="149" pos:column="24">r<pos:position pos:line="149" pos:column="25"/></name><operator pos:line="149" pos:column="25">-&gt;<pos:position pos:line="149" pos:column="30"/></operator><name pos:line="149" pos:column="27">headers_out<pos:position pos:line="149" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="40">"Lock-Token"<pos:position pos:line="149" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="149" pos:column="54">locktoken_txt<pos:position pos:line="149" pos:column="67"/></name></expr></argument>)<pos:position pos:line="149" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="150" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call pos:line="152" pos:column="5">(<modifier pos:line="152" pos:column="6">*<pos:position pos:line="152" pos:column="7"/></modifier><name><name pos:line="152" pos:column="7">locks_hooks<pos:position pos:line="152" pos:column="18"/></name><operator pos:line="152" pos:column="18">-&gt;<pos:position pos:line="152" pos:column="23"/></operator><name pos:line="152" pos:column="20">close_lockdb<pos:position pos:line="152" pos:column="32"/></name></name>)<argument_list pos:line="152" pos:column="33">(<argument><expr><name pos:line="152" pos:column="34">lockdb<pos:position pos:line="152" pos:column="40"/></name></expr></argument>)<pos:position pos:line="152" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="154" pos:column="5">r<pos:position pos:line="154" pos:column="6"/></name><operator pos:line="154" pos:column="6">-&gt;<pos:position pos:line="154" pos:column="11"/></operator><name pos:line="154" pos:column="8">status<pos:position pos:line="154" pos:column="14"/></name></name> <operator pos:line="154" pos:column="15">=<pos:position pos:line="154" pos:column="16"/></operator> <name pos:line="154" pos:column="17">HTTP_OK<pos:position pos:line="154" pos:column="24"/></name></expr>;<pos:position pos:line="154" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="155" pos:column="5">ap_set_content_type<pos:position pos:line="155" pos:column="24"/></name><argument_list pos:line="155" pos:column="24">(<argument><expr><name pos:line="155" pos:column="25">r<pos:position pos:line="155" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="28">DAV_XML_CONTENT_TYPE<pos:position pos:line="155" pos:column="48"/></name></expr></argument>)<pos:position pos:line="155" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="50"/></expr_stmt>

    <macro><name pos:line="157" pos:column="5">ap_rputs<pos:position pos:line="157" pos:column="13"/></name><argument_list pos:line="157" pos:column="13">(<argument pos:line="157" pos:column="14">DAV_XML_HEADER DEBUG_CR <literal type="string" pos:line="157" pos:column="38">"&lt;D:prop xmlns:D=\"DAV:\"&gt;"<pos:position pos:line="157" pos:column="71"/></literal> DEBUG_CR<pos:position pos:line="157" pos:column="74"/></argument>, <argument pos:line="157" pos:column="76">r<pos:position pos:line="157" pos:column="77"/></argument>)<pos:position pos:line="157" pos:column="78"/></argument_list></macro><empty_stmt pos:line="157" pos:column="78">;<pos:position pos:line="157" pos:column="79"/></empty_stmt>
    <if pos:line="158" pos:column="5">if <condition pos:line="158" pos:column="8">(<expr><name pos:line="158" pos:column="9">lock<pos:position pos:line="158" pos:column="13"/></name> <operator pos:line="158" pos:column="14">==<pos:position pos:line="158" pos:column="16"/></operator> <name pos:line="158" pos:column="17">NULL<pos:position pos:line="158" pos:column="21"/></name></expr>)<pos:position pos:line="158" pos:column="22"/></condition><then pos:line="158" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="159" pos:column="9">ap_rputs<pos:position pos:line="159" pos:column="17"/></name><argument_list pos:line="159" pos:column="17">(<argument><expr><literal type="string" pos:line="159" pos:column="18">"&lt;D:lockdiscovery/&gt;"<pos:position pos:line="159" pos:column="44"/></literal> <name pos:line="159" pos:column="39">DEBUG_CR<pos:position pos:line="159" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="49">r<pos:position pos:line="159" pos:column="50"/></name></expr></argument>)<pos:position pos:line="159" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="52"/></expr_stmt></block></then>
    <else pos:line="160" pos:column="5">else <block pos:line="160" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="161" pos:column="9">ap_rprintf<pos:position pos:line="161" pos:column="19"/></name><argument_list pos:line="161" pos:column="19">(<argument><expr><name pos:line="161" pos:column="20">r<pos:position pos:line="161" pos:column="21"/></name></expr></argument>,
                   <argument><expr><literal type="string" pos:line="162" pos:column="20">"&lt;D:lockdiscovery&gt;"<pos:position pos:line="162" pos:column="45"/></literal> <name pos:line="162" pos:column="40">DEBUG_CR<pos:position pos:line="162" pos:column="48"/></name>
                   <literal type="string" pos:line="163" pos:column="20">"%s"<pos:position pos:line="163" pos:column="24"/></literal> <name pos:line="163" pos:column="25">DEBUG_CR<pos:position pos:line="163" pos:column="33"/></name>
                   <literal type="string" pos:line="164" pos:column="20">"&lt;/D:lockdiscovery&gt;"<pos:position pos:line="164" pos:column="46"/></literal> <name pos:line="164" pos:column="41">DEBUG_CR<pos:position pos:line="164" pos:column="49"/></name></expr></argument>,
                   <argument><expr><call><name pos:line="165" pos:column="20">dav_lock_get_activelock<pos:position pos:line="165" pos:column="43"/></name><argument_list pos:line="165" pos:column="43">(<argument><expr><name pos:line="165" pos:column="44">r<pos:position pos:line="165" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="47">lock<pos:position pos:line="165" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="53">NULL<pos:position pos:line="165" pos:column="57"/></name></expr></argument>)<pos:position pos:line="165" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="165" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="166" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="167" pos:column="5">ap_rputs<pos:position pos:line="167" pos:column="13"/></name><argument_list pos:line="167" pos:column="13">(<argument><expr><literal type="string" pos:line="167" pos:column="14">"&lt;/D:prop&gt;"<pos:position pos:line="167" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="167" pos:column="27">r<pos:position pos:line="167" pos:column="28"/></name></expr></argument>)<pos:position pos:line="167" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="169" pos:column="5">/* the response has been sent. */</comment>
    <return pos:line="170" pos:column="5">return <expr><name pos:line="170" pos:column="12">DONE<pos:position pos:line="170" pos:column="16"/></name></expr>;<pos:position pos:line="170" pos:column="17"/></return>

  <label><name pos:line="172" pos:column="3">error<pos:position pos:line="172" pos:column="8"/></name>:<pos:position pos:line="172" pos:column="9"/></label>
    <expr_stmt><expr><call pos:line="173" pos:column="5">(<modifier pos:line="173" pos:column="6">*<pos:position pos:line="173" pos:column="7"/></modifier><name><name pos:line="173" pos:column="7">locks_hooks<pos:position pos:line="173" pos:column="18"/></name><operator pos:line="173" pos:column="18">-&gt;<pos:position pos:line="173" pos:column="23"/></operator><name pos:line="173" pos:column="20">close_lockdb<pos:position pos:line="173" pos:column="32"/></name></name>)<argument_list pos:line="173" pos:column="33">(<argument><expr><name pos:line="173" pos:column="34">lockdb<pos:position pos:line="173" pos:column="40"/></name></expr></argument>)<pos:position pos:line="173" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="42"/></expr_stmt>
    <return pos:line="174" pos:column="5">return <expr><call><name pos:line="174" pos:column="12">dav_handle_err<pos:position pos:line="174" pos:column="26"/></name><argument_list pos:line="174" pos:column="26">(<argument><expr><name pos:line="174" pos:column="27">r<pos:position pos:line="174" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="30">err<pos:position pos:line="174" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="35">multi_response<pos:position pos:line="174" pos:column="49"/></name></expr></argument>)<pos:position pos:line="174" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="51"/></return>
}<pos:position pos:line="175" pos:column="2"/></block></function></unit>

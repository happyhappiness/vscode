<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2134_httpd-2.2.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">virtualhost_section<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">cmd_parms<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">cmd<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">void<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">dummy<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">arg<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">server_rec<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">main_server<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name><name pos:line="4" pos:column="31">cmd<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">server<pos:position pos:line="4" pos:column="42"/></name></name></expr></init></decl>, <modifier pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="45">s<pos:position pos:line="4" pos:column="46"/></name></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">errmsg<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">endp<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><call><name pos:line="6" pos:column="24">ap_strrchr_c<pos:position pos:line="6" pos:column="36"/></name><argument_list pos:line="6" pos:column="36">(<argument><expr><name pos:line="6" pos:column="37">arg<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="6" pos:column="42">'&gt;'<pos:position pos:line="6" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_pool_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">p<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name><name pos:line="7" pos:column="21">cmd<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">pool<pos:position pos:line="7" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">err<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><call><name pos:line="9" pos:column="23">ap_check_cmd_context<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><name pos:line="9" pos:column="44">cmd<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="49">GLOBAL_ONLY<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="62"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">err<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">!=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <block pos:line="10" pos:column="22">{
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">err<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">endp<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">==<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">NULL<pos:position pos:line="14" pos:column="21"/></name></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22"> <block pos:line="14" pos:column="23">{
        <return pos:line="15" pos:column="9">return <expr><call><name pos:line="15" pos:column="16">unclosed_directive<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">cmd<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">arg<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">apr_pstrndup<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name><name pos:line="18" pos:column="24">cmd<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">pool<pos:position pos:line="18" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="35">arg<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">endp<pos:position pos:line="18" pos:column="44"/></name> <operator pos:line="18" pos:column="45">-<pos:position pos:line="18" pos:column="46"/></operator> <name pos:line="18" pos:column="47">arg<pos:position pos:line="18" pos:column="50"/></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><name><name pos:line="20" pos:column="10">arg<pos:position pos:line="20" pos:column="13"/></name><index pos:line="20" pos:column="13">[<expr><literal type="number" pos:line="20" pos:column="14">0<pos:position pos:line="20" pos:column="15"/></literal></expr>]<pos:position pos:line="20" pos:column="16"/></index></name></expr>)<pos:position pos:line="20" pos:column="17"/></condition><then pos:line="20" pos:column="17"> <block pos:line="20" pos:column="18">{
        <return pos:line="21" pos:column="9">return <expr><call><name pos:line="21" pos:column="16">missing_container_arg<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">cmd<pos:position pos:line="21" pos:column="41"/></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="43"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="24" pos:column="5">/* FIXME: There's another feature waiting to happen here -- since you
        can now put multiple addresses/names on a single &lt;VirtualHost&gt;
        you might want to use it to group common definitions and then
        define other "subhosts" with their individual differences.  But
        personally I'd rather just do it with a macro preprocessor. -djg */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">main_server<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">is_virtual<pos:position pos:line="29" pos:column="32"/></name></name></expr>)<pos:position pos:line="29" pos:column="33"/></condition><then pos:line="29" pos:column="33"> <block pos:line="29" pos:column="34">{
        <return pos:line="30" pos:column="9">return <expr><literal type="string" pos:line="30" pos:column="16">"&lt;VirtualHost&gt; doesn't nest!"<pos:position pos:line="30" pos:column="51"/></literal></expr>;<pos:position pos:line="30" pos:column="46"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="33" pos:column="5">errmsg<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <call><name pos:line="33" pos:column="14">ap_init_virtual_host<pos:position pos:line="33" pos:column="34"/></name><argument_list pos:line="33" pos:column="34">(<argument><expr><name pos:line="33" pos:column="35">p<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">arg<pos:position pos:line="33" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="43">main_server<pos:position pos:line="33" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="56">&amp;<pos:position pos:line="33" pos:column="61"/></operator><name pos:line="33" pos:column="57">s<pos:position pos:line="33" pos:column="58"/></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">errmsg<pos:position pos:line="34" pos:column="15"/></name></expr>)<pos:position pos:line="34" pos:column="16"/></condition><then pos:line="34" pos:column="16"> <block pos:line="34" pos:column="17">{
        <return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">errmsg<pos:position pos:line="35" pos:column="22"/></name></expr>;<pos:position pos:line="35" pos:column="23"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">s<pos:position pos:line="38" pos:column="6"/></name><operator pos:line="38" pos:column="6">-&gt;<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="8">next<pos:position pos:line="38" pos:column="12"/></name></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <name><name pos:line="38" pos:column="15">main_server<pos:position pos:line="38" pos:column="26"/></name><operator pos:line="38" pos:column="26">-&gt;<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="28">next<pos:position pos:line="38" pos:column="32"/></name></name></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">main_server<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">next<pos:position pos:line="39" pos:column="22"/></name></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="25">s<pos:position pos:line="39" pos:column="26"/></name></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="41" pos:column="5">s<pos:position pos:line="41" pos:column="6"/></name><operator pos:line="41" pos:column="6">-&gt;<pos:position pos:line="41" pos:column="11"/></operator><name pos:line="41" pos:column="8">defn_name<pos:position pos:line="41" pos:column="17"/></name></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <name><name pos:line="41" pos:column="20">cmd<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">-&gt;<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="25">directive<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">-&gt;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="36">filename<pos:position pos:line="41" pos:column="44"/></name></name></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">s<pos:position pos:line="42" pos:column="6"/></name><operator pos:line="42" pos:column="6">-&gt;<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="8">defn_line_number<pos:position pos:line="42" pos:column="24"/></name></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <name><name pos:line="42" pos:column="27">cmd<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">-&gt;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="32">directive<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">-&gt;<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="43">line_num<pos:position pos:line="42" pos:column="51"/></name></name></expr>;<pos:position pos:line="42" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="44" pos:column="5">cmd<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">-&gt;<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="10">server<pos:position pos:line="44" pos:column="16"/></name></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">s<pos:position pos:line="44" pos:column="20"/></name></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="46" pos:column="5">errmsg<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">ap_walk_config<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><name><name pos:line="46" pos:column="29">cmd<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">-&gt;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="34">directive<pos:position pos:line="46" pos:column="43"/></name><operator pos:line="46" pos:column="43">-&gt;<pos:position pos:line="46" pos:column="48"/></operator><name pos:line="46" pos:column="45">first_child<pos:position pos:line="46" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="58">cmd<pos:position pos:line="46" pos:column="61"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="47" pos:column="29">s<pos:position pos:line="47" pos:column="30"/></name><operator pos:line="47" pos:column="30">-&gt;<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="32">lookup_defaults<pos:position pos:line="47" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="49" pos:column="5">cmd<pos:position pos:line="49" pos:column="8"/></name><operator pos:line="49" pos:column="8">-&gt;<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="10">server<pos:position pos:line="49" pos:column="16"/></name></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <name pos:line="49" pos:column="19">main_server<pos:position pos:line="49" pos:column="30"/></name></expr>;<pos:position pos:line="49" pos:column="31"/></expr_stmt>

    <return pos:line="51" pos:column="5">return <expr><name pos:line="51" pos:column="12">errmsg<pos:position pos:line="51" pos:column="18"/></name></expr>;<pos:position pos:line="51" pos:column="19"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5910.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_task_output_write<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">h2_task_output<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">output<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">ap_filter_t<pos:position pos:line="2" pos:column="46"/></name><modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type> <name pos:line="2" pos:column="48">f<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">apr_bucket_brigade<pos:position pos:line="2" pos:column="69"/></name><modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type> <name pos:line="2" pos:column="71">bb<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">status<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">APR_BRIGADE_EMPTY<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">bb<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="31"/></condition><then pos:line="5" pos:column="31"> <block pos:line="5" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">ap_log_cerror<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">APLOG_MARK<pos:position pos:line="6" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="35">APLOG_TRACE1<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="49">0<pos:position pos:line="6" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="52">f<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">-&gt;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="55">c<pos:position pos:line="6" pos:column="56"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="7" pos:column="23">"h2_task_output(%s): empty write"<pos:position pos:line="7" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="58">output<pos:position pos:line="7" pos:column="64"/></name><operator pos:line="7" pos:column="64">-&gt;<pos:position pos:line="7" pos:column="69"/></operator><name pos:line="7" pos:column="66">env<pos:position pos:line="7" pos:column="69"/></name><operator pos:line="7" pos:column="69">-&gt;<pos:position pos:line="7" pos:column="74"/></operator><name pos:line="7" pos:column="71">id<pos:position pos:line="7" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="75"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">APR_SUCCESS<pos:position pos:line="8" pos:column="27"/></name></expr>;<pos:position pos:line="8" pos:column="28"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="11" pos:column="5">status<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">open_if_needed<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">output<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="37">f<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">bb<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">status<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">!=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">APR_EOF<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27"> <block pos:line="12" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_log_cerror<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">APLOG_MARK<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">APLOG_TRACE1<pos:position pos:line="13" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">status<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="57">f<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">c<pos:position pos:line="13" pos:column="61"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="14" pos:column="23">"h2_task_output(%s): opened and passed brigade"<pos:position pos:line="14" pos:column="70"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="15" pos:column="23">output<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">env<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">id<pos:position pos:line="15" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">status<pos:position pos:line="16" pos:column="22"/></name></expr>;<pos:position pos:line="16" pos:column="23"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ap_log_cerror<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">APLOG_MARK<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="31">APLOG_TRACE1<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="45">0<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="48">f<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">c<pos:position pos:line="18" pos:column="52"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="19" pos:column="19">"h2_task_output(%s): write brigade"<pos:position pos:line="19" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="56">output<pos:position pos:line="19" pos:column="62"/></name><operator pos:line="19" pos:column="62">-&gt;<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="64">env<pos:position pos:line="19" pos:column="67"/></name><operator pos:line="19" pos:column="67">-&gt;<pos:position pos:line="19" pos:column="72"/></operator><name pos:line="19" pos:column="69">id<pos:position pos:line="19" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="73"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><call><name pos:line="20" pos:column="12">h2_mplx_out_write<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name><name pos:line="20" pos:column="30">output<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">-&gt;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="38">env<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">-&gt;<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="43">mplx<pos:position pos:line="20" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="49">output<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">-&gt;<pos:position pos:line="20" pos:column="60"/></operator><name pos:line="20" pos:column="57">env<pos:position pos:line="20" pos:column="60"/></name><operator pos:line="20" pos:column="60">-&gt;<pos:position pos:line="20" pos:column="65"/></operator><name pos:line="20" pos:column="62">stream_id<pos:position pos:line="20" pos:column="71"/></name></name></expr></argument>, 
                             <argument><expr><name pos:line="21" pos:column="30">f<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">bb<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="37">output<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">env<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">-&gt;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="50">io<pos:position pos:line="21" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="54"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

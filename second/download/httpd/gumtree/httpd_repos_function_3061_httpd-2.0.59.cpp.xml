<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3061_httpd-2.0.59.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">dlsym<pos:position pos:line="1" pos:column="12"/></name><parameter_list pos:line="1" pos:column="12">(<parameter><decl><type><name pos:line="1" pos:column="13">void<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">handle<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">symbol<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">register<pos:position pos:line="3" pos:column="13"/></specifier> <name pos:line="3" pos:column="14">ModulePtr<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">mp<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><operator pos:line="3" pos:column="29">(<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="30">ModulePtr<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">)<pos:position pos:line="3" pos:column="40"/></operator> <name pos:line="3" pos:column="41">handle<pos:position pos:line="3" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">register<pos:position pos:line="4" pos:column="13"/></specifier> <name pos:line="4" pos:column="14">ExportPtr<pos:position pos:line="4" pos:column="23"/></name></type> <name pos:line="4" pos:column="24">ep<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">register<pos:position pos:line="5" pos:column="13"/></specifier> <name pos:line="5" pos:column="14">int<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">i<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/*
     * Could speed up the search, but I assume that one assigns
     * the result to function pointers anyways.
     */</comment>
    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><expr><name pos:line="11" pos:column="10">ep<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <name><name pos:line="11" pos:column="15">mp<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">exports<pos:position pos:line="11" pos:column="26"/></name></name></expr><operator pos:line="11" pos:column="26">,<pos:position pos:line="11" pos:column="27"/></operator> <expr><name pos:line="11" pos:column="28">i<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">=<pos:position pos:line="11" pos:column="31"/></operator> <name><name pos:line="11" pos:column="32">mp<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">-&gt;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="36">nExports<pos:position pos:line="11" pos:column="44"/></name></name></expr>;<pos:position pos:line="11" pos:column="45"/></init> <condition><expr><name pos:line="11" pos:column="46">i<pos:position pos:line="11" pos:column="47"/></name></expr>;<pos:position pos:line="11" pos:column="48"/></condition> <incr><expr><name pos:line="11" pos:column="49">i<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">--<pos:position pos:line="11" pos:column="52"/></operator></expr><operator pos:line="11" pos:column="52">,<pos:position pos:line="11" pos:column="53"/></operator> <expr><name pos:line="11" pos:column="54">ep<pos:position pos:line="11" pos:column="56"/></name><operator pos:line="11" pos:column="56">++<pos:position pos:line="11" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="59"/></control>
	<block type="pseudo"><if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">strcmp<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name><name pos:line="12" pos:column="20">ep<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">name<pos:position pos:line="12" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="30">symbol<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call> <operator pos:line="12" pos:column="38">==<pos:position pos:line="12" pos:column="40"/></operator> <literal type="number" pos:line="12" pos:column="41">0<pos:position pos:line="12" pos:column="42"/></literal></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43">
	    <block type="pseudo"><return pos:line="13" pos:column="13">return <expr><name><name pos:line="13" pos:column="20">ep<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">addr<pos:position pos:line="13" pos:column="28"/></name></name></expr>;<pos:position pos:line="13" pos:column="29"/></return></block></then></if></block></for>
    <expr_stmt><expr><name pos:line="14" pos:column="5">errvalid<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">++<pos:position pos:line="14" pos:column="15"/></operator></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">strcpy<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">errbuf<pos:position pos:line="15" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="20">"dlsym: undefined symbol "<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">strcat<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">errbuf<pos:position pos:line="16" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="20">symbol<pos:position pos:line="16" pos:column="26"/></name></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">NULL<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

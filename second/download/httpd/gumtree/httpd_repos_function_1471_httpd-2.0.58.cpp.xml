<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1471_httpd-2.0.58.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cache_url_handler<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">request_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">r<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">lookup<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">pragma<pos:position pos:line="4" pos:column="23"/></name></decl>, <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="26">auth<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_uri_t<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">uri<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">url<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">path<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">cache_provider_list<pos:position pos:line="8" pos:column="24"/></name> <modifier pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></modifier></type><name pos:line="8" pos:column="26">providers<pos:position pos:line="8" pos:column="35"/></name></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">cache_info<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">info<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">cache_request_rec<pos:position pos:line="10" pos:column="22"/></name> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">cache<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">cache_server_conf<pos:position pos:line="11" pos:column="22"/></name> <modifier pos:line="11" pos:column="23">*<pos:position pos:line="11" pos:column="24"/></modifier></type><name pos:line="11" pos:column="24">conf<pos:position pos:line="11" pos:column="28"/></name></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_bucket_brigade<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">out<pos:position pos:line="12" pos:column="28"/></name></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* Delay initialization until we know we are handling a GET */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">r<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">method_number<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">!=<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">M_GET<pos:position pos:line="15" pos:column="34"/></name></expr>)<pos:position pos:line="15" pos:column="35"/></condition><then pos:line="15" pos:column="35"> <block pos:line="15" pos:column="36">{
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">DECLINED<pos:position pos:line="16" pos:column="24"/></name></expr>;<pos:position pos:line="16" pos:column="25"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="19" pos:column="5">uri<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <name><name pos:line="19" pos:column="11">r<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">parsed_uri<pos:position pos:line="19" pos:column="24"/></name></name></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">url<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <name><name pos:line="20" pos:column="11">r<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">unparsed_uri<pos:position pos:line="20" pos:column="26"/></name></name></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">path<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <name><name pos:line="21" pos:column="12">uri<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">.<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">path<pos:position pos:line="21" pos:column="20"/></name></name></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">info<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <name pos:line="22" pos:column="12">NULL<pos:position pos:line="22" pos:column="16"/></name></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><name pos:line="24" pos:column="5">conf<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">cache_server_conf<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">*<pos:position pos:line="24" pos:column="32"/></operator><operator pos:line="24" pos:column="32">)<pos:position pos:line="24" pos:column="33"/></operator> <call><name pos:line="24" pos:column="34">ap_get_module_config<pos:position pos:line="24" pos:column="54"/></name><argument_list pos:line="24" pos:column="54">(<argument><expr><name><name pos:line="24" pos:column="55">r<pos:position pos:line="24" pos:column="56"/></name><operator pos:line="24" pos:column="56">-&gt;<pos:position pos:line="24" pos:column="61"/></operator><name pos:line="24" pos:column="58">server<pos:position pos:line="24" pos:column="64"/></name><operator pos:line="24" pos:column="64">-&gt;<pos:position pos:line="24" pos:column="69"/></operator><name pos:line="24" pos:column="66">module_config<pos:position pos:line="24" pos:column="79"/></name></name></expr></argument>,
                                                      <argument><expr><operator pos:line="25" pos:column="55">&amp;<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="56">cache_module<pos:position pos:line="25" pos:column="68"/></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt>

    <comment type="block" pos:line="27" pos:column="5">/*
     * Which cache module (if any) should handle this request?
     */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">providers<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <call><name pos:line="30" pos:column="23">ap_cache_get_providers<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><name pos:line="30" pos:column="46">r<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">conf<pos:position pos:line="30" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="55">path<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call><operator pos:line="30" pos:column="60">)<pos:position pos:line="30" pos:column="61"/></operator></expr>)<pos:position pos:line="30" pos:column="62"/></condition><then pos:line="30" pos:column="62"> <block pos:line="30" pos:column="63">{
        <return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">DECLINED<pos:position pos:line="31" pos:column="24"/></name></expr>;<pos:position pos:line="31" pos:column="25"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/* make space for the per request config */</comment>
    <expr_stmt><expr><name pos:line="35" pos:column="5">cache<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <operator pos:line="35" pos:column="13">(<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">cache_request_rec<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">*<pos:position pos:line="35" pos:column="33"/></operator><operator pos:line="35" pos:column="33">)<pos:position pos:line="35" pos:column="34"/></operator> <call><name pos:line="35" pos:column="35">ap_get_module_config<pos:position pos:line="35" pos:column="55"/></name><argument_list pos:line="35" pos:column="55">(<argument><expr><name><name pos:line="35" pos:column="56">r<pos:position pos:line="35" pos:column="57"/></name><operator pos:line="35" pos:column="57">-&gt;<pos:position pos:line="35" pos:column="62"/></operator><name pos:line="35" pos:column="59">request_config<pos:position pos:line="35" pos:column="73"/></name></name></expr></argument>,
                                                       <argument><expr><operator pos:line="36" pos:column="56">&amp;<pos:position pos:line="36" pos:column="61"/></operator><name pos:line="36" pos:column="57">cache_module<pos:position pos:line="36" pos:column="69"/></name></expr></argument>)<pos:position pos:line="36" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="71"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">!<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">cache<pos:position pos:line="37" pos:column="15"/></name></expr>)<pos:position pos:line="37" pos:column="16"/></condition><then pos:line="37" pos:column="16"> <block pos:line="37" pos:column="17">{
        <expr_stmt><expr><name pos:line="38" pos:column="9">cache<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <call><name pos:line="38" pos:column="17">apr_pcalloc<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name><name pos:line="38" pos:column="29">r<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">pool<pos:position pos:line="38" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="38">sizeof<argument_list pos:line="38" pos:column="44">(<argument><expr><name pos:line="38" pos:column="45">cache_request_rec<pos:position pos:line="38" pos:column="62"/></name></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">ap_set_module_config<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name><name pos:line="39" pos:column="30">r<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">request_config<pos:position pos:line="39" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="49">&amp;<pos:position pos:line="39" pos:column="54"/></operator><name pos:line="39" pos:column="50">cache_module<pos:position pos:line="39" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="64">cache<pos:position pos:line="39" pos:column="69"/></name></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="42" pos:column="5">/* save away the possible providers */</comment>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">cache<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">-&gt;<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="12">providers<pos:position pos:line="43" pos:column="21"/></name></name> <operator pos:line="43" pos:column="22">=<pos:position pos:line="43" pos:column="23"/></operator> <name pos:line="43" pos:column="24">providers<pos:position pos:line="43" pos:column="33"/></name></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="45" pos:column="5">/*
     * Are we allowed to serve cached info at all?
     */</comment>

    <comment type="block" pos:line="49" pos:column="5">/* find certain cache controlling headers */</comment>
    <expr_stmt><expr><name pos:line="50" pos:column="5">pragma<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <call><name pos:line="50" pos:column="14">apr_table_get<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><name><name pos:line="50" pos:column="28">r<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">headers_in<pos:position pos:line="50" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="43">"Pragma"<pos:position pos:line="50" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name pos:line="51" pos:column="5">auth<pos:position pos:line="51" pos:column="9"/></name> <operator pos:line="51" pos:column="10">=<pos:position pos:line="51" pos:column="11"/></operator> <call><name pos:line="51" pos:column="12">apr_table_get<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><name><name pos:line="51" pos:column="26">r<pos:position pos:line="51" pos:column="27"/></name><operator pos:line="51" pos:column="27">-&gt;<pos:position pos:line="51" pos:column="32"/></operator><name pos:line="51" pos:column="29">headers_in<pos:position pos:line="51" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="41">"Authorization"<pos:position pos:line="51" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt>

    <comment type="block" pos:line="53" pos:column="5">/* first things first - does the request allow us to return
     * cached information at all? If not, just decline the request.
     *
     * Note that there is a big difference between not being allowed
     * to cache a request (no-store) and not being allowed to return
     * a cached request without revalidation (max-age=0).
     *
     * Caching is forbidden under the following circumstances:
     *
     * - RFC2616 14.9.2 Cache-Control: no-store
     * - Pragma: no-cache
     * - Any requests requiring authorization.
     */</comment>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name><name pos:line="66" pos:column="9">conf<pos:position pos:line="66" pos:column="13"/></name><operator pos:line="66" pos:column="13">-&gt;<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="15">ignorecachecontrol<pos:position pos:line="66" pos:column="33"/></name></name> <operator pos:line="66" pos:column="34">==<pos:position pos:line="66" pos:column="36"/></operator> <literal type="number" pos:line="66" pos:column="37">1<pos:position pos:line="66" pos:column="38"/></literal> <operator pos:line="66" pos:column="39">&amp;&amp;<pos:position pos:line="66" pos:column="49"/></operator> <name pos:line="66" pos:column="42">auth<pos:position pos:line="66" pos:column="46"/></name> <operator pos:line="66" pos:column="47">==<pos:position pos:line="66" pos:column="49"/></operator> <name pos:line="66" pos:column="50">NULL<pos:position pos:line="66" pos:column="54"/></name></expr>)<pos:position pos:line="66" pos:column="55"/></condition><then pos:line="66" pos:column="55"> <block pos:line="66" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">ap_log_error<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">(<argument><expr><name pos:line="67" pos:column="22">APLOG_MARK<pos:position pos:line="67" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="34">APLOG_DEBUG<pos:position pos:line="67" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="47">0<pos:position pos:line="67" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="50">r<pos:position pos:line="67" pos:column="51"/></name><operator pos:line="67" pos:column="51">-&gt;<pos:position pos:line="67" pos:column="56"/></operator><name pos:line="67" pos:column="53">server<pos:position pos:line="67" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="68" pos:column="22">"incoming request is asking for a uncached version of "<pos:position pos:line="68" pos:column="77"/></literal>
                     <literal type="string" pos:line="69" pos:column="22">"%s, but we know better and are ignoring it"<pos:position pos:line="69" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="68">url<pos:position pos:line="69" pos:column="71"/></name></expr></argument>)<pos:position pos:line="69" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then>
    <else pos:line="71" pos:column="5">else <block pos:line="71" pos:column="10">{
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><call><name pos:line="72" pos:column="13">ap_cache_liststr<pos:position pos:line="72" pos:column="29"/></name><argument_list pos:line="72" pos:column="29">(<argument><expr><name pos:line="72" pos:column="30">NULL<pos:position pos:line="72" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="36">pragma<pos:position pos:line="72" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="44">"no-cache"<pos:position pos:line="72" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="56">NULL<pos:position pos:line="72" pos:column="60"/></name></expr></argument>)<pos:position pos:line="72" pos:column="61"/></argument_list></call> <operator pos:line="72" pos:column="62">||<pos:position pos:line="72" pos:column="64"/></operator>
            <name pos:line="73" pos:column="13">auth<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">!=<pos:position pos:line="73" pos:column="20"/></operator> <name pos:line="73" pos:column="21">NULL<pos:position pos:line="73" pos:column="25"/></name></expr>)<pos:position pos:line="73" pos:column="26"/></condition><then pos:line="73" pos:column="26"> <block pos:line="73" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">ap_log_error<pos:position pos:line="74" pos:column="25"/></name><argument_list pos:line="74" pos:column="25">(<argument><expr><name pos:line="74" pos:column="26">APLOG_MARK<pos:position pos:line="74" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="38">APLOG_DEBUG<pos:position pos:line="74" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="51">0<pos:position pos:line="74" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="54">r<pos:position pos:line="74" pos:column="55"/></name><operator pos:line="74" pos:column="55">-&gt;<pos:position pos:line="74" pos:column="60"/></operator><name pos:line="74" pos:column="57">server<pos:position pos:line="74" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="75" pos:column="26">"cache: no-cache or authorization forbids caching "<pos:position pos:line="75" pos:column="77"/></literal>
                         <literal type="string" pos:line="76" pos:column="26">"of %s"<pos:position pos:line="76" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="35">url<pos:position pos:line="76" pos:column="38"/></name></expr></argument>)<pos:position pos:line="76" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="40"/></expr_stmt>
            <return pos:line="77" pos:column="13">return <expr><name pos:line="77" pos:column="20">DECLINED<pos:position pos:line="77" pos:column="28"/></name></expr>;<pos:position pos:line="77" pos:column="29"/></return>
        }<pos:position pos:line="78" pos:column="10"/></block></then></if>
    }<pos:position pos:line="79" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="81" pos:column="5">/*
     * Try to serve this request from the cache.
     *
     * If no existing cache file (DECLINED)
     *   add cache_save filter
     * If cached file (OK)
     *   clear filter stack
     *   add cache_out filter
     *   return OK
     */</comment>
    <expr_stmt><expr><name pos:line="91" pos:column="5">rv<pos:position pos:line="91" pos:column="7"/></name> <operator pos:line="91" pos:column="8">=<pos:position pos:line="91" pos:column="9"/></operator> <call><name pos:line="91" pos:column="10">cache_select_url<pos:position pos:line="91" pos:column="26"/></name><argument_list pos:line="91" pos:column="26">(<argument><expr><name pos:line="91" pos:column="27">r<pos:position pos:line="91" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="30">url<pos:position pos:line="91" pos:column="33"/></name></expr></argument>)<pos:position pos:line="91" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="35"/></expr_stmt>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name pos:line="92" pos:column="9">rv<pos:position pos:line="92" pos:column="11"/></name> <operator pos:line="92" pos:column="12">!=<pos:position pos:line="92" pos:column="14"/></operator> <name pos:line="92" pos:column="15">OK<pos:position pos:line="92" pos:column="17"/></name></expr>)<pos:position pos:line="92" pos:column="18"/></condition><then pos:line="92" pos:column="18"> <block pos:line="92" pos:column="19">{
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">rv<pos:position pos:line="93" pos:column="15"/></name> <operator pos:line="93" pos:column="16">==<pos:position pos:line="93" pos:column="18"/></operator> <name pos:line="93" pos:column="19">DECLINED<pos:position pos:line="93" pos:column="27"/></name></expr>)<pos:position pos:line="93" pos:column="28"/></condition><then pos:line="93" pos:column="28"> <block pos:line="93" pos:column="29">{
            <if pos:line="94" pos:column="13">if <condition pos:line="94" pos:column="16">(<expr><operator pos:line="94" pos:column="17">!<pos:position pos:line="94" pos:column="18"/></operator><name pos:line="94" pos:column="18">lookup<pos:position pos:line="94" pos:column="24"/></name></expr>)<pos:position pos:line="94" pos:column="25"/></condition><then pos:line="94" pos:column="25"> <block pos:line="94" pos:column="26">{
                <comment type="block" pos:line="95" pos:column="17">/* add cache_save filter to cache this request */</comment>
                <expr_stmt><expr><call><name pos:line="96" pos:column="17">ap_add_output_filter_handle<pos:position pos:line="96" pos:column="44"/></name><argument_list pos:line="96" pos:column="44">(<argument><expr><name pos:line="96" pos:column="45">cache_save_filter_handle<pos:position pos:line="96" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="71">NULL<pos:position pos:line="96" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="77">r<pos:position pos:line="96" pos:column="78"/></name></expr></argument>,
                                            <argument><expr><name><name pos:line="97" pos:column="45">r<pos:position pos:line="97" pos:column="46"/></name><operator pos:line="97" pos:column="46">-&gt;<pos:position pos:line="97" pos:column="51"/></operator><name pos:line="97" pos:column="48">connection<pos:position pos:line="97" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="98" pos:column="14"/></block></then></if>
        }<pos:position pos:line="99" pos:column="10"/></block></then>
        <else pos:line="100" pos:column="9">else <block pos:line="100" pos:column="14">{
            <comment type="block" pos:line="101" pos:column="13">/* error */</comment>
            <expr_stmt><expr><call><name pos:line="102" pos:column="13">ap_log_error<pos:position pos:line="102" pos:column="25"/></name><argument_list pos:line="102" pos:column="25">(<argument><expr><name pos:line="102" pos:column="26">APLOG_MARK<pos:position pos:line="102" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="38">APLOG_ERR<pos:position pos:line="102" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="49">rv<pos:position pos:line="102" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="53">r<pos:position pos:line="102" pos:column="54"/></name><operator pos:line="102" pos:column="54">-&gt;<pos:position pos:line="102" pos:column="59"/></operator><name pos:line="102" pos:column="56">server<pos:position pos:line="102" pos:column="62"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="103" pos:column="26">"cache: error returned while checking for cached "<pos:position pos:line="103" pos:column="76"/></literal>
                         <literal type="string" pos:line="104" pos:column="26">"file by %s cache"<pos:position pos:line="104" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="46">cache<pos:position pos:line="104" pos:column="51"/></name><operator pos:line="104" pos:column="51">-&gt;<pos:position pos:line="104" pos:column="56"/></operator><name pos:line="104" pos:column="53">provider_name<pos:position pos:line="104" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="105" pos:column="10"/></block></else></if>
        <return pos:line="106" pos:column="9">return <expr><name pos:line="106" pos:column="16">DECLINED<pos:position pos:line="106" pos:column="24"/></name></expr>;<pos:position pos:line="106" pos:column="25"/></return>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="109" pos:column="5">/* We have located a suitable cache file now. */</comment>
    <expr_stmt><expr><name pos:line="110" pos:column="5">info<pos:position pos:line="110" pos:column="9"/></name> <operator pos:line="110" pos:column="10">=<pos:position pos:line="110" pos:column="11"/></operator> <operator pos:line="110" pos:column="12">&amp;<pos:position pos:line="110" pos:column="17"/></operator><operator pos:line="110" pos:column="13">(<pos:position pos:line="110" pos:column="14"/></operator><name><name pos:line="110" pos:column="14">cache<pos:position pos:line="110" pos:column="19"/></name><operator pos:line="110" pos:column="19">-&gt;<pos:position pos:line="110" pos:column="24"/></operator><name pos:line="110" pos:column="21">handle<pos:position pos:line="110" pos:column="27"/></name><operator pos:line="110" pos:column="27">-&gt;<pos:position pos:line="110" pos:column="32"/></operator><name pos:line="110" pos:column="29">cache_obj<pos:position pos:line="110" pos:column="38"/></name><operator pos:line="110" pos:column="38">-&gt;<pos:position pos:line="110" pos:column="43"/></operator><name pos:line="110" pos:column="40">info<pos:position pos:line="110" pos:column="44"/></name></name><operator pos:line="110" pos:column="44">)<pos:position pos:line="110" pos:column="45"/></operator></expr>;<pos:position pos:line="110" pos:column="46"/></expr_stmt>

    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><name pos:line="112" pos:column="9">info<pos:position pos:line="112" pos:column="13"/></name> <operator pos:line="112" pos:column="14">&amp;&amp;<pos:position pos:line="112" pos:column="24"/></operator> <name><name pos:line="112" pos:column="17">info<pos:position pos:line="112" pos:column="21"/></name><operator pos:line="112" pos:column="21">-&gt;<pos:position pos:line="112" pos:column="26"/></operator><name pos:line="112" pos:column="23">lastmod<pos:position pos:line="112" pos:column="30"/></name></name></expr>)<pos:position pos:line="112" pos:column="31"/></condition><then pos:line="112" pos:column="31"> <block pos:line="112" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="113" pos:column="9">ap_update_mtime<pos:position pos:line="113" pos:column="24"/></name><argument_list pos:line="113" pos:column="24">(<argument><expr><name pos:line="113" pos:column="25">r<pos:position pos:line="113" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="28">info<pos:position pos:line="113" pos:column="32"/></name><operator pos:line="113" pos:column="32">-&gt;<pos:position pos:line="113" pos:column="37"/></operator><name pos:line="113" pos:column="34">lastmod<pos:position pos:line="113" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="114" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="116" pos:column="5">rv<pos:position pos:line="116" pos:column="7"/></name> <operator pos:line="116" pos:column="8">=<pos:position pos:line="116" pos:column="9"/></operator> <call><name pos:line="116" pos:column="10">ap_meets_conditions<pos:position pos:line="116" pos:column="29"/></name><argument_list pos:line="116" pos:column="29">(<argument><expr><name pos:line="116" pos:column="30">r<pos:position pos:line="116" pos:column="31"/></name></expr></argument>)<pos:position pos:line="116" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="33"/></expr_stmt>
    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">(<expr><name pos:line="117" pos:column="9">rv<pos:position pos:line="117" pos:column="11"/></name> <operator pos:line="117" pos:column="12">!=<pos:position pos:line="117" pos:column="14"/></operator> <name pos:line="117" pos:column="15">OK<pos:position pos:line="117" pos:column="17"/></name></expr>)<pos:position pos:line="117" pos:column="18"/></condition><then pos:line="117" pos:column="18"> <block pos:line="117" pos:column="19">{
        <comment type="block" pos:line="118" pos:column="9">/* Return cached status. */</comment>
        <return pos:line="119" pos:column="9">return <expr><name pos:line="119" pos:column="16">rv<pos:position pos:line="119" pos:column="18"/></name></expr>;<pos:position pos:line="119" pos:column="19"/></return>
    }<pos:position pos:line="120" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="122" pos:column="5">/* If we're a lookup, we can exit now instead of serving the content. */</comment>
    <if pos:line="123" pos:column="5">if <condition pos:line="123" pos:column="8">(<expr><name pos:line="123" pos:column="9">lookup<pos:position pos:line="123" pos:column="15"/></name></expr>)<pos:position pos:line="123" pos:column="16"/></condition><then pos:line="123" pos:column="16"> <block pos:line="123" pos:column="17">{
        <return pos:line="124" pos:column="9">return <expr><name pos:line="124" pos:column="16">OK<pos:position pos:line="124" pos:column="18"/></name></expr>;<pos:position pos:line="124" pos:column="19"/></return>
    }<pos:position pos:line="125" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="127" pos:column="5">/* Serve up the content */</comment>

    <comment type="block" pos:line="129" pos:column="5">/* We are in the quick handler hook, which means that no output
     * filters have been set. So lets run the insert_filter hook.
     */</comment>
    <expr_stmt><expr><call><name pos:line="132" pos:column="5">ap_run_insert_filter<pos:position pos:line="132" pos:column="25"/></name><argument_list pos:line="132" pos:column="25">(<argument><expr><name pos:line="132" pos:column="26">r<pos:position pos:line="132" pos:column="27"/></name></expr></argument>)<pos:position pos:line="132" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="133" pos:column="5">ap_add_output_filter_handle<pos:position pos:line="133" pos:column="32"/></name><argument_list pos:line="133" pos:column="32">(<argument><expr><name pos:line="133" pos:column="33">cache_out_filter_handle<pos:position pos:line="133" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="58">NULL<pos:position pos:line="133" pos:column="62"/></name></expr></argument>,
                                <argument><expr><name pos:line="134" pos:column="33">r<pos:position pos:line="134" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="36">r<pos:position pos:line="134" pos:column="37"/></name><operator pos:line="134" pos:column="37">-&gt;<pos:position pos:line="134" pos:column="42"/></operator><name pos:line="134" pos:column="39">connection<pos:position pos:line="134" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="134" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="136" pos:column="5">/* kick off the filter stack */</comment>
    <expr_stmt><expr><name pos:line="137" pos:column="5">out<pos:position pos:line="137" pos:column="8"/></name> <operator pos:line="137" pos:column="9">=<pos:position pos:line="137" pos:column="10"/></operator> <call><name pos:line="137" pos:column="11">apr_brigade_create<pos:position pos:line="137" pos:column="29"/></name><argument_list pos:line="137" pos:column="29">(<argument><expr><name><name pos:line="137" pos:column="30">r<pos:position pos:line="137" pos:column="31"/></name><operator pos:line="137" pos:column="31">-&gt;<pos:position pos:line="137" pos:column="36"/></operator><name pos:line="137" pos:column="33">pool<pos:position pos:line="137" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="39">r<pos:position pos:line="137" pos:column="40"/></name><operator pos:line="137" pos:column="40">-&gt;<pos:position pos:line="137" pos:column="45"/></operator><name pos:line="137" pos:column="42">connection<pos:position pos:line="137" pos:column="52"/></name><operator pos:line="137" pos:column="52">-&gt;<pos:position pos:line="137" pos:column="57"/></operator><name pos:line="137" pos:column="54">bucket_alloc<pos:position pos:line="137" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="137" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name pos:line="138" pos:column="5">rv<pos:position pos:line="138" pos:column="7"/></name> <operator pos:line="138" pos:column="8">=<pos:position pos:line="138" pos:column="9"/></operator> <call><name pos:line="138" pos:column="10">ap_pass_brigade<pos:position pos:line="138" pos:column="25"/></name><argument_list pos:line="138" pos:column="25">(<argument><expr><name><name pos:line="138" pos:column="26">r<pos:position pos:line="138" pos:column="27"/></name><operator pos:line="138" pos:column="27">-&gt;<pos:position pos:line="138" pos:column="32"/></operator><name pos:line="138" pos:column="29">output_filters<pos:position pos:line="138" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="45">out<pos:position pos:line="138" pos:column="48"/></name></expr></argument>)<pos:position pos:line="138" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="50"/></expr_stmt>
    <if pos:line="139" pos:column="5">if <condition pos:line="139" pos:column="8">(<expr><name pos:line="139" pos:column="9">rv<pos:position pos:line="139" pos:column="11"/></name> <operator pos:line="139" pos:column="12">!=<pos:position pos:line="139" pos:column="14"/></operator> <name pos:line="139" pos:column="15">APR_SUCCESS<pos:position pos:line="139" pos:column="26"/></name></expr>)<pos:position pos:line="139" pos:column="27"/></condition><then pos:line="139" pos:column="27"> <block pos:line="139" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="140" pos:column="9">ap_log_error<pos:position pos:line="140" pos:column="21"/></name><argument_list pos:line="140" pos:column="21">(<argument><expr><name pos:line="140" pos:column="22">APLOG_MARK<pos:position pos:line="140" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="34">APLOG_ERR<pos:position pos:line="140" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="45">rv<pos:position pos:line="140" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="49">r<pos:position pos:line="140" pos:column="50"/></name><operator pos:line="140" pos:column="50">-&gt;<pos:position pos:line="140" pos:column="55"/></operator><name pos:line="140" pos:column="52">server<pos:position pos:line="140" pos:column="58"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="141" pos:column="22">"cache: error returned while trying to return %s "<pos:position pos:line="141" pos:column="72"/></literal>
                     <literal type="string" pos:line="142" pos:column="22">"cached data"<pos:position pos:line="142" pos:column="35"/></literal></expr></argument>, 
                     <argument><expr><name><name pos:line="143" pos:column="22">cache<pos:position pos:line="143" pos:column="27"/></name><operator pos:line="143" pos:column="27">-&gt;<pos:position pos:line="143" pos:column="32"/></operator><name pos:line="143" pos:column="29">provider_name<pos:position pos:line="143" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="143" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="44"/></expr_stmt>
        <return pos:line="144" pos:column="9">return <expr><name pos:line="144" pos:column="16">rv<pos:position pos:line="144" pos:column="18"/></name></expr>;<pos:position pos:line="144" pos:column="19"/></return>
    }<pos:position pos:line="145" pos:column="6"/></block></then></if>

    <return pos:line="147" pos:column="5">return <expr><name pos:line="147" pos:column="12">OK<pos:position pos:line="147" pos:column="14"/></name></expr>;<pos:position pos:line="147" pos:column="15"/></return>
}<pos:position pos:line="148" pos:column="2"/></block></function></unit>

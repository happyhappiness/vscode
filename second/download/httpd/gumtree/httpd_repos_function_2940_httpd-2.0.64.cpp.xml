<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2940_httpd-2.0.64.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cstat<pos:position pos:line="1" pos:column="10"/></name> <parameter_list pos:line="1" pos:column="11">(<parameter><decl><type><name pos:line="1" pos:column="12">NXPathCtx_t<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">ctx<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">path<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">stat<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">buf<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">unsigned<pos:position pos:line="1" pos:column="67"/></name> <name pos:line="1" pos:column="68">long<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">requestmap<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="85">apr_pool_t<pos:position pos:line="1" pos:column="95"/></name> <modifier pos:line="1" pos:column="96">*<pos:position pos:line="1" pos:column="97"/></modifier></type><name pos:line="1" pos:column="97">p<pos:position pos:line="1" pos:column="98"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="99"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_pool_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">gPool<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><operator pos:line="3" pos:column="25">(<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="26">apr_pool_t<pos:position pos:line="3" pos:column="36"/></name> <operator pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></operator><operator pos:line="3" pos:column="38">)<pos:position pos:line="3" pos:column="39"/></operator><call><name pos:line="3" pos:column="39">getGlobalPool<pos:position pos:line="3" pos:column="52"/></name><argument_list pos:line="3" pos:column="52">()<pos:position pos:line="3" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_hash_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">statCache<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">NULL<pos:position pos:line="4" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_thread_rwlock_t<pos:position pos:line="5" pos:column="24"/></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">rwlock<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name pos:line="5" pos:column="35">NULL<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">NXPathCtx_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">pathctx<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><literal type="number" pos:line="7" pos:column="27">0<pos:position pos:line="7" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">ptr<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name></expr></init></decl>, <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="24">tr<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">len<pos:position pos:line="9" pos:column="12"/></name> <init pos:line="9" pos:column="13">= <expr><literal type="number" pos:line="9" pos:column="15">0<pos:position pos:line="9" pos:column="16"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="18">x<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">ppath<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">pinfo<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">ctx<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">==<pos:position pos:line="13" pos:column="15"/></operator> <literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18"> <block pos:line="13" pos:column="19">{

        <comment type="block" pos:line="15" pos:column="9">/* If there isn't a global pool then just stat the file
           and return */</comment>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">gPool<pos:position pos:line="17" pos:column="19"/></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition><then pos:line="17" pos:column="20"> <block pos:line="17" pos:column="21">{
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">char<pos:position pos:line="18" pos:column="17"/></name></type> <name><name pos:line="18" pos:column="18">poolname<pos:position pos:line="18" pos:column="26"/></name><index pos:line="18" pos:column="26">[<expr><literal type="number" pos:line="18" pos:column="27">50<pos:position pos:line="18" pos:column="29"/></literal></expr>]<pos:position pos:line="18" pos:column="30"/></index></name></decl>;<pos:position pos:line="18" pos:column="31"/></decl_stmt>
    
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><call><name pos:line="20" pos:column="17">apr_pool_create<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><operator pos:line="20" pos:column="33">&amp;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="34">gPool<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">NULL<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call> <operator pos:line="20" pos:column="47">!=<pos:position pos:line="20" pos:column="49"/></operator> <name pos:line="20" pos:column="50">APR_SUCCESS<pos:position pos:line="20" pos:column="61"/></name></expr>)<pos:position pos:line="20" pos:column="62"/></condition><then pos:line="20" pos:column="62"> <block pos:line="20" pos:column="63">{
                <return pos:line="21" pos:column="17">return <expr><call><name pos:line="21" pos:column="24">getstat<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">ctx<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">path<pos:position pos:line="21" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="43">buf<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">requestmap<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="60"/></return>
            }<pos:position pos:line="22" pos:column="14"/></block></then></if>
    
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">setGlobalPool<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">gPool<pos:position pos:line="24" pos:column="32"/></name></expr></argument>)<pos:position pos:line="24" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">apr_pool_tag<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">gPool<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="33">apr_pstrdup<pos:position pos:line="25" pos:column="44"/></name><argument_list pos:line="25" pos:column="44">(<argument><expr><name pos:line="25" pos:column="45">gPool<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="52">"cstat_mem_pool"<pos:position pos:line="25" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt>
    
            <expr_stmt><expr><name pos:line="27" pos:column="13">statCache<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <call><name pos:line="27" pos:column="25">apr_hash_make<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">gPool<pos:position pos:line="27" pos:column="44"/></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">apr_pool_userdata_set<pos:position pos:line="28" pos:column="34"/></name> <argument_list pos:line="28" pos:column="35">(<argument><expr><operator pos:line="28" pos:column="36">(<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="37">void<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">*<pos:position pos:line="28" pos:column="42"/></operator><operator pos:line="28" pos:column="42">)<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="43">statCache<pos:position pos:line="28" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="54">"STAT_CACHE"<pos:position pos:line="28" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="68">stat_cache_cleanup<pos:position pos:line="28" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="88">gPool<pos:position pos:line="28" pos:column="93"/></name></expr></argument>)<pos:position pos:line="28" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="95"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="30" pos:column="13">apr_thread_rwlock_create<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><operator pos:line="30" pos:column="38">&amp;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="39">rwlock<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">gPool<pos:position pos:line="30" pos:column="52"/></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">apr_pool_userdata_set<pos:position pos:line="31" pos:column="34"/></name> <argument_list pos:line="31" pos:column="35">(<argument><expr><operator pos:line="31" pos:column="36">(<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="37">void<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">*<pos:position pos:line="31" pos:column="42"/></operator><operator pos:line="31" pos:column="42">)<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="43">rwlock<pos:position pos:line="31" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="51">"STAT_CACHE_LOCK"<pos:position pos:line="31" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="70">apr_pool_cleanup_null<pos:position pos:line="31" pos:column="91"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="93">gPool<pos:position pos:line="31" pos:column="98"/></name></expr></argument>)<pos:position pos:line="31" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="100"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then>
        <else pos:line="33" pos:column="9">else <block pos:line="33" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">apr_pool_userdata_get<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><operator pos:line="34" pos:column="35">(<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="36">void<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">*<pos:position pos:line="34" pos:column="41"/></operator><operator pos:line="34" pos:column="41">*<pos:position pos:line="34" pos:column="42"/></operator><operator pos:line="34" pos:column="42">)<pos:position pos:line="34" pos:column="43"/></operator><operator pos:line="34" pos:column="43">&amp;<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="44">statCache<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="55">"STAT_CACHE"<pos:position pos:line="34" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="69">gPool<pos:position pos:line="34" pos:column="74"/></name></expr></argument>)<pos:position pos:line="34" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">apr_pool_userdata_get<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><operator pos:line="35" pos:column="35">(<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="36">void<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">*<pos:position pos:line="35" pos:column="41"/></operator><operator pos:line="35" pos:column="41">*<pos:position pos:line="35" pos:column="42"/></operator><operator pos:line="35" pos:column="42">)<pos:position pos:line="35" pos:column="43"/></operator><operator pos:line="35" pos:column="43">&amp;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="44">rwlock<pos:position pos:line="35" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="52">"STAT_CACHE_LOCK"<pos:position pos:line="35" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="71">gPool<pos:position pos:line="35" pos:column="76"/></name></expr></argument>)<pos:position pos:line="35" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></else></if>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">gPool<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">||<pos:position pos:line="38" pos:column="22"/></operator> <operator pos:line="38" pos:column="23">!<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="24">statCache<pos:position pos:line="38" pos:column="33"/></name> <operator pos:line="38" pos:column="34">||<pos:position pos:line="38" pos:column="36"/></operator> <operator pos:line="38" pos:column="37">!<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="38">rwlock<pos:position pos:line="38" pos:column="44"/></name></expr>)<pos:position pos:line="38" pos:column="45"/></condition><then pos:line="38" pos:column="45"> <block pos:line="38" pos:column="46">{
            <return pos:line="39" pos:column="13">return <expr><call><name pos:line="39" pos:column="20">getstat<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">ctx<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="33">path<pos:position pos:line="39" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="39">buf<pos:position pos:line="39" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="44">requestmap<pos:position pos:line="39" pos:column="54"/></name></expr></argument>)<pos:position pos:line="39" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="56"/></return>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
    
        <for pos:line="42" pos:column="9">for <control pos:line="42" pos:column="13">(<init><expr><name pos:line="42" pos:column="14">x<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <literal type="number" pos:line="42" pos:column="18">0<pos:position pos:line="42" pos:column="19"/></literal></expr><operator pos:line="42" pos:column="19">,<pos:position pos:line="42" pos:column="20"/></operator><expr><name pos:line="42" pos:column="20">tr<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">=<pos:position pos:line="42" pos:column="24"/></operator> <name pos:line="42" pos:column="25">path<pos:position pos:line="42" pos:column="29"/></name></expr>;<pos:position pos:line="42" pos:column="30"/></init><condition><expr><operator pos:line="42" pos:column="30">*<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="31">tr<pos:position pos:line="42" pos:column="33"/></name> <operator pos:line="42" pos:column="34">!=<pos:position pos:line="42" pos:column="36"/></operator> <literal type="char" pos:line="42" pos:column="37">'\0'<pos:position pos:line="42" pos:column="41"/></literal></expr>;<pos:position pos:line="42" pos:column="42"/></condition><incr><expr><name pos:line="42" pos:column="42">tr<pos:position pos:line="42" pos:column="44"/></name><operator pos:line="42" pos:column="44">++<pos:position pos:line="42" pos:column="46"/></operator></expr><operator pos:line="42" pos:column="46">,<pos:position pos:line="42" pos:column="47"/></operator><expr><name pos:line="42" pos:column="47">x<pos:position pos:line="42" pos:column="48"/></name><operator pos:line="42" pos:column="48">++<pos:position pos:line="42" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="51"/></control> <block pos:line="42" pos:column="52">{
            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><operator pos:line="43" pos:column="17">*<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="18">tr<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">==<pos:position pos:line="43" pos:column="23"/></operator> <literal type="char" pos:line="43" pos:column="24">'\\'<pos:position pos:line="43" pos:column="28"/></literal> <operator pos:line="43" pos:column="29">||<pos:position pos:line="43" pos:column="31"/></operator> <operator pos:line="43" pos:column="32">*<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="33">tr<pos:position pos:line="43" pos:column="35"/></name> <operator pos:line="43" pos:column="36">==<pos:position pos:line="43" pos:column="38"/></operator> <literal type="char" pos:line="43" pos:column="39">'/'<pos:position pos:line="43" pos:column="42"/></literal></expr>)<pos:position pos:line="43" pos:column="43"/></condition><then pos:line="43" pos:column="43"> <block pos:line="43" pos:column="44">{
                <expr_stmt><expr><name pos:line="44" pos:column="17">ptr<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">tr<pos:position pos:line="44" pos:column="25"/></name></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt>
                <expr_stmt><expr><name pos:line="45" pos:column="17">len<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">=<pos:position pos:line="45" pos:column="22"/></operator> <name pos:line="45" pos:column="23">x<pos:position pos:line="45" pos:column="24"/></name></expr>;<pos:position pos:line="45" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="46" pos:column="14"/></block></then></if>
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><operator pos:line="47" pos:column="17">*<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">tr<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">==<pos:position pos:line="47" pos:column="23"/></operator> <literal type="char" pos:line="47" pos:column="24">':'<pos:position pos:line="47" pos:column="27"/></literal></expr>)<pos:position pos:line="47" pos:column="28"/></condition><then pos:line="47" pos:column="28"> <block pos:line="47" pos:column="29">{
                <expr_stmt><expr><name pos:line="48" pos:column="17">ptr<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <literal type="string" pos:line="48" pos:column="23">"\\"<pos:position pos:line="48" pos:column="27"/></literal></expr>;<pos:position pos:line="48" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><name pos:line="49" pos:column="17">len<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">=<pos:position pos:line="49" pos:column="22"/></operator> <name pos:line="49" pos:column="23">x<pos:position pos:line="49" pos:column="24"/></name></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="50" pos:column="14"/></block></then></if>
        }<pos:position pos:line="51" pos:column="10"/></block></for>
    
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">ptr<pos:position pos:line="53" pos:column="16"/></name></expr>)<pos:position pos:line="53" pos:column="17"/></condition><then pos:line="53" pos:column="17"> <block pos:line="53" pos:column="18">{
            <expr_stmt><expr><name pos:line="54" pos:column="13">ppath<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <call><name pos:line="54" pos:column="21">apr_pstrndup<pos:position pos:line="54" pos:column="33"/></name> <argument_list pos:line="54" pos:column="34">(<argument><expr><name pos:line="54" pos:column="35">p<pos:position pos:line="54" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="38">path<pos:position pos:line="54" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="44">len<pos:position pos:line="54" pos:column="47"/></name></expr></argument>)<pos:position pos:line="54" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">strlwr<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><name pos:line="55" pos:column="20">ppath<pos:position pos:line="55" pos:column="25"/></name></expr></argument>)<pos:position pos:line="55" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>
            <if pos:line="56" pos:column="13">if <condition pos:line="56" pos:column="16">(<expr><name><name pos:line="56" pos:column="17">ptr<pos:position pos:line="56" pos:column="20"/></name><index pos:line="56" pos:column="20">[<expr><literal type="number" pos:line="56" pos:column="21">1<pos:position pos:line="56" pos:column="22"/></literal></expr>]<pos:position pos:line="56" pos:column="23"/></index></name> <operator pos:line="56" pos:column="24">!=<pos:position pos:line="56" pos:column="26"/></operator> <literal type="char" pos:line="56" pos:column="27">'\0'<pos:position pos:line="56" pos:column="31"/></literal></expr>)<pos:position pos:line="56" pos:column="32"/></condition><then pos:line="56" pos:column="32"> <block pos:line="56" pos:column="33">{
                <expr_stmt><expr><name pos:line="57" pos:column="17">ptr<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">++<pos:position pos:line="57" pos:column="22"/></operator></expr>;<pos:position pos:line="57" pos:column="23"/></expr_stmt>
            }<pos:position pos:line="58" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="59" pos:column="13">/* If the path ended in a trailing slash then our result path
               will be a single slash. To avoid stat'ing the root with a
               slash, we need to make sure we stat the current directory
               with a dot */</comment>
            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><operator pos:line="63" pos:column="17">(<pos:position pos:line="63" pos:column="18"/></operator><operator pos:line="63" pos:column="18">(<pos:position pos:line="63" pos:column="19"/></operator><operator pos:line="63" pos:column="19">*<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="20">ptr<pos:position pos:line="63" pos:column="23"/></name> <operator pos:line="63" pos:column="24">==<pos:position pos:line="63" pos:column="26"/></operator> <literal type="char" pos:line="63" pos:column="27">'/'<pos:position pos:line="63" pos:column="30"/></literal><operator pos:line="63" pos:column="30">)<pos:position pos:line="63" pos:column="31"/></operator> <operator pos:line="63" pos:column="32">||<pos:position pos:line="63" pos:column="34"/></operator> <operator pos:line="63" pos:column="35">(<pos:position pos:line="63" pos:column="36"/></operator><operator pos:line="63" pos:column="36">*<pos:position pos:line="63" pos:column="37"/></operator><name pos:line="63" pos:column="37">ptr<pos:position pos:line="63" pos:column="40"/></name> <operator pos:line="63" pos:column="41">==<pos:position pos:line="63" pos:column="43"/></operator> <literal type="char" pos:line="63" pos:column="44">'\\'<pos:position pos:line="63" pos:column="48"/></literal><operator pos:line="63" pos:column="48">)<pos:position pos:line="63" pos:column="49"/></operator><operator pos:line="63" pos:column="49">)<pos:position pos:line="63" pos:column="50"/></operator> <operator pos:line="63" pos:column="51">&amp;&amp;<pos:position pos:line="63" pos:column="61"/></operator> <operator pos:line="63" pos:column="54">(<pos:position pos:line="63" pos:column="55"/></operator><operator pos:line="63" pos:column="55">*<pos:position pos:line="63" pos:column="56"/></operator><operator pos:line="63" pos:column="56">(<pos:position pos:line="63" pos:column="57"/></operator><name pos:line="63" pos:column="57">ptr<pos:position pos:line="63" pos:column="60"/></name><operator pos:line="63" pos:column="60">+<pos:position pos:line="63" pos:column="61"/></operator><literal type="number" pos:line="63" pos:column="61">1<pos:position pos:line="63" pos:column="62"/></literal><operator pos:line="63" pos:column="62">)<pos:position pos:line="63" pos:column="63"/></operator> <operator pos:line="63" pos:column="64">==<pos:position pos:line="63" pos:column="66"/></operator> <literal type="char" pos:line="63" pos:column="67">'\0'<pos:position pos:line="63" pos:column="71"/></literal><operator pos:line="63" pos:column="71">)<pos:position pos:line="63" pos:column="72"/></operator></expr>)<pos:position pos:line="63" pos:column="73"/></condition><then pos:line="63" pos:column="73"> <block pos:line="63" pos:column="74">{
                <expr_stmt><expr><name pos:line="64" pos:column="17">pinfo<pos:position pos:line="64" pos:column="22"/></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <call><name pos:line="64" pos:column="25">apr_pstrdup<pos:position pos:line="64" pos:column="36"/></name> <argument_list pos:line="64" pos:column="37">(<argument><expr><name pos:line="64" pos:column="38">p<pos:position pos:line="64" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="41">"."<pos:position pos:line="64" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="65" pos:column="14"/></block></then>
            <else pos:line="66" pos:column="13">else <block pos:line="66" pos:column="18">{
                <expr_stmt><expr><name pos:line="67" pos:column="17">pinfo<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <call><name pos:line="67" pos:column="25">apr_pstrdup<pos:position pos:line="67" pos:column="36"/></name> <argument_list pos:line="67" pos:column="37">(<argument><expr><name pos:line="67" pos:column="38">p<pos:position pos:line="67" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="41">ptr<pos:position pos:line="67" pos:column="44"/></name></expr></argument>)<pos:position pos:line="67" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="68" pos:column="14"/></block></else></if>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>
    
        <comment type="block" pos:line="71" pos:column="9">/* If we have a statCache then try to pull the information
           from the cache.  Otherwise just stat the file and return.*/</comment>
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">statCache<pos:position pos:line="73" pos:column="22"/></name></expr>)<pos:position pos:line="73" pos:column="23"/></condition><then pos:line="73" pos:column="23"> <block pos:line="73" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">apr_thread_rwlock_rdlock<pos:position pos:line="74" pos:column="37"/></name><argument_list pos:line="74" pos:column="37">(<argument><expr><name pos:line="74" pos:column="38">rwlock<pos:position pos:line="74" pos:column="44"/></name></expr></argument>)<pos:position pos:line="74" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="75" pos:column="13">pathctx<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">=<pos:position pos:line="75" pos:column="22"/></operator> <operator pos:line="75" pos:column="23">(<pos:position pos:line="75" pos:column="24"/></operator><name pos:line="75" pos:column="24">NXPathCtx_t<pos:position pos:line="75" pos:column="35"/></name><operator pos:line="75" pos:column="35">)<pos:position pos:line="75" pos:column="36"/></operator> <call><name pos:line="75" pos:column="37">apr_hash_get<pos:position pos:line="75" pos:column="49"/></name><argument_list pos:line="75" pos:column="49">(<argument><expr><name pos:line="75" pos:column="50">statCache<pos:position pos:line="75" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="61">ppath<pos:position pos:line="75" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="68">APR_HASH_KEY_STRING<pos:position pos:line="75" pos:column="87"/></name></expr></argument>)<pos:position pos:line="75" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="89"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">apr_thread_rwlock_unlock<pos:position pos:line="76" pos:column="37"/></name><argument_list pos:line="76" pos:column="37">(<argument><expr><name pos:line="76" pos:column="38">rwlock<pos:position pos:line="76" pos:column="44"/></name></expr></argument>)<pos:position pos:line="76" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="46"/></expr_stmt>
            <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><name pos:line="77" pos:column="17">pathctx<pos:position pos:line="77" pos:column="24"/></name></expr>)<pos:position pos:line="77" pos:column="25"/></condition><then pos:line="77" pos:column="25"> <block pos:line="77" pos:column="26">{
                <return pos:line="78" pos:column="17">return <expr><call><name pos:line="78" pos:column="24">getstat<pos:position pos:line="78" pos:column="31"/></name><argument_list pos:line="78" pos:column="31">(<argument><expr><name pos:line="78" pos:column="32">pathctx<pos:position pos:line="78" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="41">pinfo<pos:position pos:line="78" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="48">buf<pos:position pos:line="78" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="53">requestmap<pos:position pos:line="78" pos:column="63"/></name></expr></argument>)<pos:position pos:line="78" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="65"/></return>
            }<pos:position pos:line="79" pos:column="14"/></block></then>
            <else pos:line="80" pos:column="13">else <block pos:line="80" pos:column="18">{
                <decl_stmt><decl><type><name pos:line="81" pos:column="17">int<pos:position pos:line="81" pos:column="20"/></name></type> <name pos:line="81" pos:column="21">err<pos:position pos:line="81" pos:column="24"/></name></decl>;<pos:position pos:line="81" pos:column="25"/></decl_stmt>

                <expr_stmt><expr><name pos:line="83" pos:column="17">err<pos:position pos:line="83" pos:column="20"/></name> <operator pos:line="83" pos:column="21">=<pos:position pos:line="83" pos:column="22"/></operator> <call><name pos:line="83" pos:column="23">NXCreatePathContext<pos:position pos:line="83" pos:column="42"/></name><argument_list pos:line="83" pos:column="42">(<argument><expr><literal type="number" pos:line="83" pos:column="43">0<pos:position pos:line="83" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="46">ppath<pos:position pos:line="83" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="53">0<pos:position pos:line="83" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="56">NULL<pos:position pos:line="83" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="62">&amp;<pos:position pos:line="83" pos:column="67"/></operator><name pos:line="83" pos:column="63">pathctx<pos:position pos:line="83" pos:column="70"/></name></expr></argument>)<pos:position pos:line="83" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="72"/></expr_stmt>
                <if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><operator pos:line="84" pos:column="21">!<pos:position pos:line="84" pos:column="22"/></operator><name pos:line="84" pos:column="22">err<pos:position pos:line="84" pos:column="25"/></name></expr>)<pos:position pos:line="84" pos:column="26"/></condition><then pos:line="84" pos:column="26"> <block pos:line="84" pos:column="27">{
                    <expr_stmt><expr><call><name pos:line="85" pos:column="21">apr_thread_rwlock_wrlock<pos:position pos:line="85" pos:column="45"/></name><argument_list pos:line="85" pos:column="45">(<argument><expr><name pos:line="85" pos:column="46">rwlock<pos:position pos:line="85" pos:column="52"/></name></expr></argument>)<pos:position pos:line="85" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="54"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="86" pos:column="21">apr_hash_set<pos:position pos:line="86" pos:column="33"/></name><argument_list pos:line="86" pos:column="33">(<argument><expr><name pos:line="86" pos:column="34">statCache<pos:position pos:line="86" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="45">apr_pstrdup<pos:position pos:line="86" pos:column="56"/></name><argument_list pos:line="86" pos:column="56">(<argument><expr><name pos:line="86" pos:column="57">gPool<pos:position pos:line="86" pos:column="62"/></name></expr></argument>,<argument><expr><name pos:line="86" pos:column="63">ppath<pos:position pos:line="86" pos:column="68"/></name></expr></argument>)<pos:position pos:line="86" pos:column="69"/></argument_list></call></expr></argument> , <argument><expr><name pos:line="86" pos:column="72">APR_HASH_KEY_STRING<pos:position pos:line="86" pos:column="91"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="93">(<pos:position pos:line="86" pos:column="94"/></operator><name pos:line="86" pos:column="94">void<pos:position pos:line="86" pos:column="98"/></name><operator pos:line="86" pos:column="98">*<pos:position pos:line="86" pos:column="99"/></operator><operator pos:line="86" pos:column="99">)<pos:position pos:line="86" pos:column="100"/></operator><name pos:line="86" pos:column="100">pathctx<pos:position pos:line="86" pos:column="107"/></name></expr></argument>)<pos:position pos:line="86" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="109"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="87" pos:column="21">apr_thread_rwlock_unlock<pos:position pos:line="87" pos:column="45"/></name><argument_list pos:line="87" pos:column="45">(<argument><expr><name pos:line="87" pos:column="46">rwlock<pos:position pos:line="87" pos:column="52"/></name></expr></argument>)<pos:position pos:line="87" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="54"/></expr_stmt>
                    <return pos:line="88" pos:column="21">return <expr><call><name pos:line="88" pos:column="28">getstat<pos:position pos:line="88" pos:column="35"/></name><argument_list pos:line="88" pos:column="35">(<argument><expr><name pos:line="88" pos:column="36">pathctx<pos:position pos:line="88" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="45">pinfo<pos:position pos:line="88" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="52">buf<pos:position pos:line="88" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="57">requestmap<pos:position pos:line="88" pos:column="67"/></name></expr></argument>)<pos:position pos:line="88" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="69"/></return>
                }<pos:position pos:line="89" pos:column="18"/></block></then></if>
            }<pos:position pos:line="90" pos:column="14"/></block></else></if>
        }<pos:position pos:line="91" pos:column="10"/></block></then></if>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>
    <return pos:line="93" pos:column="5">return <expr><call><name pos:line="93" pos:column="12">getstat<pos:position pos:line="93" pos:column="19"/></name><argument_list pos:line="93" pos:column="19">(<argument><expr><name pos:line="93" pos:column="20">ctx<pos:position pos:line="93" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="25">path<pos:position pos:line="93" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="31">buf<pos:position pos:line="93" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="36">requestmap<pos:position pos:line="93" pos:column="46"/></name></expr></argument>)<pos:position pos:line="93" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="48"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

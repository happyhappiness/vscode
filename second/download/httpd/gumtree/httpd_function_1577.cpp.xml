<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1577.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ssl_dh_InitParams<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">server_rec<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">s<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">unsigned<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">n<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><expr><name pos:line="5" pos:column="10">n<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr>;<pos:position pos:line="5" pos:column="16"/></init> <condition><expr><name pos:line="5" pos:column="17">n<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">&lt;<pos:position pos:line="5" pos:column="23"/></operator> <sizeof pos:line="5" pos:column="21">sizeof<argument_list pos:line="5" pos:column="27">(<argument><expr><name pos:line="5" pos:column="28">dhparams<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></sizeof><operator pos:line="5" pos:column="37">/<pos:position pos:line="5" pos:column="38"/></operator><sizeof pos:line="5" pos:column="38">sizeof<argument_list pos:line="5" pos:column="44">(<argument><expr><name><name pos:line="5" pos:column="45">dhparams<pos:position pos:line="5" pos:column="53"/></name><index pos:line="5" pos:column="53">[<expr><literal type="number" pos:line="5" pos:column="54">0<pos:position pos:line="5" pos:column="55"/></literal></expr>]<pos:position pos:line="5" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></sizeof></expr>;<pos:position pos:line="5" pos:column="58"/></condition> <incr><expr><name pos:line="5" pos:column="59">n<pos:position pos:line="5" pos:column="60"/></name><operator pos:line="5" pos:column="60">++<pos:position pos:line="5" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="63"/></control> <block pos:line="5" pos:column="64">{
        <decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">unsigned<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">int<pos:position pos:line="6" pos:column="27"/></name></type> <name pos:line="6" pos:column="28">bits<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">=
            <expr><ternary><condition><expr><name><name pos:line="7" pos:column="13">dhparams<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><name pos:line="7" pos:column="22">n<pos:position pos:line="7" pos:column="23"/></name></expr>]<pos:position pos:line="7" pos:column="24"/></index></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">min<pos:position pos:line="7" pos:column="28"/></name></expr> ?<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30"> <expr><operator pos:line="7" pos:column="31">(<pos:position pos:line="7" pos:column="32"/></operator><name><name pos:line="7" pos:column="32">dhparams<pos:position pos:line="7" pos:column="40"/></name><index pos:line="7" pos:column="40">[<expr><name pos:line="7" pos:column="41">n<pos:position pos:line="7" pos:column="42"/></name></expr>]<pos:position pos:line="7" pos:column="43"/></index></name><operator pos:line="7" pos:column="43">.<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="44">min<pos:position pos:line="7" pos:column="47"/></name> <operator pos:line="7" pos:column="48">-<pos:position pos:line="7" pos:column="49"/></operator> <literal type="number" pos:line="7" pos:column="50">1<pos:position pos:line="7" pos:column="51"/></literal><operator pos:line="7" pos:column="51">)<pos:position pos:line="7" pos:column="52"/></operator> <operator pos:line="7" pos:column="53">*<pos:position pos:line="7" pos:column="54"/></operator> <literal type="number" pos:line="7" pos:column="55">2<pos:position pos:line="7" pos:column="56"/></literal></expr> <pos:position pos:line="7" pos:column="57"/></then><else pos:line="7" pos:column="57">: <expr><literal type="number" pos:line="7" pos:column="59">512<pos:position pos:line="7" pos:column="62"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="7" pos:column="63"/></decl_stmt>
<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">HAVE_FIPS<pos:position pos:line="8" pos:column="17"/></name></cpp:ifdef>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">bits<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">&lt;<pos:position pos:line="9" pos:column="22"/></operator> <literal type="number" pos:line="9" pos:column="20">1024<pos:position pos:line="9" pos:column="24"/></literal> <operator pos:line="9" pos:column="25">&amp;&amp;<pos:position pos:line="9" pos:column="35"/></operator> <call><name pos:line="9" pos:column="28">FIPS_mode<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">()<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40"> <block pos:line="9" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">ap_log_error<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">APLOG_MARK<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">APLOG_DEBUG<pos:position pos:line="10" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="51">0<pos:position pos:line="10" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="54">s<pos:position pos:line="10" pos:column="55"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="11" pos:column="26">"Init: Skipping generating temporary "<pos:position pos:line="11" pos:column="64"/></literal>
                         <literal type="string" pos:line="12" pos:column="26">"%u bit DH parameters in FIPS mode"<pos:position pos:line="12" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="63">bits<pos:position pos:line="12" pos:column="67"/></name></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="69"/></expr_stmt>
            <continue pos:line="13" pos:column="13">continue;<pos:position pos:line="13" pos:column="22"/></continue>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">dhparams<pos:position pos:line="16" pos:column="17"/></name><index pos:line="16" pos:column="17">[<expr><name pos:line="16" pos:column="18">n<pos:position pos:line="16" pos:column="19"/></name></expr>]<pos:position pos:line="16" pos:column="20"/></index></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">dh<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <name><name pos:line="16" pos:column="26">dhparams<pos:position pos:line="16" pos:column="34"/></name><index pos:line="16" pos:column="34">[<expr><name pos:line="16" pos:column="35">n<pos:position pos:line="16" pos:column="36"/></name></expr>]<pos:position pos:line="16" pos:column="37"/></index></name><operator pos:line="16" pos:column="37">.<pos:position pos:line="16" pos:column="38"/></operator><call><name pos:line="16" pos:column="38">make<pos:position pos:line="16" pos:column="42"/></name><argument_list pos:line="16" pos:column="42">()<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name><name pos:line="17" pos:column="14">dhparams<pos:position pos:line="17" pos:column="22"/></name><index pos:line="17" pos:column="22">[<expr><name pos:line="17" pos:column="23">n<pos:position pos:line="17" pos:column="24"/></name></expr>]<pos:position pos:line="17" pos:column="25"/></index></name><operator pos:line="17" pos:column="25">.<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">dh<pos:position pos:line="17" pos:column="28"/></name></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29"> <block pos:line="17" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">ap_log_error<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">APLOG_MARK<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">APLOG_ERR<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="49">0<pos:position pos:line="18" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="52">s<pos:position pos:line="18" pos:column="53"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="19" pos:column="26">"Init: Failed to generate temporary "<pos:position pos:line="19" pos:column="63"/></literal>
                         <literal type="string" pos:line="20" pos:column="26">"%u bit DH parameters"<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">bits<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="56"/></expr_stmt>
            <return pos:line="21" pos:column="13">return <expr><operator pos:line="21" pos:column="20">!<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">OK<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
    }<pos:position pos:line="23" pos:column="6"/></block></for>
    <return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">OK<pos:position pos:line="24" pos:column="14"/></name></expr>;<pos:position pos:line="24" pos:column="15"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

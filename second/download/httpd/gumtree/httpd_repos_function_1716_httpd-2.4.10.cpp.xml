<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1716_httpd-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cgi_post_config<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">apr_pool_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">p<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">apr_pool_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">plog<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">apr_pool_t<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">ptemp<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">server_rec<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">s<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">cgi_pfn_reg_with_ssi<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">=<pos:position pos:line="4" pos:column="27"/></operator> <call><name pos:line="4" pos:column="28">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="4" pos:column="52"/></name><argument_list pos:line="4" pos:column="52">(<argument><expr><name pos:line="4" pos:column="53">ap_register_include_handler<pos:position pos:line="4" pos:column="80"/></name></expr></argument>)<pos:position pos:line="4" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">cgi_pfn_gtv<pos:position pos:line="5" pos:column="16"/></name>          <operator pos:line="5" pos:column="26">=<pos:position pos:line="5" pos:column="27"/></operator> <call><name pos:line="5" pos:column="28">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="5" pos:column="52"/></name><argument_list pos:line="5" pos:column="52">(<argument><expr><name pos:line="5" pos:column="53">ap_ssi_get_tag_and_value<pos:position pos:line="5" pos:column="77"/></name></expr></argument>)<pos:position pos:line="5" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">cgi_pfn_ps<pos:position pos:line="6" pos:column="15"/></name>           <operator pos:line="6" pos:column="26">=<pos:position pos:line="6" pos:column="27"/></operator> <call><name pos:line="6" pos:column="28">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="6" pos:column="52"/></name><argument_list pos:line="6" pos:column="52">(<argument><expr><name pos:line="6" pos:column="53">ap_ssi_parse_string<pos:position pos:line="6" pos:column="72"/></name></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="74"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">cgi_pfn_reg_with_ssi<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">)<pos:position pos:line="8" pos:column="31"/></operator> <operator pos:line="8" pos:column="32">&amp;&amp;<pos:position pos:line="8" pos:column="42"/></operator> <operator pos:line="8" pos:column="35">(<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">cgi_pfn_gtv<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">)<pos:position pos:line="8" pos:column="48"/></operator> <operator pos:line="8" pos:column="49">&amp;&amp;<pos:position pos:line="8" pos:column="59"/></operator> <operator pos:line="8" pos:column="52">(<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="53">cgi_pfn_ps<pos:position pos:line="8" pos:column="63"/></name><operator pos:line="8" pos:column="63">)<pos:position pos:line="8" pos:column="64"/></operator></expr>)<pos:position pos:line="8" pos:column="65"/></condition><then pos:line="8" pos:column="65"> <block pos:line="8" pos:column="66">{
        <comment type="block" pos:line="9" pos:column="9">/* Required by mod_include filter. This is how mod_cgi registers
         *   with mod_include to provide processing of the exec directive.
         */</comment>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">cgi_pfn_reg_with_ssi<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><literal type="string" pos:line="12" pos:column="30">"exec"<pos:position pos:line="12" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">handle_exec<pos:position pos:line="12" pos:column="49"/></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* This is the means by which unusual (non-unix) os's may find alternate
     * means to run a given command (e.g. shebang/registry parsing on Win32)
     */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">cgi_build_command<pos:position pos:line="18" pos:column="22"/></name>    <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <call><name pos:line="18" pos:column="28">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="18" pos:column="52"/></name><argument_list pos:line="18" pos:column="52">(<argument><expr><name pos:line="18" pos:column="53">ap_cgi_build_command<pos:position pos:line="18" pos:column="73"/></name></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="75"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">cgi_build_command<pos:position pos:line="19" pos:column="27"/></name></expr>)<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28"> <block pos:line="19" pos:column="29">{
        <expr_stmt><expr><name pos:line="20" pos:column="9">cgi_build_command<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="29">default_build_command<pos:position pos:line="20" pos:column="50"/></name></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">OK<pos:position pos:line="22" pos:column="14"/></name></expr>;<pos:position pos:line="22" pos:column="15"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1120_httpd-2.0.55.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">discard_script_output<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">apr_bucket_brigade<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">bb<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_bucket<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">e<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">buf<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <macro><name pos:line="7" pos:column="5">APR_BRIGADE_FOREACH<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument pos:line="7" pos:column="25">e<pos:position pos:line="7" pos:column="26"/></argument>, <argument pos:line="7" pos:column="28">bb<pos:position pos:line="7" pos:column="30"/></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></macro> <block pos:line="7" pos:column="32">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">e<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34"> <block pos:line="8" pos:column="35">{
            <break pos:line="9" pos:column="13">break;<pos:position pos:line="9" pos:column="19"/></break>
        }<pos:position pos:line="10" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="11" pos:column="9">rv<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">apr_bucket_read<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">e<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="33">&amp;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="34">buf<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="39">&amp;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="40">len<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">APR_BLOCK_READ<pos:position pos:line="11" pos:column="59"/></name></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="61"/></expr_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">rv<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">!=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">APR_SUCCESS<pos:position pos:line="12" pos:column="30"/></name></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31"> <block pos:line="12" pos:column="32">{
            <break pos:line="13" pos:column="13">break;<pos:position pos:line="13" pos:column="19"/></break>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>
    }<pos:position pos:line="15" pos:column="6"/></block>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

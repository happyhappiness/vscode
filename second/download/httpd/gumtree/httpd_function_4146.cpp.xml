<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4146.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ajp_ilink_receive<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">apr_socket_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">sock<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">ajp_msg_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">msg<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_size_t<pos:position pos:line="4" pos:column="15"/></name></type>   <name pos:line="4" pos:column="18">hlen<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type>   <name pos:line="5" pos:column="18">blen<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">sock<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">==<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">NULL<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22"> <block pos:line="7" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">ap_log_error<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">APLOG_MARK<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">APLOG_ERR<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="45">0<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">NULL<pos:position pos:line="8" pos:column="52"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="9" pos:column="23">"ajp_ilink_receive(): NULL socket provided"<pos:position pos:line="9" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">AJP_EINVAL<pos:position pos:line="10" pos:column="26"/></name></expr>;<pos:position pos:line="10" pos:column="27"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="13" pos:column="5">hlen<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <name><name pos:line="13" pos:column="12">msg<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">header_len<pos:position pos:line="13" pos:column="27"/></name></name></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">status<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">ilink_read<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">sock<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="31">msg<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">buf<pos:position pos:line="15" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">hlen<pos:position pos:line="15" pos:column="45"/></name></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="47"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">status<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">!=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">APR_SUCCESS<pos:position pos:line="17" pos:column="30"/></name></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31"> <block pos:line="17" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_log_error<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">APLOG_MARK<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">APLOG_ERR<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">status<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="53">NULL<pos:position pos:line="18" pos:column="57"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="19" pos:column="22">"ajp_ilink_receive() can't receive header"<pos:position pos:line="19" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="66"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">AJP_ENO_HEADER<pos:position pos:line="20" pos:column="30"/></name></expr>;<pos:position pos:line="20" pos:column="31"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">status<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">ajp_msg_check_header<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">msg<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="40">&amp;<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="41">blen<pos:position pos:line="23" pos:column="45"/></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">status<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">!=<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">APR_SUCCESS<pos:position pos:line="25" pos:column="30"/></name></expr>)<pos:position pos:line="25" pos:column="31"/></condition><then pos:line="25" pos:column="31"> <block pos:line="25" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">ap_log_error<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">APLOG_MARK<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">APLOG_ERR<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="45">0<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="48">NULL<pos:position pos:line="26" pos:column="52"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="27" pos:column="22">"ajp_ilink_receive() received bad header"<pos:position pos:line="27" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="65"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">AJP_EBAD_HEADER<pos:position pos:line="28" pos:column="31"/></name></expr>;<pos:position pos:line="28" pos:column="32"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="31" pos:column="5">status<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <call><name pos:line="31" pos:column="14">ilink_read<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">sock<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="31">msg<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">buf<pos:position pos:line="31" pos:column="39"/></name></name> <operator pos:line="31" pos:column="40">+<pos:position pos:line="31" pos:column="41"/></operator> <name pos:line="31" pos:column="42">hlen<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">blen<pos:position pos:line="31" pos:column="52"/></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">status<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">!=<pos:position pos:line="33" pos:column="18"/></operator> <name pos:line="33" pos:column="19">APR_SUCCESS<pos:position pos:line="33" pos:column="30"/></name></expr>)<pos:position pos:line="33" pos:column="31"/></condition><then pos:line="33" pos:column="31"> <block pos:line="33" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">ap_log_error<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">APLOG_MARK<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="34">APLOG_ERR<pos:position pos:line="34" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="45">status<pos:position pos:line="34" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="53">NULL<pos:position pos:line="34" pos:column="57"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="35" pos:column="22">"ajp_ilink_receive() error while receiving message body "<pos:position pos:line="35" pos:column="79"/></literal>
                     <literal type="string" pos:line="36" pos:column="22">"of length %"<pos:position pos:line="36" pos:column="35"/></literal> <name pos:line="36" pos:column="36">APR_SIZE_T_FMT<pos:position pos:line="36" pos:column="50"/></name></expr></argument>,
                     <argument><expr><name pos:line="37" pos:column="22">hlen<pos:position pos:line="37" pos:column="26"/></name></expr></argument>)<pos:position pos:line="37" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">AJP_EBAD_MESSAGE<pos:position pos:line="38" pos:column="32"/></name></expr>;<pos:position pos:line="38" pos:column="33"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">ap_log_error<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><name pos:line="41" pos:column="18">APLOG_MARK<pos:position pos:line="41" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="30">APLOG_DEBUG<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="43">0<pos:position pos:line="41" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">NULL<pos:position pos:line="41" pos:column="50"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="42" pos:column="18">"ajp_ilink_receive() received packet len=%"<pos:position pos:line="42" pos:column="61"/></literal> <name pos:line="42" pos:column="62">APR_SIZE_T_FMT<pos:position pos:line="42" pos:column="76"/></name>
                 <literal type="string" pos:line="43" pos:column="18">"type=%d"<pos:position pos:line="43" pos:column="27"/></literal></expr></argument>,
                  <argument><expr><name pos:line="44" pos:column="19">blen<pos:position pos:line="44" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="25">(<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="26">int<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">)<pos:position pos:line="44" pos:column="30"/></operator><name><name pos:line="44" pos:column="30">msg<pos:position pos:line="44" pos:column="33"/></name><operator pos:line="44" pos:column="33">-&gt;<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="35">buf<pos:position pos:line="44" pos:column="38"/></name><index pos:line="44" pos:column="38">[<expr><name pos:line="44" pos:column="39">hlen<pos:position pos:line="44" pos:column="43"/></name></expr>]<pos:position pos:line="44" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="44" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="46"/></expr_stmt>

    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">APR_SUCCESS<pos:position pos:line="46" pos:column="23"/></name></expr>;<pos:position pos:line="46" pos:column="24"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

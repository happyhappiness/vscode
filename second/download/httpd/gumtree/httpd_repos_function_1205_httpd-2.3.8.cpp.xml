<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1205_httpd-2.3.8.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">cache_pq_print<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">cache_pqueue_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">q<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="2" pos:column="21">FILE<pos:position pos:line="2" pos:column="25"/></name><modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">out<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="3" pos:column="21">cache_pqueue_print_entry<pos:position pos:line="3" pos:column="45"/></name></type> <name pos:line="3" pos:column="46">print<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">cache_pqueue_t<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">dup<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">dup<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator> <call><name pos:line="6" pos:column="11">cache_pq_init<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name><name pos:line="6" pos:column="25">q<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">size<pos:position pos:line="6" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="34">q<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">pri<pos:position pos:line="6" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="42">q<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">-&gt;<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="45">get<pos:position pos:line="6" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="50">cache_pq_set_null<pos:position pos:line="6" pos:column="67"/></name></expr></argument>)<pos:position pos:line="6" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">dup<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">-&gt;<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="10">size<pos:position pos:line="7" pos:column="14"/></name></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <name><name pos:line="7" pos:column="17">q<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">size<pos:position pos:line="7" pos:column="24"/></name></name></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">dup<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">avail<pos:position pos:line="8" pos:column="15"/></name></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name><name pos:line="8" pos:column="18">q<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">avail<pos:position pos:line="8" pos:column="26"/></name></name></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">dup<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">-&gt;<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="10">step<pos:position pos:line="9" pos:column="14"/></name></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <name><name pos:line="9" pos:column="17">q<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">step<pos:position pos:line="9" pos:column="24"/></name></name></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">memcpy<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name><name pos:line="11" pos:column="12">dup<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">d<pos:position pos:line="11" pos:column="18"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="20">q<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">d<pos:position pos:line="11" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="26">q<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">size<pos:position pos:line="11" pos:column="33"/></name></name><operator pos:line="11" pos:column="33">*<pos:position pos:line="11" pos:column="34"/></operator><sizeof pos:line="11" pos:column="34">sizeof<argument_list pos:line="11" pos:column="40">(<argument><expr><name pos:line="11" pos:column="41">void<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">*<pos:position pos:line="11" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>

    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><call><name pos:line="13" pos:column="12">cache_pq_size<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">dup<pos:position pos:line="13" pos:column="29"/></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call> <operator pos:line="13" pos:column="31">&gt;<pos:position pos:line="13" pos:column="35"/></operator> <literal type="number" pos:line="13" pos:column="33">1<pos:position pos:line="13" pos:column="34"/></literal></expr>)<pos:position pos:line="13" pos:column="35"/></condition> <block pos:line="13" pos:column="36">{
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">void<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">e<pos:position pos:line="14" pos:column="16"/></name> <init pos:line="14" pos:column="17">= <expr><name pos:line="14" pos:column="19">NULL<pos:position pos:line="14" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="24"/></decl_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">e<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <call><name pos:line="15" pos:column="13">cache_pq_pop<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">dup<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">e<pos:position pos:line="16" pos:column="14"/></name></expr>)<pos:position pos:line="16" pos:column="15"/></condition><then pos:line="16" pos:column="15">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="13">print<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">out<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="24">e<pos:position pos:line="17" pos:column="25"/></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt></block></then>
        <else pos:line="18" pos:column="9">else
            <block type="pseudo"><break pos:line="19" pos:column="13">break;<pos:position pos:line="19" pos:column="19"/></break></block></else></if>
    }<pos:position pos:line="20" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">cache_pq_free<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">dup<pos:position pos:line="21" pos:column="22"/></name></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

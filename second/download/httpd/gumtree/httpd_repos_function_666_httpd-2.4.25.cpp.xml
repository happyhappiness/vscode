<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_666_httpd-2.4.25.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ssl_pphrase_Handle_CB<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">buf<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">bufsize<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">verify<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">void<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">srv<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">pphrase_cb_arg_t<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">ppcb_arg<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><operator pos:line="3" pos:column="34">(<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="35">pphrase_cb_arg_t<pos:position pos:line="3" pos:column="51"/></name> <operator pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></operator><operator pos:line="3" pos:column="53">)<pos:position pos:line="3" pos:column="54"/></operator><name pos:line="3" pos:column="54">srv<pos:position pos:line="3" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SSLSrvConfigRec<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">sc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><call><name pos:line="4" pos:column="27">mySrvConfig<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name><name pos:line="4" pos:column="39">ppcb_arg<pos:position pos:line="4" pos:column="47"/></name><operator pos:line="4" pos:column="47">-&gt;<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="49">s<pos:position pos:line="4" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">cpp<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">len<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><operator pos:line="6" pos:column="15">-<pos:position pos:line="6" pos:column="16"/></operator><literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="8" pos:column="5">ppcb_arg<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">nPassPhraseDialog<pos:position pos:line="8" pos:column="32"/></name></name><operator pos:line="8" pos:column="32">++<pos:position pos:line="8" pos:column="34"/></operator></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">ppcb_arg<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">nPassPhraseDialogCur<pos:position pos:line="9" pos:column="35"/></name></name><operator pos:line="9" pos:column="35">++<pos:position pos:line="9" pos:column="37"/></operator></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="11" pos:column="5">/*
     * When remembered pass phrases are available use them...
     */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">cpp<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">pphrase_array_get<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name><name pos:line="14" pos:column="34">ppcb_arg<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">aPassPhrase<pos:position pos:line="14" pos:column="55"/></name></name></expr></argument>,
                                 <argument><expr><name><name pos:line="15" pos:column="34">ppcb_arg<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">-&gt;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="44">nPassPhraseCur<pos:position pos:line="15" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call><operator pos:line="15" pos:column="59">)<pos:position pos:line="15" pos:column="60"/></operator> <operator pos:line="15" pos:column="61">!=<pos:position pos:line="15" pos:column="63"/></operator> <name pos:line="15" pos:column="64">NULL<pos:position pos:line="15" pos:column="68"/></name></expr>)<pos:position pos:line="15" pos:column="69"/></condition><then pos:line="15" pos:column="69"> <block pos:line="15" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">apr_cpystrn<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">buf<pos:position pos:line="16" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="26">cpp<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="31">bufsize<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">len<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">strlen<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">buf<pos:position pos:line="17" pos:column="25"/></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">len<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="21" pos:column="5">/*
     * Builtin or Pipe dialog
     */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">sc<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">server<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">pphrase_dialog_type<pos:position pos:line="24" pos:column="40"/></name></name> <operator pos:line="24" pos:column="41">==<pos:position pos:line="24" pos:column="43"/></operator> <name pos:line="24" pos:column="44">SSL_PPTYPE_BUILTIN<pos:position pos:line="24" pos:column="62"/></name>
          <operator pos:line="25" pos:column="11">||<pos:position pos:line="25" pos:column="13"/></operator> <name><name pos:line="25" pos:column="14">sc<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">server<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">-&gt;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="26">pphrase_dialog_type<pos:position pos:line="25" pos:column="45"/></name></name> <operator pos:line="25" pos:column="46">==<pos:position pos:line="25" pos:column="48"/></operator> <name pos:line="25" pos:column="49">SSL_PPTYPE_PIPE<pos:position pos:line="25" pos:column="64"/></name></expr>)<pos:position pos:line="25" pos:column="65"/></condition><then pos:line="25" pos:column="65"> <block pos:line="25" pos:column="66">{
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">char<pos:position pos:line="26" pos:column="13"/></name> <modifier pos:line="26" pos:column="14">*<pos:position pos:line="26" pos:column="15"/></modifier></type><name pos:line="26" pos:column="15">prompt<pos:position pos:line="26" pos:column="21"/></name></decl>;<pos:position pos:line="26" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">int<pos:position pos:line="27" pos:column="12"/></name></type> <name pos:line="27" pos:column="13">i<pos:position pos:line="27" pos:column="14"/></name></decl>;<pos:position pos:line="27" pos:column="15"/></decl_stmt>

        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name><name pos:line="29" pos:column="13">sc<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">server<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">-&gt;<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="25">pphrase_dialog_type<pos:position pos:line="29" pos:column="44"/></name></name> <operator pos:line="29" pos:column="45">==<pos:position pos:line="29" pos:column="47"/></operator> <name pos:line="29" pos:column="48">SSL_PPTYPE_PIPE<pos:position pos:line="29" pos:column="63"/></name></expr>)<pos:position pos:line="29" pos:column="64"/></condition><then pos:line="29" pos:column="64"> <block pos:line="29" pos:column="65">{
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><operator pos:line="30" pos:column="17">!<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">readtty<pos:position pos:line="30" pos:column="25"/></name></expr>)<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26"> <block pos:line="30" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">ap_log_error<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">APLOG_MARK<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="42">APLOG_INFO<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="54">0<pos:position pos:line="31" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="57">ppcb_arg<pos:position pos:line="31" pos:column="65"/></name><operator pos:line="31" pos:column="65">-&gt;<pos:position pos:line="31" pos:column="70"/></operator><name pos:line="31" pos:column="67">s<pos:position pos:line="31" pos:column="68"/></name></name></expr></argument>,
                             <argument><expr><call><name pos:line="32" pos:column="30">APLOGNO<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><literal type="number" pos:line="32" pos:column="38">01965<pos:position pos:line="32" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call>
                             <literal type="string" pos:line="33" pos:column="30">"Init: Creating pass phrase dialog pipe child "<pos:position pos:line="33" pos:column="77"/></literal>
                             <literal type="string" pos:line="34" pos:column="30">"'%s'"<pos:position pos:line="34" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="38">sc<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">-&gt;<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="42">server<pos:position pos:line="34" pos:column="48"/></name><operator pos:line="34" pos:column="48">-&gt;<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="50">pphrase_dialog_path<pos:position pos:line="34" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt>
                <if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><call><name pos:line="35" pos:column="21">ssl_pipe_child_create<pos:position pos:line="35" pos:column="42"/></name><argument_list pos:line="35" pos:column="42">(<argument><expr><name><name pos:line="35" pos:column="43">ppcb_arg<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">-&gt;<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="53">p<pos:position pos:line="35" pos:column="54"/></name></name></expr></argument>,
                                          <argument><expr><name><name pos:line="36" pos:column="43">sc<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">-&gt;<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="47">server<pos:position pos:line="36" pos:column="53"/></name><operator pos:line="36" pos:column="53">-&gt;<pos:position pos:line="36" pos:column="58"/></operator><name pos:line="36" pos:column="55">pphrase_dialog_path<pos:position pos:line="36" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="75"/></argument_list></call>
                        <operator pos:line="37" pos:column="25">!=<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="28">APR_SUCCESS<pos:position pos:line="37" pos:column="39"/></name></expr>)<pos:position pos:line="37" pos:column="40"/></condition><then pos:line="37" pos:column="40"> <block pos:line="37" pos:column="41">{
                    <expr_stmt><expr><call><name pos:line="38" pos:column="21">ap_log_error<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">APLOG_MARK<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="46">APLOG_ERR<pos:position pos:line="38" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="57">0<pos:position pos:line="38" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="60">ppcb_arg<pos:position pos:line="38" pos:column="68"/></name><operator pos:line="38" pos:column="68">-&gt;<pos:position pos:line="38" pos:column="73"/></operator><name pos:line="38" pos:column="70">s<pos:position pos:line="38" pos:column="71"/></name></name></expr></argument>,
                                 <argument><expr><call><name pos:line="39" pos:column="34">APLOGNO<pos:position pos:line="39" pos:column="41"/></name><argument_list pos:line="39" pos:column="41">(<argument><expr><literal type="number" pos:line="39" pos:column="42">01966<pos:position pos:line="39" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call>
                                 <literal type="string" pos:line="40" pos:column="34">"Init: Failed to create pass phrase pipe '%s'"<pos:position pos:line="40" pos:column="80"/></literal></expr></argument>,
                                 <argument><expr><name><name pos:line="41" pos:column="34">sc<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">-&gt;<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="38">server<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">-&gt;<pos:position pos:line="41" pos:column="49"/></operator><name pos:line="41" pos:column="46">pphrase_dialog_path<pos:position pos:line="41" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="67"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="42" pos:column="21">PEMerr<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">PEM_F_PEM_DEF_CALLBACK<pos:position pos:line="42" pos:column="50"/></name></expr></argument>,
                           <argument><expr><name pos:line="43" pos:column="28">PEM_R_PROBLEMS_GETTING_PASSWORD<pos:position pos:line="43" pos:column="59"/></name></expr></argument>)<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="44" pos:column="21">memset<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name pos:line="44" pos:column="28">buf<pos:position pos:line="44" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="33">0<pos:position pos:line="44" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="44" pos:column="36">(<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="37">unsigned<pos:position pos:line="44" pos:column="45"/></name> <name pos:line="44" pos:column="46">int<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">)<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="50">bufsize<pos:position pos:line="44" pos:column="57"/></name></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="59"/></expr_stmt>
                    <return pos:line="45" pos:column="21">return <expr><operator pos:line="45" pos:column="28">(<pos:position pos:line="45" pos:column="29"/></operator><operator pos:line="45" pos:column="29">-<pos:position pos:line="45" pos:column="30"/></operator><literal type="number" pos:line="45" pos:column="30">1<pos:position pos:line="45" pos:column="31"/></literal><operator pos:line="45" pos:column="31">)<pos:position pos:line="45" pos:column="32"/></operator></expr>;<pos:position pos:line="45" pos:column="33"/></return>
                }<pos:position pos:line="46" pos:column="18"/></block></then></if>
            }<pos:position pos:line="47" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">ap_log_error<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">APLOG_MARK<pos:position pos:line="48" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="38">APLOG_INFO<pos:position pos:line="48" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="50">0<pos:position pos:line="48" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="53">ppcb_arg<pos:position pos:line="48" pos:column="61"/></name><operator pos:line="48" pos:column="61">-&gt;<pos:position pos:line="48" pos:column="66"/></operator><name pos:line="48" pos:column="63">s<pos:position pos:line="48" pos:column="64"/></name></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="66">APLOGNO<pos:position pos:line="48" pos:column="73"/></name><argument_list pos:line="48" pos:column="73">(<argument><expr><literal type="number" pos:line="48" pos:column="74">01967<pos:position pos:line="48" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="80"/></argument_list></call>
                         <literal type="string" pos:line="49" pos:column="26">"Init: Requesting pass phrase via piped dialog"<pos:position pos:line="49" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="75"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then>
        <else pos:line="51" pos:column="9">else <block pos:line="51" pos:column="14">{ <comment type="block" pos:line="51" pos:column="16">/* sc-&gt;server-&gt;pphrase_dialog_type == SSL_PPTYPE_BUILTIN */</comment>
<cpp:ifdef pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">ifdef<pos:position pos:line="52" pos:column="7"/></cpp:directive> <name pos:line="52" pos:column="8">WIN32<pos:position pos:line="52" pos:column="13"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">PEMerr<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><name pos:line="53" pos:column="20">PEM_F_PEM_DEF_CALLBACK<pos:position pos:line="53" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="44">PEM_R_PROBLEMS_GETTING_PASSWORD<pos:position pos:line="53" pos:column="75"/></name></expr></argument>)<pos:position pos:line="53" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">memset<pos:position pos:line="54" pos:column="19"/></name><argument_list pos:line="54" pos:column="19">(<argument><expr><name pos:line="54" pos:column="20">buf<pos:position pos:line="54" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="25">0<pos:position pos:line="54" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="54" pos:column="28">(<pos:position pos:line="54" pos:column="29"/></operator><name pos:line="54" pos:column="29">unsigned<pos:position pos:line="54" pos:column="37"/></name> <name pos:line="54" pos:column="38">int<pos:position pos:line="54" pos:column="41"/></name><operator pos:line="54" pos:column="41">)<pos:position pos:line="54" pos:column="42"/></operator><name pos:line="54" pos:column="42">bufsize<pos:position pos:line="54" pos:column="49"/></name></expr></argument>)<pos:position pos:line="54" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="51"/></expr_stmt>
            <return pos:line="55" pos:column="13">return <expr><operator pos:line="55" pos:column="20">(<pos:position pos:line="55" pos:column="21"/></operator><operator pos:line="55" pos:column="21">-<pos:position pos:line="55" pos:column="22"/></operator><literal type="number" pos:line="55" pos:column="22">1<pos:position pos:line="55" pos:column="23"/></literal><operator pos:line="55" pos:column="23">)<pos:position pos:line="55" pos:column="24"/></operator></expr>;<pos:position pos:line="55" pos:column="25"/></return>
<cpp:else pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">else<pos:position pos:line="56" pos:column="6"/></cpp:directive></cpp:else>
            <comment type="block" pos:line="57" pos:column="13">/*
             * stderr has already been redirected to the error_log.
             * rather than attempting to temporarily rehook it to the terminal,
             * we print the prompt to stdout before EVP_read_pw_string turns
             * off tty echo
             */</comment>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">apr_file_open_stdout<pos:position pos:line="63" pos:column="33"/></name><argument_list pos:line="63" pos:column="33">(<argument><expr><operator pos:line="63" pos:column="34">&amp;<pos:position pos:line="63" pos:column="39"/></operator><name pos:line="63" pos:column="35">writetty<pos:position pos:line="63" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="45">ppcb_arg<pos:position pos:line="63" pos:column="53"/></name><operator pos:line="63" pos:column="53">-&gt;<pos:position pos:line="63" pos:column="58"/></operator><name pos:line="63" pos:column="55">p<pos:position pos:line="63" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="58"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="65" pos:column="13">ap_log_error<pos:position pos:line="65" pos:column="25"/></name><argument_list pos:line="65" pos:column="25">(<argument><expr><name pos:line="65" pos:column="26">APLOG_MARK<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">APLOG_INFO<pos:position pos:line="65" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="50">0<pos:position pos:line="65" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="53">ppcb_arg<pos:position pos:line="65" pos:column="61"/></name><operator pos:line="65" pos:column="61">-&gt;<pos:position pos:line="65" pos:column="66"/></operator><name pos:line="65" pos:column="63">s<pos:position pos:line="65" pos:column="64"/></name></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="66">APLOGNO<pos:position pos:line="65" pos:column="73"/></name><argument_list pos:line="65" pos:column="73">(<argument><expr><literal type="number" pos:line="65" pos:column="74">01968<pos:position pos:line="65" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="80"/></argument_list></call>
                         <literal type="string" pos:line="66" pos:column="26">"Init: Requesting pass phrase via builtin terminal "<pos:position pos:line="66" pos:column="78"/></literal>
                         <literal type="string" pos:line="67" pos:column="26">"dialog"<pos:position pos:line="67" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif<pos:position pos:line="68" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="69" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="71" pos:column="9">/*
         * The first time display a header to inform the user about what
         * program he actually speaks to, which module is responsible for
         * this terminal dialog and why to the hell he has to enter
         * something...
         */</comment>
        <if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><name><name pos:line="77" pos:column="13">ppcb_arg<pos:position pos:line="77" pos:column="21"/></name><operator pos:line="77" pos:column="21">-&gt;<pos:position pos:line="77" pos:column="26"/></operator><name pos:line="77" pos:column="23">nPassPhraseDialog<pos:position pos:line="77" pos:column="40"/></name></name> <operator pos:line="77" pos:column="41">==<pos:position pos:line="77" pos:column="43"/></operator> <literal type="number" pos:line="77" pos:column="44">1<pos:position pos:line="77" pos:column="45"/></literal></expr>)<pos:position pos:line="77" pos:column="46"/></condition><then pos:line="77" pos:column="46"> <block pos:line="77" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">apr_file_printf<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><name pos:line="78" pos:column="29">writetty<pos:position pos:line="78" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="39">"%s mod_ssl (Pass Phrase Dialog)\n"<pos:position pos:line="78" pos:column="74"/></literal></expr></argument>,
                            <argument><expr><name pos:line="79" pos:column="29">AP_SERVER_BASEVERSION<pos:position pos:line="79" pos:column="50"/></name></expr></argument>)<pos:position pos:line="79" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">apr_file_printf<pos:position pos:line="80" pos:column="28"/></name><argument_list pos:line="80" pos:column="28">(<argument><expr><name pos:line="80" pos:column="29">writetty<pos:position pos:line="80" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="39">"Some of your private key files are encrypted for security reasons.\n"<pos:position pos:line="80" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="111"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="81" pos:column="13">apr_file_printf<pos:position pos:line="81" pos:column="28"/></name><argument_list pos:line="81" pos:column="28">(<argument><expr><name pos:line="81" pos:column="29">writetty<pos:position pos:line="81" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="39">"In order to read them you have to provide the pass phrases.\n"<pos:position pos:line="81" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="104"/></expr_stmt>
        }<pos:position pos:line="82" pos:column="10"/></block></then></if>
        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name><name pos:line="83" pos:column="13">ppcb_arg<pos:position pos:line="83" pos:column="21"/></name><operator pos:line="83" pos:column="21">-&gt;<pos:position pos:line="83" pos:column="26"/></operator><name pos:line="83" pos:column="23">bPassPhraseDialogOnce<pos:position pos:line="83" pos:column="44"/></name></name></expr>)<pos:position pos:line="83" pos:column="45"/></condition><then pos:line="83" pos:column="45"> <block pos:line="83" pos:column="46">{
            <expr_stmt><expr><name><name pos:line="84" pos:column="13">ppcb_arg<pos:position pos:line="84" pos:column="21"/></name><operator pos:line="84" pos:column="21">-&gt;<pos:position pos:line="84" pos:column="26"/></operator><name pos:line="84" pos:column="23">bPassPhraseDialogOnce<pos:position pos:line="84" pos:column="44"/></name></name> <operator pos:line="84" pos:column="45">=<pos:position pos:line="84" pos:column="46"/></operator> <name pos:line="84" pos:column="47">FALSE<pos:position pos:line="84" pos:column="52"/></name></expr>;<pos:position pos:line="84" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">apr_file_printf<pos:position pos:line="85" pos:column="28"/></name><argument_list pos:line="85" pos:column="28">(<argument><expr><name pos:line="85" pos:column="29">writetty<pos:position pos:line="85" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="39">"\n"<pos:position pos:line="85" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">apr_file_printf<pos:position pos:line="86" pos:column="28"/></name><argument_list pos:line="86" pos:column="28">(<argument><expr><name pos:line="86" pos:column="29">writetty<pos:position pos:line="86" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="39">"Private key %s (%s)\n"<pos:position pos:line="86" pos:column="62"/></literal></expr></argument>,
                            <argument><expr><name><name pos:line="87" pos:column="29">ppcb_arg<pos:position pos:line="87" pos:column="37"/></name><operator pos:line="87" pos:column="37">-&gt;<pos:position pos:line="87" pos:column="42"/></operator><name pos:line="87" pos:column="39">key_id<pos:position pos:line="87" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="47">ppcb_arg<pos:position pos:line="87" pos:column="55"/></name><operator pos:line="87" pos:column="55">-&gt;<pos:position pos:line="87" pos:column="60"/></operator><name pos:line="87" pos:column="57">pkey_file<pos:position pos:line="87" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="90" pos:column="9">/*
         * Emulate the OpenSSL internal pass phrase dialog
         * (see crypto/pem/pem_lib.c:def_callback() for details)
         */</comment>
        <expr_stmt><expr><name pos:line="94" pos:column="9">prompt<pos:position pos:line="94" pos:column="15"/></name> <operator pos:line="94" pos:column="16">=<pos:position pos:line="94" pos:column="17"/></operator> <literal type="string" pos:line="94" pos:column="18">"Enter pass phrase:"<pos:position pos:line="94" pos:column="38"/></literal></expr>;<pos:position pos:line="94" pos:column="39"/></expr_stmt>

        <for pos:line="96" pos:column="9">for <control pos:line="96" pos:column="13">(<init pos:line="96" pos:column="14">;<pos:position pos:line="96" pos:column="15"/></init><condition pos:line="96" pos:column="15">;<pos:position pos:line="96" pos:column="16"/></condition><incr/>)<pos:position pos:line="96" pos:column="17"/></control> <block pos:line="96" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="97" pos:column="13">apr_file_puts<pos:position pos:line="97" pos:column="26"/></name><argument_list pos:line="97" pos:column="26">(<argument><expr><name pos:line="97" pos:column="27">prompt<pos:position pos:line="97" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="35">writetty<pos:position pos:line="97" pos:column="43"/></name></expr></argument>)<pos:position pos:line="97" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="45"/></expr_stmt>
            <if pos:line="98" pos:column="13">if <condition pos:line="98" pos:column="16">(<expr><name><name pos:line="98" pos:column="17">sc<pos:position pos:line="98" pos:column="19"/></name><operator pos:line="98" pos:column="19">-&gt;<pos:position pos:line="98" pos:column="24"/></operator><name pos:line="98" pos:column="21">server<pos:position pos:line="98" pos:column="27"/></name><operator pos:line="98" pos:column="27">-&gt;<pos:position pos:line="98" pos:column="32"/></operator><name pos:line="98" pos:column="29">pphrase_dialog_type<pos:position pos:line="98" pos:column="48"/></name></name> <operator pos:line="98" pos:column="49">==<pos:position pos:line="98" pos:column="51"/></operator> <name pos:line="98" pos:column="52">SSL_PPTYPE_PIPE<pos:position pos:line="98" pos:column="67"/></name></expr>)<pos:position pos:line="98" pos:column="68"/></condition><then pos:line="98" pos:column="68"> <block pos:line="98" pos:column="69">{
                <expr_stmt><expr><name pos:line="99" pos:column="17">i<pos:position pos:line="99" pos:column="18"/></name> <operator pos:line="99" pos:column="19">=<pos:position pos:line="99" pos:column="20"/></operator> <call><name pos:line="99" pos:column="21">pipe_get_passwd_cb<pos:position pos:line="99" pos:column="39"/></name><argument_list pos:line="99" pos:column="39">(<argument><expr><name pos:line="99" pos:column="40">buf<pos:position pos:line="99" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="45">bufsize<pos:position pos:line="99" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="54">""<pos:position pos:line="99" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="58">FALSE<pos:position pos:line="99" pos:column="63"/></name></expr></argument>)<pos:position pos:line="99" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="100" pos:column="14"/></block></then>
            <else pos:line="101" pos:column="13">else <block pos:line="101" pos:column="18">{ <comment type="block" pos:line="101" pos:column="20">/* sc-&gt;server-&gt;pphrase_dialog_type == SSL_PPTYPE_BUILTIN */</comment>
                <expr_stmt><expr><name pos:line="102" pos:column="17">i<pos:position pos:line="102" pos:column="18"/></name> <operator pos:line="102" pos:column="19">=<pos:position pos:line="102" pos:column="20"/></operator> <call><name pos:line="102" pos:column="21">EVP_read_pw_string<pos:position pos:line="102" pos:column="39"/></name><argument_list pos:line="102" pos:column="39">(<argument><expr><name pos:line="102" pos:column="40">buf<pos:position pos:line="102" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="45">bufsize<pos:position pos:line="102" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="54">""<pos:position pos:line="102" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="58">FALSE<pos:position pos:line="102" pos:column="63"/></name></expr></argument>)<pos:position pos:line="102" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="103" pos:column="14"/></block></else></if>
            <if pos:line="104" pos:column="13">if <condition pos:line="104" pos:column="16">(<expr><name pos:line="104" pos:column="17">i<pos:position pos:line="104" pos:column="18"/></name> <operator pos:line="104" pos:column="19">!=<pos:position pos:line="104" pos:column="21"/></operator> <literal type="number" pos:line="104" pos:column="22">0<pos:position pos:line="104" pos:column="23"/></literal></expr>)<pos:position pos:line="104" pos:column="24"/></condition><then pos:line="104" pos:column="24"> <block pos:line="104" pos:column="25">{
                <expr_stmt><expr><call><name pos:line="105" pos:column="17">PEMerr<pos:position pos:line="105" pos:column="23"/></name><argument_list pos:line="105" pos:column="23">(<argument><expr><name pos:line="105" pos:column="24">PEM_F_PEM_DEF_CALLBACK<pos:position pos:line="105" pos:column="46"/></name></expr></argument>,<argument><expr><name pos:line="105" pos:column="47">PEM_R_PROBLEMS_GETTING_PASSWORD<pos:position pos:line="105" pos:column="78"/></name></expr></argument>)<pos:position pos:line="105" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="80"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="106" pos:column="17">memset<pos:position pos:line="106" pos:column="23"/></name><argument_list pos:line="106" pos:column="23">(<argument><expr><name pos:line="106" pos:column="24">buf<pos:position pos:line="106" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="29">0<pos:position pos:line="106" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="106" pos:column="32">(<pos:position pos:line="106" pos:column="33"/></operator><name pos:line="106" pos:column="33">unsigned<pos:position pos:line="106" pos:column="41"/></name> <name pos:line="106" pos:column="42">int<pos:position pos:line="106" pos:column="45"/></name><operator pos:line="106" pos:column="45">)<pos:position pos:line="106" pos:column="46"/></operator><name pos:line="106" pos:column="46">bufsize<pos:position pos:line="106" pos:column="53"/></name></expr></argument>)<pos:position pos:line="106" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="55"/></expr_stmt>
                <return pos:line="107" pos:column="17">return <expr><operator pos:line="107" pos:column="24">(<pos:position pos:line="107" pos:column="25"/></operator><operator pos:line="107" pos:column="25">-<pos:position pos:line="107" pos:column="26"/></operator><literal type="number" pos:line="107" pos:column="26">1<pos:position pos:line="107" pos:column="27"/></literal><operator pos:line="107" pos:column="27">)<pos:position pos:line="107" pos:column="28"/></operator></expr>;<pos:position pos:line="107" pos:column="29"/></return>
            }<pos:position pos:line="108" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="109" pos:column="13">len<pos:position pos:line="109" pos:column="16"/></name> <operator pos:line="109" pos:column="17">=<pos:position pos:line="109" pos:column="18"/></operator> <call><name pos:line="109" pos:column="19">strlen<pos:position pos:line="109" pos:column="25"/></name><argument_list pos:line="109" pos:column="25">(<argument><expr><name pos:line="109" pos:column="26">buf<pos:position pos:line="109" pos:column="29"/></name></expr></argument>)<pos:position pos:line="109" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="31"/></expr_stmt>
            <if pos:line="110" pos:column="13">if <condition pos:line="110" pos:column="16">(<expr><name pos:line="110" pos:column="17">len<pos:position pos:line="110" pos:column="20"/></name> <operator pos:line="110" pos:column="21">&lt;<pos:position pos:line="110" pos:column="25"/></operator> <literal type="number" pos:line="110" pos:column="23">1<pos:position pos:line="110" pos:column="24"/></literal></expr>)<pos:position pos:line="110" pos:column="25"/></condition><then pos:line="110" pos:column="25">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="17">apr_file_printf<pos:position pos:line="111" pos:column="32"/></name><argument_list pos:line="111" pos:column="32">(<argument><expr><name pos:line="111" pos:column="33">writetty<pos:position pos:line="111" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="43">"Apache:mod_ssl:Error: Pass phrase empty (needs to be at least 1 character).\n"<pos:position pos:line="111" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="124"/></expr_stmt></block></then>
            <else pos:line="112" pos:column="13">else
                <block type="pseudo"><break pos:line="113" pos:column="17">break;<pos:position pos:line="113" pos:column="23"/></break></block></else></if>
        }<pos:position pos:line="114" pos:column="10"/></block></for>
    }<pos:position pos:line="115" pos:column="6"/></block></then>

    <comment type="block" pos:line="117" pos:column="5">/*
     * Filter program
     */</comment>
    <elseif pos:line="120" pos:column="5">else <if pos:line="120" pos:column="10">if <condition pos:line="120" pos:column="13">(<expr><name><name pos:line="120" pos:column="14">sc<pos:position pos:line="120" pos:column="16"/></name><operator pos:line="120" pos:column="16">-&gt;<pos:position pos:line="120" pos:column="21"/></operator><name pos:line="120" pos:column="18">server<pos:position pos:line="120" pos:column="24"/></name><operator pos:line="120" pos:column="24">-&gt;<pos:position pos:line="120" pos:column="29"/></operator><name pos:line="120" pos:column="26">pphrase_dialog_type<pos:position pos:line="120" pos:column="45"/></name></name> <operator pos:line="120" pos:column="46">==<pos:position pos:line="120" pos:column="48"/></operator> <name pos:line="120" pos:column="49">SSL_PPTYPE_FILTER<pos:position pos:line="120" pos:column="66"/></name></expr>)<pos:position pos:line="120" pos:column="67"/></condition><then pos:line="120" pos:column="67"> <block pos:line="120" pos:column="68">{
        <decl_stmt><decl><type><specifier pos:line="121" pos:column="9">const<pos:position pos:line="121" pos:column="14"/></specifier> <name pos:line="121" pos:column="15">char<pos:position pos:line="121" pos:column="19"/></name> <modifier pos:line="121" pos:column="20">*<pos:position pos:line="121" pos:column="21"/></modifier></type><name pos:line="121" pos:column="21">cmd<pos:position pos:line="121" pos:column="24"/></name> <init pos:line="121" pos:column="25">= <expr><name><name pos:line="121" pos:column="27">sc<pos:position pos:line="121" pos:column="29"/></name><operator pos:line="121" pos:column="29">-&gt;<pos:position pos:line="121" pos:column="34"/></operator><name pos:line="121" pos:column="31">server<pos:position pos:line="121" pos:column="37"/></name><operator pos:line="121" pos:column="37">-&gt;<pos:position pos:line="121" pos:column="42"/></operator><name pos:line="121" pos:column="39">pphrase_dialog_path<pos:position pos:line="121" pos:column="58"/></name></name></expr></init></decl>;<pos:position pos:line="121" pos:column="59"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="122" pos:column="9">const<pos:position pos:line="122" pos:column="14"/></specifier> <name pos:line="122" pos:column="15">char<pos:position pos:line="122" pos:column="19"/></name> <modifier pos:line="122" pos:column="20">*<pos:position pos:line="122" pos:column="21"/></modifier><modifier pos:line="122" pos:column="21">*<pos:position pos:line="122" pos:column="22"/></modifier></type><name pos:line="122" pos:column="22">argv<pos:position pos:line="122" pos:column="26"/></name> <init pos:line="122" pos:column="27">= <expr><call><name pos:line="122" pos:column="29">apr_palloc<pos:position pos:line="122" pos:column="39"/></name><argument_list pos:line="122" pos:column="39">(<argument><expr><name><name pos:line="122" pos:column="40">ppcb_arg<pos:position pos:line="122" pos:column="48"/></name><operator pos:line="122" pos:column="48">-&gt;<pos:position pos:line="122" pos:column="53"/></operator><name pos:line="122" pos:column="50">p<pos:position pos:line="122" pos:column="51"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="122" pos:column="53">sizeof<argument_list pos:line="122" pos:column="59">(<argument><expr><name pos:line="122" pos:column="60">char<pos:position pos:line="122" pos:column="64"/></name> <operator pos:line="122" pos:column="65">*<pos:position pos:line="122" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="122" pos:column="67"/></argument_list></sizeof> <operator pos:line="122" pos:column="68">*<pos:position pos:line="122" pos:column="69"/></operator> <literal type="number" pos:line="122" pos:column="70">4<pos:position pos:line="122" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="122" pos:column="73"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="123" pos:column="9">const<pos:position pos:line="123" pos:column="14"/></specifier> <name pos:line="123" pos:column="15">char<pos:position pos:line="123" pos:column="19"/></name> <modifier pos:line="123" pos:column="20">*<pos:position pos:line="123" pos:column="21"/></modifier></type><name pos:line="123" pos:column="21">idx<pos:position pos:line="123" pos:column="24"/></name> <init pos:line="123" pos:column="25">= <expr><call><name pos:line="123" pos:column="27">ap_strrchr_c<pos:position pos:line="123" pos:column="39"/></name><argument_list pos:line="123" pos:column="39">(<argument><expr><name><name pos:line="123" pos:column="40">ppcb_arg<pos:position pos:line="123" pos:column="48"/></name><operator pos:line="123" pos:column="48">-&gt;<pos:position pos:line="123" pos:column="53"/></operator><name pos:line="123" pos:column="50">key_id<pos:position pos:line="123" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="123" pos:column="58">':'<pos:position pos:line="123" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="62"/></argument_list></call> <operator pos:line="123" pos:column="63">+<pos:position pos:line="123" pos:column="64"/></operator> <literal type="number" pos:line="123" pos:column="65">1<pos:position pos:line="123" pos:column="66"/></literal></expr></init></decl>;<pos:position pos:line="123" pos:column="67"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="124" pos:column="9">char<pos:position pos:line="124" pos:column="13"/></name> <modifier pos:line="124" pos:column="14">*<pos:position pos:line="124" pos:column="15"/></modifier></type><name pos:line="124" pos:column="15">result<pos:position pos:line="124" pos:column="21"/></name></decl>;<pos:position pos:line="124" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="125" pos:column="9">int<pos:position pos:line="125" pos:column="12"/></name></type> <name pos:line="125" pos:column="13">i<pos:position pos:line="125" pos:column="14"/></name></decl>;<pos:position pos:line="125" pos:column="15"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="127" pos:column="9">ap_log_error<pos:position pos:line="127" pos:column="21"/></name><argument_list pos:line="127" pos:column="21">(<argument><expr><name pos:line="127" pos:column="22">APLOG_MARK<pos:position pos:line="127" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="34">APLOG_INFO<pos:position pos:line="127" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="46">0<pos:position pos:line="127" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="49">ppcb_arg<pos:position pos:line="127" pos:column="57"/></name><operator pos:line="127" pos:column="57">-&gt;<pos:position pos:line="127" pos:column="62"/></operator><name pos:line="127" pos:column="59">s<pos:position pos:line="127" pos:column="60"/></name></name></expr></argument>, <argument><expr><call><name pos:line="127" pos:column="62">APLOGNO<pos:position pos:line="127" pos:column="69"/></name><argument_list pos:line="127" pos:column="69">(<argument><expr><literal type="number" pos:line="127" pos:column="70">01969<pos:position pos:line="127" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="76"/></argument_list></call>
                     <literal type="string" pos:line="128" pos:column="22">"Init: Requesting pass phrase from dialog filter "<pos:position pos:line="128" pos:column="72"/></literal>
                     <literal type="string" pos:line="129" pos:column="22">"program (%s)"<pos:position pos:line="129" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="38">cmd<pos:position pos:line="129" pos:column="41"/></name></expr></argument>)<pos:position pos:line="129" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="43"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="131" pos:column="9">argv<pos:position pos:line="131" pos:column="13"/></name><index pos:line="131" pos:column="13">[<expr><literal type="number" pos:line="131" pos:column="14">0<pos:position pos:line="131" pos:column="15"/></literal></expr>]<pos:position pos:line="131" pos:column="16"/></index></name> <operator pos:line="131" pos:column="17">=<pos:position pos:line="131" pos:column="18"/></operator> <name pos:line="131" pos:column="19">cmd<pos:position pos:line="131" pos:column="22"/></name></expr>;<pos:position pos:line="131" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="132" pos:column="9">argv<pos:position pos:line="132" pos:column="13"/></name><index pos:line="132" pos:column="13">[<expr><literal type="number" pos:line="132" pos:column="14">1<pos:position pos:line="132" pos:column="15"/></literal></expr>]<pos:position pos:line="132" pos:column="16"/></index></name> <operator pos:line="132" pos:column="17">=<pos:position pos:line="132" pos:column="18"/></operator> <call><name pos:line="132" pos:column="19">apr_pstrndup<pos:position pos:line="132" pos:column="31"/></name><argument_list pos:line="132" pos:column="31">(<argument><expr><name><name pos:line="132" pos:column="32">ppcb_arg<pos:position pos:line="132" pos:column="40"/></name><operator pos:line="132" pos:column="40">-&gt;<pos:position pos:line="132" pos:column="45"/></operator><name pos:line="132" pos:column="42">p<pos:position pos:line="132" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="45">ppcb_arg<pos:position pos:line="132" pos:column="53"/></name><operator pos:line="132" pos:column="53">-&gt;<pos:position pos:line="132" pos:column="58"/></operator><name pos:line="132" pos:column="55">key_id<pos:position pos:line="132" pos:column="61"/></name></name></expr></argument>,
                               <argument><expr><name pos:line="133" pos:column="32">idx<pos:position pos:line="133" pos:column="35"/></name><operator pos:line="133" pos:column="35">-<pos:position pos:line="133" pos:column="36"/></operator><literal type="number" pos:line="133" pos:column="36">1<pos:position pos:line="133" pos:column="37"/></literal> <operator pos:line="133" pos:column="38">-<pos:position pos:line="133" pos:column="39"/></operator> <name><name pos:line="133" pos:column="40">ppcb_arg<pos:position pos:line="133" pos:column="48"/></name><operator pos:line="133" pos:column="48">-&gt;<pos:position pos:line="133" pos:column="53"/></operator><name pos:line="133" pos:column="50">key_id<pos:position pos:line="133" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="58"/></expr_stmt>
        <if pos:line="134" pos:column="9">if <condition pos:line="134" pos:column="12">(<expr><operator pos:line="134" pos:column="13">(<pos:position pos:line="134" pos:column="14"/></operator><name pos:line="134" pos:column="14">i<pos:position pos:line="134" pos:column="15"/></name> <operator pos:line="134" pos:column="16">=<pos:position pos:line="134" pos:column="17"/></operator> <call><name pos:line="134" pos:column="18">atoi<pos:position pos:line="134" pos:column="22"/></name><argument_list pos:line="134" pos:column="22">(<argument><expr><name pos:line="134" pos:column="23">idx<pos:position pos:line="134" pos:column="26"/></name></expr></argument>)<pos:position pos:line="134" pos:column="27"/></argument_list></call><operator pos:line="134" pos:column="27">)<pos:position pos:line="134" pos:column="28"/></operator> <operator pos:line="134" pos:column="29">&lt;<pos:position pos:line="134" pos:column="33"/></operator> <name pos:line="134" pos:column="31">CERTKEYS_IDX_MAX<pos:position pos:line="134" pos:column="47"/></name><operator pos:line="134" pos:column="47">+<pos:position pos:line="134" pos:column="48"/></operator><literal type="number" pos:line="134" pos:column="48">1<pos:position pos:line="134" pos:column="49"/></literal></expr>)<pos:position pos:line="134" pos:column="50"/></condition><then pos:line="134" pos:column="50"> <block pos:line="134" pos:column="51">{
            <comment type="block" pos:line="135" pos:column="13">/*
             * For compatibility with existing 2.4.x configurations, use
             * "RSA", "DSA" and "ECC" strings for the first two/three keys
             */</comment>
            <expr_stmt><expr><name><name pos:line="139" pos:column="13">argv<pos:position pos:line="139" pos:column="17"/></name><index pos:line="139" pos:column="17">[<expr><literal type="number" pos:line="139" pos:column="18">2<pos:position pos:line="139" pos:column="19"/></literal></expr>]<pos:position pos:line="139" pos:column="20"/></index></name> <operator pos:line="139" pos:column="21">=<pos:position pos:line="139" pos:column="22"/></operator> <name><name pos:line="139" pos:column="23">key_types<pos:position pos:line="139" pos:column="32"/></name><index pos:line="139" pos:column="32">[<expr><name pos:line="139" pos:column="33">i<pos:position pos:line="139" pos:column="34"/></name></expr>]<pos:position pos:line="139" pos:column="35"/></index></name></expr>;<pos:position pos:line="139" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="140" pos:column="10"/></block></then> <else pos:line="140" pos:column="11">else <block pos:line="140" pos:column="16">{
            <comment type="block" pos:line="141" pos:column="13">/* Four and above: use the integer index */</comment>
            <expr_stmt><expr><name><name pos:line="142" pos:column="13">argv<pos:position pos:line="142" pos:column="17"/></name><index pos:line="142" pos:column="17">[<expr><literal type="number" pos:line="142" pos:column="18">2<pos:position pos:line="142" pos:column="19"/></literal></expr>]<pos:position pos:line="142" pos:column="20"/></index></name> <operator pos:line="142" pos:column="21">=<pos:position pos:line="142" pos:column="22"/></operator> <call><name pos:line="142" pos:column="23">apr_pstrdup<pos:position pos:line="142" pos:column="34"/></name><argument_list pos:line="142" pos:column="34">(<argument><expr><name><name pos:line="142" pos:column="35">ppcb_arg<pos:position pos:line="142" pos:column="43"/></name><operator pos:line="142" pos:column="43">-&gt;<pos:position pos:line="142" pos:column="48"/></operator><name pos:line="142" pos:column="45">p<pos:position pos:line="142" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="48">idx<pos:position pos:line="142" pos:column="51"/></name></expr></argument>)<pos:position pos:line="142" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="143" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name><name pos:line="144" pos:column="9">argv<pos:position pos:line="144" pos:column="13"/></name><index pos:line="144" pos:column="13">[<expr><literal type="number" pos:line="144" pos:column="14">3<pos:position pos:line="144" pos:column="15"/></literal></expr>]<pos:position pos:line="144" pos:column="16"/></index></name> <operator pos:line="144" pos:column="17">=<pos:position pos:line="144" pos:column="18"/></operator> <name pos:line="144" pos:column="19">NULL<pos:position pos:line="144" pos:column="23"/></name></expr>;<pos:position pos:line="144" pos:column="24"/></expr_stmt>

        <expr_stmt><expr><name pos:line="146" pos:column="9">result<pos:position pos:line="146" pos:column="15"/></name> <operator pos:line="146" pos:column="16">=<pos:position pos:line="146" pos:column="17"/></operator> <call><name pos:line="146" pos:column="18">ssl_util_readfilter<pos:position pos:line="146" pos:column="37"/></name><argument_list pos:line="146" pos:column="37">(<argument><expr><name><name pos:line="146" pos:column="38">ppcb_arg<pos:position pos:line="146" pos:column="46"/></name><operator pos:line="146" pos:column="46">-&gt;<pos:position pos:line="146" pos:column="51"/></operator><name pos:line="146" pos:column="48">s<pos:position pos:line="146" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="146" pos:column="51">ppcb_arg<pos:position pos:line="146" pos:column="59"/></name><operator pos:line="146" pos:column="59">-&gt;<pos:position pos:line="146" pos:column="64"/></operator><name pos:line="146" pos:column="61">p<pos:position pos:line="146" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="64">cmd<pos:position pos:line="146" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="69">argv<pos:position pos:line="146" pos:column="73"/></name></expr></argument>)<pos:position pos:line="146" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="147" pos:column="9">apr_cpystrn<pos:position pos:line="147" pos:column="20"/></name><argument_list pos:line="147" pos:column="20">(<argument><expr><name pos:line="147" pos:column="21">buf<pos:position pos:line="147" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="26">result<pos:position pos:line="147" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="34">bufsize<pos:position pos:line="147" pos:column="41"/></name></expr></argument>)<pos:position pos:line="147" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name pos:line="148" pos:column="9">len<pos:position pos:line="148" pos:column="12"/></name> <operator pos:line="148" pos:column="13">=<pos:position pos:line="148" pos:column="14"/></operator> <call><name pos:line="148" pos:column="15">strlen<pos:position pos:line="148" pos:column="21"/></name><argument_list pos:line="148" pos:column="21">(<argument><expr><name pos:line="148" pos:column="22">buf<pos:position pos:line="148" pos:column="25"/></name></expr></argument>)<pos:position pos:line="148" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="149" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="151" pos:column="5">/*
     * Ok, we now have the pass phrase, so give it back
     */</comment>
    <expr_stmt><expr><name><name pos:line="154" pos:column="5">ppcb_arg<pos:position pos:line="154" pos:column="13"/></name><operator pos:line="154" pos:column="13">-&gt;<pos:position pos:line="154" pos:column="18"/></operator><name pos:line="154" pos:column="15">cpPassPhraseCur<pos:position pos:line="154" pos:column="30"/></name></name> <operator pos:line="154" pos:column="31">=<pos:position pos:line="154" pos:column="32"/></operator> <call><name pos:line="154" pos:column="33">apr_pstrdup<pos:position pos:line="154" pos:column="44"/></name><argument_list pos:line="154" pos:column="44">(<argument><expr><name><name pos:line="154" pos:column="45">ppcb_arg<pos:position pos:line="154" pos:column="53"/></name><operator pos:line="154" pos:column="53">-&gt;<pos:position pos:line="154" pos:column="58"/></operator><name pos:line="154" pos:column="55">p<pos:position pos:line="154" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="58">buf<pos:position pos:line="154" pos:column="61"/></name></expr></argument>)<pos:position pos:line="154" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="63"/></expr_stmt>

    <comment type="block" pos:line="156" pos:column="5">/*
     * And return its length to OpenSSL...
     */</comment>
    <return pos:line="159" pos:column="5">return <expr><operator pos:line="159" pos:column="12">(<pos:position pos:line="159" pos:column="13"/></operator><name pos:line="159" pos:column="13">len<pos:position pos:line="159" pos:column="16"/></name><operator pos:line="159" pos:column="16">)<pos:position pos:line="159" pos:column="17"/></operator></expr>;<pos:position pos:line="159" pos:column="18"/></return>
}<pos:position pos:line="160" pos:column="2"/></block></function></unit>

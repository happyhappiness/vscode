<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3582_httpd-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">make_child<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">server_rec<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">s<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">slot<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">pid<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">slot<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">+<pos:position pos:line="5" pos:column="15"/></operator> <literal type="number" pos:line="5" pos:column="16">1<pos:position pos:line="5" pos:column="17"/></literal> <operator pos:line="5" pos:column="18">&gt;<pos:position pos:line="5" pos:column="22"/></operator> <name><name pos:line="5" pos:column="20">retained<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">max_daemons_limit<pos:position pos:line="5" pos:column="47"/></name></name></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48"> <block pos:line="5" pos:column="49">{
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">retained<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">max_daemons_limit<pos:position pos:line="6" pos:column="36"/></name></name> <operator pos:line="6" pos:column="37">=<pos:position pos:line="6" pos:column="38"/></operator> <name pos:line="6" pos:column="39">slot<pos:position pos:line="6" pos:column="43"/></name> <operator pos:line="6" pos:column="44">+<pos:position pos:line="6" pos:column="45"/></operator> <literal type="number" pos:line="6" pos:column="46">1<pos:position pos:line="6" pos:column="47"/></literal></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">one_process<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">apr_signal<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">SIGHUP<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">sig_term<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
        <comment type="block" pos:line="11" pos:column="9">/* Don't catch AP_SIG_GRACEFUL in ONE_PROCESS mode :) */</comment>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">apr_signal<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">SIGINT<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="28">sig_term<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">SIGQUIT<pos:position pos:line="13" pos:column="15"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">apr_signal<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">SIGQUIT<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="29">SIG_DFL<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">apr_signal<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">SIGTERM<pos:position pos:line="16" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="29">sig_term<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">prefork_note_child_started<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">slot<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="42">getpid<pos:position pos:line="17" pos:column="48"/></name><argument_list pos:line="17" pos:column="48">()<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">child_main<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">slot<pos:position pos:line="18" pos:column="24"/></name></expr></argument>)<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
        <comment type="block" pos:line="19" pos:column="9">/* NOTREACHED */</comment>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="22" pos:column="5">(<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">void<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">)<pos:position pos:line="22" pos:column="11"/></operator> <call><name pos:line="22" pos:column="12">ap_update_child_status_from_indexes<pos:position pos:line="22" pos:column="47"/></name><argument_list pos:line="22" pos:column="47">(<argument><expr><name pos:line="22" pos:column="48">slot<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="54">0<pos:position pos:line="22" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="57">SERVER_STARTING<pos:position pos:line="22" pos:column="72"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="23" pos:column="48">(<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="49">request_rec<pos:position pos:line="23" pos:column="60"/></name> <operator pos:line="23" pos:column="61">*<pos:position pos:line="23" pos:column="62"/></operator><operator pos:line="23" pos:column="62">)<pos:position pos:line="23" pos:column="63"/></operator> <name pos:line="23" pos:column="64">NULL<pos:position pos:line="23" pos:column="68"/></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="70"/></expr_stmt>


<cpp:ifdef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifdef<pos:position pos:line="26" pos:column="7"/></cpp:directive> <name pos:line="26" pos:column="8">_OSD_POSIX<pos:position pos:line="26" pos:column="18"/></name></cpp:ifdef>
    <comment type="block" pos:line="27" pos:column="5">/* BS2000 requires a "special" version of fork() before a setuid() call */</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">(<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">pid<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">os_fork<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name><name pos:line="28" pos:column="24">ap_unixd_config<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">.<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="40">user_name<pos:position pos:line="28" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call><operator pos:line="28" pos:column="50">)<pos:position pos:line="28" pos:column="51"/></operator> <operator pos:line="28" pos:column="52">==<pos:position pos:line="28" pos:column="54"/></operator> <operator pos:line="28" pos:column="55">-<pos:position pos:line="28" pos:column="56"/></operator><literal type="number" pos:line="28" pos:column="56">1<pos:position pos:line="28" pos:column="57"/></literal></expr>)<pos:position pos:line="28" pos:column="58"/></condition><then pos:line="28" pos:column="58"> <block pos:line="28" pos:column="59">{
<cpp:else pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">else<pos:position pos:line="29" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">pid<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">fork<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">()<pos:position pos:line="30" pos:column="22"/></argument_list></call><operator pos:line="30" pos:column="22">)<pos:position pos:line="30" pos:column="23"/></operator> <operator pos:line="30" pos:column="24">==<pos:position pos:line="30" pos:column="26"/></operator> <operator pos:line="30" pos:column="27">-<pos:position pos:line="30" pos:column="28"/></operator><literal type="number" pos:line="30" pos:column="28">1<pos:position pos:line="30" pos:column="29"/></literal></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30"> <block pos:line="30" pos:column="31">{
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">ap_log_error<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">APLOG_MARK<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">APLOG_ERR<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="45">errno<pos:position pos:line="32" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="52">s<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="55">APLOGNO<pos:position pos:line="32" pos:column="62"/></name><argument_list pos:line="32" pos:column="62">(<argument><expr><literal type="number" pos:line="32" pos:column="63">00159<pos:position pos:line="32" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="69"/></argument_list></call> <literal type="string" pos:line="32" pos:column="70">"fork: Unable to fork new process"<pos:position pos:line="32" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="106"/></expr_stmt>

        <comment type="block" pos:line="34" pos:column="9">/* fork didn't succeed. Fix the scoreboard or else
         * it will say SERVER_STARTING forever and ever
         */</comment>
        <expr_stmt><expr><operator pos:line="37" pos:column="9">(<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">void<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">)<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">ap_update_child_status_from_indexes<pos:position pos:line="37" pos:column="51"/></name><argument_list pos:line="37" pos:column="51">(<argument><expr><name pos:line="37" pos:column="52">slot<pos:position pos:line="37" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="58">0<pos:position pos:line="37" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="61">SERVER_DEAD<pos:position pos:line="37" pos:column="72"/></name></expr></argument>,
                                                   <argument><expr><operator pos:line="38" pos:column="52">(<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="53">request_rec<pos:position pos:line="38" pos:column="64"/></name> <operator pos:line="38" pos:column="65">*<pos:position pos:line="38" pos:column="66"/></operator><operator pos:line="38" pos:column="66">)<pos:position pos:line="38" pos:column="67"/></operator> <name pos:line="38" pos:column="68">NULL<pos:position pos:line="38" pos:column="72"/></name></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="74"/></expr_stmt>

        <comment type="block" pos:line="40" pos:column="9">/* In case system resources are maxxed out, we don't want
         * Apache running away with the CPU trying to fork over and
         * over and over again.
         */</comment>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">sleep<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><literal type="number" pos:line="44" pos:column="15">10<pos:position pos:line="44" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt>

        <return pos:line="46" pos:column="9">return <expr><operator pos:line="46" pos:column="16">-<pos:position pos:line="46" pos:column="17"/></operator><literal type="number" pos:line="46" pos:column="17">1<pos:position pos:line="46" pos:column="18"/></literal></expr>;<pos:position pos:line="46" pos:column="19"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">!<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">pid<pos:position pos:line="49" pos:column="13"/></name></expr>)<pos:position pos:line="49" pos:column="14"/></condition><then pos:line="49" pos:column="14"> <block pos:line="49" pos:column="15">{
<cpp:ifdef pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">ifdef<pos:position pos:line="50" pos:column="7"/></cpp:directive> <name pos:line="50" pos:column="8">HAVE_BINDPROCESSOR<pos:position pos:line="50" pos:column="26"/></name></cpp:ifdef>
        <comment type="block" pos:line="51" pos:column="9">/* by default AIX binds to a single processor
         * this bit unbinds children which will then bind to another cpu
         */</comment>
        <decl_stmt><decl><type><name pos:line="54" pos:column="9">int<pos:position pos:line="54" pos:column="12"/></name></type> <name pos:line="54" pos:column="13">status<pos:position pos:line="54" pos:column="19"/></name> <init pos:line="54" pos:column="20">= <expr><call><name pos:line="54" pos:column="22">bindprocessor<pos:position pos:line="54" pos:column="35"/></name><argument_list pos:line="54" pos:column="35">(<argument><expr><name pos:line="54" pos:column="36">BINDPROCESS<pos:position pos:line="54" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="49">(<pos:position pos:line="54" pos:column="50"/></operator><name pos:line="54" pos:column="50">int<pos:position pos:line="54" pos:column="53"/></name><operator pos:line="54" pos:column="53">)<pos:position pos:line="54" pos:column="54"/></operator><call><name pos:line="54" pos:column="54">getpid<pos:position pos:line="54" pos:column="60"/></name><argument_list pos:line="54" pos:column="60">()<pos:position pos:line="54" pos:column="62"/></argument_list></call></expr></argument>,
                                   <argument><expr><name pos:line="55" pos:column="36">PROCESSOR_CLASS_ANY<pos:position pos:line="55" pos:column="55"/></name></expr></argument>)<pos:position pos:line="55" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="55" pos:column="57"/></decl_stmt>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">status<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">!=<pos:position pos:line="56" pos:column="22"/></operator> <name pos:line="56" pos:column="23">OK<pos:position pos:line="56" pos:column="25"/></name></expr>)<pos:position pos:line="56" pos:column="26"/></condition><then pos:line="56" pos:column="26"> <block pos:line="56" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">ap_log_error<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">APLOG_MARK<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="38">APLOG_DEBUG<pos:position pos:line="57" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="51">errno<pos:position pos:line="57" pos:column="56"/></name></expr></argument>,
                         <argument><expr><name pos:line="58" pos:column="26">ap_server_conf<pos:position pos:line="58" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="42">APLOGNO<pos:position pos:line="58" pos:column="49"/></name><argument_list pos:line="58" pos:column="49">(<argument><expr><literal type="number" pos:line="58" pos:column="50">00160<pos:position pos:line="58" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="56"/></argument_list></call> <literal type="string" pos:line="58" pos:column="57">"processor unbind failed"<pos:position pos:line="58" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="84"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">RAISE_SIGSTOP<pos:position pos:line="61" pos:column="22"/></name><argument_list pos:line="61" pos:column="22">(<argument><expr><name pos:line="61" pos:column="23">MAKE_CHILD<pos:position pos:line="61" pos:column="33"/></name></expr></argument>)<pos:position pos:line="61" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">AP_MONCONTROL<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">(<argument><expr><literal type="number" pos:line="62" pos:column="23">1<pos:position pos:line="62" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="26"/></expr_stmt>
        <comment type="block" pos:line="63" pos:column="9">/* Disable the parent's signal handlers and set up proper handling in
         * the child.
         */</comment>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">apr_signal<pos:position pos:line="66" pos:column="19"/></name><argument_list pos:line="66" pos:column="19">(<argument><expr><name pos:line="66" pos:column="20">SIGHUP<pos:position pos:line="66" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="28">just_die<pos:position pos:line="66" pos:column="36"/></name></expr></argument>)<pos:position pos:line="66" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">apr_signal<pos:position pos:line="67" pos:column="19"/></name><argument_list pos:line="67" pos:column="19">(<argument><expr><name pos:line="67" pos:column="20">SIGTERM<pos:position pos:line="67" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="29">just_die<pos:position pos:line="67" pos:column="37"/></name></expr></argument>)<pos:position pos:line="67" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="39"/></expr_stmt>
        <comment type="block" pos:line="68" pos:column="9">/* The child process just closes listeners on AP_SIG_GRACEFUL.
         * The pod is used for signalling the graceful restart.
         */</comment>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">apr_signal<pos:position pos:line="71" pos:column="19"/></name><argument_list pos:line="71" pos:column="19">(<argument><expr><name pos:line="71" pos:column="20">AP_SIG_GRACEFUL<pos:position pos:line="71" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="37">stop_listening<pos:position pos:line="71" pos:column="51"/></name></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">child_main<pos:position pos:line="72" pos:column="19"/></name><argument_list pos:line="72" pos:column="19">(<argument><expr><name pos:line="72" pos:column="20">slot<pos:position pos:line="72" pos:column="24"/></name></expr></argument>)<pos:position pos:line="72" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="75" pos:column="5">prefork_note_child_started<pos:position pos:line="75" pos:column="31"/></name><argument_list pos:line="75" pos:column="31">(<argument><expr><name pos:line="75" pos:column="32">slot<pos:position pos:line="75" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="38">pid<pos:position pos:line="75" pos:column="41"/></name></expr></argument>)<pos:position pos:line="75" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="43"/></expr_stmt>

    <return pos:line="77" pos:column="5">return <expr><literal type="number" pos:line="77" pos:column="12">0<pos:position pos:line="77" pos:column="13"/></literal></expr>;<pos:position pos:line="77" pos:column="14"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></then></if>


<comment type="block" pos:line="81" pos:column="1">/* start up a bunch of children */</comment>
<function><specifier pos:line="82" pos:column="1">static<pos:position pos:line="82" pos:column="7"/></specifier> <type><name pos:line="82" pos:column="8">void<pos:position pos:line="82" pos:column="12"/></name></type> <name pos:line="82" pos:column="13">startup_children<pos:position pos:line="82" pos:column="29"/></name><parameter_list pos:line="82" pos:column="29">(<parameter><decl><type><name pos:line="82" pos:column="30">int<pos:position pos:line="82" pos:column="33"/></name></type> <name pos:line="82" pos:column="34">number_to_start<pos:position pos:line="82" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="82" pos:column="50"/></parameter_list>
<block pos:line="83" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="84" pos:column="5">int<pos:position pos:line="84" pos:column="8"/></name></type> <name pos:line="84" pos:column="9">i<pos:position pos:line="84" pos:column="10"/></name></decl>;<pos:position pos:line="84" pos:column="11"/></decl_stmt>

    <for pos:line="86" pos:column="5">for <control pos:line="86" pos:column="9">(<init><expr><name pos:line="86" pos:column="10">i<pos:position pos:line="86" pos:column="11"/></name> <operator pos:line="86" pos:column="12">=<pos:position pos:line="86" pos:column="13"/></operator> <literal type="number" pos:line="86" pos:column="14">0<pos:position pos:line="86" pos:column="15"/></literal></expr>;<pos:position pos:line="86" pos:column="16"/></init> <condition><expr><name pos:line="86" pos:column="17">number_to_start<pos:position pos:line="86" pos:column="32"/></name> <operator pos:line="86" pos:column="33">&amp;&amp;<pos:position pos:line="86" pos:column="43"/></operator> <name pos:line="86" pos:column="36">i<pos:position pos:line="86" pos:column="37"/></name> <operator pos:line="86" pos:column="38">&lt;<pos:position pos:line="86" pos:column="42"/></operator> <name pos:line="86" pos:column="40">ap_daemons_limit<pos:position pos:line="86" pos:column="56"/></name></expr>;<pos:position pos:line="86" pos:column="57"/></condition> <incr><expr><operator pos:line="86" pos:column="58">++<pos:position pos:line="86" pos:column="60"/></operator><name pos:line="86" pos:column="60">i<pos:position pos:line="86" pos:column="61"/></name></expr></incr>)<pos:position pos:line="86" pos:column="62"/></control> <block pos:line="86" pos:column="63">{
        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name><name pos:line="87" pos:column="13">ap_scoreboard_image<pos:position pos:line="87" pos:column="32"/></name><operator pos:line="87" pos:column="32">-&gt;<pos:position pos:line="87" pos:column="37"/></operator><name pos:line="87" pos:column="34">servers<pos:position pos:line="87" pos:column="41"/></name><index pos:line="87" pos:column="41">[<expr><name pos:line="87" pos:column="42">i<pos:position pos:line="87" pos:column="43"/></name></expr>]<pos:position pos:line="87" pos:column="44"/></index><index pos:line="87" pos:column="44">[<expr><literal type="number" pos:line="87" pos:column="45">0<pos:position pos:line="87" pos:column="46"/></literal></expr>]<pos:position pos:line="87" pos:column="47"/></index></name><operator pos:line="87" pos:column="47">.<pos:position pos:line="87" pos:column="48"/></operator><name pos:line="87" pos:column="48">status<pos:position pos:line="87" pos:column="54"/></name> <operator pos:line="87" pos:column="55">!=<pos:position pos:line="87" pos:column="57"/></operator> <name pos:line="87" pos:column="58">SERVER_DEAD<pos:position pos:line="87" pos:column="69"/></name></expr>)<pos:position pos:line="87" pos:column="70"/></condition><then pos:line="87" pos:column="70"> <block pos:line="87" pos:column="71">{
            <continue pos:line="88" pos:column="13">continue;<pos:position pos:line="88" pos:column="22"/></continue>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if>
        <if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><call><name pos:line="90" pos:column="13">make_child<pos:position pos:line="90" pos:column="23"/></name><argument_list pos:line="90" pos:column="23">(<argument><expr><name pos:line="90" pos:column="24">ap_server_conf<pos:position pos:line="90" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="40">i<pos:position pos:line="90" pos:column="41"/></name></expr></argument>)<pos:position pos:line="90" pos:column="42"/></argument_list></call> <operator pos:line="90" pos:column="43">&lt;<pos:position pos:line="90" pos:column="47"/></operator> <literal type="number" pos:line="90" pos:column="45">0<pos:position pos:line="90" pos:column="46"/></literal></expr>)<pos:position pos:line="90" pos:column="47"/></condition><then pos:line="90" pos:column="47"> <block pos:line="90" pos:column="48">{
            <break pos:line="91" pos:column="13">break;<pos:position pos:line="91" pos:column="19"/></break>
        }<pos:position pos:line="92" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="93" pos:column="9">--<pos:position pos:line="93" pos:column="11"/></operator><name pos:line="93" pos:column="11">number_to_start<pos:position pos:line="93" pos:column="26"/></name></expr>;<pos:position pos:line="93" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></for>
}<pos:position pos:line="95" pos:column="2"/></block></function>

<function><specifier pos:line="97" pos:column="1">static<pos:position pos:line="97" pos:column="7"/></specifier> <type><name pos:line="97" pos:column="8">void<pos:position pos:line="97" pos:column="12"/></name></type> <name pos:line="97" pos:column="13">perform_idle_server_maintenance<pos:position pos:line="97" pos:column="44"/></name><parameter_list pos:line="97" pos:column="44">(<parameter><decl><type><name pos:line="97" pos:column="45">apr_pool_t<pos:position pos:line="97" pos:column="55"/></name> <modifier pos:line="97" pos:column="56">*<pos:position pos:line="97" pos:column="57"/></modifier></type><name pos:line="97" pos:column="57">p<pos:position pos:line="97" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="97" pos:column="59"/></parameter_list>
<block pos:line="98" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="99" pos:column="5">int<pos:position pos:line="99" pos:column="8"/></name></type> <name pos:line="99" pos:column="9">i<pos:position pos:line="99" pos:column="10"/></name></decl>;<pos:position pos:line="99" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="100" pos:column="5">int<pos:position pos:line="100" pos:column="8"/></name></type> <name pos:line="100" pos:column="9">idle_count<pos:position pos:line="100" pos:column="19"/></name></decl>;<pos:position pos:line="100" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="101" pos:column="5">worker_score<pos:position pos:line="101" pos:column="17"/></name> <modifier pos:line="101" pos:column="18">*<pos:position pos:line="101" pos:column="19"/></modifier></type><name pos:line="101" pos:column="19">ws<pos:position pos:line="101" pos:column="21"/></name></decl>;<pos:position pos:line="101" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="102" pos:column="5">int<pos:position pos:line="102" pos:column="8"/></name></type> <name pos:line="102" pos:column="9">free_length<pos:position pos:line="102" pos:column="20"/></name></decl>;<pos:position pos:line="102" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="103" pos:column="5">int<pos:position pos:line="103" pos:column="8"/></name></type> <name><name pos:line="103" pos:column="9">free_slots<pos:position pos:line="103" pos:column="19"/></name><index pos:line="103" pos:column="19">[<expr><name pos:line="103" pos:column="20">MAX_SPAWN_RATE<pos:position pos:line="103" pos:column="34"/></name></expr>]<pos:position pos:line="103" pos:column="35"/></index></name></decl>;<pos:position pos:line="103" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="104" pos:column="5">int<pos:position pos:line="104" pos:column="8"/></name></type> <name pos:line="104" pos:column="9">last_non_dead<pos:position pos:line="104" pos:column="22"/></name></decl>;<pos:position pos:line="104" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="105" pos:column="5">int<pos:position pos:line="105" pos:column="8"/></name></type> <name pos:line="105" pos:column="9">total_non_dead<pos:position pos:line="105" pos:column="23"/></name></decl>;<pos:position pos:line="105" pos:column="24"/></decl_stmt>

    <comment type="block" pos:line="107" pos:column="5">/* initialize the free_list */</comment>
    <expr_stmt><expr><name pos:line="108" pos:column="5">free_length<pos:position pos:line="108" pos:column="16"/></name> <operator pos:line="108" pos:column="17">=<pos:position pos:line="108" pos:column="18"/></operator> <literal type="number" pos:line="108" pos:column="19">0<pos:position pos:line="108" pos:column="20"/></literal></expr>;<pos:position pos:line="108" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="110" pos:column="5">idle_count<pos:position pos:line="110" pos:column="15"/></name> <operator pos:line="110" pos:column="16">=<pos:position pos:line="110" pos:column="17"/></operator> <literal type="number" pos:line="110" pos:column="18">0<pos:position pos:line="110" pos:column="19"/></literal></expr>;<pos:position pos:line="110" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="111" pos:column="5">last_non_dead<pos:position pos:line="111" pos:column="18"/></name> <operator pos:line="111" pos:column="19">=<pos:position pos:line="111" pos:column="20"/></operator> <operator pos:line="111" pos:column="21">-<pos:position pos:line="111" pos:column="22"/></operator><literal type="number" pos:line="111" pos:column="22">1<pos:position pos:line="111" pos:column="23"/></literal></expr>;<pos:position pos:line="111" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="112" pos:column="5">total_non_dead<pos:position pos:line="112" pos:column="19"/></name> <operator pos:line="112" pos:column="20">=<pos:position pos:line="112" pos:column="21"/></operator> <literal type="number" pos:line="112" pos:column="22">0<pos:position pos:line="112" pos:column="23"/></literal></expr>;<pos:position pos:line="112" pos:column="24"/></expr_stmt>

    <for pos:line="114" pos:column="5">for <control pos:line="114" pos:column="9">(<init><expr><name pos:line="114" pos:column="10">i<pos:position pos:line="114" pos:column="11"/></name> <operator pos:line="114" pos:column="12">=<pos:position pos:line="114" pos:column="13"/></operator> <literal type="number" pos:line="114" pos:column="14">0<pos:position pos:line="114" pos:column="15"/></literal></expr>;<pos:position pos:line="114" pos:column="16"/></init> <condition><expr><name pos:line="114" pos:column="17">i<pos:position pos:line="114" pos:column="18"/></name> <operator pos:line="114" pos:column="19">&lt;<pos:position pos:line="114" pos:column="23"/></operator> <name pos:line="114" pos:column="21">ap_daemons_limit<pos:position pos:line="114" pos:column="37"/></name></expr>;<pos:position pos:line="114" pos:column="38"/></condition> <incr><expr><operator pos:line="114" pos:column="39">++<pos:position pos:line="114" pos:column="41"/></operator><name pos:line="114" pos:column="41">i<pos:position pos:line="114" pos:column="42"/></name></expr></incr>)<pos:position pos:line="114" pos:column="43"/></control> <block pos:line="114" pos:column="44">{
        <decl_stmt><decl><type><name pos:line="115" pos:column="9">int<pos:position pos:line="115" pos:column="12"/></name></type> <name pos:line="115" pos:column="13">status<pos:position pos:line="115" pos:column="19"/></name></decl>;<pos:position pos:line="115" pos:column="20"/></decl_stmt>

        <if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><name pos:line="117" pos:column="13">i<pos:position pos:line="117" pos:column="14"/></name> <operator pos:line="117" pos:column="15">&gt;=<pos:position pos:line="117" pos:column="20"/></operator> <name><name pos:line="117" pos:column="18">retained<pos:position pos:line="117" pos:column="26"/></name><operator pos:line="117" pos:column="26">-&gt;<pos:position pos:line="117" pos:column="31"/></operator><name pos:line="117" pos:column="28">max_daemons_limit<pos:position pos:line="117" pos:column="45"/></name></name> <operator pos:line="117" pos:column="46">&amp;&amp;<pos:position pos:line="117" pos:column="56"/></operator> <name pos:line="117" pos:column="49">free_length<pos:position pos:line="117" pos:column="60"/></name> <operator pos:line="117" pos:column="61">==<pos:position pos:line="117" pos:column="63"/></operator> <name><name pos:line="117" pos:column="64">retained<pos:position pos:line="117" pos:column="72"/></name><operator pos:line="117" pos:column="72">-&gt;<pos:position pos:line="117" pos:column="77"/></operator><name pos:line="117" pos:column="74">idle_spawn_rate<pos:position pos:line="117" pos:column="89"/></name></name></expr>)<pos:position pos:line="117" pos:column="90"/></condition><then pos:line="117" pos:column="90">
            <block type="pseudo"><break pos:line="118" pos:column="13">break;<pos:position pos:line="118" pos:column="19"/></break></block></then></if>
        <expr_stmt><expr><name pos:line="119" pos:column="9">ws<pos:position pos:line="119" pos:column="11"/></name> <operator pos:line="119" pos:column="12">=<pos:position pos:line="119" pos:column="13"/></operator> <operator pos:line="119" pos:column="14">&amp;<pos:position pos:line="119" pos:column="19"/></operator><name><name pos:line="119" pos:column="15">ap_scoreboard_image<pos:position pos:line="119" pos:column="34"/></name><operator pos:line="119" pos:column="34">-&gt;<pos:position pos:line="119" pos:column="39"/></operator><name pos:line="119" pos:column="36">servers<pos:position pos:line="119" pos:column="43"/></name><index pos:line="119" pos:column="43">[<expr><name pos:line="119" pos:column="44">i<pos:position pos:line="119" pos:column="45"/></name></expr>]<pos:position pos:line="119" pos:column="46"/></index><index pos:line="119" pos:column="46">[<expr><literal type="number" pos:line="119" pos:column="47">0<pos:position pos:line="119" pos:column="48"/></literal></expr>]<pos:position pos:line="119" pos:column="49"/></index></name></expr>;<pos:position pos:line="119" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="120" pos:column="9">status<pos:position pos:line="120" pos:column="15"/></name> <operator pos:line="120" pos:column="16">=<pos:position pos:line="120" pos:column="17"/></operator> <name><name pos:line="120" pos:column="18">ws<pos:position pos:line="120" pos:column="20"/></name><operator pos:line="120" pos:column="20">-&gt;<pos:position pos:line="120" pos:column="25"/></operator><name pos:line="120" pos:column="22">status<pos:position pos:line="120" pos:column="28"/></name></name></expr>;<pos:position pos:line="120" pos:column="29"/></expr_stmt>
        <if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><name pos:line="121" pos:column="13">status<pos:position pos:line="121" pos:column="19"/></name> <operator pos:line="121" pos:column="20">==<pos:position pos:line="121" pos:column="22"/></operator> <name pos:line="121" pos:column="23">SERVER_DEAD<pos:position pos:line="121" pos:column="34"/></name></expr>)<pos:position pos:line="121" pos:column="35"/></condition><then pos:line="121" pos:column="35"> <block pos:line="121" pos:column="36">{
            <comment type="block" pos:line="122" pos:column="13">/* try to keep children numbers as low as possible */</comment>
            <if pos:line="123" pos:column="13">if <condition pos:line="123" pos:column="16">(<expr><name pos:line="123" pos:column="17">free_length<pos:position pos:line="123" pos:column="28"/></name> <operator pos:line="123" pos:column="29">&lt;<pos:position pos:line="123" pos:column="33"/></operator> <name><name pos:line="123" pos:column="31">retained<pos:position pos:line="123" pos:column="39"/></name><operator pos:line="123" pos:column="39">-&gt;<pos:position pos:line="123" pos:column="44"/></operator><name pos:line="123" pos:column="41">idle_spawn_rate<pos:position pos:line="123" pos:column="56"/></name></name></expr>)<pos:position pos:line="123" pos:column="57"/></condition><then pos:line="123" pos:column="57"> <block pos:line="123" pos:column="58">{
                <expr_stmt><expr><name><name pos:line="124" pos:column="17">free_slots<pos:position pos:line="124" pos:column="27"/></name><index pos:line="124" pos:column="27">[<expr><name pos:line="124" pos:column="28">free_length<pos:position pos:line="124" pos:column="39"/></name></expr>]<pos:position pos:line="124" pos:column="40"/></index></name> <operator pos:line="124" pos:column="41">=<pos:position pos:line="124" pos:column="42"/></operator> <name pos:line="124" pos:column="43">i<pos:position pos:line="124" pos:column="44"/></name></expr>;<pos:position pos:line="124" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="125" pos:column="17">++<pos:position pos:line="125" pos:column="19"/></operator><name pos:line="125" pos:column="19">free_length<pos:position pos:line="125" pos:column="30"/></name></expr>;<pos:position pos:line="125" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="126" pos:column="14"/></block></then></if>
        }<pos:position pos:line="127" pos:column="10"/></block></then>
        <else pos:line="128" pos:column="9">else <block pos:line="128" pos:column="14">{
            <comment type="block" pos:line="129" pos:column="13">/* We consider a starting server as idle because we started it
             * at least a cycle ago, and if it still hasn't finished starting
             * then we're just going to swamp things worse by forking more.
             * So we hopefully won't need to fork more if we count it.
             * This depends on the ordering of SERVER_READY and SERVER_STARTING.
             */</comment>
            <if pos:line="135" pos:column="13">if <condition pos:line="135" pos:column="16">(<expr><name pos:line="135" pos:column="17">status<pos:position pos:line="135" pos:column="23"/></name> <operator pos:line="135" pos:column="24">&lt;=<pos:position pos:line="135" pos:column="29"/></operator> <name pos:line="135" pos:column="27">SERVER_READY<pos:position pos:line="135" pos:column="39"/></name></expr>)<pos:position pos:line="135" pos:column="40"/></condition><then pos:line="135" pos:column="40"> <block pos:line="135" pos:column="41">{
                <expr_stmt><expr><operator pos:line="136" pos:column="17">++<pos:position pos:line="136" pos:column="19"/></operator> <name pos:line="136" pos:column="20">idle_count<pos:position pos:line="136" pos:column="30"/></name></expr>;<pos:position pos:line="136" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="137" pos:column="14"/></block></then></if>

            <expr_stmt><expr><operator pos:line="139" pos:column="13">++<pos:position pos:line="139" pos:column="15"/></operator><name pos:line="139" pos:column="15">total_non_dead<pos:position pos:line="139" pos:column="29"/></name></expr>;<pos:position pos:line="139" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="140" pos:column="13">last_non_dead<pos:position pos:line="140" pos:column="26"/></name> <operator pos:line="140" pos:column="27">=<pos:position pos:line="140" pos:column="28"/></operator> <name pos:line="140" pos:column="29">i<pos:position pos:line="140" pos:column="30"/></name></expr>;<pos:position pos:line="140" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="141" pos:column="10"/></block></else></if>
    }<pos:position pos:line="142" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="143" pos:column="5">retained<pos:position pos:line="143" pos:column="13"/></name><operator pos:line="143" pos:column="13">-&gt;<pos:position pos:line="143" pos:column="18"/></operator><name pos:line="143" pos:column="15">max_daemons_limit<pos:position pos:line="143" pos:column="32"/></name></name> <operator pos:line="143" pos:column="33">=<pos:position pos:line="143" pos:column="34"/></operator> <name pos:line="143" pos:column="35">last_non_dead<pos:position pos:line="143" pos:column="48"/></name> <operator pos:line="143" pos:column="49">+<pos:position pos:line="143" pos:column="50"/></operator> <literal type="number" pos:line="143" pos:column="51">1<pos:position pos:line="143" pos:column="52"/></literal></expr>;<pos:position pos:line="143" pos:column="53"/></expr_stmt>
    <if pos:line="144" pos:column="5">if <condition pos:line="144" pos:column="8">(<expr><name pos:line="144" pos:column="9">idle_count<pos:position pos:line="144" pos:column="19"/></name> <operator pos:line="144" pos:column="20">&gt;<pos:position pos:line="144" pos:column="24"/></operator> <name pos:line="144" pos:column="22">ap_daemons_max_free<pos:position pos:line="144" pos:column="41"/></name></expr>)<pos:position pos:line="144" pos:column="42"/></condition><then pos:line="144" pos:column="42"> <block pos:line="144" pos:column="43">{
        <comment type="block" pos:line="145" pos:column="9">/* kill off one child... we use the pod because that'll cause it to
         * shut down gracefully, in case it happened to pick up a request
         * while we were counting
         */</comment>
        <expr_stmt><expr><call><name pos:line="149" pos:column="9">ap_mpm_pod_signal<pos:position pos:line="149" pos:column="26"/></name><argument_list pos:line="149" pos:column="26">(<argument><expr><name pos:line="149" pos:column="27">pod<pos:position pos:line="149" pos:column="30"/></name></expr></argument>)<pos:position pos:line="149" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="150" pos:column="9">retained<pos:position pos:line="150" pos:column="17"/></name><operator pos:line="150" pos:column="17">-&gt;<pos:position pos:line="150" pos:column="22"/></operator><name pos:line="150" pos:column="19">idle_spawn_rate<pos:position pos:line="150" pos:column="34"/></name></name> <operator pos:line="150" pos:column="35">=<pos:position pos:line="150" pos:column="36"/></operator> <literal type="number" pos:line="150" pos:column="37">1<pos:position pos:line="150" pos:column="38"/></literal></expr>;<pos:position pos:line="150" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="151" pos:column="6"/></block></then>
    <elseif pos:line="152" pos:column="5">else <if pos:line="152" pos:column="10">if <condition pos:line="152" pos:column="13">(<expr><name pos:line="152" pos:column="14">idle_count<pos:position pos:line="152" pos:column="24"/></name> <operator pos:line="152" pos:column="25">&lt;<pos:position pos:line="152" pos:column="29"/></operator> <name pos:line="152" pos:column="27">ap_daemons_min_free<pos:position pos:line="152" pos:column="46"/></name></expr>)<pos:position pos:line="152" pos:column="47"/></condition><then pos:line="152" pos:column="47"> <block pos:line="152" pos:column="48">{
        <comment type="block" pos:line="153" pos:column="9">/* terminate the free list */</comment>
        <if pos:line="154" pos:column="9">if <condition pos:line="154" pos:column="12">(<expr><name pos:line="154" pos:column="13">free_length<pos:position pos:line="154" pos:column="24"/></name> <operator pos:line="154" pos:column="25">==<pos:position pos:line="154" pos:column="27"/></operator> <literal type="number" pos:line="154" pos:column="28">0<pos:position pos:line="154" pos:column="29"/></literal></expr>)<pos:position pos:line="154" pos:column="30"/></condition><then pos:line="154" pos:column="30"> <block pos:line="154" pos:column="31">{
            <comment type="block" pos:line="155" pos:column="13">/* only report this condition once */</comment>
            <if pos:line="156" pos:column="13">if <condition pos:line="156" pos:column="16">(<expr><operator pos:line="156" pos:column="17">!<pos:position pos:line="156" pos:column="18"/></operator><name><name pos:line="156" pos:column="18">retained<pos:position pos:line="156" pos:column="26"/></name><operator pos:line="156" pos:column="26">-&gt;<pos:position pos:line="156" pos:column="31"/></operator><name pos:line="156" pos:column="28">maxclients_reported<pos:position pos:line="156" pos:column="47"/></name></name></expr>)<pos:position pos:line="156" pos:column="48"/></condition><then pos:line="156" pos:column="48"> <block pos:line="156" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="157" pos:column="17">ap_log_error<pos:position pos:line="157" pos:column="29"/></name><argument_list pos:line="157" pos:column="29">(<argument><expr><name pos:line="157" pos:column="30">APLOG_MARK<pos:position pos:line="157" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="42">APLOG_ERR<pos:position pos:line="157" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="157" pos:column="53">0<pos:position pos:line="157" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="157" pos:column="56">ap_server_conf<pos:position pos:line="157" pos:column="70"/></name></expr></argument>, <argument><expr><call><name pos:line="157" pos:column="72">APLOGNO<pos:position pos:line="157" pos:column="79"/></name><argument_list pos:line="157" pos:column="79">(<argument><expr><literal type="number" pos:line="157" pos:column="80">00161<pos:position pos:line="157" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="86"/></argument_list></call>
                            <literal type="string" pos:line="158" pos:column="29">"server reached MaxRequestWorkers setting, consider"<pos:position pos:line="158" pos:column="81"/></literal>
                            <literal type="string" pos:line="159" pos:column="29">" raising the MaxRequestWorkers setting"<pos:position pos:line="159" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="71"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="160" pos:column="17">retained<pos:position pos:line="160" pos:column="25"/></name><operator pos:line="160" pos:column="25">-&gt;<pos:position pos:line="160" pos:column="30"/></operator><name pos:line="160" pos:column="27">maxclients_reported<pos:position pos:line="160" pos:column="46"/></name></name> <operator pos:line="160" pos:column="47">=<pos:position pos:line="160" pos:column="48"/></operator> <literal type="number" pos:line="160" pos:column="49">1<pos:position pos:line="160" pos:column="50"/></literal></expr>;<pos:position pos:line="160" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="161" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="162" pos:column="13">retained<pos:position pos:line="162" pos:column="21"/></name><operator pos:line="162" pos:column="21">-&gt;<pos:position pos:line="162" pos:column="26"/></operator><name pos:line="162" pos:column="23">idle_spawn_rate<pos:position pos:line="162" pos:column="38"/></name></name> <operator pos:line="162" pos:column="39">=<pos:position pos:line="162" pos:column="40"/></operator> <literal type="number" pos:line="162" pos:column="41">1<pos:position pos:line="162" pos:column="42"/></literal></expr>;<pos:position pos:line="162" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="163" pos:column="10"/></block></then>
        <else pos:line="164" pos:column="9">else <block pos:line="164" pos:column="14">{
            <if pos:line="165" pos:column="13">if <condition pos:line="165" pos:column="16">(<expr><name><name pos:line="165" pos:column="17">retained<pos:position pos:line="165" pos:column="25"/></name><operator pos:line="165" pos:column="25">-&gt;<pos:position pos:line="165" pos:column="30"/></operator><name pos:line="165" pos:column="27">idle_spawn_rate<pos:position pos:line="165" pos:column="42"/></name></name> <operator pos:line="165" pos:column="43">&gt;=<pos:position pos:line="165" pos:column="48"/></operator> <literal type="number" pos:line="165" pos:column="46">8<pos:position pos:line="165" pos:column="47"/></literal></expr>)<pos:position pos:line="165" pos:column="48"/></condition><then pos:line="165" pos:column="48"> <block pos:line="165" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="166" pos:column="17">ap_log_error<pos:position pos:line="166" pos:column="29"/></name><argument_list pos:line="166" pos:column="29">(<argument><expr><name pos:line="166" pos:column="30">APLOG_MARK<pos:position pos:line="166" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="42">APLOG_INFO<pos:position pos:line="166" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="166" pos:column="54">0<pos:position pos:line="166" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="166" pos:column="57">ap_server_conf<pos:position pos:line="166" pos:column="71"/></name></expr></argument>, <argument><expr><call><name pos:line="166" pos:column="73">APLOGNO<pos:position pos:line="166" pos:column="80"/></name><argument_list pos:line="166" pos:column="80">(<argument><expr><literal type="number" pos:line="166" pos:column="81">00162<pos:position pos:line="166" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="87"/></argument_list></call>
                    <literal type="string" pos:line="167" pos:column="21">"server seems busy, (you may need "<pos:position pos:line="167" pos:column="56"/></literal>
                    <literal type="string" pos:line="168" pos:column="21">"to increase StartServers, or Min/MaxSpareServers), "<pos:position pos:line="168" pos:column="74"/></literal>
                    <literal type="string" pos:line="169" pos:column="21">"spawning %d children, there are %d idle, and "<pos:position pos:line="169" pos:column="68"/></literal>
                    <literal type="string" pos:line="170" pos:column="21">"%d total children"<pos:position pos:line="170" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="170" pos:column="42">retained<pos:position pos:line="170" pos:column="50"/></name><operator pos:line="170" pos:column="50">-&gt;<pos:position pos:line="170" pos:column="55"/></operator><name pos:line="170" pos:column="52">idle_spawn_rate<pos:position pos:line="170" pos:column="67"/></name></name></expr></argument>,
                    <argument><expr><name pos:line="171" pos:column="21">idle_count<pos:position pos:line="171" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="33">total_non_dead<pos:position pos:line="171" pos:column="47"/></name></expr></argument>)<pos:position pos:line="171" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="172" pos:column="14"/></block></then></if>
            <for pos:line="173" pos:column="13">for <control pos:line="173" pos:column="17">(<init><expr><name pos:line="173" pos:column="18">i<pos:position pos:line="173" pos:column="19"/></name> <operator pos:line="173" pos:column="20">=<pos:position pos:line="173" pos:column="21"/></operator> <literal type="number" pos:line="173" pos:column="22">0<pos:position pos:line="173" pos:column="23"/></literal></expr>;<pos:position pos:line="173" pos:column="24"/></init> <condition><expr><name pos:line="173" pos:column="25">i<pos:position pos:line="173" pos:column="26"/></name> <operator pos:line="173" pos:column="27">&lt;<pos:position pos:line="173" pos:column="31"/></operator> <name pos:line="173" pos:column="29">free_length<pos:position pos:line="173" pos:column="40"/></name></expr>;<pos:position pos:line="173" pos:column="41"/></condition> <incr><expr><operator pos:line="173" pos:column="42">++<pos:position pos:line="173" pos:column="44"/></operator><name pos:line="173" pos:column="44">i<pos:position pos:line="173" pos:column="45"/></name></expr></incr>)<pos:position pos:line="173" pos:column="46"/></control> <block pos:line="173" pos:column="47">{
                <expr_stmt><expr><call><name pos:line="174" pos:column="17">make_child<pos:position pos:line="174" pos:column="27"/></name><argument_list pos:line="174" pos:column="27">(<argument><expr><name pos:line="174" pos:column="28">ap_server_conf<pos:position pos:line="174" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="174" pos:column="44">free_slots<pos:position pos:line="174" pos:column="54"/></name><index pos:line="174" pos:column="54">[<expr><name pos:line="174" pos:column="55">i<pos:position pos:line="174" pos:column="56"/></name></expr>]<pos:position pos:line="174" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="174" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="175" pos:column="14"/></block></for>
            <comment type="block" pos:line="176" pos:column="13">/* the next time around we want to spawn twice as many if this
             * wasn't good enough, but not if we've just done a graceful
             */</comment>
            <if pos:line="179" pos:column="13">if <condition pos:line="179" pos:column="16">(<expr><name><name pos:line="179" pos:column="17">retained<pos:position pos:line="179" pos:column="25"/></name><operator pos:line="179" pos:column="25">-&gt;<pos:position pos:line="179" pos:column="30"/></operator><name pos:line="179" pos:column="27">hold_off_on_exponential_spawning<pos:position pos:line="179" pos:column="59"/></name></name></expr>)<pos:position pos:line="179" pos:column="60"/></condition><then pos:line="179" pos:column="60"> <block pos:line="179" pos:column="61">{
                <expr_stmt><expr><operator pos:line="180" pos:column="17">--<pos:position pos:line="180" pos:column="19"/></operator><name><name pos:line="180" pos:column="19">retained<pos:position pos:line="180" pos:column="27"/></name><operator pos:line="180" pos:column="27">-&gt;<pos:position pos:line="180" pos:column="32"/></operator><name pos:line="180" pos:column="29">hold_off_on_exponential_spawning<pos:position pos:line="180" pos:column="61"/></name></name></expr>;<pos:position pos:line="180" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="181" pos:column="14"/></block></then>
            <elseif pos:line="182" pos:column="13">else <if pos:line="182" pos:column="18">if <condition pos:line="182" pos:column="21">(<expr><name><name pos:line="182" pos:column="22">retained<pos:position pos:line="182" pos:column="30"/></name><operator pos:line="182" pos:column="30">-&gt;<pos:position pos:line="182" pos:column="35"/></operator><name pos:line="182" pos:column="32">idle_spawn_rate<pos:position pos:line="182" pos:column="47"/></name></name> <operator pos:line="182" pos:column="48">&lt;<pos:position pos:line="182" pos:column="52"/></operator> <name pos:line="182" pos:column="50">MAX_SPAWN_RATE<pos:position pos:line="182" pos:column="64"/></name></expr>)<pos:position pos:line="182" pos:column="65"/></condition><then pos:line="182" pos:column="65"> <block pos:line="182" pos:column="66">{
                <expr_stmt><expr><name><name pos:line="183" pos:column="17">retained<pos:position pos:line="183" pos:column="25"/></name><operator pos:line="183" pos:column="25">-&gt;<pos:position pos:line="183" pos:column="30"/></operator><name pos:line="183" pos:column="27">idle_spawn_rate<pos:position pos:line="183" pos:column="42"/></name></name> <operator pos:line="183" pos:column="43">*=<pos:position pos:line="183" pos:column="45"/></operator> <literal type="number" pos:line="183" pos:column="46">2<pos:position pos:line="183" pos:column="47"/></literal></expr>;<pos:position pos:line="183" pos:column="48"/></expr_stmt>
            }<pos:position pos:line="184" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="185" pos:column="10"/></block></else></if>
    }<pos:position pos:line="186" pos:column="6"/></block></then></if></elseif>
    <else pos:line="187" pos:column="5">else <block pos:line="187" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="188" pos:column="9">retained<pos:position pos:line="188" pos:column="17"/></name><operator pos:line="188" pos:column="17">-&gt;<pos:position pos:line="188" pos:column="22"/></operator><name pos:line="188" pos:column="19">idle_spawn_rate<pos:position pos:line="188" pos:column="34"/></name></name> <operator pos:line="188" pos:column="35">=<pos:position pos:line="188" pos:column="36"/></operator> <literal type="number" pos:line="188" pos:column="37">1<pos:position pos:line="188" pos:column="38"/></literal></expr>;<pos:position pos:line="188" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="189" pos:column="6"/></block></else></if>
}<pos:position pos:line="190" pos:column="2"/></block></function>

<comment type="block" format="doxygen" pos:line="192" pos:column="1">/*****************************************************************
 * Executive routines.
 */</comment>

<function><specifier pos:line="196" pos:column="1">static<pos:position pos:line="196" pos:column="7"/></specifier> <type><name pos:line="196" pos:column="8">int<pos:position pos:line="196" pos:column="11"/></name></type> <name pos:line="196" pos:column="12">prefork_run<pos:position pos:line="196" pos:column="23"/></name><parameter_list pos:line="196" pos:column="23">(<parameter><decl><type><name pos:line="196" pos:column="24">apr_pool_t<pos:position pos:line="196" pos:column="34"/></name> <modifier pos:line="196" pos:column="35">*<pos:position pos:line="196" pos:column="36"/></modifier></type><name pos:line="196" pos:column="36">_pconf<pos:position pos:line="196" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="196" pos:column="44">apr_pool_t<pos:position pos:line="196" pos:column="54"/></name> <modifier pos:line="196" pos:column="55">*<pos:position pos:line="196" pos:column="56"/></modifier></type><name pos:line="196" pos:column="56">plog<pos:position pos:line="196" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="196" pos:column="62">server_rec<pos:position pos:line="196" pos:column="72"/></name> <modifier pos:line="196" pos:column="73">*<pos:position pos:line="196" pos:column="74"/></modifier></type><name pos:line="196" pos:column="74">s<pos:position pos:line="196" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="196" pos:column="76"/></parameter_list>
<block pos:line="197" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="198" pos:column="5">int<pos:position pos:line="198" pos:column="8"/></name></type> <name pos:line="198" pos:column="9">index<pos:position pos:line="198" pos:column="14"/></name></decl>;<pos:position pos:line="198" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="199" pos:column="5">int<pos:position pos:line="199" pos:column="8"/></name></type> <name pos:line="199" pos:column="9">remaining_children_to_start<pos:position pos:line="199" pos:column="36"/></name></decl>;<pos:position pos:line="199" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="200" pos:column="5">apr_status_t<pos:position pos:line="200" pos:column="17"/></name></type> <name pos:line="200" pos:column="18">rv<pos:position pos:line="200" pos:column="20"/></name></decl>;<pos:position pos:line="200" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="202" pos:column="5">ap_log_pid<pos:position pos:line="202" pos:column="15"/></name><argument_list pos:line="202" pos:column="15">(<argument><expr><name pos:line="202" pos:column="16">pconf<pos:position pos:line="202" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="23">ap_pid_fname<pos:position pos:line="202" pos:column="35"/></name></expr></argument>)<pos:position pos:line="202" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="204" pos:column="5">/* Initialize cross-process accept lock */</comment>
    <expr_stmt><expr><name pos:line="205" pos:column="5">rv<pos:position pos:line="205" pos:column="7"/></name> <operator pos:line="205" pos:column="8">=<pos:position pos:line="205" pos:column="9"/></operator> <call><name pos:line="205" pos:column="10">ap_proc_mutex_create<pos:position pos:line="205" pos:column="30"/></name><argument_list pos:line="205" pos:column="30">(<argument><expr><operator pos:line="205" pos:column="31">&amp;<pos:position pos:line="205" pos:column="36"/></operator><name pos:line="205" pos:column="32">accept_mutex<pos:position pos:line="205" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="46">NULL<pos:position pos:line="205" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="52">AP_ACCEPT_MUTEX_TYPE<pos:position pos:line="205" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="74">NULL<pos:position pos:line="205" pos:column="78"/></name></expr></argument>,
                              <argument><expr><name pos:line="206" pos:column="31">s<pos:position pos:line="206" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="34">_pconf<pos:position pos:line="206" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="206" pos:column="42">0<pos:position pos:line="206" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="206" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="45"/></expr_stmt>
    <if pos:line="207" pos:column="5">if <condition pos:line="207" pos:column="8">(<expr><name pos:line="207" pos:column="9">rv<pos:position pos:line="207" pos:column="11"/></name> <operator pos:line="207" pos:column="12">!=<pos:position pos:line="207" pos:column="14"/></operator> <name pos:line="207" pos:column="15">APR_SUCCESS<pos:position pos:line="207" pos:column="26"/></name></expr>)<pos:position pos:line="207" pos:column="27"/></condition><then pos:line="207" pos:column="27"> <block pos:line="207" pos:column="28">{
        <expr_stmt><expr><name pos:line="208" pos:column="9">mpm_state<pos:position pos:line="208" pos:column="18"/></name> <operator pos:line="208" pos:column="19">=<pos:position pos:line="208" pos:column="20"/></operator> <name pos:line="208" pos:column="21">AP_MPMQ_STOPPING<pos:position pos:line="208" pos:column="37"/></name></expr>;<pos:position pos:line="208" pos:column="38"/></expr_stmt>
        <return pos:line="209" pos:column="9">return <expr><name pos:line="209" pos:column="16">DONE<pos:position pos:line="209" pos:column="20"/></name></expr>;<pos:position pos:line="209" pos:column="21"/></return>
    }<pos:position pos:line="210" pos:column="6"/></block></then></if>

    <if pos:line="212" pos:column="5">if <condition pos:line="212" pos:column="8">(<expr><operator pos:line="212" pos:column="9">!<pos:position pos:line="212" pos:column="10"/></operator><name><name pos:line="212" pos:column="10">retained<pos:position pos:line="212" pos:column="18"/></name><operator pos:line="212" pos:column="18">-&gt;<pos:position pos:line="212" pos:column="23"/></operator><name pos:line="212" pos:column="20">is_graceful<pos:position pos:line="212" pos:column="31"/></name></name></expr>)<pos:position pos:line="212" pos:column="32"/></condition><then pos:line="212" pos:column="32"> <block pos:line="212" pos:column="33">{
        <if pos:line="213" pos:column="9">if <condition pos:line="213" pos:column="12">(<expr><call><name pos:line="213" pos:column="13">ap_run_pre_mpm<pos:position pos:line="213" pos:column="27"/></name><argument_list pos:line="213" pos:column="27">(<argument><expr><name><name pos:line="213" pos:column="28">s<pos:position pos:line="213" pos:column="29"/></name><operator pos:line="213" pos:column="29">-&gt;<pos:position pos:line="213" pos:column="34"/></operator><name pos:line="213" pos:column="31">process<pos:position pos:line="213" pos:column="38"/></name><operator pos:line="213" pos:column="38">-&gt;<pos:position pos:line="213" pos:column="43"/></operator><name pos:line="213" pos:column="40">pool<pos:position pos:line="213" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="46">SB_SHARED<pos:position pos:line="213" pos:column="55"/></name></expr></argument>)<pos:position pos:line="213" pos:column="56"/></argument_list></call> <operator pos:line="213" pos:column="57">!=<pos:position pos:line="213" pos:column="59"/></operator> <name pos:line="213" pos:column="60">OK<pos:position pos:line="213" pos:column="62"/></name></expr>)<pos:position pos:line="213" pos:column="63"/></condition><then pos:line="213" pos:column="63"> <block pos:line="213" pos:column="64">{
            <expr_stmt><expr><name pos:line="214" pos:column="13">mpm_state<pos:position pos:line="214" pos:column="22"/></name> <operator pos:line="214" pos:column="23">=<pos:position pos:line="214" pos:column="24"/></operator> <name pos:line="214" pos:column="25">AP_MPMQ_STOPPING<pos:position pos:line="214" pos:column="41"/></name></expr>;<pos:position pos:line="214" pos:column="42"/></expr_stmt>
            <return pos:line="215" pos:column="13">return <expr><name pos:line="215" pos:column="20">DONE<pos:position pos:line="215" pos:column="24"/></name></expr>;<pos:position pos:line="215" pos:column="25"/></return>
        }<pos:position pos:line="216" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="217" pos:column="9">/* fix the generation number in the global score; we just got a new,
         * cleared scoreboard
         */</comment>
        <expr_stmt><expr><name><name pos:line="220" pos:column="9">ap_scoreboard_image<pos:position pos:line="220" pos:column="28"/></name><operator pos:line="220" pos:column="28">-&gt;<pos:position pos:line="220" pos:column="33"/></operator><name pos:line="220" pos:column="30">global<pos:position pos:line="220" pos:column="36"/></name><operator pos:line="220" pos:column="36">-&gt;<pos:position pos:line="220" pos:column="41"/></operator><name pos:line="220" pos:column="38">running_generation<pos:position pos:line="220" pos:column="56"/></name></name> <operator pos:line="220" pos:column="57">=<pos:position pos:line="220" pos:column="58"/></operator> <name><name pos:line="220" pos:column="59">retained<pos:position pos:line="220" pos:column="67"/></name><operator pos:line="220" pos:column="67">-&gt;<pos:position pos:line="220" pos:column="72"/></operator><name pos:line="220" pos:column="69">my_generation<pos:position pos:line="220" pos:column="82"/></name></name></expr>;<pos:position pos:line="220" pos:column="83"/></expr_stmt>
    }<pos:position pos:line="221" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="223" pos:column="5">restart_pending<pos:position pos:line="223" pos:column="20"/></name> <operator pos:line="223" pos:column="21">=<pos:position pos:line="223" pos:column="22"/></operator> <name pos:line="223" pos:column="23">shutdown_pending<pos:position pos:line="223" pos:column="39"/></name> <operator pos:line="223" pos:column="40">=<pos:position pos:line="223" pos:column="41"/></operator> <literal type="number" pos:line="223" pos:column="42">0<pos:position pos:line="223" pos:column="43"/></literal></expr>;<pos:position pos:line="223" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="224" pos:column="5">set_signals<pos:position pos:line="224" pos:column="16"/></name><argument_list pos:line="224" pos:column="16">()<pos:position pos:line="224" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="19"/></expr_stmt>

    <if pos:line="226" pos:column="5">if <condition pos:line="226" pos:column="8">(<expr><name pos:line="226" pos:column="9">one_process<pos:position pos:line="226" pos:column="20"/></name></expr>)<pos:position pos:line="226" pos:column="21"/></condition><then pos:line="226" pos:column="21"> <block pos:line="226" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="227" pos:column="9">AP_MONCONTROL<pos:position pos:line="227" pos:column="22"/></name><argument_list pos:line="227" pos:column="22">(<argument><expr><literal type="number" pos:line="227" pos:column="23">1<pos:position pos:line="227" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="228" pos:column="9">make_child<pos:position pos:line="228" pos:column="19"/></name><argument_list pos:line="228" pos:column="19">(<argument><expr><name pos:line="228" pos:column="20">ap_server_conf<pos:position pos:line="228" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="228" pos:column="36">0<pos:position pos:line="228" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="228" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="39"/></expr_stmt>
        <comment type="block" pos:line="229" pos:column="9">/* NOTREACHED */</comment>
    }<pos:position pos:line="230" pos:column="6"/></block></then>
    <else pos:line="231" pos:column="5">else <block pos:line="231" pos:column="10">{
    <if pos:line="232" pos:column="5">if <condition pos:line="232" pos:column="8">(<expr><name pos:line="232" pos:column="9">ap_daemons_max_free<pos:position pos:line="232" pos:column="28"/></name> <operator pos:line="232" pos:column="29">&lt;<pos:position pos:line="232" pos:column="33"/></operator> <name pos:line="232" pos:column="31">ap_daemons_min_free<pos:position pos:line="232" pos:column="50"/></name> <operator pos:line="232" pos:column="51">+<pos:position pos:line="232" pos:column="52"/></operator> <literal type="number" pos:line="232" pos:column="53">1<pos:position pos:line="232" pos:column="54"/></literal></expr>)<pos:position pos:line="232" pos:column="55"/></condition><then pos:line="232" pos:column="55">  <comment type="block" pos:line="232" pos:column="57">/* Don't thrash... */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="233" pos:column="9">ap_daemons_max_free<pos:position pos:line="233" pos:column="28"/></name> <operator pos:line="233" pos:column="29">=<pos:position pos:line="233" pos:column="30"/></operator> <name pos:line="233" pos:column="31">ap_daemons_min_free<pos:position pos:line="233" pos:column="50"/></name> <operator pos:line="233" pos:column="51">+<pos:position pos:line="233" pos:column="52"/></operator> <literal type="number" pos:line="233" pos:column="53">1<pos:position pos:line="233" pos:column="54"/></literal></expr>;<pos:position pos:line="233" pos:column="55"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="235" pos:column="5">/* If we're doing a graceful_restart then we're going to see a lot
     * of children exiting immediately when we get into the main loop
     * below (because we just sent them AP_SIG_GRACEFUL).  This happens pretty
     * rapidly... and for each one that exits we'll start a new one until
     * we reach at least daemons_min_free.  But we may be permitted to
     * start more than that, so we'll just keep track of how many we're
     * supposed to start up without the 1 second penalty between each fork.
     */</comment>
    <expr_stmt><expr><name pos:line="243" pos:column="5">remaining_children_to_start<pos:position pos:line="243" pos:column="32"/></name> <operator pos:line="243" pos:column="33">=<pos:position pos:line="243" pos:column="34"/></operator> <name pos:line="243" pos:column="35">ap_daemons_to_start<pos:position pos:line="243" pos:column="54"/></name></expr>;<pos:position pos:line="243" pos:column="55"/></expr_stmt>
    <if pos:line="244" pos:column="5">if <condition pos:line="244" pos:column="8">(<expr><name pos:line="244" pos:column="9">remaining_children_to_start<pos:position pos:line="244" pos:column="36"/></name> <operator pos:line="244" pos:column="37">&gt;<pos:position pos:line="244" pos:column="41"/></operator> <name pos:line="244" pos:column="39">ap_daemons_limit<pos:position pos:line="244" pos:column="55"/></name></expr>)<pos:position pos:line="244" pos:column="56"/></condition><then pos:line="244" pos:column="56"> <block pos:line="244" pos:column="57">{
        <expr_stmt><expr><name pos:line="245" pos:column="9">remaining_children_to_start<pos:position pos:line="245" pos:column="36"/></name> <operator pos:line="245" pos:column="37">=<pos:position pos:line="245" pos:column="38"/></operator> <name pos:line="245" pos:column="39">ap_daemons_limit<pos:position pos:line="245" pos:column="55"/></name></expr>;<pos:position pos:line="245" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="246" pos:column="6"/></block></then></if>
    <if pos:line="247" pos:column="5">if <condition pos:line="247" pos:column="8">(<expr><operator pos:line="247" pos:column="9">!<pos:position pos:line="247" pos:column="10"/></operator><name><name pos:line="247" pos:column="10">retained<pos:position pos:line="247" pos:column="18"/></name><operator pos:line="247" pos:column="18">-&gt;<pos:position pos:line="247" pos:column="23"/></operator><name pos:line="247" pos:column="20">is_graceful<pos:position pos:line="247" pos:column="31"/></name></name></expr>)<pos:position pos:line="247" pos:column="32"/></condition><then pos:line="247" pos:column="32"> <block pos:line="247" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="248" pos:column="9">startup_children<pos:position pos:line="248" pos:column="25"/></name><argument_list pos:line="248" pos:column="25">(<argument><expr><name pos:line="248" pos:column="26">remaining_children_to_start<pos:position pos:line="248" pos:column="53"/></name></expr></argument>)<pos:position pos:line="248" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="249" pos:column="9">remaining_children_to_start<pos:position pos:line="249" pos:column="36"/></name> <operator pos:line="249" pos:column="37">=<pos:position pos:line="249" pos:column="38"/></operator> <literal type="number" pos:line="249" pos:column="39">0<pos:position pos:line="249" pos:column="40"/></literal></expr>;<pos:position pos:line="249" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="250" pos:column="6"/></block></then>
    <else pos:line="251" pos:column="5">else <block pos:line="251" pos:column="10">{
        <comment type="block" pos:line="252" pos:column="9">/* give the system some time to recover before kicking into
         * exponential mode
         */</comment>
        <expr_stmt><expr><name><name pos:line="255" pos:column="9">retained<pos:position pos:line="255" pos:column="17"/></name><operator pos:line="255" pos:column="17">-&gt;<pos:position pos:line="255" pos:column="22"/></operator><name pos:line="255" pos:column="19">hold_off_on_exponential_spawning<pos:position pos:line="255" pos:column="51"/></name></name> <operator pos:line="255" pos:column="52">=<pos:position pos:line="255" pos:column="53"/></operator> <literal type="number" pos:line="255" pos:column="54">10<pos:position pos:line="255" pos:column="56"/></literal></expr>;<pos:position pos:line="255" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="256" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="258" pos:column="5">ap_log_error<pos:position pos:line="258" pos:column="17"/></name><argument_list pos:line="258" pos:column="17">(<argument><expr><name pos:line="258" pos:column="18">APLOG_MARK<pos:position pos:line="258" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="258" pos:column="30">APLOG_NOTICE<pos:position pos:line="258" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="258" pos:column="44">0<pos:position pos:line="258" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="258" pos:column="47">ap_server_conf<pos:position pos:line="258" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="258" pos:column="63">APLOGNO<pos:position pos:line="258" pos:column="70"/></name><argument_list pos:line="258" pos:column="70">(<argument><expr><literal type="number" pos:line="258" pos:column="71">00163<pos:position pos:line="258" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="258" pos:column="77"/></argument_list></call>
                <literal type="string" pos:line="259" pos:column="17">"%s configured -- resuming normal operations"<pos:position pos:line="259" pos:column="62"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="260" pos:column="17">ap_get_server_description<pos:position pos:line="260" pos:column="42"/></name><argument_list pos:line="260" pos:column="42">()<pos:position pos:line="260" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="260" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="261" pos:column="5">ap_log_error<pos:position pos:line="261" pos:column="17"/></name><argument_list pos:line="261" pos:column="17">(<argument><expr><name pos:line="261" pos:column="18">APLOG_MARK<pos:position pos:line="261" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="30">APLOG_INFO<pos:position pos:line="261" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="261" pos:column="42">0<pos:position pos:line="261" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="261" pos:column="45">ap_server_conf<pos:position pos:line="261" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="261" pos:column="61">APLOGNO<pos:position pos:line="261" pos:column="68"/></name><argument_list pos:line="261" pos:column="68">(<argument><expr><literal type="number" pos:line="261" pos:column="69">00164<pos:position pos:line="261" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="261" pos:column="75"/></argument_list></call>
                <literal type="string" pos:line="262" pos:column="17">"Server built: %s"<pos:position pos:line="262" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="262" pos:column="37">ap_get_server_built<pos:position pos:line="262" pos:column="56"/></name><argument_list pos:line="262" pos:column="56">()<pos:position pos:line="262" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="262" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="263" pos:column="5">ap_log_command_line<pos:position pos:line="263" pos:column="24"/></name><argument_list pos:line="263" pos:column="24">(<argument><expr><name pos:line="263" pos:column="25">plog<pos:position pos:line="263" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="31">s<pos:position pos:line="263" pos:column="32"/></name></expr></argument>)<pos:position pos:line="263" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="264" pos:column="5">ap_log_error<pos:position pos:line="264" pos:column="17"/></name><argument_list pos:line="264" pos:column="17">(<argument><expr><name pos:line="264" pos:column="18">APLOG_MARK<pos:position pos:line="264" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="30">APLOG_DEBUG<pos:position pos:line="264" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="264" pos:column="43">0<pos:position pos:line="264" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="264" pos:column="46">ap_server_conf<pos:position pos:line="264" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="264" pos:column="62">APLOGNO<pos:position pos:line="264" pos:column="69"/></name><argument_list pos:line="264" pos:column="69">(<argument><expr><literal type="number" pos:line="264" pos:column="70">00165<pos:position pos:line="264" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="264" pos:column="76"/></argument_list></call>
                <literal type="string" pos:line="265" pos:column="17">"Accept mutex: %s (default: %s)"<pos:position pos:line="265" pos:column="49"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="266" pos:column="17">apr_proc_mutex_name<pos:position pos:line="266" pos:column="36"/></name><argument_list pos:line="266" pos:column="36">(<argument><expr><name pos:line="266" pos:column="37">accept_mutex<pos:position pos:line="266" pos:column="49"/></name></expr></argument>)<pos:position pos:line="266" pos:column="50"/></argument_list></call></expr></argument>,
                <argument><expr><call><name pos:line="267" pos:column="17">apr_proc_mutex_defname<pos:position pos:line="267" pos:column="39"/></name><argument_list pos:line="267" pos:column="39">()<pos:position pos:line="267" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="267" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name pos:line="269" pos:column="5">mpm_state<pos:position pos:line="269" pos:column="14"/></name> <operator pos:line="269" pos:column="15">=<pos:position pos:line="269" pos:column="16"/></operator> <name pos:line="269" pos:column="17">AP_MPMQ_RUNNING<pos:position pos:line="269" pos:column="32"/></name></expr>;<pos:position pos:line="269" pos:column="33"/></expr_stmt>

    <while pos:line="271" pos:column="5">while <condition pos:line="271" pos:column="11">(<expr><operator pos:line="271" pos:column="12">!<pos:position pos:line="271" pos:column="13"/></operator><name pos:line="271" pos:column="13">restart_pending<pos:position pos:line="271" pos:column="28"/></name> <operator pos:line="271" pos:column="29">&amp;&amp;<pos:position pos:line="271" pos:column="39"/></operator> <operator pos:line="271" pos:column="32">!<pos:position pos:line="271" pos:column="33"/></operator><name pos:line="271" pos:column="33">shutdown_pending<pos:position pos:line="271" pos:column="49"/></name></expr>)<pos:position pos:line="271" pos:column="50"/></condition> <block pos:line="271" pos:column="51">{
        <decl_stmt><decl><type><name pos:line="272" pos:column="9">int<pos:position pos:line="272" pos:column="12"/></name></type> <name pos:line="272" pos:column="13">child_slot<pos:position pos:line="272" pos:column="23"/></name></decl>;<pos:position pos:line="272" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="273" pos:column="9">apr_exit_why_e<pos:position pos:line="273" pos:column="23"/></name></type> <name pos:line="273" pos:column="24">exitwhy<pos:position pos:line="273" pos:column="31"/></name></decl>;<pos:position pos:line="273" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="274" pos:column="9">int<pos:position pos:line="274" pos:column="12"/></name></type> <name pos:line="274" pos:column="13">status<pos:position pos:line="274" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="274" pos:column="21">processed_status<pos:position pos:line="274" pos:column="37"/></name></decl>;<pos:position pos:line="274" pos:column="38"/></decl_stmt>
        <comment type="block" pos:line="275" pos:column="9">/* this is a memory leak, but I'll fix it later. */</comment>
        <decl_stmt><decl><type><name pos:line="276" pos:column="9">apr_proc_t<pos:position pos:line="276" pos:column="19"/></name></type> <name pos:line="276" pos:column="20">pid<pos:position pos:line="276" pos:column="23"/></name></decl>;<pos:position pos:line="276" pos:column="24"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="278" pos:column="9">ap_wait_or_timeout<pos:position pos:line="278" pos:column="27"/></name><argument_list pos:line="278" pos:column="27">(<argument><expr><operator pos:line="278" pos:column="28">&amp;<pos:position pos:line="278" pos:column="33"/></operator><name pos:line="278" pos:column="29">exitwhy<pos:position pos:line="278" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="278" pos:column="38">&amp;<pos:position pos:line="278" pos:column="43"/></operator><name pos:line="278" pos:column="39">status<pos:position pos:line="278" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="278" pos:column="47">&amp;<pos:position pos:line="278" pos:column="52"/></operator><name pos:line="278" pos:column="48">pid<pos:position pos:line="278" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="53">pconf<pos:position pos:line="278" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="60">ap_server_conf<pos:position pos:line="278" pos:column="74"/></name></expr></argument>)<pos:position pos:line="278" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="76"/></expr_stmt>

        <comment type="block" pos:line="280" pos:column="9">/* XXX: if it takes longer than 1 second for all our children
         * to start up and get into IDLE state then we may spawn an
         * extra child
         */</comment>
        <if pos:line="284" pos:column="9">if <condition pos:line="284" pos:column="12">(<expr><name><name pos:line="284" pos:column="13">pid<pos:position pos:line="284" pos:column="16"/></name><operator pos:line="284" pos:column="16">.<pos:position pos:line="284" pos:column="17"/></operator><name pos:line="284" pos:column="17">pid<pos:position pos:line="284" pos:column="20"/></name></name> <operator pos:line="284" pos:column="21">!=<pos:position pos:line="284" pos:column="23"/></operator> <operator pos:line="284" pos:column="24">-<pos:position pos:line="284" pos:column="25"/></operator><literal type="number" pos:line="284" pos:column="25">1<pos:position pos:line="284" pos:column="26"/></literal></expr>)<pos:position pos:line="284" pos:column="27"/></condition><then pos:line="284" pos:column="27"> <block pos:line="284" pos:column="28">{
            <expr_stmt><expr><name pos:line="285" pos:column="13">processed_status<pos:position pos:line="285" pos:column="29"/></name> <operator pos:line="285" pos:column="30">=<pos:position pos:line="285" pos:column="31"/></operator> <call><name pos:line="285" pos:column="32">ap_process_child_status<pos:position pos:line="285" pos:column="55"/></name><argument_list pos:line="285" pos:column="55">(<argument><expr><operator pos:line="285" pos:column="56">&amp;<pos:position pos:line="285" pos:column="61"/></operator><name pos:line="285" pos:column="57">pid<pos:position pos:line="285" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="62">exitwhy<pos:position pos:line="285" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="71">status<pos:position pos:line="285" pos:column="77"/></name></expr></argument>)<pos:position pos:line="285" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><name pos:line="286" pos:column="13">child_slot<pos:position pos:line="286" pos:column="23"/></name> <operator pos:line="286" pos:column="24">=<pos:position pos:line="286" pos:column="25"/></operator> <call><name pos:line="286" pos:column="26">ap_find_child_by_pid<pos:position pos:line="286" pos:column="46"/></name><argument_list pos:line="286" pos:column="46">(<argument><expr><operator pos:line="286" pos:column="47">&amp;<pos:position pos:line="286" pos:column="52"/></operator><name pos:line="286" pos:column="48">pid<pos:position pos:line="286" pos:column="51"/></name></expr></argument>)<pos:position pos:line="286" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="53"/></expr_stmt>
            <if pos:line="287" pos:column="13">if <condition pos:line="287" pos:column="16">(<expr><name pos:line="287" pos:column="17">processed_status<pos:position pos:line="287" pos:column="33"/></name> <operator pos:line="287" pos:column="34">==<pos:position pos:line="287" pos:column="36"/></operator> <name pos:line="287" pos:column="37">APEXIT_CHILDFATAL<pos:position pos:line="287" pos:column="54"/></name></expr>)<pos:position pos:line="287" pos:column="55"/></condition><then pos:line="287" pos:column="55"> <block pos:line="287" pos:column="56">{
                <comment type="block" pos:line="288" pos:column="17">/* fix race condition found in PR 39311
                 * A child created at the same time as a graceful happens 
                 * can find the lock missing and create a fatal error.
                 * It is not fatal for the last generation to be in this state.
                 */</comment>
                <if pos:line="293" pos:column="17">if <condition pos:line="293" pos:column="20">(<expr><name pos:line="293" pos:column="21">child_slot<pos:position pos:line="293" pos:column="31"/></name> <operator pos:line="293" pos:column="32">&lt;<pos:position pos:line="293" pos:column="36"/></operator> <literal type="number" pos:line="293" pos:column="34">0<pos:position pos:line="293" pos:column="35"/></literal>
                    <operator pos:line="294" pos:column="21">||<pos:position pos:line="294" pos:column="23"/></operator> <call><name pos:line="294" pos:column="24">ap_get_scoreboard_process<pos:position pos:line="294" pos:column="49"/></name><argument_list pos:line="294" pos:column="49">(<argument><expr><name pos:line="294" pos:column="50">child_slot<pos:position pos:line="294" pos:column="60"/></name></expr></argument>)<pos:position pos:line="294" pos:column="61"/></argument_list></call><operator pos:line="294" pos:column="61">-&gt;<pos:position pos:line="294" pos:column="66"/></operator><name pos:line="294" pos:column="63">generation<pos:position pos:line="294" pos:column="73"/></name>
                       <operator pos:line="295" pos:column="24">==<pos:position pos:line="295" pos:column="26"/></operator> <name><name pos:line="295" pos:column="27">retained<pos:position pos:line="295" pos:column="35"/></name><operator pos:line="295" pos:column="35">-&gt;<pos:position pos:line="295" pos:column="40"/></operator><name pos:line="295" pos:column="37">my_generation<pos:position pos:line="295" pos:column="50"/></name></name></expr>)<pos:position pos:line="295" pos:column="51"/></condition><then pos:line="295" pos:column="51"> <block pos:line="295" pos:column="52">{
                    <expr_stmt><expr><name pos:line="296" pos:column="21">mpm_state<pos:position pos:line="296" pos:column="30"/></name> <operator pos:line="296" pos:column="31">=<pos:position pos:line="296" pos:column="32"/></operator> <name pos:line="296" pos:column="33">AP_MPMQ_STOPPING<pos:position pos:line="296" pos:column="49"/></name></expr>;<pos:position pos:line="296" pos:column="50"/></expr_stmt>
                    <return pos:line="297" pos:column="21">return <expr><name pos:line="297" pos:column="28">DONE<pos:position pos:line="297" pos:column="32"/></name></expr>;<pos:position pos:line="297" pos:column="33"/></return>
                }<pos:position pos:line="298" pos:column="18"/></block></then>
                <else pos:line="299" pos:column="17">else <block pos:line="299" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="300" pos:column="21">ap_log_error<pos:position pos:line="300" pos:column="33"/></name><argument_list pos:line="300" pos:column="33">(<argument><expr><name pos:line="300" pos:column="34">APLOG_MARK<pos:position pos:line="300" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="300" pos:column="46">APLOG_WARNING<pos:position pos:line="300" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="300" pos:column="61">0<pos:position pos:line="300" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="300" pos:column="64">ap_server_conf<pos:position pos:line="300" pos:column="78"/></name></expr></argument>, <argument><expr><call><name pos:line="300" pos:column="80">APLOGNO<pos:position pos:line="300" pos:column="87"/></name><argument_list pos:line="300" pos:column="87">(<argument><expr><literal type="number" pos:line="300" pos:column="88">00166<pos:position pos:line="300" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="300" pos:column="94"/></argument_list></call>
                                 <literal type="string" pos:line="301" pos:column="34">"Ignoring fatal error in child of previous "<pos:position pos:line="301" pos:column="78"/></literal>
                                 <literal type="string" pos:line="302" pos:column="34">"generation (pid %ld)."<pos:position pos:line="302" pos:column="57"/></literal></expr></argument>,
                                 <argument><expr><operator pos:line="303" pos:column="34">(<pos:position pos:line="303" pos:column="35"/></operator><name pos:line="303" pos:column="35">long<pos:position pos:line="303" pos:column="39"/></name><operator pos:line="303" pos:column="39">)<pos:position pos:line="303" pos:column="40"/></operator><name><name pos:line="303" pos:column="40">pid<pos:position pos:line="303" pos:column="43"/></name><operator pos:line="303" pos:column="43">.<pos:position pos:line="303" pos:column="44"/></operator><name pos:line="303" pos:column="44">pid<pos:position pos:line="303" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="303" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="49"/></expr_stmt>
                }<pos:position pos:line="304" pos:column="18"/></block></else></if>
            }<pos:position pos:line="305" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="307" pos:column="13">/* non-fatal death... note that it's gone in the scoreboard. */</comment>
            <if pos:line="308" pos:column="13">if <condition pos:line="308" pos:column="16">(<expr><name pos:line="308" pos:column="17">child_slot<pos:position pos:line="308" pos:column="27"/></name> <operator pos:line="308" pos:column="28">&gt;=<pos:position pos:line="308" pos:column="33"/></operator> <literal type="number" pos:line="308" pos:column="31">0<pos:position pos:line="308" pos:column="32"/></literal></expr>)<pos:position pos:line="308" pos:column="33"/></condition><then pos:line="308" pos:column="33"> <block pos:line="308" pos:column="34">{
                <expr_stmt><expr><operator pos:line="309" pos:column="17">(<pos:position pos:line="309" pos:column="18"/></operator><name pos:line="309" pos:column="18">void<pos:position pos:line="309" pos:column="22"/></name><operator pos:line="309" pos:column="22">)<pos:position pos:line="309" pos:column="23"/></operator> <call><name pos:line="309" pos:column="24">ap_update_child_status_from_indexes<pos:position pos:line="309" pos:column="59"/></name><argument_list pos:line="309" pos:column="59">(<argument><expr><name pos:line="309" pos:column="60">child_slot<pos:position pos:line="309" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="309" pos:column="72">0<pos:position pos:line="309" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="309" pos:column="75">SERVER_DEAD<pos:position pos:line="309" pos:column="86"/></name></expr></argument>,
                                                           <argument><expr><operator pos:line="310" pos:column="60">(<pos:position pos:line="310" pos:column="61"/></operator><name pos:line="310" pos:column="61">request_rec<pos:position pos:line="310" pos:column="72"/></name> <operator pos:line="310" pos:column="73">*<pos:position pos:line="310" pos:column="74"/></operator><operator pos:line="310" pos:column="74">)<pos:position pos:line="310" pos:column="75"/></operator> <name pos:line="310" pos:column="76">NULL<pos:position pos:line="310" pos:column="80"/></name></expr></argument>)<pos:position pos:line="310" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="82"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="311" pos:column="17">prefork_note_child_killed<pos:position pos:line="311" pos:column="42"/></name><argument_list pos:line="311" pos:column="42">(<argument><expr><name pos:line="311" pos:column="43">child_slot<pos:position pos:line="311" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="311" pos:column="55">0<pos:position pos:line="311" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="311" pos:column="58">0<pos:position pos:line="311" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="311" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="61"/></expr_stmt>
                <if pos:line="312" pos:column="17">if <condition pos:line="312" pos:column="20">(<expr><name pos:line="312" pos:column="21">processed_status<pos:position pos:line="312" pos:column="37"/></name> <operator pos:line="312" pos:column="38">==<pos:position pos:line="312" pos:column="40"/></operator> <name pos:line="312" pos:column="41">APEXIT_CHILDSICK<pos:position pos:line="312" pos:column="57"/></name></expr>)<pos:position pos:line="312" pos:column="58"/></condition><then pos:line="312" pos:column="58"> <block pos:line="312" pos:column="59">{
                    <comment type="block" pos:line="313" pos:column="21">/* child detected a resource shortage (E[NM]FILE, ENOBUFS, etc)
                     * cut the fork rate to the minimum
                     */</comment>
                    <expr_stmt><expr><name><name pos:line="316" pos:column="21">retained<pos:position pos:line="316" pos:column="29"/></name><operator pos:line="316" pos:column="29">-&gt;<pos:position pos:line="316" pos:column="34"/></operator><name pos:line="316" pos:column="31">idle_spawn_rate<pos:position pos:line="316" pos:column="46"/></name></name> <operator pos:line="316" pos:column="47">=<pos:position pos:line="316" pos:column="48"/></operator> <literal type="number" pos:line="316" pos:column="49">1<pos:position pos:line="316" pos:column="50"/></literal></expr>;<pos:position pos:line="316" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="317" pos:column="18"/></block></then>
                <elseif pos:line="318" pos:column="17">else <if pos:line="318" pos:column="22">if <condition pos:line="318" pos:column="25">(<expr><name pos:line="318" pos:column="26">remaining_children_to_start<pos:position pos:line="318" pos:column="53"/></name>
                    <operator pos:line="319" pos:column="21">&amp;&amp;<pos:position pos:line="319" pos:column="31"/></operator> <name pos:line="319" pos:column="24">child_slot<pos:position pos:line="319" pos:column="34"/></name> <operator pos:line="319" pos:column="35">&lt;<pos:position pos:line="319" pos:column="39"/></operator> <name pos:line="319" pos:column="37">ap_daemons_limit<pos:position pos:line="319" pos:column="53"/></name></expr>)<pos:position pos:line="319" pos:column="54"/></condition><then pos:line="319" pos:column="54"> <block pos:line="319" pos:column="55">{
                    <comment type="block" pos:line="320" pos:column="21">/* we're still doing a 1-for-1 replacement of dead
                     * children with new children
                     */</comment>
                    <expr_stmt><expr><call><name pos:line="323" pos:column="21">make_child<pos:position pos:line="323" pos:column="31"/></name><argument_list pos:line="323" pos:column="31">(<argument><expr><name pos:line="323" pos:column="32">ap_server_conf<pos:position pos:line="323" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="323" pos:column="48">child_slot<pos:position pos:line="323" pos:column="58"/></name></expr></argument>)<pos:position pos:line="323" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="60"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="324" pos:column="21">--<pos:position pos:line="324" pos:column="23"/></operator><name pos:line="324" pos:column="23">remaining_children_to_start<pos:position pos:line="324" pos:column="50"/></name></expr>;<pos:position pos:line="324" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="325" pos:column="18"/></block></then></if></elseif></if>
<cpp:if pos:line="326" pos:column="1">#<cpp:directive pos:line="326" pos:column="2">if<pos:position pos:line="326" pos:column="4"/></cpp:directive> <expr><name pos:line="326" pos:column="5">APR_HAS_OTHER_CHILD<pos:position pos:line="326" pos:column="24"/></name></expr></cpp:if>
            }<pos:position pos:line="327" pos:column="14"/></block></then>
            <elseif pos:line="328" pos:column="13">else <if pos:line="328" pos:column="18">if <condition pos:line="328" pos:column="21">(<expr><call><name pos:line="328" pos:column="22">apr_proc_other_child_alert<pos:position pos:line="328" pos:column="48"/></name><argument_list pos:line="328" pos:column="48">(<argument><expr><operator pos:line="328" pos:column="49">&amp;<pos:position pos:line="328" pos:column="54"/></operator><name pos:line="328" pos:column="50">pid<pos:position pos:line="328" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="55">APR_OC_REASON_DEATH<pos:position pos:line="328" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="76">status<pos:position pos:line="328" pos:column="82"/></name></expr></argument>)<pos:position pos:line="328" pos:column="83"/></argument_list></call> <operator pos:line="328" pos:column="84">==<pos:position pos:line="328" pos:column="86"/></operator> <name pos:line="328" pos:column="87">APR_SUCCESS<pos:position pos:line="328" pos:column="98"/></name></expr>)<pos:position pos:line="328" pos:column="99"/></condition><then pos:line="328" pos:column="99"> <block pos:line="328" pos:column="100">{
                <comment type="block" pos:line="329" pos:column="17">/* handled */</comment>
<cpp:endif pos:line="330" pos:column="1">#<cpp:directive pos:line="330" pos:column="2">endif<pos:position pos:line="330" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="331" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="332" pos:column="13">else <if pos:line="332" pos:column="18">if <condition pos:line="332" pos:column="21">(<expr><name><name pos:line="332" pos:column="22">retained<pos:position pos:line="332" pos:column="30"/></name><operator pos:line="332" pos:column="30">-&gt;<pos:position pos:line="332" pos:column="35"/></operator><name pos:line="332" pos:column="32">is_graceful<pos:position pos:line="332" pos:column="43"/></name></name></expr>)<pos:position pos:line="332" pos:column="44"/></condition><then pos:line="332" pos:column="44"> <block pos:line="332" pos:column="45">{
                <comment type="block" pos:line="333" pos:column="17">/* Great, we've probably just lost a slot in the
                 * scoreboard.  Somehow we don't know about this
                 * child.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="337" pos:column="17">ap_log_error<pos:position pos:line="337" pos:column="29"/></name><argument_list pos:line="337" pos:column="29">(<argument><expr><name pos:line="337" pos:column="30">APLOG_MARK<pos:position pos:line="337" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="337" pos:column="42">APLOG_WARNING<pos:position pos:line="337" pos:column="55"/></name></expr></argument>,
                            <argument><expr><literal type="number" pos:line="338" pos:column="29">0<pos:position pos:line="338" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="338" pos:column="32">ap_server_conf<pos:position pos:line="338" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="338" pos:column="48">APLOGNO<pos:position pos:line="338" pos:column="55"/></name><argument_list pos:line="338" pos:column="55">(<argument><expr><literal type="number" pos:line="338" pos:column="56">00167<pos:position pos:line="338" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="338" pos:column="62"/></argument_list></call>
                            <literal type="string" pos:line="339" pos:column="29">"long lost child came home! (pid %ld)"<pos:position pos:line="339" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="339" pos:column="69">(<pos:position pos:line="339" pos:column="70"/></operator><name pos:line="339" pos:column="70">long<pos:position pos:line="339" pos:column="74"/></name><operator pos:line="339" pos:column="74">)<pos:position pos:line="339" pos:column="75"/></operator><name><name pos:line="339" pos:column="75">pid<pos:position pos:line="339" pos:column="78"/></name><operator pos:line="339" pos:column="78">.<pos:position pos:line="339" pos:column="79"/></operator><name pos:line="339" pos:column="79">pid<pos:position pos:line="339" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="339" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="84"/></expr_stmt>
            }<pos:position pos:line="340" pos:column="14"/></block></then></if></elseif></if>
            <comment type="block" pos:line="341" pos:column="13">/* Don't perform idle maintenance when a child dies,
             * only do it when there's a timeout.  Remember only a
             * finite number of children can die, and it's pretty
             * pathological for a lot to die suddenly.
             */</comment>
            <continue pos:line="346" pos:column="13">continue;<pos:position pos:line="346" pos:column="22"/></continue>
        }<pos:position pos:line="347" pos:column="10"/></block></then>
        <elseif pos:line="348" pos:column="9">else <if pos:line="348" pos:column="14">if <condition pos:line="348" pos:column="17">(<expr><name pos:line="348" pos:column="18">remaining_children_to_start<pos:position pos:line="348" pos:column="45"/></name></expr>)<pos:position pos:line="348" pos:column="46"/></condition><then pos:line="348" pos:column="46"> <block pos:line="348" pos:column="47">{
            <comment type="block" pos:line="349" pos:column="13">/* we hit a 1 second timeout in which none of the previous
             * generation of children needed to be reaped... so assume
             * they're all done, and pick up the slack if any is left.
             */</comment>
            <expr_stmt><expr><call><name pos:line="353" pos:column="13">startup_children<pos:position pos:line="353" pos:column="29"/></name><argument_list pos:line="353" pos:column="29">(<argument><expr><name pos:line="353" pos:column="30">remaining_children_to_start<pos:position pos:line="353" pos:column="57"/></name></expr></argument>)<pos:position pos:line="353" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name pos:line="354" pos:column="13">remaining_children_to_start<pos:position pos:line="354" pos:column="40"/></name> <operator pos:line="354" pos:column="41">=<pos:position pos:line="354" pos:column="42"/></operator> <literal type="number" pos:line="354" pos:column="43">0<pos:position pos:line="354" pos:column="44"/></literal></expr>;<pos:position pos:line="354" pos:column="45"/></expr_stmt>
            <comment type="block" pos:line="355" pos:column="13">/* In any event we really shouldn't do the code below because
             * few of the servers we just started are in the IDLE state
             * yet, so we'd mistakenly create an extra server.
             */</comment>
            <continue pos:line="359" pos:column="13">continue;<pos:position pos:line="359" pos:column="22"/></continue>
        }<pos:position pos:line="360" pos:column="10"/></block></then></if></elseif></if>

        <expr_stmt><expr><call><name pos:line="362" pos:column="9">perform_idle_server_maintenance<pos:position pos:line="362" pos:column="40"/></name><argument_list pos:line="362" pos:column="40">(<argument><expr><name pos:line="362" pos:column="41">pconf<pos:position pos:line="362" pos:column="46"/></name></expr></argument>)<pos:position pos:line="362" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="362" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="363" pos:column="6"/></block></while>
    }<pos:position pos:line="364" pos:column="6"/></block></else></if> <comment type="block" pos:line="364" pos:column="7">/* one_process */</comment>

    <expr_stmt><expr><name pos:line="366" pos:column="5">mpm_state<pos:position pos:line="366" pos:column="14"/></name> <operator pos:line="366" pos:column="15">=<pos:position pos:line="366" pos:column="16"/></operator> <name pos:line="366" pos:column="17">AP_MPMQ_STOPPING<pos:position pos:line="366" pos:column="33"/></name></expr>;<pos:position pos:line="366" pos:column="34"/></expr_stmt>

    <if pos:line="368" pos:column="5">if <condition pos:line="368" pos:column="8">(<expr><name pos:line="368" pos:column="9">shutdown_pending<pos:position pos:line="368" pos:column="25"/></name> <operator pos:line="368" pos:column="26">&amp;&amp;<pos:position pos:line="368" pos:column="36"/></operator> <operator pos:line="368" pos:column="29">!<pos:position pos:line="368" pos:column="30"/></operator><name><name pos:line="368" pos:column="30">retained<pos:position pos:line="368" pos:column="38"/></name><operator pos:line="368" pos:column="38">-&gt;<pos:position pos:line="368" pos:column="43"/></operator><name pos:line="368" pos:column="40">is_graceful<pos:position pos:line="368" pos:column="51"/></name></name></expr>)<pos:position pos:line="368" pos:column="52"/></condition><then pos:line="368" pos:column="52"> <block pos:line="368" pos:column="53">{
        <comment type="block" pos:line="369" pos:column="9">/* Time to shut down:
         * Kill child processes, tell them to call child_exit, etc...
         */</comment>
        <if pos:line="372" pos:column="9">if <condition pos:line="372" pos:column="12">(<expr><call><name pos:line="372" pos:column="13">ap_unixd_killpg<pos:position pos:line="372" pos:column="28"/></name><argument_list pos:line="372" pos:column="28">(<argument><expr><call><name pos:line="372" pos:column="29">getpgrp<pos:position pos:line="372" pos:column="36"/></name><argument_list pos:line="372" pos:column="36">()<pos:position pos:line="372" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="372" pos:column="40">SIGTERM<pos:position pos:line="372" pos:column="47"/></name></expr></argument>)<pos:position pos:line="372" pos:column="48"/></argument_list></call> <operator pos:line="372" pos:column="49">&lt;<pos:position pos:line="372" pos:column="53"/></operator> <literal type="number" pos:line="372" pos:column="51">0<pos:position pos:line="372" pos:column="52"/></literal></expr>)<pos:position pos:line="372" pos:column="53"/></condition><then pos:line="372" pos:column="53"> <block pos:line="372" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="373" pos:column="13">ap_log_error<pos:position pos:line="373" pos:column="25"/></name><argument_list pos:line="373" pos:column="25">(<argument><expr><name pos:line="373" pos:column="26">APLOG_MARK<pos:position pos:line="373" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="373" pos:column="38">APLOG_WARNING<pos:position pos:line="373" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="373" pos:column="53">errno<pos:position pos:line="373" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="373" pos:column="60">ap_server_conf<pos:position pos:line="373" pos:column="74"/></name></expr></argument>, <argument><expr><call><name pos:line="373" pos:column="76">APLOGNO<pos:position pos:line="373" pos:column="83"/></name><argument_list pos:line="373" pos:column="83">(<argument><expr><literal type="number" pos:line="373" pos:column="84">00168<pos:position pos:line="373" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="373" pos:column="90"/></argument_list></call> <literal type="string" pos:line="373" pos:column="91">"killpg SIGTERM"<pos:position pos:line="373" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="373" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="109"/></expr_stmt>
        }<pos:position pos:line="374" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="375" pos:column="9">ap_reclaim_child_processes<pos:position pos:line="375" pos:column="35"/></name><argument_list pos:line="375" pos:column="35">(<argument><expr><literal type="number" pos:line="375" pos:column="36">1<pos:position pos:line="375" pos:column="37"/></literal></expr></argument>, <comment type="block" pos:line="375" pos:column="39">/* Start with SIGTERM */</comment>
                                   <argument><expr><name pos:line="376" pos:column="36">prefork_note_child_killed<pos:position pos:line="376" pos:column="61"/></name></expr></argument>)<pos:position pos:line="376" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="376" pos:column="63"/></expr_stmt>

        <comment type="block" pos:line="378" pos:column="9">/* cleanup pid file on normal shutdown */</comment>
        <expr_stmt><expr><call><name pos:line="379" pos:column="9">ap_remove_pid<pos:position pos:line="379" pos:column="22"/></name><argument_list pos:line="379" pos:column="22">(<argument><expr><name pos:line="379" pos:column="23">pconf<pos:position pos:line="379" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="379" pos:column="30">ap_pid_fname<pos:position pos:line="379" pos:column="42"/></name></expr></argument>)<pos:position pos:line="379" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="379" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="380" pos:column="9">ap_log_error<pos:position pos:line="380" pos:column="21"/></name><argument_list pos:line="380" pos:column="21">(<argument><expr><name pos:line="380" pos:column="22">APLOG_MARK<pos:position pos:line="380" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="380" pos:column="34">APLOG_NOTICE<pos:position pos:line="380" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="380" pos:column="48">0<pos:position pos:line="380" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="380" pos:column="51">ap_server_conf<pos:position pos:line="380" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="380" pos:column="67">APLOGNO<pos:position pos:line="380" pos:column="74"/></name><argument_list pos:line="380" pos:column="74">(<argument><expr><literal type="number" pos:line="380" pos:column="75">00169<pos:position pos:line="380" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="380" pos:column="81"/></argument_list></call>
                    <literal type="string" pos:line="381" pos:column="21">"caught SIGTERM, shutting down"<pos:position pos:line="381" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="381" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="54"/></expr_stmt>

        <return pos:line="383" pos:column="9">return <expr><name pos:line="383" pos:column="16">DONE<pos:position pos:line="383" pos:column="20"/></name></expr>;<pos:position pos:line="383" pos:column="21"/></return>
    }<pos:position pos:line="384" pos:column="6"/></block></then> <elseif pos:line="384" pos:column="7">else <if pos:line="384" pos:column="12">if <condition pos:line="384" pos:column="15">(<expr><name pos:line="384" pos:column="16">shutdown_pending<pos:position pos:line="384" pos:column="32"/></name></expr>)<pos:position pos:line="384" pos:column="33"/></condition><then pos:line="384" pos:column="33"> <block pos:line="384" pos:column="34">{
        <comment type="block" pos:line="385" pos:column="9">/* Time to perform a graceful shut down:
         * Reap the inactive children, and ask the active ones
         * to close their listeners, then wait until they are
         * all done to exit.
         */</comment>
        <decl_stmt><decl><type><name pos:line="390" pos:column="9">int<pos:position pos:line="390" pos:column="12"/></name></type> <name pos:line="390" pos:column="13">active_children<pos:position pos:line="390" pos:column="28"/></name></decl>;<pos:position pos:line="390" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="391" pos:column="9">apr_time_t<pos:position pos:line="391" pos:column="19"/></name></type> <name pos:line="391" pos:column="20">cutoff<pos:position pos:line="391" pos:column="26"/></name> <init pos:line="391" pos:column="27">= <expr><literal type="number" pos:line="391" pos:column="29">0<pos:position pos:line="391" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="391" pos:column="31"/></decl_stmt>

        <comment type="block" pos:line="393" pos:column="9">/* Stop listening */</comment>
        <expr_stmt><expr><call><name pos:line="394" pos:column="9">ap_close_listeners<pos:position pos:line="394" pos:column="27"/></name><argument_list pos:line="394" pos:column="27">()<pos:position pos:line="394" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="394" pos:column="30"/></expr_stmt>

        <comment type="block" pos:line="396" pos:column="9">/* kill off the idle ones */</comment>
        <expr_stmt><expr><call><name pos:line="397" pos:column="9">ap_mpm_pod_killpg<pos:position pos:line="397" pos:column="26"/></name><argument_list pos:line="397" pos:column="26">(<argument><expr><name pos:line="397" pos:column="27">pod<pos:position pos:line="397" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="397" pos:column="32">retained<pos:position pos:line="397" pos:column="40"/></name><operator pos:line="397" pos:column="40">-&gt;<pos:position pos:line="397" pos:column="45"/></operator><name pos:line="397" pos:column="42">max_daemons_limit<pos:position pos:line="397" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="397" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="61"/></expr_stmt>

        <comment type="block" pos:line="399" pos:column="9">/* Send SIGUSR1 to the active children */</comment>
        <expr_stmt><expr><name pos:line="400" pos:column="9">active_children<pos:position pos:line="400" pos:column="24"/></name> <operator pos:line="400" pos:column="25">=<pos:position pos:line="400" pos:column="26"/></operator> <literal type="number" pos:line="400" pos:column="27">0<pos:position pos:line="400" pos:column="28"/></literal></expr>;<pos:position pos:line="400" pos:column="29"/></expr_stmt>
        <for pos:line="401" pos:column="9">for <control pos:line="401" pos:column="13">(<init><expr><name pos:line="401" pos:column="14">index<pos:position pos:line="401" pos:column="19"/></name> <operator pos:line="401" pos:column="20">=<pos:position pos:line="401" pos:column="21"/></operator> <literal type="number" pos:line="401" pos:column="22">0<pos:position pos:line="401" pos:column="23"/></literal></expr>;<pos:position pos:line="401" pos:column="24"/></init> <condition><expr><name pos:line="401" pos:column="25">index<pos:position pos:line="401" pos:column="30"/></name> <operator pos:line="401" pos:column="31">&lt;<pos:position pos:line="401" pos:column="35"/></operator> <name pos:line="401" pos:column="33">ap_daemons_limit<pos:position pos:line="401" pos:column="49"/></name></expr>;<pos:position pos:line="401" pos:column="50"/></condition> <incr><expr><operator pos:line="401" pos:column="51">++<pos:position pos:line="401" pos:column="53"/></operator><name pos:line="401" pos:column="53">index<pos:position pos:line="401" pos:column="58"/></name></expr></incr>)<pos:position pos:line="401" pos:column="59"/></control> <block pos:line="401" pos:column="60">{
            <if pos:line="402" pos:column="13">if <condition pos:line="402" pos:column="16">(<expr><name><name pos:line="402" pos:column="17">ap_scoreboard_image<pos:position pos:line="402" pos:column="36"/></name><operator pos:line="402" pos:column="36">-&gt;<pos:position pos:line="402" pos:column="41"/></operator><name pos:line="402" pos:column="38">servers<pos:position pos:line="402" pos:column="45"/></name><index pos:line="402" pos:column="45">[<expr><name pos:line="402" pos:column="46">index<pos:position pos:line="402" pos:column="51"/></name></expr>]<pos:position pos:line="402" pos:column="52"/></index><index pos:line="402" pos:column="52">[<expr><literal type="number" pos:line="402" pos:column="53">0<pos:position pos:line="402" pos:column="54"/></literal></expr>]<pos:position pos:line="402" pos:column="55"/></index></name><operator pos:line="402" pos:column="55">.<pos:position pos:line="402" pos:column="56"/></operator><name pos:line="402" pos:column="56">status<pos:position pos:line="402" pos:column="62"/></name> <operator pos:line="402" pos:column="63">!=<pos:position pos:line="402" pos:column="65"/></operator> <name pos:line="402" pos:column="66">SERVER_DEAD<pos:position pos:line="402" pos:column="77"/></name></expr>)<pos:position pos:line="402" pos:column="78"/></condition><then pos:line="402" pos:column="78"> <block pos:line="402" pos:column="79">{
                <comment type="block" pos:line="403" pos:column="17">/* Ask each child to close its listeners. */</comment>
                <expr_stmt><expr><call><name pos:line="404" pos:column="17">ap_mpm_safe_kill<pos:position pos:line="404" pos:column="33"/></name><argument_list pos:line="404" pos:column="33">(<argument><expr><call><name pos:line="404" pos:column="34">MPM_CHILD_PID<pos:position pos:line="404" pos:column="47"/></name><argument_list pos:line="404" pos:column="47">(<argument><expr><name pos:line="404" pos:column="48">index<pos:position pos:line="404" pos:column="53"/></name></expr></argument>)<pos:position pos:line="404" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="404" pos:column="56">AP_SIG_GRACEFUL<pos:position pos:line="404" pos:column="71"/></name></expr></argument>)<pos:position pos:line="404" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="404" pos:column="73"/></expr_stmt>
                <expr_stmt><expr><name pos:line="405" pos:column="17">active_children<pos:position pos:line="405" pos:column="32"/></name><operator pos:line="405" pos:column="32">++<pos:position pos:line="405" pos:column="34"/></operator></expr>;<pos:position pos:line="405" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="406" pos:column="14"/></block></then></if>
        }<pos:position pos:line="407" pos:column="10"/></block></for>

        <comment type="block" pos:line="409" pos:column="9">/* Allow each child which actually finished to exit */</comment>
        <expr_stmt><expr><call><name pos:line="410" pos:column="9">ap_relieve_child_processes<pos:position pos:line="410" pos:column="35"/></name><argument_list pos:line="410" pos:column="35">(<argument><expr><name pos:line="410" pos:column="36">prefork_note_child_killed<pos:position pos:line="410" pos:column="61"/></name></expr></argument>)<pos:position pos:line="410" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="410" pos:column="63"/></expr_stmt>

        <comment type="block" pos:line="412" pos:column="9">/* cleanup pid file */</comment>
        <expr_stmt><expr><call><name pos:line="413" pos:column="9">ap_remove_pid<pos:position pos:line="413" pos:column="22"/></name><argument_list pos:line="413" pos:column="22">(<argument><expr><name pos:line="413" pos:column="23">pconf<pos:position pos:line="413" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="413" pos:column="30">ap_pid_fname<pos:position pos:line="413" pos:column="42"/></name></expr></argument>)<pos:position pos:line="413" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="414" pos:column="9">ap_log_error<pos:position pos:line="414" pos:column="21"/></name><argument_list pos:line="414" pos:column="21">(<argument><expr><name pos:line="414" pos:column="22">APLOG_MARK<pos:position pos:line="414" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="414" pos:column="34">APLOG_NOTICE<pos:position pos:line="414" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="414" pos:column="48">0<pos:position pos:line="414" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="414" pos:column="51">ap_server_conf<pos:position pos:line="414" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="414" pos:column="67">APLOGNO<pos:position pos:line="414" pos:column="74"/></name><argument_list pos:line="414" pos:column="74">(<argument><expr><literal type="number" pos:line="414" pos:column="75">00170<pos:position pos:line="414" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="414" pos:column="81"/></argument_list></call>
           <literal type="string" pos:line="415" pos:column="12">"caught "<pos:position pos:line="415" pos:column="21"/></literal> <name pos:line="415" pos:column="22">AP_SIG_GRACEFUL_STOP_STRING<pos:position pos:line="415" pos:column="49"/></name> <literal type="string" pos:line="415" pos:column="50">", shutting down gracefully"<pos:position pos:line="415" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="415" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="415" pos:column="80"/></expr_stmt>

        <if pos:line="417" pos:column="9">if <condition pos:line="417" pos:column="12">(<expr><name pos:line="417" pos:column="13">ap_graceful_shutdown_timeout<pos:position pos:line="417" pos:column="41"/></name></expr>)<pos:position pos:line="417" pos:column="42"/></condition><then pos:line="417" pos:column="42"> <block pos:line="417" pos:column="43">{
            <expr_stmt><expr><name pos:line="418" pos:column="13">cutoff<pos:position pos:line="418" pos:column="19"/></name> <operator pos:line="418" pos:column="20">=<pos:position pos:line="418" pos:column="21"/></operator> <call><name pos:line="418" pos:column="22">apr_time_now<pos:position pos:line="418" pos:column="34"/></name><argument_list pos:line="418" pos:column="34">()<pos:position pos:line="418" pos:column="36"/></argument_list></call> <operator pos:line="418" pos:column="37">+<pos:position pos:line="418" pos:column="38"/></operator>
                     <call><name pos:line="419" pos:column="22">apr_time_from_sec<pos:position pos:line="419" pos:column="39"/></name><argument_list pos:line="419" pos:column="39">(<argument><expr><name pos:line="419" pos:column="40">ap_graceful_shutdown_timeout<pos:position pos:line="419" pos:column="68"/></name></expr></argument>)<pos:position pos:line="419" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="419" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="420" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="422" pos:column="9">/* Don't really exit until each child has finished */</comment>
        <expr_stmt><expr><name pos:line="423" pos:column="9">shutdown_pending<pos:position pos:line="423" pos:column="25"/></name> <operator pos:line="423" pos:column="26">=<pos:position pos:line="423" pos:column="27"/></operator> <literal type="number" pos:line="423" pos:column="28">0<pos:position pos:line="423" pos:column="29"/></literal></expr>;<pos:position pos:line="423" pos:column="30"/></expr_stmt>
        <do pos:line="424" pos:column="9">do <block pos:line="424" pos:column="12">{
            <comment type="block" pos:line="425" pos:column="13">/* Pause for a second */</comment>
            <expr_stmt><expr><call><name pos:line="426" pos:column="13">sleep<pos:position pos:line="426" pos:column="18"/></name><argument_list pos:line="426" pos:column="18">(<argument><expr><literal type="number" pos:line="426" pos:column="19">1<pos:position pos:line="426" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="426" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="426" pos:column="22"/></expr_stmt>

            <comment type="block" pos:line="428" pos:column="13">/* Relieve any children which have now exited */</comment>
            <expr_stmt><expr><call><name pos:line="429" pos:column="13">ap_relieve_child_processes<pos:position pos:line="429" pos:column="39"/></name><argument_list pos:line="429" pos:column="39">(<argument><expr><name pos:line="429" pos:column="40">prefork_note_child_killed<pos:position pos:line="429" pos:column="65"/></name></expr></argument>)<pos:position pos:line="429" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="429" pos:column="67"/></expr_stmt>

            <expr_stmt><expr><name pos:line="431" pos:column="13">active_children<pos:position pos:line="431" pos:column="28"/></name> <operator pos:line="431" pos:column="29">=<pos:position pos:line="431" pos:column="30"/></operator> <literal type="number" pos:line="431" pos:column="31">0<pos:position pos:line="431" pos:column="32"/></literal></expr>;<pos:position pos:line="431" pos:column="33"/></expr_stmt>
            <for pos:line="432" pos:column="13">for <control pos:line="432" pos:column="17">(<init><expr><name pos:line="432" pos:column="18">index<pos:position pos:line="432" pos:column="23"/></name> <operator pos:line="432" pos:column="24">=<pos:position pos:line="432" pos:column="25"/></operator> <literal type="number" pos:line="432" pos:column="26">0<pos:position pos:line="432" pos:column="27"/></literal></expr>;<pos:position pos:line="432" pos:column="28"/></init> <condition><expr><name pos:line="432" pos:column="29">index<pos:position pos:line="432" pos:column="34"/></name> <operator pos:line="432" pos:column="35">&lt;<pos:position pos:line="432" pos:column="39"/></operator> <name pos:line="432" pos:column="37">ap_daemons_limit<pos:position pos:line="432" pos:column="53"/></name></expr>;<pos:position pos:line="432" pos:column="54"/></condition> <incr><expr><operator pos:line="432" pos:column="55">++<pos:position pos:line="432" pos:column="57"/></operator><name pos:line="432" pos:column="57">index<pos:position pos:line="432" pos:column="62"/></name></expr></incr>)<pos:position pos:line="432" pos:column="63"/></control> <block pos:line="432" pos:column="64">{
                <if pos:line="433" pos:column="17">if <condition pos:line="433" pos:column="20">(<expr><call><name pos:line="433" pos:column="21">ap_mpm_safe_kill<pos:position pos:line="433" pos:column="37"/></name><argument_list pos:line="433" pos:column="37">(<argument><expr><call><name pos:line="433" pos:column="38">MPM_CHILD_PID<pos:position pos:line="433" pos:column="51"/></name><argument_list pos:line="433" pos:column="51">(<argument><expr><name pos:line="433" pos:column="52">index<pos:position pos:line="433" pos:column="57"/></name></expr></argument>)<pos:position pos:line="433" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="433" pos:column="60">0<pos:position pos:line="433" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="433" pos:column="62"/></argument_list></call> <operator pos:line="433" pos:column="63">==<pos:position pos:line="433" pos:column="65"/></operator> <name pos:line="433" pos:column="66">APR_SUCCESS<pos:position pos:line="433" pos:column="77"/></name></expr>)<pos:position pos:line="433" pos:column="78"/></condition><then pos:line="433" pos:column="78"> <block pos:line="433" pos:column="79">{
                    <expr_stmt><expr><name pos:line="434" pos:column="21">active_children<pos:position pos:line="434" pos:column="36"/></name> <operator pos:line="434" pos:column="37">=<pos:position pos:line="434" pos:column="38"/></operator> <literal type="number" pos:line="434" pos:column="39">1<pos:position pos:line="434" pos:column="40"/></literal></expr>;<pos:position pos:line="434" pos:column="41"/></expr_stmt>
                    <comment type="block" pos:line="435" pos:column="21">/* Having just one child is enough to stay around */</comment>
                    <break pos:line="436" pos:column="21">break;<pos:position pos:line="436" pos:column="27"/></break>
                }<pos:position pos:line="437" pos:column="18"/></block></then></if>
            }<pos:position pos:line="438" pos:column="14"/></block></for>
        }<pos:position pos:line="439" pos:column="10"/></block> while <condition pos:line="439" pos:column="17">(<expr><operator pos:line="439" pos:column="18">!<pos:position pos:line="439" pos:column="19"/></operator><name pos:line="439" pos:column="19">shutdown_pending<pos:position pos:line="439" pos:column="35"/></name> <operator pos:line="439" pos:column="36">&amp;&amp;<pos:position pos:line="439" pos:column="46"/></operator> <name pos:line="439" pos:column="39">active_children<pos:position pos:line="439" pos:column="54"/></name> <operator pos:line="439" pos:column="55">&amp;&amp;<pos:position pos:line="439" pos:column="65"/></operator>
                 <operator pos:line="440" pos:column="18">(<pos:position pos:line="440" pos:column="19"/></operator><operator pos:line="440" pos:column="19">!<pos:position pos:line="440" pos:column="20"/></operator><name pos:line="440" pos:column="20">ap_graceful_shutdown_timeout<pos:position pos:line="440" pos:column="48"/></name> <operator pos:line="440" pos:column="49">||<pos:position pos:line="440" pos:column="51"/></operator> <call><name pos:line="440" pos:column="52">apr_time_now<pos:position pos:line="440" pos:column="64"/></name><argument_list pos:line="440" pos:column="64">()<pos:position pos:line="440" pos:column="66"/></argument_list></call> <operator pos:line="440" pos:column="67">&lt;<pos:position pos:line="440" pos:column="71"/></operator> <name pos:line="440" pos:column="69">cutoff<pos:position pos:line="440" pos:column="75"/></name><operator pos:line="440" pos:column="75">)<pos:position pos:line="440" pos:column="76"/></operator></expr>)<pos:position pos:line="440" pos:column="77"/></condition>;<pos:position pos:line="440" pos:column="78"/></do>

        <comment type="block" pos:line="442" pos:column="9">/* We might be here because we received SIGTERM, either
         * way, try and make sure that all of our processes are
         * really dead.
         */</comment>
        <expr_stmt><expr><call><name pos:line="446" pos:column="9">ap_unixd_killpg<pos:position pos:line="446" pos:column="24"/></name><argument_list pos:line="446" pos:column="24">(<argument><expr><call><name pos:line="446" pos:column="25">getpgrp<pos:position pos:line="446" pos:column="32"/></name><argument_list pos:line="446" pos:column="32">()<pos:position pos:line="446" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="446" pos:column="36">SIGTERM<pos:position pos:line="446" pos:column="43"/></name></expr></argument>)<pos:position pos:line="446" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="45"/></expr_stmt>

        <return pos:line="448" pos:column="9">return <expr><name pos:line="448" pos:column="16">DONE<pos:position pos:line="448" pos:column="20"/></name></expr>;<pos:position pos:line="448" pos:column="21"/></return>
    }<pos:position pos:line="449" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="451" pos:column="5">/* we've been told to restart */</comment>
    <expr_stmt><expr><call><name pos:line="452" pos:column="5">apr_signal<pos:position pos:line="452" pos:column="15"/></name><argument_list pos:line="452" pos:column="15">(<argument><expr><name pos:line="452" pos:column="16">SIGHUP<pos:position pos:line="452" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="452" pos:column="24">SIG_IGN<pos:position pos:line="452" pos:column="31"/></name></expr></argument>)<pos:position pos:line="452" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="453" pos:column="5">apr_signal<pos:position pos:line="453" pos:column="15"/></name><argument_list pos:line="453" pos:column="15">(<argument><expr><name pos:line="453" pos:column="16">AP_SIG_GRACEFUL<pos:position pos:line="453" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="453" pos:column="33">SIG_IGN<pos:position pos:line="453" pos:column="40"/></name></expr></argument>)<pos:position pos:line="453" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="453" pos:column="42"/></expr_stmt>
    <if pos:line="454" pos:column="5">if <condition pos:line="454" pos:column="8">(<expr><name pos:line="454" pos:column="9">one_process<pos:position pos:line="454" pos:column="20"/></name></expr>)<pos:position pos:line="454" pos:column="21"/></condition><then pos:line="454" pos:column="21"> <block pos:line="454" pos:column="22">{
        <comment type="block" pos:line="455" pos:column="9">/* not worth thinking about */</comment>
        <return pos:line="456" pos:column="9">return <expr><name pos:line="456" pos:column="16">DONE<pos:position pos:line="456" pos:column="20"/></name></expr>;<pos:position pos:line="456" pos:column="21"/></return>
    }<pos:position pos:line="457" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="459" pos:column="5">/* advance to the next generation */</comment>
    <comment type="block" pos:line="460" pos:column="5">/* XXX: we really need to make sure this new generation number isn't in
     * use by any of the children.
     */</comment>
    <expr_stmt><expr><operator pos:line="463" pos:column="5">++<pos:position pos:line="463" pos:column="7"/></operator><name><name pos:line="463" pos:column="7">retained<pos:position pos:line="463" pos:column="15"/></name><operator pos:line="463" pos:column="15">-&gt;<pos:position pos:line="463" pos:column="20"/></operator><name pos:line="463" pos:column="17">my_generation<pos:position pos:line="463" pos:column="30"/></name></name></expr>;<pos:position pos:line="463" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="464" pos:column="5">ap_scoreboard_image<pos:position pos:line="464" pos:column="24"/></name><operator pos:line="464" pos:column="24">-&gt;<pos:position pos:line="464" pos:column="29"/></operator><name pos:line="464" pos:column="26">global<pos:position pos:line="464" pos:column="32"/></name><operator pos:line="464" pos:column="32">-&gt;<pos:position pos:line="464" pos:column="37"/></operator><name pos:line="464" pos:column="34">running_generation<pos:position pos:line="464" pos:column="52"/></name></name> <operator pos:line="464" pos:column="53">=<pos:position pos:line="464" pos:column="54"/></operator> <name><name pos:line="464" pos:column="55">retained<pos:position pos:line="464" pos:column="63"/></name><operator pos:line="464" pos:column="63">-&gt;<pos:position pos:line="464" pos:column="68"/></operator><name pos:line="464" pos:column="65">my_generation<pos:position pos:line="464" pos:column="78"/></name></name></expr>;<pos:position pos:line="464" pos:column="79"/></expr_stmt>

    <if pos:line="466" pos:column="5">if <condition pos:line="466" pos:column="8">(<expr><name><name pos:line="466" pos:column="9">retained<pos:position pos:line="466" pos:column="17"/></name><operator pos:line="466" pos:column="17">-&gt;<pos:position pos:line="466" pos:column="22"/></operator><name pos:line="466" pos:column="19">is_graceful<pos:position pos:line="466" pos:column="30"/></name></name></expr>)<pos:position pos:line="466" pos:column="31"/></condition><then pos:line="466" pos:column="31"> <block pos:line="466" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="467" pos:column="9">ap_log_error<pos:position pos:line="467" pos:column="21"/></name><argument_list pos:line="467" pos:column="21">(<argument><expr><name pos:line="467" pos:column="22">APLOG_MARK<pos:position pos:line="467" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="467" pos:column="34">APLOG_NOTICE<pos:position pos:line="467" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="467" pos:column="48">0<pos:position pos:line="467" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="467" pos:column="51">ap_server_conf<pos:position pos:line="467" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="467" pos:column="67">APLOGNO<pos:position pos:line="467" pos:column="74"/></name><argument_list pos:line="467" pos:column="74">(<argument><expr><literal type="number" pos:line="467" pos:column="75">00171<pos:position pos:line="467" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="467" pos:column="81"/></argument_list></call>
                    <literal type="string" pos:line="468" pos:column="21">"Graceful restart requested, doing restart"<pos:position pos:line="468" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="468" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="468" pos:column="66"/></expr_stmt>

        <comment type="block" pos:line="470" pos:column="9">/* kill off the idle ones */</comment>
        <expr_stmt><expr><call><name pos:line="471" pos:column="9">ap_mpm_pod_killpg<pos:position pos:line="471" pos:column="26"/></name><argument_list pos:line="471" pos:column="26">(<argument><expr><name pos:line="471" pos:column="27">pod<pos:position pos:line="471" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="471" pos:column="32">retained<pos:position pos:line="471" pos:column="40"/></name><operator pos:line="471" pos:column="40">-&gt;<pos:position pos:line="471" pos:column="45"/></operator><name pos:line="471" pos:column="42">max_daemons_limit<pos:position pos:line="471" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="471" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="471" pos:column="61"/></expr_stmt>

        <comment type="block" pos:line="473" pos:column="9">/* This is mostly for debugging... so that we know what is still
         * gracefully dealing with existing request.  This will break
         * in a very nasty way if we ever have the scoreboard totally
         * file-based (no shared memory)
         */</comment>
        <for pos:line="478" pos:column="9">for <control pos:line="478" pos:column="13">(<init><expr><name pos:line="478" pos:column="14">index<pos:position pos:line="478" pos:column="19"/></name> <operator pos:line="478" pos:column="20">=<pos:position pos:line="478" pos:column="21"/></operator> <literal type="number" pos:line="478" pos:column="22">0<pos:position pos:line="478" pos:column="23"/></literal></expr>;<pos:position pos:line="478" pos:column="24"/></init> <condition><expr><name pos:line="478" pos:column="25">index<pos:position pos:line="478" pos:column="30"/></name> <operator pos:line="478" pos:column="31">&lt;<pos:position pos:line="478" pos:column="35"/></operator> <name pos:line="478" pos:column="33">ap_daemons_limit<pos:position pos:line="478" pos:column="49"/></name></expr>;<pos:position pos:line="478" pos:column="50"/></condition> <incr><expr><operator pos:line="478" pos:column="51">++<pos:position pos:line="478" pos:column="53"/></operator><name pos:line="478" pos:column="53">index<pos:position pos:line="478" pos:column="58"/></name></expr></incr>)<pos:position pos:line="478" pos:column="59"/></control> <block pos:line="478" pos:column="60">{
            <if pos:line="479" pos:column="13">if <condition pos:line="479" pos:column="16">(<expr><name><name pos:line="479" pos:column="17">ap_scoreboard_image<pos:position pos:line="479" pos:column="36"/></name><operator pos:line="479" pos:column="36">-&gt;<pos:position pos:line="479" pos:column="41"/></operator><name pos:line="479" pos:column="38">servers<pos:position pos:line="479" pos:column="45"/></name><index pos:line="479" pos:column="45">[<expr><name pos:line="479" pos:column="46">index<pos:position pos:line="479" pos:column="51"/></name></expr>]<pos:position pos:line="479" pos:column="52"/></index><index pos:line="479" pos:column="52">[<expr><literal type="number" pos:line="479" pos:column="53">0<pos:position pos:line="479" pos:column="54"/></literal></expr>]<pos:position pos:line="479" pos:column="55"/></index></name><operator pos:line="479" pos:column="55">.<pos:position pos:line="479" pos:column="56"/></operator><name pos:line="479" pos:column="56">status<pos:position pos:line="479" pos:column="62"/></name> <operator pos:line="479" pos:column="63">!=<pos:position pos:line="479" pos:column="65"/></operator> <name pos:line="479" pos:column="66">SERVER_DEAD<pos:position pos:line="479" pos:column="77"/></name></expr>)<pos:position pos:line="479" pos:column="78"/></condition><then pos:line="479" pos:column="78"> <block pos:line="479" pos:column="79">{
                <expr_stmt><expr><name><name pos:line="480" pos:column="17">ap_scoreboard_image<pos:position pos:line="480" pos:column="36"/></name><operator pos:line="480" pos:column="36">-&gt;<pos:position pos:line="480" pos:column="41"/></operator><name pos:line="480" pos:column="38">servers<pos:position pos:line="480" pos:column="45"/></name><index pos:line="480" pos:column="45">[<expr><name pos:line="480" pos:column="46">index<pos:position pos:line="480" pos:column="51"/></name></expr>]<pos:position pos:line="480" pos:column="52"/></index><index pos:line="480" pos:column="52">[<expr><literal type="number" pos:line="480" pos:column="53">0<pos:position pos:line="480" pos:column="54"/></literal></expr>]<pos:position pos:line="480" pos:column="55"/></index></name><operator pos:line="480" pos:column="55">.<pos:position pos:line="480" pos:column="56"/></operator><name pos:line="480" pos:column="56">status<pos:position pos:line="480" pos:column="62"/></name> <operator pos:line="480" pos:column="63">=<pos:position pos:line="480" pos:column="64"/></operator> <name pos:line="480" pos:column="65">SERVER_GRACEFUL<pos:position pos:line="480" pos:column="80"/></name></expr>;<pos:position pos:line="480" pos:column="81"/></expr_stmt>
                <comment type="block" pos:line="481" pos:column="17">/* Ask each child to close its listeners.
                 *
                 * NOTE: we use the scoreboard, because if we send SIGUSR1
                 * to every process in the group, this may include CGI's,
                 * piped loggers, etc. They almost certainly won't handle
                 * it gracefully.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="488" pos:column="17">ap_mpm_safe_kill<pos:position pos:line="488" pos:column="33"/></name><argument_list pos:line="488" pos:column="33">(<argument><expr><name><name pos:line="488" pos:column="34">ap_scoreboard_image<pos:position pos:line="488" pos:column="53"/></name><operator pos:line="488" pos:column="53">-&gt;<pos:position pos:line="488" pos:column="58"/></operator><name pos:line="488" pos:column="55">parent<pos:position pos:line="488" pos:column="61"/></name><index pos:line="488" pos:column="61">[<expr><name pos:line="488" pos:column="62">index<pos:position pos:line="488" pos:column="67"/></name></expr>]<pos:position pos:line="488" pos:column="68"/></index></name><operator pos:line="488" pos:column="68">.<pos:position pos:line="488" pos:column="69"/></operator><name pos:line="488" pos:column="69">pid<pos:position pos:line="488" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="488" pos:column="74">AP_SIG_GRACEFUL<pos:position pos:line="488" pos:column="89"/></name></expr></argument>)<pos:position pos:line="488" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="488" pos:column="91"/></expr_stmt>
            }<pos:position pos:line="489" pos:column="14"/></block></then></if>
        }<pos:position pos:line="490" pos:column="10"/></block></for>
    }<pos:position pos:line="491" pos:column="6"/></block></then>
    <else pos:line="492" pos:column="5">else <block pos:line="492" pos:column="10">{
        <comment type="block" pos:line="493" pos:column="9">/* Kill 'em off */</comment>
        <if pos:line="494" pos:column="9">if <condition pos:line="494" pos:column="12">(<expr><call><name pos:line="494" pos:column="13">ap_unixd_killpg<pos:position pos:line="494" pos:column="28"/></name><argument_list pos:line="494" pos:column="28">(<argument><expr><call><name pos:line="494" pos:column="29">getpgrp<pos:position pos:line="494" pos:column="36"/></name><argument_list pos:line="494" pos:column="36">()<pos:position pos:line="494" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="494" pos:column="40">SIGHUP<pos:position pos:line="494" pos:column="46"/></name></expr></argument>)<pos:position pos:line="494" pos:column="47"/></argument_list></call> <operator pos:line="494" pos:column="48">&lt;<pos:position pos:line="494" pos:column="52"/></operator> <literal type="number" pos:line="494" pos:column="50">0<pos:position pos:line="494" pos:column="51"/></literal></expr>)<pos:position pos:line="494" pos:column="52"/></condition><then pos:line="494" pos:column="52"> <block pos:line="494" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="495" pos:column="13">ap_log_error<pos:position pos:line="495" pos:column="25"/></name><argument_list pos:line="495" pos:column="25">(<argument><expr><name pos:line="495" pos:column="26">APLOG_MARK<pos:position pos:line="495" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="495" pos:column="38">APLOG_WARNING<pos:position pos:line="495" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="495" pos:column="53">errno<pos:position pos:line="495" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="495" pos:column="60">ap_server_conf<pos:position pos:line="495" pos:column="74"/></name></expr></argument>, <argument><expr><call><name pos:line="495" pos:column="76">APLOGNO<pos:position pos:line="495" pos:column="83"/></name><argument_list pos:line="495" pos:column="83">(<argument><expr><literal type="number" pos:line="495" pos:column="84">00172<pos:position pos:line="495" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="495" pos:column="90"/></argument_list></call> <literal type="string" pos:line="495" pos:column="91">"killpg SIGHUP"<pos:position pos:line="495" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="495" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="495" pos:column="108"/></expr_stmt>
        }<pos:position pos:line="496" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="497" pos:column="9">ap_reclaim_child_processes<pos:position pos:line="497" pos:column="35"/></name><argument_list pos:line="497" pos:column="35">(<argument><expr><literal type="number" pos:line="497" pos:column="36">0<pos:position pos:line="497" pos:column="37"/></literal></expr></argument>, <comment type="block" pos:line="497" pos:column="39">/* Not when just starting up */</comment>
                                   <argument><expr><name pos:line="498" pos:column="36">prefork_note_child_killed<pos:position pos:line="498" pos:column="61"/></name></expr></argument>)<pos:position pos:line="498" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="498" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="499" pos:column="9">ap_log_error<pos:position pos:line="499" pos:column="21"/></name><argument_list pos:line="499" pos:column="21">(<argument><expr><name pos:line="499" pos:column="22">APLOG_MARK<pos:position pos:line="499" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="499" pos:column="34">APLOG_NOTICE<pos:position pos:line="499" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="499" pos:column="48">0<pos:position pos:line="499" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="499" pos:column="51">ap_server_conf<pos:position pos:line="499" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="499" pos:column="67">APLOGNO<pos:position pos:line="499" pos:column="74"/></name><argument_list pos:line="499" pos:column="74">(<argument><expr><literal type="number" pos:line="499" pos:column="75">00173<pos:position pos:line="499" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="499" pos:column="81"/></argument_list></call>
                    <literal type="string" pos:line="500" pos:column="21">"SIGHUP received.  Attempting to restart"<pos:position pos:line="500" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="500" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="500" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="501" pos:column="6"/></block></else></if>

    <return pos:line="503" pos:column="5">return <expr><name pos:line="503" pos:column="12">OK<pos:position pos:line="503" pos:column="14"/></name></expr>;<pos:position pos:line="503" pos:column="15"/></return>
}<pos:position pos:line="504" pos:column="2"/></block></function>

<comment type="block" pos:line="506" pos:column="1">/* This really should be a post_config hook, but the error log is already
 * redirected by that point, so we need to do this in the open_logs phase.
 */</comment>
<function><specifier pos:line="509" pos:column="1">static<pos:position pos:line="509" pos:column="7"/></specifier> <type><name pos:line="509" pos:column="8">int<pos:position pos:line="509" pos:column="11"/></name></type> <name pos:line="509" pos:column="12">prefork_open_logs<pos:position pos:line="509" pos:column="29"/></name><parameter_list pos:line="509" pos:column="29">(<parameter><decl><type><name pos:line="509" pos:column="30">apr_pool_t<pos:position pos:line="509" pos:column="40"/></name> <modifier pos:line="509" pos:column="41">*<pos:position pos:line="509" pos:column="42"/></modifier></type><name pos:line="509" pos:column="42">p<pos:position pos:line="509" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="509" pos:column="45">apr_pool_t<pos:position pos:line="509" pos:column="55"/></name> <modifier pos:line="509" pos:column="56">*<pos:position pos:line="509" pos:column="57"/></modifier></type><name pos:line="509" pos:column="57">plog<pos:position pos:line="509" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="509" pos:column="63">apr_pool_t<pos:position pos:line="509" pos:column="73"/></name> <modifier pos:line="509" pos:column="74">*<pos:position pos:line="509" pos:column="75"/></modifier></type><name pos:line="509" pos:column="75">ptemp<pos:position pos:line="509" pos:column="80"/></name></decl></parameter>, <parameter><decl><type><name pos:line="509" pos:column="82">server_rec<pos:position pos:line="509" pos:column="92"/></name> <modifier pos:line="509" pos:column="93">*<pos:position pos:line="509" pos:column="94"/></modifier></type><name pos:line="509" pos:column="94">s<pos:position pos:line="509" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="509" pos:column="96"/></parameter_list>
<block pos:line="510" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="511" pos:column="5">int<pos:position pos:line="511" pos:column="8"/></name></type> <name pos:line="511" pos:column="9">startup<pos:position pos:line="511" pos:column="16"/></name> <init pos:line="511" pos:column="17">= <expr><literal type="number" pos:line="511" pos:column="19">0<pos:position pos:line="511" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="511" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="512" pos:column="5">int<pos:position pos:line="512" pos:column="8"/></name></type> <name pos:line="512" pos:column="9">level_flags<pos:position pos:line="512" pos:column="20"/></name> <init pos:line="512" pos:column="21">= <expr><literal type="number" pos:line="512" pos:column="23">0<pos:position pos:line="512" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="512" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="513" pos:column="5">apr_status_t<pos:position pos:line="513" pos:column="17"/></name></type> <name pos:line="513" pos:column="18">rv<pos:position pos:line="513" pos:column="20"/></name></decl>;<pos:position pos:line="513" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="515" pos:column="5">pconf<pos:position pos:line="515" pos:column="10"/></name> <operator pos:line="515" pos:column="11">=<pos:position pos:line="515" pos:column="12"/></operator> <name pos:line="515" pos:column="13">p<pos:position pos:line="515" pos:column="14"/></name></expr>;<pos:position pos:line="515" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="517" pos:column="5">/* the reverse of pre_config, we want this only the first time around */</comment>
    <if pos:line="518" pos:column="5">if <condition pos:line="518" pos:column="8">(<expr><name><name pos:line="518" pos:column="9">retained<pos:position pos:line="518" pos:column="17"/></name><operator pos:line="518" pos:column="17">-&gt;<pos:position pos:line="518" pos:column="22"/></operator><name pos:line="518" pos:column="19">module_loads<pos:position pos:line="518" pos:column="31"/></name></name> <operator pos:line="518" pos:column="32">==<pos:position pos:line="518" pos:column="34"/></operator> <literal type="number" pos:line="518" pos:column="35">1<pos:position pos:line="518" pos:column="36"/></literal></expr>)<pos:position pos:line="518" pos:column="37"/></condition><then pos:line="518" pos:column="37"> <block pos:line="518" pos:column="38">{
        <expr_stmt><expr><name pos:line="519" pos:column="9">startup<pos:position pos:line="519" pos:column="16"/></name> <operator pos:line="519" pos:column="17">=<pos:position pos:line="519" pos:column="18"/></operator> <literal type="number" pos:line="519" pos:column="19">1<pos:position pos:line="519" pos:column="20"/></literal></expr>;<pos:position pos:line="519" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="520" pos:column="9">level_flags<pos:position pos:line="520" pos:column="20"/></name> <operator pos:line="520" pos:column="21">|=<pos:position pos:line="520" pos:column="23"/></operator> <name pos:line="520" pos:column="24">APLOG_STARTUP<pos:position pos:line="520" pos:column="37"/></name></expr>;<pos:position pos:line="520" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="521" pos:column="6"/></block></then></if>

    <if pos:line="523" pos:column="5">if <condition pos:line="523" pos:column="8">(<expr><operator pos:line="523" pos:column="9">(<pos:position pos:line="523" pos:column="10"/></operator><name pos:line="523" pos:column="10">num_listensocks<pos:position pos:line="523" pos:column="25"/></name> <operator pos:line="523" pos:column="26">=<pos:position pos:line="523" pos:column="27"/></operator> <call><name pos:line="523" pos:column="28">ap_setup_listeners<pos:position pos:line="523" pos:column="46"/></name><argument_list pos:line="523" pos:column="46">(<argument><expr><name pos:line="523" pos:column="47">ap_server_conf<pos:position pos:line="523" pos:column="61"/></name></expr></argument>)<pos:position pos:line="523" pos:column="62"/></argument_list></call><operator pos:line="523" pos:column="62">)<pos:position pos:line="523" pos:column="63"/></operator> <operator pos:line="523" pos:column="64">&lt;<pos:position pos:line="523" pos:column="68"/></operator> <literal type="number" pos:line="523" pos:column="66">1<pos:position pos:line="523" pos:column="67"/></literal></expr>)<pos:position pos:line="523" pos:column="68"/></condition><then pos:line="523" pos:column="68"> <block pos:line="523" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="524" pos:column="9">ap_log_error<pos:position pos:line="524" pos:column="21"/></name><argument_list pos:line="524" pos:column="21">(<argument><expr><name pos:line="524" pos:column="22">APLOG_MARK<pos:position pos:line="524" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="524" pos:column="34">APLOG_ALERT<pos:position pos:line="524" pos:column="45"/></name> <operator pos:line="524" pos:column="46">|<pos:position pos:line="524" pos:column="47"/></operator> <name pos:line="524" pos:column="48">level_flags<pos:position pos:line="524" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="524" pos:column="61">0<pos:position pos:line="524" pos:column="62"/></literal></expr></argument>,
                     <argument><expr><operator pos:line="525" pos:column="22">(<pos:position pos:line="525" pos:column="23"/></operator><ternary><condition><expr><name pos:line="525" pos:column="23">startup<pos:position pos:line="525" pos:column="30"/></name></expr> ?<pos:position pos:line="525" pos:column="32"/></condition><then pos:line="525" pos:column="32"> <expr><name pos:line="525" pos:column="33">NULL<pos:position pos:line="525" pos:column="37"/></name></expr> <pos:position pos:line="525" pos:column="38"/></then><else pos:line="525" pos:column="38">: <expr><name pos:line="525" pos:column="40">s<pos:position pos:line="525" pos:column="41"/></name></expr></else></ternary><operator pos:line="525" pos:column="41">)<pos:position pos:line="525" pos:column="42"/></operator></expr></argument>,
                     <argument><expr><literal type="string" pos:line="526" pos:column="22">"no listening sockets available, shutting down"<pos:position pos:line="526" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="526" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="526" pos:column="71"/></expr_stmt>
        <return pos:line="527" pos:column="9">return <expr><name pos:line="527" pos:column="16">DONE<pos:position pos:line="527" pos:column="20"/></name></expr>;<pos:position pos:line="527" pos:column="21"/></return>
    }<pos:position pos:line="528" pos:column="6"/></block></then></if>

    <if pos:line="530" pos:column="5">if <condition pos:line="530" pos:column="8">(<expr><operator pos:line="530" pos:column="9">(<pos:position pos:line="530" pos:column="10"/></operator><name pos:line="530" pos:column="10">rv<pos:position pos:line="530" pos:column="12"/></name> <operator pos:line="530" pos:column="13">=<pos:position pos:line="530" pos:column="14"/></operator> <call><name pos:line="530" pos:column="15">ap_mpm_pod_open<pos:position pos:line="530" pos:column="30"/></name><argument_list pos:line="530" pos:column="30">(<argument><expr><name pos:line="530" pos:column="31">pconf<pos:position pos:line="530" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="530" pos:column="38">&amp;<pos:position pos:line="530" pos:column="43"/></operator><name pos:line="530" pos:column="39">pod<pos:position pos:line="530" pos:column="42"/></name></expr></argument>)<pos:position pos:line="530" pos:column="43"/></argument_list></call><operator pos:line="530" pos:column="43">)<pos:position pos:line="530" pos:column="44"/></operator></expr>)<pos:position pos:line="530" pos:column="45"/></condition><then pos:line="530" pos:column="45"> <block pos:line="530" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="531" pos:column="9">ap_log_error<pos:position pos:line="531" pos:column="21"/></name><argument_list pos:line="531" pos:column="21">(<argument><expr><name pos:line="531" pos:column="22">APLOG_MARK<pos:position pos:line="531" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="531" pos:column="34">APLOG_CRIT<pos:position pos:line="531" pos:column="44"/></name> <operator pos:line="531" pos:column="45">|<pos:position pos:line="531" pos:column="46"/></operator> <name pos:line="531" pos:column="47">level_flags<pos:position pos:line="531" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="531" pos:column="60">rv<pos:position pos:line="531" pos:column="62"/></name></expr></argument>,
                     <argument><expr><operator pos:line="532" pos:column="22">(<pos:position pos:line="532" pos:column="23"/></operator><ternary><condition><expr><name pos:line="532" pos:column="23">startup<pos:position pos:line="532" pos:column="30"/></name></expr> ?<pos:position pos:line="532" pos:column="32"/></condition><then pos:line="532" pos:column="32"> <expr><name pos:line="532" pos:column="33">NULL<pos:position pos:line="532" pos:column="37"/></name></expr> <pos:position pos:line="532" pos:column="38"/></then><else pos:line="532" pos:column="38">: <expr><name pos:line="532" pos:column="40">s<pos:position pos:line="532" pos:column="41"/></name></expr></else></ternary><operator pos:line="532" pos:column="41">)<pos:position pos:line="532" pos:column="42"/></operator></expr></argument>,
                     <argument><expr><literal type="string" pos:line="533" pos:column="22">"could not open pipe-of-death"<pos:position pos:line="533" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="533" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="533" pos:column="54"/></expr_stmt>
        <return pos:line="534" pos:column="9">return <expr><name pos:line="534" pos:column="16">DONE<pos:position pos:line="534" pos:column="20"/></name></expr>;<pos:position pos:line="534" pos:column="21"/></return>
    }<pos:position pos:line="535" pos:column="6"/></block></then></if>
    <return pos:line="536" pos:column="5">return <expr><name pos:line="536" pos:column="12">OK<pos:position pos:line="536" pos:column="14"/></name></expr>;<pos:position pos:line="536" pos:column="15"/></return>
}<pos:position pos:line="537" pos:column="2"/></block></function>

<function><specifier pos:line="539" pos:column="1">static<pos:position pos:line="539" pos:column="7"/></specifier> <type><name pos:line="539" pos:column="8">int<pos:position pos:line="539" pos:column="11"/></name></type> <name pos:line="539" pos:column="12">prefork_pre_config<pos:position pos:line="539" pos:column="30"/></name><parameter_list pos:line="539" pos:column="30">(<parameter><decl><type><name pos:line="539" pos:column="31">apr_pool_t<pos:position pos:line="539" pos:column="41"/></name> <modifier pos:line="539" pos:column="42">*<pos:position pos:line="539" pos:column="43"/></modifier></type><name pos:line="539" pos:column="43">p<pos:position pos:line="539" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="539" pos:column="46">apr_pool_t<pos:position pos:line="539" pos:column="56"/></name> <modifier pos:line="539" pos:column="57">*<pos:position pos:line="539" pos:column="58"/></modifier></type><name pos:line="539" pos:column="58">plog<pos:position pos:line="539" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="539" pos:column="64">apr_pool_t<pos:position pos:line="539" pos:column="74"/></name> <modifier pos:line="539" pos:column="75">*<pos:position pos:line="539" pos:column="76"/></modifier></type><name pos:line="539" pos:column="76">ptemp<pos:position pos:line="539" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="539" pos:column="82"/></parameter_list>
<block pos:line="540" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="541" pos:column="5">int<pos:position pos:line="541" pos:column="8"/></name></type> <name pos:line="541" pos:column="9">no_detach<pos:position pos:line="541" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="541" pos:column="20">debug<pos:position pos:line="541" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="541" pos:column="27">foreground<pos:position pos:line="541" pos:column="37"/></name></decl>;<pos:position pos:line="541" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="542" pos:column="5">apr_status_t<pos:position pos:line="542" pos:column="17"/></name></type> <name pos:line="542" pos:column="18">rv<pos:position pos:line="542" pos:column="20"/></name></decl>;<pos:position pos:line="542" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="543" pos:column="5">const<pos:position pos:line="543" pos:column="10"/></specifier> <name pos:line="543" pos:column="11">char<pos:position pos:line="543" pos:column="15"/></name> <modifier pos:line="543" pos:column="16">*<pos:position pos:line="543" pos:column="17"/></modifier></type><name pos:line="543" pos:column="17">userdata_key<pos:position pos:line="543" pos:column="29"/></name> <init pos:line="543" pos:column="30">= <expr><literal type="string" pos:line="543" pos:column="32">"mpm_prefork_module"<pos:position pos:line="543" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="543" pos:column="53"/></decl_stmt>

    <expr_stmt><expr><name pos:line="545" pos:column="5">mpm_state<pos:position pos:line="545" pos:column="14"/></name> <operator pos:line="545" pos:column="15">=<pos:position pos:line="545" pos:column="16"/></operator> <name pos:line="545" pos:column="17">AP_MPMQ_STARTING<pos:position pos:line="545" pos:column="33"/></name></expr>;<pos:position pos:line="545" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="547" pos:column="5">debug<pos:position pos:line="547" pos:column="10"/></name> <operator pos:line="547" pos:column="11">=<pos:position pos:line="547" pos:column="12"/></operator> <call><name pos:line="547" pos:column="13">ap_exists_config_define<pos:position pos:line="547" pos:column="36"/></name><argument_list pos:line="547" pos:column="36">(<argument><expr><literal type="string" pos:line="547" pos:column="37">"DEBUG"<pos:position pos:line="547" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="547" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="547" pos:column="46"/></expr_stmt>

    <if pos:line="549" pos:column="5">if <condition pos:line="549" pos:column="8">(<expr><name pos:line="549" pos:column="9">debug<pos:position pos:line="549" pos:column="14"/></name></expr>)<pos:position pos:line="549" pos:column="15"/></condition><then pos:line="549" pos:column="15"> <block pos:line="549" pos:column="16">{
        <expr_stmt><expr><name pos:line="550" pos:column="9">foreground<pos:position pos:line="550" pos:column="19"/></name> <operator pos:line="550" pos:column="20">=<pos:position pos:line="550" pos:column="21"/></operator> <name pos:line="550" pos:column="22">one_process<pos:position pos:line="550" pos:column="33"/></name> <operator pos:line="550" pos:column="34">=<pos:position pos:line="550" pos:column="35"/></operator> <literal type="number" pos:line="550" pos:column="36">1<pos:position pos:line="550" pos:column="37"/></literal></expr>;<pos:position pos:line="550" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="551" pos:column="9">no_detach<pos:position pos:line="551" pos:column="18"/></name> <operator pos:line="551" pos:column="19">=<pos:position pos:line="551" pos:column="20"/></operator> <literal type="number" pos:line="551" pos:column="21">0<pos:position pos:line="551" pos:column="22"/></literal></expr>;<pos:position pos:line="551" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="552" pos:column="6"/></block></then>
    <else pos:line="553" pos:column="5">else
    <block pos:line="554" pos:column="5">{
        <expr_stmt><expr><name pos:line="555" pos:column="9">no_detach<pos:position pos:line="555" pos:column="18"/></name> <operator pos:line="555" pos:column="19">=<pos:position pos:line="555" pos:column="20"/></operator> <call><name pos:line="555" pos:column="21">ap_exists_config_define<pos:position pos:line="555" pos:column="44"/></name><argument_list pos:line="555" pos:column="44">(<argument><expr><literal type="string" pos:line="555" pos:column="45">"NO_DETACH"<pos:position pos:line="555" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="555" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="555" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="556" pos:column="9">one_process<pos:position pos:line="556" pos:column="20"/></name> <operator pos:line="556" pos:column="21">=<pos:position pos:line="556" pos:column="22"/></operator> <call><name pos:line="556" pos:column="23">ap_exists_config_define<pos:position pos:line="556" pos:column="46"/></name><argument_list pos:line="556" pos:column="46">(<argument><expr><literal type="string" pos:line="556" pos:column="47">"ONE_PROCESS"<pos:position pos:line="556" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="556" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="556" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name pos:line="557" pos:column="9">foreground<pos:position pos:line="557" pos:column="19"/></name> <operator pos:line="557" pos:column="20">=<pos:position pos:line="557" pos:column="21"/></operator> <call><name pos:line="557" pos:column="22">ap_exists_config_define<pos:position pos:line="557" pos:column="45"/></name><argument_list pos:line="557" pos:column="45">(<argument><expr><literal type="string" pos:line="557" pos:column="46">"FOREGROUND"<pos:position pos:line="557" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="557" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="557" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="558" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="560" pos:column="5">ap_mutex_register<pos:position pos:line="560" pos:column="22"/></name><argument_list pos:line="560" pos:column="22">(<argument><expr><name pos:line="560" pos:column="23">p<pos:position pos:line="560" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="560" pos:column="26">AP_ACCEPT_MUTEX_TYPE<pos:position pos:line="560" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="560" pos:column="48">NULL<pos:position pos:line="560" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="560" pos:column="54">APR_LOCK_DEFAULT<pos:position pos:line="560" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="560" pos:column="72">0<pos:position pos:line="560" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="560" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="560" pos:column="75"/></expr_stmt>

    <comment type="block" pos:line="562" pos:column="5">/* sigh, want this only the second time around */</comment>
    <expr_stmt><expr><name pos:line="563" pos:column="5">retained<pos:position pos:line="563" pos:column="13"/></name> <operator pos:line="563" pos:column="14">=<pos:position pos:line="563" pos:column="15"/></operator> <call><name pos:line="563" pos:column="16">ap_retained_data_get<pos:position pos:line="563" pos:column="36"/></name><argument_list pos:line="563" pos:column="36">(<argument><expr><name pos:line="563" pos:column="37">userdata_key<pos:position pos:line="563" pos:column="49"/></name></expr></argument>)<pos:position pos:line="563" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="563" pos:column="51"/></expr_stmt>
    <if pos:line="564" pos:column="5">if <condition pos:line="564" pos:column="8">(<expr><operator pos:line="564" pos:column="9">!<pos:position pos:line="564" pos:column="10"/></operator><name pos:line="564" pos:column="10">retained<pos:position pos:line="564" pos:column="18"/></name></expr>)<pos:position pos:line="564" pos:column="19"/></condition><then pos:line="564" pos:column="19"> <block pos:line="564" pos:column="20">{
        <expr_stmt><expr><name pos:line="565" pos:column="9">retained<pos:position pos:line="565" pos:column="17"/></name> <operator pos:line="565" pos:column="18">=<pos:position pos:line="565" pos:column="19"/></operator> <call><name pos:line="565" pos:column="20">ap_retained_data_create<pos:position pos:line="565" pos:column="43"/></name><argument_list pos:line="565" pos:column="43">(<argument><expr><name pos:line="565" pos:column="44">userdata_key<pos:position pos:line="565" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="565" pos:column="58">sizeof<argument_list pos:line="565" pos:column="64">(<argument><expr><operator pos:line="565" pos:column="65">*<pos:position pos:line="565" pos:column="66"/></operator><name pos:line="565" pos:column="66">retained<pos:position pos:line="565" pos:column="74"/></name></expr></argument>)<pos:position pos:line="565" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="565" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="565" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="566" pos:column="9">retained<pos:position pos:line="566" pos:column="17"/></name><operator pos:line="566" pos:column="17">-&gt;<pos:position pos:line="566" pos:column="22"/></operator><name pos:line="566" pos:column="19">max_daemons_limit<pos:position pos:line="566" pos:column="36"/></name></name> <operator pos:line="566" pos:column="37">=<pos:position pos:line="566" pos:column="38"/></operator> <operator pos:line="566" pos:column="39">-<pos:position pos:line="566" pos:column="40"/></operator><literal type="number" pos:line="566" pos:column="40">1<pos:position pos:line="566" pos:column="41"/></literal></expr>;<pos:position pos:line="566" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="567" pos:column="9">retained<pos:position pos:line="567" pos:column="17"/></name><operator pos:line="567" pos:column="17">-&gt;<pos:position pos:line="567" pos:column="22"/></operator><name pos:line="567" pos:column="19">idle_spawn_rate<pos:position pos:line="567" pos:column="34"/></name></name> <operator pos:line="567" pos:column="35">=<pos:position pos:line="567" pos:column="36"/></operator> <literal type="number" pos:line="567" pos:column="37">1<pos:position pos:line="567" pos:column="38"/></literal></expr>;<pos:position pos:line="567" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="568" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="569" pos:column="5">++<pos:position pos:line="569" pos:column="7"/></operator><name><name pos:line="569" pos:column="7">retained<pos:position pos:line="569" pos:column="15"/></name><operator pos:line="569" pos:column="15">-&gt;<pos:position pos:line="569" pos:column="20"/></operator><name pos:line="569" pos:column="17">module_loads<pos:position pos:line="569" pos:column="29"/></name></name></expr>;<pos:position pos:line="569" pos:column="30"/></expr_stmt>
    <if pos:line="570" pos:column="5">if <condition pos:line="570" pos:column="8">(<expr><name><name pos:line="570" pos:column="9">retained<pos:position pos:line="570" pos:column="17"/></name><operator pos:line="570" pos:column="17">-&gt;<pos:position pos:line="570" pos:column="22"/></operator><name pos:line="570" pos:column="19">module_loads<pos:position pos:line="570" pos:column="31"/></name></name> <operator pos:line="570" pos:column="32">==<pos:position pos:line="570" pos:column="34"/></operator> <literal type="number" pos:line="570" pos:column="35">2<pos:position pos:line="570" pos:column="36"/></literal></expr>)<pos:position pos:line="570" pos:column="37"/></condition><then pos:line="570" pos:column="37"> <block pos:line="570" pos:column="38">{
        <if pos:line="571" pos:column="9">if <condition pos:line="571" pos:column="12">(<expr><operator pos:line="571" pos:column="13">!<pos:position pos:line="571" pos:column="14"/></operator><name pos:line="571" pos:column="14">one_process<pos:position pos:line="571" pos:column="25"/></name> <operator pos:line="571" pos:column="26">&amp;&amp;<pos:position pos:line="571" pos:column="36"/></operator> <operator pos:line="571" pos:column="29">!<pos:position pos:line="571" pos:column="30"/></operator><name pos:line="571" pos:column="30">foreground<pos:position pos:line="571" pos:column="40"/></name></expr>)<pos:position pos:line="571" pos:column="41"/></condition><then pos:line="571" pos:column="41"> <block pos:line="571" pos:column="42">{
            <comment type="block" pos:line="572" pos:column="13">/* before we detach, setup crash handlers to log to errorlog */</comment>
            <expr_stmt><expr><call><name pos:line="573" pos:column="13">ap_fatal_signal_setup<pos:position pos:line="573" pos:column="34"/></name><argument_list pos:line="573" pos:column="34">(<argument><expr><name pos:line="573" pos:column="35">ap_server_conf<pos:position pos:line="573" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="573" pos:column="51">pconf<pos:position pos:line="573" pos:column="56"/></name></expr></argument>)<pos:position pos:line="573" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="573" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name pos:line="574" pos:column="13">rv<pos:position pos:line="574" pos:column="15"/></name> <operator pos:line="574" pos:column="16">=<pos:position pos:line="574" pos:column="17"/></operator> <call><name pos:line="574" pos:column="18">apr_proc_detach<pos:position pos:line="574" pos:column="33"/></name><argument_list pos:line="574" pos:column="33">(<argument><expr><ternary><condition><expr><name pos:line="574" pos:column="34">no_detach<pos:position pos:line="574" pos:column="43"/></name></expr> ?<pos:position pos:line="574" pos:column="45"/></condition><then pos:line="574" pos:column="45"> <expr><name pos:line="574" pos:column="46">APR_PROC_DETACH_FOREGROUND<pos:position pos:line="574" pos:column="72"/></name></expr>
                                           <pos:position pos:line="575" pos:column="44"/></then><else pos:line="575" pos:column="44">: <expr><name pos:line="575" pos:column="46">APR_PROC_DETACH_DAEMONIZE<pos:position pos:line="575" pos:column="71"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="575" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="575" pos:column="73"/></expr_stmt>
            <if pos:line="576" pos:column="13">if <condition pos:line="576" pos:column="16">(<expr><name pos:line="576" pos:column="17">rv<pos:position pos:line="576" pos:column="19"/></name> <operator pos:line="576" pos:column="20">!=<pos:position pos:line="576" pos:column="22"/></operator> <name pos:line="576" pos:column="23">APR_SUCCESS<pos:position pos:line="576" pos:column="34"/></name></expr>)<pos:position pos:line="576" pos:column="35"/></condition><then pos:line="576" pos:column="35"> <block pos:line="576" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="577" pos:column="17">ap_log_error<pos:position pos:line="577" pos:column="29"/></name><argument_list pos:line="577" pos:column="29">(<argument><expr><name pos:line="577" pos:column="30">APLOG_MARK<pos:position pos:line="577" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="577" pos:column="42">APLOG_CRIT<pos:position pos:line="577" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="577" pos:column="54">rv<pos:position pos:line="577" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="577" pos:column="58">NULL<pos:position pos:line="577" pos:column="62"/></name></expr></argument>, <argument><expr><call><name pos:line="577" pos:column="64">APLOGNO<pos:position pos:line="577" pos:column="71"/></name><argument_list pos:line="577" pos:column="71">(<argument><expr><literal type="number" pos:line="577" pos:column="72">00174<pos:position pos:line="577" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="577" pos:column="78"/></argument_list></call>
                             <literal type="string" pos:line="578" pos:column="30">"apr_proc_detach failed"<pos:position pos:line="578" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="578" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="578" pos:column="56"/></expr_stmt>
                <return pos:line="579" pos:column="17">return <expr><name pos:line="579" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="579" pos:column="50"/></name></expr>;<pos:position pos:line="579" pos:column="51"/></return>
            }<pos:position pos:line="580" pos:column="14"/></block></then></if>
        }<pos:position pos:line="581" pos:column="10"/></block></then></if>
    }<pos:position pos:line="582" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="584" pos:column="5">parent_pid<pos:position pos:line="584" pos:column="15"/></name> <operator pos:line="584" pos:column="16">=<pos:position pos:line="584" pos:column="17"/></operator> <name pos:line="584" pos:column="18">ap_my_pid<pos:position pos:line="584" pos:column="27"/></name> <operator pos:line="584" pos:column="28">=<pos:position pos:line="584" pos:column="29"/></operator> <call><name pos:line="584" pos:column="30">getpid<pos:position pos:line="584" pos:column="36"/></name><argument_list pos:line="584" pos:column="36">()<pos:position pos:line="584" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="584" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="586" pos:column="5">ap_listen_pre_config<pos:position pos:line="586" pos:column="25"/></name><argument_list pos:line="586" pos:column="25">()<pos:position pos:line="586" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="586" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="587" pos:column="5">ap_daemons_to_start<pos:position pos:line="587" pos:column="24"/></name> <operator pos:line="587" pos:column="25">=<pos:position pos:line="587" pos:column="26"/></operator> <name pos:line="587" pos:column="27">DEFAULT_START_DAEMON<pos:position pos:line="587" pos:column="47"/></name></expr>;<pos:position pos:line="587" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="588" pos:column="5">ap_daemons_min_free<pos:position pos:line="588" pos:column="24"/></name> <operator pos:line="588" pos:column="25">=<pos:position pos:line="588" pos:column="26"/></operator> <name pos:line="588" pos:column="27">DEFAULT_MIN_FREE_DAEMON<pos:position pos:line="588" pos:column="50"/></name></expr>;<pos:position pos:line="588" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="589" pos:column="5">ap_daemons_max_free<pos:position pos:line="589" pos:column="24"/></name> <operator pos:line="589" pos:column="25">=<pos:position pos:line="589" pos:column="26"/></operator> <name pos:line="589" pos:column="27">DEFAULT_MAX_FREE_DAEMON<pos:position pos:line="589" pos:column="50"/></name></expr>;<pos:position pos:line="589" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="590" pos:column="5">server_limit<pos:position pos:line="590" pos:column="17"/></name> <operator pos:line="590" pos:column="18">=<pos:position pos:line="590" pos:column="19"/></operator> <name pos:line="590" pos:column="20">DEFAULT_SERVER_LIMIT<pos:position pos:line="590" pos:column="40"/></name></expr>;<pos:position pos:line="590" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="591" pos:column="5">ap_daemons_limit<pos:position pos:line="591" pos:column="21"/></name> <operator pos:line="591" pos:column="22">=<pos:position pos:line="591" pos:column="23"/></operator> <name pos:line="591" pos:column="24">server_limit<pos:position pos:line="591" pos:column="36"/></name></expr>;<pos:position pos:line="591" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="592" pos:column="5">ap_extended_status<pos:position pos:line="592" pos:column="23"/></name> <operator pos:line="592" pos:column="24">=<pos:position pos:line="592" pos:column="25"/></operator> <literal type="number" pos:line="592" pos:column="26">0<pos:position pos:line="592" pos:column="27"/></literal></expr>;<pos:position pos:line="592" pos:column="28"/></expr_stmt>

    <return pos:line="594" pos:column="5">return <expr><name pos:line="594" pos:column="12">OK<pos:position pos:line="594" pos:column="14"/></name></expr>;<pos:position pos:line="594" pos:column="15"/></return>
}<pos:position pos:line="595" pos:column="2"/></block></function>

<function><specifier pos:line="597" pos:column="1">static<pos:position pos:line="597" pos:column="7"/></specifier> <type><name pos:line="597" pos:column="8">int<pos:position pos:line="597" pos:column="11"/></name></type> <name pos:line="597" pos:column="12">prefork_check_config<pos:position pos:line="597" pos:column="32"/></name><parameter_list pos:line="597" pos:column="32">(<parameter><decl><type><name pos:line="597" pos:column="33">apr_pool_t<pos:position pos:line="597" pos:column="43"/></name> <modifier pos:line="597" pos:column="44">*<pos:position pos:line="597" pos:column="45"/></modifier></type><name pos:line="597" pos:column="45">p<pos:position pos:line="597" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="597" pos:column="48">apr_pool_t<pos:position pos:line="597" pos:column="58"/></name> <modifier pos:line="597" pos:column="59">*<pos:position pos:line="597" pos:column="60"/></modifier></type><name pos:line="597" pos:column="60">plog<pos:position pos:line="597" pos:column="64"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="598" pos:column="33">apr_pool_t<pos:position pos:line="598" pos:column="43"/></name> <modifier pos:line="598" pos:column="44">*<pos:position pos:line="598" pos:column="45"/></modifier></type><name pos:line="598" pos:column="45">ptemp<pos:position pos:line="598" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="598" pos:column="52">server_rec<pos:position pos:line="598" pos:column="62"/></name> <modifier pos:line="598" pos:column="63">*<pos:position pos:line="598" pos:column="64"/></modifier></type><name pos:line="598" pos:column="64">s<pos:position pos:line="598" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="598" pos:column="66"/></parameter_list>
<block pos:line="599" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="600" pos:column="5">int<pos:position pos:line="600" pos:column="8"/></name></type> <name pos:line="600" pos:column="9">startup<pos:position pos:line="600" pos:column="16"/></name> <init pos:line="600" pos:column="17">= <expr><literal type="number" pos:line="600" pos:column="19">0<pos:position pos:line="600" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="600" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="602" pos:column="5">/* the reverse of pre_config, we want this only the first time around */</comment>
    <if pos:line="603" pos:column="5">if <condition pos:line="603" pos:column="8">(<expr><name><name pos:line="603" pos:column="9">retained<pos:position pos:line="603" pos:column="17"/></name><operator pos:line="603" pos:column="17">-&gt;<pos:position pos:line="603" pos:column="22"/></operator><name pos:line="603" pos:column="19">module_loads<pos:position pos:line="603" pos:column="31"/></name></name> <operator pos:line="603" pos:column="32">==<pos:position pos:line="603" pos:column="34"/></operator> <literal type="number" pos:line="603" pos:column="35">1<pos:position pos:line="603" pos:column="36"/></literal></expr>)<pos:position pos:line="603" pos:column="37"/></condition><then pos:line="603" pos:column="37"> <block pos:line="603" pos:column="38">{
        <expr_stmt><expr><name pos:line="604" pos:column="9">startup<pos:position pos:line="604" pos:column="16"/></name> <operator pos:line="604" pos:column="17">=<pos:position pos:line="604" pos:column="18"/></operator> <literal type="number" pos:line="604" pos:column="19">1<pos:position pos:line="604" pos:column="20"/></literal></expr>;<pos:position pos:line="604" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="605" pos:column="6"/></block></then></if>

    <if pos:line="607" pos:column="5">if <condition pos:line="607" pos:column="8">(<expr><name pos:line="607" pos:column="9">server_limit<pos:position pos:line="607" pos:column="21"/></name> <operator pos:line="607" pos:column="22">&gt;<pos:position pos:line="607" pos:column="26"/></operator> <name pos:line="607" pos:column="24">MAX_SERVER_LIMIT<pos:position pos:line="607" pos:column="40"/></name></expr>)<pos:position pos:line="607" pos:column="41"/></condition><then pos:line="607" pos:column="41"> <block pos:line="607" pos:column="42">{
        <if pos:line="608" pos:column="9">if <condition pos:line="608" pos:column="12">(<expr><name pos:line="608" pos:column="13">startup<pos:position pos:line="608" pos:column="20"/></name></expr>)<pos:position pos:line="608" pos:column="21"/></condition><then pos:line="608" pos:column="21"> <block pos:line="608" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="609" pos:column="13">ap_log_error<pos:position pos:line="609" pos:column="25"/></name><argument_list pos:line="609" pos:column="25">(<argument><expr><name pos:line="609" pos:column="26">APLOG_MARK<pos:position pos:line="609" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="609" pos:column="38">APLOG_WARNING<pos:position pos:line="609" pos:column="51"/></name> <operator pos:line="609" pos:column="52">|<pos:position pos:line="609" pos:column="53"/></operator> <name pos:line="609" pos:column="54">APLOG_STARTUP<pos:position pos:line="609" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="609" pos:column="69">0<pos:position pos:line="609" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="609" pos:column="72">NULL<pos:position pos:line="609" pos:column="76"/></name></expr></argument>, <argument><expr><call><name pos:line="609" pos:column="78">APLOGNO<pos:position pos:line="609" pos:column="85"/></name><argument_list pos:line="609" pos:column="85">(<argument><expr><literal type="number" pos:line="609" pos:column="86">00175<pos:position pos:line="609" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="609" pos:column="92"/></argument_list></call>
                         <literal type="string" pos:line="610" pos:column="26">"WARNING: ServerLimit of %d exceeds compile-time "<pos:position pos:line="610" pos:column="76"/></literal>
                         <literal type="string" pos:line="611" pos:column="26">"limit of"<pos:position pos:line="611" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="611" pos:column="38">server_limit<pos:position pos:line="611" pos:column="50"/></name></expr></argument>)<pos:position pos:line="611" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="611" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="612" pos:column="13">ap_log_error<pos:position pos:line="612" pos:column="25"/></name><argument_list pos:line="612" pos:column="25">(<argument><expr><name pos:line="612" pos:column="26">APLOG_MARK<pos:position pos:line="612" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="612" pos:column="38">APLOG_WARNING<pos:position pos:line="612" pos:column="51"/></name> <operator pos:line="612" pos:column="52">|<pos:position pos:line="612" pos:column="53"/></operator> <name pos:line="612" pos:column="54">APLOG_STARTUP<pos:position pos:line="612" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="612" pos:column="69">0<pos:position pos:line="612" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="612" pos:column="72">NULL<pos:position pos:line="612" pos:column="76"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="613" pos:column="26">" %d servers, decreasing to %d."<pos:position pos:line="613" pos:column="58"/></literal></expr></argument>,
                         <argument><expr><name pos:line="614" pos:column="26">MAX_SERVER_LIMIT<pos:position pos:line="614" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="614" pos:column="44">MAX_SERVER_LIMIT<pos:position pos:line="614" pos:column="60"/></name></expr></argument>)<pos:position pos:line="614" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="614" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="615" pos:column="10"/></block></then> <else pos:line="615" pos:column="11">else <block pos:line="615" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="616" pos:column="13">ap_log_error<pos:position pos:line="616" pos:column="25"/></name><argument_list pos:line="616" pos:column="25">(<argument><expr><name pos:line="616" pos:column="26">APLOG_MARK<pos:position pos:line="616" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="616" pos:column="38">APLOG_WARNING<pos:position pos:line="616" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="616" pos:column="53">0<pos:position pos:line="616" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="616" pos:column="56">s<pos:position pos:line="616" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="616" pos:column="59">APLOGNO<pos:position pos:line="616" pos:column="66"/></name><argument_list pos:line="616" pos:column="66">(<argument><expr><literal type="number" pos:line="616" pos:column="67">00176<pos:position pos:line="616" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="616" pos:column="73"/></argument_list></call>
                         <literal type="string" pos:line="617" pos:column="26">"ServerLimit of %d exceeds compile-time limit "<pos:position pos:line="617" pos:column="73"/></literal>
                         <literal type="string" pos:line="618" pos:column="26">"of %d, decreasing to match"<pos:position pos:line="618" pos:column="54"/></literal></expr></argument>,
                         <argument><expr><name pos:line="619" pos:column="26">server_limit<pos:position pos:line="619" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="619" pos:column="40">MAX_SERVER_LIMIT<pos:position pos:line="619" pos:column="56"/></name></expr></argument>)<pos:position pos:line="619" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="619" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="620" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="621" pos:column="9">server_limit<pos:position pos:line="621" pos:column="21"/></name> <operator pos:line="621" pos:column="22">=<pos:position pos:line="621" pos:column="23"/></operator> <name pos:line="621" pos:column="24">MAX_SERVER_LIMIT<pos:position pos:line="621" pos:column="40"/></name></expr>;<pos:position pos:line="621" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="622" pos:column="6"/></block></then>
    <elseif pos:line="623" pos:column="5">else <if pos:line="623" pos:column="10">if <condition pos:line="623" pos:column="13">(<expr><name pos:line="623" pos:column="14">server_limit<pos:position pos:line="623" pos:column="26"/></name> <operator pos:line="623" pos:column="27">&lt;<pos:position pos:line="623" pos:column="31"/></operator> <literal type="number" pos:line="623" pos:column="29">1<pos:position pos:line="623" pos:column="30"/></literal></expr>)<pos:position pos:line="623" pos:column="31"/></condition><then pos:line="623" pos:column="31"> <block pos:line="623" pos:column="32">{
        <if pos:line="624" pos:column="9">if <condition pos:line="624" pos:column="12">(<expr><name pos:line="624" pos:column="13">startup<pos:position pos:line="624" pos:column="20"/></name></expr>)<pos:position pos:line="624" pos:column="21"/></condition><then pos:line="624" pos:column="21"> <block pos:line="624" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="625" pos:column="13">ap_log_error<pos:position pos:line="625" pos:column="25"/></name><argument_list pos:line="625" pos:column="25">(<argument><expr><name pos:line="625" pos:column="26">APLOG_MARK<pos:position pos:line="625" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="625" pos:column="38">APLOG_WARNING<pos:position pos:line="625" pos:column="51"/></name> <operator pos:line="625" pos:column="52">|<pos:position pos:line="625" pos:column="53"/></operator> <name pos:line="625" pos:column="54">APLOG_STARTUP<pos:position pos:line="625" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="625" pos:column="69">0<pos:position pos:line="625" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="625" pos:column="72">NULL<pos:position pos:line="625" pos:column="76"/></name></expr></argument>, <argument><expr><call><name pos:line="625" pos:column="78">APLOGNO<pos:position pos:line="625" pos:column="85"/></name><argument_list pos:line="625" pos:column="85">(<argument><expr><literal type="number" pos:line="625" pos:column="86">00177<pos:position pos:line="625" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="625" pos:column="92"/></argument_list></call>
                         <literal type="string" pos:line="626" pos:column="26">"WARNING: ServerLimit of %d not allowed, "<pos:position pos:line="626" pos:column="68"/></literal>
                         <literal type="string" pos:line="627" pos:column="26">"increasing to 1."<pos:position pos:line="627" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="627" pos:column="46">server_limit<pos:position pos:line="627" pos:column="58"/></name></expr></argument>)<pos:position pos:line="627" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="627" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="628" pos:column="10"/></block></then> <else pos:line="628" pos:column="11">else <block pos:line="628" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="629" pos:column="13">ap_log_error<pos:position pos:line="629" pos:column="25"/></name><argument_list pos:line="629" pos:column="25">(<argument><expr><name pos:line="629" pos:column="26">APLOG_MARK<pos:position pos:line="629" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="629" pos:column="38">APLOG_WARNING<pos:position pos:line="629" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="629" pos:column="53">0<pos:position pos:line="629" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="629" pos:column="56">s<pos:position pos:line="629" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="629" pos:column="59">APLOGNO<pos:position pos:line="629" pos:column="66"/></name><argument_list pos:line="629" pos:column="66">(<argument><expr><literal type="number" pos:line="629" pos:column="67">00178<pos:position pos:line="629" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="629" pos:column="73"/></argument_list></call>
                         <literal type="string" pos:line="630" pos:column="26">"ServerLimit of %d not allowed, increasing to 1"<pos:position pos:line="630" pos:column="74"/></literal></expr></argument>,
                         <argument><expr><name pos:line="631" pos:column="26">server_limit<pos:position pos:line="631" pos:column="38"/></name></expr></argument>)<pos:position pos:line="631" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="631" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="632" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="633" pos:column="9">server_limit<pos:position pos:line="633" pos:column="21"/></name> <operator pos:line="633" pos:column="22">=<pos:position pos:line="633" pos:column="23"/></operator> <literal type="number" pos:line="633" pos:column="24">1<pos:position pos:line="633" pos:column="25"/></literal></expr>;<pos:position pos:line="633" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="634" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="636" pos:column="5">/* you cannot change ServerLimit across a restart; ignore
     * any such attempts
     */</comment>
    <if pos:line="639" pos:column="5">if <condition pos:line="639" pos:column="8">(<expr><operator pos:line="639" pos:column="9">!<pos:position pos:line="639" pos:column="10"/></operator><name><name pos:line="639" pos:column="10">retained<pos:position pos:line="639" pos:column="18"/></name><operator pos:line="639" pos:column="18">-&gt;<pos:position pos:line="639" pos:column="23"/></operator><name pos:line="639" pos:column="20">first_server_limit<pos:position pos:line="639" pos:column="38"/></name></name></expr>)<pos:position pos:line="639" pos:column="39"/></condition><then pos:line="639" pos:column="39"> <block pos:line="639" pos:column="40">{
        <expr_stmt><expr><name><name pos:line="640" pos:column="9">retained<pos:position pos:line="640" pos:column="17"/></name><operator pos:line="640" pos:column="17">-&gt;<pos:position pos:line="640" pos:column="22"/></operator><name pos:line="640" pos:column="19">first_server_limit<pos:position pos:line="640" pos:column="37"/></name></name> <operator pos:line="640" pos:column="38">=<pos:position pos:line="640" pos:column="39"/></operator> <name pos:line="640" pos:column="40">server_limit<pos:position pos:line="640" pos:column="52"/></name></expr>;<pos:position pos:line="640" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="641" pos:column="6"/></block></then>
    <elseif pos:line="642" pos:column="5">else <if pos:line="642" pos:column="10">if <condition pos:line="642" pos:column="13">(<expr><name pos:line="642" pos:column="14">server_limit<pos:position pos:line="642" pos:column="26"/></name> <operator pos:line="642" pos:column="27">!=<pos:position pos:line="642" pos:column="29"/></operator> <name><name pos:line="642" pos:column="30">retained<pos:position pos:line="642" pos:column="38"/></name><operator pos:line="642" pos:column="38">-&gt;<pos:position pos:line="642" pos:column="43"/></operator><name pos:line="642" pos:column="40">first_server_limit<pos:position pos:line="642" pos:column="58"/></name></name></expr>)<pos:position pos:line="642" pos:column="59"/></condition><then pos:line="642" pos:column="59"> <block pos:line="642" pos:column="60">{
        <comment type="block" pos:line="643" pos:column="9">/* don't need a startup console version here */</comment>
        <expr_stmt><expr><call><name pos:line="644" pos:column="9">ap_log_error<pos:position pos:line="644" pos:column="21"/></name><argument_list pos:line="644" pos:column="21">(<argument><expr><name pos:line="644" pos:column="22">APLOG_MARK<pos:position pos:line="644" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="644" pos:column="34">APLOG_WARNING<pos:position pos:line="644" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="644" pos:column="49">0<pos:position pos:line="644" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="644" pos:column="52">s<pos:position pos:line="644" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="644" pos:column="55">APLOGNO<pos:position pos:line="644" pos:column="62"/></name><argument_list pos:line="644" pos:column="62">(<argument><expr><literal type="number" pos:line="644" pos:column="63">00179<pos:position pos:line="644" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="644" pos:column="69"/></argument_list></call>
                     <literal type="string" pos:line="645" pos:column="22">"changing ServerLimit to %d from original value of %d "<pos:position pos:line="645" pos:column="77"/></literal>
                     <literal type="string" pos:line="646" pos:column="22">"not allowed during restart"<pos:position pos:line="646" pos:column="50"/></literal></expr></argument>,
                     <argument><expr><name pos:line="647" pos:column="22">server_limit<pos:position pos:line="647" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="647" pos:column="36">retained<pos:position pos:line="647" pos:column="44"/></name><operator pos:line="647" pos:column="44">-&gt;<pos:position pos:line="647" pos:column="49"/></operator><name pos:line="647" pos:column="46">first_server_limit<pos:position pos:line="647" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="647" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="647" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name pos:line="648" pos:column="9">server_limit<pos:position pos:line="648" pos:column="21"/></name> <operator pos:line="648" pos:column="22">=<pos:position pos:line="648" pos:column="23"/></operator> <name><name pos:line="648" pos:column="24">retained<pos:position pos:line="648" pos:column="32"/></name><operator pos:line="648" pos:column="32">-&gt;<pos:position pos:line="648" pos:column="37"/></operator><name pos:line="648" pos:column="34">first_server_limit<pos:position pos:line="648" pos:column="52"/></name></name></expr>;<pos:position pos:line="648" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="649" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="651" pos:column="5">if <condition pos:line="651" pos:column="8">(<expr><name pos:line="651" pos:column="9">ap_daemons_limit<pos:position pos:line="651" pos:column="25"/></name> <operator pos:line="651" pos:column="26">&gt;<pos:position pos:line="651" pos:column="30"/></operator> <name pos:line="651" pos:column="28">server_limit<pos:position pos:line="651" pos:column="40"/></name></expr>)<pos:position pos:line="651" pos:column="41"/></condition><then pos:line="651" pos:column="41"> <block pos:line="651" pos:column="42">{
        <if pos:line="652" pos:column="9">if <condition pos:line="652" pos:column="12">(<expr><name pos:line="652" pos:column="13">startup<pos:position pos:line="652" pos:column="20"/></name></expr>)<pos:position pos:line="652" pos:column="21"/></condition><then pos:line="652" pos:column="21"> <block pos:line="652" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="653" pos:column="13">ap_log_error<pos:position pos:line="653" pos:column="25"/></name><argument_list pos:line="653" pos:column="25">(<argument><expr><name pos:line="653" pos:column="26">APLOG_MARK<pos:position pos:line="653" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="653" pos:column="38">APLOG_WARNING<pos:position pos:line="653" pos:column="51"/></name> <operator pos:line="653" pos:column="52">|<pos:position pos:line="653" pos:column="53"/></operator> <name pos:line="653" pos:column="54">APLOG_STARTUP<pos:position pos:line="653" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="653" pos:column="69">0<pos:position pos:line="653" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="653" pos:column="72">NULL<pos:position pos:line="653" pos:column="76"/></name></expr></argument>, <argument><expr><call><name pos:line="653" pos:column="78">APLOGNO<pos:position pos:line="653" pos:column="85"/></name><argument_list pos:line="653" pos:column="85">(<argument><expr><literal type="number" pos:line="653" pos:column="86">00180<pos:position pos:line="653" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="653" pos:column="92"/></argument_list></call>
                         <literal type="string" pos:line="654" pos:column="26">"WARNING: MaxRequestWorkers of %d exceeds ServerLimit "<pos:position pos:line="654" pos:column="81"/></literal>
                         <literal type="string" pos:line="655" pos:column="26">"value of"<pos:position pos:line="655" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="655" pos:column="38">ap_daemons_limit<pos:position pos:line="655" pos:column="54"/></name></expr></argument>)<pos:position pos:line="655" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="655" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="656" pos:column="13">ap_log_error<pos:position pos:line="656" pos:column="25"/></name><argument_list pos:line="656" pos:column="25">(<argument><expr><name pos:line="656" pos:column="26">APLOG_MARK<pos:position pos:line="656" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="656" pos:column="38">APLOG_WARNING<pos:position pos:line="656" pos:column="51"/></name> <operator pos:line="656" pos:column="52">|<pos:position pos:line="656" pos:column="53"/></operator> <name pos:line="656" pos:column="54">APLOG_STARTUP<pos:position pos:line="656" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="656" pos:column="69">0<pos:position pos:line="656" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="656" pos:column="72">NULL<pos:position pos:line="656" pos:column="76"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="657" pos:column="26">" %d servers, decreasing MaxRequestWorkers to %d."<pos:position pos:line="657" pos:column="76"/></literal></expr></argument>,
                         <argument><expr><name pos:line="658" pos:column="26">server_limit<pos:position pos:line="658" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="658" pos:column="40">server_limit<pos:position pos:line="658" pos:column="52"/></name></expr></argument>)<pos:position pos:line="658" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="658" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="659" pos:column="13">ap_log_error<pos:position pos:line="659" pos:column="25"/></name><argument_list pos:line="659" pos:column="25">(<argument><expr><name pos:line="659" pos:column="26">APLOG_MARK<pos:position pos:line="659" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="659" pos:column="38">APLOG_WARNING<pos:position pos:line="659" pos:column="51"/></name> <operator pos:line="659" pos:column="52">|<pos:position pos:line="659" pos:column="53"/></operator> <name pos:line="659" pos:column="54">APLOG_STARTUP<pos:position pos:line="659" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="659" pos:column="69">0<pos:position pos:line="659" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="659" pos:column="72">NULL<pos:position pos:line="659" pos:column="76"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="660" pos:column="26">" To increase, please see the ServerLimit "<pos:position pos:line="660" pos:column="69"/></literal>
                         <literal type="string" pos:line="661" pos:column="26">"directive."<pos:position pos:line="661" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="661" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="661" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="662" pos:column="10"/></block></then> <else pos:line="662" pos:column="11">else <block pos:line="662" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="663" pos:column="13">ap_log_error<pos:position pos:line="663" pos:column="25"/></name><argument_list pos:line="663" pos:column="25">(<argument><expr><name pos:line="663" pos:column="26">APLOG_MARK<pos:position pos:line="663" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="663" pos:column="38">APLOG_WARNING<pos:position pos:line="663" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="663" pos:column="53">0<pos:position pos:line="663" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="663" pos:column="56">s<pos:position pos:line="663" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="663" pos:column="59">APLOGNO<pos:position pos:line="663" pos:column="66"/></name><argument_list pos:line="663" pos:column="66">(<argument><expr><literal type="number" pos:line="663" pos:column="67">00181<pos:position pos:line="663" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="663" pos:column="73"/></argument_list></call>
                         <literal type="string" pos:line="664" pos:column="26">"MaxRequestWorkers of %d exceeds ServerLimit value "<pos:position pos:line="664" pos:column="78"/></literal>
                         <literal type="string" pos:line="665" pos:column="26">"of %d, decreasing to match"<pos:position pos:line="665" pos:column="54"/></literal></expr></argument>,
                         <argument><expr><name pos:line="666" pos:column="26">ap_daemons_limit<pos:position pos:line="666" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="666" pos:column="44">server_limit<pos:position pos:line="666" pos:column="56"/></name></expr></argument>)<pos:position pos:line="666" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="666" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="667" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="668" pos:column="9">ap_daemons_limit<pos:position pos:line="668" pos:column="25"/></name> <operator pos:line="668" pos:column="26">=<pos:position pos:line="668" pos:column="27"/></operator> <name pos:line="668" pos:column="28">server_limit<pos:position pos:line="668" pos:column="40"/></name></expr>;<pos:position pos:line="668" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="669" pos:column="6"/></block></then>
    <elseif pos:line="670" pos:column="5">else <if pos:line="670" pos:column="10">if <condition pos:line="670" pos:column="13">(<expr><name pos:line="670" pos:column="14">ap_daemons_limit<pos:position pos:line="670" pos:column="30"/></name> <operator pos:line="670" pos:column="31">&lt;<pos:position pos:line="670" pos:column="35"/></operator> <literal type="number" pos:line="670" pos:column="33">1<pos:position pos:line="670" pos:column="34"/></literal></expr>)<pos:position pos:line="670" pos:column="35"/></condition><then pos:line="670" pos:column="35"> <block pos:line="670" pos:column="36">{
        <if pos:line="671" pos:column="9">if <condition pos:line="671" pos:column="12">(<expr><name pos:line="671" pos:column="13">startup<pos:position pos:line="671" pos:column="20"/></name></expr>)<pos:position pos:line="671" pos:column="21"/></condition><then pos:line="671" pos:column="21"> <block pos:line="671" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="672" pos:column="13">ap_log_error<pos:position pos:line="672" pos:column="25"/></name><argument_list pos:line="672" pos:column="25">(<argument><expr><name pos:line="672" pos:column="26">APLOG_MARK<pos:position pos:line="672" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="672" pos:column="38">APLOG_WARNING<pos:position pos:line="672" pos:column="51"/></name> <operator pos:line="672" pos:column="52">|<pos:position pos:line="672" pos:column="53"/></operator> <name pos:line="672" pos:column="54">APLOG_STARTUP<pos:position pos:line="672" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="672" pos:column="69">0<pos:position pos:line="672" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="672" pos:column="72">NULL<pos:position pos:line="672" pos:column="76"/></name></expr></argument>, <argument><expr><call><name pos:line="672" pos:column="78">APLOGNO<pos:position pos:line="672" pos:column="85"/></name><argument_list pos:line="672" pos:column="85">(<argument><expr><literal type="number" pos:line="672" pos:column="86">00182<pos:position pos:line="672" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="672" pos:column="92"/></argument_list></call>
                         <literal type="string" pos:line="673" pos:column="26">"WARNING: MaxRequestWorkers of %d not allowed, "<pos:position pos:line="673" pos:column="74"/></literal>
                         <literal type="string" pos:line="674" pos:column="26">"increasing to 1."<pos:position pos:line="674" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="674" pos:column="46">ap_daemons_limit<pos:position pos:line="674" pos:column="62"/></name></expr></argument>)<pos:position pos:line="674" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="674" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="675" pos:column="10"/></block></then> <else pos:line="675" pos:column="11">else <block pos:line="675" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="676" pos:column="13">ap_log_error<pos:position pos:line="676" pos:column="25"/></name><argument_list pos:line="676" pos:column="25">(<argument><expr><name pos:line="676" pos:column="26">APLOG_MARK<pos:position pos:line="676" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="676" pos:column="38">APLOG_WARNING<pos:position pos:line="676" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="676" pos:column="53">0<pos:position pos:line="676" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="676" pos:column="56">s<pos:position pos:line="676" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="676" pos:column="59">APLOGNO<pos:position pos:line="676" pos:column="66"/></name><argument_list pos:line="676" pos:column="66">(<argument><expr><literal type="number" pos:line="676" pos:column="67">00183<pos:position pos:line="676" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="676" pos:column="73"/></argument_list></call>
                         <literal type="string" pos:line="677" pos:column="26">"MaxRequestWorkers of %d not allowed, increasing to 1"<pos:position pos:line="677" pos:column="80"/></literal></expr></argument>,
                         <argument><expr><name pos:line="678" pos:column="26">ap_daemons_limit<pos:position pos:line="678" pos:column="42"/></name></expr></argument>)<pos:position pos:line="678" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="678" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="679" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="680" pos:column="9">ap_daemons_limit<pos:position pos:line="680" pos:column="25"/></name> <operator pos:line="680" pos:column="26">=<pos:position pos:line="680" pos:column="27"/></operator> <literal type="number" pos:line="680" pos:column="28">1<pos:position pos:line="680" pos:column="29"/></literal></expr>;<pos:position pos:line="680" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="681" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="683" pos:column="5">/* ap_daemons_to_start &gt; ap_daemons_limit checked in prefork_run() */</comment>
    <if pos:line="684" pos:column="5">if <condition pos:line="684" pos:column="8">(<expr><name pos:line="684" pos:column="9">ap_daemons_to_start<pos:position pos:line="684" pos:column="28"/></name> <operator pos:line="684" pos:column="29">&lt;<pos:position pos:line="684" pos:column="33"/></operator> <literal type="number" pos:line="684" pos:column="31">0<pos:position pos:line="684" pos:column="32"/></literal></expr>)<pos:position pos:line="684" pos:column="33"/></condition><then pos:line="684" pos:column="33"> <block pos:line="684" pos:column="34">{
        <if pos:line="685" pos:column="9">if <condition pos:line="685" pos:column="12">(<expr><name pos:line="685" pos:column="13">startup<pos:position pos:line="685" pos:column="20"/></name></expr>)<pos:position pos:line="685" pos:column="21"/></condition><then pos:line="685" pos:column="21"> <block pos:line="685" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="686" pos:column="13">ap_log_error<pos:position pos:line="686" pos:column="25"/></name><argument_list pos:line="686" pos:column="25">(<argument><expr><name pos:line="686" pos:column="26">APLOG_MARK<pos:position pos:line="686" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="686" pos:column="38">APLOG_WARNING<pos:position pos:line="686" pos:column="51"/></name> <operator pos:line="686" pos:column="52">|<pos:position pos:line="686" pos:column="53"/></operator> <name pos:line="686" pos:column="54">APLOG_STARTUP<pos:position pos:line="686" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="686" pos:column="69">0<pos:position pos:line="686" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="686" pos:column="72">NULL<pos:position pos:line="686" pos:column="76"/></name></expr></argument>, <argument><expr><call><name pos:line="686" pos:column="78">APLOGNO<pos:position pos:line="686" pos:column="85"/></name><argument_list pos:line="686" pos:column="85">(<argument><expr><literal type="number" pos:line="686" pos:column="86">00184<pos:position pos:line="686" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="686" pos:column="92"/></argument_list></call>
                         <literal type="string" pos:line="687" pos:column="26">"WARNING: StartServers of %d not allowed, "<pos:position pos:line="687" pos:column="69"/></literal>
                         <literal type="string" pos:line="688" pos:column="26">"increasing to 1."<pos:position pos:line="688" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="688" pos:column="46">ap_daemons_to_start<pos:position pos:line="688" pos:column="65"/></name></expr></argument>)<pos:position pos:line="688" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="688" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="689" pos:column="10"/></block></then> <else pos:line="689" pos:column="11">else <block pos:line="689" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="690" pos:column="13">ap_log_error<pos:position pos:line="690" pos:column="25"/></name><argument_list pos:line="690" pos:column="25">(<argument><expr><name pos:line="690" pos:column="26">APLOG_MARK<pos:position pos:line="690" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="690" pos:column="38">APLOG_WARNING<pos:position pos:line="690" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="690" pos:column="53">0<pos:position pos:line="690" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="690" pos:column="56">s<pos:position pos:line="690" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="690" pos:column="59">APLOGNO<pos:position pos:line="690" pos:column="66"/></name><argument_list pos:line="690" pos:column="66">(<argument><expr><literal type="number" pos:line="690" pos:column="67">00185<pos:position pos:line="690" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="690" pos:column="73"/></argument_list></call>
                         <literal type="string" pos:line="691" pos:column="26">"StartServers of %d not allowed, increasing to 1"<pos:position pos:line="691" pos:column="75"/></literal></expr></argument>,
                         <argument><expr><name pos:line="692" pos:column="26">ap_daemons_to_start<pos:position pos:line="692" pos:column="45"/></name></expr></argument>)<pos:position pos:line="692" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="692" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="693" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="694" pos:column="9">ap_daemons_to_start<pos:position pos:line="694" pos:column="28"/></name> <operator pos:line="694" pos:column="29">=<pos:position pos:line="694" pos:column="30"/></operator> <literal type="number" pos:line="694" pos:column="31">1<pos:position pos:line="694" pos:column="32"/></literal></expr>;<pos:position pos:line="694" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="695" pos:column="6"/></block></then></if>

    <if pos:line="697" pos:column="5">if <condition pos:line="697" pos:column="8">(<expr><name pos:line="697" pos:column="9">ap_daemons_min_free<pos:position pos:line="697" pos:column="28"/></name> <operator pos:line="697" pos:column="29">&lt;<pos:position pos:line="697" pos:column="33"/></operator> <literal type="number" pos:line="697" pos:column="31">1<pos:position pos:line="697" pos:column="32"/></literal></expr>)<pos:position pos:line="697" pos:column="33"/></condition><then pos:line="697" pos:column="33"> <block pos:line="697" pos:column="34">{
        <if pos:line="698" pos:column="9">if <condition pos:line="698" pos:column="12">(<expr><name pos:line="698" pos:column="13">startup<pos:position pos:line="698" pos:column="20"/></name></expr>)<pos:position pos:line="698" pos:column="21"/></condition><then pos:line="698" pos:column="21"> <block pos:line="698" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="699" pos:column="13">ap_log_error<pos:position pos:line="699" pos:column="25"/></name><argument_list pos:line="699" pos:column="25">(<argument><expr><name pos:line="699" pos:column="26">APLOG_MARK<pos:position pos:line="699" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="699" pos:column="38">APLOG_WARNING<pos:position pos:line="699" pos:column="51"/></name> <operator pos:line="699" pos:column="52">|<pos:position pos:line="699" pos:column="53"/></operator> <name pos:line="699" pos:column="54">APLOG_STARTUP<pos:position pos:line="699" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="699" pos:column="69">0<pos:position pos:line="699" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="699" pos:column="72">NULL<pos:position pos:line="699" pos:column="76"/></name></expr></argument>, <argument><expr><call><name pos:line="699" pos:column="78">APLOGNO<pos:position pos:line="699" pos:column="85"/></name><argument_list pos:line="699" pos:column="85">(<argument><expr><literal type="number" pos:line="699" pos:column="86">00186<pos:position pos:line="699" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="699" pos:column="92"/></argument_list></call>
                         <literal type="string" pos:line="700" pos:column="26">"WARNING: MinSpareServers of %d not allowed, "<pos:position pos:line="700" pos:column="72"/></literal>
                         <literal type="string" pos:line="701" pos:column="26">"increasing to 1"<pos:position pos:line="701" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="701" pos:column="45">ap_daemons_min_free<pos:position pos:line="701" pos:column="64"/></name></expr></argument>)<pos:position pos:line="701" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="701" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="702" pos:column="13">ap_log_error<pos:position pos:line="702" pos:column="25"/></name><argument_list pos:line="702" pos:column="25">(<argument><expr><name pos:line="702" pos:column="26">APLOG_MARK<pos:position pos:line="702" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="702" pos:column="38">APLOG_WARNING<pos:position pos:line="702" pos:column="51"/></name> <operator pos:line="702" pos:column="52">|<pos:position pos:line="702" pos:column="53"/></operator> <name pos:line="702" pos:column="54">APLOG_STARTUP<pos:position pos:line="702" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="702" pos:column="69">0<pos:position pos:line="702" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="702" pos:column="72">NULL<pos:position pos:line="702" pos:column="76"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="703" pos:column="26">" to avoid almost certain server failure."<pos:position pos:line="703" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="703" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="703" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="704" pos:column="13">ap_log_error<pos:position pos:line="704" pos:column="25"/></name><argument_list pos:line="704" pos:column="25">(<argument><expr><name pos:line="704" pos:column="26">APLOG_MARK<pos:position pos:line="704" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="704" pos:column="38">APLOG_WARNING<pos:position pos:line="704" pos:column="51"/></name> <operator pos:line="704" pos:column="52">|<pos:position pos:line="704" pos:column="53"/></operator> <name pos:line="704" pos:column="54">APLOG_STARTUP<pos:position pos:line="704" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="704" pos:column="69">0<pos:position pos:line="704" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="704" pos:column="72">NULL<pos:position pos:line="704" pos:column="76"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="705" pos:column="26">" Please read the documentation."<pos:position pos:line="705" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="705" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="705" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="706" pos:column="10"/></block></then> <else pos:line="706" pos:column="11">else <block pos:line="706" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="707" pos:column="13">ap_log_error<pos:position pos:line="707" pos:column="25"/></name><argument_list pos:line="707" pos:column="25">(<argument><expr><name pos:line="707" pos:column="26">APLOG_MARK<pos:position pos:line="707" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="707" pos:column="38">APLOG_WARNING<pos:position pos:line="707" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="707" pos:column="53">0<pos:position pos:line="707" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="707" pos:column="56">s<pos:position pos:line="707" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="707" pos:column="59">APLOGNO<pos:position pos:line="707" pos:column="66"/></name><argument_list pos:line="707" pos:column="66">(<argument><expr><literal type="number" pos:line="707" pos:column="67">00187<pos:position pos:line="707" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="707" pos:column="73"/></argument_list></call>
                         <literal type="string" pos:line="708" pos:column="26">"MinSpareServers of %d not allowed, increasing to 1"<pos:position pos:line="708" pos:column="78"/></literal></expr></argument>,
                         <argument><expr><name pos:line="709" pos:column="26">ap_daemons_min_free<pos:position pos:line="709" pos:column="45"/></name></expr></argument>)<pos:position pos:line="709" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="709" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="710" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="711" pos:column="9">ap_daemons_min_free<pos:position pos:line="711" pos:column="28"/></name> <operator pos:line="711" pos:column="29">=<pos:position pos:line="711" pos:column="30"/></operator> <literal type="number" pos:line="711" pos:column="31">1<pos:position pos:line="711" pos:column="32"/></literal></expr>;<pos:position pos:line="711" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="712" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="714" pos:column="5">/* ap_daemons_max_free &lt; ap_daemons_min_free + 1 checked in prefork_run() */</comment>

    <return pos:line="716" pos:column="5">return <expr><name pos:line="716" pos:column="12">OK<pos:position pos:line="716" pos:column="14"/></name></expr>;<pos:position pos:line="716" pos:column="15"/></return>
}<pos:position pos:line="717" pos:column="2"/></block></function>

<function><specifier pos:line="719" pos:column="1">static<pos:position pos:line="719" pos:column="7"/></specifier> <type><name pos:line="719" pos:column="8">void<pos:position pos:line="719" pos:column="12"/></name></type> <name pos:line="719" pos:column="13">prefork_hooks<pos:position pos:line="719" pos:column="26"/></name><parameter_list pos:line="719" pos:column="26">(<parameter><decl><type><name pos:line="719" pos:column="27">apr_pool_t<pos:position pos:line="719" pos:column="37"/></name> <modifier pos:line="719" pos:column="38">*<pos:position pos:line="719" pos:column="39"/></modifier></type><name pos:line="719" pos:column="39">p<pos:position pos:line="719" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="719" pos:column="41"/></parameter_list>
<block pos:line="720" pos:column="1">{
    <comment type="block" pos:line="721" pos:column="5">/* Our open_logs hook function must run before the core's, or stderr
     * will be redirected to a file, and the messages won't print to the
     * console.
     */</comment>
    <decl_stmt><decl><specifier pos:line="725" pos:column="5">static<pos:position pos:line="725" pos:column="11"/></specifier> <type><specifier pos:line="725" pos:column="12">const<pos:position pos:line="725" pos:column="17"/></specifier> <name pos:line="725" pos:column="18">char<pos:position pos:line="725" pos:column="22"/></name> <modifier pos:line="725" pos:column="23">*<pos:position pos:line="725" pos:column="24"/></modifier><specifier pos:line="725" pos:column="24">const<pos:position pos:line="725" pos:column="29"/></specifier></type> <name><name pos:line="725" pos:column="30">aszSucc<pos:position pos:line="725" pos:column="37"/></name><index pos:line="725" pos:column="37">[]<pos:position pos:line="725" pos:column="39"/></index></name> <init pos:line="725" pos:column="40">= <expr><block pos:line="725" pos:column="42">{<expr><literal type="string" pos:line="725" pos:column="43">"core.c"<pos:position pos:line="725" pos:column="51"/></literal></expr>, <expr><name pos:line="725" pos:column="53">NULL<pos:position pos:line="725" pos:column="57"/></name></expr>}<pos:position pos:line="725" pos:column="58"/></block></expr></init></decl>;<pos:position pos:line="725" pos:column="59"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="727" pos:column="5">ap_hook_open_logs<pos:position pos:line="727" pos:column="22"/></name><argument_list pos:line="727" pos:column="22">(<argument><expr><name pos:line="727" pos:column="23">prefork_open_logs<pos:position pos:line="727" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="727" pos:column="42">NULL<pos:position pos:line="727" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="727" pos:column="48">aszSucc<pos:position pos:line="727" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="727" pos:column="57">APR_HOOK_REALLY_FIRST<pos:position pos:line="727" pos:column="78"/></name></expr></argument>)<pos:position pos:line="727" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="727" pos:column="80"/></expr_stmt>
    <comment type="block" pos:line="728" pos:column="5">/* we need to set the MPM state before other pre-config hooks use MPM query
     * to retrieve it, so register as REALLY_FIRST
     */</comment>
    <expr_stmt><expr><call><name pos:line="731" pos:column="5">ap_hook_pre_config<pos:position pos:line="731" pos:column="23"/></name><argument_list pos:line="731" pos:column="23">(<argument><expr><name pos:line="731" pos:column="24">prefork_pre_config<pos:position pos:line="731" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="731" pos:column="44">NULL<pos:position pos:line="731" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="731" pos:column="50">NULL<pos:position pos:line="731" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="731" pos:column="56">APR_HOOK_REALLY_FIRST<pos:position pos:line="731" pos:column="77"/></name></expr></argument>)<pos:position pos:line="731" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="731" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="732" pos:column="5">ap_hook_check_config<pos:position pos:line="732" pos:column="25"/></name><argument_list pos:line="732" pos:column="25">(<argument><expr><name pos:line="732" pos:column="26">prefork_check_config<pos:position pos:line="732" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="732" pos:column="48">NULL<pos:position pos:line="732" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="732" pos:column="54">NULL<pos:position pos:line="732" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="732" pos:column="60">APR_HOOK_MIDDLE<pos:position pos:line="732" pos:column="75"/></name></expr></argument>)<pos:position pos:line="732" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="732" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="733" pos:column="5">ap_hook_mpm<pos:position pos:line="733" pos:column="16"/></name><argument_list pos:line="733" pos:column="16">(<argument><expr><name pos:line="733" pos:column="17">prefork_run<pos:position pos:line="733" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="733" pos:column="30">NULL<pos:position pos:line="733" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="733" pos:column="36">NULL<pos:position pos:line="733" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="733" pos:column="42">APR_HOOK_MIDDLE<pos:position pos:line="733" pos:column="57"/></name></expr></argument>)<pos:position pos:line="733" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="733" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="734" pos:column="5">ap_hook_mpm_query<pos:position pos:line="734" pos:column="22"/></name><argument_list pos:line="734" pos:column="22">(<argument><expr><name pos:line="734" pos:column="23">prefork_query<pos:position pos:line="734" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="734" pos:column="38">NULL<pos:position pos:line="734" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="734" pos:column="44">NULL<pos:position pos:line="734" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="734" pos:column="50">APR_HOOK_MIDDLE<pos:position pos:line="734" pos:column="65"/></name></expr></argument>)<pos:position pos:line="734" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="734" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="735" pos:column="5">ap_hook_mpm_get_name<pos:position pos:line="735" pos:column="25"/></name><argument_list pos:line="735" pos:column="25">(<argument><expr><name pos:line="735" pos:column="26">prefork_get_name<pos:position pos:line="735" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="735" pos:column="44">NULL<pos:position pos:line="735" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="735" pos:column="50">NULL<pos:position pos:line="735" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="735" pos:column="56">APR_HOOK_MIDDLE<pos:position pos:line="735" pos:column="71"/></name></expr></argument>)<pos:position pos:line="735" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="735" pos:column="73"/></expr_stmt>
}<pos:position pos:line="736" pos:column="2"/></block></function>

<function><specifier pos:line="738" pos:column="1">static<pos:position pos:line="738" pos:column="7"/></specifier> <type><specifier pos:line="738" pos:column="8">const<pos:position pos:line="738" pos:column="13"/></specifier> <name pos:line="738" pos:column="14">char<pos:position pos:line="738" pos:column="18"/></name> <modifier pos:line="738" pos:column="19">*<pos:position pos:line="738" pos:column="20"/></modifier></type><name pos:line="738" pos:column="20">set_daemons_to_start<pos:position pos:line="738" pos:column="40"/></name><parameter_list pos:line="738" pos:column="40">(<parameter><decl><type><name pos:line="738" pos:column="41">cmd_parms<pos:position pos:line="738" pos:column="50"/></name> <modifier pos:line="738" pos:column="51">*<pos:position pos:line="738" pos:column="52"/></modifier></type><name pos:line="738" pos:column="52">cmd<pos:position pos:line="738" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="738" pos:column="57">void<pos:position pos:line="738" pos:column="61"/></name> <modifier pos:line="738" pos:column="62">*<pos:position pos:line="738" pos:column="63"/></modifier></type><name pos:line="738" pos:column="63">dummy<pos:position pos:line="738" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="738" pos:column="70">const<pos:position pos:line="738" pos:column="75"/></specifier> <name pos:line="738" pos:column="76">char<pos:position pos:line="738" pos:column="80"/></name> <modifier pos:line="738" pos:column="81">*<pos:position pos:line="738" pos:column="82"/></modifier></type><name pos:line="738" pos:column="82">arg<pos:position pos:line="738" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="738" pos:column="86"/></parameter_list>
<block pos:line="739" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="740" pos:column="5">const<pos:position pos:line="740" pos:column="10"/></specifier> <name pos:line="740" pos:column="11">char<pos:position pos:line="740" pos:column="15"/></name> <modifier pos:line="740" pos:column="16">*<pos:position pos:line="740" pos:column="17"/></modifier></type><name pos:line="740" pos:column="17">err<pos:position pos:line="740" pos:column="20"/></name> <init pos:line="740" pos:column="21">= <expr><call><name pos:line="740" pos:column="23">ap_check_cmd_context<pos:position pos:line="740" pos:column="43"/></name><argument_list pos:line="740" pos:column="43">(<argument><expr><name pos:line="740" pos:column="44">cmd<pos:position pos:line="740" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="740" pos:column="49">GLOBAL_ONLY<pos:position pos:line="740" pos:column="60"/></name></expr></argument>)<pos:position pos:line="740" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="740" pos:column="62"/></decl_stmt>
    <if pos:line="741" pos:column="5">if <condition pos:line="741" pos:column="8">(<expr><name pos:line="741" pos:column="9">err<pos:position pos:line="741" pos:column="12"/></name> <operator pos:line="741" pos:column="13">!=<pos:position pos:line="741" pos:column="15"/></operator> <name pos:line="741" pos:column="16">NULL<pos:position pos:line="741" pos:column="20"/></name></expr>)<pos:position pos:line="741" pos:column="21"/></condition><then pos:line="741" pos:column="21"> <block pos:line="741" pos:column="22">{
        <return pos:line="742" pos:column="9">return <expr><name pos:line="742" pos:column="16">err<pos:position pos:line="742" pos:column="19"/></name></expr>;<pos:position pos:line="742" pos:column="20"/></return>
    }<pos:position pos:line="743" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="745" pos:column="5">ap_daemons_to_start<pos:position pos:line="745" pos:column="24"/></name> <operator pos:line="745" pos:column="25">=<pos:position pos:line="745" pos:column="26"/></operator> <call><name pos:line="745" pos:column="27">atoi<pos:position pos:line="745" pos:column="31"/></name><argument_list pos:line="745" pos:column="31">(<argument><expr><name pos:line="745" pos:column="32">arg<pos:position pos:line="745" pos:column="35"/></name></expr></argument>)<pos:position pos:line="745" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="745" pos:column="37"/></expr_stmt>
    <return pos:line="746" pos:column="5">return <expr><name pos:line="746" pos:column="12">NULL<pos:position pos:line="746" pos:column="16"/></name></expr>;<pos:position pos:line="746" pos:column="17"/></return>
}<pos:position pos:line="747" pos:column="2"/></block></function>

<function><specifier pos:line="749" pos:column="1">static<pos:position pos:line="749" pos:column="7"/></specifier> <type><specifier pos:line="749" pos:column="8">const<pos:position pos:line="749" pos:column="13"/></specifier> <name pos:line="749" pos:column="14">char<pos:position pos:line="749" pos:column="18"/></name> <modifier pos:line="749" pos:column="19">*<pos:position pos:line="749" pos:column="20"/></modifier></type><name pos:line="749" pos:column="20">set_min_free_servers<pos:position pos:line="749" pos:column="40"/></name><parameter_list pos:line="749" pos:column="40">(<parameter><decl><type><name pos:line="749" pos:column="41">cmd_parms<pos:position pos:line="749" pos:column="50"/></name> <modifier pos:line="749" pos:column="51">*<pos:position pos:line="749" pos:column="52"/></modifier></type><name pos:line="749" pos:column="52">cmd<pos:position pos:line="749" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="749" pos:column="57">void<pos:position pos:line="749" pos:column="61"/></name> <modifier pos:line="749" pos:column="62">*<pos:position pos:line="749" pos:column="63"/></modifier></type><name pos:line="749" pos:column="63">dummy<pos:position pos:line="749" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="749" pos:column="70">const<pos:position pos:line="749" pos:column="75"/></specifier> <name pos:line="749" pos:column="76">char<pos:position pos:line="749" pos:column="80"/></name> <modifier pos:line="749" pos:column="81">*<pos:position pos:line="749" pos:column="82"/></modifier></type><name pos:line="749" pos:column="82">arg<pos:position pos:line="749" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="749" pos:column="86"/></parameter_list>
<block pos:line="750" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="751" pos:column="5">const<pos:position pos:line="751" pos:column="10"/></specifier> <name pos:line="751" pos:column="11">char<pos:position pos:line="751" pos:column="15"/></name> <modifier pos:line="751" pos:column="16">*<pos:position pos:line="751" pos:column="17"/></modifier></type><name pos:line="751" pos:column="17">err<pos:position pos:line="751" pos:column="20"/></name> <init pos:line="751" pos:column="21">= <expr><call><name pos:line="751" pos:column="23">ap_check_cmd_context<pos:position pos:line="751" pos:column="43"/></name><argument_list pos:line="751" pos:column="43">(<argument><expr><name pos:line="751" pos:column="44">cmd<pos:position pos:line="751" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="751" pos:column="49">GLOBAL_ONLY<pos:position pos:line="751" pos:column="60"/></name></expr></argument>)<pos:position pos:line="751" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="751" pos:column="62"/></decl_stmt>
    <if pos:line="752" pos:column="5">if <condition pos:line="752" pos:column="8">(<expr><name pos:line="752" pos:column="9">err<pos:position pos:line="752" pos:column="12"/></name> <operator pos:line="752" pos:column="13">!=<pos:position pos:line="752" pos:column="15"/></operator> <name pos:line="752" pos:column="16">NULL<pos:position pos:line="752" pos:column="20"/></name></expr>)<pos:position pos:line="752" pos:column="21"/></condition><then pos:line="752" pos:column="21"> <block pos:line="752" pos:column="22">{
        <return pos:line="753" pos:column="9">return <expr><name pos:line="753" pos:column="16">err<pos:position pos:line="753" pos:column="19"/></name></expr>;<pos:position pos:line="753" pos:column="20"/></return>
    }<pos:position pos:line="754" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="756" pos:column="5">ap_daemons_min_free<pos:position pos:line="756" pos:column="24"/></name> <operator pos:line="756" pos:column="25">=<pos:position pos:line="756" pos:column="26"/></operator> <call><name pos:line="756" pos:column="27">atoi<pos:position pos:line="756" pos:column="31"/></name><argument_list pos:line="756" pos:column="31">(<argument><expr><name pos:line="756" pos:column="32">arg<pos:position pos:line="756" pos:column="35"/></name></expr></argument>)<pos:position pos:line="756" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="756" pos:column="37"/></expr_stmt>
    <return pos:line="757" pos:column="5">return <expr><name pos:line="757" pos:column="12">NULL<pos:position pos:line="757" pos:column="16"/></name></expr>;<pos:position pos:line="757" pos:column="17"/></return>
}<pos:position pos:line="758" pos:column="2"/></block></function>

<function><specifier pos:line="760" pos:column="1">static<pos:position pos:line="760" pos:column="7"/></specifier> <type><specifier pos:line="760" pos:column="8">const<pos:position pos:line="760" pos:column="13"/></specifier> <name pos:line="760" pos:column="14">char<pos:position pos:line="760" pos:column="18"/></name> <modifier pos:line="760" pos:column="19">*<pos:position pos:line="760" pos:column="20"/></modifier></type><name pos:line="760" pos:column="20">set_max_free_servers<pos:position pos:line="760" pos:column="40"/></name><parameter_list pos:line="760" pos:column="40">(<parameter><decl><type><name pos:line="760" pos:column="41">cmd_parms<pos:position pos:line="760" pos:column="50"/></name> <modifier pos:line="760" pos:column="51">*<pos:position pos:line="760" pos:column="52"/></modifier></type><name pos:line="760" pos:column="52">cmd<pos:position pos:line="760" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="760" pos:column="57">void<pos:position pos:line="760" pos:column="61"/></name> <modifier pos:line="760" pos:column="62">*<pos:position pos:line="760" pos:column="63"/></modifier></type><name pos:line="760" pos:column="63">dummy<pos:position pos:line="760" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="760" pos:column="70">const<pos:position pos:line="760" pos:column="75"/></specifier> <name pos:line="760" pos:column="76">char<pos:position pos:line="760" pos:column="80"/></name> <modifier pos:line="760" pos:column="81">*<pos:position pos:line="760" pos:column="82"/></modifier></type><name pos:line="760" pos:column="82">arg<pos:position pos:line="760" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="760" pos:column="86"/></parameter_list>
<block pos:line="761" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="762" pos:column="5">const<pos:position pos:line="762" pos:column="10"/></specifier> <name pos:line="762" pos:column="11">char<pos:position pos:line="762" pos:column="15"/></name> <modifier pos:line="762" pos:column="16">*<pos:position pos:line="762" pos:column="17"/></modifier></type><name pos:line="762" pos:column="17">err<pos:position pos:line="762" pos:column="20"/></name> <init pos:line="762" pos:column="21">= <expr><call><name pos:line="762" pos:column="23">ap_check_cmd_context<pos:position pos:line="762" pos:column="43"/></name><argument_list pos:line="762" pos:column="43">(<argument><expr><name pos:line="762" pos:column="44">cmd<pos:position pos:line="762" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="762" pos:column="49">GLOBAL_ONLY<pos:position pos:line="762" pos:column="60"/></name></expr></argument>)<pos:position pos:line="762" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="762" pos:column="62"/></decl_stmt>
    <if pos:line="763" pos:column="5">if <condition pos:line="763" pos:column="8">(<expr><name pos:line="763" pos:column="9">err<pos:position pos:line="763" pos:column="12"/></name> <operator pos:line="763" pos:column="13">!=<pos:position pos:line="763" pos:column="15"/></operator> <name pos:line="763" pos:column="16">NULL<pos:position pos:line="763" pos:column="20"/></name></expr>)<pos:position pos:line="763" pos:column="21"/></condition><then pos:line="763" pos:column="21"> <block pos:line="763" pos:column="22">{
        <return pos:line="764" pos:column="9">return <expr><name pos:line="764" pos:column="16">err<pos:position pos:line="764" pos:column="19"/></name></expr>;<pos:position pos:line="764" pos:column="20"/></return>
    }<pos:position pos:line="765" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="767" pos:column="5">ap_daemons_max_free<pos:position pos:line="767" pos:column="24"/></name> <operator pos:line="767" pos:column="25">=<pos:position pos:line="767" pos:column="26"/></operator> <call><name pos:line="767" pos:column="27">atoi<pos:position pos:line="767" pos:column="31"/></name><argument_list pos:line="767" pos:column="31">(<argument><expr><name pos:line="767" pos:column="32">arg<pos:position pos:line="767" pos:column="35"/></name></expr></argument>)<pos:position pos:line="767" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="767" pos:column="37"/></expr_stmt>
    <return pos:line="768" pos:column="5">return <expr><name pos:line="768" pos:column="12">NULL<pos:position pos:line="768" pos:column="16"/></name></expr>;<pos:position pos:line="768" pos:column="17"/></return>
}<pos:position pos:line="769" pos:column="2"/></block></function>

<function><specifier pos:line="771" pos:column="1">static<pos:position pos:line="771" pos:column="7"/></specifier> <type><specifier pos:line="771" pos:column="8">const<pos:position pos:line="771" pos:column="13"/></specifier> <name pos:line="771" pos:column="14">char<pos:position pos:line="771" pos:column="18"/></name> <modifier pos:line="771" pos:column="19">*<pos:position pos:line="771" pos:column="20"/></modifier></type><name pos:line="771" pos:column="20">set_max_clients<pos:position pos:line="771" pos:column="35"/></name> <parameter_list pos:line="771" pos:column="36">(<parameter><decl><type><name pos:line="771" pos:column="37">cmd_parms<pos:position pos:line="771" pos:column="46"/></name> <modifier pos:line="771" pos:column="47">*<pos:position pos:line="771" pos:column="48"/></modifier></type><name pos:line="771" pos:column="48">cmd<pos:position pos:line="771" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="771" pos:column="53">void<pos:position pos:line="771" pos:column="57"/></name> <modifier pos:line="771" pos:column="58">*<pos:position pos:line="771" pos:column="59"/></modifier></type><name pos:line="771" pos:column="59">dummy<pos:position pos:line="771" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="771" pos:column="66">const<pos:position pos:line="771" pos:column="71"/></specifier> <name pos:line="771" pos:column="72">char<pos:position pos:line="771" pos:column="76"/></name> <modifier pos:line="771" pos:column="77">*<pos:position pos:line="771" pos:column="78"/></modifier></type><name pos:line="771" pos:column="78">arg<pos:position pos:line="771" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="771" pos:column="82"/></parameter_list>
<block pos:line="772" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="773" pos:column="5">const<pos:position pos:line="773" pos:column="10"/></specifier> <name pos:line="773" pos:column="11">char<pos:position pos:line="773" pos:column="15"/></name> <modifier pos:line="773" pos:column="16">*<pos:position pos:line="773" pos:column="17"/></modifier></type><name pos:line="773" pos:column="17">err<pos:position pos:line="773" pos:column="20"/></name> <init pos:line="773" pos:column="21">= <expr><call><name pos:line="773" pos:column="23">ap_check_cmd_context<pos:position pos:line="773" pos:column="43"/></name><argument_list pos:line="773" pos:column="43">(<argument><expr><name pos:line="773" pos:column="44">cmd<pos:position pos:line="773" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="773" pos:column="49">GLOBAL_ONLY<pos:position pos:line="773" pos:column="60"/></name></expr></argument>)<pos:position pos:line="773" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="773" pos:column="62"/></decl_stmt>
    <if pos:line="774" pos:column="5">if <condition pos:line="774" pos:column="8">(<expr><name pos:line="774" pos:column="9">err<pos:position pos:line="774" pos:column="12"/></name> <operator pos:line="774" pos:column="13">!=<pos:position pos:line="774" pos:column="15"/></operator> <name pos:line="774" pos:column="16">NULL<pos:position pos:line="774" pos:column="20"/></name></expr>)<pos:position pos:line="774" pos:column="21"/></condition><then pos:line="774" pos:column="21"> <block pos:line="774" pos:column="22">{
        <return pos:line="775" pos:column="9">return <expr><name pos:line="775" pos:column="16">err<pos:position pos:line="775" pos:column="19"/></name></expr>;<pos:position pos:line="775" pos:column="20"/></return>
    }<pos:position pos:line="776" pos:column="6"/></block></then></if>
    <if pos:line="777" pos:column="5">if <condition pos:line="777" pos:column="8">(<expr><operator pos:line="777" pos:column="9">!<pos:position pos:line="777" pos:column="10"/></operator><call><name pos:line="777" pos:column="10">strcasecmp<pos:position pos:line="777" pos:column="20"/></name><argument_list pos:line="777" pos:column="20">(<argument><expr><name><name pos:line="777" pos:column="21">cmd<pos:position pos:line="777" pos:column="24"/></name><operator pos:line="777" pos:column="24">-&gt;<pos:position pos:line="777" pos:column="29"/></operator><name pos:line="777" pos:column="26">cmd<pos:position pos:line="777" pos:column="29"/></name><operator pos:line="777" pos:column="29">-&gt;<pos:position pos:line="777" pos:column="34"/></operator><name pos:line="777" pos:column="31">name<pos:position pos:line="777" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="777" pos:column="37">"MaxClients"<pos:position pos:line="777" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="777" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="777" pos:column="51"/></condition><then pos:line="777" pos:column="51"> <block pos:line="777" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="778" pos:column="9">ap_log_error<pos:position pos:line="778" pos:column="21"/></name><argument_list pos:line="778" pos:column="21">(<argument><expr><name pos:line="778" pos:column="22">APLOG_MARK<pos:position pos:line="778" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="778" pos:column="34">APLOG_INFO<pos:position pos:line="778" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="778" pos:column="46">0<pos:position pos:line="778" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="778" pos:column="49">NULL<pos:position pos:line="778" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="778" pos:column="55">APLOGNO<pos:position pos:line="778" pos:column="62"/></name><argument_list pos:line="778" pos:column="62">(<argument><expr><literal type="number" pos:line="778" pos:column="63">00188<pos:position pos:line="778" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="778" pos:column="69"/></argument_list></call>
                     <literal type="string" pos:line="779" pos:column="22">"MaxClients is deprecated, use MaxRequestWorkers "<pos:position pos:line="779" pos:column="72"/></literal>
                     <literal type="string" pos:line="780" pos:column="22">"instead."<pos:position pos:line="780" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="780" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="780" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="781" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="782" pos:column="5">ap_daemons_limit<pos:position pos:line="782" pos:column="21"/></name> <operator pos:line="782" pos:column="22">=<pos:position pos:line="782" pos:column="23"/></operator> <call><name pos:line="782" pos:column="24">atoi<pos:position pos:line="782" pos:column="28"/></name><argument_list pos:line="782" pos:column="28">(<argument><expr><name pos:line="782" pos:column="29">arg<pos:position pos:line="782" pos:column="32"/></name></expr></argument>)<pos:position pos:line="782" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="782" pos:column="34"/></expr_stmt>
    <return pos:line="783" pos:column="5">return <expr><name pos:line="783" pos:column="12">NULL<pos:position pos:line="783" pos:column="16"/></name></expr>;<pos:position pos:line="783" pos:column="17"/></return>
}<pos:position pos:line="784" pos:column="2"/></block></function>

<function><specifier pos:line="786" pos:column="1">static<pos:position pos:line="786" pos:column="7"/></specifier> <type><specifier pos:line="786" pos:column="8">const<pos:position pos:line="786" pos:column="13"/></specifier> <name pos:line="786" pos:column="14">char<pos:position pos:line="786" pos:column="18"/></name> <modifier pos:line="786" pos:column="19">*<pos:position pos:line="786" pos:column="20"/></modifier></type><name pos:line="786" pos:column="20">set_server_limit<pos:position pos:line="786" pos:column="36"/></name> <parameter_list pos:line="786" pos:column="37">(<parameter><decl><type><name pos:line="786" pos:column="38">cmd_parms<pos:position pos:line="786" pos:column="47"/></name> <modifier pos:line="786" pos:column="48">*<pos:position pos:line="786" pos:column="49"/></modifier></type><name pos:line="786" pos:column="49">cmd<pos:position pos:line="786" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="786" pos:column="54">void<pos:position pos:line="786" pos:column="58"/></name> <modifier pos:line="786" pos:column="59">*<pos:position pos:line="786" pos:column="60"/></modifier></type><name pos:line="786" pos:column="60">dummy<pos:position pos:line="786" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="786" pos:column="67">const<pos:position pos:line="786" pos:column="72"/></specifier> <name pos:line="786" pos:column="73">char<pos:position pos:line="786" pos:column="77"/></name> <modifier pos:line="786" pos:column="78">*<pos:position pos:line="786" pos:column="79"/></modifier></type><name pos:line="786" pos:column="79">arg<pos:position pos:line="786" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="786" pos:column="83"/></parameter_list>
<block pos:line="787" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="788" pos:column="5">const<pos:position pos:line="788" pos:column="10"/></specifier> <name pos:line="788" pos:column="11">char<pos:position pos:line="788" pos:column="15"/></name> <modifier pos:line="788" pos:column="16">*<pos:position pos:line="788" pos:column="17"/></modifier></type><name pos:line="788" pos:column="17">err<pos:position pos:line="788" pos:column="20"/></name> <init pos:line="788" pos:column="21">= <expr><call><name pos:line="788" pos:column="23">ap_check_cmd_context<pos:position pos:line="788" pos:column="43"/></name><argument_list pos:line="788" pos:column="43">(<argument><expr><name pos:line="788" pos:column="44">cmd<pos:position pos:line="788" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="788" pos:column="49">GLOBAL_ONLY<pos:position pos:line="788" pos:column="60"/></name></expr></argument>)<pos:position pos:line="788" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="788" pos:column="62"/></decl_stmt>
    <if pos:line="789" pos:column="5">if <condition pos:line="789" pos:column="8">(<expr><name pos:line="789" pos:column="9">err<pos:position pos:line="789" pos:column="12"/></name> <operator pos:line="789" pos:column="13">!=<pos:position pos:line="789" pos:column="15"/></operator> <name pos:line="789" pos:column="16">NULL<pos:position pos:line="789" pos:column="20"/></name></expr>)<pos:position pos:line="789" pos:column="21"/></condition><then pos:line="789" pos:column="21"> <block pos:line="789" pos:column="22">{
        <return pos:line="790" pos:column="9">return <expr><name pos:line="790" pos:column="16">err<pos:position pos:line="790" pos:column="19"/></name></expr>;<pos:position pos:line="790" pos:column="20"/></return>
    }<pos:position pos:line="791" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="793" pos:column="5">server_limit<pos:position pos:line="793" pos:column="17"/></name> <operator pos:line="793" pos:column="18">=<pos:position pos:line="793" pos:column="19"/></operator> <call><name pos:line="793" pos:column="20">atoi<pos:position pos:line="793" pos:column="24"/></name><argument_list pos:line="793" pos:column="24">(<argument><expr><name pos:line="793" pos:column="25">arg<pos:position pos:line="793" pos:column="28"/></name></expr></argument>)<pos:position pos:line="793" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="793" pos:column="30"/></expr_stmt>
    <return pos:line="794" pos:column="5">return <expr><name pos:line="794" pos:column="12">NULL<pos:position pos:line="794" pos:column="16"/></name></expr>;<pos:position pos:line="794" pos:column="17"/></return>
}<pos:position pos:line="795" pos:column="2"/></block></function>

<decl_stmt><decl><specifier pos:line="797" pos:column="1">static<pos:position pos:line="797" pos:column="7"/></specifier> <type><specifier pos:line="797" pos:column="8">const<pos:position pos:line="797" pos:column="13"/></specifier> <name pos:line="797" pos:column="14">command_rec<pos:position pos:line="797" pos:column="25"/></name></type> <name><name pos:line="797" pos:column="26">prefork_cmds<pos:position pos:line="797" pos:column="38"/></name><index pos:line="797" pos:column="38">[]<pos:position pos:line="797" pos:column="40"/></index></name> <init pos:line="797" pos:column="41">= <expr><block pos:line="797" pos:column="43">{
<expr><name pos:line="798" pos:column="1">LISTEN_COMMANDS<pos:position pos:line="798" pos:column="16"/></name></expr>,
<expr><call><name pos:line="799" pos:column="1">AP_INIT_TAKE1<pos:position pos:line="799" pos:column="14"/></name><argument_list pos:line="799" pos:column="14">(<argument><expr><literal type="string" pos:line="799" pos:column="15">"StartServers"<pos:position pos:line="799" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="799" pos:column="31">set_daemons_to_start<pos:position pos:line="799" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="799" pos:column="53">NULL<pos:position pos:line="799" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="799" pos:column="59">RSRC_CONF<pos:position pos:line="799" pos:column="68"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="800" pos:column="15">"Number of child processes launched at server startup"<pos:position pos:line="800" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="800" pos:column="70"/></argument_list></call></expr>,
<expr><call><name pos:line="801" pos:column="1">AP_INIT_TAKE1<pos:position pos:line="801" pos:column="14"/></name><argument_list pos:line="801" pos:column="14">(<argument><expr><literal type="string" pos:line="801" pos:column="15">"MinSpareServers"<pos:position pos:line="801" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="801" pos:column="34">set_min_free_servers<pos:position pos:line="801" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="801" pos:column="56">NULL<pos:position pos:line="801" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="801" pos:column="62">RSRC_CONF<pos:position pos:line="801" pos:column="71"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="802" pos:column="15">"Minimum number of idle children, to handle request spikes"<pos:position pos:line="802" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="802" pos:column="75"/></argument_list></call></expr>,
<expr><call><name pos:line="803" pos:column="1">AP_INIT_TAKE1<pos:position pos:line="803" pos:column="14"/></name><argument_list pos:line="803" pos:column="14">(<argument><expr><literal type="string" pos:line="803" pos:column="15">"MaxSpareServers"<pos:position pos:line="803" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="803" pos:column="34">set_max_free_servers<pos:position pos:line="803" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="803" pos:column="56">NULL<pos:position pos:line="803" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="803" pos:column="62">RSRC_CONF<pos:position pos:line="803" pos:column="71"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="804" pos:column="15">"Maximum number of idle children"<pos:position pos:line="804" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="804" pos:column="49"/></argument_list></call></expr>,
<expr><call><name pos:line="805" pos:column="1">AP_INIT_TAKE1<pos:position pos:line="805" pos:column="14"/></name><argument_list pos:line="805" pos:column="14">(<argument><expr><literal type="string" pos:line="805" pos:column="15">"MaxClients"<pos:position pos:line="805" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="805" pos:column="29">set_max_clients<pos:position pos:line="805" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="805" pos:column="46">NULL<pos:position pos:line="805" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="805" pos:column="52">RSRC_CONF<pos:position pos:line="805" pos:column="61"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="806" pos:column="15">"Deprecated name of MaxRequestWorkers"<pos:position pos:line="806" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="806" pos:column="54"/></argument_list></call></expr>,
<expr><call><name pos:line="807" pos:column="1">AP_INIT_TAKE1<pos:position pos:line="807" pos:column="14"/></name><argument_list pos:line="807" pos:column="14">(<argument><expr><literal type="string" pos:line="807" pos:column="15">"MaxRequestWorkers"<pos:position pos:line="807" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="807" pos:column="36">set_max_clients<pos:position pos:line="807" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="807" pos:column="53">NULL<pos:position pos:line="807" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="807" pos:column="59">RSRC_CONF<pos:position pos:line="807" pos:column="68"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="808" pos:column="15">"Maximum number of children alive at the same time"<pos:position pos:line="808" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="808" pos:column="67"/></argument_list></call></expr>,
<expr><call><name pos:line="809" pos:column="1">AP_INIT_TAKE1<pos:position pos:line="809" pos:column="14"/></name><argument_list pos:line="809" pos:column="14">(<argument><expr><literal type="string" pos:line="809" pos:column="15">"ServerLimit"<pos:position pos:line="809" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="809" pos:column="30">set_server_limit<pos:position pos:line="809" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="809" pos:column="48">NULL<pos:position pos:line="809" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="809" pos:column="54">RSRC_CONF<pos:position pos:line="809" pos:column="63"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="810" pos:column="15">"Maximum value of MaxRequestWorkers for this run of Apache"<pos:position pos:line="810" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="810" pos:column="75"/></argument_list></call></expr>,
<expr><name pos:line="811" pos:column="1">AP_GRACEFUL_SHUTDOWN_TIMEOUT_COMMAND<pos:position pos:line="811" pos:column="37"/></name></expr>,
<expr><block pos:line="812" pos:column="1">{ <expr><name pos:line="812" pos:column="3">NULL<pos:position pos:line="812" pos:column="7"/></name></expr> }<pos:position pos:line="812" pos:column="9"/></block></expr>
}<pos:position pos:line="813" pos:column="2"/></block></expr></init></decl>;<pos:position pos:line="813" pos:column="3"/></decl_stmt>

<expr_stmt><expr><call><name pos:line="815" pos:column="1">AP_DECLARE_MODULE<pos:position pos:line="815" pos:column="18"/></name><argument_list pos:line="815" pos:column="18">(<argument><expr><name pos:line="815" pos:column="19">mpm_prefork<pos:position pos:line="815" pos:column="30"/></name></expr></argument>)<pos:position pos:line="815" pos:column="31"/></argument_list></call> <operator pos:line="815" pos:column="32">=<pos:position pos:line="815" pos:column="33"/></operator> <block pos:line="815" pos:column="34">{
    <expr><name pos:line="816" pos:column="5">MPM20_MODULE_STUFF<pos:position pos:line="816" pos:column="23"/></name></expr>,
    <expr><name pos:line="817" pos:column="5">NULL<pos:position pos:line="817" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="817" pos:column="33">/* hook to run before apache parses args */</comment>
    <expr><name pos:line="818" pos:column="5">NULL<pos:position pos:line="818" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="818" pos:column="33">/* create per-directory config structure */</comment>
    <expr><name pos:line="819" pos:column="5">NULL<pos:position pos:line="819" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="819" pos:column="33">/* merge per-directory config structures */</comment>
    <expr><name pos:line="820" pos:column="5">NULL<pos:position pos:line="820" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="820" pos:column="33">/* create per-server config structure */</comment>
    <expr><name pos:line="821" pos:column="5">NULL<pos:position pos:line="821" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="821" pos:column="33">/* merge per-server config structures */</comment>
    <expr><name pos:line="822" pos:column="5">prefork_cmds<pos:position pos:line="822" pos:column="17"/></name></expr>,               <comment type="block" pos:line="822" pos:column="33">/* command apr_table_t */</comment>
    <expr><name pos:line="823" pos:column="5">prefork_hooks<pos:position pos:line="823" pos:column="18"/></name></expr>,              <comment type="block" pos:line="823" pos:column="33">/* register hooks */</comment>
}<pos:position pos:line="824" pos:column="2"/></block></expr>;<pos:position pos:line="824" pos:column="3"/></expr_stmt></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_357.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier> <specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier></type> <name><name pos:line="1" pos:column="39">argv<pos:position pos:line="1" pos:column="43"/></name><index pos:line="1" pos:column="43">[]<pos:position pos:line="1" pos:column="45"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_file_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">f<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">tn<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[]<pos:position pos:line="5" pos:column="14"/></index></name> <init pos:line="5" pos:column="15">= <expr><literal type="string" pos:line="5" pos:column="17">"htdigest.tmp.XXXXXX"<pos:position pos:line="5" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">user<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><name pos:line="6" pos:column="15">MAX_STRING_LEN<pos:position pos:line="6" pos:column="29"/></name></expr>]<pos:position pos:line="6" pos:column="30"/></index></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">realm<pos:position pos:line="7" pos:column="15"/></name><index pos:line="7" pos:column="15">[<expr><name pos:line="7" pos:column="16">MAX_STRING_LEN<pos:position pos:line="7" pos:column="30"/></name></expr>]<pos:position pos:line="7" pos:column="31"/></index></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">line<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><name pos:line="8" pos:column="15">MAX_STRING_LEN<pos:position pos:line="8" pos:column="29"/></name></expr>]<pos:position pos:line="8" pos:column="30"/></index></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">l<pos:position pos:line="9" pos:column="11"/></name><index pos:line="9" pos:column="11">[<expr><name pos:line="9" pos:column="12">MAX_STRING_LEN<pos:position pos:line="9" pos:column="26"/></name></expr>]<pos:position pos:line="9" pos:column="27"/></index></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name><name pos:line="10" pos:column="10">w<pos:position pos:line="10" pos:column="11"/></name><index pos:line="10" pos:column="11">[<expr><name pos:line="10" pos:column="12">MAX_STRING_LEN<pos:position pos:line="10" pos:column="26"/></name></expr>]<pos:position pos:line="10" pos:column="27"/></index></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">x<pos:position pos:line="11" pos:column="11"/></name><index pos:line="11" pos:column="11">[<expr><name pos:line="11" pos:column="12">MAX_STRING_LEN<pos:position pos:line="11" pos:column="26"/></name></expr>]<pos:position pos:line="11" pos:column="27"/></index></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name></type> <name><name pos:line="12" pos:column="10">command<pos:position pos:line="12" pos:column="17"/></name><index pos:line="12" pos:column="17">[<expr><name pos:line="12" pos:column="18">MAX_STRING_LEN<pos:position pos:line="12" pos:column="32"/></name></expr>]<pos:position pos:line="12" pos:column="33"/></index></name></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">found<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>
   
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">apr_app_initialize<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><operator pos:line="15" pos:column="24">&amp;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="25">argc<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="31">&amp;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="32">argv<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">NULL<pos:position pos:line="15" pos:column="42"/></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">atexit<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">terminate<pos:position pos:line="16" pos:column="21"/></name></expr></argument>)<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt> 
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">apr_pool_create<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><operator pos:line="17" pos:column="21">&amp;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="22">cntxt<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="29">NULL<pos:position pos:line="17" pos:column="33"/></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>

<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="19" pos:column="23"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="20" pos:column="5">rv<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <call><name pos:line="20" pos:column="10">apr_xlate_open<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><operator pos:line="20" pos:column="25">&amp;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="26">to_ascii<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="36">"ISO8859-1"<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">APR_DEFAULT_CHARSET<pos:position pos:line="20" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="70">cntxt<pos:position pos:line="20" pos:column="75"/></name></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="77"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">rv<pos:position pos:line="21" pos:column="11"/></name></expr>)<pos:position pos:line="21" pos:column="12"/></condition><then pos:line="21" pos:column="12"> <block pos:line="21" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">fprintf<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">stderr<pos:position pos:line="22" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="25">"apr_xlate_open(): %s (%d)\n"<pos:position pos:line="22" pos:column="54"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="23" pos:column="17">apr_strerror<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">rv<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">line<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="40">sizeof<argument_list pos:line="23" pos:column="46">(<argument><expr><name pos:line="23" pos:column="47">line<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="23" pos:column="55">rv<pos:position pos:line="23" pos:column="57"/></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">exit<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><literal type="number" pos:line="24" pos:column="14">1<pos:position pos:line="24" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>
    
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">apr_signal<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">SIGINT<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="24">(<pos:position pos:line="28" pos:column="25"/></operator><call><call><name pos:line="28" pos:column="25">void<pos:position pos:line="28" pos:column="29"/></name> <argument_list pos:line="28" pos:column="30">(<argument><expr><operator pos:line="28" pos:column="31">*<pos:position pos:line="28" pos:column="32"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="33"/></argument_list></call><argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">int<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call><operator pos:line="28" pos:column="38">)<pos:position pos:line="28" pos:column="39"/></operator> <name pos:line="28" pos:column="40">interrupted<pos:position pos:line="28" pos:column="51"/></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">argc<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">==<pos:position pos:line="29" pos:column="16"/></operator> <literal type="number" pos:line="29" pos:column="17">5<pos:position pos:line="29" pos:column="18"/></literal></expr>)<pos:position pos:line="29" pos:column="19"/></condition><then pos:line="29" pos:column="19"> <block pos:line="29" pos:column="20">{
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">strcmp<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><name><name pos:line="30" pos:column="20">argv<pos:position pos:line="30" pos:column="24"/></name><index pos:line="30" pos:column="24">[<expr><literal type="number" pos:line="30" pos:column="25">1<pos:position pos:line="30" pos:column="26"/></literal></expr>]<pos:position pos:line="30" pos:column="27"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="29">"-c"<pos:position pos:line="30" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="35"/></condition><then pos:line="30" pos:column="35">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="13">usage<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">()<pos:position pos:line="31" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="32" pos:column="9">rv<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">apr_file_open<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><operator pos:line="32" pos:column="28">&amp;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="29">f<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="32">argv<pos:position pos:line="32" pos:column="36"/></name><index pos:line="32" pos:column="36">[<expr><literal type="number" pos:line="32" pos:column="37">2<pos:position pos:line="32" pos:column="38"/></literal></expr>]<pos:position pos:line="32" pos:column="39"/></index></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">APR_WRITE<pos:position pos:line="32" pos:column="50"/></name> <operator pos:line="32" pos:column="51">|<pos:position pos:line="32" pos:column="52"/></operator> <name pos:line="32" pos:column="53">APR_CREATE<pos:position pos:line="32" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="65">-<pos:position pos:line="32" pos:column="66"/></operator><literal type="number" pos:line="32" pos:column="66">1<pos:position pos:line="32" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="69">cntxt<pos:position pos:line="32" pos:column="74"/></name></expr></argument>)<pos:position pos:line="32" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="76"/></expr_stmt>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">rv<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">!=<pos:position pos:line="33" pos:column="18"/></operator> <name pos:line="33" pos:column="19">APR_SUCCESS<pos:position pos:line="33" pos:column="30"/></name></expr>)<pos:position pos:line="33" pos:column="31"/></condition><then pos:line="33" pos:column="31"> <block pos:line="33" pos:column="32">{
            <decl_stmt><decl><type><name pos:line="34" pos:column="13">char<pos:position pos:line="34" pos:column="17"/></name></type> <name><name pos:line="34" pos:column="18">errmsg<pos:position pos:line="34" pos:column="24"/></name><index pos:line="34" pos:column="24">[<expr><literal type="number" pos:line="34" pos:column="25">120<pos:position pos:line="34" pos:column="28"/></literal></expr>]<pos:position pos:line="34" pos:column="29"/></index></name></decl>;<pos:position pos:line="34" pos:column="30"/></decl_stmt>

	    <expr_stmt><expr><call><name pos:line="36" pos:column="13">fprintf<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><name pos:line="36" pos:column="21">stderr<pos:position pos:line="36" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="29">"Could not open passwd file %s for writing: %s\n"<pos:position pos:line="36" pos:column="78"/></literal></expr></argument>,
		    <argument><expr><name><name pos:line="37" pos:column="21">argv<pos:position pos:line="37" pos:column="25"/></name><index pos:line="37" pos:column="25">[<expr><literal type="number" pos:line="37" pos:column="26">2<pos:position pos:line="37" pos:column="27"/></literal></expr>]<pos:position pos:line="37" pos:column="28"/></index></name></expr></argument>,
                    <argument><expr><call><name pos:line="38" pos:column="21">apr_strerror<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">rv<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="38">errmsg<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="46">sizeof <name pos:line="38" pos:column="53">errmsg<pos:position pos:line="38" pos:column="59"/></name></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="39" pos:column="13">exit<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><literal type="number" pos:line="39" pos:column="18">1<pos:position pos:line="39" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">printf<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><literal type="string" pos:line="41" pos:column="16">"Adding password for %s in realm %s.\n"<pos:position pos:line="41" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="57">argv<pos:position pos:line="41" pos:column="61"/></name><index pos:line="41" pos:column="61">[<expr><literal type="number" pos:line="41" pos:column="62">4<pos:position pos:line="41" pos:column="63"/></literal></expr>]<pos:position pos:line="41" pos:column="64"/></index></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="66">argv<pos:position pos:line="41" pos:column="70"/></name><index pos:line="41" pos:column="70">[<expr><literal type="number" pos:line="41" pos:column="71">3<pos:position pos:line="41" pos:column="72"/></literal></expr>]<pos:position pos:line="41" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">add_password<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name><name pos:line="42" pos:column="22">argv<pos:position pos:line="42" pos:column="26"/></name><index pos:line="42" pos:column="26">[<expr><literal type="number" pos:line="42" pos:column="27">4<pos:position pos:line="42" pos:column="28"/></literal></expr>]<pos:position pos:line="42" pos:column="29"/></index></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="31">argv<pos:position pos:line="42" pos:column="35"/></name><index pos:line="42" pos:column="35">[<expr><literal type="number" pos:line="42" pos:column="36">3<pos:position pos:line="42" pos:column="37"/></literal></expr>]<pos:position pos:line="42" pos:column="38"/></index></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="40">f<pos:position pos:line="42" pos:column="41"/></name></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">apr_file_close<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">f<pos:position pos:line="43" pos:column="25"/></name></expr></argument>)<pos:position pos:line="43" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">exit<pos:position pos:line="44" pos:column="13"/></name><argument_list pos:line="44" pos:column="13">(<argument><expr><literal type="number" pos:line="44" pos:column="14">0<pos:position pos:line="44" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then>
    <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><name pos:line="46" pos:column="14">argc<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">!=<pos:position pos:line="46" pos:column="21"/></operator> <literal type="number" pos:line="46" pos:column="22">4<pos:position pos:line="46" pos:column="23"/></literal></expr>)<pos:position pos:line="46" pos:column="24"/></condition><then pos:line="46" pos:column="24">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="9">usage<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">()<pos:position pos:line="47" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="17"/></expr_stmt></block></then></if></elseif></if>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><call><name pos:line="49" pos:column="9">apr_file_mktemp<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><operator pos:line="49" pos:column="25">&amp;<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="26">tfp<pos:position pos:line="49" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="31">tn<pos:position pos:line="49" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="35">0<pos:position pos:line="49" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="38">cntxt<pos:position pos:line="49" pos:column="43"/></name></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call> <operator pos:line="49" pos:column="45">!=<pos:position pos:line="49" pos:column="47"/></operator> <name pos:line="49" pos:column="48">APR_SUCCESS<pos:position pos:line="49" pos:column="59"/></name></expr>)<pos:position pos:line="49" pos:column="60"/></condition><then pos:line="49" pos:column="60"> <block pos:line="49" pos:column="61">{
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">fprintf<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><name pos:line="50" pos:column="17">stderr<pos:position pos:line="50" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="25">"Could not open temp file.\n"<pos:position pos:line="50" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">exit<pos:position pos:line="51" pos:column="13"/></name><argument_list pos:line="51" pos:column="13">(<argument><expr><literal type="number" pos:line="51" pos:column="14">1<pos:position pos:line="51" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><call><name pos:line="54" pos:column="9">apr_file_open<pos:position pos:line="54" pos:column="22"/></name><argument_list pos:line="54" pos:column="22">(<argument><expr><operator pos:line="54" pos:column="23">&amp;<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="24">f<pos:position pos:line="54" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="27">argv<pos:position pos:line="54" pos:column="31"/></name><index pos:line="54" pos:column="31">[<expr><literal type="number" pos:line="54" pos:column="32">1<pos:position pos:line="54" pos:column="33"/></literal></expr>]<pos:position pos:line="54" pos:column="34"/></index></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="36">APR_READ<pos:position pos:line="54" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="46">-<pos:position pos:line="54" pos:column="47"/></operator><literal type="number" pos:line="54" pos:column="47">1<pos:position pos:line="54" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="50">cntxt<pos:position pos:line="54" pos:column="55"/></name></expr></argument>)<pos:position pos:line="54" pos:column="56"/></argument_list></call> <operator pos:line="54" pos:column="57">!=<pos:position pos:line="54" pos:column="59"/></operator> <name pos:line="54" pos:column="60">APR_SUCCESS<pos:position pos:line="54" pos:column="71"/></name></expr>)<pos:position pos:line="54" pos:column="72"/></condition><then pos:line="54" pos:column="72"> <block pos:line="54" pos:column="73">{
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">fprintf<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">stderr<pos:position pos:line="55" pos:column="23"/></name></expr></argument>,
		<argument><expr><literal type="string" pos:line="56" pos:column="17">"Could not open passwd file %s for reading.\n"<pos:position pos:line="56" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="65">argv<pos:position pos:line="56" pos:column="69"/></name><index pos:line="56" pos:column="69">[<expr><literal type="number" pos:line="56" pos:column="70">1<pos:position pos:line="56" pos:column="71"/></literal></expr>]<pos:position pos:line="56" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="56" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="57" pos:column="9">fprintf<pos:position pos:line="57" pos:column="16"/></name><argument_list pos:line="57" pos:column="16">(<argument><expr><name pos:line="57" pos:column="17">stderr<pos:position pos:line="57" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="25">"Use -c option to create new one.\n"<pos:position pos:line="57" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">exit<pos:position pos:line="58" pos:column="13"/></name><argument_list pos:line="58" pos:column="13">(<argument><expr><literal type="number" pos:line="58" pos:column="14">1<pos:position pos:line="58" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">strcpy<pos:position pos:line="60" pos:column="11"/></name><argument_list pos:line="60" pos:column="11">(<argument><expr><name pos:line="60" pos:column="12">user<pos:position pos:line="60" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="18">argv<pos:position pos:line="60" pos:column="22"/></name><index pos:line="60" pos:column="22">[<expr><literal type="number" pos:line="60" pos:column="23">3<pos:position pos:line="60" pos:column="24"/></literal></expr>]<pos:position pos:line="60" pos:column="25"/></index></name></expr></argument>)<pos:position pos:line="60" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">strcpy<pos:position pos:line="61" pos:column="11"/></name><argument_list pos:line="61" pos:column="11">(<argument><expr><name pos:line="61" pos:column="12">realm<pos:position pos:line="61" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="19">argv<pos:position pos:line="61" pos:column="23"/></name><index pos:line="61" pos:column="23">[<expr><literal type="number" pos:line="61" pos:column="24">2<pos:position pos:line="61" pos:column="25"/></literal></expr>]<pos:position pos:line="61" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="61" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name pos:line="63" pos:column="5">found<pos:position pos:line="63" pos:column="10"/></name> <operator pos:line="63" pos:column="11">=<pos:position pos:line="63" pos:column="12"/></operator> <literal type="number" pos:line="63" pos:column="13">0<pos:position pos:line="63" pos:column="14"/></literal></expr>;<pos:position pos:line="63" pos:column="15"/></expr_stmt>
    <while pos:line="64" pos:column="5">while <condition pos:line="64" pos:column="11">(<expr><operator pos:line="64" pos:column="12">!<pos:position pos:line="64" pos:column="13"/></operator><operator pos:line="64" pos:column="13">(<pos:position pos:line="64" pos:column="14"/></operator><call><name pos:line="64" pos:column="14">get_line<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><name pos:line="64" pos:column="23">line<pos:position pos:line="64" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="29">MAX_STRING_LEN<pos:position pos:line="64" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="45">f<pos:position pos:line="64" pos:column="46"/></name></expr></argument>)<pos:position pos:line="64" pos:column="47"/></argument_list></call><operator pos:line="64" pos:column="47">)<pos:position pos:line="64" pos:column="48"/></operator></expr>)<pos:position pos:line="64" pos:column="49"/></condition> <block pos:line="64" pos:column="50">{
	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">found<pos:position pos:line="65" pos:column="18"/></name> <operator pos:line="65" pos:column="19">||<pos:position pos:line="65" pos:column="21"/></operator> <operator pos:line="65" pos:column="22">(<pos:position pos:line="65" pos:column="23"/></operator><name><name pos:line="65" pos:column="23">line<pos:position pos:line="65" pos:column="27"/></name><index pos:line="65" pos:column="27">[<expr><literal type="number" pos:line="65" pos:column="28">0<pos:position pos:line="65" pos:column="29"/></literal></expr>]<pos:position pos:line="65" pos:column="30"/></index></name> <operator pos:line="65" pos:column="31">==<pos:position pos:line="65" pos:column="33"/></operator> <literal type="char" pos:line="65" pos:column="34">'#'<pos:position pos:line="65" pos:column="37"/></literal><operator pos:line="65" pos:column="37">)<pos:position pos:line="65" pos:column="38"/></operator> <operator pos:line="65" pos:column="39">||<pos:position pos:line="65" pos:column="41"/></operator> <operator pos:line="65" pos:column="42">(<pos:position pos:line="65" pos:column="43"/></operator><operator pos:line="65" pos:column="43">!<pos:position pos:line="65" pos:column="44"/></operator><name><name pos:line="65" pos:column="44">line<pos:position pos:line="65" pos:column="48"/></name><index pos:line="65" pos:column="48">[<expr><literal type="number" pos:line="65" pos:column="49">0<pos:position pos:line="65" pos:column="50"/></literal></expr>]<pos:position pos:line="65" pos:column="51"/></index></name><operator pos:line="65" pos:column="51">)<pos:position pos:line="65" pos:column="52"/></operator></expr>)<pos:position pos:line="65" pos:column="53"/></condition><then pos:line="65" pos:column="53"> <block pos:line="65" pos:column="54">{
	    <expr_stmt><expr><call><name pos:line="66" pos:column="13">putline<pos:position pos:line="66" pos:column="20"/></name><argument_list pos:line="66" pos:column="20">(<argument><expr><name pos:line="66" pos:column="21">tfp<pos:position pos:line="66" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="26">line<pos:position pos:line="66" pos:column="30"/></name></expr></argument>)<pos:position pos:line="66" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt>
	    <continue pos:line="67" pos:column="13">continue;<pos:position pos:line="67" pos:column="22"/></continue>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">strcpy<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><name pos:line="69" pos:column="16">l<pos:position pos:line="69" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="19">line<pos:position pos:line="69" pos:column="23"/></name></expr></argument>)<pos:position pos:line="69" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">getword<pos:position pos:line="70" pos:column="16"/></name><argument_list pos:line="70" pos:column="16">(<argument><expr><name pos:line="70" pos:column="17">w<pos:position pos:line="70" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="20">l<pos:position pos:line="70" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="70" pos:column="23">':'<pos:position pos:line="70" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">getword<pos:position pos:line="71" pos:column="16"/></name><argument_list pos:line="71" pos:column="16">(<argument><expr><name pos:line="71" pos:column="17">x<pos:position pos:line="71" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="20">l<pos:position pos:line="71" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="71" pos:column="23">':'<pos:position pos:line="71" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="28"/></expr_stmt>
	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><call><name pos:line="72" pos:column="13">strcmp<pos:position pos:line="72" pos:column="19"/></name><argument_list pos:line="72" pos:column="19">(<argument><expr><name pos:line="72" pos:column="20">user<pos:position pos:line="72" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="26">w<pos:position pos:line="72" pos:column="27"/></name></expr></argument>)<pos:position pos:line="72" pos:column="28"/></argument_list></call> <operator pos:line="72" pos:column="29">||<pos:position pos:line="72" pos:column="31"/></operator> <call><name pos:line="72" pos:column="32">strcmp<pos:position pos:line="72" pos:column="38"/></name><argument_list pos:line="72" pos:column="38">(<argument><expr><name pos:line="72" pos:column="39">realm<pos:position pos:line="72" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="46">x<pos:position pos:line="72" pos:column="47"/></name></expr></argument>)<pos:position pos:line="72" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="49"/></condition><then pos:line="72" pos:column="49"> <block pos:line="72" pos:column="50">{
	    <expr_stmt><expr><call><name pos:line="73" pos:column="13">putline<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><name pos:line="73" pos:column="21">tfp<pos:position pos:line="73" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="26">line<pos:position pos:line="73" pos:column="30"/></name></expr></argument>)<pos:position pos:line="73" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>
	    <continue pos:line="74" pos:column="13">continue;<pos:position pos:line="74" pos:column="22"/></continue>
	}<pos:position pos:line="75" pos:column="10"/></block></then>
	<else pos:line="76" pos:column="9">else <block pos:line="76" pos:column="14">{
	    <expr_stmt><expr><call><name pos:line="77" pos:column="13">printf<pos:position pos:line="77" pos:column="19"/></name><argument_list pos:line="77" pos:column="19">(<argument><expr><literal type="string" pos:line="77" pos:column="20">"Changing password for user %s in realm %s\n"<pos:position pos:line="77" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="67">user<pos:position pos:line="77" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="73">realm<pos:position pos:line="77" pos:column="78"/></name></expr></argument>)<pos:position pos:line="77" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="80"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="78" pos:column="13">add_password<pos:position pos:line="78" pos:column="25"/></name><argument_list pos:line="78" pos:column="25">(<argument><expr><name pos:line="78" pos:column="26">user<pos:position pos:line="78" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="32">realm<pos:position pos:line="78" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="39">tfp<pos:position pos:line="78" pos:column="42"/></name></expr></argument>)<pos:position pos:line="78" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="44"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="79" pos:column="13">found<pos:position pos:line="79" pos:column="18"/></name> <operator pos:line="79" pos:column="19">=<pos:position pos:line="79" pos:column="20"/></operator> <literal type="number" pos:line="79" pos:column="21">1<pos:position pos:line="79" pos:column="22"/></literal></expr>;<pos:position pos:line="79" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="80" pos:column="10"/></block></else></if>
    }<pos:position pos:line="81" pos:column="6"/></block></while>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><operator pos:line="82" pos:column="9">!<pos:position pos:line="82" pos:column="10"/></operator><name pos:line="82" pos:column="10">found<pos:position pos:line="82" pos:column="15"/></name></expr>)<pos:position pos:line="82" pos:column="16"/></condition><then pos:line="82" pos:column="16"> <block pos:line="82" pos:column="17">{
	<expr_stmt><expr><call><name pos:line="83" pos:column="9">printf<pos:position pos:line="83" pos:column="15"/></name><argument_list pos:line="83" pos:column="15">(<argument><expr><literal type="string" pos:line="83" pos:column="16">"Adding user %s in realm %s\n"<pos:position pos:line="83" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="48">user<pos:position pos:line="83" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="54">realm<pos:position pos:line="83" pos:column="59"/></name></expr></argument>)<pos:position pos:line="83" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="84" pos:column="9">add_password<pos:position pos:line="84" pos:column="21"/></name><argument_list pos:line="84" pos:column="21">(<argument><expr><name pos:line="84" pos:column="22">user<pos:position pos:line="84" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="28">realm<pos:position pos:line="84" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="35">tfp<pos:position pos:line="84" pos:column="38"/></name></expr></argument>)<pos:position pos:line="84" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">apr_file_close<pos:position pos:line="86" pos:column="19"/></name><argument_list pos:line="86" pos:column="19">(<argument><expr><name pos:line="86" pos:column="20">f<pos:position pos:line="86" pos:column="21"/></name></expr></argument>)<pos:position pos:line="86" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="23"/></expr_stmt>
<cpp:if pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">if<pos:position pos:line="87" pos:column="4"/></cpp:directive> <expr><call><name pos:line="87" pos:column="5">defined<pos:position pos:line="87" pos:column="12"/></name><argument_list pos:line="87" pos:column="12">(<argument><expr><name pos:line="87" pos:column="13">OS2<pos:position pos:line="87" pos:column="16"/></name></expr></argument>)<pos:position pos:line="87" pos:column="17"/></argument_list></call> <operator pos:line="87" pos:column="18">||<pos:position pos:line="87" pos:column="20"/></operator> <call><name pos:line="87" pos:column="21">defined<pos:position pos:line="87" pos:column="28"/></name><argument_list pos:line="87" pos:column="28">(<argument><expr><name pos:line="87" pos:column="29">WIN32<pos:position pos:line="87" pos:column="34"/></name></expr></argument>)<pos:position pos:line="87" pos:column="35"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">sprintf<pos:position pos:line="88" pos:column="12"/></name><argument_list pos:line="88" pos:column="12">(<argument><expr><name pos:line="88" pos:column="13">command<pos:position pos:line="88" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="22">"copy \"%s\" \"%s\""<pos:position pos:line="88" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="44">tn<pos:position pos:line="88" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="48">argv<pos:position pos:line="88" pos:column="52"/></name><index pos:line="88" pos:column="52">[<expr><literal type="number" pos:line="88" pos:column="53">1<pos:position pos:line="88" pos:column="54"/></literal></expr>]<pos:position pos:line="88" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="88" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="57"/></expr_stmt>
<cpp:else pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">else<pos:position pos:line="89" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">sprintf<pos:position pos:line="90" pos:column="12"/></name><argument_list pos:line="90" pos:column="12">(<argument><expr><name pos:line="90" pos:column="13">command<pos:position pos:line="90" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="22">"cp %s %s"<pos:position pos:line="90" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="34">tn<pos:position pos:line="90" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="38">argv<pos:position pos:line="90" pos:column="42"/></name><index pos:line="90" pos:column="42">[<expr><literal type="number" pos:line="90" pos:column="43">1<pos:position pos:line="90" pos:column="44"/></literal></expr>]<pos:position pos:line="90" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="90" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">endif<pos:position pos:line="91" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">system<pos:position pos:line="92" pos:column="11"/></name><argument_list pos:line="92" pos:column="11">(<argument><expr><name pos:line="92" pos:column="12">command<pos:position pos:line="92" pos:column="19"/></name></expr></argument>)<pos:position pos:line="92" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">apr_file_close<pos:position pos:line="93" pos:column="19"/></name><argument_list pos:line="93" pos:column="19">(<argument><expr><name pos:line="93" pos:column="20">tfp<pos:position pos:line="93" pos:column="23"/></name></expr></argument>)<pos:position pos:line="93" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="25"/></expr_stmt>
    <return pos:line="94" pos:column="5">return <expr><literal type="number" pos:line="94" pos:column="12">0<pos:position pos:line="94" pos:column="13"/></literal></expr>;<pos:position pos:line="94" pos:column="14"/></return>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

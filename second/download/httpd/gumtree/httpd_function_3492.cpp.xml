<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3492.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">socache_mc_retrieve<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">ap_socache_instance_t<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">ctx<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">server_rec<pos:position pos:line="1" pos:column="79"/></name> <modifier pos:line="1" pos:column="80">*<pos:position pos:line="1" pos:column="81"/></modifier></type><name pos:line="1" pos:column="81">s<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>, 
                                        <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">unsigned<pos:position pos:line="2" pos:column="55"/></name> <name pos:line="2" pos:column="56">char<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">id<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">unsigned<pos:position pos:line="2" pos:column="74"/></name> <name pos:line="2" pos:column="75">int<pos:position pos:line="2" pos:column="78"/></name></type> <name pos:line="2" pos:column="79">idlen<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="3" pos:column="41">unsigned<pos:position pos:line="3" pos:column="49"/></name> <name pos:line="3" pos:column="50">char<pos:position pos:line="3" pos:column="54"/></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">dest<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="62">unsigned<pos:position pos:line="3" pos:column="70"/></name> <name pos:line="3" pos:column="71">int<pos:position pos:line="3" pos:column="74"/></name> <modifier pos:line="3" pos:column="75">*<pos:position pos:line="3" pos:column="76"/></modifier></type><name pos:line="3" pos:column="76">destlen<pos:position pos:line="3" pos:column="83"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="4" pos:column="41">apr_pool_t<pos:position pos:line="4" pos:column="51"/></name> <modifier pos:line="4" pos:column="52">*<pos:position pos:line="4" pos:column="53"/></modifier></type><name pos:line="4" pos:column="53">p<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="55"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">data_len<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">buf<pos:position pos:line="7" pos:column="13"/></name><index pos:line="7" pos:column="13">[<expr><name pos:line="7" pos:column="14">MC_KEY_LEN<pos:position pos:line="7" pos:column="24"/></name></expr>]<pos:position pos:line="7" pos:column="25"/></index></name></decl>, <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="28">data<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">socache_mc_id2key<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">ctx<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">id<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">idlen<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="43">buf<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="48">sizeof <name pos:line="10" pos:column="55">buf<pos:position pos:line="10" pos:column="58"/></name></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="60"/></condition><then pos:line="10" pos:column="60"> <block pos:line="10" pos:column="61">{
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">APR_EINVAL<pos:position pos:line="11" pos:column="26"/></name></expr>;<pos:position pos:line="11" pos:column="27"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="14" pos:column="5">/* ### this could do with a subpool, but _getp looks like it will
     * eat memory like it's going out of fashion anyway. */</comment>

    <expr_stmt><expr><name pos:line="17" pos:column="5">rv<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">apr_memcache_getp<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name><name pos:line="17" pos:column="28">ctx<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">mc<pos:position pos:line="17" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="37">p<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">buf<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="45">&amp;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="46">data<pos:position pos:line="17" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="52">&amp;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="53">data_len<pos:position pos:line="17" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="63">NULL<pos:position pos:line="17" pos:column="67"/></name></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="69"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">rv<pos:position pos:line="18" pos:column="11"/></name></expr>)<pos:position pos:line="18" pos:column="12"/></condition><then pos:line="18" pos:column="12"> <block pos:line="18" pos:column="13">{
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">rv<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">!=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">APR_NOTFOUND<pos:position pos:line="19" pos:column="31"/></name></expr>)<pos:position pos:line="19" pos:column="32"/></condition><then pos:line="19" pos:column="32"> <block pos:line="19" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">ap_log_error<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">APLOG_MARK<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">APLOG_ERR<pos:position pos:line="20" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">rv<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">s<pos:position pos:line="20" pos:column="54"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="21" pos:column="26">"scache_mc: 'retrieve' FAIL"<pos:position pos:line="21" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">rv<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><name pos:line="25" pos:column="14">data_len<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">&gt;<pos:position pos:line="25" pos:column="27"/></operator> <operator pos:line="25" pos:column="25">*<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">destlen<pos:position pos:line="25" pos:column="33"/></name></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34"> <block pos:line="25" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">ap_log_error<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">APLOG_MARK<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">APLOG_ERR<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">rv<pos:position pos:line="26" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">s<pos:position pos:line="26" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="27" pos:column="22">"scache_mc: 'retrieve' OVERFLOW"<pos:position pos:line="27" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">APR_ENOMEM<pos:position pos:line="28" pos:column="26"/></name></expr>;<pos:position pos:line="28" pos:column="27"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if></elseif></if>    

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">memcpy<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><name pos:line="31" pos:column="12">dest<pos:position pos:line="31" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="18">data<pos:position pos:line="31" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="24">data_len<pos:position pos:line="31" pos:column="32"/></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="32" pos:column="5">*<pos:position pos:line="32" pos:column="6"/></operator><name pos:line="32" pos:column="6">destlen<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <name pos:line="32" pos:column="16">data_len<pos:position pos:line="32" pos:column="24"/></name></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>

    <return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">APR_SUCCESS<pos:position pos:line="34" pos:column="23"/></name></expr>;<pos:position pos:line="34" pos:column="24"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2282_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">xml2enc_ffunc<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">ap_filter_t<pos:position pos:line="1" pos:column="46"/></name><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type> <name pos:line="1" pos:column="48">f<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">apr_bucket_brigade<pos:position pos:line="1" pos:column="69"/></name><modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type> <name pos:line="1" pos:column="71">bb<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">xml2ctx<pos:position pos:line="3" pos:column="12"/></name><modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type> <name pos:line="3" pos:column="14">ctx<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name><name pos:line="3" pos:column="20">f<pos:position pos:line="3" pos:column="21"/></name><operator pos:line="3" pos:column="21">-&gt;<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="23">ctx<pos:position pos:line="3" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_bucket<pos:position pos:line="5" pos:column="15"/></name><modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type> <name pos:line="5" pos:column="17">b<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket<pos:position pos:line="6" pos:column="15"/></name><modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type> <name pos:line="6" pos:column="17">bstart<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">insz<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><literal type="number" pos:line="7" pos:column="23">0<pos:position pos:line="7" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">ctype<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">p<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">ctx<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">||<pos:position pos:line="11" pos:column="16"/></operator> <operator pos:line="11" pos:column="17">!<pos:position pos:line="11" pos:column="18"/></operator><name><name pos:line="11" pos:column="18">f<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">r<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">-&gt;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="24">content_type<pos:position pos:line="11" pos:column="36"/></name></name></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37"> <block pos:line="11" pos:column="38">{
        <comment type="block" pos:line="12" pos:column="9">/* log error about configuring this */</comment>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_remove_output_filter<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">f<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><call><name pos:line="14" pos:column="16">ap_pass_brigade<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name><name pos:line="14" pos:column="32">f<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">next<pos:position pos:line="14" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">bb<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr> ;<pos:position pos:line="14" pos:column="46"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">ctype<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">apr_pstrdup<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name><name pos:line="17" pos:column="25">f<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">r<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">pool<pos:position pos:line="17" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="37">f<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">-&gt;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="40">r<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">content_type<pos:position pos:line="17" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
    <for pos:line="18" pos:column="5">for <control pos:line="18" pos:column="9">(<init><expr><name pos:line="18" pos:column="10">p<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">ctype<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><operator pos:line="18" pos:column="21">*<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">p<pos:position pos:line="18" pos:column="23"/></name></expr>;<pos:position pos:line="18" pos:column="24"/></condition> <incr><expr><operator pos:line="18" pos:column="25">++<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">p<pos:position pos:line="18" pos:column="28"/></name></expr></incr>)<pos:position pos:line="18" pos:column="29"/></control>
        <block type="pseudo"><if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">isupper<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><operator pos:line="19" pos:column="21">*<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">p<pos:position pos:line="19" pos:column="23"/></name></expr></argument>)<pos:position pos:line="19" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">p<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">tolower<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><operator pos:line="20" pos:column="26">*<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">p<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt></block></then></if></block></for>

    <comment type="block" pos:line="22" pos:column="5">/* only act if starts-with "text/" or contains "xml" */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">strncmp<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><name pos:line="23" pos:column="17">ctype<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="24">"text/"<pos:position pos:line="23" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="33">5<pos:position pos:line="23" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call> <operator pos:line="23" pos:column="36">&amp;&amp;<pos:position pos:line="23" pos:column="46"/></operator> <operator pos:line="23" pos:column="39">!<pos:position pos:line="23" pos:column="40"/></operator><call><name pos:line="23" pos:column="40">strstr<pos:position pos:line="23" pos:column="46"/></name><argument_list pos:line="23" pos:column="46">(<argument><expr><name pos:line="23" pos:column="47">ctype<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="54">"xml"<pos:position pos:line="23" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="61"/></condition><then pos:line="23" pos:column="61">  <block pos:line="23" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">ap_remove_output_filter<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">f<pos:position pos:line="24" pos:column="34"/></name></expr></argument>)<pos:position pos:line="24" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
        <return pos:line="25" pos:column="9">return <expr><call><name pos:line="25" pos:column="16">ap_pass_brigade<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name><name pos:line="25" pos:column="32">f<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">next<pos:position pos:line="25" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="41">bb<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr> ;<pos:position pos:line="25" pos:column="46"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">ctx<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">bbsave<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">==<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">NULL<pos:position pos:line="28" pos:column="28"/></name></expr>)<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29"> <block pos:line="28" pos:column="30">{
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">ctx<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">bbsave<pos:position pos:line="29" pos:column="20"/></name></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <call><name pos:line="29" pos:column="23">apr_brigade_create<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name><name pos:line="29" pos:column="42">f<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">-&gt;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="45">r<pos:position pos:line="29" pos:column="46"/></name><operator pos:line="29" pos:column="46">-&gt;<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="48">pool<pos:position pos:line="29" pos:column="52"/></name></name></expr></argument>,
                                         <argument><expr><name><name pos:line="30" pos:column="42">f<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">-&gt;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="45">r<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">-&gt;<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="48">connection<pos:position pos:line="30" pos:column="58"/></name><operator pos:line="30" pos:column="58">-&gt;<pos:position pos:line="30" pos:column="63"/></operator><name pos:line="30" pos:column="60">bucket_alloc<pos:position pos:line="30" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="32" pos:column="5">/* append to any data left over from last time */</comment>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">APR_BRIGADE_CONCAT<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name><name pos:line="33" pos:column="24">ctx<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">bbsave<pos:position pos:line="33" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">bb<pos:position pos:line="33" pos:column="39"/></name></expr></argument>)<pos:position pos:line="33" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><name><name pos:line="35" pos:column="11">ctx<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">-&gt;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="16">flags<pos:position pos:line="35" pos:column="21"/></name></name> <operator pos:line="35" pos:column="22">&amp;<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="24">ENC_INITIALISED<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">)<pos:position pos:line="35" pos:column="40"/></operator></expr>)<pos:position pos:line="35" pos:column="41"/></condition><then pos:line="35" pos:column="41"> <block pos:line="35" pos:column="42">{
        <comment type="block" pos:line="36" pos:column="9">/* some kind of initialisation required */</comment>
        <comment type="block" pos:line="37" pos:column="9">/* Turn all this off when post-processing */</comment>

        <comment type="block" pos:line="39" pos:column="9">/* if we don't have enough data to sniff but more's to come, wait */</comment>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">apr_brigade_length<pos:position pos:line="40" pos:column="27"/></name><argument_list pos:line="40" pos:column="27">(<argument><expr><name><name pos:line="40" pos:column="28">ctx<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">-&gt;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="33">bbsave<pos:position pos:line="40" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="41">0<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="40" pos:column="44">&amp;<pos:position pos:line="40" pos:column="49"/></operator><name><name pos:line="40" pos:column="45">ctx<pos:position pos:line="40" pos:column="48"/></name><operator pos:line="40" pos:column="48">-&gt;<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="50">bblen<pos:position pos:line="40" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">(<pos:position pos:line="41" pos:column="14"/></operator><name><name pos:line="41" pos:column="14">ctx<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">bblen<pos:position pos:line="41" pos:column="24"/></name></name> <operator pos:line="41" pos:column="25">&lt;<pos:position pos:line="41" pos:column="29"/></operator> <name pos:line="41" pos:column="27">BUF_MIN<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">)<pos:position pos:line="41" pos:column="35"/></operator> <operator pos:line="41" pos:column="36">&amp;&amp;<pos:position pos:line="41" pos:column="46"/></operator> <operator pos:line="41" pos:column="39">(<pos:position pos:line="41" pos:column="40"/></operator><name><name pos:line="41" pos:column="40">ctx<pos:position pos:line="41" pos:column="43"/></name><operator pos:line="41" pos:column="43">-&gt;<pos:position pos:line="41" pos:column="48"/></operator><name pos:line="41" pos:column="45">bblen<pos:position pos:line="41" pos:column="50"/></name></name> <operator pos:line="41" pos:column="51">!=<pos:position pos:line="41" pos:column="53"/></operator> <operator pos:line="41" pos:column="54">-<pos:position pos:line="41" pos:column="55"/></operator><literal type="number" pos:line="41" pos:column="55">1<pos:position pos:line="41" pos:column="56"/></literal><operator pos:line="41" pos:column="56">)<pos:position pos:line="41" pos:column="57"/></operator></expr>)<pos:position pos:line="41" pos:column="58"/></condition><then pos:line="41" pos:column="58"> <block pos:line="41" pos:column="59">{
            <macro><name pos:line="42" pos:column="13">APR_BRIGADE_DO<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument pos:line="42" pos:column="28">b<pos:position pos:line="42" pos:column="29"/></argument>, <argument pos:line="42" pos:column="31">ctx-&gt;bbsave<pos:position pos:line="42" pos:column="42"/></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></macro> <block pos:line="42" pos:column="44">{
                <if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><call><name pos:line="43" pos:column="21">APR_BUCKET_IS_EOS<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><name pos:line="43" pos:column="39">b<pos:position pos:line="43" pos:column="40"/></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="42"/></condition><then pos:line="43" pos:column="42"> <block pos:line="43" pos:column="43">{
                    <expr_stmt><expr><name><name pos:line="44" pos:column="21">ctx<pos:position pos:line="44" pos:column="24"/></name><operator pos:line="44" pos:column="24">-&gt;<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="26">flags<pos:position pos:line="44" pos:column="31"/></name></name> <operator pos:line="44" pos:column="32">|=<pos:position pos:line="44" pos:column="34"/></operator> <name pos:line="44" pos:column="35">ENC_SEEN_EOS<pos:position pos:line="44" pos:column="47"/></name></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
                    <break pos:line="45" pos:column="21">break;<pos:position pos:line="45" pos:column="27"/></break>
                }<pos:position pos:line="46" pos:column="18"/></block></then></if>
            }<pos:position pos:line="47" pos:column="14"/></block>
            <if pos:line="48" pos:column="13">if <condition pos:line="48" pos:column="16">(<expr><operator pos:line="48" pos:column="17">!<pos:position pos:line="48" pos:column="18"/></operator><operator pos:line="48" pos:column="18">(<pos:position pos:line="48" pos:column="19"/></operator><name><name pos:line="48" pos:column="19">ctx<pos:position pos:line="48" pos:column="22"/></name><operator pos:line="48" pos:column="22">-&gt;<pos:position pos:line="48" pos:column="27"/></operator><name pos:line="48" pos:column="24">flags<pos:position pos:line="48" pos:column="29"/></name></name> <operator pos:line="48" pos:column="30">&amp;<pos:position pos:line="48" pos:column="35"/></operator> <name pos:line="48" pos:column="32">ENC_SEEN_EOS<pos:position pos:line="48" pos:column="44"/></name><operator pos:line="48" pos:column="44">)<pos:position pos:line="48" pos:column="45"/></operator></expr>)<pos:position pos:line="48" pos:column="46"/></condition><then pos:line="48" pos:column="46"> <block pos:line="48" pos:column="47">{
                <comment type="block" pos:line="49" pos:column="17">/* not enough data to sniff.  Wait for more */</comment>
                <macro><name pos:line="50" pos:column="17">APR_BRIGADE_DO<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument pos:line="50" pos:column="32">b<pos:position pos:line="50" pos:column="33"/></argument>, <argument pos:line="50" pos:column="35">ctx-&gt;bbsave<pos:position pos:line="50" pos:column="46"/></argument>)<pos:position pos:line="50" pos:column="47"/></argument_list></macro> <block pos:line="50" pos:column="48">{
                    <expr_stmt><expr><name pos:line="51" pos:column="21">rv<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">=<pos:position pos:line="51" pos:column="25"/></operator> <call><name pos:line="51" pos:column="26">apr_bucket_setaside<pos:position pos:line="51" pos:column="45"/></name><argument_list pos:line="51" pos:column="45">(<argument><expr><name pos:line="51" pos:column="46">b<pos:position pos:line="51" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="49">f<pos:position pos:line="51" pos:column="50"/></name><operator pos:line="51" pos:column="50">-&gt;<pos:position pos:line="51" pos:column="55"/></operator><name pos:line="51" pos:column="52">r<pos:position pos:line="51" pos:column="53"/></name><operator pos:line="51" pos:column="53">-&gt;<pos:position pos:line="51" pos:column="58"/></operator><name pos:line="51" pos:column="55">pool<pos:position pos:line="51" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="61"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="52" pos:column="21">ap_assert<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">rv<pos:position pos:line="52" pos:column="33"/></name> <operator pos:line="52" pos:column="34">==<pos:position pos:line="52" pos:column="36"/></operator> <name pos:line="52" pos:column="37">APR_SUCCESS<pos:position pos:line="52" pos:column="48"/></name></expr></argument>)<pos:position pos:line="52" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="50"/></expr_stmt>
                }<pos:position pos:line="53" pos:column="18"/></block>
                <return pos:line="54" pos:column="17">return <expr><name pos:line="54" pos:column="24">APR_SUCCESS<pos:position pos:line="54" pos:column="35"/></name></expr>;<pos:position pos:line="54" pos:column="36"/></return>
            }<pos:position pos:line="55" pos:column="14"/></block></then></if>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name><name pos:line="57" pos:column="13">ctx<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">-&gt;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="18">bblen<pos:position pos:line="57" pos:column="23"/></name></name> <operator pos:line="57" pos:column="24">==<pos:position pos:line="57" pos:column="26"/></operator> <operator pos:line="57" pos:column="27">-<pos:position pos:line="57" pos:column="28"/></operator><literal type="number" pos:line="57" pos:column="28">1<pos:position pos:line="57" pos:column="29"/></literal></expr>)<pos:position pos:line="57" pos:column="30"/></condition><then pos:line="57" pos:column="30"> <block pos:line="57" pos:column="31">{
            <expr_stmt><expr><name><name pos:line="58" pos:column="13">ctx<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">bblen<pos:position pos:line="58" pos:column="23"/></name></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <name pos:line="58" pos:column="26">BUFLEN<pos:position pos:line="58" pos:column="32"/></name><operator pos:line="58" pos:column="32">-<pos:position pos:line="58" pos:column="33"/></operator><literal type="number" pos:line="58" pos:column="33">1<pos:position pos:line="58" pos:column="34"/></literal></expr>;<pos:position pos:line="58" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="61" pos:column="9">/* flatten it into a NULL-terminated string */</comment>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">ctx<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">buf<pos:position pos:line="62" pos:column="17"/></name></name> <operator pos:line="62" pos:column="18">=<pos:position pos:line="62" pos:column="19"/></operator> <call><name pos:line="62" pos:column="20">apr_palloc<pos:position pos:line="62" pos:column="30"/></name><argument_list pos:line="62" pos:column="30">(<argument><expr><name><name pos:line="62" pos:column="31">f<pos:position pos:line="62" pos:column="32"/></name><operator pos:line="62" pos:column="32">-&gt;<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="34">r<pos:position pos:line="62" pos:column="35"/></name><operator pos:line="62" pos:column="35">-&gt;<pos:position pos:line="62" pos:column="40"/></operator><name pos:line="62" pos:column="37">pool<pos:position pos:line="62" pos:column="41"/></name></name></expr></argument>, <argument><expr><call pos:line="62" pos:column="43">(<name pos:line="62" pos:column="44">apr_size_t<pos:position pos:line="62" pos:column="54"/></name>)<argument_list pos:line="62" pos:column="55">(<argument><expr><name><name pos:line="62" pos:column="56">ctx<pos:position pos:line="62" pos:column="59"/></name><operator pos:line="62" pos:column="59">-&gt;<pos:position pos:line="62" pos:column="64"/></operator><name pos:line="62" pos:column="61">bblen<pos:position pos:line="62" pos:column="66"/></name></name><operator pos:line="62" pos:column="66">+<pos:position pos:line="62" pos:column="67"/></operator><literal type="number" pos:line="62" pos:column="67">1<pos:position pos:line="62" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">ctx<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">-&gt;<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="14">bytes<pos:position pos:line="63" pos:column="19"/></name></name> <operator pos:line="63" pos:column="20">=<pos:position pos:line="63" pos:column="21"/></operator> <operator pos:line="63" pos:column="22">(<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="23">apr_size_t<pos:position pos:line="63" pos:column="33"/></name><operator pos:line="63" pos:column="33">)<pos:position pos:line="63" pos:column="34"/></operator><name><name pos:line="63" pos:column="34">ctx<pos:position pos:line="63" pos:column="37"/></name><operator pos:line="63" pos:column="37">-&gt;<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="39">bblen<pos:position pos:line="63" pos:column="44"/></name></name></expr>;<pos:position pos:line="63" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="64" pos:column="9">rv<pos:position pos:line="64" pos:column="11"/></name> <operator pos:line="64" pos:column="12">=<pos:position pos:line="64" pos:column="13"/></operator> <call><name pos:line="64" pos:column="14">apr_brigade_flatten<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><name><name pos:line="64" pos:column="34">ctx<pos:position pos:line="64" pos:column="37"/></name><operator pos:line="64" pos:column="37">-&gt;<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="39">bbsave<pos:position pos:line="64" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="47">ctx<pos:position pos:line="64" pos:column="50"/></name><operator pos:line="64" pos:column="50">-&gt;<pos:position pos:line="64" pos:column="55"/></operator><name pos:line="64" pos:column="52">buf<pos:position pos:line="64" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="57">&amp;<pos:position pos:line="64" pos:column="62"/></operator><name><name pos:line="64" pos:column="58">ctx<pos:position pos:line="64" pos:column="61"/></name><operator pos:line="64" pos:column="61">-&gt;<pos:position pos:line="64" pos:column="66"/></operator><name pos:line="64" pos:column="63">bytes<pos:position pos:line="64" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">ap_assert<pos:position pos:line="65" pos:column="18"/></name><argument_list pos:line="65" pos:column="18">(<argument><expr><name pos:line="65" pos:column="19">rv<pos:position pos:line="65" pos:column="21"/></name> <operator pos:line="65" pos:column="22">==<pos:position pos:line="65" pos:column="24"/></operator> <name pos:line="65" pos:column="25">APR_SUCCESS<pos:position pos:line="65" pos:column="36"/></name></expr></argument>)<pos:position pos:line="65" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="66" pos:column="9">ctx<pos:position pos:line="66" pos:column="12"/></name><operator pos:line="66" pos:column="12">-&gt;<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="14">buf<pos:position pos:line="66" pos:column="17"/></name><index pos:line="66" pos:column="17">[<expr><name><name pos:line="66" pos:column="18">ctx<pos:position pos:line="66" pos:column="21"/></name><operator pos:line="66" pos:column="21">-&gt;<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="23">bytes<pos:position pos:line="66" pos:column="28"/></name></name></expr>]<pos:position pos:line="66" pos:column="29"/></index></name> <operator pos:line="66" pos:column="30">=<pos:position pos:line="66" pos:column="31"/></operator> <literal type="number" pos:line="66" pos:column="32">0<pos:position pos:line="66" pos:column="33"/></literal></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">sniff_encoding<pos:position pos:line="67" pos:column="23"/></name><argument_list pos:line="67" pos:column="23">(<argument><expr><name><name pos:line="67" pos:column="24">f<pos:position pos:line="67" pos:column="25"/></name><operator pos:line="67" pos:column="25">-&gt;<pos:position pos:line="67" pos:column="30"/></operator><name pos:line="67" pos:column="27">r<pos:position pos:line="67" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="30">ctx<pos:position pos:line="67" pos:column="33"/></name></expr></argument>)<pos:position pos:line="67" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="35"/></expr_stmt>

        <comment type="block" pos:line="69" pos:column="9">/* FIXME: hook here for rewriting start-of-data? */</comment>
        <comment type="block" pos:line="70" pos:column="9">/* nah, we only have one action here - call it inline */</comment>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">fix_skipto<pos:position pos:line="71" pos:column="19"/></name><argument_list pos:line="71" pos:column="19">(<argument><expr><name><name pos:line="71" pos:column="20">f<pos:position pos:line="71" pos:column="21"/></name><operator pos:line="71" pos:column="21">-&gt;<pos:position pos:line="71" pos:column="26"/></operator><name pos:line="71" pos:column="23">r<pos:position pos:line="71" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="26">ctx<pos:position pos:line="71" pos:column="29"/></name></expr></argument>)<pos:position pos:line="71" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="31"/></expr_stmt>

        <comment type="block" pos:line="73" pos:column="9">/* we might change the Content-Length, so let's force its re-calculation */</comment>
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">apr_table_unset<pos:position pos:line="74" pos:column="24"/></name><argument_list pos:line="74" pos:column="24">(<argument><expr><name><name pos:line="74" pos:column="25">f<pos:position pos:line="74" pos:column="26"/></name><operator pos:line="74" pos:column="26">-&gt;<pos:position pos:line="74" pos:column="31"/></operator><name pos:line="74" pos:column="28">r<pos:position pos:line="74" pos:column="29"/></name><operator pos:line="74" pos:column="29">-&gt;<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="31">headers_out<pos:position pos:line="74" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="44">"Content-Length"<pos:position pos:line="74" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="62"/></expr_stmt>

        <comment type="block" pos:line="76" pos:column="9">/* consume the data we just sniffed */</comment>
        <comment type="block" pos:line="77" pos:column="9">/* we need to omit any &lt;meta&gt; we just invalidated */</comment>
        <expr_stmt><expr><name><name pos:line="78" pos:column="9">ctx<pos:position pos:line="78" pos:column="12"/></name><operator pos:line="78" pos:column="12">-&gt;<pos:position pos:line="78" pos:column="17"/></operator><name pos:line="78" pos:column="14">flags<pos:position pos:line="78" pos:column="19"/></name></name> <operator pos:line="78" pos:column="20">|=<pos:position pos:line="78" pos:column="22"/></operator> <name pos:line="78" pos:column="23">ENC_INITIALISED<pos:position pos:line="78" pos:column="38"/></name></expr>;<pos:position pos:line="78" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">ap_set_module_config<pos:position pos:line="79" pos:column="29"/></name><argument_list pos:line="79" pos:column="29">(<argument><expr><name><name pos:line="79" pos:column="30">f<pos:position pos:line="79" pos:column="31"/></name><operator pos:line="79" pos:column="31">-&gt;<pos:position pos:line="79" pos:column="36"/></operator><name pos:line="79" pos:column="33">r<pos:position pos:line="79" pos:column="34"/></name><operator pos:line="79" pos:column="34">-&gt;<pos:position pos:line="79" pos:column="39"/></operator><name pos:line="79" pos:column="36">request_config<pos:position pos:line="79" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="52">&amp;<pos:position pos:line="79" pos:column="57"/></operator><name pos:line="79" pos:column="53">xml2enc_module<pos:position pos:line="79" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="69">ctx<pos:position pos:line="79" pos:column="72"/></name></expr></argument>)<pos:position pos:line="79" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><name><name pos:line="81" pos:column="9">ctx<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">-&gt;<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="14">bbnext<pos:position pos:line="81" pos:column="20"/></name></name> <operator pos:line="81" pos:column="21">==<pos:position pos:line="81" pos:column="23"/></operator> <name pos:line="81" pos:column="24">NULL<pos:position pos:line="81" pos:column="28"/></name></expr>)<pos:position pos:line="81" pos:column="29"/></condition><then pos:line="81" pos:column="29"> <block pos:line="81" pos:column="30">{
        <expr_stmt><expr><name><name pos:line="82" pos:column="9">ctx<pos:position pos:line="82" pos:column="12"/></name><operator pos:line="82" pos:column="12">-&gt;<pos:position pos:line="82" pos:column="17"/></operator><name pos:line="82" pos:column="14">bbnext<pos:position pos:line="82" pos:column="20"/></name></name> <operator pos:line="82" pos:column="21">=<pos:position pos:line="82" pos:column="22"/></operator> <call><name pos:line="82" pos:column="23">apr_brigade_create<pos:position pos:line="82" pos:column="41"/></name><argument_list pos:line="82" pos:column="41">(<argument><expr><name><name pos:line="82" pos:column="42">f<pos:position pos:line="82" pos:column="43"/></name><operator pos:line="82" pos:column="43">-&gt;<pos:position pos:line="82" pos:column="48"/></operator><name pos:line="82" pos:column="45">r<pos:position pos:line="82" pos:column="46"/></name><operator pos:line="82" pos:column="46">-&gt;<pos:position pos:line="82" pos:column="51"/></operator><name pos:line="82" pos:column="48">pool<pos:position pos:line="82" pos:column="52"/></name></name></expr></argument>,
                                         <argument><expr><name><name pos:line="83" pos:column="42">f<pos:position pos:line="83" pos:column="43"/></name><operator pos:line="83" pos:column="43">-&gt;<pos:position pos:line="83" pos:column="48"/></operator><name pos:line="83" pos:column="45">r<pos:position pos:line="83" pos:column="46"/></name><operator pos:line="83" pos:column="46">-&gt;<pos:position pos:line="83" pos:column="51"/></operator><name pos:line="83" pos:column="48">connection<pos:position pos:line="83" pos:column="58"/></name><operator pos:line="83" pos:column="58">-&gt;<pos:position pos:line="83" pos:column="63"/></operator><name pos:line="83" pos:column="60">bucket_alloc<pos:position pos:line="83" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>

    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><operator pos:line="86" pos:column="9">!<pos:position pos:line="86" pos:column="10"/></operator><name><name pos:line="86" pos:column="10">ctx<pos:position pos:line="86" pos:column="13"/></name><operator pos:line="86" pos:column="13">-&gt;<pos:position pos:line="86" pos:column="18"/></operator><name pos:line="86" pos:column="15">convset<pos:position pos:line="86" pos:column="22"/></name></name></expr>)<pos:position pos:line="86" pos:column="23"/></condition><then pos:line="86" pos:column="23"> <block pos:line="86" pos:column="24">{
        <expr_stmt><expr><name pos:line="87" pos:column="9">rv<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <call><name pos:line="87" pos:column="14">ap_pass_brigade<pos:position pos:line="87" pos:column="29"/></name><argument_list pos:line="87" pos:column="29">(<argument><expr><name><name pos:line="87" pos:column="30">f<pos:position pos:line="87" pos:column="31"/></name><operator pos:line="87" pos:column="31">-&gt;<pos:position pos:line="87" pos:column="36"/></operator><name pos:line="87" pos:column="33">next<pos:position pos:line="87" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="39">ctx<pos:position pos:line="87" pos:column="42"/></name><operator pos:line="87" pos:column="42">-&gt;<pos:position pos:line="87" pos:column="47"/></operator><name pos:line="87" pos:column="44">bbsave<pos:position pos:line="87" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">apr_brigade_cleanup<pos:position pos:line="88" pos:column="28"/></name><argument_list pos:line="88" pos:column="28">(<argument><expr><name><name pos:line="88" pos:column="29">ctx<pos:position pos:line="88" pos:column="32"/></name><operator pos:line="88" pos:column="32">-&gt;<pos:position pos:line="88" pos:column="37"/></operator><name pos:line="88" pos:column="34">bbsave<pos:position pos:line="88" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="89" pos:column="9">ap_remove_output_filter<pos:position pos:line="89" pos:column="32"/></name><argument_list pos:line="89" pos:column="32">(<argument><expr><name pos:line="89" pos:column="33">f<pos:position pos:line="89" pos:column="34"/></name></expr></argument>)<pos:position pos:line="89" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="36"/></expr_stmt>
        <return pos:line="90" pos:column="9">return <expr><name pos:line="90" pos:column="16">rv<pos:position pos:line="90" pos:column="18"/></name></expr>;<pos:position pos:line="90" pos:column="19"/></return>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="92" pos:column="5">/* move the data back to bb */</comment>
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">APR_BRIGADE_CONCAT<pos:position pos:line="93" pos:column="23"/></name><argument_list pos:line="93" pos:column="23">(<argument><expr><name pos:line="93" pos:column="24">bb<pos:position pos:line="93" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="28">ctx<pos:position pos:line="93" pos:column="31"/></name><operator pos:line="93" pos:column="31">-&gt;<pos:position pos:line="93" pos:column="36"/></operator><name pos:line="93" pos:column="33">bbsave<pos:position pos:line="93" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="41"/></expr_stmt>

    <while pos:line="95" pos:column="5">while <condition pos:line="95" pos:column="11">(<expr><name pos:line="95" pos:column="12">b<pos:position pos:line="95" pos:column="13"/></name> <operator pos:line="95" pos:column="14">=<pos:position pos:line="95" pos:column="15"/></operator> <call><name pos:line="95" pos:column="16">APR_BRIGADE_FIRST<pos:position pos:line="95" pos:column="33"/></name><argument_list pos:line="95" pos:column="33">(<argument><expr><name pos:line="95" pos:column="34">bb<pos:position pos:line="95" pos:column="36"/></name></expr></argument>)<pos:position pos:line="95" pos:column="37"/></argument_list></call></expr><operator pos:line="95" pos:column="37">,<pos:position pos:line="95" pos:column="38"/></operator> <expr><name pos:line="95" pos:column="39">b<pos:position pos:line="95" pos:column="40"/></name> <operator pos:line="95" pos:column="41">!=<pos:position pos:line="95" pos:column="43"/></operator> <call><name pos:line="95" pos:column="44">APR_BRIGADE_SENTINEL<pos:position pos:line="95" pos:column="64"/></name><argument_list pos:line="95" pos:column="64">(<argument><expr><name pos:line="95" pos:column="65">bb<pos:position pos:line="95" pos:column="67"/></name></expr></argument>)<pos:position pos:line="95" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="69"/></condition> <block pos:line="95" pos:column="70">{
        <expr_stmt><expr><name><name pos:line="96" pos:column="9">ctx<pos:position pos:line="96" pos:column="12"/></name><operator pos:line="96" pos:column="12">-&gt;<pos:position pos:line="96" pos:column="17"/></operator><name pos:line="96" pos:column="14">bytes<pos:position pos:line="96" pos:column="19"/></name></name> <operator pos:line="96" pos:column="20">=<pos:position pos:line="96" pos:column="21"/></operator> <literal type="number" pos:line="96" pos:column="22">0<pos:position pos:line="96" pos:column="23"/></literal></expr>;<pos:position pos:line="96" pos:column="24"/></expr_stmt>
        <if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><call><name pos:line="97" pos:column="13">APR_BUCKET_IS_METADATA<pos:position pos:line="97" pos:column="35"/></name><argument_list pos:line="97" pos:column="35">(<argument><expr><name pos:line="97" pos:column="36">b<pos:position pos:line="97" pos:column="37"/></name></expr></argument>)<pos:position pos:line="97" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="39"/></condition><then pos:line="97" pos:column="39"> <block pos:line="97" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="98" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="98" pos:column="30"/></name><argument_list pos:line="98" pos:column="30">(<argument><expr><name pos:line="98" pos:column="31">b<pos:position pos:line="98" pos:column="32"/></name></expr></argument>)<pos:position pos:line="98" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="34"/></expr_stmt>
            <if pos:line="99" pos:column="13">if <condition pos:line="99" pos:column="16">(<expr><call><name pos:line="99" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="99" pos:column="34"/></name><argument_list pos:line="99" pos:column="34">(<argument><expr><name pos:line="99" pos:column="35">b<pos:position pos:line="99" pos:column="36"/></name></expr></argument>)<pos:position pos:line="99" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="38"/></condition><then pos:line="99" pos:column="38"> <block pos:line="99" pos:column="39">{
                <comment type="block" pos:line="100" pos:column="17">/* send remaining data */</comment>
                <expr_stmt><expr><call><name pos:line="101" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="101" pos:column="40"/></name><argument_list pos:line="101" pos:column="40">(<argument><expr><name><name pos:line="101" pos:column="41">ctx<pos:position pos:line="101" pos:column="44"/></name><operator pos:line="101" pos:column="44">-&gt;<pos:position pos:line="101" pos:column="49"/></operator><name pos:line="101" pos:column="46">bbnext<pos:position pos:line="101" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="54">b<pos:position pos:line="101" pos:column="55"/></name></expr></argument>)<pos:position pos:line="101" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="57"/></expr_stmt>
                <return pos:line="102" pos:column="17">return <expr><call><name pos:line="102" pos:column="24">ap_fflush<pos:position pos:line="102" pos:column="33"/></name><argument_list pos:line="102" pos:column="33">(<argument><expr><name><name pos:line="102" pos:column="34">f<pos:position pos:line="102" pos:column="35"/></name><operator pos:line="102" pos:column="35">-&gt;<pos:position pos:line="102" pos:column="40"/></operator><name pos:line="102" pos:column="37">next<pos:position pos:line="102" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="43">ctx<pos:position pos:line="102" pos:column="46"/></name><operator pos:line="102" pos:column="46">-&gt;<pos:position pos:line="102" pos:column="51"/></operator><name pos:line="102" pos:column="48">bbnext<pos:position pos:line="102" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="56"/></return>
            }<pos:position pos:line="103" pos:column="14"/></block></then> <elseif pos:line="103" pos:column="15">else <if pos:line="103" pos:column="20">if <condition pos:line="103" pos:column="23">(<expr><call><name pos:line="103" pos:column="24">APR_BUCKET_IS_FLUSH<pos:position pos:line="103" pos:column="43"/></name><argument_list pos:line="103" pos:column="43">(<argument><expr><name pos:line="103" pos:column="44">b<pos:position pos:line="103" pos:column="45"/></name></expr></argument>)<pos:position pos:line="103" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="47"/></condition><then pos:line="103" pos:column="47"> <block pos:line="103" pos:column="48">{
                <expr_stmt><expr><call><name pos:line="104" pos:column="17">ap_fflush<pos:position pos:line="104" pos:column="26"/></name><argument_list pos:line="104" pos:column="26">(<argument><expr><name><name pos:line="104" pos:column="27">f<pos:position pos:line="104" pos:column="28"/></name><operator pos:line="104" pos:column="28">-&gt;<pos:position pos:line="104" pos:column="33"/></operator><name pos:line="104" pos:column="30">next<pos:position pos:line="104" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="36">ctx<pos:position pos:line="104" pos:column="39"/></name><operator pos:line="104" pos:column="39">-&gt;<pos:position pos:line="104" pos:column="44"/></operator><name pos:line="104" pos:column="41">bbnext<pos:position pos:line="104" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="105" pos:column="14"/></block></then></if></elseif></if>
            <expr_stmt><expr><call><name pos:line="106" pos:column="13">apr_bucket_destroy<pos:position pos:line="106" pos:column="31"/></name><argument_list pos:line="106" pos:column="31">(<argument><expr><name pos:line="106" pos:column="32">b<pos:position pos:line="106" pos:column="33"/></name></expr></argument>)<pos:position pos:line="106" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="107" pos:column="10"/></block></then>
        <else pos:line="108" pos:column="9">else <block pos:line="108" pos:column="14">{        <comment type="block" pos:line="108" pos:column="23">/* data bucket */</comment>
            <decl_stmt><decl><type><name pos:line="109" pos:column="13">char<pos:position pos:line="109" pos:column="17"/></name><modifier pos:line="109" pos:column="17">*<pos:position pos:line="109" pos:column="18"/></modifier></type> <name pos:line="109" pos:column="19">buf<pos:position pos:line="109" pos:column="22"/></name></decl>;<pos:position pos:line="109" pos:column="23"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="110" pos:column="13">apr_size_t<pos:position pos:line="110" pos:column="23"/></name></type> <name pos:line="110" pos:column="24">bytes<pos:position pos:line="110" pos:column="29"/></name> <init pos:line="110" pos:column="30">= <expr><literal type="number" pos:line="110" pos:column="32">0<pos:position pos:line="110" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="110" pos:column="34"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="111" pos:column="13">char<pos:position pos:line="111" pos:column="17"/></name></type> <name><name pos:line="111" pos:column="18">fixbuf<pos:position pos:line="111" pos:column="24"/></name><index pos:line="111" pos:column="24">[<expr><name pos:line="111" pos:column="25">BUFLEN<pos:position pos:line="111" pos:column="31"/></name></expr>]<pos:position pos:line="111" pos:column="32"/></index></name></decl>;<pos:position pos:line="111" pos:column="33"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="112" pos:column="13">apr_bucket<pos:position pos:line="112" pos:column="23"/></name><modifier pos:line="112" pos:column="23">*<pos:position pos:line="112" pos:column="24"/></modifier></type> <name pos:line="112" pos:column="25">bdestroy<pos:position pos:line="112" pos:column="33"/></name> <init pos:line="112" pos:column="34">= <expr><name pos:line="112" pos:column="36">NULL<pos:position pos:line="112" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="112" pos:column="41"/></decl_stmt>
            <if pos:line="113" pos:column="13">if <condition pos:line="113" pos:column="16">(<expr><name pos:line="113" pos:column="17">insz<pos:position pos:line="113" pos:column="21"/></name> <operator pos:line="113" pos:column="22">&gt;<pos:position pos:line="113" pos:column="26"/></operator> <literal type="number" pos:line="113" pos:column="24">0<pos:position pos:line="113" pos:column="25"/></literal></expr>)<pos:position pos:line="113" pos:column="26"/></condition><then pos:line="113" pos:column="26"> <block pos:line="113" pos:column="27">{ <comment type="block" pos:line="113" pos:column="29">/* we have dangling data.  Flatten it. */</comment>
                <expr_stmt><expr><name pos:line="114" pos:column="17">buf<pos:position pos:line="114" pos:column="20"/></name> <operator pos:line="114" pos:column="21">=<pos:position pos:line="114" pos:column="22"/></operator> <name pos:line="114" pos:column="23">fixbuf<pos:position pos:line="114" pos:column="29"/></name></expr>;<pos:position pos:line="114" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name pos:line="115" pos:column="17">bytes<pos:position pos:line="115" pos:column="22"/></name> <operator pos:line="115" pos:column="23">=<pos:position pos:line="115" pos:column="24"/></operator> <name pos:line="115" pos:column="25">BUFLEN<pos:position pos:line="115" pos:column="31"/></name></expr>;<pos:position pos:line="115" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><name pos:line="116" pos:column="17">rv<pos:position pos:line="116" pos:column="19"/></name> <operator pos:line="116" pos:column="20">=<pos:position pos:line="116" pos:column="21"/></operator> <call><name pos:line="116" pos:column="22">apr_brigade_flatten<pos:position pos:line="116" pos:column="41"/></name><argument_list pos:line="116" pos:column="41">(<argument><expr><name pos:line="116" pos:column="42">bb<pos:position pos:line="116" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="46">buf<pos:position pos:line="116" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="116" pos:column="51">&amp;<pos:position pos:line="116" pos:column="56"/></operator><name pos:line="116" pos:column="52">bytes<pos:position pos:line="116" pos:column="57"/></name></expr></argument>)<pos:position pos:line="116" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="117" pos:column="17">ap_assert<pos:position pos:line="117" pos:column="26"/></name><argument_list pos:line="117" pos:column="26">(<argument><expr><name pos:line="117" pos:column="27">rv<pos:position pos:line="117" pos:column="29"/></name> <operator pos:line="117" pos:column="30">==<pos:position pos:line="117" pos:column="32"/></operator> <name pos:line="117" pos:column="33">APR_SUCCESS<pos:position pos:line="117" pos:column="44"/></name></expr></argument>)<pos:position pos:line="117" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="46"/></expr_stmt>
                <if pos:line="118" pos:column="17">if <condition pos:line="118" pos:column="20">(<expr><name pos:line="118" pos:column="21">bytes<pos:position pos:line="118" pos:column="26"/></name> <operator pos:line="118" pos:column="27">==<pos:position pos:line="118" pos:column="29"/></operator> <name pos:line="118" pos:column="30">insz<pos:position pos:line="118" pos:column="34"/></name></expr>)<pos:position pos:line="118" pos:column="35"/></condition><then pos:line="118" pos:column="35"> <block pos:line="118" pos:column="36">{
                    <comment type="block" pos:line="119" pos:column="21">/* this is only what we've already tried to convert.
                     * The brigade is exhausted.
                     * Save remaining data for next time round
                     */</comment>
          
                    <expr_stmt><expr><call><name pos:line="124" pos:column="21">ap_log_rerror<pos:position pos:line="124" pos:column="34"/></name><argument_list pos:line="124" pos:column="34">(<argument><expr><name pos:line="124" pos:column="35">APLOG_MARK<pos:position pos:line="124" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="47">APLOG_DEBUG<pos:position pos:line="124" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="60">0<pos:position pos:line="124" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="63">f<pos:position pos:line="124" pos:column="64"/></name><operator pos:line="124" pos:column="64">-&gt;<pos:position pos:line="124" pos:column="69"/></operator><name pos:line="124" pos:column="66">r<pos:position pos:line="124" pos:column="67"/></name></name></expr></argument>, <argument><expr><call><name pos:line="124" pos:column="69">APLOGNO<pos:position pos:line="124" pos:column="76"/></name><argument_list pos:line="124" pos:column="76">(<argument><expr><literal type="number" pos:line="124" pos:column="77">01437<pos:position pos:line="124" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="83"/></argument_list></call>
                                  <literal type="string" pos:line="125" pos:column="35">"xml2enc: Setting aside %"<pos:position pos:line="125" pos:column="61"/></literal> <name pos:line="125" pos:column="62">APR_SIZE_T_FMT<pos:position pos:line="125" pos:column="76"/></name>
                                  <literal type="string" pos:line="126" pos:column="35">" unconverted bytes"<pos:position pos:line="126" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="126" pos:column="57">bytes<pos:position pos:line="126" pos:column="62"/></name></expr></argument>)<pos:position pos:line="126" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="64"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="127" pos:column="21">rv<pos:position pos:line="127" pos:column="23"/></name> <operator pos:line="127" pos:column="24">=<pos:position pos:line="127" pos:column="25"/></operator> <call><name pos:line="127" pos:column="26">ap_fflush<pos:position pos:line="127" pos:column="35"/></name><argument_list pos:line="127" pos:column="35">(<argument><expr><name><name pos:line="127" pos:column="36">f<pos:position pos:line="127" pos:column="37"/></name><operator pos:line="127" pos:column="37">-&gt;<pos:position pos:line="127" pos:column="42"/></operator><name pos:line="127" pos:column="39">next<pos:position pos:line="127" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="45">ctx<pos:position pos:line="127" pos:column="48"/></name><operator pos:line="127" pos:column="48">-&gt;<pos:position pos:line="127" pos:column="53"/></operator><name pos:line="127" pos:column="50">bbnext<pos:position pos:line="127" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="58"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="128" pos:column="21">APR_BRIGADE_CONCAT<pos:position pos:line="128" pos:column="39"/></name><argument_list pos:line="128" pos:column="39">(<argument><expr><name><name pos:line="128" pos:column="40">ctx<pos:position pos:line="128" pos:column="43"/></name><operator pos:line="128" pos:column="43">-&gt;<pos:position pos:line="128" pos:column="48"/></operator><name pos:line="128" pos:column="45">bbsave<pos:position pos:line="128" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="53">bb<pos:position pos:line="128" pos:column="55"/></name></expr></argument>)<pos:position pos:line="128" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="57"/></expr_stmt>
                    <macro><name pos:line="129" pos:column="21">APR_BRIGADE_DO<pos:position pos:line="129" pos:column="35"/></name><argument_list pos:line="129" pos:column="35">(<argument pos:line="129" pos:column="36">b<pos:position pos:line="129" pos:column="37"/></argument>, <argument pos:line="129" pos:column="39">ctx-&gt;bbsave<pos:position pos:line="129" pos:column="50"/></argument>)<pos:position pos:line="129" pos:column="51"/></argument_list></macro> <block pos:line="129" pos:column="52">{
                        <expr_stmt><expr><call><name pos:line="130" pos:column="25">ap_assert<pos:position pos:line="130" pos:column="34"/></name><argument_list pos:line="130" pos:column="34">(<argument><expr><call><name pos:line="130" pos:column="35">apr_bucket_setaside<pos:position pos:line="130" pos:column="54"/></name><argument_list pos:line="130" pos:column="54">(<argument><expr><name pos:line="130" pos:column="55">b<pos:position pos:line="130" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="58">f<pos:position pos:line="130" pos:column="59"/></name><operator pos:line="130" pos:column="59">-&gt;<pos:position pos:line="130" pos:column="64"/></operator><name pos:line="130" pos:column="61">r<pos:position pos:line="130" pos:column="62"/></name><operator pos:line="130" pos:column="62">-&gt;<pos:position pos:line="130" pos:column="67"/></operator><name pos:line="130" pos:column="64">pool<pos:position pos:line="130" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="69"/></argument_list></call>
                                  <operator pos:line="131" pos:column="35">==<pos:position pos:line="131" pos:column="37"/></operator> <name pos:line="131" pos:column="38">APR_SUCCESS<pos:position pos:line="131" pos:column="49"/></name></expr></argument>)<pos:position pos:line="131" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="51"/></expr_stmt>
                    }<pos:position pos:line="132" pos:column="22"/></block>
                    <return pos:line="133" pos:column="21">return <expr><name pos:line="133" pos:column="28">rv<pos:position pos:line="133" pos:column="30"/></name></expr>;<pos:position pos:line="133" pos:column="31"/></return>
                }<pos:position pos:line="134" pos:column="18"/></block></then></if>
                <comment type="block" pos:line="135" pos:column="17">/* remove the data we've just read */</comment>
                <expr_stmt><expr><name pos:line="136" pos:column="17">rv<pos:position pos:line="136" pos:column="19"/></name> <operator pos:line="136" pos:column="20">=<pos:position pos:line="136" pos:column="21"/></operator> <call><name pos:line="136" pos:column="22">apr_brigade_partition<pos:position pos:line="136" pos:column="43"/></name><argument_list pos:line="136" pos:column="43">(<argument><expr><name pos:line="136" pos:column="44">bb<pos:position pos:line="136" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="48">bytes<pos:position pos:line="136" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="136" pos:column="55">&amp;<pos:position pos:line="136" pos:column="60"/></operator><name pos:line="136" pos:column="56">bstart<pos:position pos:line="136" pos:column="62"/></name></expr></argument>)<pos:position pos:line="136" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="64"/></expr_stmt>
                <while pos:line="137" pos:column="17">while <condition pos:line="137" pos:column="23">(<expr><name pos:line="137" pos:column="24">b<pos:position pos:line="137" pos:column="25"/></name> <operator pos:line="137" pos:column="26">=<pos:position pos:line="137" pos:column="27"/></operator> <call><name pos:line="137" pos:column="28">APR_BRIGADE_FIRST<pos:position pos:line="137" pos:column="45"/></name><argument_list pos:line="137" pos:column="45">(<argument><expr><name pos:line="137" pos:column="46">bb<pos:position pos:line="137" pos:column="48"/></name></expr></argument>)<pos:position pos:line="137" pos:column="49"/></argument_list></call></expr><operator pos:line="137" pos:column="49">,<pos:position pos:line="137" pos:column="50"/></operator> <expr><name pos:line="137" pos:column="51">b<pos:position pos:line="137" pos:column="52"/></name> <operator pos:line="137" pos:column="53">!=<pos:position pos:line="137" pos:column="55"/></operator> <name pos:line="137" pos:column="56">bstart<pos:position pos:line="137" pos:column="62"/></name></expr>)<pos:position pos:line="137" pos:column="63"/></condition> <block pos:line="137" pos:column="64">{
                    <expr_stmt><expr><call><name pos:line="138" pos:column="21">APR_BUCKET_REMOVE<pos:position pos:line="138" pos:column="38"/></name><argument_list pos:line="138" pos:column="38">(<argument><expr><name pos:line="138" pos:column="39">b<pos:position pos:line="138" pos:column="40"/></name></expr></argument>)<pos:position pos:line="138" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="42"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="139" pos:column="21">apr_bucket_destroy<pos:position pos:line="139" pos:column="39"/></name><argument_list pos:line="139" pos:column="39">(<argument><expr><name pos:line="139" pos:column="40">b<pos:position pos:line="139" pos:column="41"/></name></expr></argument>)<pos:position pos:line="139" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="140" pos:column="18"/></block></while>
                <expr_stmt><expr><call><name pos:line="141" pos:column="17">ap_log_rerror<pos:position pos:line="141" pos:column="30"/></name><argument_list pos:line="141" pos:column="30">(<argument><expr><name pos:line="141" pos:column="31">APLOG_MARK<pos:position pos:line="141" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="43">APLOG_DEBUG<pos:position pos:line="141" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="56">0<pos:position pos:line="141" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="141" pos:column="59">f<pos:position pos:line="141" pos:column="60"/></name><operator pos:line="141" pos:column="60">-&gt;<pos:position pos:line="141" pos:column="65"/></operator><name pos:line="141" pos:column="62">r<pos:position pos:line="141" pos:column="63"/></name></name></expr></argument>, <argument><expr><call><name pos:line="141" pos:column="65">APLOGNO<pos:position pos:line="141" pos:column="72"/></name><argument_list pos:line="141" pos:column="72">(<argument><expr><literal type="number" pos:line="141" pos:column="73">01438<pos:position pos:line="141" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="79"/></argument_list></call>
                              <literal type="string" pos:line="142" pos:column="31">"xml2enc: consuming %"<pos:position pos:line="142" pos:column="53"/></literal> <name pos:line="142" pos:column="54">APR_SIZE_T_FMT<pos:position pos:line="142" pos:column="68"/></name>
                              <literal type="string" pos:line="143" pos:column="31">" bytes flattened"<pos:position pos:line="143" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="51">bytes<pos:position pos:line="143" pos:column="56"/></name></expr></argument>)<pos:position pos:line="143" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="58"/></expr_stmt>
            }<pos:position pos:line="144" pos:column="14"/></block></then>
            <else pos:line="145" pos:column="13">else <block pos:line="145" pos:column="18">{
                <expr_stmt><expr><name pos:line="146" pos:column="17">rv<pos:position pos:line="146" pos:column="19"/></name> <operator pos:line="146" pos:column="20">=<pos:position pos:line="146" pos:column="21"/></operator> <call><name pos:line="146" pos:column="22">apr_bucket_read<pos:position pos:line="146" pos:column="37"/></name><argument_list pos:line="146" pos:column="37">(<argument><expr><name pos:line="146" pos:column="38">b<pos:position pos:line="146" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="146" pos:column="41">(<pos:position pos:line="146" pos:column="42"/></operator><specifier pos:line="146" pos:column="42">const<pos:position pos:line="146" pos:column="47"/></specifier> <name pos:line="146" pos:column="48">char<pos:position pos:line="146" pos:column="52"/></name><operator pos:line="146" pos:column="52">*<pos:position pos:line="146" pos:column="53"/></operator><operator pos:line="146" pos:column="53">*<pos:position pos:line="146" pos:column="54"/></operator><operator pos:line="146" pos:column="54">)<pos:position pos:line="146" pos:column="55"/></operator><operator pos:line="146" pos:column="55">&amp;<pos:position pos:line="146" pos:column="60"/></operator><name pos:line="146" pos:column="56">buf<pos:position pos:line="146" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="146" pos:column="61">&amp;<pos:position pos:line="146" pos:column="66"/></operator><name pos:line="146" pos:column="62">bytes<pos:position pos:line="146" pos:column="67"/></name></expr></argument>,
                                     <argument><expr><name pos:line="147" pos:column="38">APR_BLOCK_READ<pos:position pos:line="147" pos:column="52"/></name></expr></argument>)<pos:position pos:line="147" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="148" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="148" pos:column="34"/></name><argument_list pos:line="148" pos:column="34">(<argument><expr><name pos:line="148" pos:column="35">b<pos:position pos:line="148" pos:column="36"/></name></expr></argument>)<pos:position pos:line="148" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="149" pos:column="17">bdestroy<pos:position pos:line="149" pos:column="25"/></name> <operator pos:line="149" pos:column="26">=<pos:position pos:line="149" pos:column="27"/></operator> <name pos:line="149" pos:column="28">b<pos:position pos:line="149" pos:column="29"/></name></expr>;<pos:position pos:line="149" pos:column="30"/></expr_stmt>  <comment type="block" pos:line="149" pos:column="32">/* can't destroy until finished with the data */</comment>
                <expr_stmt><expr><call><name pos:line="150" pos:column="17">ap_log_rerror<pos:position pos:line="150" pos:column="30"/></name><argument_list pos:line="150" pos:column="30">(<argument><expr><name pos:line="150" pos:column="31">APLOG_MARK<pos:position pos:line="150" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="43">APLOG_DEBUG<pos:position pos:line="150" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="150" pos:column="56">0<pos:position pos:line="150" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="150" pos:column="59">f<pos:position pos:line="150" pos:column="60"/></name><operator pos:line="150" pos:column="60">-&gt;<pos:position pos:line="150" pos:column="65"/></operator><name pos:line="150" pos:column="62">r<pos:position pos:line="150" pos:column="63"/></name></name></expr></argument>, <argument><expr><call><name pos:line="150" pos:column="65">APLOGNO<pos:position pos:line="150" pos:column="72"/></name><argument_list pos:line="150" pos:column="72">(<argument><expr><literal type="number" pos:line="150" pos:column="73">01439<pos:position pos:line="150" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="79"/></argument_list></call>
                              <literal type="string" pos:line="151" pos:column="31">"xml2enc: consuming %"<pos:position pos:line="151" pos:column="53"/></literal> <name pos:line="151" pos:column="54">APR_SIZE_T_FMT<pos:position pos:line="151" pos:column="68"/></name>
                              <literal type="string" pos:line="152" pos:column="31">" bytes from bucket"<pos:position pos:line="152" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="152" pos:column="53">bytes<pos:position pos:line="152" pos:column="58"/></name></expr></argument>)<pos:position pos:line="152" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="153" pos:column="14"/></block></else></if>
            <comment type="block" pos:line="154" pos:column="13">/* OK, we've got some input we can use in [buf,bytes] */</comment>
            <if pos:line="155" pos:column="13">if <condition pos:line="155" pos:column="16">(<expr><name pos:line="155" pos:column="17">rv<pos:position pos:line="155" pos:column="19"/></name> <operator pos:line="155" pos:column="20">==<pos:position pos:line="155" pos:column="22"/></operator> <name pos:line="155" pos:column="23">APR_SUCCESS<pos:position pos:line="155" pos:column="34"/></name></expr>)<pos:position pos:line="155" pos:column="35"/></condition><then pos:line="155" pos:column="35"> <block pos:line="155" pos:column="36">{
                <decl_stmt><decl><type><name pos:line="156" pos:column="17">apr_size_t<pos:position pos:line="156" pos:column="27"/></name></type> <name pos:line="156" pos:column="28">consumed<pos:position pos:line="156" pos:column="36"/></name></decl>;<pos:position pos:line="156" pos:column="37"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="157" pos:column="17">xml2enc_run_preprocess<pos:position pos:line="157" pos:column="39"/></name><argument_list pos:line="157" pos:column="39">(<argument><expr><name pos:line="157" pos:column="40">f<pos:position pos:line="157" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="157" pos:column="43">&amp;<pos:position pos:line="157" pos:column="48"/></operator><name pos:line="157" pos:column="44">buf<pos:position pos:line="157" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="157" pos:column="49">&amp;<pos:position pos:line="157" pos:column="54"/></operator><name pos:line="157" pos:column="50">bytes<pos:position pos:line="157" pos:column="55"/></name></expr></argument>)<pos:position pos:line="157" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><name pos:line="158" pos:column="17">consumed<pos:position pos:line="158" pos:column="25"/></name> <operator pos:line="158" pos:column="26">=<pos:position pos:line="158" pos:column="27"/></operator> <name pos:line="158" pos:column="28">insz<pos:position pos:line="158" pos:column="32"/></name> <operator pos:line="158" pos:column="33">=<pos:position pos:line="158" pos:column="34"/></operator> <name pos:line="158" pos:column="35">bytes<pos:position pos:line="158" pos:column="40"/></name></expr>;<pos:position pos:line="158" pos:column="41"/></expr_stmt>
                <while pos:line="159" pos:column="17">while <condition pos:line="159" pos:column="23">(<expr><name pos:line="159" pos:column="24">insz<pos:position pos:line="159" pos:column="28"/></name> <operator pos:line="159" pos:column="29">&gt;<pos:position pos:line="159" pos:column="33"/></operator> <literal type="number" pos:line="159" pos:column="31">0<pos:position pos:line="159" pos:column="32"/></literal></expr>)<pos:position pos:line="159" pos:column="33"/></condition> <block pos:line="159" pos:column="34">{
                    <decl_stmt><decl><type><name pos:line="160" pos:column="21">apr_status_t<pos:position pos:line="160" pos:column="33"/></name></type> <name pos:line="160" pos:column="34">rv2<pos:position pos:line="160" pos:column="37"/></name></decl>;<pos:position pos:line="160" pos:column="38"/></decl_stmt>
                    <if pos:line="161" pos:column="21">if <condition pos:line="161" pos:column="24">(<expr><name><name pos:line="161" pos:column="25">ctx<pos:position pos:line="161" pos:column="28"/></name><operator pos:line="161" pos:column="28">-&gt;<pos:position pos:line="161" pos:column="33"/></operator><name pos:line="161" pos:column="30">bytes<pos:position pos:line="161" pos:column="35"/></name></name> <operator pos:line="161" pos:column="36">==<pos:position pos:line="161" pos:column="38"/></operator> <name><name pos:line="161" pos:column="39">ctx<pos:position pos:line="161" pos:column="42"/></name><operator pos:line="161" pos:column="42">-&gt;<pos:position pos:line="161" pos:column="47"/></operator><name pos:line="161" pos:column="44">bblen<pos:position pos:line="161" pos:column="49"/></name></name></expr>)<pos:position pos:line="161" pos:column="50"/></condition><then pos:line="161" pos:column="50"> <block pos:line="161" pos:column="51">{
                        <comment type="block" pos:line="162" pos:column="25">/* nothing was converted last time!
                         * break out of this loop! 
                         */</comment>
                        <expr_stmt><expr><name pos:line="165" pos:column="25">b<pos:position pos:line="165" pos:column="26"/></name> <operator pos:line="165" pos:column="27">=<pos:position pos:line="165" pos:column="28"/></operator> <call><name pos:line="165" pos:column="29">apr_bucket_transient_create<pos:position pos:line="165" pos:column="56"/></name><argument_list pos:line="165" pos:column="56">(<argument><expr><name pos:line="165" pos:column="57">buf<pos:position pos:line="165" pos:column="60"/></name><operator pos:line="165" pos:column="60">+<pos:position pos:line="165" pos:column="61"/></operator><operator pos:line="165" pos:column="61">(<pos:position pos:line="165" pos:column="62"/></operator><name pos:line="165" pos:column="62">bytes<pos:position pos:line="165" pos:column="67"/></name> <operator pos:line="165" pos:column="68">-<pos:position pos:line="165" pos:column="69"/></operator> <name pos:line="165" pos:column="70">insz<pos:position pos:line="165" pos:column="74"/></name><operator pos:line="165" pos:column="74">)<pos:position pos:line="165" pos:column="75"/></operator></expr></argument>, <argument><expr><name pos:line="165" pos:column="77">insz<pos:position pos:line="165" pos:column="81"/></name></expr></argument>,
                                                        <argument><expr><name><name pos:line="166" pos:column="57">bb<pos:position pos:line="166" pos:column="59"/></name><operator pos:line="166" pos:column="59">-&gt;<pos:position pos:line="166" pos:column="64"/></operator><name pos:line="166" pos:column="61">bucket_alloc<pos:position pos:line="166" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="166" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="75"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="167" pos:column="25">APR_BRIGADE_INSERT_HEAD<pos:position pos:line="167" pos:column="48"/></name><argument_list pos:line="167" pos:column="48">(<argument><expr><name pos:line="167" pos:column="49">bb<pos:position pos:line="167" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="53">b<pos:position pos:line="167" pos:column="54"/></name></expr></argument>)<pos:position pos:line="167" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="56"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="168" pos:column="25">ap_log_rerror<pos:position pos:line="168" pos:column="38"/></name><argument_list pos:line="168" pos:column="38">(<argument><expr><name pos:line="168" pos:column="39">APLOG_MARK<pos:position pos:line="168" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="51">APLOG_DEBUG<pos:position pos:line="168" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="168" pos:column="64">0<pos:position pos:line="168" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="67">f<pos:position pos:line="168" pos:column="68"/></name><operator pos:line="168" pos:column="68">-&gt;<pos:position pos:line="168" pos:column="73"/></operator><name pos:line="168" pos:column="70">r<pos:position pos:line="168" pos:column="71"/></name></name></expr></argument>, <argument><expr><call><name pos:line="168" pos:column="73">APLOGNO<pos:position pos:line="168" pos:column="80"/></name><argument_list pos:line="168" pos:column="80">(<argument><expr><literal type="number" pos:line="168" pos:column="81">01440<pos:position pos:line="168" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="87"/></argument_list></call>
                                      <literal type="string" pos:line="169" pos:column="39">"xml2enc: reinserting %"<pos:position pos:line="169" pos:column="63"/></literal> <name pos:line="169" pos:column="64">APR_SIZE_T_FMT<pos:position pos:line="169" pos:column="78"/></name>
                                      <literal type="string" pos:line="170" pos:column="39">" unconsumed bytes from bucket"<pos:position pos:line="170" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="72">insz<pos:position pos:line="170" pos:column="76"/></name></expr></argument>)<pos:position pos:line="170" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="78"/></expr_stmt>
                        <break pos:line="171" pos:column="25">break;<pos:position pos:line="171" pos:column="31"/></break>
                    }<pos:position pos:line="172" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name><name pos:line="173" pos:column="21">ctx<pos:position pos:line="173" pos:column="24"/></name><operator pos:line="173" pos:column="24">-&gt;<pos:position pos:line="173" pos:column="29"/></operator><name pos:line="173" pos:column="26">bytes<pos:position pos:line="173" pos:column="31"/></name></name> <operator pos:line="173" pos:column="32">=<pos:position pos:line="173" pos:column="33"/></operator> <operator pos:line="173" pos:column="34">(<pos:position pos:line="173" pos:column="35"/></operator><name pos:line="173" pos:column="35">apr_size_t<pos:position pos:line="173" pos:column="45"/></name><operator pos:line="173" pos:column="45">)<pos:position pos:line="173" pos:column="46"/></operator><name><name pos:line="173" pos:column="46">ctx<pos:position pos:line="173" pos:column="49"/></name><operator pos:line="173" pos:column="49">-&gt;<pos:position pos:line="173" pos:column="54"/></operator><name pos:line="173" pos:column="51">bblen<pos:position pos:line="173" pos:column="56"/></name></name></expr>;<pos:position pos:line="173" pos:column="57"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="174" pos:column="21">rv<pos:position pos:line="174" pos:column="23"/></name> <operator pos:line="174" pos:column="24">=<pos:position pos:line="174" pos:column="25"/></operator> <call><name pos:line="174" pos:column="26">apr_xlate_conv_buffer<pos:position pos:line="174" pos:column="47"/></name><argument_list pos:line="174" pos:column="47">(<argument><expr><name><name pos:line="174" pos:column="48">ctx<pos:position pos:line="174" pos:column="51"/></name><operator pos:line="174" pos:column="51">-&gt;<pos:position pos:line="174" pos:column="56"/></operator><name pos:line="174" pos:column="53">convset<pos:position pos:line="174" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="62">buf<pos:position pos:line="174" pos:column="65"/></name><operator pos:line="174" pos:column="65">+<pos:position pos:line="174" pos:column="66"/></operator><operator pos:line="174" pos:column="66">(<pos:position pos:line="174" pos:column="67"/></operator><name pos:line="174" pos:column="67">bytes<pos:position pos:line="174" pos:column="72"/></name> <operator pos:line="174" pos:column="73">-<pos:position pos:line="174" pos:column="74"/></operator> <name pos:line="174" pos:column="75">insz<pos:position pos:line="174" pos:column="79"/></name><operator pos:line="174" pos:column="79">)<pos:position pos:line="174" pos:column="80"/></operator></expr></argument>,
                                               <argument><expr><operator pos:line="175" pos:column="48">&amp;<pos:position pos:line="175" pos:column="53"/></operator><name pos:line="175" pos:column="49">insz<pos:position pos:line="175" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="175" pos:column="55">ctx<pos:position pos:line="175" pos:column="58"/></name><operator pos:line="175" pos:column="58">-&gt;<pos:position pos:line="175" pos:column="63"/></operator><name pos:line="175" pos:column="60">buf<pos:position pos:line="175" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="175" pos:column="65">&amp;<pos:position pos:line="175" pos:column="70"/></operator><name><name pos:line="175" pos:column="66">ctx<pos:position pos:line="175" pos:column="69"/></name><operator pos:line="175" pos:column="69">-&gt;<pos:position pos:line="175" pos:column="74"/></operator><name pos:line="175" pos:column="71">bytes<pos:position pos:line="175" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="78"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="176" pos:column="21">ap_log_rerror<pos:position pos:line="176" pos:column="34"/></name><argument_list pos:line="176" pos:column="34">(<argument><expr><name pos:line="176" pos:column="35">APLOG_MARK<pos:position pos:line="176" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="47">APLOG_DEBUG<pos:position pos:line="176" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="60">rv<pos:position pos:line="176" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="64">f<pos:position pos:line="176" pos:column="65"/></name><operator pos:line="176" pos:column="65">-&gt;<pos:position pos:line="176" pos:column="70"/></operator><name pos:line="176" pos:column="67">r<pos:position pos:line="176" pos:column="68"/></name></name></expr></argument>, <argument><expr><call><name pos:line="176" pos:column="70">APLOGNO<pos:position pos:line="176" pos:column="77"/></name><argument_list pos:line="176" pos:column="77">(<argument><expr><literal type="number" pos:line="176" pos:column="78">01441<pos:position pos:line="176" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="84"/></argument_list></call>
                                  <literal type="string" pos:line="177" pos:column="35">"xml2enc: converted %"<pos:position pos:line="177" pos:column="57"/></literal> <name pos:line="177" pos:column="58">APR_SIZE_T_FMT<pos:position pos:line="177" pos:column="72"/></name>
                                  <literal type="string" pos:line="178" pos:column="35">"/%"<pos:position pos:line="178" pos:column="39"/></literal> <name pos:line="178" pos:column="40">APR_OFF_T_FMT<pos:position pos:line="178" pos:column="53"/></name> <literal type="string" pos:line="178" pos:column="54">" bytes"<pos:position pos:line="178" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="178" pos:column="64">consumed<pos:position pos:line="178" pos:column="72"/></name> <operator pos:line="178" pos:column="73">-<pos:position pos:line="178" pos:column="74"/></operator> <name pos:line="178" pos:column="75">insz<pos:position pos:line="178" pos:column="79"/></name></expr></argument>,
                                  <argument><expr><name><name pos:line="179" pos:column="35">ctx<pos:position pos:line="179" pos:column="38"/></name><operator pos:line="179" pos:column="38">-&gt;<pos:position pos:line="179" pos:column="43"/></operator><name pos:line="179" pos:column="40">bblen<pos:position pos:line="179" pos:column="45"/></name></name> <operator pos:line="179" pos:column="46">-<pos:position pos:line="179" pos:column="47"/></operator> <name><name pos:line="179" pos:column="48">ctx<pos:position pos:line="179" pos:column="51"/></name><operator pos:line="179" pos:column="51">-&gt;<pos:position pos:line="179" pos:column="56"/></operator><name pos:line="179" pos:column="53">bytes<pos:position pos:line="179" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="179" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="60"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="180" pos:column="21">consumed<pos:position pos:line="180" pos:column="29"/></name> <operator pos:line="180" pos:column="30">=<pos:position pos:line="180" pos:column="31"/></operator> <name pos:line="180" pos:column="32">insz<pos:position pos:line="180" pos:column="36"/></name></expr>;<pos:position pos:line="180" pos:column="37"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="181" pos:column="21">rv2<pos:position pos:line="181" pos:column="24"/></name> <operator pos:line="181" pos:column="25">=<pos:position pos:line="181" pos:column="26"/></operator> <call><name pos:line="181" pos:column="27">ap_fwrite<pos:position pos:line="181" pos:column="36"/></name><argument_list pos:line="181" pos:column="36">(<argument><expr><name><name pos:line="181" pos:column="37">f<pos:position pos:line="181" pos:column="38"/></name><operator pos:line="181" pos:column="38">-&gt;<pos:position pos:line="181" pos:column="43"/></operator><name pos:line="181" pos:column="40">next<pos:position pos:line="181" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="181" pos:column="46">ctx<pos:position pos:line="181" pos:column="49"/></name><operator pos:line="181" pos:column="49">-&gt;<pos:position pos:line="181" pos:column="54"/></operator><name pos:line="181" pos:column="51">bbnext<pos:position pos:line="181" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="181" pos:column="59">ctx<pos:position pos:line="181" pos:column="62"/></name><operator pos:line="181" pos:column="62">-&gt;<pos:position pos:line="181" pos:column="67"/></operator><name pos:line="181" pos:column="64">buf<pos:position pos:line="181" pos:column="67"/></name></name></expr></argument>,
                                    <argument><expr><operator pos:line="182" pos:column="37">(<pos:position pos:line="182" pos:column="38"/></operator><name pos:line="182" pos:column="38">apr_size_t<pos:position pos:line="182" pos:column="48"/></name><operator pos:line="182" pos:column="48">)<pos:position pos:line="182" pos:column="49"/></operator><name><name pos:line="182" pos:column="49">ctx<pos:position pos:line="182" pos:column="52"/></name><operator pos:line="182" pos:column="52">-&gt;<pos:position pos:line="182" pos:column="57"/></operator><name pos:line="182" pos:column="54">bblen<pos:position pos:line="182" pos:column="59"/></name></name> <operator pos:line="182" pos:column="60">-<pos:position pos:line="182" pos:column="61"/></operator> <name><name pos:line="182" pos:column="62">ctx<pos:position pos:line="182" pos:column="65"/></name><operator pos:line="182" pos:column="65">-&gt;<pos:position pos:line="182" pos:column="70"/></operator><name pos:line="182" pos:column="67">bytes<pos:position pos:line="182" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="182" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="74"/></expr_stmt>
                    <if pos:line="183" pos:column="21">if <condition pos:line="183" pos:column="24">(<expr><name pos:line="183" pos:column="25">rv2<pos:position pos:line="183" pos:column="28"/></name> <operator pos:line="183" pos:column="29">!=<pos:position pos:line="183" pos:column="31"/></operator> <name pos:line="183" pos:column="32">APR_SUCCESS<pos:position pos:line="183" pos:column="43"/></name></expr>)<pos:position pos:line="183" pos:column="44"/></condition><then pos:line="183" pos:column="44"> <block pos:line="183" pos:column="45">{
                        <expr_stmt><expr><call><name pos:line="184" pos:column="25">ap_log_rerror<pos:position pos:line="184" pos:column="38"/></name><argument_list pos:line="184" pos:column="38">(<argument><expr><name pos:line="184" pos:column="39">APLOG_MARK<pos:position pos:line="184" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="51">APLOG_DEBUG<pos:position pos:line="184" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="64">rv2<pos:position pos:line="184" pos:column="67"/></name></expr></argument>, <argument><expr><name><name pos:line="184" pos:column="69">f<pos:position pos:line="184" pos:column="70"/></name><operator pos:line="184" pos:column="70">-&gt;<pos:position pos:line="184" pos:column="75"/></operator><name pos:line="184" pos:column="72">r<pos:position pos:line="184" pos:column="73"/></name></name></expr></argument>, <argument><expr><call><name pos:line="184" pos:column="75">APLOGNO<pos:position pos:line="184" pos:column="82"/></name><argument_list pos:line="184" pos:column="82">(<argument><expr><literal type="number" pos:line="184" pos:column="83">01442<pos:position pos:line="184" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="89"/></argument_list></call>
                                      <literal type="string" pos:line="185" pos:column="39">"ap_fwrite failed"<pos:position pos:line="185" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="59"/></expr_stmt>
                        <return pos:line="186" pos:column="25">return <expr><name pos:line="186" pos:column="32">rv2<pos:position pos:line="186" pos:column="35"/></name></expr>;<pos:position pos:line="186" pos:column="36"/></return>
                    }<pos:position pos:line="187" pos:column="22"/></block></then></if>
                    <switch pos:line="188" pos:column="21">switch <condition pos:line="188" pos:column="28">(<expr><name pos:line="188" pos:column="29">rv<pos:position pos:line="188" pos:column="31"/></name></expr>)<pos:position pos:line="188" pos:column="32"/></condition> <block pos:line="188" pos:column="33">{
                    <case pos:line="189" pos:column="21">case <expr><name pos:line="189" pos:column="26">APR_SUCCESS<pos:position pos:line="189" pos:column="37"/></name></expr>:<pos:position pos:line="189" pos:column="38"/></case>
                        <continue pos:line="190" pos:column="25">continue;<pos:position pos:line="190" pos:column="34"/></continue>
                    <case pos:line="191" pos:column="21">case <expr><name pos:line="191" pos:column="26">APR_EINCOMPLETE<pos:position pos:line="191" pos:column="41"/></name></expr>:<pos:position pos:line="191" pos:column="42"/></case>
                        <macro><name pos:line="192" pos:column="25">ap_log_rerror<pos:position pos:line="192" pos:column="38"/></name><argument_list pos:line="192" pos:column="38">(<argument pos:line="192" pos:column="39">APLOG_MARK<pos:position pos:line="192" pos:column="49"/></argument>, <argument pos:line="192" pos:column="51">AP<pos:position pos:line="192" pos:column="53"/></argument></argument_list></macro></block></switch></block></while></block></then></if></block></else></if></block></while></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3976_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">get_password<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">prompt<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
<comment type="block" pos:line="3" pos:column="1">/* WCE lacks console. So the getpass is unsuported
 * The only way is to use the GUI so the getpass should be implemented
 * on per-application basis.
 */</comment> 
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">_WIN32_WCE<pos:position pos:line="7" pos:column="18"/></name></cpp:ifdef>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">NULL<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></return>
<cpp:else pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">else<pos:position pos:line="9" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><specifier pos:line="10" pos:column="5">static<pos:position pos:line="10" pos:column="11"/></specifier> <type><name pos:line="10" pos:column="12">char<pos:position pos:line="10" pos:column="16"/></name></type> <name><name pos:line="10" pos:column="17">password<pos:position pos:line="10" pos:column="25"/></name><index pos:line="10" pos:column="25">[<expr><literal type="number" pos:line="10" pos:column="26">128<pos:position pos:line="10" pos:column="29"/></literal></expr>]<pos:position pos:line="10" pos:column="30"/></index></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">n<pos:position pos:line="11" pos:column="10"/></name> <init pos:line="11" pos:column="11">= <expr><literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">ch<pos:position pos:line="12" pos:column="11"/></name></decl>;<pos:position pos:line="12" pos:column="12"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">fputs<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">prompt<pos:position pos:line="14" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="19">stderr<pos:position pos:line="14" pos:column="25"/></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
    
    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">(<expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">ch<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">_getch<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">()<pos:position pos:line="16" pos:column="26"/></argument_list></call><operator pos:line="16" pos:column="26">)<pos:position pos:line="16" pos:column="27"/></operator> <operator pos:line="16" pos:column="28">!=<pos:position pos:line="16" pos:column="30"/></operator> <literal type="char" pos:line="16" pos:column="31">'\r'<pos:position pos:line="16" pos:column="35"/></literal></expr>)<pos:position pos:line="16" pos:column="36"/></condition> <block pos:line="16" pos:column="37">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">ch<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">==<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">EOF<pos:position pos:line="17" pos:column="22"/></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23"> <comment type="block" pos:line="17" pos:column="24">/* EOF */</comment> <block pos:line="17" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">fputs<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><literal type="string" pos:line="18" pos:column="19">"[EOF]\n"<pos:position pos:line="18" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="30">stderr<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
            <return pos:line="19" pos:column="13">return <expr><name pos:line="19" pos:column="20">NULL<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then>
        <elseif pos:line="21" pos:column="9">else <if pos:line="21" pos:column="14">if <condition pos:line="21" pos:column="17">(<expr><name pos:line="21" pos:column="18">ch<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">==<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal> <operator pos:line="21" pos:column="26">||<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">ch<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">==<pos:position pos:line="21" pos:column="34"/></operator> <literal type="number" pos:line="21" pos:column="35">0xE0<pos:position pos:line="21" pos:column="39"/></literal></expr>)<pos:position pos:line="21" pos:column="40"/></condition><then pos:line="21" pos:column="40"> <block pos:line="21" pos:column="41">{
            <comment type="block" pos:line="22" pos:column="13">/* FN Keys (0 or E0) are a sentinal for a FN code */</comment> 
            <expr_stmt><expr><name pos:line="23" pos:column="13">ch<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <operator pos:line="23" pos:column="18">(<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">ch<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">&lt;&lt;<pos:position pos:line="23" pos:column="30"/></operator> <literal type="number" pos:line="23" pos:column="25">4<pos:position pos:line="23" pos:column="26"/></literal><operator pos:line="23" pos:column="26">)<pos:position pos:line="23" pos:column="27"/></operator> <operator pos:line="23" pos:column="28">|<pos:position pos:line="23" pos:column="29"/></operator> <call><name pos:line="23" pos:column="30">_getch<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">()<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
            <comment type="block" pos:line="24" pos:column="13">/* Catch {DELETE}, {&lt;--}, Num{DEL} and Num{&lt;--} */</comment>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><operator pos:line="25" pos:column="17">(<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">ch<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">==<pos:position pos:line="25" pos:column="23"/></operator> <literal type="number" pos:line="25" pos:column="24">0xE53<pos:position pos:line="25" pos:column="29"/></literal> <operator pos:line="25" pos:column="30">||<pos:position pos:line="25" pos:column="32"/></operator> <name pos:line="25" pos:column="33">ch<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">==<pos:position pos:line="25" pos:column="38"/></operator> <literal type="number" pos:line="25" pos:column="39">0xE4B<pos:position pos:line="25" pos:column="44"/></literal> <operator pos:line="25" pos:column="45">||<pos:position pos:line="25" pos:column="47"/></operator> <name pos:line="25" pos:column="48">ch<pos:position pos:line="25" pos:column="50"/></name> <operator pos:line="25" pos:column="51">==<pos:position pos:line="25" pos:column="53"/></operator> <literal type="number" pos:line="25" pos:column="54">0x053<pos:position pos:line="25" pos:column="59"/></literal> <operator pos:line="25" pos:column="60">||<pos:position pos:line="25" pos:column="62"/></operator> <name pos:line="25" pos:column="63">ch<pos:position pos:line="25" pos:column="65"/></name> <operator pos:line="25" pos:column="66">==<pos:position pos:line="25" pos:column="68"/></operator> <literal type="number" pos:line="25" pos:column="69">0x04b<pos:position pos:line="25" pos:column="74"/></literal><operator pos:line="25" pos:column="74">)<pos:position pos:line="25" pos:column="75"/></operator> <operator pos:line="25" pos:column="76">&amp;&amp;<pos:position pos:line="25" pos:column="86"/></operator> <name pos:line="25" pos:column="79">n<pos:position pos:line="25" pos:column="80"/></name></expr>)<pos:position pos:line="25" pos:column="81"/></condition><then pos:line="25" pos:column="81"> <block pos:line="25" pos:column="82">{
                <expr_stmt><expr><name><name pos:line="26" pos:column="17">password<pos:position pos:line="26" pos:column="25"/></name><index pos:line="26" pos:column="25">[<expr><operator pos:line="26" pos:column="26">--<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">n<pos:position pos:line="26" pos:column="29"/></name></expr>]<pos:position pos:line="26" pos:column="30"/></index></name> <operator pos:line="26" pos:column="31">=<pos:position pos:line="26" pos:column="32"/></operator> <literal type="char" pos:line="26" pos:column="33">'\0'<pos:position pos:line="26" pos:column="37"/></literal></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">fputs<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><literal type="string" pos:line="27" pos:column="23">"\b \b"<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">stderr<pos:position pos:line="27" pos:column="38"/></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="28" pos:column="14"/></block></then>
            <else pos:line="29" pos:column="13">else <block pos:line="29" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="30" pos:column="17">fputc<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><literal type="char" pos:line="30" pos:column="23">'\a'<pos:position pos:line="30" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="29">stderr<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="31" pos:column="14"/></block></else></if>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="33" pos:column="9">else <if pos:line="33" pos:column="14">if <condition pos:line="33" pos:column="17">(<expr><operator pos:line="33" pos:column="18">(<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="19">ch<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">==<pos:position pos:line="33" pos:column="24"/></operator> <literal type="char" pos:line="33" pos:column="25">'\b'<pos:position pos:line="33" pos:column="29"/></literal> <operator pos:line="33" pos:column="30">||<pos:position pos:line="33" pos:column="32"/></operator> <name pos:line="33" pos:column="33">ch<pos:position pos:line="33" pos:column="35"/></name> <operator pos:line="33" pos:column="36">==<pos:position pos:line="33" pos:column="38"/></operator> <literal type="number" pos:line="33" pos:column="39">127<pos:position pos:line="33" pos:column="42"/></literal><operator pos:line="33" pos:column="42">)<pos:position pos:line="33" pos:column="43"/></operator> <operator pos:line="33" pos:column="44">&amp;&amp;<pos:position pos:line="33" pos:column="54"/></operator> <name pos:line="33" pos:column="47">n<pos:position pos:line="33" pos:column="48"/></name></expr>)<pos:position pos:line="33" pos:column="49"/></condition><then pos:line="33" pos:column="49"> <comment type="block" pos:line="33" pos:column="50">/* BS/DEL */</comment> <block pos:line="33" pos:column="63">{
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">password<pos:position pos:line="34" pos:column="21"/></name><index pos:line="34" pos:column="21">[<expr><operator pos:line="34" pos:column="22">--<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="24">n<pos:position pos:line="34" pos:column="25"/></name></expr>]<pos:position pos:line="34" pos:column="26"/></index></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <literal type="char" pos:line="34" pos:column="29">'\0'<pos:position pos:line="34" pos:column="33"/></literal></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">fputs<pos:position pos:line="35" pos:column="18"/></name><argument_list pos:line="35" pos:column="18">(<argument><expr><literal type="string" pos:line="35" pos:column="19">"\b \b"<pos:position pos:line="35" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="28">stderr<pos:position pos:line="35" pos:column="34"/></name></expr></argument>)<pos:position pos:line="35" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="37" pos:column="9">else <if pos:line="37" pos:column="14">if <condition pos:line="37" pos:column="17">(<expr><name pos:line="37" pos:column="18">ch<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">==<pos:position pos:line="37" pos:column="23"/></operator> <literal type="number" pos:line="37" pos:column="24">3<pos:position pos:line="37" pos:column="25"/></literal></expr>)<pos:position pos:line="37" pos:column="26"/></condition><then pos:line="37" pos:column="26"> <comment type="block" pos:line="37" pos:column="27">/* CTRL+C */</comment> <block pos:line="37" pos:column="40">{
            <comment type="block" pos:line="38" pos:column="13">/* _getch() bypasses Ctrl+C but not Ctrl+Break detection! */</comment>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">fputs<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><literal type="string" pos:line="39" pos:column="19">"^C\n"<pos:position pos:line="39" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="27">stderr<pos:position pos:line="39" pos:column="33"/></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">exit<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<argument><expr><operator pos:line="40" pos:column="18">-<pos:position pos:line="40" pos:column="19"/></operator><literal type="number" pos:line="40" pos:column="19">1<pos:position pos:line="40" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="42" pos:column="9">else <if pos:line="42" pos:column="14">if <condition pos:line="42" pos:column="17">(<expr><name pos:line="42" pos:column="18">ch<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">==<pos:position pos:line="42" pos:column="23"/></operator> <literal type="number" pos:line="42" pos:column="24">26<pos:position pos:line="42" pos:column="26"/></literal></expr>)<pos:position pos:line="42" pos:column="27"/></condition><then pos:line="42" pos:column="27"> <comment type="block" pos:line="42" pos:column="28">/* CTRL+Z */</comment> <block pos:line="42" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">fputs<pos:position pos:line="43" pos:column="18"/></name><argument_list pos:line="43" pos:column="18">(<argument><expr><literal type="string" pos:line="43" pos:column="19">"^Z\n"<pos:position pos:line="43" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="27">stderr<pos:position pos:line="43" pos:column="33"/></name></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
            <return pos:line="44" pos:column="13">return <expr><name pos:line="44" pos:column="20">NULL<pos:position pos:line="44" pos:column="24"/></name></expr>;<pos:position pos:line="44" pos:column="25"/></return>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="46" pos:column="9">else <if pos:line="46" pos:column="14">if <condition pos:line="46" pos:column="17">(<expr><name pos:line="46" pos:column="18">ch<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">==<pos:position pos:line="46" pos:column="23"/></operator> <literal type="number" pos:line="46" pos:column="24">27<pos:position pos:line="46" pos:column="26"/></literal></expr>)<pos:position pos:line="46" pos:column="27"/></condition><then pos:line="46" pos:column="27"> <comment type="block" pos:line="46" pos:column="28">/* ESC */</comment> <block pos:line="46" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">fputc<pos:position pos:line="47" pos:column="18"/></name><argument_list pos:line="47" pos:column="18">(<argument><expr><literal type="char" pos:line="47" pos:column="19">'\n'<pos:position pos:line="47" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="25">stderr<pos:position pos:line="47" pos:column="31"/></name></expr></argument>)<pos:position pos:line="47" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">fputs<pos:position pos:line="48" pos:column="18"/></name><argument_list pos:line="48" pos:column="18">(<argument><expr><name pos:line="48" pos:column="19">prompt<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="27">stderr<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="49" pos:column="13">n<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <literal type="number" pos:line="49" pos:column="17">0<pos:position pos:line="49" pos:column="18"/></literal></expr>;<pos:position pos:line="49" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="51" pos:column="9">else <if pos:line="51" pos:column="14">if <condition pos:line="51" pos:column="17">(<expr><operator pos:line="51" pos:column="18">(<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="19">n<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">&lt;<pos:position pos:line="51" pos:column="25"/></operator> <sizeof pos:line="51" pos:column="23">sizeof<argument_list pos:line="51" pos:column="29">(<argument><expr><name pos:line="51" pos:column="30">password<pos:position pos:line="51" pos:column="38"/></name></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></sizeof> <operator pos:line="51" pos:column="40">-<pos:position pos:line="51" pos:column="41"/></operator> <literal type="number" pos:line="51" pos:column="42">1<pos:position pos:line="51" pos:column="43"/></literal><operator pos:line="51" pos:column="43">)<pos:position pos:line="51" pos:column="44"/></operator> <operator pos:line="51" pos:column="45">&amp;&amp;<pos:position pos:line="51" pos:column="55"/></operator> <operator pos:line="51" pos:column="48">!<pos:position pos:line="51" pos:column="49"/></operator><call><name pos:line="51" pos:column="49">apr_iscntrl<pos:position pos:line="51" pos:column="60"/></name><argument_list pos:line="51" pos:column="60">(<argument><expr><name pos:line="51" pos:column="61">ch<pos:position pos:line="51" pos:column="63"/></name></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="65"/></condition><then pos:line="51" pos:column="65"> <block pos:line="51" pos:column="66">{
            <expr_stmt><expr><name><name pos:line="52" pos:column="13">password<pos:position pos:line="52" pos:column="21"/></name><index pos:line="52" pos:column="21">[<expr><name pos:line="52" pos:column="22">n<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">++<pos:position pos:line="52" pos:column="25"/></operator></expr>]<pos:position pos:line="52" pos:column="26"/></index></name> <operator pos:line="52" pos:column="27">=<pos:position pos:line="52" pos:column="28"/></operator> <name pos:line="52" pos:column="29">ch<pos:position pos:line="52" pos:column="31"/></name></expr>;<pos:position pos:line="52" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">fputc<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">(<argument><expr><literal type="char" pos:line="53" pos:column="19">'*'<pos:position pos:line="53" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="24">stderr<pos:position pos:line="53" pos:column="30"/></name></expr></argument>)<pos:position pos:line="53" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if></elseif>
        <else pos:line="55" pos:column="9">else <block pos:line="55" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">fputc<pos:position pos:line="56" pos:column="18"/></name><argument_list pos:line="56" pos:column="18">(<argument><expr><literal type="char" pos:line="56" pos:column="19">'\a'<pos:position pos:line="56" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="25">stderr<pos:position pos:line="56" pos:column="31"/></name></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="57" pos:column="10"/></block></else></if>
    }<pos:position pos:line="58" pos:column="6"/></block></while>
 
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">fputc<pos:position pos:line="60" pos:column="10"/></name><argument_list pos:line="60" pos:column="10">(<argument><expr><literal type="char" pos:line="60" pos:column="11">'\n'<pos:position pos:line="60" pos:column="15"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="17">stderr<pos:position pos:line="60" pos:column="23"/></name></expr></argument>)<pos:position pos:line="60" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="61" pos:column="5">password<pos:position pos:line="61" pos:column="13"/></name><index pos:line="61" pos:column="13">[<expr><name pos:line="61" pos:column="14">n<pos:position pos:line="61" pos:column="15"/></name></expr>]<pos:position pos:line="61" pos:column="16"/></index></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <literal type="char" pos:line="61" pos:column="19">'\0'<pos:position pos:line="61" pos:column="23"/></literal></expr>;<pos:position pos:line="61" pos:column="24"/></expr_stmt>
    <return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">password<pos:position pos:line="62" pos:column="20"/></name></expr>;<pos:position pos:line="62" pos:column="21"/></return>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

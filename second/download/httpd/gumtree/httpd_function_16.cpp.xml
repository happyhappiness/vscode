<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">config_log_state<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">open_config_log<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">server_rec<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">s<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">apr_pool_t<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">p<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">config_log_state<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">cls<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="3" pos:column="42">apr_array_header_t<pos:position pos:line="3" pos:column="60"/></name> <modifier pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></modifier></type><name pos:line="3" pos:column="62">default_format<pos:position pos:line="3" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="77"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">void<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">data<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">userdata_key<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><literal type="string" pos:line="7" pos:column="32">"open_config_log"<pos:position pos:line="7" pos:column="49"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="50"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* Skip opening the log the first time through. It's really
     * good to avoid starting the piped log process during preflight.
     */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">apr_pool_userdata_get<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><operator pos:line="12" pos:column="27">&amp;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="28">data<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="34">userdata_key<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="48">s<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">process<pos:position pos:line="12" pos:column="58"/></name><operator pos:line="12" pos:column="58">-&gt;<pos:position pos:line="12" pos:column="63"/></operator><name pos:line="12" pos:column="60">pool<pos:position pos:line="12" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">data<pos:position pos:line="13" pos:column="14"/></name></expr>)<pos:position pos:line="13" pos:column="15"/></condition><then pos:line="13" pos:column="15"> <block pos:line="13" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">apr_pool_userdata_set<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><operator pos:line="14" pos:column="31">(<pos:position pos:line="14" pos:column="32"/></operator><specifier pos:line="14" pos:column="32">const<pos:position pos:line="14" pos:column="37"/></specifier> <name pos:line="14" pos:column="38">void<pos:position pos:line="14" pos:column="42"/></name> <operator pos:line="14" pos:column="43">*<pos:position pos:line="14" pos:column="44"/></operator><operator pos:line="14" pos:column="44">)<pos:position pos:line="14" pos:column="45"/></operator><literal type="number" pos:line="14" pos:column="45">1<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">userdata_key<pos:position pos:line="14" pos:column="60"/></name></expr></argument>,
                              <argument><expr><name pos:line="15" pos:column="31">NULL<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="37">s<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">process<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">-&gt;<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="49">pool<pos:position pos:line="15" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
        <comment type="block" pos:line="16" pos:column="9">/* If logging for the first time after a restart, keep going. */</comment>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">ap_my_generation<pos:position pos:line="17" pos:column="30"/></name></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31"> <block pos:line="17" pos:column="32">{
            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">cls<pos:position pos:line="18" pos:column="23"/></name></expr>;<pos:position pos:line="18" pos:column="24"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name><name pos:line="22" pos:column="9">cls<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">log_fd<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">!=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name></expr>)<pos:position pos:line="22" pos:column="29"/></condition><then pos:line="22" pos:column="29"> <block pos:line="22" pos:column="30">{
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">cls<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></return>             <comment type="block" pos:line="23" pos:column="33">/* virtual config shared w/main server */</comment>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name><name pos:line="26" pos:column="9">cls<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">fname<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">==<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">NULL<pos:position pos:line="26" pos:column="27"/></name></expr>)<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28"> <block pos:line="26" pos:column="29">{
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">cls<pos:position pos:line="27" pos:column="19"/></name></expr>;<pos:position pos:line="27" pos:column="20"/></return>             <comment type="block" pos:line="27" pos:column="33">/* Leave it NULL to decline.  */</comment>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">*<pos:position pos:line="30" pos:column="10"/></operator><name><name pos:line="30" pos:column="10">cls<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">fname<pos:position pos:line="30" pos:column="20"/></name></name> <operator pos:line="30" pos:column="21">==<pos:position pos:line="30" pos:column="23"/></operator> <literal type="char" pos:line="30" pos:column="24">'|'<pos:position pos:line="30" pos:column="27"/></literal></expr>)<pos:position pos:line="30" pos:column="28"/></condition><then pos:line="30" pos:column="28"> <block pos:line="30" pos:column="29">{
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">piped_log<pos:position pos:line="31" pos:column="18"/></name> <modifier pos:line="31" pos:column="19">*<pos:position pos:line="31" pos:column="20"/></modifier></type><name pos:line="31" pos:column="20">pl<pos:position pos:line="31" pos:column="22"/></name></decl>;<pos:position pos:line="31" pos:column="23"/></decl_stmt>

        <expr_stmt><expr><name pos:line="33" pos:column="9">pl<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <call><name pos:line="33" pos:column="14">ap_open_piped_log<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">p<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="35">cls<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">-&gt;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="40">fname<pos:position pos:line="33" pos:column="45"/></name></name> <operator pos:line="33" pos:column="46">+<pos:position pos:line="33" pos:column="47"/></operator> <literal type="number" pos:line="33" pos:column="48">1<pos:position pos:line="33" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">pl<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">==<pos:position pos:line="34" pos:column="18"/></operator> <name pos:line="34" pos:column="19">NULL<pos:position pos:line="34" pos:column="23"/></name></expr>)<pos:position pos:line="34" pos:column="24"/></condition><then pos:line="34" pos:column="24"> <block pos:line="34" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">exit<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><literal type="number" pos:line="35" pos:column="18">1<pos:position pos:line="35" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">cls<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">log_fd<pos:position pos:line="37" pos:column="20"/></name></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <call><name pos:line="37" pos:column="23">ap_piped_log_write_fd<pos:position pos:line="37" pos:column="44"/></name><argument_list pos:line="37" pos:column="44">(<argument><expr><name pos:line="37" pos:column="45">pl<pos:position pos:line="37" pos:column="47"/></name></expr></argument>)<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then>
    <else pos:line="39" pos:column="5">else <block pos:line="39" pos:column="10">{
        <decl_stmt><decl><type><specifier pos:line="40" pos:column="9">const<pos:position pos:line="40" pos:column="14"/></specifier> <name pos:line="40" pos:column="15">char<pos:position pos:line="40" pos:column="19"/></name> <modifier pos:line="40" pos:column="20">*<pos:position pos:line="40" pos:column="21"/></modifier></type><name pos:line="40" pos:column="21">fname<pos:position pos:line="40" pos:column="26"/></name> <init pos:line="40" pos:column="27">= <expr><call><name pos:line="40" pos:column="29">ap_server_root_relative<pos:position pos:line="40" pos:column="52"/></name><argument_list pos:line="40" pos:column="52">(<argument><expr><name pos:line="40" pos:column="53">p<pos:position pos:line="40" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="56">cls<pos:position pos:line="40" pos:column="59"/></name><operator pos:line="40" pos:column="59">-&gt;<pos:position pos:line="40" pos:column="64"/></operator><name pos:line="40" pos:column="61">fname<pos:position pos:line="40" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="68"/></decl_stmt>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">fname<pos:position pos:line="41" pos:column="19"/></name></expr>)<pos:position pos:line="41" pos:column="20"/></condition><then pos:line="41" pos:column="20"> <block pos:line="41" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">ap_log_error<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">APLOG_MARK<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="38">APLOG_ERR<pos:position pos:line="42" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="49">APR_EBADPATH<pos:position pos:line="42" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="63">s<pos:position pos:line="42" pos:column="64"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="43" pos:column="26">"invalid transfer log path %s."<pos:position pos:line="43" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="59">cls<pos:position pos:line="43" pos:column="62"/></name><operator pos:line="43" pos:column="62">-&gt;<pos:position pos:line="43" pos:column="67"/></operator><name pos:line="43" pos:column="64">fname<pos:position pos:line="43" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">exit<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><literal type="number" pos:line="44" pos:column="18">1<pos:position pos:line="44" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">(<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">status<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <call><name pos:line="46" pos:column="23">apr_file_open<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><operator pos:line="46" pos:column="37">&amp;<pos:position pos:line="46" pos:column="42"/></operator><name><name pos:line="46" pos:column="38">cls<pos:position pos:line="46" pos:column="41"/></name><operator pos:line="46" pos:column="41">-&gt;<pos:position pos:line="46" pos:column="46"/></operator><name pos:line="46" pos:column="43">log_fd<pos:position pos:line="46" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="51">fname<pos:position pos:line="46" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="58">xfer_flags<pos:position pos:line="46" pos:column="68"/></name></expr></argument>,
                                    <argument><expr><name pos:line="47" pos:column="37">xfer_perms<pos:position pos:line="47" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="49">p<pos:position pos:line="47" pos:column="50"/></name></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call><operator pos:line="47" pos:column="51">)<pos:position pos:line="47" pos:column="52"/></operator> <operator pos:line="47" pos:column="53">!=<pos:position pos:line="47" pos:column="55"/></operator> <name pos:line="47" pos:column="56">APR_SUCCESS<pos:position pos:line="47" pos:column="67"/></name></expr>)<pos:position pos:line="47" pos:column="68"/></condition><then pos:line="47" pos:column="68"> <block pos:line="47" pos:column="69">{
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">ap_log_error<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">APLOG_MARK<pos:position pos:line="48" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="38">APLOG_ERR<pos:position pos:line="48" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="49">status<pos:position pos:line="48" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="57">s<pos:position pos:line="48" pos:column="58"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="49" pos:column="26">"could not open transfer log file %s."<pos:position pos:line="49" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="66">fname<pos:position pos:line="49" pos:column="71"/></name></expr></argument>)<pos:position pos:line="49" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">exit<pos:position pos:line="50" pos:column="17"/></name><argument_list pos:line="50" pos:column="17">(<argument><expr><literal type="number" pos:line="50" pos:column="18">1<pos:position pos:line="50" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">apr_file_inherit_set<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name><name pos:line="52" pos:column="30">cls<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">-&gt;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="35">log_fd<pos:position pos:line="52" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></else></if>
<cpp:ifdef pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">ifdef<pos:position pos:line="54" pos:column="7"/></cpp:directive> <name pos:line="54" pos:column="8">BUFFERED_LOGS<pos:position pos:line="54" pos:column="21"/></name></cpp:ifdef>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">cls<pos:position pos:line="55" pos:column="8"/></name><operator pos:line="55" pos:column="8">-&gt;<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="10">outcnt<pos:position pos:line="55" pos:column="16"/></name></name> <operator pos:line="55" pos:column="17">=<pos:position pos:line="55" pos:column="18"/></operator> <literal type="number" pos:line="55" pos:column="19">0<pos:position pos:line="55" pos:column="20"/></literal></expr>;<pos:position pos:line="55" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="58" pos:column="5">return <expr><name pos:line="58" pos:column="12">cls<pos:position pos:line="58" pos:column="15"/></name></expr>;<pos:position pos:line="58" pos:column="16"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

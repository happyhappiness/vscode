<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3429_httpd-2.2.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">parse_args<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">argc<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name><name pos:line="1" pos:column="33">argv<pos:position pos:line="1" pos:column="37"/></name><index pos:line="1" pos:column="37">[]<pos:position pos:line="1" pos:column="39"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">command_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">cmd_data<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">a<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">arg<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">argused<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">a<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <literal type="number" pos:line="7" pos:column="14">1<pos:position pos:line="7" pos:column="15"/></literal></expr>;<pos:position pos:line="7" pos:column="16"/></init> <condition><expr><name pos:line="7" pos:column="17">a<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&lt;<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="21">argc<pos:position pos:line="7" pos:column="25"/></name></expr>;<pos:position pos:line="7" pos:column="26"/></condition> <incr><expr><name pos:line="7" pos:column="27">a<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">++<pos:position pos:line="7" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="31"/></control> <block pos:line="7" pos:column="32">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">arg<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <name><name pos:line="8" pos:column="15">argv<pos:position pos:line="8" pos:column="19"/></name><index pos:line="8" pos:column="19">[<expr><name pos:line="8" pos:column="20">a<pos:position pos:line="8" pos:column="21"/></name></expr>]<pos:position pos:line="8" pos:column="22"/></index></name></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">argused<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <literal type="number" pos:line="9" pos:column="19">1<pos:position pos:line="9" pos:column="20"/></literal></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">arg<pos:position pos:line="11" pos:column="16"/></name><index pos:line="11" pos:column="16">[<expr><literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr>]<pos:position pos:line="11" pos:column="19"/></index></name> <operator pos:line="11" pos:column="20">==<pos:position pos:line="11" pos:column="22"/></operator> <literal type="char" pos:line="11" pos:column="23">'-'<pos:position pos:line="11" pos:column="26"/></literal></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27"> <block pos:line="11" pos:column="28">{
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><name><name pos:line="12" pos:column="17">arg<pos:position pos:line="12" pos:column="20"/></name><index pos:line="12" pos:column="20">[<expr><literal type="number" pos:line="12" pos:column="21">1<pos:position pos:line="12" pos:column="22"/></literal></expr>]<pos:position pos:line="12" pos:column="23"/></index></name> <operator pos:line="12" pos:column="24">==<pos:position pos:line="12" pos:column="26"/></operator> <literal type="char" pos:line="12" pos:column="27">'-'<pos:position pos:line="12" pos:column="30"/></literal></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31"> <block pos:line="12" pos:column="32">{
                <expr_stmt><expr><name pos:line="13" pos:column="17">argused<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <call><name pos:line="13" pos:column="27">parse_long_opt<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><name pos:line="13" pos:column="42">arg<pos:position pos:line="13" pos:column="45"/></name> <operator pos:line="13" pos:column="46">+<pos:position pos:line="13" pos:column="47"/></operator> <literal type="number" pos:line="13" pos:column="48">2<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">cmd_data<pos:position pos:line="13" pos:column="59"/></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt>
            }<pos:position pos:line="14" pos:column="14"/></block></then>
            <else pos:line="15" pos:column="13">else <block pos:line="15" pos:column="18">{
                <expr_stmt><expr><name pos:line="16" pos:column="17">argused<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <call><name pos:line="16" pos:column="27">parse_short_opt<pos:position pos:line="16" pos:column="42"/></name><argument_list pos:line="16" pos:column="42">(<argument><expr><name pos:line="16" pos:column="43">arg<pos:position pos:line="16" pos:column="46"/></name> <operator pos:line="16" pos:column="47">+<pos:position pos:line="16" pos:column="48"/></operator> <literal type="number" pos:line="16" pos:column="49">1<pos:position pos:line="16" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">cmd_data<pos:position pos:line="16" pos:column="60"/></name></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="17" pos:column="14"/></block></else></if>

            <comment type="block" pos:line="19" pos:column="13">/* We haven't done anything with it yet, try some of the
             * more complicated short opts... */</comment>
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><name pos:line="21" pos:column="17">argused<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">==<pos:position pos:line="21" pos:column="27"/></operator> <literal type="number" pos:line="21" pos:column="28">0<pos:position pos:line="21" pos:column="29"/></literal> <operator pos:line="21" pos:column="30">&amp;&amp;<pos:position pos:line="21" pos:column="40"/></operator> <name pos:line="21" pos:column="33">a<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">+<pos:position pos:line="21" pos:column="36"/></operator> <literal type="number" pos:line="21" pos:column="37">1<pos:position pos:line="21" pos:column="38"/></literal> <operator pos:line="21" pos:column="39">&lt;<pos:position pos:line="21" pos:column="43"/></operator> <name pos:line="21" pos:column="41">argc<pos:position pos:line="21" pos:column="45"/></name></expr>)<pos:position pos:line="21" pos:column="46"/></condition><then pos:line="21" pos:column="46"> <block pos:line="21" pos:column="47">{
                <if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">arg<pos:position pos:line="22" pos:column="24"/></name><index pos:line="22" pos:column="24">[<expr><literal type="number" pos:line="22" pos:column="25">1<pos:position pos:line="22" pos:column="26"/></literal></expr>]<pos:position pos:line="22" pos:column="27"/></index></name> <operator pos:line="22" pos:column="28">==<pos:position pos:line="22" pos:column="30"/></operator> <literal type="char" pos:line="22" pos:column="31">'o'<pos:position pos:line="22" pos:column="34"/></literal> <operator pos:line="22" pos:column="35">&amp;&amp;<pos:position pos:line="22" pos:column="45"/></operator> <operator pos:line="22" pos:column="38">!<pos:position pos:line="22" pos:column="39"/></operator><name><name pos:line="22" pos:column="39">arg<pos:position pos:line="22" pos:column="42"/></name><index pos:line="22" pos:column="42">[<expr><literal type="number" pos:line="22" pos:column="43">2<pos:position pos:line="22" pos:column="44"/></literal></expr>]<pos:position pos:line="22" pos:column="45"/></index></name></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46"> <block pos:line="22" pos:column="47">{
                    <expr_stmt><expr><name pos:line="23" pos:column="21">arg<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <name><name pos:line="23" pos:column="27">argv<pos:position pos:line="23" pos:column="31"/></name><index pos:line="23" pos:column="31">[<expr><operator pos:line="23" pos:column="32">++<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="34">a<pos:position pos:line="23" pos:column="35"/></name></expr>]<pos:position pos:line="23" pos:column="36"/></index></name></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="24" pos:column="21">argused<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator> <call><name pos:line="24" pos:column="31">parse_output_file_name<pos:position pos:line="24" pos:column="53"/></name><argument_list pos:line="24" pos:column="53">(<argument><expr><name pos:line="24" pos:column="54">arg<pos:position pos:line="24" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="59">cmd_data<pos:position pos:line="24" pos:column="67"/></name></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="69"/></expr_stmt>
                }<pos:position pos:line="25" pos:column="18"/></block></then> <elseif pos:line="25" pos:column="19">else <if pos:line="25" pos:column="24">if <condition pos:line="25" pos:column="27">(<expr><call><name pos:line="25" pos:column="28">strcmp<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">arg<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">+<pos:position pos:line="25" pos:column="39"/></operator><literal type="number" pos:line="25" pos:column="39">1<pos:position pos:line="25" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="42">"MT"<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call> <operator pos:line="25" pos:column="48">==<pos:position pos:line="25" pos:column="50"/></operator> <literal type="number" pos:line="25" pos:column="51">0<pos:position pos:line="25" pos:column="52"/></literal></expr>)<pos:position pos:line="25" pos:column="53"/></condition><then pos:line="25" pos:column="53"> <block pos:line="25" pos:column="54">{
                    <if pos:line="26" pos:column="21">if <condition pos:line="26" pos:column="24">(<expr><operator pos:line="26" pos:column="25">!<pos:position pos:line="26" pos:column="26"/></operator><name><name pos:line="26" pos:column="26">cmd_data<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">-&gt;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="36">options<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">.<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="44">silent<pos:position pos:line="26" pos:column="50"/></name></name></expr>)<pos:position pos:line="26" pos:column="51"/></condition><then pos:line="26" pos:column="51"> <block pos:line="26" pos:column="52">{
                        <expr_stmt><expr><call><name pos:line="27" pos:column="25">printf<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><literal type="string" pos:line="27" pos:column="32">"Adding: %s\n"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">arg<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
                    }<pos:position pos:line="28" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="29" pos:column="21">push_count_chars<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name><name pos:line="29" pos:column="38">cmd_data<pos:position pos:line="29" pos:column="46"/></name><operator pos:line="29" pos:column="46">-&gt;<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="48">arglist<pos:position pos:line="29" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="57">arg<pos:position pos:line="29" pos:column="60"/></name></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="30" pos:column="21">arg<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">=<pos:position pos:line="30" pos:column="26"/></operator> <name><name pos:line="30" pos:column="27">argv<pos:position pos:line="30" pos:column="31"/></name><index pos:line="30" pos:column="31">[<expr><operator pos:line="30" pos:column="32">++<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">a<pos:position pos:line="30" pos:column="35"/></name></expr>]<pos:position pos:line="30" pos:column="36"/></index></name></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
                    <if pos:line="31" pos:column="21">if <condition pos:line="31" pos:column="24">(<expr><operator pos:line="31" pos:column="25">!<pos:position pos:line="31" pos:column="26"/></operator><name><name pos:line="31" pos:column="26">cmd_data<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">options<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">.<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="44">silent<pos:position pos:line="31" pos:column="50"/></name></name></expr>)<pos:position pos:line="31" pos:column="51"/></condition><then pos:line="31" pos:column="51"> <block pos:line="31" pos:column="52">{
                        <expr_stmt><expr><call><name pos:line="32" pos:column="25">printf<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><literal type="string" pos:line="32" pos:column="32">" %s\n"<pos:position pos:line="32" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">arg<pos:position pos:line="32" pos:column="44"/></name></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt>
                    }<pos:position pos:line="33" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="34" pos:column="21">push_count_chars<pos:position pos:line="34" pos:column="37"/></name><argument_list pos:line="34" pos:column="37">(<argument><expr><name><name pos:line="34" pos:column="38">cmd_data<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">-&gt;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="48">arglist<pos:position pos:line="34" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="57">arg<pos:position pos:line="34" pos:column="60"/></name></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="62"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="35" pos:column="21">argused<pos:position pos:line="35" pos:column="28"/></name> <operator pos:line="35" pos:column="29">=<pos:position pos:line="35" pos:column="30"/></operator> <literal type="number" pos:line="35" pos:column="31">1<pos:position pos:line="35" pos:column="32"/></literal></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="36" pos:column="18"/></block></then></if></elseif> <elseif pos:line="36" pos:column="19">else <if pos:line="36" pos:column="24">if <condition pos:line="36" pos:column="27">(<expr><call><name pos:line="36" pos:column="28">strcmp<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">arg<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">+<pos:position pos:line="36" pos:column="39"/></operator><literal type="number" pos:line="36" pos:column="39">1<pos:position pos:line="36" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="42">"rpath"<pos:position pos:line="36" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call> <operator pos:line="36" pos:column="51">==<pos:position pos:line="36" pos:column="53"/></operator> <literal type="number" pos:line="36" pos:column="54">0<pos:position pos:line="36" pos:column="55"/></literal></expr>)<pos:position pos:line="36" pos:column="56"/></condition><then pos:line="36" pos:column="56"> <block pos:line="36" pos:column="57">{
                    <comment type="block" pos:line="37" pos:column="21">/* Aha, we should try to link both! */</comment>
                    <expr_stmt><expr><name><name pos:line="38" pos:column="21">cmd_data<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">-&gt;<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="31">install_path<pos:position pos:line="38" pos:column="43"/></name></name> <operator pos:line="38" pos:column="44">=<pos:position pos:line="38" pos:column="45"/></operator> <name><name pos:line="38" pos:column="46">argv<pos:position pos:line="38" pos:column="50"/></name><index pos:line="38" pos:column="50">[<expr><operator pos:line="38" pos:column="51">++<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="53">a<pos:position pos:line="38" pos:column="54"/></name></expr>]<pos:position pos:line="38" pos:column="55"/></index></name></expr>;<pos:position pos:line="38" pos:column="56"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="39" pos:column="21">argused<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">=<pos:position pos:line="39" pos:column="30"/></operator> <literal type="number" pos:line="39" pos:column="31">1<pos:position pos:line="39" pos:column="32"/></literal></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="40" pos:column="18"/></block></then></if></elseif> <elseif pos:line="40" pos:column="19">else <if pos:line="40" pos:column="24">if <condition pos:line="40" pos:column="27">(<expr><call><name pos:line="40" pos:column="28">strcmp<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">arg<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">+<pos:position pos:line="40" pos:column="39"/></operator><literal type="number" pos:line="40" pos:column="39">1<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="42">"version-info"<pos:position pos:line="40" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="57"/></argument_list></call> <operator pos:line="40" pos:column="58">==<pos:position pos:line="40" pos:column="60"/></operator> <literal type="number" pos:line="40" pos:column="61">0<pos:position pos:line="40" pos:column="62"/></literal></expr>)<pos:position pos:line="40" pos:column="63"/></condition><then pos:line="40" pos:column="63"> <block pos:line="40" pos:column="64">{
                    <comment type="block" pos:line="41" pos:column="21">/* Store for later deciphering */</comment>
                    <expr_stmt><expr><name><name pos:line="42" pos:column="21">cmd_data<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">-&gt;<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="31">version_info<pos:position pos:line="42" pos:column="43"/></name></name> <operator pos:line="42" pos:column="44">=<pos:position pos:line="42" pos:column="45"/></operator> <name><name pos:line="42" pos:column="46">argv<pos:position pos:line="42" pos:column="50"/></name><index pos:line="42" pos:column="50">[<expr><operator pos:line="42" pos:column="51">++<pos:position pos:line="42" pos:column="53"/></operator><name pos:line="42" pos:column="53">a<pos:position pos:line="42" pos:column="54"/></name></expr>]<pos:position pos:line="42" pos:column="55"/></index></name></expr>;<pos:position pos:line="42" pos:column="56"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="43" pos:column="21">argused<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <literal type="number" pos:line="43" pos:column="31">1<pos:position pos:line="43" pos:column="32"/></literal></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="44" pos:column="18"/></block></then></if></elseif> <elseif pos:line="44" pos:column="19">else <if pos:line="44" pos:column="24">if <condition pos:line="44" pos:column="27">(<expr><call><name pos:line="44" pos:column="28">strcmp<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">arg<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">+<pos:position pos:line="44" pos:column="39"/></operator><literal type="number" pos:line="44" pos:column="39">1<pos:position pos:line="44" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="42">"export-symbols-regex"<pos:position pos:line="44" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="65"/></argument_list></call> <operator pos:line="44" pos:column="66">==<pos:position pos:line="44" pos:column="68"/></operator> <literal type="number" pos:line="44" pos:column="69">0<pos:position pos:line="44" pos:column="70"/></literal></expr>)<pos:position pos:line="44" pos:column="71"/></condition><then pos:line="44" pos:column="71"> <block pos:line="44" pos:column="72">{
                    <comment type="block" pos:line="45" pos:column="21">/* Skip the argument. */</comment>
                    <expr_stmt><expr><operator pos:line="46" pos:column="21">++<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="23">a<pos:position pos:line="46" pos:column="24"/></name></expr>;<pos:position pos:line="46" pos:column="25"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="47" pos:column="21">argused<pos:position pos:line="47" pos:column="28"/></name> <operator pos:line="47" pos:column="29">=<pos:position pos:line="47" pos:column="30"/></operator> <literal type="number" pos:line="47" pos:column="31">1<pos:position pos:line="47" pos:column="32"/></literal></expr>;<pos:position pos:line="47" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="48" pos:column="18"/></block></then></if></elseif> <elseif pos:line="48" pos:column="19">else <if pos:line="48" pos:column="24">if <condition pos:line="48" pos:column="27">(<expr><call><name pos:line="48" pos:column="28">strcmp<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">arg<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">+<pos:position pos:line="48" pos:column="39"/></operator><literal type="number" pos:line="48" pos:column="39">1<pos:position pos:line="48" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="42">"undefined"<pos:position pos:line="48" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></call> <operator pos:line="48" pos:column="55">==<pos:position pos:line="48" pos:column="57"/></operator> <literal type="number" pos:line="48" pos:column="58">0<pos:position pos:line="48" pos:column="59"/></literal></expr>)<pos:position pos:line="48" pos:column="60"/></condition><then pos:line="48" pos:column="60"> <block pos:line="48" pos:column="61">{
                    <expr_stmt><expr><name><name pos:line="49" pos:column="21">cmd_data<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">-&gt;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="31">undefined_flag<pos:position pos:line="49" pos:column="45"/></name></name> <operator pos:line="49" pos:column="46">=<pos:position pos:line="49" pos:column="47"/></operator> <name><name pos:line="49" pos:column="48">argv<pos:position pos:line="49" pos:column="52"/></name><index pos:line="49" pos:column="52">[<expr><operator pos:line="49" pos:column="53">++<pos:position pos:line="49" pos:column="55"/></operator><name pos:line="49" pos:column="55">a<pos:position pos:line="49" pos:column="56"/></name></expr>]<pos:position pos:line="49" pos:column="57"/></index></name></expr>;<pos:position pos:line="49" pos:column="58"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="50" pos:column="21">argused<pos:position pos:line="50" pos:column="28"/></name> <operator pos:line="50" pos:column="29">=<pos:position pos:line="50" pos:column="30"/></operator> <literal type="number" pos:line="50" pos:column="31">1<pos:position pos:line="50" pos:column="32"/></literal></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="51" pos:column="18"/></block></then></if></elseif> <elseif pos:line="51" pos:column="19">else <if pos:line="51" pos:column="24">if <condition pos:line="51" pos:column="27">(<expr><name><name pos:line="51" pos:column="28">arg<pos:position pos:line="51" pos:column="31"/></name><index pos:line="51" pos:column="31">[<expr><literal type="number" pos:line="51" pos:column="32">1<pos:position pos:line="51" pos:column="33"/></literal></expr>]<pos:position pos:line="51" pos:column="34"/></index></name> <operator pos:line="51" pos:column="35">==<pos:position pos:line="51" pos:column="37"/></operator> <literal type="char" pos:line="51" pos:column="38">'R'<pos:position pos:line="51" pos:column="41"/></literal> <operator pos:line="51" pos:column="42">&amp;&amp;<pos:position pos:line="51" pos:column="52"/></operator> <operator pos:line="51" pos:column="45">!<pos:position pos:line="51" pos:column="46"/></operator><name><name pos:line="51" pos:column="46">arg<pos:position pos:line="51" pos:column="49"/></name><index pos:line="51" pos:column="49">[<expr><literal type="number" pos:line="51" pos:column="50">2<pos:position pos:line="51" pos:column="51"/></literal></expr>]<pos:position pos:line="51" pos:column="52"/></index></name></expr>)<pos:position pos:line="51" pos:column="53"/></condition><then pos:line="51" pos:column="53"> <block pos:line="51" pos:column="54">{
                    <comment type="block" pos:line="52" pos:column="21">/* -R dir Add dir to runtime library search path. */</comment>
                    <expr_stmt><expr><call><name pos:line="53" pos:column="21">add_runtimedirlib<pos:position pos:line="53" pos:column="38"/></name><argument_list pos:line="53" pos:column="38">(<argument><expr><name><name pos:line="53" pos:column="39">argv<pos:position pos:line="53" pos:column="43"/></name><index pos:line="53" pos:column="43">[<expr><operator pos:line="53" pos:column="44">++<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="46">a<pos:position pos:line="53" pos:column="47"/></name></expr>]<pos:position pos:line="53" pos:column="48"/></index></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="50">cmd_data<pos:position pos:line="53" pos:column="58"/></name></expr></argument>)<pos:position pos:line="53" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="60"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="54" pos:column="21">argused<pos:position pos:line="54" pos:column="28"/></name> <operator pos:line="54" pos:column="29">=<pos:position pos:line="54" pos:column="30"/></operator> <literal type="number" pos:line="54" pos:column="31">1<pos:position pos:line="54" pos:column="32"/></literal></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="55" pos:column="18"/></block></then></if></elseif></if>
            }<pos:position pos:line="56" pos:column="14"/></block></then></if>
        }<pos:position pos:line="57" pos:column="10"/></block></then> <else pos:line="57" pos:column="11">else <block pos:line="57" pos:column="16">{
            <expr_stmt><expr><name pos:line="58" pos:column="13">argused<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">=<pos:position pos:line="58" pos:column="22"/></operator> <call><name pos:line="58" pos:column="23">parse_input_file_name<pos:position pos:line="58" pos:column="44"/></name><argument_list pos:line="58" pos:column="44">(<argument><expr><name pos:line="58" pos:column="45">arg<pos:position pos:line="58" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="50">cmd_data<pos:position pos:line="58" pos:column="58"/></name></expr></argument>)<pos:position pos:line="58" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></else></if>

        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">!<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">argused<pos:position pos:line="61" pos:column="21"/></name></expr>)<pos:position pos:line="61" pos:column="22"/></condition><then pos:line="61" pos:column="22"> <block pos:line="61" pos:column="23">{
            <if pos:line="62" pos:column="13">if <condition pos:line="62" pos:column="16">(<expr><operator pos:line="62" pos:column="17">!<pos:position pos:line="62" pos:column="18"/></operator><name><name pos:line="62" pos:column="18">cmd_data<pos:position pos:line="62" pos:column="26"/></name><operator pos:line="62" pos:column="26">-&gt;<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="28">options<pos:position pos:line="62" pos:column="35"/></name><operator pos:line="62" pos:column="35">.<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="36">silent<pos:position pos:line="62" pos:column="42"/></name></name></expr>)<pos:position pos:line="62" pos:column="43"/></condition><then pos:line="62" pos:column="43"> <block pos:line="62" pos:column="44">{
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">printf<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><literal type="string" pos:line="63" pos:column="24">"Adding: %s\n"<pos:position pos:line="63" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="40">arg<pos:position pos:line="63" pos:column="43"/></name></expr></argument>)<pos:position pos:line="63" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="64" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">push_count_chars<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><name><name pos:line="65" pos:column="30">cmd_data<pos:position pos:line="65" pos:column="38"/></name><operator pos:line="65" pos:column="38">-&gt;<pos:position pos:line="65" pos:column="43"/></operator><name pos:line="65" pos:column="40">arglist<pos:position pos:line="65" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="49">arg<pos:position pos:line="65" pos:column="52"/></name></expr></argument>)<pos:position pos:line="65" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>
    }<pos:position pos:line="67" pos:column="6"/></block></for>

}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2588_httpd-2.4.18.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">h2_workers_start<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">h2_workers<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">workers<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list> <block pos:line="1" pos:column="59">{
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">apr_status_t<pos:position pos:line="2" pos:column="17"/></name></type> <name pos:line="2" pos:column="18">status<pos:position pos:line="2" pos:column="24"/></name> <init pos:line="2" pos:column="25">= <expr><call><name pos:line="2" pos:column="27">apr_thread_mutex_lock<pos:position pos:line="2" pos:column="48"/></name><argument_list pos:line="2" pos:column="48">(<argument><expr><name><name pos:line="2" pos:column="49">workers<pos:position pos:line="2" pos:column="56"/></name><operator pos:line="2" pos:column="56">-&gt;<pos:position pos:line="2" pos:column="61"/></operator><name pos:line="2" pos:column="58">lock<pos:position pos:line="2" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="2" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="64"/></decl_stmt>
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">status<pos:position pos:line="3" pos:column="15"/></name> <operator pos:line="3" pos:column="16">==<pos:position pos:line="3" pos:column="18"/></operator> <name pos:line="3" pos:column="19">APR_SUCCESS<pos:position pos:line="3" pos:column="30"/></name></expr>)<pos:position pos:line="3" pos:column="31"/></condition><then pos:line="3" pos:column="31"> <block pos:line="3" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="4" pos:column="9">ap_log_error<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">APLOG_MARK<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="34">APLOG_DEBUG<pos:position pos:line="4" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="47">0<pos:position pos:line="4" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="50">workers<pos:position pos:line="4" pos:column="57"/></name><operator pos:line="4" pos:column="57">-&gt;<pos:position pos:line="4" pos:column="62"/></operator><name pos:line="4" pos:column="59">s<pos:position pos:line="4" pos:column="60"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="5" pos:column="23">"h2_workers: starting"<pos:position pos:line="5" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="47"/></expr_stmt>

        <while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name><name pos:line="7" pos:column="16">workers<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">worker_count<pos:position pos:line="7" pos:column="37"/></name></name> <operator pos:line="7" pos:column="38">&lt;<pos:position pos:line="7" pos:column="42"/></operator> <name><name pos:line="7" pos:column="40">workers<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">-&gt;<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="49">min_size<pos:position pos:line="7" pos:column="57"/></name></name>
               <operator pos:line="8" pos:column="16">&amp;&amp;<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="19">status<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">==<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="29">APR_SUCCESS<pos:position pos:line="8" pos:column="40"/></name></expr>)<pos:position pos:line="8" pos:column="41"/></condition> <block pos:line="8" pos:column="42">{
            <expr_stmt><expr><name pos:line="9" pos:column="13">status<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <call><name pos:line="9" pos:column="22">add_worker<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">workers<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="10" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name><name pos:line="11" pos:column="33">workers<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-&gt;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="42">lock<pos:position pos:line="11" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">status<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

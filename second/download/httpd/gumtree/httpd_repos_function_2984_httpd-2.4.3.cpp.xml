<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2984_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">core_generate_log_id<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">conn_rec<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">c<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">request_rec<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">r<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                                 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier><modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">idstring<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_uint64_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">id<pos:position pos:line="4" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">tmp<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">pid_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">pid<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">len<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">encoded<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">r<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">&amp;&amp;<pos:position pos:line="9" pos:column="21"/></operator> <name><name pos:line="9" pos:column="14">r<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">request_time<pos:position pos:line="9" pos:column="29"/></name></name></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30"> <block pos:line="9" pos:column="31">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">id<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">apr_uint64_t<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator><name><name pos:line="10" pos:column="28">r<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">request_time<pos:position pos:line="10" pos:column="43"/></name></name></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then>
    <else pos:line="12" pos:column="5">else <block pos:line="12" pos:column="10">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">id<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <operator pos:line="13" pos:column="14">(<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">apr_uint64_t<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator><call><name pos:line="13" pos:column="28">apr_time_now<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">()<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">pid<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <call><name pos:line="16" pos:column="11">getpid<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">()<pos:position pos:line="16" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><sizeof pos:line="17" pos:column="9">sizeof<argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">pid_t<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></sizeof> <operator pos:line="17" pos:column="23">&gt;<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="25">2<pos:position pos:line="17" pos:column="26"/></literal></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27"> <block pos:line="17" pos:column="28">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">tmp<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">pid<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">tmp<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">tmp<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">&lt;&lt;<pos:position pos:line="19" pos:column="27"/></operator> <literal type="number" pos:line="19" pos:column="22">40<pos:position pos:line="19" pos:column="24"/></literal></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">id<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">^=<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">tmp<pos:position pos:line="20" pos:column="18"/></name></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">pid<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">pid<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">&gt;&gt;<pos:position pos:line="21" pos:column="24"/></operator> <literal type="number" pos:line="21" pos:column="22">24<pos:position pos:line="21" pos:column="24"/></literal></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">tmp<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">pid<pos:position pos:line="22" pos:column="18"/></name></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">tmp<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">tmp<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">&lt;&lt;<pos:position pos:line="23" pos:column="27"/></operator> <literal type="number" pos:line="23" pos:column="22">56<pos:position pos:line="23" pos:column="24"/></literal></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">id<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">^=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">tmp<pos:position pos:line="24" pos:column="18"/></name></expr>;<pos:position pos:line="24" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then>
    <else pos:line="26" pos:column="5">else <block pos:line="26" pos:column="10">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">tmp<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">pid<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">tmp<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <name pos:line="28" pos:column="15">tmp<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">&lt;&lt;<pos:position pos:line="28" pos:column="27"/></operator> <literal type="number" pos:line="28" pos:column="22">40<pos:position pos:line="28" pos:column="24"/></literal></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">id<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">^=<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">tmp<pos:position pos:line="29" pos:column="18"/></name></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></else></if>
<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><name pos:line="31" pos:column="5">APR_HAS_THREADS<pos:position pos:line="31" pos:column="20"/></name></expr></cpp:if>
    <block pos:line="32" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">apr_uintptr_t<pos:position pos:line="33" pos:column="22"/></name></type> <name pos:line="33" pos:column="23">tmp2<pos:position pos:line="33" pos:column="27"/></name> <init pos:line="33" pos:column="28">= <expr><operator pos:line="33" pos:column="30">(<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="31">apr_uintptr_t<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">)<pos:position pos:line="33" pos:column="45"/></operator><name><name pos:line="33" pos:column="45">c<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">current_thread<pos:position pos:line="33" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="33" pos:column="63"/></decl_stmt>
        <expr_stmt><expr><name pos:line="34" pos:column="9">tmp<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <name pos:line="34" pos:column="15">tmp2<pos:position pos:line="34" pos:column="19"/></name></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">tmp<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <name pos:line="35" pos:column="15">tmp<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">&lt;&lt;<pos:position pos:line="35" pos:column="27"/></operator> <literal type="number" pos:line="35" pos:column="22">32<pos:position pos:line="35" pos:column="24"/></literal></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">id<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">^=<pos:position pos:line="36" pos:column="14"/></operator> <name pos:line="36" pos:column="15">tmp<pos:position pos:line="36" pos:column="18"/></name></expr>;<pos:position pos:line="36" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="40" pos:column="5">len<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">=<pos:position pos:line="40" pos:column="10"/></operator> <call><name pos:line="40" pos:column="11">apr_base64_encode_len<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><sizeof pos:line="40" pos:column="33">sizeof<argument_list pos:line="40" pos:column="39">(<argument><expr><name pos:line="40" pos:column="40">id<pos:position pos:line="40" pos:column="42"/></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="45"/></expr_stmt> <comment type="block" pos:line="40" pos:column="46">/* includes trailing \0 */</comment>
    <expr_stmt><expr><name pos:line="41" pos:column="5">encoded<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <call><name pos:line="41" pos:column="15">apr_palloc<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><ternary><condition><expr><name pos:line="41" pos:column="26">r<pos:position pos:line="41" pos:column="27"/></name></expr> ?<pos:position pos:line="41" pos:column="29"/></condition><then pos:line="41" pos:column="29"> <expr><name><name pos:line="41" pos:column="30">r<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">pool<pos:position pos:line="41" pos:column="37"/></name></name></expr> <pos:position pos:line="41" pos:column="38"/></then><else pos:line="41" pos:column="38">: <expr><name><name pos:line="41" pos:column="40">c<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">-&gt;<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="43">pool<pos:position pos:line="41" pos:column="47"/></name></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">len<pos:position pos:line="41" pos:column="52"/></name></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">apr_base64_encode<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">encoded<pos:position pos:line="42" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="32">(<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="33">char<pos:position pos:line="42" pos:column="37"/></name> <operator pos:line="42" pos:column="38">*<pos:position pos:line="42" pos:column="39"/></operator><operator pos:line="42" pos:column="39">)<pos:position pos:line="42" pos:column="40"/></operator><operator pos:line="42" pos:column="40">&amp;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="41">id<pos:position pos:line="42" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="45">sizeof<argument_list pos:line="42" pos:column="51">(<argument><expr><name pos:line="42" pos:column="52">id<pos:position pos:line="42" pos:column="54"/></name></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="44" pos:column="5">/* Skip the last char, it is always '=' */</comment>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">encoded<pos:position pos:line="45" pos:column="12"/></name><index pos:line="45" pos:column="12">[<expr><name pos:line="45" pos:column="13">len<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">-<pos:position pos:line="45" pos:column="18"/></operator> <literal type="number" pos:line="45" pos:column="19">2<pos:position pos:line="45" pos:column="20"/></literal></expr>]<pos:position pos:line="45" pos:column="21"/></index></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <literal type="char" pos:line="45" pos:column="24">'\0'<pos:position pos:line="45" pos:column="28"/></literal></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="47" pos:column="5">*<pos:position pos:line="47" pos:column="6"/></operator><name pos:line="47" pos:column="6">idstring<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">=<pos:position pos:line="47" pos:column="16"/></operator> <name pos:line="47" pos:column="17">encoded<pos:position pos:line="47" pos:column="24"/></name></expr>;<pos:position pos:line="47" pos:column="25"/></expr_stmt>

    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">OK<pos:position pos:line="49" pos:column="14"/></name></expr>;<pos:position pos:line="49" pos:column="15"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

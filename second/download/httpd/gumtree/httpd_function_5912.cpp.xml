<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5912.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cleanup_zombies<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">h2_workers<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">workers<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">lock<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list> <block pos:line="1" pos:column="60">{
    <if pos:line="2" pos:column="5">if <condition pos:line="2" pos:column="8">(<expr><name pos:line="2" pos:column="9">lock<pos:position pos:line="2" pos:column="13"/></name></expr>)<pos:position pos:line="2" pos:column="14"/></condition><then pos:line="2" pos:column="14"> <block pos:line="2" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="3" pos:column="9">apr_thread_mutex_lock<pos:position pos:line="3" pos:column="30"/></name><argument_list pos:line="3" pos:column="30">(<argument><expr><name><name pos:line="3" pos:column="31">workers<pos:position pos:line="3" pos:column="38"/></name><operator pos:line="3" pos:column="38">-&gt;<pos:position pos:line="3" pos:column="43"/></operator><name pos:line="3" pos:column="40">lock<pos:position pos:line="3" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="4" pos:column="6"/></block></then></if>
    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<expr><operator pos:line="5" pos:column="12">!<pos:position pos:line="5" pos:column="13"/></operator><call><name pos:line="5" pos:column="13">H2_WORKER_LIST_EMPTY<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">(<argument><expr><operator pos:line="5" pos:column="34">&amp;<pos:position pos:line="5" pos:column="39"/></operator><name><name pos:line="5" pos:column="35">workers<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">zombies<pos:position pos:line="5" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="53"/></condition> <block pos:line="5" pos:column="54">{
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">h2_worker<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">zombie<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><call><name pos:line="6" pos:column="29">H2_WORKER_LIST_FIRST<pos:position pos:line="6" pos:column="49"/></name><argument_list pos:line="6" pos:column="49">(<argument><expr><operator pos:line="6" pos:column="50">&amp;<pos:position pos:line="6" pos:column="55"/></operator><name><name pos:line="6" pos:column="51">workers<pos:position pos:line="6" pos:column="58"/></name><operator pos:line="6" pos:column="58">-&gt;<pos:position pos:line="6" pos:column="63"/></operator><name pos:line="6" pos:column="60">zombies<pos:position pos:line="6" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="69"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">H2_WORKER_REMOVE<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><name pos:line="7" pos:column="26">zombie<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">ap_log_error<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">APLOG_MARK<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">APLOG_TRACE1<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="48">0<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="51">workers<pos:position pos:line="8" pos:column="58"/></name><operator pos:line="8" pos:column="58">-&gt;<pos:position pos:line="8" pos:column="63"/></operator><name pos:line="8" pos:column="60">s<pos:position pos:line="8" pos:column="61"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="9" pos:column="23">"h2_workers: cleanup zombie %d"<pos:position pos:line="9" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="56">zombie<pos:position pos:line="9" pos:column="62"/></name><operator pos:line="9" pos:column="62">-&gt;<pos:position pos:line="9" pos:column="67"/></operator><name pos:line="9" pos:column="64">id<pos:position pos:line="9" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">h2_worker_destroy<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">zombie<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></while>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">lock<pos:position pos:line="12" pos:column="13"/></name></expr>)<pos:position pos:line="12" pos:column="14"/></condition><then pos:line="12" pos:column="14"> <block pos:line="12" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name><name pos:line="13" pos:column="33">workers<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">-&gt;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="42">lock<pos:position pos:line="13" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

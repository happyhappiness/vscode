<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3746_httpd-2.4.25.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">create_access_compat_dir_config<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">apr_pool_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">p<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">dummy<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">access_compat_dir_conf<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">conf<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">=
        <expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">access_compat_dir_conf<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></operator><operator pos:line="5" pos:column="34">)<pos:position pos:line="5" pos:column="35"/></operator><call><name pos:line="5" pos:column="35">apr_pcalloc<pos:position pos:line="5" pos:column="46"/></name><argument_list pos:line="5" pos:column="46">(<argument><expr><name pos:line="5" pos:column="47">p<pos:position pos:line="5" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="50">sizeof<argument_list pos:line="5" pos:column="56">(<argument><expr><name pos:line="5" pos:column="57">access_compat_dir_conf<pos:position pos:line="5" pos:column="79"/></name></expr></argument>)<pos:position pos:line="5" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="82"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">i<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr>;<pos:position pos:line="7" pos:column="16"/></init> <condition><expr><name pos:line="7" pos:column="17">i<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&lt;<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="21">METHODS<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></condition> <incr><expr><operator pos:line="7" pos:column="30">++<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">i<pos:position pos:line="7" pos:column="33"/></name></expr></incr>)<pos:position pos:line="7" pos:column="34"/></control> <block pos:line="7" pos:column="35">{
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">conf<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">order<pos:position pos:line="8" pos:column="20"/></name><index pos:line="8" pos:column="20">[<expr><name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name></expr>]<pos:position pos:line="8" pos:column="23"/></index></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="26">DENY_THEN_ALLOW<pos:position pos:line="8" pos:column="41"/></name></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">conf<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">allows<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <call><name pos:line="10" pos:column="20">apr_array_make<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">p<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="38">1<pos:position pos:line="10" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="41">sizeof<argument_list pos:line="10" pos:column="47">(<argument><expr><name pos:line="10" pos:column="48">allowdeny<pos:position pos:line="10" pos:column="57"/></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">conf<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">-&gt;<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="11">denys<pos:position pos:line="11" pos:column="16"/></name></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <call><name pos:line="11" pos:column="19">apr_array_make<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">p<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="37">1<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="40">sizeof<argument_list pos:line="11" pos:column="46">(<argument><expr><name pos:line="11" pos:column="47">allowdeny<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">conf<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">satisfy<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <call><name pos:line="12" pos:column="21">apr_palloc<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">p<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="35">sizeof<argument_list pos:line="12" pos:column="41">(<argument><expr><operator pos:line="12" pos:column="42">*<pos:position pos:line="12" pos:column="43"/></operator><name><name pos:line="12" pos:column="43">conf<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">-&gt;<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="49">satisfy<pos:position pos:line="12" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></sizeof> <operator pos:line="12" pos:column="58">*<pos:position pos:line="12" pos:column="59"/></operator> <name pos:line="12" pos:column="60">METHODS<pos:position pos:line="12" pos:column="67"/></name></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="69"/></expr_stmt>
    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><expr><name pos:line="13" pos:column="10">i<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <literal type="number" pos:line="13" pos:column="14">0<pos:position pos:line="13" pos:column="15"/></literal></expr>;<pos:position pos:line="13" pos:column="16"/></init> <condition><expr><name pos:line="13" pos:column="17">i<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">&lt;<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="21">METHODS<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></condition> <incr><expr><operator pos:line="13" pos:column="30">++<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">i<pos:position pos:line="13" pos:column="33"/></name></expr></incr>)<pos:position pos:line="13" pos:column="34"/></control> <block pos:line="13" pos:column="35">{
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">conf<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">satisfy<pos:position pos:line="14" pos:column="22"/></name><index pos:line="14" pos:column="22">[<expr><name pos:line="14" pos:column="23">i<pos:position pos:line="14" pos:column="24"/></name></expr>]<pos:position pos:line="14" pos:column="25"/></index></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="28">SATISFY_NOSPEC<pos:position pos:line="14" pos:column="42"/></name></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></for>

    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">void<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">*<pos:position pos:line="17" pos:column="19"/></operator><operator pos:line="17" pos:column="19">)<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">conf<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

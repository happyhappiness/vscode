<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3407_httpd-2.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">apr_sockaddr_vars_set<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">apr_sockaddr_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">addr<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">family<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">apr_port_t<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">port<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><name><name pos:line="3" pos:column="5">addr<pos:position pos:line="3" pos:column="9"/></name><operator pos:line="3" pos:column="9">-&gt;<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="11">family<pos:position pos:line="3" pos:column="17"/></name></name> <operator pos:line="3" pos:column="18">=<pos:position pos:line="3" pos:column="19"/></operator> <name pos:line="3" pos:column="20">family<pos:position pos:line="3" pos:column="26"/></name></expr>;<pos:position pos:line="3" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">addr<pos:position pos:line="4" pos:column="9"/></name><operator pos:line="4" pos:column="9">-&gt;<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="11">sa<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">.<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">sin<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">.<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">sin_family<pos:position pos:line="4" pos:column="28"/></name></name> <operator pos:line="4" pos:column="29">=<pos:position pos:line="4" pos:column="30"/></operator> <name pos:line="4" pos:column="31">family<pos:position pos:line="4" pos:column="37"/></name></expr>;<pos:position pos:line="4" pos:column="38"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">port<pos:position pos:line="5" pos:column="13"/></name></expr>)<pos:position pos:line="5" pos:column="14"/></condition><then pos:line="5" pos:column="14"> <block pos:line="5" pos:column="15">{
        <comment type="block" pos:line="6" pos:column="9">/* XXX IPv6: assumes sin_port and sin6_port at same offset */</comment>
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">addr<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">sa<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">.<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">sin<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">sin_port<pos:position pos:line="7" pos:column="30"/></name></name> <operator pos:line="7" pos:column="31">=<pos:position pos:line="7" pos:column="32"/></operator> <call><name pos:line="7" pos:column="33">htons<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name pos:line="7" pos:column="39">port<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">addr<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">port<pos:position pos:line="8" pos:column="19"/></name></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="22">port<pos:position pos:line="8" pos:column="26"/></name></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">family<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">==<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">APR_INET<pos:position pos:line="11" pos:column="27"/></name></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28"> <block pos:line="11" pos:column="29">{
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">addr<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">salen<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <sizeof pos:line="12" pos:column="23">sizeof<argument_list pos:line="12" pos:column="29">(<argument><expr pos:line="12" pos:column="30">struct <name pos:line="12" pos:column="37">sockaddr_in<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></sizeof></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">addr<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">addr_str_len<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <literal type="number" pos:line="13" pos:column="30">16<pos:position pos:line="13" pos:column="32"/></literal></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">addr<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">ipaddr_ptr<pos:position pos:line="14" pos:column="25"/></name></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <operator pos:line="14" pos:column="28">&amp;<pos:position pos:line="14" pos:column="33"/></operator><operator pos:line="14" pos:column="29">(<pos:position pos:line="14" pos:column="30"/></operator><name><name pos:line="14" pos:column="30">addr<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">sa<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">.<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">sin<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">.<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="43">sin_addr<pos:position pos:line="14" pos:column="51"/></name></name><operator pos:line="14" pos:column="51">)<pos:position pos:line="14" pos:column="52"/></operator></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">addr<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">ipaddr_len<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <sizeof pos:line="15" pos:column="28">sizeof<argument_list pos:line="15" pos:column="34">(<argument><expr pos:line="15" pos:column="35">struct <name pos:line="15" pos:column="42">in_addr<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></sizeof></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then>
<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if<pos:position pos:line="17" pos:column="4"/></cpp:directive> <expr><name pos:line="17" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="17" pos:column="18"/></name></expr></cpp:if>
    <elseif pos:line="18" pos:column="5">else <if pos:line="18" pos:column="10">if <condition pos:line="18" pos:column="13">(<expr><name pos:line="18" pos:column="14">family<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">==<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">APR_INET6<pos:position pos:line="18" pos:column="33"/></name></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34"> <block pos:line="18" pos:column="35">{
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">addr<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">salen<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <sizeof pos:line="19" pos:column="23">sizeof<argument_list pos:line="19" pos:column="29">(<argument><expr pos:line="19" pos:column="30">struct <name pos:line="19" pos:column="37">sockaddr_in6<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></sizeof></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">addr<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">addr_str_len<pos:position pos:line="20" pos:column="27"/></name></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <literal type="number" pos:line="20" pos:column="30">46<pos:position pos:line="20" pos:column="32"/></literal></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">addr<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">ipaddr_ptr<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <operator pos:line="21" pos:column="28">&amp;<pos:position pos:line="21" pos:column="33"/></operator><operator pos:line="21" pos:column="29">(<pos:position pos:line="21" pos:column="30"/></operator><name><name pos:line="21" pos:column="30">addr<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">sa<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">.<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">sin6<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">.<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="44">sin6_addr<pos:position pos:line="21" pos:column="53"/></name></name><operator pos:line="21" pos:column="53">)<pos:position pos:line="21" pos:column="54"/></operator></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">addr<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">ipaddr_len<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <sizeof pos:line="22" pos:column="28">sizeof<argument_list pos:line="22" pos:column="34">(<argument><expr pos:line="22" pos:column="35">struct <name pos:line="22" pos:column="42">in6_addr<pos:position pos:line="22" pos:column="50"/></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></sizeof></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if></elseif></if>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

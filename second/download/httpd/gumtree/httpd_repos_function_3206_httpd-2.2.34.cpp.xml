<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3206_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">enum<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">XML_Error<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name pos:line="2" pos:column="1">storeAtts<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">XML_Parser<pos:position pos:line="2" pos:column="21"/></name></type> <name pos:line="2" pos:column="22">parser<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">ENCODING<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">enc<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
          <parameter><decl><type><specifier pos:line="3" pos:column="11">const<pos:position pos:line="3" pos:column="16"/></specifier> <name pos:line="3" pos:column="17">char<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">attStr<pos:position pos:line="3" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="31">TAG_NAME<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">tagNamePtr<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>,
          <parameter><decl><type><name pos:line="4" pos:column="11">BINDING<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier><modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">bindingsPtr<pos:position pos:line="4" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="33"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">DTD<pos:position pos:line="6" pos:column="6"/></name> <modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier> <specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier></type> <name pos:line="6" pos:column="15">dtd<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">_dtd<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>  <comment type="block" pos:line="6" pos:column="28">/* save one level of indirection */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">ELEMENT_TYPE<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">elementType<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">nDefaultAtts<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">XML_Char<pos:position pos:line="9" pos:column="17"/></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier><modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">appAtts<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>   <comment type="block" pos:line="9" pos:column="31">/* the attribute list for the application */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">attIndex<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">prefixLen<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">i<pos:position pos:line="12" pos:column="8"/></name></decl>;<pos:position pos:line="12" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">n<pos:position pos:line="13" pos:column="8"/></name></decl>;<pos:position pos:line="13" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">XML_Char<pos:position pos:line="14" pos:column="11"/></name> <modifier pos:line="14" pos:column="12">*<pos:position pos:line="14" pos:column="13"/></modifier></type><name pos:line="14" pos:column="13">uri<pos:position pos:line="14" pos:column="16"/></name></decl>;<pos:position pos:line="14" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">nPrefixes<pos:position pos:line="15" pos:column="16"/></name> <init pos:line="15" pos:column="17">= <expr><literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">BINDING<pos:position pos:line="16" pos:column="10"/></name> <modifier pos:line="16" pos:column="11">*<pos:position pos:line="16" pos:column="12"/></modifier></type><name pos:line="16" pos:column="12">binding<pos:position pos:line="16" pos:column="19"/></name></decl>;<pos:position pos:line="16" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="17" pos:column="3">const<pos:position pos:line="17" pos:column="8"/></specifier> <name pos:line="17" pos:column="9">XML_Char<pos:position pos:line="17" pos:column="17"/></name> <modifier pos:line="17" pos:column="18">*<pos:position pos:line="17" pos:column="19"/></modifier></type><name pos:line="17" pos:column="19">localPart<pos:position pos:line="17" pos:column="28"/></name></decl>;<pos:position pos:line="17" pos:column="29"/></decl_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* lookup the element type name */</comment>
  <expr_stmt><expr><name pos:line="20" pos:column="3">elementType<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <operator pos:line="20" pos:column="17">(<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">ELEMENT_TYPE<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">*<pos:position pos:line="20" pos:column="32"/></operator><operator pos:line="20" pos:column="32">)<pos:position pos:line="20" pos:column="33"/></operator><call><name pos:line="20" pos:column="33">lookup<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">(<argument><expr><operator pos:line="20" pos:column="40">&amp;<pos:position pos:line="20" pos:column="45"/></operator><name><name pos:line="20" pos:column="41">dtd<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">elementTypes<pos:position pos:line="20" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="60">tagNamePtr<pos:position pos:line="20" pos:column="70"/></name><operator pos:line="20" pos:column="70">-&gt;<pos:position pos:line="20" pos:column="75"/></operator><name pos:line="20" pos:column="72">str<pos:position pos:line="20" pos:column="75"/></name></name></expr></argument>,<argument><expr><literal type="number" pos:line="20" pos:column="76">0<pos:position pos:line="20" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="79"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">elementType<pos:position pos:line="21" pos:column="19"/></name></expr>)<pos:position pos:line="21" pos:column="20"/></condition><then pos:line="21" pos:column="20"> <block pos:line="21" pos:column="21">{
    <decl_stmt><decl><type><specifier pos:line="22" pos:column="5">const<pos:position pos:line="22" pos:column="10"/></specifier> <name pos:line="22" pos:column="11">XML_Char<pos:position pos:line="22" pos:column="19"/></name> <modifier pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></modifier></type><name pos:line="22" pos:column="21">name<pos:position pos:line="22" pos:column="25"/></name> <init pos:line="22" pos:column="26">= <expr><call><name pos:line="22" pos:column="28">poolCopyString<pos:position pos:line="22" pos:column="42"/></name><argument_list pos:line="22" pos:column="42">(<argument><expr><operator pos:line="22" pos:column="43">&amp;<pos:position pos:line="22" pos:column="48"/></operator><name><name pos:line="22" pos:column="44">dtd<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">-&gt;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="49">pool<pos:position pos:line="22" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="55">tagNamePtr<pos:position pos:line="22" pos:column="65"/></name><operator pos:line="22" pos:column="65">-&gt;<pos:position pos:line="22" pos:column="70"/></operator><name pos:line="22" pos:column="67">str<pos:position pos:line="22" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="72"/></decl_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">name<pos:position pos:line="23" pos:column="14"/></name></expr>)<pos:position pos:line="23" pos:column="15"/></condition><then pos:line="23" pos:column="15">
      <block type="pseudo"><return pos:line="24" pos:column="7">return <expr><name pos:line="24" pos:column="14">XML_ERROR_NO_MEMORY<pos:position pos:line="24" pos:column="33"/></name></expr>;<pos:position pos:line="24" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="25" pos:column="5">elementType<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <operator pos:line="25" pos:column="19">(<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">ELEMENT_TYPE<pos:position pos:line="25" pos:column="32"/></name> <operator pos:line="25" pos:column="33">*<pos:position pos:line="25" pos:column="34"/></operator><operator pos:line="25" pos:column="34">)<pos:position pos:line="25" pos:column="35"/></operator><call><name pos:line="25" pos:column="35">lookup<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><operator pos:line="25" pos:column="42">&amp;<pos:position pos:line="25" pos:column="47"/></operator><name><name pos:line="25" pos:column="43">dtd<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">elementTypes<pos:position pos:line="25" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="62">name<pos:position pos:line="25" pos:column="66"/></name></expr></argument>,
                                         <argument><expr><sizeof pos:line="26" pos:column="42">sizeof<argument_list pos:line="26" pos:column="48">(<argument><expr><name pos:line="26" pos:column="49">ELEMENT_TYPE<pos:position pos:line="26" pos:column="61"/></name></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="64"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">elementType<pos:position pos:line="27" pos:column="21"/></name></expr>)<pos:position pos:line="27" pos:column="22"/></condition><then pos:line="27" pos:column="22">
      <block type="pseudo"><return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">XML_ERROR_NO_MEMORY<pos:position pos:line="28" pos:column="33"/></name></expr>;<pos:position pos:line="28" pos:column="34"/></return></block></then></if>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">ns<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">&amp;&amp;<pos:position pos:line="29" pos:column="22"/></operator> <operator pos:line="29" pos:column="15">!<pos:position pos:line="29" pos:column="16"/></operator><call><name pos:line="29" pos:column="16">setElementTypePrefix<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">parser<pos:position pos:line="29" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="45">elementType<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="58"/></condition><then pos:line="29" pos:column="58">
      <block type="pseudo"><return pos:line="30" pos:column="7">return <expr><name pos:line="30" pos:column="14">XML_ERROR_NO_MEMORY<pos:position pos:line="30" pos:column="33"/></name></expr>;<pos:position pos:line="30" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="32" pos:column="3">nDefaultAtts<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name><name pos:line="32" pos:column="18">elementType<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">-&gt;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="31">nDefaultAtts<pos:position pos:line="32" pos:column="43"/></name></name></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>

  <comment type="block" pos:line="34" pos:column="3">/* get the attributes from the tokenizer */</comment>
  <expr_stmt><expr><name pos:line="35" pos:column="3">n<pos:position pos:line="35" pos:column="4"/></name> <operator pos:line="35" pos:column="5">=<pos:position pos:line="35" pos:column="6"/></operator> <call><name pos:line="35" pos:column="7">XmlGetAttributes<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">enc<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="29">attStr<pos:position pos:line="35" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="37">attsSize<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="47">atts<pos:position pos:line="35" pos:column="51"/></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">n<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">+<pos:position pos:line="36" pos:column="10"/></operator> <name pos:line="36" pos:column="11">nDefaultAtts<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">&gt;<pos:position pos:line="36" pos:column="28"/></operator> <name pos:line="36" pos:column="26">attsSize<pos:position pos:line="36" pos:column="34"/></name></expr>)<pos:position pos:line="36" pos:column="35"/></condition><then pos:line="36" pos:column="35"> <block pos:line="36" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">int<pos:position pos:line="37" pos:column="8"/></name></type> <name pos:line="37" pos:column="9">oldAttsSize<pos:position pos:line="37" pos:column="20"/></name> <init pos:line="37" pos:column="21">= <expr><name pos:line="37" pos:column="23">attsSize<pos:position pos:line="37" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="37" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">ATTRIBUTE<pos:position pos:line="38" pos:column="14"/></name> <modifier pos:line="38" pos:column="15">*<pos:position pos:line="38" pos:column="16"/></modifier></type><name pos:line="38" pos:column="16">temp<pos:position pos:line="38" pos:column="20"/></name></decl>;<pos:position pos:line="38" pos:column="21"/></decl_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">attsSize<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <name pos:line="39" pos:column="16">n<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">+<pos:position pos:line="39" pos:column="19"/></operator> <name pos:line="39" pos:column="20">nDefaultAtts<pos:position pos:line="39" pos:column="32"/></name> <operator pos:line="39" pos:column="33">+<pos:position pos:line="39" pos:column="34"/></operator> <name pos:line="39" pos:column="35">INIT_ATTS_SIZE<pos:position pos:line="39" pos:column="49"/></name></expr>;<pos:position pos:line="39" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">temp<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <operator pos:line="40" pos:column="12">(<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">ATTRIBUTE<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">*<pos:position pos:line="40" pos:column="24"/></operator><operator pos:line="40" pos:column="24">)<pos:position pos:line="40" pos:column="25"/></operator><call><name pos:line="40" pos:column="25">REALLOC<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><operator pos:line="40" pos:column="33">(<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="34">void<pos:position pos:line="40" pos:column="38"/></name> <operator pos:line="40" pos:column="39">*<pos:position pos:line="40" pos:column="40"/></operator><operator pos:line="40" pos:column="40">)<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="41">atts<pos:position pos:line="40" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="47">attsSize<pos:position pos:line="40" pos:column="55"/></name> <operator pos:line="40" pos:column="56">*<pos:position pos:line="40" pos:column="57"/></operator> <sizeof pos:line="40" pos:column="58">sizeof<argument_list pos:line="40" pos:column="64">(<argument><expr><name pos:line="40" pos:column="65">ATTRIBUTE<pos:position pos:line="40" pos:column="74"/></name></expr></argument>)<pos:position pos:line="40" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="77"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">temp<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">==<pos:position pos:line="41" pos:column="16"/></operator> <name pos:line="41" pos:column="17">NULL<pos:position pos:line="41" pos:column="21"/></name></expr>)<pos:position pos:line="41" pos:column="22"/></condition><then pos:line="41" pos:column="22">
      <block type="pseudo"><return pos:line="42" pos:column="7">return <expr><name pos:line="42" pos:column="14">XML_ERROR_NO_MEMORY<pos:position pos:line="42" pos:column="33"/></name></expr>;<pos:position pos:line="42" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="43" pos:column="5">atts<pos:position pos:line="43" pos:column="9"/></name> <operator pos:line="43" pos:column="10">=<pos:position pos:line="43" pos:column="11"/></operator> <name pos:line="43" pos:column="12">temp<pos:position pos:line="43" pos:column="16"/></name></expr>;<pos:position pos:line="43" pos:column="17"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">n<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">&gt;<pos:position pos:line="44" pos:column="15"/></operator> <name pos:line="44" pos:column="13">oldAttsSize<pos:position pos:line="44" pos:column="24"/></name></expr>)<pos:position pos:line="44" pos:column="25"/></condition><then pos:line="44" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="7">XmlGetAttributes<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><name pos:line="45" pos:column="24">enc<pos:position pos:line="45" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="29">attStr<pos:position pos:line="45" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="37">n<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="40">atts<pos:position pos:line="45" pos:column="44"/></name></expr></argument>)<pos:position pos:line="45" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="46"/></expr_stmt></block></then></if>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="48" pos:column="3">appAtts<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">=<pos:position pos:line="48" pos:column="12"/></operator> <operator pos:line="48" pos:column="13">(<pos:position pos:line="48" pos:column="14"/></operator><specifier pos:line="48" pos:column="14">const<pos:position pos:line="48" pos:column="19"/></specifier> <name pos:line="48" pos:column="20">XML_Char<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">*<pos:position pos:line="48" pos:column="30"/></operator><operator pos:line="48" pos:column="30">*<pos:position pos:line="48" pos:column="31"/></operator><operator pos:line="48" pos:column="31">)<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="32">atts<pos:position pos:line="48" pos:column="36"/></name></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>
  <for pos:line="49" pos:column="3">for <control pos:line="49" pos:column="7">(<init><expr><name pos:line="49" pos:column="8">i<pos:position pos:line="49" pos:column="9"/></name> <operator pos:line="49" pos:column="10">=<pos:position pos:line="49" pos:column="11"/></operator> <literal type="number" pos:line="49" pos:column="12">0<pos:position pos:line="49" pos:column="13"/></literal></expr>;<pos:position pos:line="49" pos:column="14"/></init> <condition><expr><name pos:line="49" pos:column="15">i<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">&lt;<pos:position pos:line="49" pos:column="21"/></operator> <name pos:line="49" pos:column="19">n<pos:position pos:line="49" pos:column="20"/></name></expr>;<pos:position pos:line="49" pos:column="21"/></condition> <incr><expr><name pos:line="49" pos:column="22">i<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">++<pos:position pos:line="49" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="26"/></control> <block pos:line="49" pos:column="27">{
    <comment type="block" pos:line="50" pos:column="5">/* add the name and value to the attribute list */</comment>
    <decl_stmt><decl><type><name pos:line="51" pos:column="5">ATTRIBUTE_ID<pos:position pos:line="51" pos:column="17"/></name> <modifier pos:line="51" pos:column="18">*<pos:position pos:line="51" pos:column="19"/></modifier></type><name pos:line="51" pos:column="19">attId<pos:position pos:line="51" pos:column="24"/></name> <init pos:line="51" pos:column="25">= <expr><call><name pos:line="51" pos:column="27">getAttributeId<pos:position pos:line="51" pos:column="41"/></name><argument_list pos:line="51" pos:column="41">(<argument><expr><name pos:line="51" pos:column="42">parser<pos:position pos:line="51" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="50">enc<pos:position pos:line="51" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="55">atts<pos:position pos:line="51" pos:column="59"/></name><index pos:line="51" pos:column="59">[<expr><name pos:line="51" pos:column="60">i<pos:position pos:line="51" pos:column="61"/></name></expr>]<pos:position pos:line="51" pos:column="62"/></index></name><operator pos:line="51" pos:column="62">.<pos:position pos:line="51" pos:column="63"/></operator><name pos:line="51" pos:column="63">name<pos:position pos:line="51" pos:column="67"/></name></expr></argument>,
                                         <argument><expr><name><name pos:line="52" pos:column="42">atts<pos:position pos:line="52" pos:column="46"/></name><index pos:line="52" pos:column="46">[<expr><name pos:line="52" pos:column="47">i<pos:position pos:line="52" pos:column="48"/></name></expr>]<pos:position pos:line="52" pos:column="49"/></index></name><operator pos:line="52" pos:column="49">.<pos:position pos:line="52" pos:column="50"/></operator><name pos:line="52" pos:column="50">name<pos:position pos:line="52" pos:column="54"/></name>
                                         <operator pos:line="53" pos:column="42">+<pos:position pos:line="53" pos:column="43"/></operator> <call><name pos:line="53" pos:column="44">XmlNameLength<pos:position pos:line="53" pos:column="57"/></name><argument_list pos:line="53" pos:column="57">(<argument><expr><name pos:line="53" pos:column="58">enc<pos:position pos:line="53" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="63">atts<pos:position pos:line="53" pos:column="67"/></name><index pos:line="53" pos:column="67">[<expr><name pos:line="53" pos:column="68">i<pos:position pos:line="53" pos:column="69"/></name></expr>]<pos:position pos:line="53" pos:column="70"/></index></name><operator pos:line="53" pos:column="70">.<pos:position pos:line="53" pos:column="71"/></operator><name pos:line="53" pos:column="71">name<pos:position pos:line="53" pos:column="75"/></name></expr></argument>)<pos:position pos:line="53" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="78"/></decl_stmt>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><operator pos:line="54" pos:column="9">!<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">attId<pos:position pos:line="54" pos:column="15"/></name></expr>)<pos:position pos:line="54" pos:column="16"/></condition><then pos:line="54" pos:column="16">
      <block type="pseudo"><return pos:line="55" pos:column="7">return <expr><name pos:line="55" pos:column="14">XML_ERROR_NO_MEMORY<pos:position pos:line="55" pos:column="33"/></name></expr>;<pos:position pos:line="55" pos:column="34"/></return></block></then></if>
    <comment type="block" pos:line="56" pos:column="5">/* Detect duplicate attributes by their QNames. This does not work when
       namespace processing is turned on and different prefixes for the same
       namespace are used. For this case we have a check further down.
    */</comment>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><operator pos:line="60" pos:column="9">(<pos:position pos:line="60" pos:column="10"/></operator><name><name pos:line="60" pos:column="10">attId<pos:position pos:line="60" pos:column="15"/></name><operator pos:line="60" pos:column="15">-&gt;<pos:position pos:line="60" pos:column="20"/></operator><name pos:line="60" pos:column="17">name<pos:position pos:line="60" pos:column="21"/></name></name><operator pos:line="60" pos:column="21">)<pos:position pos:line="60" pos:column="22"/></operator><index pos:line="60" pos:column="22">[<expr><operator pos:line="60" pos:column="23">-<pos:position pos:line="60" pos:column="24"/></operator><literal type="number" pos:line="60" pos:column="24">1<pos:position pos:line="60" pos:column="25"/></literal></expr>]<pos:position pos:line="60" pos:column="26"/></index></expr>)<pos:position pos:line="60" pos:column="27"/></condition><then pos:line="60" pos:column="27"> <block pos:line="60" pos:column="28">{
      <if pos:line="61" pos:column="7">if <condition pos:line="61" pos:column="10">(<expr><name pos:line="61" pos:column="11">enc<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">==<pos:position pos:line="61" pos:column="17"/></operator> <name pos:line="61" pos:column="18">encoding<pos:position pos:line="61" pos:column="26"/></name></expr>)<pos:position pos:line="61" pos:column="27"/></condition><then pos:line="61" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="9">eventPtr<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">=<pos:position pos:line="62" pos:column="19"/></operator> <name><name pos:line="62" pos:column="20">atts<pos:position pos:line="62" pos:column="24"/></name><index pos:line="62" pos:column="24">[<expr><name pos:line="62" pos:column="25">i<pos:position pos:line="62" pos:column="26"/></name></expr>]<pos:position pos:line="62" pos:column="27"/></index></name><operator pos:line="62" pos:column="27">.<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="28">name<pos:position pos:line="62" pos:column="32"/></name></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt></block></then></if>
      <return pos:line="63" pos:column="7">return <expr><name pos:line="63" pos:column="14">XML_ERROR_DUPLICATE_ATTRIBUTE<pos:position pos:line="63" pos:column="43"/></name></expr>;<pos:position pos:line="63" pos:column="44"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="65" pos:column="5">(<pos:position pos:line="65" pos:column="6"/></operator><name><name pos:line="65" pos:column="6">attId<pos:position pos:line="65" pos:column="11"/></name><operator pos:line="65" pos:column="11">-&gt;<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="13">name<pos:position pos:line="65" pos:column="17"/></name></name><operator pos:line="65" pos:column="17">)<pos:position pos:line="65" pos:column="18"/></operator><index pos:line="65" pos:column="18">[<expr><operator pos:line="65" pos:column="19">-<pos:position pos:line="65" pos:column="20"/></operator><literal type="number" pos:line="65" pos:column="20">1<pos:position pos:line="65" pos:column="21"/></literal></expr>]<pos:position pos:line="65" pos:column="22"/></index> <operator pos:line="65" pos:column="23">=<pos:position pos:line="65" pos:column="24"/></operator> <literal type="number" pos:line="65" pos:column="25">1<pos:position pos:line="65" pos:column="26"/></literal></expr>;<pos:position pos:line="65" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="66" pos:column="5">appAtts<pos:position pos:line="66" pos:column="12"/></name><index pos:line="66" pos:column="12">[<expr><name pos:line="66" pos:column="13">attIndex<pos:position pos:line="66" pos:column="21"/></name><operator pos:line="66" pos:column="21">++<pos:position pos:line="66" pos:column="23"/></operator></expr>]<pos:position pos:line="66" pos:column="24"/></index></name> <operator pos:line="66" pos:column="25">=<pos:position pos:line="66" pos:column="26"/></operator> <name><name pos:line="66" pos:column="27">attId<pos:position pos:line="66" pos:column="32"/></name><operator pos:line="66" pos:column="32">-&gt;<pos:position pos:line="66" pos:column="37"/></operator><name pos:line="66" pos:column="34">name<pos:position pos:line="66" pos:column="38"/></name></name></expr>;<pos:position pos:line="66" pos:column="39"/></expr_stmt>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><operator pos:line="67" pos:column="9">!<pos:position pos:line="67" pos:column="10"/></operator><name><name pos:line="67" pos:column="10">atts<pos:position pos:line="67" pos:column="14"/></name><index pos:line="67" pos:column="14">[<expr><name pos:line="67" pos:column="15">i<pos:position pos:line="67" pos:column="16"/></name></expr>]<pos:position pos:line="67" pos:column="17"/></index></name><operator pos:line="67" pos:column="17">.<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">normalized<pos:position pos:line="67" pos:column="28"/></name></expr>)<pos:position pos:line="67" pos:column="29"/></condition><then pos:line="67" pos:column="29"> <block pos:line="67" pos:column="30">{
      <decl_stmt><decl><type><name><name pos:line="68" pos:column="7">enum<pos:position pos:line="68" pos:column="11"/></name> <name pos:line="68" pos:column="12">XML_Error<pos:position pos:line="68" pos:column="21"/></name></name></type> <name pos:line="68" pos:column="22">result<pos:position pos:line="68" pos:column="28"/></name></decl>;<pos:position pos:line="68" pos:column="29"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="69" pos:column="7">XML_Bool<pos:position pos:line="69" pos:column="15"/></name></type> <name pos:line="69" pos:column="16">isCdata<pos:position pos:line="69" pos:column="23"/></name> <init pos:line="69" pos:column="24">= <expr><name pos:line="69" pos:column="26">XML_TRUE<pos:position pos:line="69" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="69" pos:column="35"/></decl_stmt>

      <comment type="block" pos:line="71" pos:column="7">/* figure out whether declared as other than CDATA */</comment>
      <if pos:line="72" pos:column="7">if <condition pos:line="72" pos:column="10">(<expr><name><name pos:line="72" pos:column="11">attId<pos:position pos:line="72" pos:column="16"/></name><operator pos:line="72" pos:column="16">-&gt;<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="18">maybeTokenized<pos:position pos:line="72" pos:column="32"/></name></name></expr>)<pos:position pos:line="72" pos:column="33"/></condition><then pos:line="72" pos:column="33"> <block pos:line="72" pos:column="34">{
        <decl_stmt><decl><type><name pos:line="73" pos:column="9">int<pos:position pos:line="73" pos:column="12"/></name></type> <name pos:line="73" pos:column="13">j<pos:position pos:line="73" pos:column="14"/></name></decl>;<pos:position pos:line="73" pos:column="15"/></decl_stmt>
        <for pos:line="74" pos:column="9">for <control pos:line="74" pos:column="13">(<init><expr><name pos:line="74" pos:column="14">j<pos:position pos:line="74" pos:column="15"/></name> <operator pos:line="74" pos:column="16">=<pos:position pos:line="74" pos:column="17"/></operator> <literal type="number" pos:line="74" pos:column="18">0<pos:position pos:line="74" pos:column="19"/></literal></expr>;<pos:position pos:line="74" pos:column="20"/></init> <condition><expr><name pos:line="74" pos:column="21">j<pos:position pos:line="74" pos:column="22"/></name> <operator pos:line="74" pos:column="23">&lt;<pos:position pos:line="74" pos:column="27"/></operator> <name pos:line="74" pos:column="25">nDefaultAtts<pos:position pos:line="74" pos:column="37"/></name></expr>;<pos:position pos:line="74" pos:column="38"/></condition> <incr><expr><name pos:line="74" pos:column="39">j<pos:position pos:line="74" pos:column="40"/></name><operator pos:line="74" pos:column="40">++<pos:position pos:line="74" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="74" pos:column="43"/></control> <block pos:line="74" pos:column="44">{
          <if pos:line="75" pos:column="11">if <condition pos:line="75" pos:column="14">(<expr><name pos:line="75" pos:column="15">attId<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">==<pos:position pos:line="75" pos:column="23"/></operator> <name><name pos:line="75" pos:column="24">elementType<pos:position pos:line="75" pos:column="35"/></name><operator pos:line="75" pos:column="35">-&gt;<pos:position pos:line="75" pos:column="40"/></operator><name pos:line="75" pos:column="37">defaultAtts<pos:position pos:line="75" pos:column="48"/></name><index pos:line="75" pos:column="48">[<expr><name pos:line="75" pos:column="49">j<pos:position pos:line="75" pos:column="50"/></name></expr>]<pos:position pos:line="75" pos:column="51"/></index></name><operator pos:line="75" pos:column="51">.<pos:position pos:line="75" pos:column="52"/></operator><name pos:line="75" pos:column="52">id<pos:position pos:line="75" pos:column="54"/></name></expr>)<pos:position pos:line="75" pos:column="55"/></condition><then pos:line="75" pos:column="55"> <block pos:line="75" pos:column="56">{
            <expr_stmt><expr><name pos:line="76" pos:column="13">isCdata<pos:position pos:line="76" pos:column="20"/></name> <operator pos:line="76" pos:column="21">=<pos:position pos:line="76" pos:column="22"/></operator> <name><name pos:line="76" pos:column="23">elementType<pos:position pos:line="76" pos:column="34"/></name><operator pos:line="76" pos:column="34">-&gt;<pos:position pos:line="76" pos:column="39"/></operator><name pos:line="76" pos:column="36">defaultAtts<pos:position pos:line="76" pos:column="47"/></name><index pos:line="76" pos:column="47">[<expr><name pos:line="76" pos:column="48">j<pos:position pos:line="76" pos:column="49"/></name></expr>]<pos:position pos:line="76" pos:column="50"/></index></name><operator pos:line="76" pos:column="50">.<pos:position pos:line="76" pos:column="51"/></operator><name pos:line="76" pos:column="51">isCdata<pos:position pos:line="76" pos:column="58"/></name></expr>;<pos:position pos:line="76" pos:column="59"/></expr_stmt>
            <break pos:line="77" pos:column="13">break;<pos:position pos:line="77" pos:column="19"/></break>
          }<pos:position pos:line="78" pos:column="12"/></block></then></if>
        }<pos:position pos:line="79" pos:column="10"/></block></for>
      }<pos:position pos:line="80" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="82" pos:column="7">/* normalize the attribute value */</comment>
      <expr_stmt><expr><name pos:line="83" pos:column="7">result<pos:position pos:line="83" pos:column="13"/></name> <operator pos:line="83" pos:column="14">=<pos:position pos:line="83" pos:column="15"/></operator> <call><name pos:line="83" pos:column="16">storeAttributeValue<pos:position pos:line="83" pos:column="35"/></name><argument_list pos:line="83" pos:column="35">(<argument><expr><name pos:line="83" pos:column="36">parser<pos:position pos:line="83" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="44">enc<pos:position pos:line="83" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="49">isCdata<pos:position pos:line="83" pos:column="56"/></name></expr></argument>,
                                   <argument><expr><name><name pos:line="84" pos:column="36">atts<pos:position pos:line="84" pos:column="40"/></name><index pos:line="84" pos:column="40">[<expr><name pos:line="84" pos:column="41">i<pos:position pos:line="84" pos:column="42"/></name></expr>]<pos:position pos:line="84" pos:column="43"/></index></name><operator pos:line="84" pos:column="43">.<pos:position pos:line="84" pos:column="44"/></operator><name pos:line="84" pos:column="44">valuePtr<pos:position pos:line="84" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="54">atts<pos:position pos:line="84" pos:column="58"/></name><index pos:line="84" pos:column="58">[<expr><name pos:line="84" pos:column="59">i<pos:position pos:line="84" pos:column="60"/></name></expr>]<pos:position pos:line="84" pos:column="61"/></index></name><operator pos:line="84" pos:column="61">.<pos:position pos:line="84" pos:column="62"/></operator><name pos:line="84" pos:column="62">valueEnd<pos:position pos:line="84" pos:column="70"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="85" pos:column="36">&amp;<pos:position pos:line="85" pos:column="41"/></operator><name pos:line="85" pos:column="37">tempPool<pos:position pos:line="85" pos:column="45"/></name></expr></argument>)<pos:position pos:line="85" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="47"/></expr_stmt>
      <if pos:line="86" pos:column="7">if <condition pos:line="86" pos:column="10">(<expr><name pos:line="86" pos:column="11">result<pos:position pos:line="86" pos:column="17"/></name></expr>)<pos:position pos:line="86" pos:column="18"/></condition><then pos:line="86" pos:column="18">
        <block type="pseudo"><return pos:line="87" pos:column="9">return <expr><name pos:line="87" pos:column="16">result<pos:position pos:line="87" pos:column="22"/></name></expr>;<pos:position pos:line="87" pos:column="23"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="88" pos:column="7">appAtts<pos:position pos:line="88" pos:column="14"/></name><index pos:line="88" pos:column="14">[<expr><name pos:line="88" pos:column="15">attIndex<pos:position pos:line="88" pos:column="23"/></name></expr>]<pos:position pos:line="88" pos:column="24"/></index></name> <operator pos:line="88" pos:column="25">=<pos:position pos:line="88" pos:column="26"/></operator> <call><name pos:line="88" pos:column="27">poolStart<pos:position pos:line="88" pos:column="36"/></name><argument_list pos:line="88" pos:column="36">(<argument><expr><operator pos:line="88" pos:column="37">&amp;<pos:position pos:line="88" pos:column="42"/></operator><name pos:line="88" pos:column="38">tempPool<pos:position pos:line="88" pos:column="46"/></name></expr></argument>)<pos:position pos:line="88" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">poolFinish<pos:position pos:line="89" pos:column="17"/></name><argument_list pos:line="89" pos:column="17">(<argument><expr><operator pos:line="89" pos:column="18">&amp;<pos:position pos:line="89" pos:column="23"/></operator><name pos:line="89" pos:column="19">tempPool<pos:position pos:line="89" pos:column="27"/></name></expr></argument>)<pos:position pos:line="89" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then>
    <else pos:line="91" pos:column="5">else <block pos:line="91" pos:column="10">{
      <comment type="block" pos:line="92" pos:column="7">/* the value did not need normalizing */</comment>
      <expr_stmt><expr><name><name pos:line="93" pos:column="7">appAtts<pos:position pos:line="93" pos:column="14"/></name><index pos:line="93" pos:column="14">[<expr><name pos:line="93" pos:column="15">attIndex<pos:position pos:line="93" pos:column="23"/></name></expr>]<pos:position pos:line="93" pos:column="24"/></index></name> <operator pos:line="93" pos:column="25">=<pos:position pos:line="93" pos:column="26"/></operator> <call><name pos:line="93" pos:column="27">poolStoreString<pos:position pos:line="93" pos:column="42"/></name><argument_list pos:line="93" pos:column="42">(<argument><expr><operator pos:line="93" pos:column="43">&amp;<pos:position pos:line="93" pos:column="48"/></operator><name pos:line="93" pos:column="44">tempPool<pos:position pos:line="93" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="54">enc<pos:position pos:line="93" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="59">atts<pos:position pos:line="93" pos:column="63"/></name><index pos:line="93" pos:column="63">[<expr><name pos:line="93" pos:column="64">i<pos:position pos:line="93" pos:column="65"/></name></expr>]<pos:position pos:line="93" pos:column="66"/></index></name><operator pos:line="93" pos:column="66">.<pos:position pos:line="93" pos:column="67"/></operator><name pos:line="93" pos:column="67">valuePtr<pos:position pos:line="93" pos:column="75"/></name></expr></argument>,
                                          <argument><expr><name><name pos:line="94" pos:column="43">atts<pos:position pos:line="94" pos:column="47"/></name><index pos:line="94" pos:column="47">[<expr><name pos:line="94" pos:column="48">i<pos:position pos:line="94" pos:column="49"/></name></expr>]<pos:position pos:line="94" pos:column="50"/></index></name><operator pos:line="94" pos:column="50">.<pos:position pos:line="94" pos:column="51"/></operator><name pos:line="94" pos:column="51">valueEnd<pos:position pos:line="94" pos:column="59"/></name></expr></argument>)<pos:position pos:line="94" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="61"/></expr_stmt>
      <if pos:line="95" pos:column="7">if <condition pos:line="95" pos:column="10">(<expr><name><name pos:line="95" pos:column="11">appAtts<pos:position pos:line="95" pos:column="18"/></name><index pos:line="95" pos:column="18">[<expr><name pos:line="95" pos:column="19">attIndex<pos:position pos:line="95" pos:column="27"/></name></expr>]<pos:position pos:line="95" pos:column="28"/></index></name> <operator pos:line="95" pos:column="29">==<pos:position pos:line="95" pos:column="31"/></operator> <literal type="number" pos:line="95" pos:column="32">0<pos:position pos:line="95" pos:column="33"/></literal></expr>)<pos:position pos:line="95" pos:column="34"/></condition><then pos:line="95" pos:column="34">
        <block type="pseudo"><return pos:line="96" pos:column="9">return <expr><name pos:line="96" pos:column="16">XML_ERROR_NO_MEMORY<pos:position pos:line="96" pos:column="35"/></name></expr>;<pos:position pos:line="96" pos:column="36"/></return></block></then></if>
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">poolFinish<pos:position pos:line="97" pos:column="17"/></name><argument_list pos:line="97" pos:column="17">(<argument><expr><operator pos:line="97" pos:column="18">&amp;<pos:position pos:line="97" pos:column="23"/></operator><name pos:line="97" pos:column="19">tempPool<pos:position pos:line="97" pos:column="27"/></name></expr></argument>)<pos:position pos:line="97" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="98" pos:column="6"/></block></else></if>
    <comment type="block" pos:line="99" pos:column="5">/* handle prefixed attribute names */</comment>
    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><name><name pos:line="100" pos:column="9">attId<pos:position pos:line="100" pos:column="14"/></name><operator pos:line="100" pos:column="14">-&gt;<pos:position pos:line="100" pos:column="19"/></operator><name pos:line="100" pos:column="16">prefix<pos:position pos:line="100" pos:column="22"/></name></name></expr>)<pos:position pos:line="100" pos:column="23"/></condition><then pos:line="100" pos:column="23"> <block pos:line="100" pos:column="24">{
      <if pos:line="101" pos:column="7">if <condition pos:line="101" pos:column="10">(<expr><name><name pos:line="101" pos:column="11">attId<pos:position pos:line="101" pos:column="16"/></name><operator pos:line="101" pos:column="16">-&gt;<pos:position pos:line="101" pos:column="21"/></operator><name pos:line="101" pos:column="18">xmlns<pos:position pos:line="101" pos:column="23"/></name></name></expr>)<pos:position pos:line="101" pos:column="24"/></condition><then pos:line="101" pos:column="24"> <block pos:line="101" pos:column="25">{
        <comment type="block" pos:line="102" pos:column="9">/* deal with namespace declarations here */</comment>
        <decl_stmt><decl><type><name><name pos:line="103" pos:column="9">enum<pos:position pos:line="103" pos:column="13"/></name> <name pos:line="103" pos:column="14">XML_Error<pos:position pos:line="103" pos:column="23"/></name></name></type> <name pos:line="103" pos:column="24">result<pos:position pos:line="103" pos:column="30"/></name> <init pos:line="103" pos:column="31">= <expr><call><name pos:line="103" pos:column="33">addBinding<pos:position pos:line="103" pos:column="43"/></name><argument_list pos:line="103" pos:column="43">(<argument><expr><name pos:line="103" pos:column="44">parser<pos:position pos:line="103" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="52">attId<pos:position pos:line="103" pos:column="57"/></name><operator pos:line="103" pos:column="57">-&gt;<pos:position pos:line="103" pos:column="62"/></operator><name pos:line="103" pos:column="59">prefix<pos:position pos:line="103" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="67">attId<pos:position pos:line="103" pos:column="72"/></name></expr></argument>,
                                           <argument><expr><name><name pos:line="104" pos:column="44">appAtts<pos:position pos:line="104" pos:column="51"/></name><index pos:line="104" pos:column="51">[<expr><name pos:line="104" pos:column="52">attIndex<pos:position pos:line="104" pos:column="60"/></name></expr>]<pos:position pos:line="104" pos:column="61"/></index></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="63">bindingsPtr<pos:position pos:line="104" pos:column="74"/></name></expr></argument>)<pos:position pos:line="104" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="104" pos:column="76"/></decl_stmt>
        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">result<pos:position pos:line="105" pos:column="19"/></name></expr>)<pos:position pos:line="105" pos:column="20"/></condition><then pos:line="105" pos:column="20">
          <block type="pseudo"><return pos:line="106" pos:column="11">return <expr><name pos:line="106" pos:column="18">result<pos:position pos:line="106" pos:column="24"/></name></expr>;<pos:position pos:line="106" pos:column="25"/></return></block></then></if>
        <expr_stmt><expr><operator pos:line="107" pos:column="9">--<pos:position pos:line="107" pos:column="11"/></operator><name pos:line="107" pos:column="11">attIndex<pos:position pos:line="107" pos:column="19"/></name></expr>;<pos:position pos:line="107" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="108" pos:column="8"/></block></then>
      <else pos:line="109" pos:column="7">else <block pos:line="109" pos:column="12">{
        <comment type="block" pos:line="110" pos:column="9">/* deal with other prefixed names later */</comment>
        <expr_stmt><expr><name pos:line="111" pos:column="9">attIndex<pos:position pos:line="111" pos:column="17"/></name><operator pos:line="111" pos:column="17">++<pos:position pos:line="111" pos:column="19"/></operator></expr>;<pos:position pos:line="111" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="112" pos:column="9">nPrefixes<pos:position pos:line="112" pos:column="18"/></name><operator pos:line="112" pos:column="18">++<pos:position pos:line="112" pos:column="20"/></operator></expr>;<pos:position pos:line="112" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="113" pos:column="9">(<pos:position pos:line="113" pos:column="10"/></operator><name><name pos:line="113" pos:column="10">attId<pos:position pos:line="113" pos:column="15"/></name><operator pos:line="113" pos:column="15">-&gt;<pos:position pos:line="113" pos:column="20"/></operator><name pos:line="113" pos:column="17">name<pos:position pos:line="113" pos:column="21"/></name></name><operator pos:line="113" pos:column="21">)<pos:position pos:line="113" pos:column="22"/></operator><index pos:line="113" pos:column="22">[<expr><operator pos:line="113" pos:column="23">-<pos:position pos:line="113" pos:column="24"/></operator><literal type="number" pos:line="113" pos:column="24">1<pos:position pos:line="113" pos:column="25"/></literal></expr>]<pos:position pos:line="113" pos:column="26"/></index> <operator pos:line="113" pos:column="27">=<pos:position pos:line="113" pos:column="28"/></operator> <literal type="number" pos:line="113" pos:column="29">2<pos:position pos:line="113" pos:column="30"/></literal></expr>;<pos:position pos:line="113" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="114" pos:column="8"/></block></else></if>
    }<pos:position pos:line="115" pos:column="6"/></block></then>
    <else pos:line="116" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="117" pos:column="7">attIndex<pos:position pos:line="117" pos:column="15"/></name><operator pos:line="117" pos:column="15">++<pos:position pos:line="117" pos:column="17"/></operator></expr>;<pos:position pos:line="117" pos:column="18"/></expr_stmt></block></else></if>
  }<pos:position pos:line="118" pos:column="4"/></block></for>

  <comment type="block" pos:line="120" pos:column="3">/* set-up for XML_GetSpecifiedAttributeCount and XML_GetIdAttributeIndex */</comment>
  <expr_stmt><expr><name pos:line="121" pos:column="3">nSpecifiedAtts<pos:position pos:line="121" pos:column="17"/></name> <operator pos:line="121" pos:column="18">=<pos:position pos:line="121" pos:column="19"/></operator> <name pos:line="121" pos:column="20">attIndex<pos:position pos:line="121" pos:column="28"/></name></expr>;<pos:position pos:line="121" pos:column="29"/></expr_stmt>
  <if pos:line="122" pos:column="3">if <condition pos:line="122" pos:column="6">(<expr><name><name pos:line="122" pos:column="7">elementType<pos:position pos:line="122" pos:column="18"/></name><operator pos:line="122" pos:column="18">-&gt;<pos:position pos:line="122" pos:column="23"/></operator><name pos:line="122" pos:column="20">idAtt<pos:position pos:line="122" pos:column="25"/></name></name> <operator pos:line="122" pos:column="26">&amp;&amp;<pos:position pos:line="122" pos:column="36"/></operator> <operator pos:line="122" pos:column="29">(<pos:position pos:line="122" pos:column="30"/></operator><name><name pos:line="122" pos:column="30">elementType<pos:position pos:line="122" pos:column="41"/></name><operator pos:line="122" pos:column="41">-&gt;<pos:position pos:line="122" pos:column="46"/></operator><name pos:line="122" pos:column="43">idAtt<pos:position pos:line="122" pos:column="48"/></name><operator pos:line="122" pos:column="48">-&gt;<pos:position pos:line="122" pos:column="53"/></operator><name pos:line="122" pos:column="50">name<pos:position pos:line="122" pos:column="54"/></name></name><operator pos:line="122" pos:column="54">)<pos:position pos:line="122" pos:column="55"/></operator><index pos:line="122" pos:column="55">[<expr><operator pos:line="122" pos:column="56">-<pos:position pos:line="122" pos:column="57"/></operator><literal type="number" pos:line="122" pos:column="57">1<pos:position pos:line="122" pos:column="58"/></literal></expr>]<pos:position pos:line="122" pos:column="59"/></index></expr>)<pos:position pos:line="122" pos:column="60"/></condition><then pos:line="122" pos:column="60"> <block pos:line="122" pos:column="61">{
    <for pos:line="123" pos:column="5">for <control pos:line="123" pos:column="9">(<init><expr><name pos:line="123" pos:column="10">i<pos:position pos:line="123" pos:column="11"/></name> <operator pos:line="123" pos:column="12">=<pos:position pos:line="123" pos:column="13"/></operator> <literal type="number" pos:line="123" pos:column="14">0<pos:position pos:line="123" pos:column="15"/></literal></expr>;<pos:position pos:line="123" pos:column="16"/></init> <condition><expr><name pos:line="123" pos:column="17">i<pos:position pos:line="123" pos:column="18"/></name> <operator pos:line="123" pos:column="19">&lt;<pos:position pos:line="123" pos:column="23"/></operator> <name pos:line="123" pos:column="21">attIndex<pos:position pos:line="123" pos:column="29"/></name></expr>;<pos:position pos:line="123" pos:column="30"/></condition> <incr><expr><name pos:line="123" pos:column="31">i<pos:position pos:line="123" pos:column="32"/></name> <operator pos:line="123" pos:column="33">+=<pos:position pos:line="123" pos:column="35"/></operator> <literal type="number" pos:line="123" pos:column="36">2<pos:position pos:line="123" pos:column="37"/></literal></expr></incr>)<pos:position pos:line="123" pos:column="38"/></control>
      <block type="pseudo"><if pos:line="124" pos:column="7">if <condition pos:line="124" pos:column="10">(<expr><name><name pos:line="124" pos:column="11">appAtts<pos:position pos:line="124" pos:column="18"/></name><index pos:line="124" pos:column="18">[<expr><name pos:line="124" pos:column="19">i<pos:position pos:line="124" pos:column="20"/></name></expr>]<pos:position pos:line="124" pos:column="21"/></index></name> <operator pos:line="124" pos:column="22">==<pos:position pos:line="124" pos:column="24"/></operator> <name><name pos:line="124" pos:column="25">elementType<pos:position pos:line="124" pos:column="36"/></name><operator pos:line="124" pos:column="36">-&gt;<pos:position pos:line="124" pos:column="41"/></operator><name pos:line="124" pos:column="38">idAtt<pos:position pos:line="124" pos:column="43"/></name><operator pos:line="124" pos:column="43">-&gt;<pos:position pos:line="124" pos:column="48"/></operator><name pos:line="124" pos:column="45">name<pos:position pos:line="124" pos:column="49"/></name></name></expr>)<pos:position pos:line="124" pos:column="50"/></condition><then pos:line="124" pos:column="50"> <block pos:line="124" pos:column="51">{
        <expr_stmt><expr><name pos:line="125" pos:column="9">idAttIndex<pos:position pos:line="125" pos:column="19"/></name> <operator pos:line="125" pos:column="20">=<pos:position pos:line="125" pos:column="21"/></operator> <name pos:line="125" pos:column="22">i<pos:position pos:line="125" pos:column="23"/></name></expr>;<pos:position pos:line="125" pos:column="24"/></expr_stmt>
        <break pos:line="126" pos:column="9">break;<pos:position pos:line="126" pos:column="15"/></break>
      }<pos:position pos:line="127" pos:column="8"/></block></then></if></block></for>
  }<pos:position pos:line="128" pos:column="4"/></block></then>
  <else pos:line="129" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="130" pos:column="5">idAttIndex<pos:position pos:line="130" pos:column="15"/></name> <operator pos:line="130" pos:column="16">=<pos:position pos:line="130" pos:column="17"/></operator> <operator pos:line="130" pos:column="18">-<pos:position pos:line="130" pos:column="19"/></operator><literal type="number" pos:line="130" pos:column="19">1<pos:position pos:line="130" pos:column="20"/></literal></expr>;<pos:position pos:line="130" pos:column="21"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="132" pos:column="3">/* do attribute defaulting */</comment>
  <for pos:line="133" pos:column="3">for <control pos:line="133" pos:column="7">(<init><expr><name pos:line="133" pos:column="8">i<pos:position pos:line="133" pos:column="9"/></name> <operator pos:line="133" pos:column="10">=<pos:position pos:line="133" pos:column="11"/></operator> <literal type="number" pos:line="133" pos:column="12">0<pos:position pos:line="133" pos:column="13"/></literal></expr>;<pos:position pos:line="133" pos:column="14"/></init> <condition><expr><name pos:line="133" pos:column="15">i<pos:position pos:line="133" pos:column="16"/></name> <operator pos:line="133" pos:column="17">&lt;<pos:position pos:line="133" pos:column="21"/></operator> <name pos:line="133" pos:column="19">nDefaultAtts<pos:position pos:line="133" pos:column="31"/></name></expr>;<pos:position pos:line="133" pos:column="32"/></condition> <incr><expr><name pos:line="133" pos:column="33">i<pos:position pos:line="133" pos:column="34"/></name><operator pos:line="133" pos:column="34">++<pos:position pos:line="133" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="133" pos:column="37"/></control> <block pos:line="133" pos:column="38">{
    <decl_stmt><decl><type><specifier pos:line="134" pos:column="5">const<pos:position pos:line="134" pos:column="10"/></specifier> <name pos:line="134" pos:column="11">DEFAULT_ATTRIBUTE<pos:position pos:line="134" pos:column="28"/></name> <modifier pos:line="134" pos:column="29">*<pos:position pos:line="134" pos:column="30"/></modifier></type><name pos:line="134" pos:column="30">da<pos:position pos:line="134" pos:column="32"/></name> <init pos:line="134" pos:column="33">= <expr><name><name pos:line="134" pos:column="35">elementType<pos:position pos:line="134" pos:column="46"/></name><operator pos:line="134" pos:column="46">-&gt;<pos:position pos:line="134" pos:column="51"/></operator><name pos:line="134" pos:column="48">defaultAtts<pos:position pos:line="134" pos:column="59"/></name></name> <operator pos:line="134" pos:column="60">+<pos:position pos:line="134" pos:column="61"/></operator> <name pos:line="134" pos:column="62">i<pos:position pos:line="134" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="134" pos:column="64"/></decl_stmt>
    <if pos:line="135" pos:column="5">if <condition pos:line="135" pos:column="8">(<expr><operator pos:line="135" pos:column="9">!<pos:position pos:line="135" pos:column="10"/></operator><operator pos:line="135" pos:column="10">(<pos:position pos:line="135" pos:column="11"/></operator><name><name pos:line="135" pos:column="11">da<pos:position pos:line="135" pos:column="13"/></name><operator pos:line="135" pos:column="13">-&gt;<pos:position pos:line="135" pos:column="18"/></operator><name pos:line="135" pos:column="15">id<pos:position pos:line="135" pos:column="17"/></name><operator pos:line="135" pos:column="17">-&gt;<pos:position pos:line="135" pos:column="22"/></operator><name pos:line="135" pos:column="19">name<pos:position pos:line="135" pos:column="23"/></name></name><operator pos:line="135" pos:column="23">)<pos:position pos:line="135" pos:column="24"/></operator><index pos:line="135" pos:column="24">[<expr><operator pos:line="135" pos:column="25">-<pos:position pos:line="135" pos:column="26"/></operator><literal type="number" pos:line="135" pos:column="26">1<pos:position pos:line="135" pos:column="27"/></literal></expr>]<pos:position pos:line="135" pos:column="28"/></index> <operator pos:line="135" pos:column="29">&amp;&amp;<pos:position pos:line="135" pos:column="39"/></operator> <name><name pos:line="135" pos:column="32">da<pos:position pos:line="135" pos:column="34"/></name><operator pos:line="135" pos:column="34">-&gt;<pos:position pos:line="135" pos:column="39"/></operator><name pos:line="135" pos:column="36">value<pos:position pos:line="135" pos:column="41"/></name></name></expr>)<pos:position pos:line="135" pos:column="42"/></condition><then pos:line="135" pos:column="42"> <block pos:line="135" pos:column="43">{
      <if pos:line="136" pos:column="7">if <condition pos:line="136" pos:column="10">(<expr><name><name pos:line="136" pos:column="11">da<pos:position pos:line="136" pos:column="13"/></name><operator pos:line="136" pos:column="13">-&gt;<pos:position pos:line="136" pos:column="18"/></operator><name pos:line="136" pos:column="15">id<pos:position pos:line="136" pos:column="17"/></name><operator pos:line="136" pos:column="17">-&gt;<pos:position pos:line="136" pos:column="22"/></operator><name pos:line="136" pos:column="19">prefix<pos:position pos:line="136" pos:column="25"/></name></name></expr>)<pos:position pos:line="136" pos:column="26"/></condition><then pos:line="136" pos:column="26"> <block pos:line="136" pos:column="27">{
        <if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><name><name pos:line="137" pos:column="13">da<pos:position pos:line="137" pos:column="15"/></name><operator pos:line="137" pos:column="15">-&gt;<pos:position pos:line="137" pos:column="20"/></operator><name pos:line="137" pos:column="17">id<pos:position pos:line="137" pos:column="19"/></name><operator pos:line="137" pos:column="19">-&gt;<pos:position pos:line="137" pos:column="24"/></operator><name pos:line="137" pos:column="21">xmlns<pos:position pos:line="137" pos:column="26"/></name></name></expr>)<pos:position pos:line="137" pos:column="27"/></condition><then pos:line="137" pos:column="27"> <block pos:line="137" pos:column="28">{
          <decl_stmt><decl><type><name><name pos:line="138" pos:column="11">enum<pos:position pos:line="138" pos:column="15"/></name> <name pos:line="138" pos:column="16">XML_Error<pos:position pos:line="138" pos:column="25"/></name></name></type> <name pos:line="138" pos:column="26">result<pos:position pos:line="138" pos:column="32"/></name> <init pos:line="138" pos:column="33">= <expr><call><name pos:line="138" pos:column="35">addBinding<pos:position pos:line="138" pos:column="45"/></name><argument_list pos:line="138" pos:column="45">(<argument><expr><name pos:line="138" pos:column="46">parser<pos:position pos:line="138" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="138" pos:column="54">da<pos:position pos:line="138" pos:column="56"/></name><operator pos:line="138" pos:column="56">-&gt;<pos:position pos:line="138" pos:column="61"/></operator><name pos:line="138" pos:column="58">id<pos:position pos:line="138" pos:column="60"/></name><operator pos:line="138" pos:column="60">-&gt;<pos:position pos:line="138" pos:column="65"/></operator><name pos:line="138" pos:column="62">prefix<pos:position pos:line="138" pos:column="68"/></name></name></expr></argument>, <argument><expr><name><name pos:line="138" pos:column="70">da<pos:position pos:line="138" pos:column="72"/></name><operator pos:line="138" pos:column="72">-&gt;<pos:position pos:line="138" pos:column="77"/></operator><name pos:line="138" pos:column="74">id<pos:position pos:line="138" pos:column="76"/></name></name></expr></argument>,
                                             <argument><expr><name><name pos:line="139" pos:column="46">da<pos:position pos:line="139" pos:column="48"/></name><operator pos:line="139" pos:column="48">-&gt;<pos:position pos:line="139" pos:column="53"/></operator><name pos:line="139" pos:column="50">value<pos:position pos:line="139" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="57">bindingsPtr<pos:position pos:line="139" pos:column="68"/></name></expr></argument>)<pos:position pos:line="139" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="139" pos:column="70"/></decl_stmt>
          <if pos:line="140" pos:column="11">if <condition pos:line="140" pos:column="14">(<expr><name pos:line="140" pos:column="15">result<pos:position pos:line="140" pos:column="21"/></name></expr>)<pos:position pos:line="140" pos:column="22"/></condition><then pos:line="140" pos:column="22">
            <block type="pseudo"><return pos:line="141" pos:column="13">return <expr><name pos:line="141" pos:column="20">result<pos:position pos:line="141" pos:column="26"/></name></expr>;<pos:position pos:line="141" pos:column="27"/></return></block></then></if>
        }<pos:position pos:line="142" pos:column="10"/></block></then>
        <else pos:line="143" pos:column="9">else <block pos:line="143" pos:column="14">{
          <expr_stmt><expr><operator pos:line="144" pos:column="11">(<pos:position pos:line="144" pos:column="12"/></operator><name><name pos:line="144" pos:column="12">da<pos:position pos:line="144" pos:column="14"/></name><operator pos:line="144" pos:column="14">-&gt;<pos:position pos:line="144" pos:column="19"/></operator><name pos:line="144" pos:column="16">id<pos:position pos:line="144" pos:column="18"/></name><operator pos:line="144" pos:column="18">-&gt;<pos:position pos:line="144" pos:column="23"/></operator><name pos:line="144" pos:column="20">name<pos:position pos:line="144" pos:column="24"/></name></name><operator pos:line="144" pos:column="24">)<pos:position pos:line="144" pos:column="25"/></operator><index pos:line="144" pos:column="25">[<expr><operator pos:line="144" pos:column="26">-<pos:position pos:line="144" pos:column="27"/></operator><literal type="number" pos:line="144" pos:column="27">1<pos:position pos:line="144" pos:column="28"/></literal></expr>]<pos:position pos:line="144" pos:column="29"/></index> <operator pos:line="144" pos:column="30">=<pos:position pos:line="144" pos:column="31"/></operator> <literal type="number" pos:line="144" pos:column="32">2<pos:position pos:line="144" pos:column="33"/></literal></expr>;<pos:position pos:line="144" pos:column="34"/></expr_stmt>
          <expr_stmt><expr><name pos:line="145" pos:column="11">nPrefixes<pos:position pos:line="145" pos:column="20"/></name><operator pos:line="145" pos:column="20">++<pos:position pos:line="145" pos:column="22"/></operator></expr>;<pos:position pos:line="145" pos:column="23"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="146" pos:column="11">appAtts<pos:position pos:line="146" pos:column="18"/></name><index pos:line="146" pos:column="18">[<expr><name pos:line="146" pos:column="19">attIndex<pos:position pos:line="146" pos:column="27"/></name><operator pos:line="146" pos:column="27">++<pos:position pos:line="146" pos:column="29"/></operator></expr>]<pos:position pos:line="146" pos:column="30"/></index></name> <operator pos:line="146" pos:column="31">=<pos:position pos:line="146" pos:column="32"/></operator> <name><name pos:line="146" pos:column="33">da<pos:position pos:line="146" pos:column="35"/></name><operator pos:line="146" pos:column="35">-&gt;<pos:position pos:line="146" pos:column="40"/></operator><name pos:line="146" pos:column="37">id<pos:position pos:line="146" pos:column="39"/></name><operator pos:line="146" pos:column="39">-&gt;<pos:position pos:line="146" pos:column="44"/></operator><name pos:line="146" pos:column="41">name<pos:position pos:line="146" pos:column="45"/></name></name></expr>;<pos:position pos:line="146" pos:column="46"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="147" pos:column="11">appAtts<pos:position pos:line="147" pos:column="18"/></name><index pos:line="147" pos:column="18">[<expr><name pos:line="147" pos:column="19">attIndex<pos:position pos:line="147" pos:column="27"/></name><operator pos:line="147" pos:column="27">++<pos:position pos:line="147" pos:column="29"/></operator></expr>]<pos:position pos:line="147" pos:column="30"/></index></name> <operator pos:line="147" pos:column="31">=<pos:position pos:line="147" pos:column="32"/></operator> <name><name pos:line="147" pos:column="33">da<pos:position pos:line="147" pos:column="35"/></name><operator pos:line="147" pos:column="35">-&gt;<pos:position pos:line="147" pos:column="40"/></operator><name pos:line="147" pos:column="37">value<pos:position pos:line="147" pos:column="42"/></name></name></expr>;<pos:position pos:line="147" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="148" pos:column="10"/></block></else></if>
      }<pos:position pos:line="149" pos:column="8"/></block></then>
      <else pos:line="150" pos:column="7">else <block pos:line="150" pos:column="12">{
        <expr_stmt><expr><operator pos:line="151" pos:column="9">(<pos:position pos:line="151" pos:column="10"/></operator><name><name pos:line="151" pos:column="10">da<pos:position pos:line="151" pos:column="12"/></name><operator pos:line="151" pos:column="12">-&gt;<pos:position pos:line="151" pos:column="17"/></operator><name pos:line="151" pos:column="14">id<pos:position pos:line="151" pos:column="16"/></name><operator pos:line="151" pos:column="16">-&gt;<pos:position pos:line="151" pos:column="21"/></operator><name pos:line="151" pos:column="18">name<pos:position pos:line="151" pos:column="22"/></name></name><operator pos:line="151" pos:column="22">)<pos:position pos:line="151" pos:column="23"/></operator><index pos:line="151" pos:column="23">[<expr><operator pos:line="151" pos:column="24">-<pos:position pos:line="151" pos:column="25"/></operator><literal type="number" pos:line="151" pos:column="25">1<pos:position pos:line="151" pos:column="26"/></literal></expr>]<pos:position pos:line="151" pos:column="27"/></index> <operator pos:line="151" pos:column="28">=<pos:position pos:line="151" pos:column="29"/></operator> <literal type="number" pos:line="151" pos:column="30">1<pos:position pos:line="151" pos:column="31"/></literal></expr>;<pos:position pos:line="151" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="152" pos:column="9">appAtts<pos:position pos:line="152" pos:column="16"/></name><index pos:line="152" pos:column="16">[<expr><name pos:line="152" pos:column="17">attIndex<pos:position pos:line="152" pos:column="25"/></name><operator pos:line="152" pos:column="25">++<pos:position pos:line="152" pos:column="27"/></operator></expr>]<pos:position pos:line="152" pos:column="28"/></index></name> <operator pos:line="152" pos:column="29">=<pos:position pos:line="152" pos:column="30"/></operator> <name><name pos:line="152" pos:column="31">da<pos:position pos:line="152" pos:column="33"/></name><operator pos:line="152" pos:column="33">-&gt;<pos:position pos:line="152" pos:column="38"/></operator><name pos:line="152" pos:column="35">id<pos:position pos:line="152" pos:column="37"/></name><operator pos:line="152" pos:column="37">-&gt;<pos:position pos:line="152" pos:column="42"/></operator><name pos:line="152" pos:column="39">name<pos:position pos:line="152" pos:column="43"/></name></name></expr>;<pos:position pos:line="152" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="153" pos:column="9">appAtts<pos:position pos:line="153" pos:column="16"/></name><index pos:line="153" pos:column="16">[<expr><name pos:line="153" pos:column="17">attIndex<pos:position pos:line="153" pos:column="25"/></name><operator pos:line="153" pos:column="25">++<pos:position pos:line="153" pos:column="27"/></operator></expr>]<pos:position pos:line="153" pos:column="28"/></index></name> <operator pos:line="153" pos:column="29">=<pos:position pos:line="153" pos:column="30"/></operator> <name><name pos:line="153" pos:column="31">da<pos:position pos:line="153" pos:column="33"/></name><operator pos:line="153" pos:column="33">-&gt;<pos:position pos:line="153" pos:column="38"/></operator><name pos:line="153" pos:column="35">value<pos:position pos:line="153" pos:column="40"/></name></name></expr>;<pos:position pos:line="153" pos:column="41"/></expr_stmt>
      }<pos:position pos:line="154" pos:column="8"/></block></else></if>
    }<pos:position pos:line="155" pos:column="6"/></block></then></if>
  }<pos:position pos:line="156" pos:column="4"/></block></for>
  <expr_stmt><expr><name><name pos:line="157" pos:column="3">appAtts<pos:position pos:line="157" pos:column="10"/></name><index pos:line="157" pos:column="10">[<expr><name pos:line="157" pos:column="11">attIndex<pos:position pos:line="157" pos:column="19"/></name></expr>]<pos:position pos:line="157" pos:column="20"/></index></name> <operator pos:line="157" pos:column="21">=<pos:position pos:line="157" pos:column="22"/></operator> <literal type="number" pos:line="157" pos:column="23">0<pos:position pos:line="157" pos:column="24"/></literal></expr>;<pos:position pos:line="157" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="159" pos:column="3">/* expand prefixed attribute names, check for duplicates,
     and clear flags that say whether attributes were specified */</comment>
  <expr_stmt><expr><name pos:line="161" pos:column="3">i<pos:position pos:line="161" pos:column="4"/></name> <operator pos:line="161" pos:column="5">=<pos:position pos:line="161" pos:column="6"/></operator> <literal type="number" pos:line="161" pos:column="7">0<pos:position pos:line="161" pos:column="8"/></literal></expr>;<pos:position pos:line="161" pos:column="9"/></expr_stmt>
  <if pos:line="162" pos:column="3">if <condition pos:line="162" pos:column="6">(<expr><name pos:line="162" pos:column="7">nPrefixes<pos:position pos:line="162" pos:column="16"/></name></expr>)<pos:position pos:line="162" pos:column="17"/></condition><then pos:line="162" pos:column="17"> <block pos:line="162" pos:column="18">{
    <decl_stmt><decl><type><name pos:line="163" pos:column="5">int<pos:position pos:line="163" pos:column="8"/></name></type> <name pos:line="163" pos:column="9">j<pos:position pos:line="163" pos:column="10"/></name></decl>;<pos:position pos:line="163" pos:column="11"/></decl_stmt>  <comment type="block" pos:line="163" pos:column="13">/* hash table index */</comment>
    <decl_stmt><decl><type><name pos:line="164" pos:column="5">unsigned<pos:position pos:line="164" pos:column="13"/></name> <name pos:line="164" pos:column="14">long<pos:position pos:line="164" pos:column="18"/></name></type> <name pos:line="164" pos:column="19">version<pos:position pos:line="164" pos:column="26"/></name> <init pos:line="164" pos:column="27">= <expr><name pos:line="164" pos:column="29">nsAttsVersion<pos:position pos:line="164" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="164" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="165" pos:column="5">int<pos:position pos:line="165" pos:column="8"/></name></type> <name pos:line="165" pos:column="9">nsAttsSize<pos:position pos:line="165" pos:column="19"/></name> <init pos:line="165" pos:column="20">= <expr><operator pos:line="165" pos:column="22">(<pos:position pos:line="165" pos:column="23"/></operator><name pos:line="165" pos:column="23">int<pos:position pos:line="165" pos:column="26"/></name><operator pos:line="165" pos:column="26">)<pos:position pos:line="165" pos:column="27"/></operator><literal type="number" pos:line="165" pos:column="27">1<pos:position pos:line="165" pos:column="28"/></literal> <operator pos:line="165" pos:column="29">&lt;&lt;<pos:position pos:line="165" pos:column="37"/></operator> <name pos:line="165" pos:column="32">nsAttsPower<pos:position pos:line="165" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="165" pos:column="44"/></decl_stmt>
    <comment type="block" pos:line="166" pos:column="5">/* size of hash table must be at least 2 * (# of prefixed attributes) */</comment>
    <if pos:line="167" pos:column="5">if <condition pos:line="167" pos:column="8">(<expr><operator pos:line="167" pos:column="9">(<pos:position pos:line="167" pos:column="10"/></operator><name pos:line="167" pos:column="10">nPrefixes<pos:position pos:line="167" pos:column="19"/></name> <operator pos:line="167" pos:column="20">&lt;&lt;<pos:position pos:line="167" pos:column="28"/></operator> <literal type="number" pos:line="167" pos:column="23">1<pos:position pos:line="167" pos:column="24"/></literal><operator pos:line="167" pos:column="24">)<pos:position pos:line="167" pos:column="25"/></operator> <operator pos:line="167" pos:column="26">&gt;&gt;<pos:position pos:line="167" pos:column="31"/></operator> <name pos:line="167" pos:column="29">nsAttsPower<pos:position pos:line="167" pos:column="40"/></name></expr>)<pos:position pos:line="167" pos:column="41"/></condition><then pos:line="167" pos:column="41"> <block pos:line="167" pos:column="42">{  <comment type="block" pos:line="167" pos:column="45">/* true for nsAttsPower = 0 */</comment>
      <decl_stmt><decl><type><name pos:line="168" pos:column="7">NS_ATT<pos:position pos:line="168" pos:column="13"/></name> <modifier pos:line="168" pos:column="14">*<pos:position pos:line="168" pos:column="15"/></modifier></type><name pos:line="168" pos:column="15">temp<pos:position pos:line="168" pos:column="19"/></name></decl>;<pos:position pos:line="168" pos:column="20"/></decl_stmt>
      <comment type="block" pos:line="169" pos:column="7">/* hash table size must also be a power of 2 and &gt;= 8 */</comment>
      <while pos:line="170" pos:column="7">while <condition pos:line="170" pos:column="13">(<expr><name pos:line="170" pos:column="14">nPrefixes<pos:position pos:line="170" pos:column="23"/></name> <operator pos:line="170" pos:column="24">&gt;&gt;<pos:position pos:line="170" pos:column="29"/></operator> <name pos:line="170" pos:column="27">nsAttsPower<pos:position pos:line="170" pos:column="38"/></name><operator pos:line="170" pos:column="38">++<pos:position pos:line="170" pos:column="40"/></operator></expr>)<pos:position pos:line="170" pos:column="41"/></condition><block type="pseudo"><empty_stmt pos:line="170" pos:column="41">;<pos:position pos:line="170" pos:column="42"/></empty_stmt></block></while>
      <if pos:line="171" pos:column="7">if <condition pos:line="171" pos:column="10">(<expr><name pos:line="171" pos:column="11">nsAttsPower<pos:position pos:line="171" pos:column="22"/></name> <operator pos:line="171" pos:column="23">&lt;<pos:position pos:line="171" pos:column="27"/></operator> <literal type="number" pos:line="171" pos:column="25">3<pos:position pos:line="171" pos:column="26"/></literal></expr>)<pos:position pos:line="171" pos:column="27"/></condition><then pos:line="171" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name pos:line="172" pos:column="9">nsAttsPower<pos:position pos:line="172" pos:column="20"/></name> <operator pos:line="172" pos:column="21">=<pos:position pos:line="172" pos:column="22"/></operator> <literal type="number" pos:line="172" pos:column="23">3<pos:position pos:line="172" pos:column="24"/></literal></expr>;<pos:position pos:line="172" pos:column="25"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="173" pos:column="7">nsAttsSize<pos:position pos:line="173" pos:column="17"/></name> <operator pos:line="173" pos:column="18">=<pos:position pos:line="173" pos:column="19"/></operator> <operator pos:line="173" pos:column="20">(<pos:position pos:line="173" pos:column="21"/></operator><name pos:line="173" pos:column="21">int<pos:position pos:line="173" pos:column="24"/></name><operator pos:line="173" pos:column="24">)<pos:position pos:line="173" pos:column="25"/></operator><literal type="number" pos:line="173" pos:column="25">1<pos:position pos:line="173" pos:column="26"/></literal> <operator pos:line="173" pos:column="27">&lt;&lt;<pos:position pos:line="173" pos:column="35"/></operator> <name pos:line="173" pos:column="30">nsAttsPower<pos:position pos:line="173" pos:column="41"/></name></expr>;<pos:position pos:line="173" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name pos:line="174" pos:column="7">temp<pos:position pos:line="174" pos:column="11"/></name> <operator pos:line="174" pos:column="12">=<pos:position pos:line="174" pos:column="13"/></operator> <operator pos:line="174" pos:column="14">(<pos:position pos:line="174" pos:column="15"/></operator><name pos:line="174" pos:column="15">NS_ATT<pos:position pos:line="174" pos:column="21"/></name> <operator pos:line="174" pos:column="22">*<pos:position pos:line="174" pos:column="23"/></operator><operator pos:line="174" pos:column="23">)<pos:position pos:line="174" pos:column="24"/></operator><call><name pos:line="174" pos:column="24">REALLOC<pos:position pos:line="174" pos:column="31"/></name><argument_list pos:line="174" pos:column="31">(<argument><expr><name pos:line="174" pos:column="32">nsAtts<pos:position pos:line="174" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="40">nsAttsSize<pos:position pos:line="174" pos:column="50"/></name> <operator pos:line="174" pos:column="51">*<pos:position pos:line="174" pos:column="52"/></operator> <sizeof pos:line="174" pos:column="53">sizeof<argument_list pos:line="174" pos:column="59">(<argument><expr><name pos:line="174" pos:column="60">NS_ATT<pos:position pos:line="174" pos:column="66"/></name></expr></argument>)<pos:position pos:line="174" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="174" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="69"/></expr_stmt>
      <if pos:line="175" pos:column="7">if <condition pos:line="175" pos:column="10">(<expr><operator pos:line="175" pos:column="11">!<pos:position pos:line="175" pos:column="12"/></operator><name pos:line="175" pos:column="12">temp<pos:position pos:line="175" pos:column="16"/></name></expr>)<pos:position pos:line="175" pos:column="17"/></condition><then pos:line="175" pos:column="17">
        <block type="pseudo"><return pos:line="176" pos:column="9">return <expr><name pos:line="176" pos:column="16">XML_ERROR_NO_MEMORY<pos:position pos:line="176" pos:column="35"/></name></expr>;<pos:position pos:line="176" pos:column="36"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="177" pos:column="7">nsAtts<pos:position pos:line="177" pos:column="13"/></name> <operator pos:line="177" pos:column="14">=<pos:position pos:line="177" pos:column="15"/></operator> <name pos:line="177" pos:column="16">temp<pos:position pos:line="177" pos:column="20"/></name></expr>;<pos:position pos:line="177" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="178" pos:column="7">version<pos:position pos:line="178" pos:column="14"/></name> <operator pos:line="178" pos:column="15">=<pos:position pos:line="178" pos:column="16"/></operator> <literal type="number" pos:line="178" pos:column="17">0<pos:position pos:line="178" pos:column="18"/></literal></expr>;<pos:position pos:line="178" pos:column="19"/></expr_stmt>  <comment type="block" pos:line="178" pos:column="21">/* force re-initialization of nsAtts hash table */</comment>
    }<pos:position pos:line="179" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="180" pos:column="5">/* using a version flag saves us from initializing nsAtts every time */</comment>
    <if pos:line="181" pos:column="5">if <condition pos:line="181" pos:column="8">(<expr><operator pos:line="181" pos:column="9">!<pos:position pos:line="181" pos:column="10"/></operator><name pos:line="181" pos:column="10">version<pos:position pos:line="181" pos:column="17"/></name></expr>)<pos:position pos:line="181" pos:column="18"/></condition><then pos:line="181" pos:column="18"> <block pos:line="181" pos:column="19">{  <comment type="block" pos:line="181" pos:column="22">/* initialize version flags when version wraps around */</comment>
      <expr_stmt><expr><name pos:line="182" pos:column="7">version<pos:position pos:line="182" pos:column="14"/></name> <operator pos:line="182" pos:column="15">=<pos:position pos:line="182" pos:column="16"/></operator> <name pos:line="182" pos:column="17">INIT_ATTS_VERSION<pos:position pos:line="182" pos:column="34"/></name></expr>;<pos:position pos:line="182" pos:column="35"/></expr_stmt>
      <for pos:line="183" pos:column="7">for <control pos:line="183" pos:column="11">(<init><expr><name pos:line="183" pos:column="12">j<pos:position pos:line="183" pos:column="13"/></name> <operator pos:line="183" pos:column="14">=<pos:position pos:line="183" pos:column="15"/></operator> <name pos:line="183" pos:column="16">nsAttsSize<pos:position pos:line="183" pos:column="26"/></name></expr>;<pos:position pos:line="183" pos:column="27"/></init> <condition><expr><name pos:line="183" pos:column="28">j<pos:position pos:line="183" pos:column="29"/></name> <operator pos:line="183" pos:column="30">!=<pos:position pos:line="183" pos:column="32"/></operator> <literal type="number" pos:line="183" pos:column="33">0<pos:position pos:line="183" pos:column="34"/></literal></expr>;<pos:position pos:line="183" pos:column="35"/></condition> <incr/>)<pos:position pos:line="183" pos:column="37"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="184" pos:column="9">nsAtts<pos:position pos:line="184" pos:column="15"/></name><index pos:line="184" pos:column="15">[<expr><operator pos:line="184" pos:column="16">--<pos:position pos:line="184" pos:column="18"/></operator><name pos:line="184" pos:column="18">j<pos:position pos:line="184" pos:column="19"/></name></expr>]<pos:position pos:line="184" pos:column="20"/></index></name><operator pos:line="184" pos:column="20">.<pos:position pos:line="184" pos:column="21"/></operator><name pos:line="184" pos:column="21">version<pos:position pos:line="184" pos:column="28"/></name> <operator pos:line="184" pos:column="29">=<pos:position pos:line="184" pos:column="30"/></operator> <name pos:line="184" pos:column="31">version<pos:position pos:line="184" pos:column="38"/></name></expr>;<pos:position pos:line="184" pos:column="39"/></expr_stmt></block></for>
    }<pos:position pos:line="185" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="186" pos:column="5">nsAttsVersion<pos:position pos:line="186" pos:column="18"/></name> <operator pos:line="186" pos:column="19">=<pos:position pos:line="186" pos:column="20"/></operator> <operator pos:line="186" pos:column="21">--<pos:position pos:line="186" pos:column="23"/></operator><name pos:line="186" pos:column="23">version<pos:position pos:line="186" pos:column="30"/></name></expr>;<pos:position pos:line="186" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="188" pos:column="5">/* expand prefixed names and check for duplicates */</comment>
    <for pos:line="189" pos:column="5">for <control pos:line="189" pos:column="9">(<init pos:line="189" pos:column="10">;<pos:position pos:line="189" pos:column="11"/></init> <condition><expr><name pos:line="189" pos:column="12">i<pos:position pos:line="189" pos:column="13"/></name> <operator pos:line="189" pos:column="14">&lt;<pos:position pos:line="189" pos:column="18"/></operator> <name pos:line="189" pos:column="16">attIndex<pos:position pos:line="189" pos:column="24"/></name></expr>;<pos:position pos:line="189" pos:column="25"/></condition> <incr><expr><name pos:line="189" pos:column="26">i<pos:position pos:line="189" pos:column="27"/></name> <operator pos:line="189" pos:column="28">+=<pos:position pos:line="189" pos:column="30"/></operator> <literal type="number" pos:line="189" pos:column="31">2<pos:position pos:line="189" pos:column="32"/></literal></expr></incr>)<pos:position pos:line="189" pos:column="33"/></control> <block pos:line="189" pos:column="34">{
      <decl_stmt><decl><type><specifier pos:line="190" pos:column="7">const<pos:position pos:line="190" pos:column="12"/></specifier> <name pos:line="190" pos:column="13">XML_Char<pos:position pos:line="190" pos:column="21"/></name> <modifier pos:line="190" pos:column="22">*<pos:position pos:line="190" pos:column="23"/></modifier></type><name pos:line="190" pos:column="23">s<pos:position pos:line="190" pos:column="24"/></name> <init pos:line="190" pos:column="25">= <expr><name><name pos:line="190" pos:column="27">appAtts<pos:position pos:line="190" pos:column="34"/></name><index pos:line="190" pos:column="34">[<expr><name pos:line="190" pos:column="35">i<pos:position pos:line="190" pos:column="36"/></name></expr>]<pos:position pos:line="190" pos:column="37"/></index></name></expr></init></decl>;<pos:position pos:line="190" pos:column="38"/></decl_stmt>
      <if pos:line="191" pos:column="7">if <condition pos:line="191" pos:column="10">(<expr><name><name pos:line="191" pos:column="11">s<pos:position pos:line="191" pos:column="12"/></name><index pos:line="191" pos:column="12">[<expr><operator pos:line="191" pos:column="13">-<pos:position pos:line="191" pos:column="14"/></operator><literal type="number" pos:line="191" pos:column="14">1<pos:position pos:line="191" pos:column="15"/></literal></expr>]<pos:position pos:line="191" pos:column="16"/></index></name> <operator pos:line="191" pos:column="17">==<pos:position pos:line="191" pos:column="19"/></operator> <literal type="number" pos:line="191" pos:column="20">2<pos:position pos:line="191" pos:column="21"/></literal></expr>)<pos:position pos:line="191" pos:column="22"/></condition><then pos:line="191" pos:column="22"> <block pos:line="191" pos:column="23">{  <comment type="block" pos:line="191" pos:column="26">/* prefixed */</comment>
        <decl_stmt><decl><type><name pos:line="192" pos:column="9">ATTRIBUTE_ID<pos:position pos:line="192" pos:column="21"/></name> <modifier pos:line="192" pos:column="22">*<pos:position pos:line="192" pos:column="23"/></modifier></type><name pos:line="192" pos:column="23">id<pos:position pos:line="192" pos:column="25"/></name></decl>;<pos:position pos:line="192" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="193" pos:column="9">const<pos:position pos:line="193" pos:column="14"/></specifier> <name pos:line="193" pos:column="15">BINDING<pos:position pos:line="193" pos:column="22"/></name> <modifier pos:line="193" pos:column="23">*<pos:position pos:line="193" pos:column="24"/></modifier></type><name pos:line="193" pos:column="24">b<pos:position pos:line="193" pos:column="25"/></name></decl>;<pos:position pos:line="193" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="194" pos:column="9">unsigned<pos:position pos:line="194" pos:column="17"/></name> <name pos:line="194" pos:column="18">long<pos:position pos:line="194" pos:column="22"/></name></type> <name pos:line="194" pos:column="23">uriHash<pos:position pos:line="194" pos:column="30"/></name> <init pos:line="194" pos:column="31">= <expr><literal type="number" pos:line="194" pos:column="33">0<pos:position pos:line="194" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="194" pos:column="35"/></decl_stmt>
        <expr_stmt><expr><operator pos:line="195" pos:column="9">(<pos:position pos:line="195" pos:column="10"/></operator><operator pos:line="195" pos:column="10">(<pos:position pos:line="195" pos:column="11"/></operator><name pos:line="195" pos:column="11">XML_Char<pos:position pos:line="195" pos:column="19"/></name> <operator pos:line="195" pos:column="20">*<pos:position pos:line="195" pos:column="21"/></operator><operator pos:line="195" pos:column="21">)<pos:position pos:line="195" pos:column="22"/></operator><name pos:line="195" pos:column="22">s<pos:position pos:line="195" pos:column="23"/></name><operator pos:line="195" pos:column="23">)<pos:position pos:line="195" pos:column="24"/></operator><index pos:line="195" pos:column="24">[<expr><operator pos:line="195" pos:column="25">-<pos:position pos:line="195" pos:column="26"/></operator><literal type="number" pos:line="195" pos:column="26">1<pos:position pos:line="195" pos:column="27"/></literal></expr>]<pos:position pos:line="195" pos:column="28"/></index> <operator pos:line="195" pos:column="29">=<pos:position pos:line="195" pos:column="30"/></operator> <literal type="number" pos:line="195" pos:column="31">0<pos:position pos:line="195" pos:column="32"/></literal></expr>;<pos:position pos:line="195" pos:column="33"/></expr_stmt>  <comment type="block" pos:line="195" pos:column="35">/* clear flag */</comment>
        <expr_stmt><expr><name pos:line="196" pos:column="9">id<pos:position pos:line="196" pos:column="11"/></name> <operator pos:line="196" pos:column="12">=<pos:position pos:line="196" pos:column="13"/></operator> <operator pos:line="196" pos:column="14">(<pos:position pos:line="196" pos:column="15"/></operator><name pos:line="196" pos:column="15">ATTRIBUTE_ID<pos:position pos:line="196" pos:column="27"/></name> <operator pos:line="196" pos:column="28">*<pos:position pos:line="196" pos:column="29"/></operator><operator pos:line="196" pos:column="29">)<pos:position pos:line="196" pos:column="30"/></operator><call><name pos:line="196" pos:column="30">lookup<pos:position pos:line="196" pos:column="36"/></name><argument_list pos:line="196" pos:column="36">(<argument><expr><operator pos:line="196" pos:column="37">&amp;<pos:position pos:line="196" pos:column="42"/></operator><name><name pos:line="196" pos:column="38">dtd<pos:position pos:line="196" pos:column="41"/></name><operator pos:line="196" pos:column="41">-&gt;<pos:position pos:line="196" pos:column="46"/></operator><name pos:line="196" pos:column="43">attributeIds<pos:position pos:line="196" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="196" pos:column="57">s<pos:position pos:line="196" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="196" pos:column="60">0<pos:position pos:line="196" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><name pos:line="197" pos:column="9">b<pos:position pos:line="197" pos:column="10"/></name> <operator pos:line="197" pos:column="11">=<pos:position pos:line="197" pos:column="12"/></operator> <name><name pos:line="197" pos:column="13">id<pos:position pos:line="197" pos:column="15"/></name><operator pos:line="197" pos:column="15">-&gt;<pos:position pos:line="197" pos:column="20"/></operator><name pos:line="197" pos:column="17">prefix<pos:position pos:line="197" pos:column="23"/></name><operator pos:line="197" pos:column="23">-&gt;<pos:position pos:line="197" pos:column="28"/></operator><name pos:line="197" pos:column="25">binding<pos:position pos:line="197" pos:column="32"/></name></name></expr>;<pos:position pos:line="197" pos:column="33"/></expr_stmt>
        <if pos:line="198" pos:column="9">if <condition pos:line="198" pos:column="12">(<expr><operator pos:line="198" pos:column="13">!<pos:position pos:line="198" pos:column="14"/></operator><name pos:line="198" pos:column="14">b<pos:position pos:line="198" pos:column="15"/></name></expr>)<pos:position pos:line="198" pos:column="16"/></condition><then pos:line="198" pos:column="16">
          <block type="pseudo"><return pos:line="199" pos:column="11">return <expr><name pos:line="199" pos:column="18">XML_ERROR_UNBOUND_PREFIX<pos:position pos:line="199" pos:column="42"/></name></expr>;<pos:position pos:line="199" pos:column="43"/></return></block></then></if>

        <comment type="block" pos:line="201" pos:column="9">/* as we expand the name we also calculate its hash value */</comment>
        <for pos:line="202" pos:column="9">for <control pos:line="202" pos:column="13">(<init><expr><name pos:line="202" pos:column="14">j<pos:position pos:line="202" pos:column="15"/></name> <operator pos:line="202" pos:column="16">=<pos:position pos:line="202" pos:column="17"/></operator> <literal type="number" pos:line="202" pos:column="18">0<pos:position pos:line="202" pos:column="19"/></literal></expr>;<pos:position pos:line="202" pos:column="20"/></init> <condition><expr><name pos:line="202" pos:column="21">j<pos:position pos:line="202" pos:column="22"/></name> <operator pos:line="202" pos:column="23">&lt;<pos:position pos:line="202" pos:column="27"/></operator> <name><name pos:line="202" pos:column="25">b<pos:position pos:line="202" pos:column="26"/></name><operator pos:line="202" pos:column="26">-&gt;<pos:position pos:line="202" pos:column="31"/></operator><name pos:line="202" pos:column="28">uriLen<pos:position pos:line="202" pos:column="34"/></name></name></expr>;<pos:position pos:line="202" pos:column="35"/></condition> <incr><expr><name pos:line="202" pos:column="36">j<pos:position pos:line="202" pos:column="37"/></name><operator pos:line="202" pos:column="37">++<pos:position pos:line="202" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="202" pos:column="40"/></control> <block pos:line="202" pos:column="41">{
          <decl_stmt><decl><type><specifier pos:line="203" pos:column="11">const<pos:position pos:line="203" pos:column="16"/></specifier> <name pos:line="203" pos:column="17">XML_Char<pos:position pos:line="203" pos:column="25"/></name></type> <name pos:line="203" pos:column="26">c<pos:position pos:line="203" pos:column="27"/></name> <init pos:line="203" pos:column="28">= <expr><name><name pos:line="203" pos:column="30">b<pos:position pos:line="203" pos:column="31"/></name><operator pos:line="203" pos:column="31">-&gt;<pos:position pos:line="203" pos:column="36"/></operator><name pos:line="203" pos:column="33">uri<pos:position pos:line="203" pos:column="36"/></name><index pos:line="203" pos:column="36">[<expr><name pos:line="203" pos:column="37">j<pos:position pos:line="203" pos:column="38"/></name></expr>]<pos:position pos:line="203" pos:column="39"/></index></name></expr></init></decl>;<pos:position pos:line="203" pos:column="40"/></decl_stmt>
          <if pos:line="204" pos:column="11">if <condition pos:line="204" pos:column="14">(<expr><operator pos:line="204" pos:column="15">!<pos:position pos:line="204" pos:column="16"/></operator><call><name pos:line="204" pos:column="16">poolAppendChar<pos:position pos:line="204" pos:column="30"/></name><argument_list pos:line="204" pos:column="30">(<argument><expr><operator pos:line="204" pos:column="31">&amp;<pos:position pos:line="204" pos:column="36"/></operator><name pos:line="204" pos:column="32">tempPool<pos:position pos:line="204" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="42">c<pos:position pos:line="204" pos:column="43"/></name></expr></argument>)<pos:position pos:line="204" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="204" pos:column="45"/></condition><then pos:line="204" pos:column="45">
            <block type="pseudo"><return pos:line="205" pos:column="13">return <expr><name pos:line="205" pos:column="20">XML_ERROR_NO_MEMORY<pos:position pos:line="205" pos:column="39"/></name></expr>;<pos:position pos:line="205" pos:column="40"/></return></block></then></if>
          <expr_stmt><expr><name pos:line="206" pos:column="11">uriHash<pos:position pos:line="206" pos:column="18"/></name> <operator pos:line="206" pos:column="19">=<pos:position pos:line="206" pos:column="20"/></operator> <call><name pos:line="206" pos:column="21">CHAR_HASH<pos:position pos:line="206" pos:column="30"/></name><argument_list pos:line="206" pos:column="30">(<argument><expr><name pos:line="206" pos:column="31">uriHash<pos:position pos:line="206" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="40">c<pos:position pos:line="206" pos:column="41"/></name></expr></argument>)<pos:position pos:line="206" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="207" pos:column="10"/></block></for>
        <while pos:line="208" pos:column="9">while <condition pos:line="208" pos:column="15">(<expr><operator pos:line="208" pos:column="16">*<pos:position pos:line="208" pos:column="17"/></operator><name pos:line="208" pos:column="17">s<pos:position pos:line="208" pos:column="18"/></name><operator pos:line="208" pos:column="18">++<pos:position pos:line="208" pos:column="20"/></operator> <operator pos:line="208" pos:column="21">!=<pos:position pos:line="208" pos:column="23"/></operator> <call><name pos:line="208" pos:column="24">XML_T<pos:position pos:line="208" pos:column="29"/></name><argument_list pos:line="208" pos:column="29">(<argument><expr><literal type="char" pos:line="208" pos:column="30">':'<pos:position pos:line="208" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="208" pos:column="35"/></condition>
          <block type="pseudo"><empty_stmt pos:line="209" pos:column="11">;<pos:position pos:line="209" pos:column="12"/></empty_stmt></block></while>
        <do pos:line="210" pos:column="9">do <block pos:line="210" pos:column="12">{  <comment type="block" pos:line="210" pos:column="15">/* copies null terminator */</comment>
          <decl_stmt><decl><type><specifier pos:line="211" pos:column="11">const<pos:position pos:line="211" pos:column="16"/></specifier> <name pos:line="211" pos:column="17">XML_Char<pos:position pos:line="211" pos:column="25"/></name></type> <name pos:line="211" pos:column="26">c<pos:position pos:line="211" pos:column="27"/></name> <init pos:line="211" pos:column="28">= <expr><operator pos:line="211" pos:column="30">*<pos:position pos:line="211" pos:column="31"/></operator><name pos:line="211" pos:column="31">s<pos:position pos:line="211" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="211" pos:column="33"/></decl_stmt>
          <if pos:line="212" pos:column="11">if <condition pos:line="212" pos:column="14">(<expr><operator pos:line="212" pos:column="15">!<pos:position pos:line="212" pos:column="16"/></operator><call><name pos:line="212" pos:column="16">poolAppendChar<pos:position pos:line="212" pos:column="30"/></name><argument_list pos:line="212" pos:column="30">(<argument><expr><operator pos:line="212" pos:column="31">&amp;<pos:position pos:line="212" pos:column="36"/></operator><name pos:line="212" pos:column="32">tempPool<pos:position pos:line="212" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="212" pos:column="42">*<pos:position pos:line="212" pos:column="43"/></operator><name pos:line="212" pos:column="43">s<pos:position pos:line="212" pos:column="44"/></name></expr></argument>)<pos:position pos:line="212" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="212" pos:column="46"/></condition><then pos:line="212" pos:column="46">
            <block type="pseudo"><return pos:line="213" pos:column="13">return <expr><name pos:line="213" pos:column="20">XML_ERROR_NO_MEMORY<pos:position pos:line="213" pos:column="39"/></name></expr>;<pos:position pos:line="213" pos:column="40"/></return></block></then></if>
          <expr_stmt><expr><name pos:line="214" pos:column="11">uriHash<pos:position pos:line="214" pos:column="18"/></name> <operator pos:line="214" pos:column="19">=<pos:position pos:line="214" pos:column="20"/></operator> <call><name pos:line="214" pos:column="21">CHAR_HASH<pos:position pos:line="214" pos:column="30"/></name><argument_list pos:line="214" pos:column="30">(<argument><expr><name pos:line="214" pos:column="31">uriHash<pos:position pos:line="214" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="40">c<pos:position pos:line="214" pos:column="41"/></name></expr></argument>)<pos:position pos:line="214" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="215" pos:column="10"/></block> while <condition pos:line="215" pos:column="17">(<expr><operator pos:line="215" pos:column="18">*<pos:position pos:line="215" pos:column="19"/></operator><name pos:line="215" pos:column="19">s<pos:position pos:line="215" pos:column="20"/></name><operator pos:line="215" pos:column="20">++<pos:position pos:line="215" pos:column="22"/></operator></expr>)<pos:position pos:line="215" pos:column="23"/></condition>;<pos:position pos:line="215" pos:column="24"/></do>

        <block pos:line="217" pos:column="9">{ <comment type="block" pos:line="217" pos:column="11">/* Check hash table for duplicate of expanded name (uriName).
             Derived from code in lookup(HASH_TABLE *table, ...).
          */</comment>
          <decl_stmt><decl><type><name pos:line="220" pos:column="11">unsigned<pos:position pos:line="220" pos:column="19"/></name> <name pos:line="220" pos:column="20">char<pos:position pos:line="220" pos:column="24"/></name></type> <name pos:line="220" pos:column="25">step<pos:position pos:line="220" pos:column="29"/></name> <init pos:line="220" pos:column="30">= <expr><literal type="number" pos:line="220" pos:column="32">0<pos:position pos:line="220" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="220" pos:column="34"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="221" pos:column="11">unsigned<pos:position pos:line="221" pos:column="19"/></name> <name pos:line="221" pos:column="20">long<pos:position pos:line="221" pos:column="24"/></name></type> <name pos:line="221" pos:column="25">mask<pos:position pos:line="221" pos:column="29"/></name> <init pos:line="221" pos:column="30">= <expr><name pos:line="221" pos:column="32">nsAttsSize<pos:position pos:line="221" pos:column="42"/></name> <operator pos:line="221" pos:column="43">-<pos:position pos:line="221" pos:column="44"/></operator> <literal type="number" pos:line="221" pos:column="45">1<pos:position pos:line="221" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="221" pos:column="47"/></decl_stmt>
          <expr_stmt><expr><name pos:line="222" pos:column="11">j<pos:position pos:line="222" pos:column="12"/></name> <operator pos:line="222" pos:column="13">=<pos:position pos:line="222" pos:column="14"/></operator> <name pos:line="222" pos:column="15">uriHash<pos:position pos:line="222" pos:column="22"/></name> <operator pos:line="222" pos:column="23">&amp;<pos:position pos:line="222" pos:column="28"/></operator> <name pos:line="222" pos:column="25">mask<pos:position pos:line="222" pos:column="29"/></name></expr>;<pos:position pos:line="222" pos:column="30"/></expr_stmt>  <comment type="block" pos:line="222" pos:column="32">/* index into hash table */</comment>
          <while pos:line="223" pos:column="11">while <condition pos:line="223" pos:column="17">(<expr><name><name pos:line="223" pos:column="18">nsAtts<pos:position pos:line="223" pos:column="24"/></name><index pos:line="223" pos:column="24">[<expr><name pos:line="223" pos:column="25">j<pos:position pos:line="223" pos:column="26"/></name></expr>]<pos:position pos:line="223" pos:column="27"/></index></name><operator pos:line="223" pos:column="27">.<pos:position pos:line="223" pos:column="28"/></operator><name pos:line="223" pos:column="28">version<pos:position pos:line="223" pos:column="35"/></name> <operator pos:line="223" pos:column="36">==<pos:position pos:line="223" pos:column="38"/></operator> <name pos:line="223" pos:column="39">version<pos:position pos:line="223" pos:column="46"/></name></expr>)<pos:position pos:line="223" pos:column="47"/></condition> <block pos:line="223" pos:column="48">{
            <comment type="block" pos:line="224" pos:column="13">/* for speed we compare stored hash values first */</comment>
            <if pos:line="225" pos:column="13">if <condition pos:line="225" pos:column="16">(<expr><name pos:line="225" pos:column="17">uriHash<pos:position pos:line="225" pos:column="24"/></name> <operator pos:line="225" pos:column="25">==<pos:position pos:line="225" pos:column="27"/></operator> <name><name pos:line="225" pos:column="28">nsAtts<pos:position pos:line="225" pos:column="34"/></name><index pos:line="225" pos:column="34">[<expr><name pos:line="225" pos:column="35">j<pos:position pos:line="225" pos:column="36"/></name></expr>]<pos:position pos:line="225" pos:column="37"/></index></name><operator pos:line="225" pos:column="37">.<pos:position pos:line="225" pos:column="38"/></operator><name pos:line="225" pos:column="38">hash<pos:position pos:line="225" pos:column="42"/></name></expr>)<pos:position pos:line="225" pos:column="43"/></condition><then pos:line="225" pos:column="43"> <block pos:line="225" pos:column="44">{
              <decl_stmt><decl><type><specifier pos:line="226" pos:column="15">const<pos:position pos:line="226" pos:column="20"/></specifier> <name pos:line="226" pos:column="21">XML_Char<pos:position pos:line="226" pos:column="29"/></name> <modifier pos:line="226" pos:column="30">*<pos:position pos:line="226" pos:column="31"/></modifier></type><name pos:line="226" pos:column="31">s1<pos:position pos:line="226" pos:column="33"/></name> <init pos:line="226" pos:column="34">= <expr><call><name pos:line="226" pos:column="36">poolStart<pos:position pos:line="226" pos:column="45"/></name><argument_list pos:line="226" pos:column="45">(<argument><expr><operator pos:line="226" pos:column="46">&amp;<pos:position pos:line="226" pos:column="51"/></operator><name pos:line="226" pos:column="47">tempPool<pos:position pos:line="226" pos:column="55"/></name></expr></argument>)<pos:position pos:line="226" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="226" pos:column="57"/></decl_stmt>
              <decl_stmt><decl><type><specifier pos:line="227" pos:column="15">const<pos:position pos:line="227" pos:column="20"/></specifier> <name pos:line="227" pos:column="21">XML_Char<pos:position pos:line="227" pos:column="29"/></name> <modifier pos:line="227" pos:column="30">*<pos:position pos:line="227" pos:column="31"/></modifier></type><name pos:line="227" pos:column="31">s2<pos:position pos:line="227" pos:column="33"/></name> <init pos:line="227" pos:column="34">= <expr><name><name pos:line="227" pos:column="36">nsAtts<pos:position pos:line="227" pos:column="42"/></name><index pos:line="227" pos:column="42">[<expr><name pos:line="227" pos:column="43">j<pos:position pos:line="227" pos:column="44"/></name></expr>]<pos:position pos:line="227" pos:column="45"/></index></name><operator pos:line="227" pos:column="45">.<pos:position pos:line="227" pos:column="46"/></operator><name pos:line="227" pos:column="46">uriName<pos:position pos:line="227" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="227" pos:column="54"/></decl_stmt>
              <comment type="block" pos:line="228" pos:column="15">/* s1 is null terminated, but not s2 */</comment>
              <for pos:line="229" pos:column="15">for <control pos:line="229" pos:column="19">(<init pos:line="229" pos:column="20">;<pos:position pos:line="229" pos:column="21"/></init> <condition><expr><operator pos:line="229" pos:column="22">*<pos:position pos:line="229" pos:column="23"/></operator><name pos:line="229" pos:column="23">s1<pos:position pos:line="229" pos:column="25"/></name> <operator pos:line="229" pos:column="26">==<pos:position pos:line="229" pos:column="28"/></operator> <operator pos:line="229" pos:column="29">*<pos:position pos:line="229" pos:column="30"/></operator><name pos:line="229" pos:column="30">s2<pos:position pos:line="229" pos:column="32"/></name> <operator pos:line="229" pos:column="33">&amp;&amp;<pos:position pos:line="229" pos:column="43"/></operator> <operator pos:line="229" pos:column="36">*<pos:position pos:line="229" pos:column="37"/></operator><name pos:line="229" pos:column="37">s1<pos:position pos:line="229" pos:column="39"/></name> <operator pos:line="229" pos:column="40">!=<pos:position pos:line="229" pos:column="42"/></operator> <literal type="number" pos:line="229" pos:column="43">0<pos:position pos:line="229" pos:column="44"/></literal></expr>;<pos:position pos:line="229" pos:column="45"/></condition> <incr><expr><name pos:line="229" pos:column="46">s1<pos:position pos:line="229" pos:column="48"/></name><operator pos:line="229" pos:column="48">++<pos:position pos:line="229" pos:column="50"/></operator></expr><operator pos:line="229" pos:column="50">,<pos:position pos:line="229" pos:column="51"/></operator> <expr><name pos:line="229" pos:column="52">s2<pos:position pos:line="229" pos:column="54"/></name><operator pos:line="229" pos:column="54">++<pos:position pos:line="229" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="229" pos:column="57"/></control><block type="pseudo"><empty_stmt pos:line="229" pos:column="57">;<pos:position pos:line="229" pos:column="58"/></empty_stmt></block></for>
              <if pos:line="230" pos:column="15">if <condition pos:line="230" pos:column="18">(<expr><operator pos:line="230" pos:column="19">*<pos:position pos:line="230" pos:column="20"/></operator><name pos:line="230" pos:column="20">s1<pos:position pos:line="230" pos:column="22"/></name> <operator pos:line="230" pos:column="23">==<pos:position pos:line="230" pos:column="25"/></operator> <literal type="number" pos:line="230" pos:column="26">0<pos:position pos:line="230" pos:column="27"/></literal></expr>)<pos:position pos:line="230" pos:column="28"/></condition><then pos:line="230" pos:column="28">
                <block type="pseudo"><return pos:line="231" pos:column="17">return <expr><name pos:line="231" pos:column="24">XML_ERROR_DUPLICATE_ATTRIBUTE<pos:position pos:line="231" pos:column="53"/></name></expr>;<pos:position pos:line="231" pos:column="54"/></return></block></then></if>
            }<pos:position pos:line="232" pos:column="14"/></block></then></if>
            <if pos:line="233" pos:column="13">if <condition pos:line="233" pos:column="16">(<expr><operator pos:line="233" pos:column="17">!<pos:position pos:line="233" pos:column="18"/></operator><name pos:line="233" pos:column="18">step<pos:position pos:line="233" pos:column="22"/></name></expr>)<pos:position pos:line="233" pos:column="23"/></condition><then pos:line="233" pos:column="23">
              <block type="pseudo"><expr_stmt><expr><name pos:line="234" pos:column="15">step<pos:position pos:line="234" pos:column="19"/></name> <operator pos:line="234" pos:column="20">=<pos:position pos:line="234" pos:column="21"/></operator> <call><name pos:line="234" pos:column="22">PROBE_STEP<pos:position pos:line="234" pos:column="32"/></name><argument_list pos:line="234" pos:column="32">(<argument><expr><name pos:line="234" pos:column="33">uriHash<pos:position pos:line="234" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="42">mask<pos:position pos:line="234" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="48">nsAttsPower<pos:position pos:line="234" pos:column="59"/></name></expr></argument>)<pos:position pos:line="234" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="61"/></expr_stmt></block></then></if>
            <expr_stmt><expr><ternary><condition><expr><name pos:line="235" pos:column="13">j<pos:position pos:line="235" pos:column="14"/></name> <operator pos:line="235" pos:column="15">&lt;<pos:position pos:line="235" pos:column="19"/></operator> <name pos:line="235" pos:column="17">step<pos:position pos:line="235" pos:column="21"/></name></expr> ?<pos:position pos:line="235" pos:column="23"/></condition><then pos:line="235" pos:column="23"> <expr><operator pos:line="235" pos:column="24">(<pos:position pos:line="235" pos:column="25"/></operator> <name pos:line="235" pos:column="26">j<pos:position pos:line="235" pos:column="27"/></name> <operator pos:line="235" pos:column="28">+=<pos:position pos:line="235" pos:column="30"/></operator> <name pos:line="235" pos:column="31">nsAttsSize<pos:position pos:line="235" pos:column="41"/></name> <operator pos:line="235" pos:column="42">-<pos:position pos:line="235" pos:column="43"/></operator> <name pos:line="235" pos:column="44">step<pos:position pos:line="235" pos:column="48"/></name><operator pos:line="235" pos:column="48">)<pos:position pos:line="235" pos:column="49"/></operator></expr> <pos:position pos:line="235" pos:column="50"/></then><else pos:line="235" pos:column="50">: <expr><operator pos:line="235" pos:column="52">(<pos:position pos:line="235" pos:column="53"/></operator><name pos:line="235" pos:column="53">j<pos:position pos:line="235" pos:column="54"/></name> <operator pos:line="235" pos:column="55">-=<pos:position pos:line="235" pos:column="57"/></operator> <name pos:line="235" pos:column="58">step<pos:position pos:line="235" pos:column="62"/></name><operator pos:line="235" pos:column="62">)<pos:position pos:line="235" pos:column="63"/></operator></expr></else></ternary></expr>;<pos:position pos:line="235" pos:column="64"/></expr_stmt>
          }<pos:position pos:line="236" pos:column="12"/></block></while>
        }<pos:position pos:line="237" pos:column="10"/></block>

        <if pos:line="239" pos:column="9">if <condition pos:line="239" pos:column="12">(<expr><name pos:line="239" pos:column="13">ns_triplets<pos:position pos:line="239" pos:column="24"/></name></expr>)<pos:position pos:line="239" pos:column="25"/></condition><then pos:line="239" pos:column="25"> <block pos:line="239" pos:column="26">{  <comment type="block" pos:line="239" pos:column="29">/* append namespace separator and prefix */</comment>
          <expr_stmt><expr><name><name pos:line="240" pos:column="11">tempPool<pos:position pos:line="240" pos:column="19"/></name><operator pos:line="240" pos:column="19">.<pos:position pos:line="240" pos:column="20"/></operator><name pos:line="240" pos:column="20">ptr<pos:position pos:line="240" pos:column="23"/></name><index pos:line="240" pos:column="23">[<expr><operator pos:line="240" pos:column="24">-<pos:position pos:line="240" pos:column="25"/></operator><literal type="number" pos:line="240" pos:column="25">1<pos:position pos:line="240" pos:column="26"/></literal></expr>]<pos:position pos:line="240" pos:column="27"/></index></name> <operator pos:line="240" pos:column="28">=<pos:position pos:line="240" pos:column="29"/></operator> <name pos:line="240" pos:column="30">namespaceSeparator<pos:position pos:line="240" pos:column="48"/></name></expr>;<pos:position pos:line="240" pos:column="49"/></expr_stmt>
          <expr_stmt><expr><name pos:line="241" pos:column="11">s<pos:position pos:line="241" pos:column="12"/></name> <operator pos:line="241" pos:column="13">=<pos:position pos:line="241" pos:column="14"/></operator> <name><name pos:line="241" pos:column="15">b<pos:position pos:line="241" pos:column="16"/></name><operator pos:line="241" pos:column="16">-&gt;<pos:position pos:line="241" pos:column="21"/></operator><name pos:line="241" pos:column="18">prefix<pos:position pos:line="241" pos:column="24"/></name><operator pos:line="241" pos:column="24">-&gt;<pos:position pos:line="241" pos:column="29"/></operator><name pos:line="241" pos:column="26">name<pos:position pos:line="241" pos:column="30"/></name></name></expr>;<pos:position pos:line="241" pos:column="31"/></expr_stmt>
          <do pos:line="242" pos:column="11">do <block pos:line="242" pos:column="14">{
            <if pos:line="243" pos:column="13">if <condition pos:line="243" pos:column="16">(<expr><operator pos:line="243" pos:column="17">!<pos:position pos:line="243" pos:column="18"/></operator><call><name pos:line="243" pos:column="18">poolAppendChar<pos:position pos:line="243" pos:column="32"/></name><argument_list pos:line="243" pos:column="32">(<argument><expr><operator pos:line="243" pos:column="33">&amp;<pos:position pos:line="243" pos:column="38"/></operator><name pos:line="243" pos:column="34">tempPool<pos:position pos:line="243" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="243" pos:column="44">*<pos:position pos:line="243" pos:column="45"/></operator><name pos:line="243" pos:column="45">s<pos:position pos:line="243" pos:column="46"/></name></expr></argument>)<pos:position pos:line="243" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="243" pos:column="48"/></condition><then pos:line="243" pos:column="48">
              <block type="pseudo"><return pos:line="244" pos:column="15">return <expr><name pos:line="244" pos:column="22">XML_ERROR_NO_MEMORY<pos:position pos:line="244" pos:column="41"/></name></expr>;<pos:position pos:line="244" pos:column="42"/></return></block></then></if>
          }<pos:position pos:line="245" pos:column="12"/></block> while <condition pos:line="245" pos:column="19">(<expr><operator pos:line="245" pos:column="20">*<pos:position pos:line="245" pos:column="21"/></operator><name pos:line="245" pos:column="21">s<pos:position pos:line="245" pos:column="22"/></name><operator pos:line="245" pos:column="22">++<pos:position pos:line="245" pos:column="24"/></operator></expr>)<pos:position pos:line="245" pos:column="25"/></condition>;<pos:position pos:line="245" pos:column="26"/></do>
        }<pos:position pos:line="246" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="248" pos:column="9">/* store expanded name in attribute list */</comment>
        <expr_stmt><expr><name pos:line="249" pos:column="9">s<pos:position pos:line="249" pos:column="10"/></name> <operator pos:line="249" pos:column="11">=<pos:position pos:line="249" pos:column="12"/></operator> <call><name pos:line="249" pos:column="13">poolStart<pos:position pos:line="249" pos:column="22"/></name><argument_list pos:line="249" pos:column="22">(<argument><expr><operator pos:line="249" pos:column="23">&amp;<pos:position pos:line="249" pos:column="28"/></operator><name pos:line="249" pos:column="24">tempPool<pos:position pos:line="249" pos:column="32"/></name></expr></argument>)<pos:position pos:line="249" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="250" pos:column="9">poolFinish<pos:position pos:line="250" pos:column="19"/></name><argument_list pos:line="250" pos:column="19">(<argument><expr><operator pos:line="250" pos:column="20">&amp;<pos:position pos:line="250" pos:column="25"/></operator><name pos:line="250" pos:column="21">tempPool<pos:position pos:line="250" pos:column="29"/></name></expr></argument>)<pos:position pos:line="250" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="251" pos:column="9">appAtts<pos:position pos:line="251" pos:column="16"/></name><index pos:line="251" pos:column="16">[<expr><name pos:line="251" pos:column="17">i<pos:position pos:line="251" pos:column="18"/></name></expr>]<pos:position pos:line="251" pos:column="19"/></index></name> <operator pos:line="251" pos:column="20">=<pos:position pos:line="251" pos:column="21"/></operator> <name pos:line="251" pos:column="22">s<pos:position pos:line="251" pos:column="23"/></name></expr>;<pos:position pos:line="251" pos:column="24"/></expr_stmt>

        <comment type="block" pos:line="253" pos:column="9">/* fill empty slot with new version, uriName and hash value */</comment>
        <expr_stmt><expr><name><name pos:line="254" pos:column="9">nsAtts<pos:position pos:line="254" pos:column="15"/></name><index pos:line="254" pos:column="15">[<expr><name pos:line="254" pos:column="16">j<pos:position pos:line="254" pos:column="17"/></name></expr>]<pos:position pos:line="254" pos:column="18"/></index></name><operator pos:line="254" pos:column="18">.<pos:position pos:line="254" pos:column="19"/></operator><name pos:line="254" pos:column="19">version<pos:position pos:line="254" pos:column="26"/></name> <operator pos:line="254" pos:column="27">=<pos:position pos:line="254" pos:column="28"/></operator> <name pos:line="254" pos:column="29">version<pos:position pos:line="254" pos:column="36"/></name></expr>;<pos:position pos:line="254" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="255" pos:column="9">nsAtts<pos:position pos:line="255" pos:column="15"/></name><index pos:line="255" pos:column="15">[<expr><name pos:line="255" pos:column="16">j<pos:position pos:line="255" pos:column="17"/></name></expr>]<pos:position pos:line="255" pos:column="18"/></index></name><operator pos:line="255" pos:column="18">.<pos:position pos:line="255" pos:column="19"/></operator><name pos:line="255" pos:column="19">hash<pos:position pos:line="255" pos:column="23"/></name> <operator pos:line="255" pos:column="24">=<pos:position pos:line="255" pos:column="25"/></operator> <name pos:line="255" pos:column="26">uriHash<pos:position pos:line="255" pos:column="33"/></name></expr>;<pos:position pos:line="255" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="256" pos:column="9">nsAtts<pos:position pos:line="256" pos:column="15"/></name><index pos:line="256" pos:column="15">[<expr><name pos:line="256" pos:column="16">j<pos:position pos:line="256" pos:column="17"/></name></expr>]<pos:position pos:line="256" pos:column="18"/></index></name><operator pos:line="256" pos:column="18">.<pos:position pos:line="256" pos:column="19"/></operator><name pos:line="256" pos:column="19">uriName<pos:position pos:line="256" pos:column="26"/></name> <operator pos:line="256" pos:column="27">=<pos:position pos:line="256" pos:column="28"/></operator> <name pos:line="256" pos:column="29">s<pos:position pos:line="256" pos:column="30"/></name></expr>;<pos:position pos:line="256" pos:column="31"/></expr_stmt>

        <if pos:line="258" pos:column="9">if <condition pos:line="258" pos:column="12">(<expr><operator pos:line="258" pos:column="13">!<pos:position pos:line="258" pos:column="14"/></operator><operator pos:line="258" pos:column="14">--<pos:position pos:line="258" pos:column="16"/></operator><name pos:line="258" pos:column="16">nPrefixes<pos:position pos:line="258" pos:column="25"/></name></expr>)<pos:position pos:line="258" pos:column="26"/></condition><then pos:line="258" pos:column="26">
          <block type="pseudo"><break pos:line="259" pos:column="11">break;<pos:position pos:line="259" pos:column="17"/></break></block></then></if>
      }<pos:position pos:line="260" pos:column="8"/></block></then>
      <else pos:line="261" pos:column="7">else  <comment type="block" pos:line="261" pos:column="13">/* not prefixed */</comment>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="262" pos:column="9">(<pos:position pos:line="262" pos:column="10"/></operator><operator pos:line="262" pos:column="10">(<pos:position pos:line="262" pos:column="11"/></operator><name pos:line="262" pos:column="11">XML_Char<pos:position pos:line="262" pos:column="19"/></name> <operator pos:line="262" pos:column="20">*<pos:position pos:line="262" pos:column="21"/></operator><operator pos:line="262" pos:column="21">)<pos:position pos:line="262" pos:column="22"/></operator><name pos:line="262" pos:column="22">s<pos:position pos:line="262" pos:column="23"/></name><operator pos:line="262" pos:column="23">)<pos:position pos:line="262" pos:column="24"/></operator><index pos:line="262" pos:column="24">[<expr><operator pos:line="262" pos:column="25">-<pos:position pos:line="262" pos:column="26"/></operator><literal type="number" pos:line="262" pos:column="26">1<pos:position pos:line="262" pos:column="27"/></literal></expr>]<pos:position pos:line="262" pos:column="28"/></index> <operator pos:line="262" pos:column="29">=<pos:position pos:line="262" pos:column="30"/></operator> <literal type="number" pos:line="262" pos:column="31">0<pos:position pos:line="262" pos:column="32"/></literal></expr>;<pos:position pos:line="262" pos:column="33"/></expr_stmt></block></else></if>  <comment type="block" pos:line="262" pos:column="35">/* clear flag */</comment>
    }<pos:position pos:line="263" pos:column="6"/></block></for>
  }<pos:position pos:line="264" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="265" pos:column="3">/* clear flags for the remaining attributes */</comment>
  <for pos:line="266" pos:column="3">for <control pos:line="266" pos:column="7">(<init pos:line="266" pos:column="8">;<pos:position pos:line="266" pos:column="9"/></init> <condition><expr><name pos:line="266" pos:column="10">i<pos:position pos:line="266" pos:column="11"/></name> <operator pos:line="266" pos:column="12">&lt;<pos:position pos:line="266" pos:column="16"/></operator> <name pos:line="266" pos:column="14">attIndex<pos:position pos:line="266" pos:column="22"/></name></expr>;<pos:position pos:line="266" pos:column="23"/></condition> <incr><expr><name pos:line="266" pos:column="24">i<pos:position pos:line="266" pos:column="25"/></name> <operator pos:line="266" pos:column="26">+=<pos:position pos:line="266" pos:column="28"/></operator> <literal type="number" pos:line="266" pos:column="29">2<pos:position pos:line="266" pos:column="30"/></literal></expr></incr>)<pos:position pos:line="266" pos:column="31"/></control>
    <block type="pseudo"><expr_stmt><expr><operator pos:line="267" pos:column="5">(<pos:position pos:line="267" pos:column="6"/></operator><operator pos:line="267" pos:column="6">(<pos:position pos:line="267" pos:column="7"/></operator><name pos:line="267" pos:column="7">XML_Char<pos:position pos:line="267" pos:column="15"/></name> <operator pos:line="267" pos:column="16">*<pos:position pos:line="267" pos:column="17"/></operator><operator pos:line="267" pos:column="17">)<pos:position pos:line="267" pos:column="18"/></operator><operator pos:line="267" pos:column="18">(<pos:position pos:line="267" pos:column="19"/></operator><name><name pos:line="267" pos:column="19">appAtts<pos:position pos:line="267" pos:column="26"/></name><index pos:line="267" pos:column="26">[<expr><name pos:line="267" pos:column="27">i<pos:position pos:line="267" pos:column="28"/></name></expr>]<pos:position pos:line="267" pos:column="29"/></index></name><operator pos:line="267" pos:column="29">)<pos:position pos:line="267" pos:column="30"/></operator><operator pos:line="267" pos:column="30">)<pos:position pos:line="267" pos:column="31"/></operator><index pos:line="267" pos:column="31">[<expr><operator pos:line="267" pos:column="32">-<pos:position pos:line="267" pos:column="33"/></operator><literal type="number" pos:line="267" pos:column="33">1<pos:position pos:line="267" pos:column="34"/></literal></expr>]<pos:position pos:line="267" pos:column="35"/></index> <operator pos:line="267" pos:column="36">=<pos:position pos:line="267" pos:column="37"/></operator> <literal type="number" pos:line="267" pos:column="38">0<pos:position pos:line="267" pos:column="39"/></literal></expr>;<pos:position pos:line="267" pos:column="40"/></expr_stmt></block></for>
  <for pos:line="268" pos:column="3">for <control pos:line="268" pos:column="7">(<init><expr><name pos:line="268" pos:column="8">binding<pos:position pos:line="268" pos:column="15"/></name> <operator pos:line="268" pos:column="16">=<pos:position pos:line="268" pos:column="17"/></operator> <operator pos:line="268" pos:column="18">*<pos:position pos:line="268" pos:column="19"/></operator><name pos:line="268" pos:column="19">bindingsPtr<pos:position pos:line="268" pos:column="30"/></name></expr>;<pos:position pos:line="268" pos:column="31"/></init> <condition><expr><name pos:line="268" pos:column="32">binding<pos:position pos:line="268" pos:column="39"/></name></expr>;<pos:position pos:line="268" pos:column="40"/></condition> <incr><expr><name pos:line="268" pos:column="41">binding<pos:position pos:line="268" pos:column="48"/></name> <operator pos:line="268" pos:column="49">=<pos:position pos:line="268" pos:column="50"/></operator> <name><name pos:line="268" pos:column="51">binding<pos:position pos:line="268" pos:column="58"/></name><operator pos:line="268" pos:column="58">-&gt;<pos:position pos:line="268" pos:column="63"/></operator><name pos:line="268" pos:column="60">nextTagBinding<pos:position pos:line="268" pos:column="74"/></name></name></expr></incr>)<pos:position pos:line="268" pos:column="75"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="269" pos:column="5">binding<pos:position pos:line="269" pos:column="12"/></name><operator pos:line="269" pos:column="12">-&gt;<pos:position pos:line="269" pos:column="17"/></operator><name pos:line="269" pos:column="14">attId<pos:position pos:line="269" pos:column="19"/></name><operator pos:line="269" pos:column="19">-&gt;<pos:position pos:line="269" pos:column="24"/></operator><name pos:line="269" pos:column="21">name<pos:position pos:line="269" pos:column="25"/></name><index pos:line="269" pos:column="25">[<expr><operator pos:line="269" pos:column="26">-<pos:position pos:line="269" pos:column="27"/></operator><literal type="number" pos:line="269" pos:column="27">1<pos:position pos:line="269" pos:column="28"/></literal></expr>]<pos:position pos:line="269" pos:column="29"/></index></name> <operator pos:line="269" pos:column="30">=<pos:position pos:line="269" pos:column="31"/></operator> <literal type="number" pos:line="269" pos:column="32">0<pos:position pos:line="269" pos:column="33"/></literal></expr>;<pos:position pos:line="269" pos:column="34"/></expr_stmt></block></for>

  <if pos:line="271" pos:column="3">if <condition pos:line="271" pos:column="6">(<expr><operator pos:line="271" pos:column="7">!<pos:position pos:line="271" pos:column="8"/></operator><name pos:line="271" pos:column="8">ns<pos:position pos:line="271" pos:column="10"/></name></expr>)<pos:position pos:line="271" pos:column="11"/></condition><then pos:line="271" pos:column="11">
    <block type="pseudo"><return pos:line="272" pos:column="5">return <expr><name pos:line="272" pos:column="12">XML_ERROR_NONE<pos:position pos:line="272" pos:column="26"/></name></expr>;<pos:position pos:line="272" pos:column="27"/></return></block></then></if>

  <comment type="block" pos:line="274" pos:column="3">/* expand the element type name */</comment>
  <if pos:line="275" pos:column="3">if <condition pos:line="275" pos:column="6">(<expr><name><name pos:line="275" pos:column="7">elementType<pos:position pos:line="275" pos:column="18"/></name><operator pos:line="275" pos:column="18">-&gt;<pos:position pos:line="275" pos:column="23"/></operator><name pos:line="275" pos:column="20">prefix<pos:position pos:line="275" pos:column="26"/></name></name></expr>)<pos:position pos:line="275" pos:column="27"/></condition><then pos:line="275" pos:column="27"> <block pos:line="275" pos:column="28">{
    <expr_stmt><expr><name pos:line="276" pos:column="5">binding<pos:position pos:line="276" pos:column="12"/></name> <operator pos:line="276" pos:column="13">=<pos:position pos:line="276" pos:column="14"/></operator> <name><name pos:line="276" pos:column="15">elementType<pos:position pos:line="276" pos:column="26"/></name><operator pos:line="276" pos:column="26">-&gt;<pos:position pos:line="276" pos:column="31"/></operator><name pos:line="276" pos:column="28">prefix<pos:position pos:line="276" pos:column="34"/></name><operator pos:line="276" pos:column="34">-&gt;<pos:position pos:line="276" pos:column="39"/></operator><name pos:line="276" pos:column="36">binding<pos:position pos:line="276" pos:column="43"/></name></name></expr>;<pos:position pos:line="276" pos:column="44"/></expr_stmt>
    <if pos:line="277" pos:column="5">if <condition pos:line="277" pos:column="8">(<expr><operator pos:line="277" pos:column="9">!<pos:position pos:line="277" pos:column="10"/></operator><name pos:line="277" pos:column="10">binding<pos:position pos:line="277" pos:column="17"/></name></expr>)<pos:position pos:line="277" pos:column="18"/></condition><then pos:line="277" pos:column="18">
      <block type="pseudo"><return pos:line="278" pos:column="7">return <expr><name pos:line="278" pos:column="14">XML_ERROR_UNBOUND_PREFIX<pos:position pos:line="278" pos:column="38"/></name></expr>;<pos:position pos:line="278" pos:column="39"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="279" pos:column="5">localPart<pos:position pos:line="279" pos:column="14"/></name> <operator pos:line="279" pos:column="15">=<pos:position pos:line="279" pos:column="16"/></operator> <name><name pos:line="279" pos:column="17">tagNamePtr<pos:position pos:line="279" pos:column="27"/></name><operator pos:line="279" pos:column="27">-&gt;<pos:position pos:line="279" pos:column="32"/></operator><name pos:line="279" pos:column="29">str<pos:position pos:line="279" pos:column="32"/></name></name></expr>;<pos:position pos:line="279" pos:column="33"/></expr_stmt>
    <while pos:line="280" pos:column="5">while <condition pos:line="280" pos:column="11">(<expr><operator pos:line="280" pos:column="12">*<pos:position pos:line="280" pos:column="13"/></operator><name pos:line="280" pos:column="13">localPart<pos:position pos:line="280" pos:column="22"/></name><operator pos:line="280" pos:column="22">++<pos:position pos:line="280" pos:column="24"/></operator> <operator pos:line="280" pos:column="25">!=<pos:position pos:line="280" pos:column="27"/></operator> <call><name pos:line="280" pos:column="28">XML_T<pos:position pos:line="280" pos:column="33"/></name><argument_list pos:line="280" pos:column="33">(<argument><expr><literal type="char" pos:line="280" pos:column="34">':'<pos:position pos:line="280" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="280" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="280" pos:column="39"/></condition>
      <block type="pseudo"><empty_stmt pos:line="281" pos:column="7">;<pos:position pos:line="281" pos:column="8"/></empty_stmt></block></while>
  }<pos:position pos:line="282" pos:column="4"/></block></then>
  <elseif pos:line="283" pos:column="3">else <if pos:line="283" pos:column="8">if <condition pos:line="283" pos:column="11">(<expr><name><name pos:line="283" pos:column="12">dtd<pos:position pos:line="283" pos:column="15"/></name><operator pos:line="283" pos:column="15">-&gt;<pos:position pos:line="283" pos:column="20"/></operator><name pos:line="283" pos:column="17">defaultPrefix<pos:position pos:line="283" pos:column="30"/></name><operator pos:line="283" pos:column="30">.<pos:position pos:line="283" pos:column="31"/></operator><name pos:line="283" pos:column="31">binding<pos:position pos:line="283" pos:column="38"/></name></name></expr>)<pos:position pos:line="283" pos:column="39"/></condition><then pos:line="283" pos:column="39"> <block pos:line="283" pos:column="40">{
    <expr_stmt><expr><name pos:line="284" pos:column="5">binding<pos:position pos:line="284" pos:column="12"/></name> <operator pos:line="284" pos:column="13">=<pos:position pos:line="284" pos:column="14"/></operator> <name><name pos:line="284" pos:column="15">dtd<pos:position pos:line="284" pos:column="18"/></name><operator pos:line="284" pos:column="18">-&gt;<pos:position pos:line="284" pos:column="23"/></operator><name pos:line="284" pos:column="20">defaultPrefix<pos:position pos:line="284" pos:column="33"/></name><operator pos:line="284" pos:column="33">.<pos:position pos:line="284" pos:column="34"/></operator><name pos:line="284" pos:column="34">binding<pos:position pos:line="284" pos:column="41"/></name></name></expr>;<pos:position pos:line="284" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="285" pos:column="5">localPart<pos:position pos:line="285" pos:column="14"/></name> <operator pos:line="285" pos:column="15">=<pos:position pos:line="285" pos:column="16"/></operator> <name><name pos:line="285" pos:column="17">tagNamePtr<pos:position pos:line="285" pos:column="27"/></name><operator pos:line="285" pos:column="27">-&gt;<pos:position pos:line="285" pos:column="32"/></operator><name pos:line="285" pos:column="29">str<pos:position pos:line="285" pos:column="32"/></name></name></expr>;<pos:position pos:line="285" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="286" pos:column="4"/></block></then></if></elseif>
  <else pos:line="287" pos:column="3">else
    <block type="pseudo"><return pos:line="288" pos:column="5">return <expr><name pos:line="288" pos:column="12">XML_ERROR_NONE<pos:position pos:line="288" pos:column="26"/></name></expr>;<pos:position pos:line="288" pos:column="27"/></return></block></else></if>
  <expr_stmt><expr><name pos:line="289" pos:column="3">prefixLen<pos:position pos:line="289" pos:column="12"/></name> <operator pos:line="289" pos:column="13">=<pos:position pos:line="289" pos:column="14"/></operator> <literal type="number" pos:line="289" pos:column="15">0<pos:position pos:line="289" pos:column="16"/></literal></expr>;<pos:position pos:line="289" pos:column="17"/></expr_stmt>
  <if pos:line="290" pos:column="3">if <condition pos:line="290" pos:column="6">(<expr><name pos:line="290" pos:column="7">ns_triplets<pos:position pos:line="290" pos:column="18"/></name> <operator pos:line="290" pos:column="19">&amp;&amp;<pos:position pos:line="290" pos:column="29"/></operator> <name><name pos:line="290" pos:column="22">binding<pos:position pos:line="290" pos:column="29"/></name><operator pos:line="290" pos:column="29">-&gt;<pos:position pos:line="290" pos:column="34"/></operator><name pos:line="290" pos:column="31">prefix<pos:position pos:line="290" pos:column="37"/></name><operator pos:line="290" pos:column="37">-&gt;<pos:position pos:line="290" pos:column="42"/></operator><name pos:line="290" pos:column="39">name<pos:position pos:line="290" pos:column="43"/></name></name></expr>)<pos:position pos:line="290" pos:column="44"/></condition><then pos:line="290" pos:column="44"> <block pos:line="290" pos:column="45">{
    <for pos:line="291" pos:column="5">for <control pos:line="291" pos:column="9">(<init pos:line="291" pos:column="10">;<pos:position pos:line="291" pos:column="11"/></init> <condition><expr><name><name pos:line="291" pos:column="12">binding<pos:position pos:line="291" pos:column="19"/></name><operator pos:line="291" pos:column="19">-&gt;<pos:position pos:line="291" pos:column="24"/></operator><name pos:line="291" pos:column="21">prefix<pos:position pos:line="291" pos:column="27"/></name><operator pos:line="291" pos:column="27">-&gt;<pos:position pos:line="291" pos:column="32"/></operator><name pos:line="291" pos:column="29">name<pos:position pos:line="291" pos:column="33"/></name><index pos:line="291" pos:column="33">[<expr><name pos:line="291" pos:column="34">prefixLen<pos:position pos:line="291" pos:column="43"/></name><operator pos:line="291" pos:column="43">++<pos:position pos:line="291" pos:column="45"/></operator></expr>]<pos:position pos:line="291" pos:column="46"/></index></name></expr>;<pos:position pos:line="291" pos:column="47"/></condition><incr/>)<pos:position pos:line="291" pos:column="48"/></control>
      <block type="pseudo"><empty_stmt pos:line="292" pos:column="7">;<pos:position pos:line="292" pos:column="8"/></empty_stmt></block></for>
  }<pos:position pos:line="293" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="294" pos:column="3">tagNamePtr<pos:position pos:line="294" pos:column="13"/></name><operator pos:line="294" pos:column="13">-&gt;<pos:position pos:line="294" pos:column="18"/></operator><name pos:line="294" pos:column="15">localPart<pos:position pos:line="294" pos:column="24"/></name></name> <operator pos:line="294" pos:column="25">=<pos:position pos:line="294" pos:column="26"/></operator> <name pos:line="294" pos:column="27">localPart<pos:position pos:line="294" pos:column="36"/></name></expr>;<pos:position pos:line="294" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="295" pos:column="3">tagNamePtr<pos:position pos:line="295" pos:column="13"/></name><operator pos:line="295" pos:column="13">-&gt;<pos:position pos:line="295" pos:column="18"/></operator><name pos:line="295" pos:column="15">uriLen<pos:position pos:line="295" pos:column="21"/></name></name> <operator pos:line="295" pos:column="22">=<pos:position pos:line="295" pos:column="23"/></operator> <name><name pos:line="295" pos:column="24">binding<pos:position pos:line="295" pos:column="31"/></name><operator pos:line="295" pos:column="31">-&gt;<pos:position pos:line="295" pos:column="36"/></operator><name pos:line="295" pos:column="33">uriLen<pos:position pos:line="295" pos:column="39"/></name></name></expr>;<pos:position pos:line="295" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="296" pos:column="3">tagNamePtr<pos:position pos:line="296" pos:column="13"/></name><operator pos:line="296" pos:column="13">-&gt;<pos:position pos:line="296" pos:column="18"/></operator><name pos:line="296" pos:column="15">prefix<pos:position pos:line="296" pos:column="21"/></name></name> <operator pos:line="296" pos:column="22">=<pos:position pos:line="296" pos:column="23"/></operator> <name><name pos:line="296" pos:column="24">binding<pos:position pos:line="296" pos:column="31"/></name><operator pos:line="296" pos:column="31">-&gt;<pos:position pos:line="296" pos:column="36"/></operator><name pos:line="296" pos:column="33">prefix<pos:position pos:line="296" pos:column="39"/></name><operator pos:line="296" pos:column="39">-&gt;<pos:position pos:line="296" pos:column="44"/></operator><name pos:line="296" pos:column="41">name<pos:position pos:line="296" pos:column="45"/></name></name></expr>;<pos:position pos:line="296" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="297" pos:column="3">tagNamePtr<pos:position pos:line="297" pos:column="13"/></name><operator pos:line="297" pos:column="13">-&gt;<pos:position pos:line="297" pos:column="18"/></operator><name pos:line="297" pos:column="15">prefixLen<pos:position pos:line="297" pos:column="24"/></name></name> <operator pos:line="297" pos:column="25">=<pos:position pos:line="297" pos:column="26"/></operator> <name pos:line="297" pos:column="27">prefixLen<pos:position pos:line="297" pos:column="36"/></name></expr>;<pos:position pos:line="297" pos:column="37"/></expr_stmt>
  <for pos:line="298" pos:column="3">for <control pos:line="298" pos:column="7">(<init><expr><name pos:line="298" pos:column="8">i<pos:position pos:line="298" pos:column="9"/></name> <operator pos:line="298" pos:column="10">=<pos:position pos:line="298" pos:column="11"/></operator> <literal type="number" pos:line="298" pos:column="12">0<pos:position pos:line="298" pos:column="13"/></literal></expr>;<pos:position pos:line="298" pos:column="14"/></init> <condition><expr><name><name pos:line="298" pos:column="15">localPart<pos:position pos:line="298" pos:column="24"/></name><index pos:line="298" pos:column="24">[<expr><name pos:line="298" pos:column="25">i<pos:position pos:line="298" pos:column="26"/></name><operator pos:line="298" pos:column="26">++<pos:position pos:line="298" pos:column="28"/></operator></expr>]<pos:position pos:line="298" pos:column="29"/></index></name></expr>;<pos:position pos:line="298" pos:column="30"/></condition><incr/>)<pos:position pos:line="298" pos:column="31"/></control>
    <block type="pseudo"><empty_stmt pos:line="299" pos:column="5">;<pos:position pos:line="299" pos:column="6"/></empty_stmt></block></for>
  <expr_stmt><expr><name pos:line="300" pos:column="3">n<pos:position pos:line="300" pos:column="4"/></name> <operator pos:line="300" pos:column="5">=<pos:position pos:line="300" pos:column="6"/></operator> <name pos:line="300" pos:column="7">i<pos:position pos:line="300" pos:column="8"/></name> <operator pos:line="300" pos:column="9">+<pos:position pos:line="300" pos:column="10"/></operator> <name><name pos:line="300" pos:column="11">binding<pos:position pos:line="300" pos:column="18"/></name><operator pos:line="300" pos:column="18">-&gt;<pos:position pos:line="300" pos:column="23"/></operator><name pos:line="300" pos:column="20">uriLen<pos:position pos:line="300" pos:column="26"/></name></name> <operator pos:line="300" pos:column="27">+<pos:position pos:line="300" pos:column="28"/></operator> <name pos:line="300" pos:column="29">prefixLen<pos:position pos:line="300" pos:column="38"/></name></expr>;<pos:position pos:line="300" pos:column="39"/></expr_stmt>
  <if pos:line="301" pos:column="3">if <condition pos:line="301" pos:column="6">(<expr><name pos:line="301" pos:column="7">n<pos:position pos:line="301" pos:column="8"/></name> <operator pos:line="301" pos:column="9">&gt;<pos:position pos:line="301" pos:column="13"/></operator> <name><name pos:line="301" pos:column="11">binding<pos:position pos:line="301" pos:column="18"/></name><operator pos:line="301" pos:column="18">-&gt;<pos:position pos:line="301" pos:column="23"/></operator><name pos:line="301" pos:column="20">uriAlloc<pos:position pos:line="301" pos:column="28"/></name></name></expr>)<pos:position pos:line="301" pos:column="29"/></condition><then pos:line="301" pos:column="29"> <block pos:line="301" pos:column="30">{
    <decl_stmt><decl><type><name pos:line="302" pos:column="5">TAG<pos:position pos:line="302" pos:column="8"/></name> <modifier pos:line="302" pos:column="9">*<pos:position pos:line="302" pos:column="10"/></modifier></type><name pos:line="302" pos:column="10">p<pos:position pos:line="302" pos:column="11"/></name></decl>;<pos:position pos:line="302" pos:column="12"/></decl_stmt>
    <expr_stmt><expr><name pos:line="303" pos:column="5">uri<pos:position pos:line="303" pos:column="8"/></name> <operator pos:line="303" pos:column="9">=<pos:position pos:line="303" pos:column="10"/></operator> <operator pos:line="303" pos:column="11">(<pos:position pos:line="303" pos:column="12"/></operator><name pos:line="303" pos:column="12">XML_Char<pos:position pos:line="303" pos:column="20"/></name> <operator pos:line="303" pos:column="21">*<pos:position pos:line="303" pos:column="22"/></operator><operator pos:line="303" pos:column="22">)<pos:position pos:line="303" pos:column="23"/></operator><call><name pos:line="303" pos:column="23">MALLOC<pos:position pos:line="303" pos:column="29"/></name><argument_list pos:line="303" pos:column="29">(<argument><expr><operator pos:line="303" pos:column="30">(<pos:position pos:line="303" pos:column="31"/></operator><name pos:line="303" pos:column="31">n<pos:position pos:line="303" pos:column="32"/></name> <operator pos:line="303" pos:column="33">+<pos:position pos:line="303" pos:column="34"/></operator> <name pos:line="303" pos:column="35">EXPAND_SPARE<pos:position pos:line="303" pos:column="47"/></name><operator pos:line="303" pos:column="47">)<pos:position pos:line="303" pos:column="48"/></operator> <operator pos:line="303" pos:column="49">*<pos:position pos:line="303" pos:column="50"/></operator> <sizeof pos:line="303" pos:column="51">sizeof<argument_list pos:line="303" pos:column="57">(<argument><expr><name pos:line="303" pos:column="58">XML_Char<pos:position pos:line="303" pos:column="66"/></name></expr></argument>)<pos:position pos:line="303" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="303" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="69"/></expr_stmt>
    <if pos:line="304" pos:column="5">if <condition pos:line="304" pos:column="8">(<expr><operator pos:line="304" pos:column="9">!<pos:position pos:line="304" pos:column="10"/></operator><name pos:line="304" pos:column="10">uri<pos:position pos:line="304" pos:column="13"/></name></expr>)<pos:position pos:line="304" pos:column="14"/></condition><then pos:line="304" pos:column="14">
      <block type="pseudo"><return pos:line="305" pos:column="7">return <expr><name pos:line="305" pos:column="14">XML_ERROR_NO_MEMORY<pos:position pos:line="305" pos:column="33"/></name></expr>;<pos:position pos:line="305" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="306" pos:column="5">binding<pos:position pos:line="306" pos:column="12"/></name><operator pos:line="306" pos:column="12">-&gt;<pos:position pos:line="306" pos:column="17"/></operator><name pos:line="306" pos:column="14">uriAlloc<pos:position pos:line="306" pos:column="22"/></name></name> <operator pos:line="306" pos:column="23">=<pos:position pos:line="306" pos:column="24"/></operator> <name pos:line="306" pos:column="25">n<pos:position pos:line="306" pos:column="26"/></name> <operator pos:line="306" pos:column="27">+<pos:position pos:line="306" pos:column="28"/></operator> <name pos:line="306" pos:column="29">EXPAND_SPARE<pos:position pos:line="306" pos:column="41"/></name></expr>;<pos:position pos:line="306" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="307" pos:column="5">memcpy<pos:position pos:line="307" pos:column="11"/></name><argument_list pos:line="307" pos:column="11">(<argument><expr><name pos:line="307" pos:column="12">uri<pos:position pos:line="307" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="307" pos:column="17">binding<pos:position pos:line="307" pos:column="24"/></name><operator pos:line="307" pos:column="24">-&gt;<pos:position pos:line="307" pos:column="29"/></operator><name pos:line="307" pos:column="26">uri<pos:position pos:line="307" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="307" pos:column="31">binding<pos:position pos:line="307" pos:column="38"/></name><operator pos:line="307" pos:column="38">-&gt;<pos:position pos:line="307" pos:column="43"/></operator><name pos:line="307" pos:column="40">uriLen<pos:position pos:line="307" pos:column="46"/></name></name> <operator pos:line="307" pos:column="47">*<pos:position pos:line="307" pos:column="48"/></operator> <sizeof pos:line="307" pos:column="49">sizeof<argument_list pos:line="307" pos:column="55">(<argument><expr><name pos:line="307" pos:column="56">XML_Char<pos:position pos:line="307" pos:column="64"/></name></expr></argument>)<pos:position pos:line="307" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="307" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="67"/></expr_stmt>
    <for pos:line="308" pos:column="5">for <control pos:line="308" pos:column="9">(<init><expr><name pos:line="308" pos:column="10">p<pos:position pos:line="308" pos:column="11"/></name> <operator pos:line="308" pos:column="12">=<pos:position pos:line="308" pos:column="13"/></operator> <name pos:line="308" pos:column="14">tagStack<pos:position pos:line="308" pos:column="22"/></name></expr>;<pos:position pos:line="308" pos:column="23"/></init> <condition><expr><name pos:line="308" pos:column="24">p<pos:position pos:line="308" pos:column="25"/></name></expr>;<pos:position pos:line="308" pos:column="26"/></condition> <incr><expr><name pos:line="308" pos:column="27">p<pos:position pos:line="308" pos:column="28"/></name> <operator pos:line="308" pos:column="29">=<pos:position pos:line="308" pos:column="30"/></operator> <name><name pos:line="308" pos:column="31">p<pos:position pos:line="308" pos:column="32"/></name><operator pos:line="308" pos:column="32">-&gt;<pos:position pos:line="308" pos:column="37"/></operator><name pos:line="308" pos:column="34">parent<pos:position pos:line="308" pos:column="40"/></name></name></expr></incr>)<pos:position pos:line="308" pos:column="41"/></control>
      <block type="pseudo"><if pos:line="309" pos:column="7">if <condition pos:line="309" pos:column="10">(<expr><name><name pos:line="309" pos:column="11">p<pos:position pos:line="309" pos:column="12"/></name><operator pos:line="309" pos:column="12">-&gt;<pos:position pos:line="309" pos:column="17"/></operator><name pos:line="309" pos:column="14">name<pos:position pos:line="309" pos:column="18"/></name><operator pos:line="309" pos:column="18">.<pos:position pos:line="309" pos:column="19"/></operator><name pos:line="309" pos:column="19">str<pos:position pos:line="309" pos:column="22"/></name></name> <operator pos:line="309" pos:column="23">==<pos:position pos:line="309" pos:column="25"/></operator> <name><name pos:line="309" pos:column="26">binding<pos:position pos:line="309" pos:column="33"/></name><operator pos:line="309" pos:column="33">-&gt;<pos:position pos:line="309" pos:column="38"/></operator><name pos:line="309" pos:column="35">uri<pos:position pos:line="309" pos:column="38"/></name></name></expr>)<pos:position pos:line="309" pos:column="39"/></condition><then pos:line="309" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="310" pos:column="9">p<pos:position pos:line="310" pos:column="10"/></name><operator pos:line="310" pos:column="10">-&gt;<pos:position pos:line="310" pos:column="15"/></operator><name pos:line="310" pos:column="12">name<pos:position pos:line="310" pos:column="16"/></name><operator pos:line="310" pos:column="16">.<pos:position pos:line="310" pos:column="17"/></operator><name pos:line="310" pos:column="17">str<pos:position pos:line="310" pos:column="20"/></name></name> <operator pos:line="310" pos:column="21">=<pos:position pos:line="310" pos:column="22"/></operator> <name pos:line="310" pos:column="23">uri<pos:position pos:line="310" pos:column="26"/></name></expr>;<pos:position pos:line="310" pos:column="27"/></expr_stmt></block></then></if></block></for>
    <expr_stmt><expr><call><name pos:line="311" pos:column="5">FREE<pos:position pos:line="311" pos:column="9"/></name><argument_list pos:line="311" pos:column="9">(<argument><expr><name><name pos:line="311" pos:column="10">binding<pos:position pos:line="311" pos:column="17"/></name><operator pos:line="311" pos:column="17">-&gt;<pos:position pos:line="311" pos:column="22"/></operator><name pos:line="311" pos:column="19">uri<pos:position pos:line="311" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="311" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="312" pos:column="5">binding<pos:position pos:line="312" pos:column="12"/></name><operator pos:line="312" pos:column="12">-&gt;<pos:position pos:line="312" pos:column="17"/></operator><name pos:line="312" pos:column="14">uri<pos:position pos:line="312" pos:column="17"/></name></name> <operator pos:line="312" pos:column="18">=<pos:position pos:line="312" pos:column="19"/></operator> <name pos:line="312" pos:column="20">uri<pos:position pos:line="312" pos:column="23"/></name></expr>;<pos:position pos:line="312" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="313" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="314" pos:column="3">uri<pos:position pos:line="314" pos:column="6"/></name> <operator pos:line="314" pos:column="7">=<pos:position pos:line="314" pos:column="8"/></operator> <name><name pos:line="314" pos:column="9">binding<pos:position pos:line="314" pos:column="16"/></name><operator pos:line="314" pos:column="16">-&gt;<pos:position pos:line="314" pos:column="21"/></operator><name pos:line="314" pos:column="18">uri<pos:position pos:line="314" pos:column="21"/></name></name> <operator pos:line="314" pos:column="22">+<pos:position pos:line="314" pos:column="23"/></operator> <name><name pos:line="314" pos:column="24">binding<pos:position pos:line="314" pos:column="31"/></name><operator pos:line="314" pos:column="31">-&gt;<pos:position pos:line="314" pos:column="36"/></operator><name pos:line="314" pos:column="33">uriLen<pos:position pos:line="314" pos:column="39"/></name></name></expr>;<pos:position pos:line="314" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="315" pos:column="3">memcpy<pos:position pos:line="315" pos:column="9"/></name><argument_list pos:line="315" pos:column="9">(<argument><expr><name pos:line="315" pos:column="10">uri<pos:position pos:line="315" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="315" pos:column="15">localPart<pos:position pos:line="315" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="315" pos:column="26">i<pos:position pos:line="315" pos:column="27"/></name> <operator pos:line="315" pos:column="28">*<pos:position pos:line="315" pos:column="29"/></operator> <sizeof pos:line="315" pos:column="30">sizeof<argument_list pos:line="315" pos:column="36">(<argument><expr><name pos:line="315" pos:column="37">XML_Char<pos:position pos:line="315" pos:column="45"/></name></expr></argument>)<pos:position pos:line="315" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="315" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="48"/></expr_stmt>
  <if pos:line="316" pos:column="3">if <condition pos:line="316" pos:column="6">(<expr><name pos:line="316" pos:column="7">prefixLen<pos:position pos:line="316" pos:column="16"/></name></expr>)<pos:position pos:line="316" pos:column="17"/></condition><then pos:line="316" pos:column="17"> <block pos:line="316" pos:column="18">{
    <expr_stmt><expr><name pos:line="317" pos:column="5">uri<pos:position pos:line="317" pos:column="8"/></name> <operator pos:line="317" pos:column="9">=<pos:position pos:line="317" pos:column="10"/></operator> <name pos:line="317" pos:column="11">uri<pos:position pos:line="317" pos:column="14"/></name> <operator pos:line="317" pos:column="15">+<pos:position pos:line="317" pos:column="16"/></operator> <operator pos:line="317" pos:column="17">(<pos:position pos:line="317" pos:column="18"/></operator><name pos:line="317" pos:column="18">i<pos:position pos:line="317" pos:column="19"/></name> <operator pos:line="317" pos:column="20">-<pos:position pos:line="317" pos:column="21"/></operator> <literal type="number" pos:line="317" pos:column="22">1<pos:position pos:line="317" pos:column="23"/></literal><operator pos:line="317" pos:column="23">)<pos:position pos:line="317" pos:column="24"/></operator></expr>;<pos:position pos:line="317" pos:column="25"/></expr_stmt>
    <if pos:line="318" pos:column="5">if <condition pos:line="318" pos:column="8">(<expr><name pos:line="318" pos:column="9">namespaceSeparator<pos:position pos:line="318" pos:column="27"/></name></expr>)<pos:position pos:line="318" pos:column="28"/></condition><then pos:line="318" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="319" pos:column="7">*<pos:position pos:line="319" pos:column="8"/></operator><name pos:line="319" pos:column="8">uri<pos:position pos:line="319" pos:column="11"/></name> <operator pos:line="319" pos:column="12">=<pos:position pos:line="319" pos:column="13"/></operator> <name pos:line="319" pos:column="14">namespaceSeparator<pos:position pos:line="319" pos:column="32"/></name></expr>;<pos:position pos:line="319" pos:column="33"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="320" pos:column="5">memcpy<pos:position pos:line="320" pos:column="11"/></name><argument_list pos:line="320" pos:column="11">(<argument><expr><name pos:line="320" pos:column="12">uri<pos:position pos:line="320" pos:column="15"/></name> <operator pos:line="320" pos:column="16">+<pos:position pos:line="320" pos:column="17"/></operator> <literal type="number" pos:line="320" pos:column="18">1<pos:position pos:line="320" pos:column="19"/></literal></expr></argument>, <argument><expr><name><name pos:line="320" pos:column="21">binding<pos:position pos:line="320" pos:column="28"/></name><operator pos:line="320" pos:column="28">-&gt;<pos:position pos:line="320" pos:column="33"/></operator><name pos:line="320" pos:column="30">prefix<pos:position pos:line="320" pos:column="36"/></name><operator pos:line="320" pos:column="36">-&gt;<pos:position pos:line="320" pos:column="41"/></operator><name pos:line="320" pos:column="38">name<pos:position pos:line="320" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="320" pos:column="44">prefixLen<pos:position pos:line="320" pos:column="53"/></name> <operator pos:line="320" pos:column="54">*<pos:position pos:line="320" pos:column="55"/></operator> <sizeof pos:line="320" pos:column="56">sizeof<argument_list pos:line="320" pos:column="62">(<argument><expr><name pos:line="320" pos:column="63">XML_Char<pos:position pos:line="320" pos:column="71"/></name></expr></argument>)<pos:position pos:line="320" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="320" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="74"/></expr_stmt>
  }<pos:position pos:line="321" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="322" pos:column="3">tagNamePtr<pos:position pos:line="322" pos:column="13"/></name><operator pos:line="322" pos:column="13">-&gt;<pos:position pos:line="322" pos:column="18"/></operator><name pos:line="322" pos:column="15">str<pos:position pos:line="322" pos:column="18"/></name></name> <operator pos:line="322" pos:column="19">=<pos:position pos:line="322" pos:column="20"/></operator> <name><name pos:line="322" pos:column="21">binding<pos:position pos:line="322" pos:column="28"/></name><operator pos:line="322" pos:column="28">-&gt;<pos:position pos:line="322" pos:column="33"/></operator><name pos:line="322" pos:column="30">uri<pos:position pos:line="322" pos:column="33"/></name></name></expr>;<pos:position pos:line="322" pos:column="34"/></expr_stmt>
  <return pos:line="323" pos:column="3">return <expr><name pos:line="323" pos:column="10">XML_ERROR_NONE<pos:position pos:line="323" pos:column="24"/></name></expr>;<pos:position pos:line="323" pos:column="25"/></return>
}<pos:position pos:line="324" pos:column="2"/></block></function></unit>

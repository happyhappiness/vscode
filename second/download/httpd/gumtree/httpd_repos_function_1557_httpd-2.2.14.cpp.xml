<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1557_httpd-2.2.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">proxy_match_domainname<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">dirconn_entry<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">This<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">request_rec<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">r<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">host<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><call><name pos:line="3" pos:column="24">proxy_get_host_of_request<pos:position pos:line="3" pos:column="49"/></name><argument_list pos:line="3" pos:column="49">(<argument><expr><name pos:line="3" pos:column="50">r<pos:position pos:line="3" pos:column="51"/></name></expr></argument>)<pos:position pos:line="3" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">d_len<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><call><name pos:line="4" pos:column="17">strlen<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><name><name pos:line="4" pos:column="24">This<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">-&gt;<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="30">name<pos:position pos:line="4" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="37">h_len<pos:position pos:line="4" pos:column="42"/></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">host<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">NULL<pos:position pos:line="6" pos:column="21"/></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22"> <block pos:line="6" pos:column="23">{      <comment type="block" pos:line="6" pos:column="30">/* some error was logged already */</comment>
        <return pos:line="7" pos:column="9">return <expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="10" pos:column="5">h_len<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">strlen<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">host<pos:position pos:line="10" pos:column="24"/></name></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* @@@ do this within the setup? */</comment>
    <comment type="block" pos:line="13" pos:column="5">/* Ignore trailing dots in domain comparison: */</comment>
    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">d_len<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">&gt;<pos:position pos:line="14" pos:column="22"/></operator> <literal type="number" pos:line="14" pos:column="20">0<pos:position pos:line="14" pos:column="21"/></literal> <operator pos:line="14" pos:column="22">&amp;&amp;<pos:position pos:line="14" pos:column="32"/></operator> <name><name pos:line="14" pos:column="25">This<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">name<pos:position pos:line="14" pos:column="35"/></name><index pos:line="14" pos:column="35">[<expr><name pos:line="14" pos:column="36">d_len<pos:position pos:line="14" pos:column="41"/></name> <operator pos:line="14" pos:column="42">-<pos:position pos:line="14" pos:column="43"/></operator> <literal type="number" pos:line="14" pos:column="44">1<pos:position pos:line="14" pos:column="45"/></literal></expr>]<pos:position pos:line="14" pos:column="46"/></index></name> <operator pos:line="14" pos:column="47">==<pos:position pos:line="14" pos:column="49"/></operator> <literal type="char" pos:line="14" pos:column="50">'.'<pos:position pos:line="14" pos:column="53"/></literal></expr>)<pos:position pos:line="14" pos:column="54"/></condition> <block pos:line="14" pos:column="55">{
        <expr_stmt><expr><operator pos:line="15" pos:column="9">--<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">d_len<pos:position pos:line="15" pos:column="16"/></name></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></while>
    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><name pos:line="17" pos:column="12">h_len<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">&gt;<pos:position pos:line="17" pos:column="22"/></operator> <literal type="number" pos:line="17" pos:column="20">0<pos:position pos:line="17" pos:column="21"/></literal> <operator pos:line="17" pos:column="22">&amp;&amp;<pos:position pos:line="17" pos:column="32"/></operator> <name><name pos:line="17" pos:column="25">host<pos:position pos:line="17" pos:column="29"/></name><index pos:line="17" pos:column="29">[<expr><name pos:line="17" pos:column="30">h_len<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">-<pos:position pos:line="17" pos:column="37"/></operator> <literal type="number" pos:line="17" pos:column="38">1<pos:position pos:line="17" pos:column="39"/></literal></expr>]<pos:position pos:line="17" pos:column="40"/></index></name> <operator pos:line="17" pos:column="41">==<pos:position pos:line="17" pos:column="43"/></operator> <literal type="char" pos:line="17" pos:column="44">'.'<pos:position pos:line="17" pos:column="47"/></literal></expr>)<pos:position pos:line="17" pos:column="48"/></condition> <block pos:line="17" pos:column="49">{
        <expr_stmt><expr><operator pos:line="18" pos:column="9">--<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">h_len<pos:position pos:line="18" pos:column="16"/></name></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></while>
    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">h_len<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">&gt;<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="20">d_len<pos:position pos:line="20" pos:column="25"/></name>
        <operator pos:line="21" pos:column="9">&amp;&amp;<pos:position pos:line="21" pos:column="19"/></operator> <call><name pos:line="21" pos:column="12">strncasecmp<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><operator pos:line="21" pos:column="24">&amp;<pos:position pos:line="21" pos:column="29"/></operator><name><name pos:line="21" pos:column="25">host<pos:position pos:line="21" pos:column="29"/></name><index pos:line="21" pos:column="29">[<expr><name pos:line="21" pos:column="30">h_len<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">-<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="38">d_len<pos:position pos:line="21" pos:column="43"/></name></expr>]<pos:position pos:line="21" pos:column="44"/></index></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="46">This<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">name<pos:position pos:line="21" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="58">d_len<pos:position pos:line="21" pos:column="63"/></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call> <operator pos:line="21" pos:column="65">==<pos:position pos:line="21" pos:column="67"/></operator> <literal type="number" pos:line="21" pos:column="68">0<pos:position pos:line="21" pos:column="69"/></literal></expr>;<pos:position pos:line="21" pos:column="70"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1701_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">xlate_out_filter<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">ap_filter_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">f<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">apr_bucket_brigade<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">bb<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">charset_req_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">reqinfo<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><call><name pos:line="3" pos:column="30">ap_get_module_config<pos:position pos:line="3" pos:column="50"/></name><argument_list pos:line="3" pos:column="50">(<argument><expr><name><name pos:line="3" pos:column="51">f<pos:position pos:line="3" pos:column="52"/></name><operator pos:line="3" pos:column="52">-&gt;<pos:position pos:line="3" pos:column="57"/></operator><name pos:line="3" pos:column="54">r<pos:position pos:line="3" pos:column="55"/></name><operator pos:line="3" pos:column="55">-&gt;<pos:position pos:line="3" pos:column="60"/></operator><name pos:line="3" pos:column="57">request_config<pos:position pos:line="3" pos:column="71"/></name></name></expr></argument>,
                                                  <argument><expr><operator pos:line="4" pos:column="51">&amp;<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="52">charset_lite_module<pos:position pos:line="4" pos:column="71"/></name></expr></argument>)<pos:position pos:line="4" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="73"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">charset_dir_t<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">dc<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><call><name pos:line="5" pos:column="25">ap_get_module_config<pos:position pos:line="5" pos:column="45"/></name><argument_list pos:line="5" pos:column="45">(<argument><expr><name><name pos:line="5" pos:column="46">f<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">-&gt;<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="49">r<pos:position pos:line="5" pos:column="50"/></name><operator pos:line="5" pos:column="50">-&gt;<pos:position pos:line="5" pos:column="55"/></operator><name pos:line="5" pos:column="52">per_dir_config<pos:position pos:line="5" pos:column="66"/></name></name></expr></argument>,
                                             <argument><expr><operator pos:line="6" pos:column="46">&amp;<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="47">charset_lite_module<pos:position pos:line="6" pos:column="66"/></name></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">charset_filter_ctx_t<pos:position pos:line="7" pos:column="25"/></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">ctx<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><name><name pos:line="7" pos:column="33">f<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">ctx<pos:position pos:line="7" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_bucket<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">dptr<pos:position pos:line="8" pos:column="21"/></name></decl>, <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="24">consumed_bucket<pos:position pos:line="8" pos:column="39"/></name></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">cur_str<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">cur_len<pos:position pos:line="10" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="25">cur_avail<pos:position pos:line="10" pos:column="34"/></name></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">tmp<pos:position pos:line="11" pos:column="13"/></name><index pos:line="11" pos:column="13">[<expr><name pos:line="11" pos:column="14">OUTPUT_XLATE_BUF_SIZE<pos:position pos:line="11" pos:column="35"/></name></expr>]<pos:position pos:line="11" pos:column="36"/></index></name></decl>;<pos:position pos:line="11" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_size_t<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">space_avail<pos:position pos:line="12" pos:column="27"/></name></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">done<pos:position pos:line="13" pos:column="13"/></name></decl>;<pos:position pos:line="13" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_status_t<pos:position pos:line="14" pos:column="17"/></name></type> <name pos:line="14" pos:column="18">rv<pos:position pos:line="14" pos:column="20"/></name> <init pos:line="14" pos:column="21">= <expr><name pos:line="14" pos:column="23">APR_SUCCESS<pos:position pos:line="14" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">ctx<pos:position pos:line="16" pos:column="13"/></name></expr>)<pos:position pos:line="16" pos:column="14"/></condition><then pos:line="16" pos:column="14"> <block pos:line="16" pos:column="15">{ 
        <comment type="block" pos:line="17" pos:column="9">/* this is SetOutputFilter path; grab the preallocated context,
         * if any; note that if we decided not to do anything in an earlier
         * handler, we won't even have a reqinfo
         */</comment>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">reqinfo<pos:position pos:line="21" pos:column="20"/></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21"> <block pos:line="21" pos:column="22">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">ctx<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name><name pos:line="22" pos:column="19">f<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">ctx<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <name><name pos:line="22" pos:column="28">reqinfo<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">-&gt;<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="37">output_ctx<pos:position pos:line="22" pos:column="47"/></name></name></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="23" pos:column="13">reqinfo<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">output_ctx<pos:position pos:line="23" pos:column="32"/></name></name> <operator pos:line="23" pos:column="33">=<pos:position pos:line="23" pos:column="34"/></operator> <name pos:line="23" pos:column="35">NULL<pos:position pos:line="23" pos:column="39"/></name></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt> <comment type="block" pos:line="23" pos:column="41">/* prevent SNAFU if user coded us twice
                                         * in the filter chain; we can't have two
                                         * instances using the same context
                                         */</comment>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">ctx<pos:position pos:line="28" pos:column="17"/></name></expr>)<pos:position pos:line="28" pos:column="18"/></condition><then pos:line="28" pos:column="18"> <block pos:line="28" pos:column="19">{                   <comment type="block" pos:line="28" pos:column="39">/* no idea how to translate; don't do anything */</comment>
            <expr_stmt><expr><name pos:line="29" pos:column="13">ctx<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <name><name pos:line="29" pos:column="19">f<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">ctx<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <call><name pos:line="29" pos:column="28">apr_pcalloc<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">(<argument><expr><name><name pos:line="29" pos:column="40">f<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">-&gt;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="43">r<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">-&gt;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="46">pool<pos:position pos:line="29" pos:column="50"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="52">sizeof<argument_list pos:line="29" pos:column="58">(<argument><expr><name pos:line="29" pos:column="59">charset_filter_ctx_t<pos:position pos:line="29" pos:column="79"/></name></expr></argument>)<pos:position pos:line="29" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="82"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">ctx<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">dc<pos:position pos:line="30" pos:column="20"/></name></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">dc<pos:position pos:line="30" pos:column="25"/></name></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">ctx<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">noop<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <literal type="number" pos:line="31" pos:column="25">1<pos:position pos:line="31" pos:column="26"/></literal></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name><name pos:line="35" pos:column="9">dc<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="13">debug<pos:position pos:line="35" pos:column="18"/></name></name> <operator pos:line="35" pos:column="19">&gt;=<pos:position pos:line="35" pos:column="24"/></operator> <name pos:line="35" pos:column="22">DBGLVL_GORY<pos:position pos:line="35" pos:column="33"/></name></expr>)<pos:position pos:line="35" pos:column="34"/></condition><then pos:line="35" pos:column="34"> <block pos:line="35" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_rerror<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">APLOG_MARK<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">APLOG_DEBUG<pos:position pos:line="36" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="48">0<pos:position pos:line="36" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="51">f<pos:position pos:line="36" pos:column="52"/></name><operator pos:line="36" pos:column="52">-&gt;<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="54">r<pos:position pos:line="36" pos:column="55"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="37" pos:column="22">"xlate_out_filter() - "<pos:position pos:line="37" pos:column="45"/></literal>
                     <literal type="string" pos:line="38" pos:column="22">"charset_source: %s charset_default: %s"<pos:position pos:line="38" pos:column="62"/></literal></expr></argument>,
                     <argument><expr><ternary><condition><expr><name pos:line="39" pos:column="22">dc<pos:position pos:line="39" pos:column="24"/></name> <operator pos:line="39" pos:column="25">&amp;&amp;<pos:position pos:line="39" pos:column="35"/></operator> <name><name pos:line="39" pos:column="28">dc<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">charset_source<pos:position pos:line="39" pos:column="46"/></name></name></expr> ?<pos:position pos:line="39" pos:column="48"/></condition><then pos:line="39" pos:column="48"> <expr><name><name pos:line="39" pos:column="49">dc<pos:position pos:line="39" pos:column="51"/></name><operator pos:line="39" pos:column="51">-&gt;<pos:position pos:line="39" pos:column="56"/></operator><name pos:line="39" pos:column="53">charset_source<pos:position pos:line="39" pos:column="67"/></name></name></expr> <pos:position pos:line="39" pos:column="68"/></then><else pos:line="39" pos:column="68">: <expr><literal type="string" pos:line="39" pos:column="70">"(none)"<pos:position pos:line="39" pos:column="78"/></literal></expr></else></ternary></expr></argument>,
                     <argument><expr><ternary><condition><expr><name pos:line="40" pos:column="22">dc<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">&amp;&amp;<pos:position pos:line="40" pos:column="35"/></operator> <name><name pos:line="40" pos:column="28">dc<pos:position pos:line="40" pos:column="30"/></name><operator pos:line="40" pos:column="30">-&gt;<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="32">charset_default<pos:position pos:line="40" pos:column="47"/></name></name></expr> ?<pos:position pos:line="40" pos:column="49"/></condition><then pos:line="40" pos:column="49"> <expr><name><name pos:line="40" pos:column="50">dc<pos:position pos:line="40" pos:column="52"/></name><operator pos:line="40" pos:column="52">-&gt;<pos:position pos:line="40" pos:column="57"/></operator><name pos:line="40" pos:column="54">charset_default<pos:position pos:line="40" pos:column="69"/></name></name></expr> <pos:position pos:line="40" pos:column="70"/></then><else pos:line="40" pos:column="70">: <expr><literal type="string" pos:line="40" pos:column="72">"(none)"<pos:position pos:line="40" pos:column="80"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="40" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="82"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><operator pos:line="43" pos:column="9">!<pos:position pos:line="43" pos:column="10"/></operator><name><name pos:line="43" pos:column="10">ctx<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">ran<pos:position pos:line="43" pos:column="18"/></name></name></expr>)<pos:position pos:line="43" pos:column="19"/></condition><then pos:line="43" pos:column="19"> <block pos:line="43" pos:column="20">{  <comment type="block" pos:line="43" pos:column="23">/* filter never ran before */</comment>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">chk_filter_chain<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">f<pos:position pos:line="44" pos:column="27"/></name></expr></argument>)<pos:position pos:line="44" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">ctx<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">-&gt;<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="14">ran<pos:position pos:line="45" pos:column="17"/></name></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <literal type="number" pos:line="45" pos:column="20">1<pos:position pos:line="45" pos:column="21"/></literal></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">ctx<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">noop<pos:position pos:line="48" pos:column="18"/></name></name></expr>)<pos:position pos:line="48" pos:column="19"/></condition><then pos:line="48" pos:column="19"> <block pos:line="48" pos:column="20">{
        <return pos:line="49" pos:column="9">return <expr><call><name pos:line="49" pos:column="16">ap_pass_brigade<pos:position pos:line="49" pos:column="31"/></name><argument_list pos:line="49" pos:column="31">(<argument><expr><name><name pos:line="49" pos:column="32">f<pos:position pos:line="49" pos:column="33"/></name><operator pos:line="49" pos:column="33">-&gt;<pos:position pos:line="49" pos:column="38"/></operator><name pos:line="49" pos:column="35">next<pos:position pos:line="49" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="41">bb<pos:position pos:line="49" pos:column="43"/></name></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="45"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="52" pos:column="5">dptr<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <call><name pos:line="52" pos:column="12">APR_BRIGADE_FIRST<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name pos:line="52" pos:column="30">bb<pos:position pos:line="52" pos:column="32"/></name></expr></argument>)<pos:position pos:line="52" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="53" pos:column="5">done<pos:position pos:line="53" pos:column="9"/></name> <operator pos:line="53" pos:column="10">=<pos:position pos:line="53" pos:column="11"/></operator> <literal type="number" pos:line="53" pos:column="12">0<pos:position pos:line="53" pos:column="13"/></literal></expr>;<pos:position pos:line="53" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="54" pos:column="5">cur_len<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <literal type="number" pos:line="54" pos:column="15">0<pos:position pos:line="54" pos:column="16"/></literal></expr>;<pos:position pos:line="54" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="55" pos:column="5">space_avail<pos:position pos:line="55" pos:column="16"/></name> <operator pos:line="55" pos:column="17">=<pos:position pos:line="55" pos:column="18"/></operator> <sizeof pos:line="55" pos:column="19">sizeof<argument_list pos:line="55" pos:column="25">(<argument><expr><name pos:line="55" pos:column="26">tmp<pos:position pos:line="55" pos:column="29"/></name></expr></argument>)<pos:position pos:line="55" pos:column="30"/></argument_list></sizeof></expr>;<pos:position pos:line="55" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="56" pos:column="5">consumed_bucket<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <name pos:line="56" pos:column="23">NULL<pos:position pos:line="56" pos:column="27"/></name></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt>
    <while pos:line="57" pos:column="5">while <condition pos:line="57" pos:column="11">(<expr><operator pos:line="57" pos:column="12">!<pos:position pos:line="57" pos:column="13"/></operator><name pos:line="57" pos:column="13">done<pos:position pos:line="57" pos:column="17"/></name></expr>)<pos:position pos:line="57" pos:column="18"/></condition> <block pos:line="57" pos:column="19">{
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><operator pos:line="58" pos:column="13">!<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="14">cur_len<pos:position pos:line="58" pos:column="21"/></name></expr>)<pos:position pos:line="58" pos:column="22"/></condition><then pos:line="58" pos:column="22"> <block pos:line="58" pos:column="23">{ <comment type="block" pos:line="58" pos:column="25">/* no bytes left to process in the current bucket... */</comment>
            <if pos:line="59" pos:column="13">if <condition pos:line="59" pos:column="16">(<expr><name pos:line="59" pos:column="17">consumed_bucket<pos:position pos:line="59" pos:column="32"/></name></expr>)<pos:position pos:line="59" pos:column="33"/></condition><then pos:line="59" pos:column="33"> <block pos:line="59" pos:column="34">{
                <expr_stmt><expr><call><name pos:line="60" pos:column="17">apr_bucket_delete<pos:position pos:line="60" pos:column="34"/></name><argument_list pos:line="60" pos:column="34">(<argument><expr><name pos:line="60" pos:column="35">consumed_bucket<pos:position pos:line="60" pos:column="50"/></name></expr></argument>)<pos:position pos:line="60" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><name pos:line="61" pos:column="17">consumed_bucket<pos:position pos:line="61" pos:column="32"/></name> <operator pos:line="61" pos:column="33">=<pos:position pos:line="61" pos:column="34"/></operator> <name pos:line="61" pos:column="35">NULL<pos:position pos:line="61" pos:column="39"/></name></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="62" pos:column="14"/></block></then></if>
            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><name pos:line="63" pos:column="17">dptr<pos:position pos:line="63" pos:column="21"/></name> <operator pos:line="63" pos:column="22">==<pos:position pos:line="63" pos:column="24"/></operator> <call><name pos:line="63" pos:column="25">APR_BRIGADE_SENTINEL<pos:position pos:line="63" pos:column="45"/></name><argument_list pos:line="63" pos:column="45">(<argument><expr><name pos:line="63" pos:column="46">bb<pos:position pos:line="63" pos:column="48"/></name></expr></argument>)<pos:position pos:line="63" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="50"/></condition><then pos:line="63" pos:column="50"> <block pos:line="63" pos:column="51">{
                <expr_stmt><expr><name pos:line="64" pos:column="17">done<pos:position pos:line="64" pos:column="21"/></name> <operator pos:line="64" pos:column="22">=<pos:position pos:line="64" pos:column="23"/></operator> <literal type="number" pos:line="64" pos:column="24">1<pos:position pos:line="64" pos:column="25"/></literal></expr>;<pos:position pos:line="64" pos:column="26"/></expr_stmt>
                <break pos:line="65" pos:column="17">break;<pos:position pos:line="65" pos:column="23"/></break>
            }<pos:position pos:line="66" pos:column="14"/></block></then></if>
            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><call><name pos:line="67" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="67" pos:column="34"/></name><argument_list pos:line="67" pos:column="34">(<argument><expr><name pos:line="67" pos:column="35">dptr<pos:position pos:line="67" pos:column="39"/></name></expr></argument>)<pos:position pos:line="67" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="41"/></condition><then pos:line="67" pos:column="41"> <block pos:line="67" pos:column="42">{
                <expr_stmt><expr><name pos:line="68" pos:column="17">done<pos:position pos:line="68" pos:column="21"/></name> <operator pos:line="68" pos:column="22">=<pos:position pos:line="68" pos:column="23"/></operator> <literal type="number" pos:line="68" pos:column="24">1<pos:position pos:line="68" pos:column="25"/></literal></expr>;<pos:position pos:line="68" pos:column="26"/></expr_stmt>
                <expr_stmt><expr><name pos:line="69" pos:column="17">cur_len<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">=<pos:position pos:line="69" pos:column="26"/></operator> <operator pos:line="69" pos:column="27">-<pos:position pos:line="69" pos:column="28"/></operator><literal type="number" pos:line="69" pos:column="28">1<pos:position pos:line="69" pos:column="29"/></literal></expr>;<pos:position pos:line="69" pos:column="30"/></expr_stmt> <comment type="block" pos:line="69" pos:column="31">/* XXX yuck, but that tells us to send
                                 * eos down; when we minimize our bb construction
                                 * we'll fix this crap */</comment>
                <if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><name><name pos:line="72" pos:column="21">ctx<pos:position pos:line="72" pos:column="24"/></name><operator pos:line="72" pos:column="24">-&gt;<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="26">saved<pos:position pos:line="72" pos:column="31"/></name></name></expr>)<pos:position pos:line="72" pos:column="32"/></condition><then pos:line="72" pos:column="32"> <block pos:line="72" pos:column="33">{
                    <comment type="block" pos:line="73" pos:column="21">/* Oops... we have a partial char from the previous bucket
                     * that won't be completed because there's no more data.
                     */</comment>
                    <expr_stmt><expr><name pos:line="76" pos:column="21">rv<pos:position pos:line="76" pos:column="23"/></name> <operator pos:line="76" pos:column="24">=<pos:position pos:line="76" pos:column="25"/></operator> <name pos:line="76" pos:column="26">APR_INCOMPLETE<pos:position pos:line="76" pos:column="40"/></name></expr>;<pos:position pos:line="76" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="77" pos:column="21">ctx<pos:position pos:line="77" pos:column="24"/></name><operator pos:line="77" pos:column="24">-&gt;<pos:position pos:line="77" pos:column="29"/></operator><name pos:line="77" pos:column="26">ees<pos:position pos:line="77" pos:column="29"/></name></name> <operator pos:line="77" pos:column="30">=<pos:position pos:line="77" pos:column="31"/></operator> <name pos:line="77" pos:column="32">EES_INCOMPLETE_CHAR<pos:position pos:line="77" pos:column="51"/></name></expr>;<pos:position pos:line="77" pos:column="52"/></expr_stmt>
                }<pos:position pos:line="78" pos:column="18"/></block></then></if>
                <break pos:line="79" pos:column="17">break;<pos:position pos:line="79" pos:column="23"/></break>
            }<pos:position pos:line="80" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="81" pos:column="13">rv<pos:position pos:line="81" pos:column="15"/></name> <operator pos:line="81" pos:column="16">=<pos:position pos:line="81" pos:column="17"/></operator> <call><name pos:line="81" pos:column="18">apr_bucket_read<pos:position pos:line="81" pos:column="33"/></name><argument_list pos:line="81" pos:column="33">(<argument><expr><name pos:line="81" pos:column="34">dptr<pos:position pos:line="81" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="40">&amp;<pos:position pos:line="81" pos:column="45"/></operator><name pos:line="81" pos:column="41">cur_str<pos:position pos:line="81" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="50">&amp;<pos:position pos:line="81" pos:column="55"/></operator><name pos:line="81" pos:column="51">cur_len<pos:position pos:line="81" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="60">APR_BLOCK_READ<pos:position pos:line="81" pos:column="74"/></name></expr></argument>)<pos:position pos:line="81" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="76"/></expr_stmt>
            <if pos:line="82" pos:column="13">if <condition pos:line="82" pos:column="16">(<expr><name pos:line="82" pos:column="17">rv<pos:position pos:line="82" pos:column="19"/></name> <operator pos:line="82" pos:column="20">!=<pos:position pos:line="82" pos:column="22"/></operator> <name pos:line="82" pos:column="23">APR_SUCCESS<pos:position pos:line="82" pos:column="34"/></name></expr>)<pos:position pos:line="82" pos:column="35"/></condition><then pos:line="82" pos:column="35"> <block pos:line="82" pos:column="36">{
                <expr_stmt><expr><name pos:line="83" pos:column="17">done<pos:position pos:line="83" pos:column="21"/></name> <operator pos:line="83" pos:column="22">=<pos:position pos:line="83" pos:column="23"/></operator> <literal type="number" pos:line="83" pos:column="24">1<pos:position pos:line="83" pos:column="25"/></literal></expr>;<pos:position pos:line="83" pos:column="26"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="84" pos:column="17">ctx<pos:position pos:line="84" pos:column="20"/></name><operator pos:line="84" pos:column="20">-&gt;<pos:position pos:line="84" pos:column="25"/></operator><name pos:line="84" pos:column="22">ees<pos:position pos:line="84" pos:column="25"/></name></name> <operator pos:line="84" pos:column="26">=<pos:position pos:line="84" pos:column="27"/></operator> <name pos:line="84" pos:column="28">EES_BUCKET_READ<pos:position pos:line="84" pos:column="43"/></name></expr>;<pos:position pos:line="84" pos:column="44"/></expr_stmt>
                <break pos:line="85" pos:column="17">break;<pos:position pos:line="85" pos:column="23"/></break>
            }<pos:position pos:line="86" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="87" pos:column="13">consumed_bucket<pos:position pos:line="87" pos:column="28"/></name> <operator pos:line="87" pos:column="29">=<pos:position pos:line="87" pos:column="30"/></operator> <name pos:line="87" pos:column="31">dptr<pos:position pos:line="87" pos:column="35"/></name></expr>;<pos:position pos:line="87" pos:column="36"/></expr_stmt> <comment type="block" pos:line="87" pos:column="37">/* for axing when we're done reading it */</comment>
            <expr_stmt><expr><name pos:line="88" pos:column="13">dptr<pos:position pos:line="88" pos:column="17"/></name> <operator pos:line="88" pos:column="18">=<pos:position pos:line="88" pos:column="19"/></operator> <call><name pos:line="88" pos:column="20">APR_BUCKET_NEXT<pos:position pos:line="88" pos:column="35"/></name><argument_list pos:line="88" pos:column="35">(<argument><expr><name pos:line="88" pos:column="36">dptr<pos:position pos:line="88" pos:column="40"/></name></expr></argument>)<pos:position pos:line="88" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="42"/></expr_stmt> <comment type="block" pos:line="88" pos:column="43">/* get ready for when we access the 
                                          * next bucket */</comment>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="91" pos:column="9">/* Try to fill up our tmp buffer with translated data. */</comment>
        <expr_stmt><expr><name pos:line="92" pos:column="9">cur_avail<pos:position pos:line="92" pos:column="18"/></name> <operator pos:line="92" pos:column="19">=<pos:position pos:line="92" pos:column="20"/></operator> <name pos:line="92" pos:column="21">cur_len<pos:position pos:line="92" pos:column="28"/></name></expr>;<pos:position pos:line="92" pos:column="29"/></expr_stmt>

        <if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name pos:line="94" pos:column="13">cur_len<pos:position pos:line="94" pos:column="20"/></name></expr>)<pos:position pos:line="94" pos:column="21"/></condition><then pos:line="94" pos:column="21"> <block pos:line="94" pos:column="22">{ <comment type="block" pos:line="94" pos:column="24">/* maybe we just hit the end of a pipe (len = 0) ? */</comment>
            <if pos:line="95" pos:column="13">if <condition pos:line="95" pos:column="16">(<expr><name><name pos:line="95" pos:column="17">ctx<pos:position pos:line="95" pos:column="20"/></name><operator pos:line="95" pos:column="20">-&gt;<pos:position pos:line="95" pos:column="25"/></operator><name pos:line="95" pos:column="22">saved<pos:position pos:line="95" pos:column="27"/></name></name></expr>)<pos:position pos:line="95" pos:column="28"/></condition><then pos:line="95" pos:column="28"> <block pos:line="95" pos:column="29">{
                <comment type="block" pos:line="96" pos:column="17">/* Rats... we need to finish a partial character from the previous
                 * bucket.
                 */</comment>
                <decl_stmt><decl><type><name pos:line="99" pos:column="17">char<pos:position pos:line="99" pos:column="21"/></name> <modifier pos:line="99" pos:column="22">*<pos:position pos:line="99" pos:column="23"/></modifier></type><name pos:line="99" pos:column="23">tmp_tmp<pos:position pos:line="99" pos:column="30"/></name></decl>;<pos:position pos:line="99" pos:column="31"/></decl_stmt>
                
                <expr_stmt><expr><name pos:line="101" pos:column="17">tmp_tmp<pos:position pos:line="101" pos:column="24"/></name> <operator pos:line="101" pos:column="25">=<pos:position pos:line="101" pos:column="26"/></operator> <name pos:line="101" pos:column="27">tmp<pos:position pos:line="101" pos:column="30"/></name> <operator pos:line="101" pos:column="31">+<pos:position pos:line="101" pos:column="32"/></operator> <sizeof pos:line="101" pos:column="33">sizeof<argument_list pos:line="101" pos:column="39">(<argument><expr><name pos:line="101" pos:column="40">tmp<pos:position pos:line="101" pos:column="43"/></name></expr></argument>)<pos:position pos:line="101" pos:column="44"/></argument_list></sizeof> <operator pos:line="101" pos:column="45">-<pos:position pos:line="101" pos:column="46"/></operator> <name pos:line="101" pos:column="47">space_avail<pos:position pos:line="101" pos:column="58"/></name></expr>;<pos:position pos:line="101" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><name pos:line="102" pos:column="17">rv<pos:position pos:line="102" pos:column="19"/></name> <operator pos:line="102" pos:column="20">=<pos:position pos:line="102" pos:column="21"/></operator> <macro><name pos:line="102" pos:column="22">finish_partial_char<pos:position pos:line="102" pos:column="41"/></name><argument_list pos:line="102" pos:column="41">(<argument pos:line="102" pos:column="42">ctx<pos:position pos:line="102" pos:column="45"/></argument>,
                                         <argument pos:line="103" pos:column="42">&amp;cur_str<pos:position pos:line="103" pos:column="50"/></argument></argument_list></macro></expr></expr_stmt></block></then></if></block></then></if></block></while></block></function></unit>

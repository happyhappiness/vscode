<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_824_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">shmcb_get_division<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(
    <parameter><decl><type><name pos:line="2" pos:column="5">SHMCBHeader<pos:position pos:line="2" pos:column="16"/></name> <modifier pos:line="2" pos:column="17">*<pos:position pos:line="2" pos:column="18"/></modifier></type><name pos:line="2" pos:column="18">header<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="26">SHMCBQueue<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">queue<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">SHMCBCache<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">cache<pos:position pos:line="3" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="24">unsigned<pos:position pos:line="3" pos:column="32"/></name> <name pos:line="3" pos:column="33">int<pos:position pos:line="3" pos:column="36"/></name></type> <name pos:line="3" pos:column="37">idx<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="41"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">char<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">pQueue<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">char<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">pCache<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* bounds check */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">idx<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">&gt;<pos:position pos:line="9" pos:column="17"/></operator> <operator pos:line="9" pos:column="15">(<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">unsigned<pos:position pos:line="9" pos:column="24"/></name> <name pos:line="9" pos:column="25">int<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">)<pos:position pos:line="9" pos:column="29"/></operator> <name><name pos:line="9" pos:column="30">header<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">division_mask<pos:position pos:line="9" pos:column="51"/></name></name></expr>)<pos:position pos:line="9" pos:column="52"/></condition><then pos:line="9" pos:column="52">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">FALSE<pos:position pos:line="10" pos:column="21"/></name></expr>;<pos:position pos:line="10" pos:column="22"/></return></block></then></if>

    <comment type="block" pos:line="12" pos:column="5">/* Locate the blocks of memory storing the corresponding data */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">pQueue<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <operator pos:line="13" pos:column="14">(<pos:position pos:line="13" pos:column="15"/></operator><operator pos:line="13" pos:column="15">(<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">unsigned<pos:position pos:line="13" pos:column="24"/></name> <name pos:line="13" pos:column="25">char<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">*<pos:position pos:line="13" pos:column="31"/></operator><operator pos:line="13" pos:column="31">)<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="33">header<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">)<pos:position pos:line="13" pos:column="40"/></operator> <operator pos:line="13" pos:column="41">+<pos:position pos:line="13" pos:column="42"/></operator> <name><name pos:line="13" pos:column="43">header<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">-&gt;<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="51">division_offset<pos:position pos:line="13" pos:column="66"/></name></name> <operator pos:line="13" pos:column="67">+<pos:position pos:line="13" pos:column="68"/></operator>
        <operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">idx<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></operator> <name><name pos:line="14" pos:column="16">header<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">division_size<pos:position pos:line="14" pos:column="37"/></name></name><operator pos:line="14" pos:column="37">)<pos:position pos:line="14" pos:column="38"/></operator></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">pCache<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <name pos:line="15" pos:column="14">pQueue<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">+<pos:position pos:line="15" pos:column="22"/></operator> <name><name pos:line="15" pos:column="23">header<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">queue_size<pos:position pos:line="15" pos:column="41"/></name></name></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* Populate the structures with appropriate pointers */</comment>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">queue<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">first_pos<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <operator pos:line="18" pos:column="24">(<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">unsigned<pos:position pos:line="18" pos:column="33"/></name> <name pos:line="18" pos:column="34">int<pos:position pos:line="18" pos:column="37"/></name> <operator pos:line="18" pos:column="38">*<pos:position pos:line="18" pos:column="39"/></operator><operator pos:line="18" pos:column="39">)<pos:position pos:line="18" pos:column="40"/></operator> <name pos:line="18" pos:column="41">pQueue<pos:position pos:line="18" pos:column="47"/></name></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="20" pos:column="5">/* Our structures stay packed, no matter what the system's
     * data-alignment regime is. */</comment>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">queue<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">pos_count<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">unsigned<pos:position pos:line="22" pos:column="33"/></name> <name pos:line="22" pos:column="34">int<pos:position pos:line="22" pos:column="37"/></name> <operator pos:line="22" pos:column="38">*<pos:position pos:line="22" pos:column="39"/></operator><operator pos:line="22" pos:column="39">)<pos:position pos:line="22" pos:column="40"/></operator> <operator pos:line="22" pos:column="41">(<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="42">pQueue<pos:position pos:line="22" pos:column="48"/></name> <operator pos:line="22" pos:column="49">+<pos:position pos:line="22" pos:column="50"/></operator> sizeof<operator pos:line="22" pos:column="57">(<pos:position pos:line="22" pos:column="58"/></operator><name pos:line="22" pos:column="58">unsigned<pos:position pos:line="22" pos:column="66"/></name> <name pos:line="22" pos:column="67">int<pos:position pos:line="22" pos:column="70"/></name><operator pos:line="22" pos:column="70">)<pos:position pos:line="22" pos:column="71"/></operator><operator pos:line="22" pos:column="71">)<pos:position pos:line="22" pos:column="72"/></operator></expr>;<pos:position pos:line="22" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">queue<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">indexes<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <operator pos:line="23" pos:column="22">(<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">SHMCBIndex<pos:position pos:line="23" pos:column="33"/></name> <operator pos:line="23" pos:column="34">*<pos:position pos:line="23" pos:column="35"/></operator><operator pos:line="23" pos:column="35">)<pos:position pos:line="23" pos:column="36"/></operator> <operator pos:line="23" pos:column="37">(<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">pQueue<pos:position pos:line="23" pos:column="44"/></name> <operator pos:line="23" pos:column="45">+<pos:position pos:line="23" pos:column="46"/></operator> <operator pos:line="23" pos:column="47">(<pos:position pos:line="23" pos:column="48"/></operator><literal type="number" pos:line="23" pos:column="48">2<pos:position pos:line="23" pos:column="49"/></literal> <operator pos:line="23" pos:column="50">*<pos:position pos:line="23" pos:column="51"/></operator> sizeof<operator pos:line="23" pos:column="58">(<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="59">unsigned<pos:position pos:line="23" pos:column="67"/></name> <name pos:line="23" pos:column="68">int<pos:position pos:line="23" pos:column="71"/></name><operator pos:line="23" pos:column="71">)<pos:position pos:line="23" pos:column="72"/></operator><operator pos:line="23" pos:column="72">)<pos:position pos:line="23" pos:column="73"/></operator><operator pos:line="23" pos:column="73">)<pos:position pos:line="23" pos:column="74"/></operator></expr>;<pos:position pos:line="23" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">cache<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">first_pos<pos:position pos:line="24" pos:column="21"/></name></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">unsigned<pos:position pos:line="24" pos:column="33"/></name> <name pos:line="24" pos:column="34">int<pos:position pos:line="24" pos:column="37"/></name> <operator pos:line="24" pos:column="38">*<pos:position pos:line="24" pos:column="39"/></operator><operator pos:line="24" pos:column="39">)<pos:position pos:line="24" pos:column="40"/></operator> <name pos:line="24" pos:column="41">pCache<pos:position pos:line="24" pos:column="47"/></name></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">cache<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">pos_count<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <operator pos:line="25" pos:column="24">(<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">unsigned<pos:position pos:line="25" pos:column="33"/></name> <name pos:line="25" pos:column="34">int<pos:position pos:line="25" pos:column="37"/></name> <operator pos:line="25" pos:column="38">*<pos:position pos:line="25" pos:column="39"/></operator><operator pos:line="25" pos:column="39">)<pos:position pos:line="25" pos:column="40"/></operator> <operator pos:line="25" pos:column="41">(<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="42">pCache<pos:position pos:line="25" pos:column="48"/></name> <operator pos:line="25" pos:column="49">+<pos:position pos:line="25" pos:column="50"/></operator> sizeof<operator pos:line="25" pos:column="57">(<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="58">unsigned<pos:position pos:line="25" pos:column="66"/></name> <name pos:line="25" pos:column="67">int<pos:position pos:line="25" pos:column="70"/></name><operator pos:line="25" pos:column="70">)<pos:position pos:line="25" pos:column="71"/></operator><operator pos:line="25" pos:column="71">)<pos:position pos:line="25" pos:column="72"/></operator></expr>;<pos:position pos:line="25" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">cache<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">data<pos:position pos:line="26" pos:column="16"/></name></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <operator pos:line="26" pos:column="19">(<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">unsigned<pos:position pos:line="26" pos:column="28"/></name> <name pos:line="26" pos:column="29">char<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">*<pos:position pos:line="26" pos:column="35"/></operator><operator pos:line="26" pos:column="35">)<pos:position pos:line="26" pos:column="36"/></operator> <operator pos:line="26" pos:column="37">(<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">pCache<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">+<pos:position pos:line="26" pos:column="46"/></operator> <operator pos:line="26" pos:column="47">(<pos:position pos:line="26" pos:column="48"/></operator><literal type="number" pos:line="26" pos:column="48">2<pos:position pos:line="26" pos:column="49"/></literal> <operator pos:line="26" pos:column="50">*<pos:position pos:line="26" pos:column="51"/></operator> sizeof<operator pos:line="26" pos:column="58">(<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="59">unsigned<pos:position pos:line="26" pos:column="67"/></name> <name pos:line="26" pos:column="68">int<pos:position pos:line="26" pos:column="71"/></name><operator pos:line="26" pos:column="71">)<pos:position pos:line="26" pos:column="72"/></operator><operator pos:line="26" pos:column="72">)<pos:position pos:line="26" pos:column="73"/></operator><operator pos:line="26" pos:column="73">)<pos:position pos:line="26" pos:column="74"/></operator></expr>;<pos:position pos:line="26" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">queue<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">header<pos:position pos:line="27" pos:column="18"/></name></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name><name pos:line="27" pos:column="21">cache<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">-&gt;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="28">header<pos:position pos:line="27" pos:column="34"/></name></name> <operator pos:line="27" pos:column="35">=<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">header<pos:position pos:line="27" pos:column="43"/></name></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>

    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">TRUE<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

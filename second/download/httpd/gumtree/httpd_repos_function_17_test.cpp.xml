<function xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position"><specifier pos:line="417" pos:column="1">static<pos:position pos:line="417" pos:column="7"/></specifier> <type><name pos:line="417" pos:column="8">void<pos:position pos:line="417" pos:column="12"/></name></type> <name pos:line="417" pos:column="13">am_load<pos:position pos:line="417" pos:column="20"/></name><parameter_list pos:line="417" pos:column="20">(<parameter><decl><type><name><name pos:line="417" pos:column="21">struct<pos:position pos:line="417" pos:column="27"/></name> <name pos:line="417" pos:column="28">am_state<pos:position pos:line="417" pos:column="36"/></name></name> <modifier pos:line="417" pos:column="37">*<pos:position pos:line="417" pos:column="38"/></modifier></type><name pos:line="417" pos:column="38">state<pos:position pos:line="417" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="417" pos:column="44"/></parameter_list>
<block pos:line="418" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="419" pos:column="9">struct<pos:position pos:line="419" pos:column="15"/></name> <name pos:line="419" pos:column="16">strbuf<pos:position pos:line="419" pos:column="22"/></name></name></type> <name pos:line="419" pos:column="23">sb<pos:position pos:line="419" pos:column="25"/></name> <init pos:line="419" pos:column="26">= <expr><name pos:line="419" pos:column="28">STRBUF_INIT<pos:position pos:line="419" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="419" pos:column="40"/></decl_stmt>

	<if pos:line="421" pos:column="9">if <condition pos:line="421" pos:column="12">(<expr><call><name pos:line="421" pos:column="13">read_state_file<pos:position pos:line="421" pos:column="28"/></name><argument_list pos:line="421" pos:column="28">(<argument><expr><operator pos:line="421" pos:column="29">&amp;<pos:position pos:line="421" pos:column="34"/></operator><name pos:line="421" pos:column="30">sb<pos:position pos:line="421" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="421" pos:column="34">state<pos:position pos:line="421" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="421" pos:column="41">"next"<pos:position pos:line="421" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="421" pos:column="49">1<pos:position pos:line="421" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="421" pos:column="51"/></argument_list></call> <operator pos:line="421" pos:column="52">&lt;<pos:position pos:line="421" pos:column="56"/></operator> <literal type="number" pos:line="421" pos:column="54">0<pos:position pos:line="421" pos:column="55"/></literal></expr>)<pos:position pos:line="421" pos:column="56"/></condition><then pos:line="421" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="422" pos:column="17">die<pos:position pos:line="422" pos:column="20"/></name><argument_list pos:line="422" pos:column="20">(<argument><expr><literal type="string" pos:line="422" pos:column="21">"BUG: state file 'next' does not exist"<pos:position pos:line="422" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="422" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="62"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="423" pos:column="9">state<pos:position pos:line="423" pos:column="14"/></name><operator pos:line="423" pos:column="14">-&gt;<pos:position pos:line="423" pos:column="19"/></operator><name pos:line="423" pos:column="16">cur<pos:position pos:line="423" pos:column="19"/></name></name> <operator pos:line="423" pos:column="20">=<pos:position pos:line="423" pos:column="21"/></operator> <call><name pos:line="423" pos:column="22">strtol<pos:position pos:line="423" pos:column="28"/></name><argument_list pos:line="423" pos:column="28">(<argument><expr><name><name pos:line="423" pos:column="29">sb<pos:position pos:line="423" pos:column="31"/></name><operator pos:line="423" pos:column="31">.<pos:position pos:line="423" pos:column="32"/></operator><name pos:line="423" pos:column="32">buf<pos:position pos:line="423" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="423" pos:column="37">NULL<pos:position pos:line="423" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="423" pos:column="43">10<pos:position pos:line="423" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="423" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="423" pos:column="47"/></expr_stmt>

	<if pos:line="425" pos:column="9">if <condition pos:line="425" pos:column="12">(<expr><call><name pos:line="425" pos:column="13">read_state_file<pos:position pos:line="425" pos:column="28"/></name><argument_list pos:line="425" pos:column="28">(<argument><expr><operator pos:line="425" pos:column="29">&amp;<pos:position pos:line="425" pos:column="34"/></operator><name pos:line="425" pos:column="30">sb<pos:position pos:line="425" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="425" pos:column="34">state<pos:position pos:line="425" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="425" pos:column="41">"last"<pos:position pos:line="425" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="425" pos:column="49">1<pos:position pos:line="425" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="425" pos:column="51"/></argument_list></call> <operator pos:line="425" pos:column="52">&lt;<pos:position pos:line="425" pos:column="56"/></operator> <literal type="number" pos:line="425" pos:column="54">0<pos:position pos:line="425" pos:column="55"/></literal></expr>)<pos:position pos:line="425" pos:column="56"/></condition><then pos:line="425" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="426" pos:column="17">die<pos:position pos:line="426" pos:column="20"/></name><argument_list pos:line="426" pos:column="20">(<argument><expr><literal type="string" pos:line="426" pos:column="21">"BUG: state file 'last' does not exist"<pos:position pos:line="426" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="426" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="426" pos:column="62"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="427" pos:column="9">state<pos:position pos:line="427" pos:column="14"/></name><operator pos:line="427" pos:column="14">-&gt;<pos:position pos:line="427" pos:column="19"/></operator><name pos:line="427" pos:column="16">last<pos:position pos:line="427" pos:column="20"/></name></name> <operator pos:line="427" pos:column="21">=<pos:position pos:line="427" pos:column="22"/></operator> <call><name pos:line="427" pos:column="23">strtol<pos:position pos:line="427" pos:column="29"/></name><argument_list pos:line="427" pos:column="29">(<argument><expr><name><name pos:line="427" pos:column="30">sb<pos:position pos:line="427" pos:column="32"/></name><operator pos:line="427" pos:column="32">.<pos:position pos:line="427" pos:column="33"/></operator><name pos:line="427" pos:column="33">buf<pos:position pos:line="427" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="427" pos:column="38">NULL<pos:position pos:line="427" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="427" pos:column="44">10<pos:position pos:line="427" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="427" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="427" pos:column="48"/></expr_stmt>

	<if pos:line="429" pos:column="9">if <condition pos:line="429" pos:column="12">(<expr><call><name pos:line="429" pos:column="13">read_author_script<pos:position pos:line="429" pos:column="31"/></name><argument_list pos:line="429" pos:column="31">(<argument><expr><name pos:line="429" pos:column="32">state<pos:position pos:line="429" pos:column="37"/></name></expr></argument>)<pos:position pos:line="429" pos:column="38"/></argument_list></call> <operator pos:line="429" pos:column="39">&lt;<pos:position pos:line="429" pos:column="43"/></operator> <literal type="number" pos:line="429" pos:column="41">0<pos:position pos:line="429" pos:column="42"/></literal></expr>)<pos:position pos:line="429" pos:column="43"/></condition><then pos:line="429" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="430" pos:column="17">die<pos:position pos:line="430" pos:column="20"/></name><argument_list pos:line="430" pos:column="20">(<argument><expr><call><name pos:line="430" pos:column="21">_<pos:position pos:line="430" pos:column="22"/></name><argument_list pos:line="430" pos:column="22">(<argument><expr><literal type="string" pos:line="430" pos:column="23">"could not parse author script"<pos:position pos:line="430" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="430" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="430" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="430" pos:column="57"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="432" pos:column="9">read_commit_msg<pos:position pos:line="432" pos:column="24"/></name><argument_list pos:line="432" pos:column="24">(<argument><expr><name pos:line="432" pos:column="25">state<pos:position pos:line="432" pos:column="30"/></name></expr></argument>)<pos:position pos:line="432" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="432" pos:column="32"/></expr_stmt>

	<if pos:line="434" pos:column="9">if <condition pos:line="434" pos:column="12">(<expr><call><name pos:line="434" pos:column="13">read_state_file<pos:position pos:line="434" pos:column="28"/></name><argument_list pos:line="434" pos:column="28">(<argument><expr><operator pos:line="434" pos:column="29">&amp;<pos:position pos:line="434" pos:column="34"/></operator><name pos:line="434" pos:column="30">sb<pos:position pos:line="434" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="434" pos:column="34">state<pos:position pos:line="434" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="434" pos:column="41">"original-commit"<pos:position pos:line="434" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="434" pos:column="60">1<pos:position pos:line="434" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="434" pos:column="62"/></argument_list></call> <operator pos:line="434" pos:column="63">&lt;<pos:position pos:line="434" pos:column="67"/></operator> <literal type="number" pos:line="434" pos:column="65">0<pos:position pos:line="434" pos:column="66"/></literal></expr>)<pos:position pos:line="434" pos:column="67"/></condition><then pos:line="434" pos:column="67">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="435" pos:column="17">hashclr<pos:position pos:line="435" pos:column="24"/></name><argument_list pos:line="435" pos:column="24">(<argument><expr><name><name pos:line="435" pos:column="25">state<pos:position pos:line="435" pos:column="30"/></name><operator pos:line="435" pos:column="30">-&gt;<pos:position pos:line="435" pos:column="35"/></operator><name pos:line="435" pos:column="32">orig_commit<pos:position pos:line="435" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="435" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="435" pos:column="45"/></expr_stmt></block></then>
	<elseif pos:line="436" pos:column="9">else <if pos:line="436" pos:column="14">if <condition pos:line="436" pos:column="17">(<expr><call><name pos:line="436" pos:column="18">get_sha1_hex<pos:position pos:line="436" pos:column="30"/></name><argument_list pos:line="436" pos:column="30">(<argument><expr><name><name pos:line="436" pos:column="31">sb<pos:position pos:line="436" pos:column="33"/></name><operator pos:line="436" pos:column="33">.<pos:position pos:line="436" pos:column="34"/></operator><name pos:line="436" pos:column="34">buf<pos:position pos:line="436" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="436" pos:column="39">state<pos:position pos:line="436" pos:column="44"/></name><operator pos:line="436" pos:column="44">-&gt;<pos:position pos:line="436" pos:column="49"/></operator><name pos:line="436" pos:column="46">orig_commit<pos:position pos:line="436" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="436" pos:column="58"/></argument_list></call> <operator pos:line="436" pos:column="59">&lt;<pos:position pos:line="436" pos:column="63"/></operator> <literal type="number" pos:line="436" pos:column="61">0<pos:position pos:line="436" pos:column="62"/></literal></expr>)<pos:position pos:line="436" pos:column="63"/></condition><then pos:line="436" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="437" pos:column="17">die<pos:position pos:line="437" pos:column="20"/></name><argument_list pos:line="437" pos:column="20">(<argument><expr><call><name pos:line="437" pos:column="21">_<pos:position pos:line="437" pos:column="22"/></name><argument_list pos:line="437" pos:column="22">(<argument><expr><literal type="string" pos:line="437" pos:column="23">"could not parse %s"<pos:position pos:line="437" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="437" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="437" pos:column="46">am_path<pos:position pos:line="437" pos:column="53"/></name><argument_list pos:line="437" pos:column="53">(<argument><expr><name pos:line="437" pos:column="54">state<pos:position pos:line="437" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="437" pos:column="61">"original-commit"<pos:position pos:line="437" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="437" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="437" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="437" pos:column="81"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="439" pos:column="9">read_state_file<pos:position pos:line="439" pos:column="24"/></name><argument_list pos:line="439" pos:column="24">(<argument><expr><operator pos:line="439" pos:column="25">&amp;<pos:position pos:line="439" pos:column="30"/></operator><name pos:line="439" pos:column="26">sb<pos:position pos:line="439" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="439" pos:column="30">state<pos:position pos:line="439" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="439" pos:column="37">"threeway"<pos:position pos:line="439" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="439" pos:column="49">1<pos:position pos:line="439" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="439" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="439" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="440" pos:column="9">state<pos:position pos:line="440" pos:column="14"/></name><operator pos:line="440" pos:column="14">-&gt;<pos:position pos:line="440" pos:column="19"/></operator><name pos:line="440" pos:column="16">threeway<pos:position pos:line="440" pos:column="24"/></name></name> <operator pos:line="440" pos:column="25">=<pos:position pos:line="440" pos:column="26"/></operator> <operator pos:line="440" pos:column="27">!<pos:position pos:line="440" pos:column="28"/></operator><call><name pos:line="440" pos:column="28">strcmp<pos:position pos:line="440" pos:column="34"/></name><argument_list pos:line="440" pos:column="34">(<argument><expr><name><name pos:line="440" pos:column="35">sb<pos:position pos:line="440" pos:column="37"/></name><operator pos:line="440" pos:column="37">.<pos:position pos:line="440" pos:column="38"/></operator><name pos:line="440" pos:column="38">buf<pos:position pos:line="440" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="440" pos:column="43">"t"<pos:position pos:line="440" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="440" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="440" pos:column="48"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="442" pos:column="9">read_state_file<pos:position pos:line="442" pos:column="24"/></name><argument_list pos:line="442" pos:column="24">(<argument><expr><operator pos:line="442" pos:column="25">&amp;<pos:position pos:line="442" pos:column="30"/></operator><name pos:line="442" pos:column="26">sb<pos:position pos:line="442" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="30">state<pos:position pos:line="442" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="442" pos:column="37">"quiet"<pos:position pos:line="442" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="442" pos:column="46">1<pos:position pos:line="442" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="442" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="443" pos:column="9">state<pos:position pos:line="443" pos:column="14"/></name><operator pos:line="443" pos:column="14">-&gt;<pos:position pos:line="443" pos:column="19"/></operator><name pos:line="443" pos:column="16">quiet<pos:position pos:line="443" pos:column="21"/></name></name> <operator pos:line="443" pos:column="22">=<pos:position pos:line="443" pos:column="23"/></operator> <operator pos:line="443" pos:column="24">!<pos:position pos:line="443" pos:column="25"/></operator><call><name pos:line="443" pos:column="25">strcmp<pos:position pos:line="443" pos:column="31"/></name><argument_list pos:line="443" pos:column="31">(<argument><expr><name><name pos:line="443" pos:column="32">sb<pos:position pos:line="443" pos:column="34"/></name><operator pos:line="443" pos:column="34">.<pos:position pos:line="443" pos:column="35"/></operator><name pos:line="443" pos:column="35">buf<pos:position pos:line="443" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="443" pos:column="40">"t"<pos:position pos:line="443" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="443" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="443" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="445" pos:column="9">read_state_file<pos:position pos:line="445" pos:column="24"/></name><argument_list pos:line="445" pos:column="24">(<argument><expr><operator pos:line="445" pos:column="25">&amp;<pos:position pos:line="445" pos:column="30"/></operator><name pos:line="445" pos:column="26">sb<pos:position pos:line="445" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="445" pos:column="30">state<pos:position pos:line="445" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="445" pos:column="37">"sign"<pos:position pos:line="445" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="445" pos:column="45">1<pos:position pos:line="445" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="445" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="445" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="446" pos:column="9">state<pos:position pos:line="446" pos:column="14"/></name><operator pos:line="446" pos:column="14">-&gt;<pos:position pos:line="446" pos:column="19"/></operator><name pos:line="446" pos:column="16">signoff<pos:position pos:line="446" pos:column="23"/></name></name> <operator pos:line="446" pos:column="24">=<pos:position pos:line="446" pos:column="25"/></operator> <operator pos:line="446" pos:column="26">!<pos:position pos:line="446" pos:column="27"/></operator><call><name pos:line="446" pos:column="27">strcmp<pos:position pos:line="446" pos:column="33"/></name><argument_list pos:line="446" pos:column="33">(<argument><expr><name><name pos:line="446" pos:column="34">sb<pos:position pos:line="446" pos:column="36"/></name><operator pos:line="446" pos:column="36">.<pos:position pos:line="446" pos:column="37"/></operator><name pos:line="446" pos:column="37">buf<pos:position pos:line="446" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="446" pos:column="42">"t"<pos:position pos:line="446" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="446" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="448" pos:column="9">read_state_file<pos:position pos:line="448" pos:column="24"/></name><argument_list pos:line="448" pos:column="24">(<argument><expr><operator pos:line="448" pos:column="25">&amp;<pos:position pos:line="448" pos:column="30"/></operator><name pos:line="448" pos:column="26">sb<pos:position pos:line="448" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="448" pos:column="30">state<pos:position pos:line="448" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="448" pos:column="37">"utf8"<pos:position pos:line="448" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="448" pos:column="45">1<pos:position pos:line="448" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="448" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="448" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="449" pos:column="9">state<pos:position pos:line="449" pos:column="14"/></name><operator pos:line="449" pos:column="14">-&gt;<pos:position pos:line="449" pos:column="19"/></operator><name pos:line="449" pos:column="16">utf8<pos:position pos:line="449" pos:column="20"/></name></name> <operator pos:line="449" pos:column="21">=<pos:position pos:line="449" pos:column="22"/></operator> <operator pos:line="449" pos:column="23">!<pos:position pos:line="449" pos:column="24"/></operator><call><name pos:line="449" pos:column="24">strcmp<pos:position pos:line="449" pos:column="30"/></name><argument_list pos:line="449" pos:column="30">(<argument><expr><name><name pos:line="449" pos:column="31">sb<pos:position pos:line="449" pos:column="33"/></name><operator pos:line="449" pos:column="33">.<pos:position pos:line="449" pos:column="34"/></operator><name pos:line="449" pos:column="34">buf<pos:position pos:line="449" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="449" pos:column="39">"t"<pos:position pos:line="449" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="449" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="449" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="451" pos:column="9">read_state_file<pos:position pos:line="451" pos:column="24"/></name><argument_list pos:line="451" pos:column="24">(<argument><expr><operator pos:line="451" pos:column="25">&amp;<pos:position pos:line="451" pos:column="30"/></operator><name pos:line="451" pos:column="26">sb<pos:position pos:line="451" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="451" pos:column="30">state<pos:position pos:line="451" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="451" pos:column="37">"keep"<pos:position pos:line="451" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="451" pos:column="45">1<pos:position pos:line="451" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="451" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="451" pos:column="48"/></expr_stmt>
	<if pos:line="452" pos:column="9">if <condition pos:line="452" pos:column="12">(<expr><operator pos:line="452" pos:column="13">!<pos:position pos:line="452" pos:column="14"/></operator><call><name pos:line="452" pos:column="14">strcmp<pos:position pos:line="452" pos:column="20"/></name><argument_list pos:line="452" pos:column="20">(<argument><expr><name><name pos:line="452" pos:column="21">sb<pos:position pos:line="452" pos:column="23"/></name><operator pos:line="452" pos:column="23">.<pos:position pos:line="452" pos:column="24"/></operator><name pos:line="452" pos:column="24">buf<pos:position pos:line="452" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="452" pos:column="29">"t"<pos:position pos:line="452" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="452" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="452" pos:column="34"/></condition><then pos:line="452" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="453" pos:column="17">state<pos:position pos:line="453" pos:column="22"/></name><operator pos:line="453" pos:column="22">-&gt;<pos:position pos:line="453" pos:column="27"/></operator><name pos:line="453" pos:column="24">keep<pos:position pos:line="453" pos:column="28"/></name></name> <operator pos:line="453" pos:column="29">=<pos:position pos:line="453" pos:column="30"/></operator> <name pos:line="453" pos:column="31">KEEP_TRUE<pos:position pos:line="453" pos:column="40"/></name></expr>;<pos:position pos:line="453" pos:column="41"/></expr_stmt></block></then>
	<elseif pos:line="454" pos:column="9">else <if pos:line="454" pos:column="14">if <condition pos:line="454" pos:column="17">(<expr><operator pos:line="454" pos:column="18">!<pos:position pos:line="454" pos:column="19"/></operator><call><name pos:line="454" pos:column="19">strcmp<pos:position pos:line="454" pos:column="25"/></name><argument_list pos:line="454" pos:column="25">(<argument><expr><name><name pos:line="454" pos:column="26">sb<pos:position pos:line="454" pos:column="28"/></name><operator pos:line="454" pos:column="28">.<pos:position pos:line="454" pos:column="29"/></operator><name pos:line="454" pos:column="29">buf<pos:position pos:line="454" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="454" pos:column="34">"b"<pos:position pos:line="454" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="454" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="454" pos:column="39"/></condition><then pos:line="454" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="455" pos:column="17">state<pos:position pos:line="455" pos:column="22"/></name><operator pos:line="455" pos:column="22">-&gt;<pos:position pos:line="455" pos:column="27"/></operator><name pos:line="455" pos:column="24">keep<pos:position pos:line="455" pos:column="28"/></name></name> <operator pos:line="455" pos:column="29">=<pos:position pos:line="455" pos:column="30"/></operator> <name pos:line="455" pos:column="31">KEEP_NON_PATCH<pos:position pos:line="455" pos:column="45"/></name></expr>;<pos:position pos:line="455" pos:column="46"/></expr_stmt></block></then></if></elseif>
	<else pos:line="456" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="457" pos:column="17">state<pos:position pos:line="457" pos:column="22"/></name><operator pos:line="457" pos:column="22">-&gt;<pos:position pos:line="457" pos:column="27"/></operator><name pos:line="457" pos:column="24">keep<pos:position pos:line="457" pos:column="28"/></name></name> <operator pos:line="457" pos:column="29">=<pos:position pos:line="457" pos:column="30"/></operator> <name pos:line="457" pos:column="31">KEEP_FALSE<pos:position pos:line="457" pos:column="41"/></name></expr>;<pos:position pos:line="457" pos:column="42"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="459" pos:column="9">read_state_file<pos:position pos:line="459" pos:column="24"/></name><argument_list pos:line="459" pos:column="24">(<argument><expr><operator pos:line="459" pos:column="25">&amp;<pos:position pos:line="459" pos:column="30"/></operator><name pos:line="459" pos:column="26">sb<pos:position pos:line="459" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="459" pos:column="30">state<pos:position pos:line="459" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="459" pos:column="37">"messageid"<pos:position pos:line="459" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="459" pos:column="50">1<pos:position pos:line="459" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="459" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="459" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="460" pos:column="9">state<pos:position pos:line="460" pos:column="14"/></name><operator pos:line="460" pos:column="14">-&gt;<pos:position pos:line="460" pos:column="19"/></operator><name pos:line="460" pos:column="16">message_id<pos:position pos:line="460" pos:column="26"/></name></name> <operator pos:line="460" pos:column="27">=<pos:position pos:line="460" pos:column="28"/></operator> <operator pos:line="460" pos:column="29">!<pos:position pos:line="460" pos:column="30"/></operator><call><name pos:line="460" pos:column="30">strcmp<pos:position pos:line="460" pos:column="36"/></name><argument_list pos:line="460" pos:column="36">(<argument><expr><name><name pos:line="460" pos:column="37">sb<pos:position pos:line="460" pos:column="39"/></name><operator pos:line="460" pos:column="39">.<pos:position pos:line="460" pos:column="40"/></operator><name pos:line="460" pos:column="40">buf<pos:position pos:line="460" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="460" pos:column="45">"t"<pos:position pos:line="460" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="460" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="460" pos:column="50"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="462" pos:column="9">read_state_file<pos:position pos:line="462" pos:column="24"/></name><argument_list pos:line="462" pos:column="24">(<argument><expr><operator pos:line="462" pos:column="25">&amp;<pos:position pos:line="462" pos:column="30"/></operator><name pos:line="462" pos:column="26">sb<pos:position pos:line="462" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="462" pos:column="30">state<pos:position pos:line="462" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="462" pos:column="37">"scissors"<pos:position pos:line="462" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="462" pos:column="49">1<pos:position pos:line="462" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="462" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="462" pos:column="52"/></expr_stmt>
	<if pos:line="463" pos:column="9">if <condition pos:line="463" pos:column="12">(<expr><operator pos:line="463" pos:column="13">!<pos:position pos:line="463" pos:column="14"/></operator><call><name pos:line="463" pos:column="14">strcmp<pos:position pos:line="463" pos:column="20"/></name><argument_list pos:line="463" pos:column="20">(<argument><expr><name><name pos:line="463" pos:column="21">sb<pos:position pos:line="463" pos:column="23"/></name><operator pos:line="463" pos:column="23">.<pos:position pos:line="463" pos:column="24"/></operator><name pos:line="463" pos:column="24">buf<pos:position pos:line="463" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="463" pos:column="29">"t"<pos:position pos:line="463" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="463" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="463" pos:column="34"/></condition><then pos:line="463" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="464" pos:column="17">state<pos:position pos:line="464" pos:column="22"/></name><operator pos:line="464" pos:column="22">-&gt;<pos:position pos:line="464" pos:column="27"/></operator><name pos:line="464" pos:column="24">scissors<pos:position pos:line="464" pos:column="32"/></name></name> <operator pos:line="464" pos:column="33">=<pos:position pos:line="464" pos:column="34"/></operator> <name pos:line="464" pos:column="35">SCISSORS_TRUE<pos:position pos:line="464" pos:column="48"/></name></expr>;<pos:position pos:line="464" pos:column="49"/></expr_stmt></block></then>
	<elseif pos:line="465" pos:column="9">else <if pos:line="465" pos:column="14">if <condition pos:line="465" pos:column="17">(<expr><operator pos:line="465" pos:column="18">!<pos:position pos:line="465" pos:column="19"/></operator><call><name pos:line="465" pos:column="19">strcmp<pos:position pos:line="465" pos:column="25"/></name><argument_list pos:line="465" pos:column="25">(<argument><expr><name><name pos:line="465" pos:column="26">sb<pos:position pos:line="465" pos:column="28"/></name><operator pos:line="465" pos:column="28">.<pos:position pos:line="465" pos:column="29"/></operator><name pos:line="465" pos:column="29">buf<pos:position pos:line="465" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="465" pos:column="34">"f"<pos:position pos:line="465" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="465" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="465" pos:column="39"/></condition><then pos:line="465" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="466" pos:column="17">state<pos:position pos:line="466" pos:column="22"/></name><operator pos:line="466" pos:column="22">-&gt;<pos:position pos:line="466" pos:column="27"/></operator><name pos:line="466" pos:column="24">scissors<pos:position pos:line="466" pos:column="32"/></name></name> <operator pos:line="466" pos:column="33">=<pos:position pos:line="466" pos:column="34"/></operator> <name pos:line="466" pos:column="35">SCISSORS_FALSE<pos:position pos:line="466" pos:column="49"/></name></expr>;<pos:position pos:line="466" pos:column="50"/></expr_stmt></block></then></if></elseif>
	<else pos:line="467" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="468" pos:column="17">state<pos:position pos:line="468" pos:column="22"/></name><operator pos:line="468" pos:column="22">-&gt;<pos:position pos:line="468" pos:column="27"/></operator><name pos:line="468" pos:column="24">scissors<pos:position pos:line="468" pos:column="32"/></name></name> <operator pos:line="468" pos:column="33">=<pos:position pos:line="468" pos:column="34"/></operator> <name pos:line="468" pos:column="35">SCISSORS_UNSET<pos:position pos:line="468" pos:column="49"/></name></expr>;<pos:position pos:line="468" pos:column="50"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="470" pos:column="9">read_state_file<pos:position pos:line="470" pos:column="24"/></name><argument_list pos:line="470" pos:column="24">(<argument><expr><operator pos:line="470" pos:column="25">&amp;<pos:position pos:line="470" pos:column="30"/></operator><name pos:line="470" pos:column="26">sb<pos:position pos:line="470" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="470" pos:column="30">state<pos:position pos:line="470" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="470" pos:column="37">"apply-opt"<pos:position pos:line="470" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="470" pos:column="50">1<pos:position pos:line="470" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="470" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="471" pos:column="9">argv_array_clear<pos:position pos:line="471" pos:column="25"/></name><argument_list pos:line="471" pos:column="25">(<argument><expr><operator pos:line="471" pos:column="26">&amp;<pos:position pos:line="471" pos:column="31"/></operator><name><name pos:line="471" pos:column="27">state<pos:position pos:line="471" pos:column="32"/></name><operator pos:line="471" pos:column="32">-&gt;<pos:position pos:line="471" pos:column="37"/></operator><name pos:line="471" pos:column="34">git_apply_opts<pos:position pos:line="471" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="471" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="471" pos:column="50"/></expr_stmt>
	<if pos:line="472" pos:column="9">if <condition pos:line="472" pos:column="12">(<expr><call><name pos:line="472" pos:column="13">sq_dequote_to_argv_array<pos:position pos:line="472" pos:column="37"/></name><argument_list pos:line="472" pos:column="37">(<argument><expr><name><name pos:line="472" pos:column="38">sb<pos:position pos:line="472" pos:column="40"/></name><operator pos:line="472" pos:column="40">.<pos:position pos:line="472" pos:column="41"/></operator><name pos:line="472" pos:column="41">buf<pos:position pos:line="472" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="472" pos:column="46">&amp;<pos:position pos:line="472" pos:column="51"/></operator><name><name pos:line="472" pos:column="47">state<pos:position pos:line="472" pos:column="52"/></name><operator pos:line="472" pos:column="52">-&gt;<pos:position pos:line="472" pos:column="57"/></operator><name pos:line="472" pos:column="54">git_apply_opts<pos:position pos:line="472" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="472" pos:column="69"/></argument_list></call> <operator pos:line="472" pos:column="70">&lt;<pos:position pos:line="472" pos:column="74"/></operator> <literal type="number" pos:line="472" pos:column="72">0<pos:position pos:line="472" pos:column="73"/></literal></expr>)<pos:position pos:line="472" pos:column="74"/></condition><then pos:line="472" pos:column="74">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="473" pos:column="17">die<pos:position pos:line="473" pos:column="20"/></name><argument_list pos:line="473" pos:column="20">(<argument><expr><call><name pos:line="473" pos:column="21">_<pos:position pos:line="473" pos:column="22"/></name><argument_list pos:line="473" pos:column="22">(<argument><expr><literal type="string" pos:line="473" pos:column="23">"could not parse %s"<pos:position pos:line="473" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="473" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="473" pos:column="46">am_path<pos:position pos:line="473" pos:column="53"/></name><argument_list pos:line="473" pos:column="53">(<argument><expr><name pos:line="473" pos:column="54">state<pos:position pos:line="473" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="473" pos:column="61">"apply-opt"<pos:position pos:line="473" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="473" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="473" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="473" pos:column="75"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="475" pos:column="9">state<pos:position pos:line="475" pos:column="14"/></name><operator pos:line="475" pos:column="14">-&gt;<pos:position pos:line="475" pos:column="19"/></operator><name pos:line="475" pos:column="16">rebasing<pos:position pos:line="475" pos:column="24"/></name></name> <operator pos:line="475" pos:column="25">=<pos:position pos:line="475" pos:column="26"/></operator> <operator pos:line="475" pos:column="27">!<pos:position pos:line="475" pos:column="28"/></operator><operator pos:line="475" pos:column="28">!<pos:position pos:line="475" pos:column="29"/></operator><call><name pos:line="475" pos:column="29">file_exists<pos:position pos:line="475" pos:column="40"/></name><argument_list pos:line="475" pos:column="40">(<argument><expr><call><name pos:line="475" pos:column="41">am_path<pos:position pos:line="475" pos:column="48"/></name><argument_list pos:line="475" pos:column="48">(<argument><expr><name pos:line="475" pos:column="49">state<pos:position pos:line="475" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="475" pos:column="56">"rebasing"<pos:position pos:line="475" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="475" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="475" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="475" pos:column="69"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="477" pos:column="9">strbuf_release<pos:position pos:line="477" pos:column="23"/></name><argument_list pos:line="477" pos:column="23">(<argument><expr><operator pos:line="477" pos:column="24">&amp;<pos:position pos:line="477" pos:column="29"/></operator><name pos:line="477" pos:column="25">sb<pos:position pos:line="477" pos:column="27"/></name></expr></argument>)<pos:position pos:line="477" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="477" pos:column="29"/></expr_stmt>
}<pos:position pos:line="478" pos:column="2"/></block></function>


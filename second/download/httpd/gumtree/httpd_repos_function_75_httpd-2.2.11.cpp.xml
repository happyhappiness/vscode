<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_75_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ssl_rand_seed<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">nDone<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><literal type="number" pos:line="3" pos:column="17">0<pos:position pos:line="3" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">n<pos:position pos:line="4" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="12">l<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">time_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">t<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">pid_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">pid<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">char<pos:position pos:line="7" pos:column="18"/></name></type> <name><name pos:line="7" pos:column="19">stackdata<pos:position pos:line="7" pos:column="28"/></name><index pos:line="7" pos:column="28">[<expr><literal type="number" pos:line="7" pos:column="29">256<pos:position pos:line="7" pos:column="32"/></literal></expr>]<pos:position pos:line="7" pos:column="33"/></index></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/*
     * seed in the current time (usually just 4 bytes)
     */</comment>
    <expr_stmt><expr><name pos:line="12" pos:column="5">t<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <call><name pos:line="12" pos:column="9">time<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">NULL<pos:position pos:line="12" pos:column="18"/></name></expr></argument>)<pos:position pos:line="12" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">l<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <sizeof pos:line="13" pos:column="9">sizeof<argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">time_t<pos:position pos:line="13" pos:column="22"/></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></sizeof></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">RAND_seed<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><operator pos:line="14" pos:column="15">(<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">unsigned<pos:position pos:line="14" pos:column="24"/></name> <name pos:line="14" pos:column="25">char<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">*<pos:position pos:line="14" pos:column="31"/></operator><operator pos:line="14" pos:column="31">)<pos:position pos:line="14" pos:column="32"/></operator><operator pos:line="14" pos:column="32">&amp;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="33">t<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="36">l<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">nDone<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">+=<pos:position pos:line="15" pos:column="13"/></operator> <name pos:line="15" pos:column="14">l<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/*
     * seed in the current process id (usually just 4 bytes)
     */</comment>
    <expr_stmt><expr><name pos:line="20" pos:column="5">pid<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <call><name pos:line="20" pos:column="11">getpid<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">()<pos:position pos:line="20" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">l<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <sizeof pos:line="21" pos:column="9">sizeof<argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">pid_t<pos:position pos:line="21" pos:column="21"/></name></expr></argument>)<pos:position pos:line="21" pos:column="22"/></argument_list></sizeof></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">RAND_seed<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><operator pos:line="22" pos:column="15">(<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">unsigned<pos:position pos:line="22" pos:column="24"/></name> <name pos:line="22" pos:column="25">char<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">*<pos:position pos:line="22" pos:column="31"/></operator><operator pos:line="22" pos:column="31">)<pos:position pos:line="22" pos:column="32"/></operator><operator pos:line="22" pos:column="32">&amp;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="33">pid<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">l<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">nDone<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">+=<pos:position pos:line="23" pos:column="13"/></operator> <name pos:line="23" pos:column="14">l<pos:position pos:line="23" pos:column="15"/></name></expr>;<pos:position pos:line="23" pos:column="16"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/*
     * seed in some current state of the run-time stack (128 bytes)
     */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">n<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <call><name pos:line="28" pos:column="9">ssl_rand_choosenum<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><literal type="number" pos:line="28" pos:column="28">0<pos:position pos:line="28" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="31">sizeof<argument_list pos:line="28" pos:column="37">(<argument><expr><name pos:line="28" pos:column="38">stackdata<pos:position pos:line="28" pos:column="47"/></name></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></sizeof><operator pos:line="28" pos:column="48">-<pos:position pos:line="28" pos:column="49"/></operator><literal type="number" pos:line="28" pos:column="49">128<pos:position pos:line="28" pos:column="52"/></literal><operator pos:line="28" pos:column="52">-<pos:position pos:line="28" pos:column="53"/></operator><literal type="number" pos:line="28" pos:column="53">1<pos:position pos:line="28" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">RAND_seed<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">stackdata<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">+<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">n<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="28">128<pos:position pos:line="29" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">nDone<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">+=<pos:position pos:line="30" pos:column="13"/></operator> <literal type="number" pos:line="30" pos:column="14">128<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

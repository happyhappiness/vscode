<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1192_httpd-2.4.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ap_cache_control<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">request_rec<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">r<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">cache_control_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">cc<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
        <parameter><decl><type><specifier pos:line="2" pos:column="9">const<pos:position pos:line="2" pos:column="14"/></specifier> <name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">cc_header<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">pragma_header<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">apr_table_t<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">headers<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">last<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">cc<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">parsed<pos:position pos:line="6" pos:column="19"/></name></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20"> <block pos:line="6" pos:column="21">{
        <return pos:line="7" pos:column="9">return <expr><name><name pos:line="7" pos:column="16">cc<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">cache_control<pos:position pos:line="7" pos:column="33"/></name></name> <operator pos:line="7" pos:column="34">||<pos:position pos:line="7" pos:column="36"/></operator> <name><name pos:line="7" pos:column="37">cc<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">-&gt;<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="41">pragma<pos:position pos:line="7" pos:column="47"/></name></name></expr>;<pos:position pos:line="7" pos:column="48"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="10" pos:column="5">cc<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">parsed<pos:position pos:line="10" pos:column="15"/></name></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">1<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">cc<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">max_age_value<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">cc<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">max_stale_value<pos:position pos:line="12" pos:column="24"/></name></name> <operator pos:line="12" pos:column="25">=<pos:position pos:line="12" pos:column="26"/></operator> <operator pos:line="12" pos:column="27">-<pos:position pos:line="12" pos:column="28"/></operator><literal type="number" pos:line="12" pos:column="28">1<pos:position pos:line="12" pos:column="29"/></literal></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">cc<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">min_fresh_value<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <operator pos:line="13" pos:column="27">-<pos:position pos:line="13" pos:column="28"/></operator><literal type="number" pos:line="13" pos:column="28">1<pos:position pos:line="13" pos:column="29"/></literal></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">cc<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">s_maxage_value<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <operator pos:line="14" pos:column="26">-<pos:position pos:line="14" pos:column="27"/></operator><literal type="number" pos:line="14" pos:column="27">1<pos:position pos:line="14" pos:column="28"/></literal></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">pragma_header<pos:position pos:line="16" pos:column="22"/></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23"> <block pos:line="16" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">header<pos:position pos:line="17" pos:column="21"/></name> <init pos:line="17" pos:column="22">= <expr><call><name pos:line="17" pos:column="24">apr_pstrdup<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name><name pos:line="17" pos:column="36">r<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">pool<pos:position pos:line="17" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="45">pragma_header<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="60"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">const<pos:position pos:line="18" pos:column="14"/></specifier> <name pos:line="18" pos:column="15">char<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">token<pos:position pos:line="18" pos:column="26"/></name> <init pos:line="18" pos:column="27">= <expr><call><name pos:line="18" pos:column="29">cache_strqtok<pos:position pos:line="18" pos:column="42"/></name><argument_list pos:line="18" pos:column="42">(<argument><expr><name pos:line="18" pos:column="43">header<pos:position pos:line="18" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="51">CACHE_SEPARATOR<pos:position pos:line="18" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="68">&amp;<pos:position pos:line="18" pos:column="73"/></operator><name pos:line="18" pos:column="69">last<pos:position pos:line="18" pos:column="73"/></name></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="75"/></decl_stmt>
        <while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><name pos:line="19" pos:column="16">token<pos:position pos:line="19" pos:column="21"/></name></expr>)<pos:position pos:line="19" pos:column="22"/></condition> <block pos:line="19" pos:column="23">{
            <comment type="block" pos:line="20" pos:column="13">/* handle most common quickest case... */</comment>
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><operator pos:line="21" pos:column="17">!<pos:position pos:line="21" pos:column="18"/></operator><call><name pos:line="21" pos:column="18">strcmp<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">token<pos:position pos:line="21" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="32">"no-cache"<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="44"/></condition><then pos:line="21" pos:column="44"> <block pos:line="21" pos:column="45">{
                <expr_stmt><expr><name><name pos:line="22" pos:column="17">cc<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">no_cache<pos:position pos:line="22" pos:column="29"/></name></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <literal type="number" pos:line="22" pos:column="32">1<pos:position pos:line="22" pos:column="33"/></literal></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="23" pos:column="14"/></block></then>
            <comment type="block" pos:line="24" pos:column="13">/* ...then try slowest case */</comment>
            <elseif pos:line="25" pos:column="13">else <if pos:line="25" pos:column="18">if <condition pos:line="25" pos:column="21">(<expr><operator pos:line="25" pos:column="22">!<pos:position pos:line="25" pos:column="23"/></operator><call><name pos:line="25" pos:column="23">strcasecmp<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">token<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="41">"no-cache"<pos:position pos:line="25" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="53"/></condition><then pos:line="25" pos:column="53"> <block pos:line="25" pos:column="54">{
                <expr_stmt><expr><name><name pos:line="26" pos:column="17">cc<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">no_cache<pos:position pos:line="26" pos:column="29"/></name></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <literal type="number" pos:line="26" pos:column="32">1<pos:position pos:line="26" pos:column="33"/></literal></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></then></if></elseif></if>
            <expr_stmt><expr><name pos:line="28" pos:column="13">token<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <call><name pos:line="28" pos:column="21">cache_strqtok<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">NULL<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="41">CACHE_SEPARATOR<pos:position pos:line="28" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="58">&amp;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="59">last<pos:position pos:line="28" pos:column="63"/></name></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></while>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">cc<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">pragma<pos:position pos:line="30" pos:column="19"/></name></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <literal type="number" pos:line="30" pos:column="22">1<pos:position pos:line="30" pos:column="23"/></literal></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">cc_header<pos:position pos:line="33" pos:column="18"/></name></expr>)<pos:position pos:line="33" pos:column="19"/></condition><then pos:line="33" pos:column="19"> <block pos:line="33" pos:column="20">{
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">char<pos:position pos:line="34" pos:column="13"/></name> <modifier pos:line="34" pos:column="14">*<pos:position pos:line="34" pos:column="15"/></modifier></type><name pos:line="34" pos:column="15">header<pos:position pos:line="34" pos:column="21"/></name> <init pos:line="34" pos:column="22">= <expr><call><name pos:line="34" pos:column="24">apr_pstrdup<pos:position pos:line="34" pos:column="35"/></name><argument_list pos:line="34" pos:column="35">(<argument><expr><name><name pos:line="34" pos:column="36">r<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">-&gt;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="39">pool<pos:position pos:line="34" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="45">cc_header<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="56"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="35" pos:column="9">const<pos:position pos:line="35" pos:column="14"/></specifier> <name pos:line="35" pos:column="15">char<pos:position pos:line="35" pos:column="19"/></name> <modifier pos:line="35" pos:column="20">*<pos:position pos:line="35" pos:column="21"/></modifier></type><name pos:line="35" pos:column="21">token<pos:position pos:line="35" pos:column="26"/></name> <init pos:line="35" pos:column="27">= <expr><call><name pos:line="35" pos:column="29">cache_strqtok<pos:position pos:line="35" pos:column="42"/></name><argument_list pos:line="35" pos:column="42">(<argument><expr><name pos:line="35" pos:column="43">header<pos:position pos:line="35" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="51">CACHE_SEPARATOR<pos:position pos:line="35" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="68">&amp;<pos:position pos:line="35" pos:column="73"/></operator><name pos:line="35" pos:column="69">last<pos:position pos:line="35" pos:column="73"/></name></expr></argument>)<pos:position pos:line="35" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="75"/></decl_stmt>
        <while pos:line="36" pos:column="9">while <condition pos:line="36" pos:column="15">(<expr><name pos:line="36" pos:column="16">token<pos:position pos:line="36" pos:column="21"/></name></expr>)<pos:position pos:line="36" pos:column="22"/></condition> <block pos:line="36" pos:column="23">{
            <switch pos:line="37" pos:column="13">switch <condition pos:line="37" pos:column="20">(<expr><name><name pos:line="37" pos:column="21">token<pos:position pos:line="37" pos:column="26"/></name><index pos:line="37" pos:column="26">[<expr><literal type="number" pos:line="37" pos:column="27">0<pos:position pos:line="37" pos:column="28"/></literal></expr>]<pos:position pos:line="37" pos:column="29"/></index></name></expr>)<pos:position pos:line="37" pos:column="30"/></condition> <block pos:line="37" pos:column="31">{
            <case pos:line="38" pos:column="13">case <expr><literal type="char" pos:line="38" pos:column="18">'n'<pos:position pos:line="38" pos:column="21"/></literal></expr>:<pos:position pos:line="38" pos:column="22"/></case>
            <case pos:line="39" pos:column="13">case <expr><literal type="char" pos:line="39" pos:column="18">'N'<pos:position pos:line="39" pos:column="21"/></literal></expr>:<pos:position pos:line="39" pos:column="22"/></case> <block pos:line="39" pos:column="23">{
                <comment type="block" pos:line="40" pos:column="17">/* handle most common quickest cases... */</comment>
                <if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">!<pos:position pos:line="41" pos:column="22"/></operator><call><name pos:line="41" pos:column="22">strcmp<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">token<pos:position pos:line="41" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="36">"no-cache"<pos:position pos:line="41" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="48"/></condition><then pos:line="41" pos:column="48"> <block pos:line="41" pos:column="49">{
                    <expr_stmt><expr><name><name pos:line="42" pos:column="21">cc<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">-&gt;<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="25">no_cache<pos:position pos:line="42" pos:column="33"/></name></name> <operator pos:line="42" pos:column="34">=<pos:position pos:line="42" pos:column="35"/></operator> <literal type="number" pos:line="42" pos:column="36">1<pos:position pos:line="42" pos:column="37"/></literal></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="43" pos:column="18"/></block></then>
                <elseif pos:line="44" pos:column="17">else <if pos:line="44" pos:column="22">if <condition pos:line="44" pos:column="25">(<expr><operator pos:line="44" pos:column="26">!<pos:position pos:line="44" pos:column="27"/></operator><call><name pos:line="44" pos:column="27">strcmp<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">token<pos:position pos:line="44" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="41">"no-store"<pos:position pos:line="44" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="53"/></condition><then pos:line="44" pos:column="53"> <block pos:line="44" pos:column="54">{
                    <expr_stmt><expr><name><name pos:line="45" pos:column="21">cc<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">-&gt;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="25">no_store<pos:position pos:line="45" pos:column="33"/></name></name> <operator pos:line="45" pos:column="34">=<pos:position pos:line="45" pos:column="35"/></operator> <literal type="number" pos:line="45" pos:column="36">1<pos:position pos:line="45" pos:column="37"/></literal></expr>;<pos:position pos:line="45" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="46" pos:column="18"/></block></then></if></elseif>
                <comment type="block" pos:line="47" pos:column="17">/* ...then try slowest cases */</comment>
                <elseif pos:line="48" pos:column="17">else <if pos:line="48" pos:column="22">if <condition pos:line="48" pos:column="25">(<expr><operator pos:line="48" pos:column="26">!<pos:position pos:line="48" pos:column="27"/></operator><call><name pos:line="48" pos:column="27">strncasecmp<pos:position pos:line="48" pos:column="38"/></name><argument_list pos:line="48" pos:column="38">(<argument><expr><name pos:line="48" pos:column="39">token<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="46">"no-cache"<pos:position pos:line="48" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="58">8<pos:position pos:line="48" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="61"/></condition><then pos:line="48" pos:column="61"> <block pos:line="48" pos:column="62">{
                    <if pos:line="49" pos:column="21">if <condition pos:line="49" pos:column="24">(<expr><name><name pos:line="49" pos:column="25">token<pos:position pos:line="49" pos:column="30"/></name><index pos:line="49" pos:column="30">[<expr><literal type="number" pos:line="49" pos:column="31">8<pos:position pos:line="49" pos:column="32"/></literal></expr>]<pos:position pos:line="49" pos:column="33"/></index></name> <operator pos:line="49" pos:column="34">==<pos:position pos:line="49" pos:column="36"/></operator> <literal type="char" pos:line="49" pos:column="37">'='<pos:position pos:line="49" pos:column="40"/></literal></expr>)<pos:position pos:line="49" pos:column="41"/></condition><then pos:line="49" pos:column="41"> <block pos:line="49" pos:column="42">{
                        <if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><call><name pos:line="50" pos:column="29">apr_table_get<pos:position pos:line="50" pos:column="42"/></name><argument_list pos:line="50" pos:column="42">(<argument><expr><name pos:line="50" pos:column="43">headers<pos:position pos:line="50" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="52">token<pos:position pos:line="50" pos:column="57"/></name> <operator pos:line="50" pos:column="58">+<pos:position pos:line="50" pos:column="59"/></operator> <literal type="number" pos:line="50" pos:column="60">9<pos:position pos:line="50" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="63"/></condition><then pos:line="50" pos:column="63"> <block pos:line="50" pos:column="64">{
                            <expr_stmt><expr><name><name pos:line="51" pos:column="29">cc<pos:position pos:line="51" pos:column="31"/></name><operator pos:line="51" pos:column="31">-&gt;<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="33">no_cache_header<pos:position pos:line="51" pos:column="48"/></name></name> <operator pos:line="51" pos:column="49">=<pos:position pos:line="51" pos:column="50"/></operator> <literal type="number" pos:line="51" pos:column="51">1<pos:position pos:line="51" pos:column="52"/></literal></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
                        }<pos:position pos:line="52" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="53" pos:column="22"/></block></then>
                    <elseif pos:line="54" pos:column="21">else <if pos:line="54" pos:column="26">if <condition pos:line="54" pos:column="29">(<expr><operator pos:line="54" pos:column="30">!<pos:position pos:line="54" pos:column="31"/></operator><name><name pos:line="54" pos:column="31">token<pos:position pos:line="54" pos:column="36"/></name><index pos:line="54" pos:column="36">[<expr><literal type="number" pos:line="54" pos:column="37">8<pos:position pos:line="54" pos:column="38"/></literal></expr>]<pos:position pos:line="54" pos:column="39"/></index></name></expr>)<pos:position pos:line="54" pos:column="40"/></condition><then pos:line="54" pos:column="40"> <block pos:line="54" pos:column="41">{
                        <expr_stmt><expr><name><name pos:line="55" pos:column="25">cc<pos:position pos:line="55" pos:column="27"/></name><operator pos:line="55" pos:column="27">-&gt;<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="29">no_cache<pos:position pos:line="55" pos:column="37"/></name></name> <operator pos:line="55" pos:column="38">=<pos:position pos:line="55" pos:column="39"/></operator> <literal type="number" pos:line="55" pos:column="40">1<pos:position pos:line="55" pos:column="41"/></literal></expr>;<pos:position pos:line="55" pos:column="42"/></expr_stmt>
                    }<pos:position pos:line="56" pos:column="22"/></block></then></if></elseif></if>
                    <break pos:line="57" pos:column="21">break;<pos:position pos:line="57" pos:column="27"/></break>
                }<pos:position pos:line="58" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="59" pos:column="17">else <if pos:line="59" pos:column="22">if <condition pos:line="59" pos:column="25">(<expr><operator pos:line="59" pos:column="26">!<pos:position pos:line="59" pos:column="27"/></operator><call><name pos:line="59" pos:column="27">strcasecmp<pos:position pos:line="59" pos:column="37"/></name><argument_list pos:line="59" pos:column="37">(<argument><expr><name pos:line="59" pos:column="38">token<pos:position pos:line="59" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="45">"no-store"<pos:position pos:line="59" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="57"/></condition><then pos:line="59" pos:column="57"> <block pos:line="59" pos:column="58">{
                    <expr_stmt><expr><name><name pos:line="60" pos:column="21">cc<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">-&gt;<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="25">no_store<pos:position pos:line="60" pos:column="33"/></name></name> <operator pos:line="60" pos:column="34">=<pos:position pos:line="60" pos:column="35"/></operator> <literal type="number" pos:line="60" pos:column="36">1<pos:position pos:line="60" pos:column="37"/></literal></expr>;<pos:position pos:line="60" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="61" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="62" pos:column="17">else <if pos:line="62" pos:column="22">if <condition pos:line="62" pos:column="25">(<expr><operator pos:line="62" pos:column="26">!<pos:position pos:line="62" pos:column="27"/></operator><call><name pos:line="62" pos:column="27">strcasecmp<pos:position pos:line="62" pos:column="37"/></name><argument_list pos:line="62" pos:column="37">(<argument><expr><name pos:line="62" pos:column="38">token<pos:position pos:line="62" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="45">"no-transform"<pos:position pos:line="62" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="61"/></condition><then pos:line="62" pos:column="61"> <block pos:line="62" pos:column="62">{
                    <expr_stmt><expr><name><name pos:line="63" pos:column="21">cc<pos:position pos:line="63" pos:column="23"/></name><operator pos:line="63" pos:column="23">-&gt;<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="25">no_transform<pos:position pos:line="63" pos:column="37"/></name></name> <operator pos:line="63" pos:column="38">=<pos:position pos:line="63" pos:column="39"/></operator> <literal type="number" pos:line="63" pos:column="40">1<pos:position pos:line="63" pos:column="41"/></literal></expr>;<pos:position pos:line="63" pos:column="42"/></expr_stmt>
                }<pos:position pos:line="64" pos:column="18"/></block></then></if></elseif></if>
                <break pos:line="65" pos:column="17">break;<pos:position pos:line="65" pos:column="23"/></break>
            }<pos:position pos:line="66" pos:column="14"/></block>
            <case pos:line="67" pos:column="13">case <expr><literal type="char" pos:line="67" pos:column="18">'m'<pos:position pos:line="67" pos:column="21"/></literal></expr>:<pos:position pos:line="67" pos:column="22"/></case>
            <case pos:line="68" pos:column="13">case <expr><literal type="char" pos:line="68" pos:column="18">'M'<pos:position pos:line="68" pos:column="21"/></literal></expr>:<pos:position pos:line="68" pos:column="22"/></case> <block pos:line="68" pos:column="23">{
                <comment type="block" pos:line="69" pos:column="17">/* handle most common quickest cases... */</comment>
                <if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><operator pos:line="70" pos:column="21">!<pos:position pos:line="70" pos:column="22"/></operator><call><name pos:line="70" pos:column="22">strcmp<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><name pos:line="70" pos:column="29">token<pos:position pos:line="70" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="36">"max-age=0"<pos:position pos:line="70" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="49"/></condition><then pos:line="70" pos:column="49"> <block pos:line="70" pos:column="50">{
                    <expr_stmt><expr><name><name pos:line="71" pos:column="21">cc<pos:position pos:line="71" pos:column="23"/></name><operator pos:line="71" pos:column="23">-&gt;<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="25">max_age<pos:position pos:line="71" pos:column="32"/></name></name> <operator pos:line="71" pos:column="33">=<pos:position pos:line="71" pos:column="34"/></operator> <literal type="number" pos:line="71" pos:column="35">1<pos:position pos:line="71" pos:column="36"/></literal></expr>;<pos:position pos:line="71" pos:column="37"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="72" pos:column="21">cc<pos:position pos:line="72" pos:column="23"/></name><operator pos:line="72" pos:column="23">-&gt;<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="25">max_age_value<pos:position pos:line="72" pos:column="38"/></name></name> <operator pos:line="72" pos:column="39">=<pos:position pos:line="72" pos:column="40"/></operator> <literal type="number" pos:line="72" pos:column="41">0<pos:position pos:line="72" pos:column="42"/></literal></expr>;<pos:position pos:line="72" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="73" pos:column="18"/></block></then>
                <elseif pos:line="74" pos:column="17">else <if pos:line="74" pos:column="22">if <condition pos:line="74" pos:column="25">(<expr><operator pos:line="74" pos:column="26">!<pos:position pos:line="74" pos:column="27"/></operator><call><name pos:line="74" pos:column="27">strcmp<pos:position pos:line="74" pos:column="33"/></name><argument_list pos:line="74" pos:column="33">(<argument><expr><name pos:line="74" pos:column="34">token<pos:position pos:line="74" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="41">"must-revalidate"<pos:position pos:line="74" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="60"/></condition><then pos:line="74" pos:column="60"> <block pos:line="74" pos:column="61">{
                    <expr_stmt><expr><name><name pos:line="75" pos:column="21">cc<pos:position pos:line="75" pos:column="23"/></name><operator pos:line="75" pos:column="23">-&gt;<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="25">must_revalidate<pos:position pos:line="75" pos:column="40"/></name></name> <operator pos:line="75" pos:column="41">=<pos:position pos:line="75" pos:column="42"/></operator> <literal type="number" pos:line="75" pos:column="43">1<pos:position pos:line="75" pos:column="44"/></literal></expr>;<pos:position pos:line="75" pos:column="45"/></expr_stmt>
                }<pos:position pos:line="76" pos:column="18"/></block></then></if></elseif>
                <comment type="block" pos:line="77" pos:column="17">/* ...then try slowest cases */</comment>
                <elseif pos:line="78" pos:column="17">else <if pos:line="78" pos:column="22">if <condition pos:line="78" pos:column="25">(<expr><operator pos:line="78" pos:column="26">!<pos:position pos:line="78" pos:column="27"/></operator><call><name pos:line="78" pos:column="27">strncasecmp<pos:position pos:line="78" pos:column="38"/></name><argument_list pos:line="78" pos:column="38">(<argument><expr><name pos:line="78" pos:column="39">token<pos:position pos:line="78" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="46">"max-age"<pos:position pos:line="78" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="57">7<pos:position pos:line="78" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="60"/></condition><then pos:line="78" pos:column="60"> <block pos:line="78" pos:column="61">{
                    <if pos:line="79" pos:column="21">if <condition pos:line="79" pos:column="24">(<expr><name><name pos:line="79" pos:column="25">token<pos:position pos:line="79" pos:column="30"/></name><index pos:line="79" pos:column="30">[<expr><literal type="number" pos:line="79" pos:column="31">7<pos:position pos:line="79" pos:column="32"/></literal></expr>]<pos:position pos:line="79" pos:column="33"/></index></name> <operator pos:line="79" pos:column="34">==<pos:position pos:line="79" pos:column="36"/></operator> <literal type="char" pos:line="79" pos:column="37">'='<pos:position pos:line="79" pos:column="40"/></literal></expr>)<pos:position pos:line="79" pos:column="41"/></condition><then pos:line="79" pos:column="41"> <block pos:line="79" pos:column="42">{
                        <expr_stmt><expr><name><name pos:line="80" pos:column="25">cc<pos:position pos:line="80" pos:column="27"/></name><operator pos:line="80" pos:column="27">-&gt;<pos:position pos:line="80" pos:column="32"/></operator><name pos:line="80" pos:column="29">max_age<pos:position pos:line="80" pos:column="36"/></name></name> <operator pos:line="80" pos:column="37">=<pos:position pos:line="80" pos:column="38"/></operator> <literal type="number" pos:line="80" pos:column="39">1<pos:position pos:line="80" pos:column="40"/></literal></expr>;<pos:position pos:line="80" pos:column="41"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="81" pos:column="25">cc<pos:position pos:line="81" pos:column="27"/></name><operator pos:line="81" pos:column="27">-&gt;<pos:position pos:line="81" pos:column="32"/></operator><name pos:line="81" pos:column="29">max_age_value<pos:position pos:line="81" pos:column="42"/></name></name> <operator pos:line="81" pos:column="43">=<pos:position pos:line="81" pos:column="44"/></operator> <call><name pos:line="81" pos:column="45">apr_atoi64<pos:position pos:line="81" pos:column="55"/></name><argument_list pos:line="81" pos:column="55">(<argument><expr><name pos:line="81" pos:column="56">token<pos:position pos:line="81" pos:column="61"/></name> <operator pos:line="81" pos:column="62">+<pos:position pos:line="81" pos:column="63"/></operator> <literal type="number" pos:line="81" pos:column="64">8<pos:position pos:line="81" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="67"/></expr_stmt>
                    }<pos:position pos:line="82" pos:column="22"/></block></then></if>
                    <break pos:line="83" pos:column="21">break;<pos:position pos:line="83" pos:column="27"/></break>
                }<pos:position pos:line="84" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="85" pos:column="17">else <if pos:line="85" pos:column="22">if <condition pos:line="85" pos:column="25">(<expr><operator pos:line="85" pos:column="26">!<pos:position pos:line="85" pos:column="27"/></operator><call><name pos:line="85" pos:column="27">strncasecmp<pos:position pos:line="85" pos:column="38"/></name><argument_list pos:line="85" pos:column="38">(<argument><expr><name pos:line="85" pos:column="39">token<pos:position pos:line="85" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="46">"max-stale"<pos:position pos:line="85" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="59">9<pos:position pos:line="85" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="62"/></condition><then pos:line="85" pos:column="62"> <block pos:line="85" pos:column="63">{
                    <if pos:line="86" pos:column="21">if <condition pos:line="86" pos:column="24">(<expr><name><name pos:line="86" pos:column="25">token<pos:position pos:line="86" pos:column="30"/></name><index pos:line="86" pos:column="30">[<expr><literal type="number" pos:line="86" pos:column="31">9<pos:position pos:line="86" pos:column="32"/></literal></expr>]<pos:position pos:line="86" pos:column="33"/></index></name> <operator pos:line="86" pos:column="34">==<pos:position pos:line="86" pos:column="36"/></operator> <literal type="char" pos:line="86" pos:column="37">'='<pos:position pos:line="86" pos:column="40"/></literal></expr>)<pos:position pos:line="86" pos:column="41"/></condition><then pos:line="86" pos:column="41"> <block pos:line="86" pos:column="42">{
                        <expr_stmt><expr><name><name pos:line="87" pos:column="25">cc<pos:position pos:line="87" pos:column="27"/></name><operator pos:line="87" pos:column="27">-&gt;<pos:position pos:line="87" pos:column="32"/></operator><name pos:line="87" pos:column="29">max_stale<pos:position pos:line="87" pos:column="38"/></name></name> <operator pos:line="87" pos:column="39">=<pos:position pos:line="87" pos:column="40"/></operator> <literal type="number" pos:line="87" pos:column="41">1<pos:position pos:line="87" pos:column="42"/></literal></expr>;<pos:position pos:line="87" pos:column="43"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="88" pos:column="25">cc<pos:position pos:line="88" pos:column="27"/></name><operator pos:line="88" pos:column="27">-&gt;<pos:position pos:line="88" pos:column="32"/></operator><name pos:line="88" pos:column="29">max_stale_value<pos:position pos:line="88" pos:column="44"/></name></name> <operator pos:line="88" pos:column="45">=<pos:position pos:line="88" pos:column="46"/></operator> <call><name pos:line="88" pos:column="47">apr_atoi64<pos:position pos:line="88" pos:column="57"/></name><argument_list pos:line="88" pos:column="57">(<argument><expr><name pos:line="88" pos:column="58">token<pos:position pos:line="88" pos:column="63"/></name> <operator pos:line="88" pos:column="64">+<pos:position pos:line="88" pos:column="65"/></operator> <literal type="number" pos:line="88" pos:column="66">10<pos:position pos:line="88" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="70"/></expr_stmt>
                    }<pos:position pos:line="89" pos:column="22"/></block></then>
                    <elseif pos:line="90" pos:column="21">else <if pos:line="90" pos:column="26">if <condition pos:line="90" pos:column="29">(<expr><operator pos:line="90" pos:column="30">!<pos:position pos:line="90" pos:column="31"/></operator><name><name pos:line="90" pos:column="31">token<pos:position pos:line="90" pos:column="36"/></name><index pos:line="90" pos:column="36">[<expr><literal type="number" pos:line="90" pos:column="37">10<pos:position pos:line="90" pos:column="39"/></literal></expr>]<pos:position pos:line="90" pos:column="40"/></index></name></expr>)<pos:position pos:line="90" pos:column="41"/></condition><then pos:line="90" pos:column="41"> <block pos:line="90" pos:column="42">{
                        <expr_stmt><expr><name><name pos:line="91" pos:column="25">cc<pos:position pos:line="91" pos:column="27"/></name><operator pos:line="91" pos:column="27">-&gt;<pos:position pos:line="91" pos:column="32"/></operator><name pos:line="91" pos:column="29">max_stale<pos:position pos:line="91" pos:column="38"/></name></name> <operator pos:line="91" pos:column="39">=<pos:position pos:line="91" pos:column="40"/></operator> <literal type="number" pos:line="91" pos:column="41">1<pos:position pos:line="91" pos:column="42"/></literal></expr>;<pos:position pos:line="91" pos:column="43"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="92" pos:column="25">cc<pos:position pos:line="92" pos:column="27"/></name><operator pos:line="92" pos:column="27">-&gt;<pos:position pos:line="92" pos:column="32"/></operator><name pos:line="92" pos:column="29">max_stale_value<pos:position pos:line="92" pos:column="44"/></name></name> <operator pos:line="92" pos:column="45">=<pos:position pos:line="92" pos:column="46"/></operator> <operator pos:line="92" pos:column="47">-<pos:position pos:line="92" pos:column="48"/></operator><literal type="number" pos:line="92" pos:column="48">1<pos:position pos:line="92" pos:column="49"/></literal></expr>;<pos:position pos:line="92" pos:column="50"/></expr_stmt>
                    }<pos:position pos:line="93" pos:column="22"/></block></then></if></elseif></if>
                    <break pos:line="94" pos:column="21">break;<pos:position pos:line="94" pos:column="27"/></break>
                }<pos:position pos:line="95" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="96" pos:column="17">else <if pos:line="96" pos:column="22">if <condition pos:line="96" pos:column="25">(<expr><operator pos:line="96" pos:column="26">!<pos:position pos:line="96" pos:column="27"/></operator><call><name pos:line="96" pos:column="27">strncasecmp<pos:position pos:line="96" pos:column="38"/></name><argument_list pos:line="96" pos:column="38">(<argument><expr><name pos:line="96" pos:column="39">token<pos:position pos:line="96" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="46">"min-fresh"<pos:position pos:line="96" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="96" pos:column="59">9<pos:position pos:line="96" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="62"/></condition><then pos:line="96" pos:column="62"> <block pos:line="96" pos:column="63">{
                    <if pos:line="97" pos:column="21">if <condition pos:line="97" pos:column="24">(<expr><name><name pos:line="97" pos:column="25">token<pos:position pos:line="97" pos:column="30"/></name><index pos:line="97" pos:column="30">[<expr><literal type="number" pos:line="97" pos:column="31">9<pos:position pos:line="97" pos:column="32"/></literal></expr>]<pos:position pos:line="97" pos:column="33"/></index></name> <operator pos:line="97" pos:column="34">==<pos:position pos:line="97" pos:column="36"/></operator> <literal type="char" pos:line="97" pos:column="37">'='<pos:position pos:line="97" pos:column="40"/></literal></expr>)<pos:position pos:line="97" pos:column="41"/></condition><then pos:line="97" pos:column="41"> <block pos:line="97" pos:column="42">{
                        <expr_stmt><expr><name><name pos:line="98" pos:column="25">cc<pos:position pos:line="98" pos:column="27"/></name><operator pos:line="98" pos:column="27">-&gt;<pos:position pos:line="98" pos:column="32"/></operator><name pos:line="98" pos:column="29">min_fresh<pos:position pos:line="98" pos:column="38"/></name></name> <operator pos:line="98" pos:column="39">=<pos:position pos:line="98" pos:column="40"/></operator> <literal type="number" pos:line="98" pos:column="41">1<pos:position pos:line="98" pos:column="42"/></literal></expr>;<pos:position pos:line="98" pos:column="43"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="99" pos:column="25">cc<pos:position pos:line="99" pos:column="27"/></name><operator pos:line="99" pos:column="27">-&gt;<pos:position pos:line="99" pos:column="32"/></operator><name pos:line="99" pos:column="29">min_fresh_value<pos:position pos:line="99" pos:column="44"/></name></name> <operator pos:line="99" pos:column="45">=<pos:position pos:line="99" pos:column="46"/></operator> <call><name pos:line="99" pos:column="47">apr_atoi64<pos:position pos:line="99" pos:column="57"/></name><argument_list pos:line="99" pos:column="57">(<argument><expr><name pos:line="99" pos:column="58">token<pos:position pos:line="99" pos:column="63"/></name> <operator pos:line="99" pos:column="64">+<pos:position pos:line="99" pos:column="65"/></operator> <literal type="number" pos:line="99" pos:column="66">10<pos:position pos:line="99" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="70"/></expr_stmt>
                    }<pos:position pos:line="100" pos:column="22"/></block></then></if>
                    <break pos:line="101" pos:column="21">break;<pos:position pos:line="101" pos:column="27"/></break>
                }<pos:position pos:line="102" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="103" pos:column="17">else <if pos:line="103" pos:column="22">if <condition pos:line="103" pos:column="25">(<expr><operator pos:line="103" pos:column="26">!<pos:position pos:line="103" pos:column="27"/></operator><call><name pos:line="103" pos:column="27">strcasecmp<pos:position pos:line="103" pos:column="37"/></name><argument_list pos:line="103" pos:column="37">(<argument><expr><name pos:line="103" pos:column="38">token<pos:position pos:line="103" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="45">"must-revalidate"<pos:position pos:line="103" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="64"/></condition><then pos:line="103" pos:column="64"> <block pos:line="103" pos:column="65">{
                    <expr_stmt><expr><name><name pos:line="104" pos:column="21">cc<pos:position pos:line="104" pos:column="23"/></name><operator pos:line="104" pos:column="23">-&gt;<pos:position pos:line="104" pos:column="28"/></operator><name pos:line="104" pos:column="25">must_revalidate<pos:position pos:line="104" pos:column="40"/></name></name> <operator pos:line="104" pos:column="41">=<pos:position pos:line="104" pos:column="42"/></operator> <literal type="number" pos:line="104" pos:column="43">1<pos:position pos:line="104" pos:column="44"/></literal></expr>;<pos:position pos:line="104" pos:column="45"/></expr_stmt>
                }<pos:position pos:line="105" pos:column="18"/></block></then></if></elseif></if>
                <break pos:line="106" pos:column="17">break;<pos:position pos:line="106" pos:column="23"/></break>
            }<pos:position pos:line="107" pos:column="14"/></block>
            <case pos:line="108" pos:column="13">case <expr><literal type="char" pos:line="108" pos:column="18">'o'<pos:position pos:line="108" pos:column="21"/></literal></expr>:<pos:position pos:line="108" pos:column="22"/></case>
            <case pos:line="109" pos:column="13">case <expr><literal type="char" pos:line="109" pos:column="18">'O'<pos:position pos:line="109" pos:column="21"/></literal></expr>:<pos:position pos:line="109" pos:column="22"/></case> <block pos:line="109" pos:column="23">{
                <if pos:line="110" pos:column="17">if <condition pos:line="110" pos:column="20">(<expr><operator pos:line="110" pos:column="21">!<pos:position pos:line="110" pos:column="22"/></operator><call><name pos:line="110" pos:column="22">strcasecmp<pos:position pos:line="110" pos:column="32"/></name><argument_list pos:line="110" pos:column="32">(<argument><expr><name pos:line="110" pos:column="33">token<pos:position pos:line="110" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="40">"only-if-cached"<pos:position pos:line="110" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="110" pos:column="58"/></condition><then pos:line="110" pos:column="58"> <block pos:line="110" pos:column="59">{
                    <expr_stmt><expr><name><name pos:line="111" pos:column="21">cc<pos:position pos:line="111" pos:column="23"/></name><operator pos:line="111" pos:column="23">-&gt;<pos:position pos:line="111" pos:column="28"/></operator><name pos:line="111" pos:column="25">only_if_cached<pos:position pos:line="111" pos:column="39"/></name></name> <operator pos:line="111" pos:column="40">=<pos:position pos:line="111" pos:column="41"/></operator> <literal type="number" pos:line="111" pos:column="42">1<pos:position pos:line="111" pos:column="43"/></literal></expr>;<pos:position pos:line="111" pos:column="44"/></expr_stmt>
                }<pos:position pos:line="112" pos:column="18"/></block></then></if>
                <break pos:line="113" pos:column="17">break;<pos:position pos:line="113" pos:column="23"/></break>
            }<pos:position pos:line="114" pos:column="14"/></block>
            <case pos:line="115" pos:column="13">case <expr><literal type="char" pos:line="115" pos:column="18">'p'<pos:position pos:line="115" pos:column="21"/></literal></expr>:<pos:position pos:line="115" pos:column="22"/></case>
            <case pos:line="116" pos:column="13">case <expr><literal type="char" pos:line="116" pos:column="18">'P'<pos:position pos:line="116" pos:column="21"/></literal></expr>:<pos:position pos:line="116" pos:column="22"/></case> <block pos:line="116" pos:column="23">{
                <comment type="block" pos:line="117" pos:column="17">/* handle most common quickest cases... */</comment>
                <if pos:line="118" pos:column="17">if <condition pos:line="118" pos:column="20">(<expr><operator pos:line="118" pos:column="21">!<pos:position pos:line="118" pos:column="22"/></operator><call><name pos:line="118" pos:column="22">strcmp<pos:position pos:line="118" pos:column="28"/></name><argument_list pos:line="118" pos:column="28">(<argument><expr><name pos:line="118" pos:column="29">token<pos:position pos:line="118" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="36">"private"<pos:position pos:line="118" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="47"/></condition><then pos:line="118" pos:column="47"> <block pos:line="118" pos:column="48">{
                    <expr_stmt><expr><name><name pos:line="119" pos:column="21">cc<pos:position pos:line="119" pos:column="23"/></name><operator pos:line="119" pos:column="23">-&gt;<pos:position pos:line="119" pos:column="28"/></operator></name><specifier pos:line="119" pos:column="25">private<pos:position pos:line="119" pos:column="32"/></specifier> <operator pos:line="119" pos:column="33">=<pos:position pos:line="119" pos:column="34"/></operator> <literal type="number" pos:line="119" pos:column="35">1<pos:position pos:line="119" pos:column="36"/></literal></expr>;<pos:position pos:line="119" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="120" pos:column="18"/></block></then>
                <comment type="block" pos:line="121" pos:column="17">/* ...then try slowest cases */</comment>
                <elseif pos:line="122" pos:column="17">else <if pos:line="122" pos:column="22">if <condition pos:line="122" pos:column="25">(<expr><operator pos:line="122" pos:column="26">!<pos:position pos:line="122" pos:column="27"/></operator><call><name pos:line="122" pos:column="27">strcasecmp<pos:position pos:line="122" pos:column="37"/></name><argument_list pos:line="122" pos:column="37">(<argument><expr><name pos:line="122" pos:column="38">token<pos:position pos:line="122" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="45">"public"<pos:position pos:line="122" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="55"/></condition><then pos:line="122" pos:column="55"> <block pos:line="122" pos:column="56">{
                    <expr_stmt><expr><name><name pos:line="123" pos:column="21">cc<pos:position pos:line="123" pos:column="23"/></name><operator pos:line="123" pos:column="23">-&gt;<pos:position pos:line="123" pos:column="28"/></operator></name><specifier pos:line="123" pos:column="25">public<pos:position pos:line="123" pos:column="31"/></specifier> <operator pos:line="123" pos:column="32">=<pos:position pos:line="123" pos:column="33"/></operator> <literal type="number" pos:line="123" pos:column="34">1<pos:position pos:line="123" pos:column="35"/></literal></expr>;<pos:position pos:line="123" pos:column="36"/></expr_stmt>
                }<pos:position pos:line="124" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="125" pos:column="17">else <if pos:line="125" pos:column="22">if <condition pos:line="125" pos:column="25">(<expr><operator pos:line="125" pos:column="26">!<pos:position pos:line="125" pos:column="27"/></operator><call><name pos:line="125" pos:column="27">strncasecmp<pos:position pos:line="125" pos:column="38"/></name><argument_list pos:line="125" pos:column="38">(<argument><expr><name pos:line="125" pos:column="39">token<pos:position pos:line="125" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="46">"private"<pos:position pos:line="125" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="57">7<pos:position pos:line="125" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="125" pos:column="60"/></condition><then pos:line="125" pos:column="60"> <block pos:line="125" pos:column="61">{
                    <if pos:line="126" pos:column="21">if <condition pos:line="126" pos:column="24">(<expr><name><name pos:line="126" pos:column="25">token<pos:position pos:line="126" pos:column="30"/></name><index pos:line="126" pos:column="30">[<expr><literal type="number" pos:line="126" pos:column="31">7<pos:position pos:line="126" pos:column="32"/></literal></expr>]<pos:position pos:line="126" pos:column="33"/></index></name> <operator pos:line="126" pos:column="34">==<pos:position pos:line="126" pos:column="36"/></operator> <literal type="char" pos:line="126" pos:column="37">'='<pos:position pos:line="126" pos:column="40"/></literal></expr>)<pos:position pos:line="126" pos:column="41"/></condition><then pos:line="126" pos:column="41"> <block pos:line="126" pos:column="42">{
                        <if pos:line="127" pos:column="25">if <condition pos:line="127" pos:column="28">(<expr><call><name pos:line="127" pos:column="29">apr_table_get<pos:position pos:line="127" pos:column="42"/></name><argument_list pos:line="127" pos:column="42">(<argument><expr><name pos:line="127" pos:column="43">headers<pos:position pos:line="127" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="52">token<pos:position pos:line="127" pos:column="57"/></name> <operator pos:line="127" pos:column="58">+<pos:position pos:line="127" pos:column="59"/></operator> <literal type="number" pos:line="127" pos:column="60">8<pos:position pos:line="127" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="63"/></condition><then pos:line="127" pos:column="63"> <block pos:line="127" pos:column="64">{
                            <expr_stmt><expr><name><name pos:line="128" pos:column="29">cc<pos:position pos:line="128" pos:column="31"/></name><operator pos:line="128" pos:column="31">-&gt;<pos:position pos:line="128" pos:column="36"/></operator><name pos:line="128" pos:column="33">private_header<pos:position pos:line="128" pos:column="47"/></name></name> <operator pos:line="128" pos:column="48">=<pos:position pos:line="128" pos:column="49"/></operator> <literal type="number" pos:line="128" pos:column="50">1<pos:position pos:line="128" pos:column="51"/></literal></expr>;<pos:position pos:line="128" pos:column="52"/></expr_stmt>
                        }<pos:position pos:line="129" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="130" pos:column="22"/></block></then>
                    <elseif pos:line="131" pos:column="21">else <if pos:line="131" pos:column="26">if <condition pos:line="131" pos:column="29">(<expr><operator pos:line="131" pos:column="30">!<pos:position pos:line="131" pos:column="31"/></operator><name><name pos:line="131" pos:column="31">token<pos:position pos:line="131" pos:column="36"/></name><index pos:line="131" pos:column="36">[<expr><literal type="number" pos:line="131" pos:column="37">7<pos:position pos:line="131" pos:column="38"/></literal></expr>]<pos:position pos:line="131" pos:column="39"/></index></name></expr>)<pos:position pos:line="131" pos:column="40"/></condition><then pos:line="131" pos:column="40"> <block pos:line="131" pos:column="41">{
                        <expr_stmt><expr><name><name pos:line="132" pos:column="25">cc<pos:position pos:line="132" pos:column="27"/></name><operator pos:line="132" pos:column="27">-&gt;<pos:position pos:line="132" pos:column="32"/></operator></name><specifier pos:line="132" pos:column="29">private<pos:position pos:line="132" pos:column="36"/></specifier> <operator pos:line="132" pos:column="37">=<pos:position pos:line="132" pos:column="38"/></operator> <literal type="number" pos:line="132" pos:column="39">1<pos:position pos:line="132" pos:column="40"/></literal></expr>;<pos:position pos:line="132" pos:column="41"/></expr_stmt>
                    }<pos:position pos:line="133" pos:column="22"/></block></then></if></elseif></if>
                    <break pos:line="134" pos:column="21">break;<pos:position pos:line="134" pos:column="27"/></break>
                }<pos:position pos:line="135" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="136" pos:column="17">else <if pos:line="136" pos:column="22">if <condition pos:line="136" pos:column="25">(<expr><operator pos:line="136" pos:column="26">!<pos:position pos:line="136" pos:column="27"/></operator><call><name pos:line="136" pos:column="27">strcasecmp<pos:position pos:line="136" pos:column="37"/></name><argument_list pos:line="136" pos:column="37">(<argument><expr><name pos:line="136" pos:column="38">token<pos:position pos:line="136" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="45">"proxy-revalidate"<pos:position pos:line="136" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="65"/></condition><then pos:line="136" pos:column="65"> <block pos:line="136" pos:column="66">{
                    <expr_stmt><expr><name><name pos:line="137" pos:column="21">cc<pos:position pos:line="137" pos:column="23"/></name><operator pos:line="137" pos:column="23">-&gt;<pos:position pos:line="137" pos:column="28"/></operator><name pos:line="137" pos:column="25">proxy_revalidate<pos:position pos:line="137" pos:column="41"/></name></name> <operator pos:line="137" pos:column="42">=<pos:position pos:line="137" pos:column="43"/></operator> <literal type="number" pos:line="137" pos:column="44">1<pos:position pos:line="137" pos:column="45"/></literal></expr>;<pos:position pos:line="137" pos:column="46"/></expr_stmt>
                }<pos:position pos:line="138" pos:column="18"/></block></then></if></elseif></if>
                <break pos:line="139" pos:column="17">break;<pos:position pos:line="139" pos:column="23"/></break>
            }<pos:position pos:line="140" pos:column="14"/></block>
            <case pos:line="141" pos:column="13">case <expr><literal type="char" pos:line="141" pos:column="18">'s'<pos:position pos:line="141" pos:column="21"/></literal></expr>:<pos:position pos:line="141" pos:column="22"/></case>
            <case pos:line="142" pos:column="13">case <expr><literal type="char" pos:line="142" pos:column="18">'S'<pos:position pos:line="142" pos:column="21"/></literal></expr>:<pos:position pos:line="142" pos:column="22"/></case> <block pos:line="142" pos:column="23">{
                <if pos:line="143" pos:column="17">if <condition pos:line="143" pos:column="20">(<expr><operator pos:line="143" pos:column="21">!<pos:position pos:line="143" pos:column="22"/></operator><call><name pos:line="143" pos:column="22">strncasecmp<pos:position pos:line="143" pos:column="33"/></name><argument_list pos:line="143" pos:column="33">(<argument><expr><name pos:line="143" pos:column="34">token<pos:position pos:line="143" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="41">"s-maxage"<pos:position pos:line="143" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="53">8<pos:position pos:line="143" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="143" pos:column="56"/></condition><then pos:line="143" pos:column="56"> <block pos:line="143" pos:column="57">{
                    <if pos:line="144" pos:column="21">if <condition pos:line="144" pos:column="24">(<expr><name><name pos:line="144" pos:column="25">token<pos:position pos:line="144" pos:column="30"/></name><index pos:line="144" pos:column="30">[<expr><literal type="number" pos:line="144" pos:column="31">8<pos:position pos:line="144" pos:column="32"/></literal></expr>]<pos:position pos:line="144" pos:column="33"/></index></name> <operator pos:line="144" pos:column="34">==<pos:position pos:line="144" pos:column="36"/></operator> <literal type="char" pos:line="144" pos:column="37">'='<pos:position pos:line="144" pos:column="40"/></literal></expr>)<pos:position pos:line="144" pos:column="41"/></condition><then pos:line="144" pos:column="41"> <block pos:line="144" pos:column="42">{
                        <expr_stmt><expr><name><name pos:line="145" pos:column="25">cc<pos:position pos:line="145" pos:column="27"/></name><operator pos:line="145" pos:column="27">-&gt;<pos:position pos:line="145" pos:column="32"/></operator><name pos:line="145" pos:column="29">s_maxage<pos:position pos:line="145" pos:column="37"/></name></name> <operator pos:line="145" pos:column="38">=<pos:position pos:line="145" pos:column="39"/></operator> <literal type="number" pos:line="145" pos:column="40">1<pos:position pos:line="145" pos:column="41"/></literal></expr>;<pos:position pos:line="145" pos:column="42"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="146" pos:column="25">cc<pos:position pos:line="146" pos:column="27"/></name><operator pos:line="146" pos:column="27">-&gt;<pos:position pos:line="146" pos:column="32"/></operator><name pos:line="146" pos:column="29">s_maxage_value<pos:position pos:line="146" pos:column="43"/></name></name> <operator pos:line="146" pos:column="44">=<pos:position pos:line="146" pos:column="45"/></operator> <call><name pos:line="146" pos:column="46">apr_atoi64<pos:position pos:line="146" pos:column="56"/></name><argument_list pos:line="146" pos:column="56">(<argument><expr><name pos:line="146" pos:column="57">token<pos:position pos:line="146" pos:column="62"/></name> <operator pos:line="146" pos:column="63">+<pos:position pos:line="146" pos:column="64"/></operator> <literal type="number" pos:line="146" pos:column="65">9<pos:position pos:line="146" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="68"/></expr_stmt>
                    }<pos:position pos:line="147" pos:column="22"/></block></then></if>
                    <break pos:line="148" pos:column="21">break;<pos:position pos:line="148" pos:column="27"/></break>
                }<pos:position pos:line="149" pos:column="18"/></block></then></if>
                <break pos:line="150" pos:column="17">break;<pos:position pos:line="150" pos:column="23"/></break>
            }<pos:position pos:line="151" pos:column="14"/></block>
            }<pos:position pos:line="152" pos:column="14"/></block></switch>
            <expr_stmt><expr><name pos:line="153" pos:column="13">token<pos:position pos:line="153" pos:column="18"/></name> <operator pos:line="153" pos:column="19">=<pos:position pos:line="153" pos:column="20"/></operator> <call><name pos:line="153" pos:column="21">cache_strqtok<pos:position pos:line="153" pos:column="34"/></name><argument_list pos:line="153" pos:column="34">(<argument><expr><name pos:line="153" pos:column="35">NULL<pos:position pos:line="153" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="41">CACHE_SEPARATOR<pos:position pos:line="153" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="153" pos:column="58">&amp;<pos:position pos:line="153" pos:column="63"/></operator><name pos:line="153" pos:column="59">last<pos:position pos:line="153" pos:column="63"/></name></expr></argument>)<pos:position pos:line="153" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="154" pos:column="10"/></block></while>
        <expr_stmt><expr><name><name pos:line="155" pos:column="9">cc<pos:position pos:line="155" pos:column="11"/></name><operator pos:line="155" pos:column="11">-&gt;<pos:position pos:line="155" pos:column="16"/></operator><name pos:line="155" pos:column="13">cache_control<pos:position pos:line="155" pos:column="26"/></name></name> <operator pos:line="155" pos:column="27">=<pos:position pos:line="155" pos:column="28"/></operator> <literal type="number" pos:line="155" pos:column="29">1<pos:position pos:line="155" pos:column="30"/></literal></expr>;<pos:position pos:line="155" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="156" pos:column="6"/></block></then></if>

    <return pos:line="158" pos:column="5">return <expr><operator pos:line="158" pos:column="12">(<pos:position pos:line="158" pos:column="13"/></operator><name pos:line="158" pos:column="13">cc_header<pos:position pos:line="158" pos:column="22"/></name> <operator pos:line="158" pos:column="23">!=<pos:position pos:line="158" pos:column="25"/></operator> <name pos:line="158" pos:column="26">NULL<pos:position pos:line="158" pos:column="30"/></name> <operator pos:line="158" pos:column="31">||<pos:position pos:line="158" pos:column="33"/></operator> <name pos:line="158" pos:column="34">pragma_header<pos:position pos:line="158" pos:column="47"/></name> <operator pos:line="158" pos:column="48">!=<pos:position pos:line="158" pos:column="50"/></operator> <name pos:line="158" pos:column="51">NULL<pos:position pos:line="158" pos:column="55"/></name><operator pos:line="158" pos:column="55">)<pos:position pos:line="158" pos:column="56"/></operator></expr>;<pos:position pos:line="158" pos:column="57"/></return>
}<pos:position pos:line="159" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2149_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">merge_server_configs<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">apr_pool_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">p<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">ap_conf_vector_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">base<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">ap_conf_vector_t<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">virt<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* Can reuse the 'virt' vector for the spine of it, since we don't
     * have to deal with the moral equivalent of .htaccess files here...
     */</comment>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">void<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier><modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">base_vector<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><operator pos:line="8" pos:column="26">(<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">void<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">*<pos:position pos:line="8" pos:column="33"/></operator><operator pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></operator><operator pos:line="8" pos:column="34">)<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="35">base<pos:position pos:line="8" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">void<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier><modifier pos:line="9" pos:column="11">*<pos:position pos:line="9" pos:column="12"/></modifier></type><name pos:line="9" pos:column="12">virt_vector<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><operator pos:line="9" pos:column="26">(<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">void<pos:position pos:line="9" pos:column="31"/></name> <operator pos:line="9" pos:column="32">*<pos:position pos:line="9" pos:column="33"/></operator><operator pos:line="9" pos:column="33">*<pos:position pos:line="9" pos:column="34"/></operator><operator pos:line="9" pos:column="34">)<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">virt<pos:position pos:line="9" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">module<pos:position pos:line="10" pos:column="11"/></name> <modifier pos:line="10" pos:column="12">*<pos:position pos:line="10" pos:column="13"/></modifier></type><name pos:line="10" pos:column="13">modp<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>

    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><expr><name pos:line="12" pos:column="10">modp<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">ap_top_module<pos:position pos:line="12" pos:column="30"/></name></expr>;<pos:position pos:line="12" pos:column="31"/></init> <condition><expr><name pos:line="12" pos:column="32">modp<pos:position pos:line="12" pos:column="36"/></name></expr>;<pos:position pos:line="12" pos:column="37"/></condition> <incr><expr><name pos:line="12" pos:column="38">modp<pos:position pos:line="12" pos:column="42"/></name> <operator pos:line="12" pos:column="43">=<pos:position pos:line="12" pos:column="44"/></operator> <name><name pos:line="12" pos:column="45">modp<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">next<pos:position pos:line="12" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="56"/></control> <block pos:line="12" pos:column="57">{
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">merger_func<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">df<pos:position pos:line="13" pos:column="23"/></name> <init pos:line="13" pos:column="24">= <expr><name><name pos:line="13" pos:column="26">modp<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">merge_server_config<pos:position pos:line="13" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="52"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">i<pos:position pos:line="14" pos:column="14"/></name> <init pos:line="14" pos:column="15">= <expr><name><name pos:line="14" pos:column="17">modp<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">module_index<pos:position pos:line="14" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="36"/></decl_stmt>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name><name pos:line="16" pos:column="14">virt_vector<pos:position pos:line="16" pos:column="25"/></name><index pos:line="16" pos:column="25">[<expr><name pos:line="16" pos:column="26">i<pos:position pos:line="16" pos:column="27"/></name></expr>]<pos:position pos:line="16" pos:column="28"/></index></name></expr>)<pos:position pos:line="16" pos:column="29"/></condition><then pos:line="16" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="13">virt_vector<pos:position pos:line="17" pos:column="24"/></name><index pos:line="17" pos:column="24">[<expr><name pos:line="17" pos:column="25">i<pos:position pos:line="17" pos:column="26"/></name></expr>]<pos:position pos:line="17" pos:column="27"/></index></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <name><name pos:line="17" pos:column="30">base_vector<pos:position pos:line="17" pos:column="41"/></name><index pos:line="17" pos:column="41">[<expr><name pos:line="17" pos:column="42">i<pos:position pos:line="17" pos:column="43"/></name></expr>]<pos:position pos:line="17" pos:column="44"/></index></name></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt></block></then>
        <elseif pos:line="18" pos:column="9">else <if pos:line="18" pos:column="14">if <condition pos:line="18" pos:column="17">(<expr><name pos:line="18" pos:column="18">df<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="13">virt_vector<pos:position pos:line="19" pos:column="24"/></name><index pos:line="19" pos:column="24">[<expr><name pos:line="19" pos:column="25">i<pos:position pos:line="19" pos:column="26"/></name></expr>]<pos:position pos:line="19" pos:column="27"/></index></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <call pos:line="19" pos:column="30">(<modifier pos:line="19" pos:column="31">*<pos:position pos:line="19" pos:column="32"/></modifier><name pos:line="19" pos:column="32">df<pos:position pos:line="19" pos:column="34"/></name>)<argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">p<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="39">base_vector<pos:position pos:line="19" pos:column="50"/></name><index pos:line="19" pos:column="50">[<expr><name pos:line="19" pos:column="51">i<pos:position pos:line="19" pos:column="52"/></name></expr>]<pos:position pos:line="19" pos:column="53"/></index></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="55">virt_vector<pos:position pos:line="19" pos:column="66"/></name><index pos:line="19" pos:column="66">[<expr><name pos:line="19" pos:column="67">i<pos:position pos:line="19" pos:column="68"/></name></expr>]<pos:position pos:line="19" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="71"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="20" pos:column="6"/></block></for>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

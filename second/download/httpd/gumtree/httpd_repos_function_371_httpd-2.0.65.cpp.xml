<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_371_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">log_request_time<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">request_rec<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">r<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">a<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_time_exp_t<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">xt<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="5" pos:column="5">/* ###  I think getting the time again at the end of the request
     * just for logging is dumb.  i know it's "required" for CLF.
     * folks writing log parsing tools don't realise that out of order
     * times have always been possible (consider what happens if one
     * process calculates the time to log, but then there's a context
     * switch before it writes and before that process is run again the
     * log rotation occurs) and they should just fix their tools rather
     * than force the server to pay extra cpu cycles.  if you've got
     * a problem with this, you can set the define.  -djg
     */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">a<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">&amp;&amp;<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">a<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17"> <block pos:line="15" pos:column="18">{              <comment type="block" pos:line="15" pos:column="33">/* Custom format */</comment>
        <comment type="block" pos:line="16" pos:column="9">/* The custom time formatting uses a very large temp buffer
         * on the stack.  To avoid using so much stack space in the
         * common case where we're not using a custom format, the code
         * for the custom format in a separate function.  (That's why
         * log_request_time_custom is not inlined right here.)
         */</comment>
<cpp:ifdef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifdef<pos:position pos:line="22" pos:column="7"/></cpp:directive> <name pos:line="22" pos:column="8">I_INSIST_ON_EXTRA_CYCLES_FOR_CLF_COMPLIANCE<pos:position pos:line="22" pos:column="51"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">ap_explode_recent_localtime<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><operator pos:line="23" pos:column="37">&amp;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="38">xt<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="42">apr_time_now<pos:position pos:line="23" pos:column="54"/></name><argument_list pos:line="23" pos:column="54">()<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="58"/></expr_stmt>
<cpp:else pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">else<pos:position pos:line="24" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ap_explode_recent_localtime<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">(<argument><expr><operator pos:line="25" pos:column="37">&amp;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="38">xt<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="42">r<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">request_time<pos:position pos:line="25" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>
        <return pos:line="27" pos:column="9">return <expr><call><name pos:line="27" pos:column="16">log_request_time_custom<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><name pos:line="27" pos:column="40">r<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="43">a<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="46">&amp;<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="47">xt<pos:position pos:line="27" pos:column="49"/></name></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then>
    <else pos:line="29" pos:column="5">else <block pos:line="29" pos:column="10">{                      <comment type="block" pos:line="29" pos:column="33">/* CLF format */</comment>
        <comment type="block" pos:line="30" pos:column="9">/* This code uses the same technique as ap_explode_recent_localtime():
         * optimistic caching with logic to detect and correct race conditions.
         * See the comments in server/util_time.c for more information.
         */</comment>
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">cached_request_time<pos:position pos:line="34" pos:column="28"/></name><modifier pos:line="34" pos:column="28">*<pos:position pos:line="34" pos:column="29"/></modifier></type> <name pos:line="34" pos:column="30">cached_time<pos:position pos:line="34" pos:column="41"/></name> <init pos:line="34" pos:column="42">= <expr><call><name pos:line="34" pos:column="44">apr_palloc<pos:position pos:line="34" pos:column="54"/></name><argument_list pos:line="34" pos:column="54">(<argument><expr><name><name pos:line="34" pos:column="55">r<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">-&gt;<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="58">pool<pos:position pos:line="34" pos:column="62"/></name></name></expr></argument>,
                                                      <argument><expr><sizeof pos:line="35" pos:column="55">sizeof<argument_list pos:line="35" pos:column="61">(<argument><expr><operator pos:line="35" pos:column="62">*<pos:position pos:line="35" pos:column="63"/></operator><name pos:line="35" pos:column="63">cached_time<pos:position pos:line="35" pos:column="74"/></name></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="77"/></decl_stmt>
<cpp:ifdef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifdef<pos:position pos:line="36" pos:column="7"/></cpp:directive> <name pos:line="36" pos:column="8">I_INSIST_ON_EXTRA_CYCLES_FOR_CLF_COMPLIANCE<pos:position pos:line="36" pos:column="51"/></name></cpp:ifdef>
        <decl_stmt><decl><type><name pos:line="37" pos:column="9">apr_time_t<pos:position pos:line="37" pos:column="19"/></name></type> <name pos:line="37" pos:column="20">request_time<pos:position pos:line="37" pos:column="32"/></name> <init pos:line="37" pos:column="33">= <expr><call><name pos:line="37" pos:column="35">apr_time_now<pos:position pos:line="37" pos:column="47"/></name><argument_list pos:line="37" pos:column="47">()<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="50"/></decl_stmt>
<cpp:else pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">else<pos:position pos:line="38" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><type><name pos:line="39" pos:column="9">apr_time_t<pos:position pos:line="39" pos:column="19"/></name></type> <name pos:line="39" pos:column="20">request_time<pos:position pos:line="39" pos:column="32"/></name> <init pos:line="39" pos:column="33">= <expr><name><name pos:line="39" pos:column="35">r<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">-&gt;<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="38">request_time<pos:position pos:line="39" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="39" pos:column="51"/></decl_stmt>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>
        <decl_stmt><decl><type><name pos:line="41" pos:column="9">unsigned<pos:position pos:line="41" pos:column="17"/></name></type> <name pos:line="41" pos:column="18">t_seconds<pos:position pos:line="41" pos:column="27"/></name> <init pos:line="41" pos:column="28">= <expr><operator pos:line="41" pos:column="30">(<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="31">unsigned<pos:position pos:line="41" pos:column="39"/></name><operator pos:line="41" pos:column="39">)<pos:position pos:line="41" pos:column="40"/></operator><call><name pos:line="41" pos:column="40">apr_time_sec<pos:position pos:line="41" pos:column="52"/></name><argument_list pos:line="41" pos:column="52">(<argument><expr><name pos:line="41" pos:column="53">request_time<pos:position pos:line="41" pos:column="65"/></name></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="67"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="42" pos:column="9">unsigned<pos:position pos:line="42" pos:column="17"/></name></type> <name pos:line="42" pos:column="18">i<pos:position pos:line="42" pos:column="19"/></name> <init pos:line="42" pos:column="20">= <expr><name pos:line="42" pos:column="22">t_seconds<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">&amp;<pos:position pos:line="42" pos:column="37"/></operator> <name pos:line="42" pos:column="34">TIME_CACHE_MASK<pos:position pos:line="42" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="42" pos:column="50"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">memcpy<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><name pos:line="43" pos:column="16">cached_time<pos:position pos:line="43" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="29">&amp;<pos:position pos:line="43" pos:column="34"/></operator><operator pos:line="43" pos:column="30">(<pos:position pos:line="43" pos:column="31"/></operator><name><name pos:line="43" pos:column="31">request_time_cache<pos:position pos:line="43" pos:column="49"/></name><index pos:line="43" pos:column="49">[<expr><name pos:line="43" pos:column="50">i<pos:position pos:line="43" pos:column="51"/></name></expr>]<pos:position pos:line="43" pos:column="52"/></index></name><operator pos:line="43" pos:column="52">)<pos:position pos:line="43" pos:column="53"/></operator></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="55">sizeof<argument_list pos:line="43" pos:column="61">(<argument><expr><operator pos:line="43" pos:column="62">*<pos:position pos:line="43" pos:column="63"/></operator><name pos:line="43" pos:column="63">cached_time<pos:position pos:line="43" pos:column="74"/></name></expr></argument>)<pos:position pos:line="43" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="77"/></expr_stmt>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">(<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">t_seconds<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">!=<pos:position pos:line="44" pos:column="26"/></operator> <name><name pos:line="44" pos:column="27">cached_time<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">-&gt;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="40">t<pos:position pos:line="44" pos:column="41"/></name></name><operator pos:line="44" pos:column="41">)<pos:position pos:line="44" pos:column="42"/></operator> <operator pos:line="44" pos:column="43">||<pos:position pos:line="44" pos:column="45"/></operator>
            <operator pos:line="45" pos:column="13">(<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">t_seconds<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">!=<pos:position pos:line="45" pos:column="26"/></operator> <name><name pos:line="45" pos:column="27">cached_time<pos:position pos:line="45" pos:column="38"/></name><operator pos:line="45" pos:column="38">-&gt;<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="40">t_validate<pos:position pos:line="45" pos:column="50"/></name></name><operator pos:line="45" pos:column="50">)<pos:position pos:line="45" pos:column="51"/></operator></expr>)<pos:position pos:line="45" pos:column="52"/></condition><then pos:line="45" pos:column="52"> <block pos:line="45" pos:column="53">{

            <comment type="block" pos:line="47" pos:column="13">/* Invalid or old snapshot, so compute the proper time string
             * and store it in the cache
             */</comment>
            <decl_stmt><decl><type><name pos:line="50" pos:column="13">char<pos:position pos:line="50" pos:column="17"/></name></type> <name pos:line="50" pos:column="18">sign<pos:position pos:line="50" pos:column="22"/></name></decl>;<pos:position pos:line="50" pos:column="23"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="51" pos:column="13">int<pos:position pos:line="51" pos:column="16"/></name></type> <name pos:line="51" pos:column="17">timz<pos:position pos:line="51" pos:column="21"/></name></decl>;<pos:position pos:line="51" pos:column="22"/></decl_stmt>

            <expr_stmt><expr><call><name pos:line="53" pos:column="13">ap_explode_recent_localtime<pos:position pos:line="53" pos:column="40"/></name><argument_list pos:line="53" pos:column="40">(<argument><expr><operator pos:line="53" pos:column="41">&amp;<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="42">xt<pos:position pos:line="53" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="46">request_time<pos:position pos:line="53" pos:column="58"/></name></expr></argument>)<pos:position pos:line="53" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><name pos:line="54" pos:column="13">timz<pos:position pos:line="54" pos:column="17"/></name> <operator pos:line="54" pos:column="18">=<pos:position pos:line="54" pos:column="19"/></operator> <name><name pos:line="54" pos:column="20">xt<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">.<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="23">tm_gmtoff<pos:position pos:line="54" pos:column="32"/></name></name></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>
            <if pos:line="55" pos:column="13">if <condition pos:line="55" pos:column="16">(<expr><name pos:line="55" pos:column="17">timz<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">&lt;<pos:position pos:line="55" pos:column="26"/></operator> <literal type="number" pos:line="55" pos:column="24">0<pos:position pos:line="55" pos:column="25"/></literal></expr>)<pos:position pos:line="55" pos:column="26"/></condition><then pos:line="55" pos:column="26"> <block pos:line="55" pos:column="27">{
                <expr_stmt><expr><name pos:line="56" pos:column="17">timz<pos:position pos:line="56" pos:column="21"/></name> <operator pos:line="56" pos:column="22">=<pos:position pos:line="56" pos:column="23"/></operator> <operator pos:line="56" pos:column="24">-<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="25">timz<pos:position pos:line="56" pos:column="29"/></name></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name pos:line="57" pos:column="17">sign<pos:position pos:line="57" pos:column="21"/></name> <operator pos:line="57" pos:column="22">=<pos:position pos:line="57" pos:column="23"/></operator> <literal type="char" pos:line="57" pos:column="24">'-'<pos:position pos:line="57" pos:column="27"/></literal></expr>;<pos:position pos:line="57" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="58" pos:column="14"/></block></then>
            <else pos:line="59" pos:column="13">else <block pos:line="59" pos:column="18">{
                <expr_stmt><expr><name pos:line="60" pos:column="17">sign<pos:position pos:line="60" pos:column="21"/></name> <operator pos:line="60" pos:column="22">=<pos:position pos:line="60" pos:column="23"/></operator> <literal type="char" pos:line="60" pos:column="24">'+'<pos:position pos:line="60" pos:column="27"/></literal></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="61" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name><name pos:line="62" pos:column="13">cached_time<pos:position pos:line="62" pos:column="24"/></name><operator pos:line="62" pos:column="24">-&gt;<pos:position pos:line="62" pos:column="29"/></operator><name pos:line="62" pos:column="26">t<pos:position pos:line="62" pos:column="27"/></name></name> <operator pos:line="62" pos:column="28">=<pos:position pos:line="62" pos:column="29"/></operator> <name pos:line="62" pos:column="30">t_seconds<pos:position pos:line="62" pos:column="39"/></name></expr>;<pos:position pos:line="62" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">apr_snprintf<pos:position pos:line="63" pos:column="25"/></name><argument_list pos:line="63" pos:column="25">(<argument><expr><name><name pos:line="63" pos:column="26">cached_time<pos:position pos:line="63" pos:column="37"/></name><operator pos:line="63" pos:column="37">-&gt;<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="39">timestr<pos:position pos:line="63" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="48">DEFAULT_REQUEST_TIME_SIZE<pos:position pos:line="63" pos:column="73"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="64" pos:column="26">"[%02d/%s/%d:%02d:%02d:%02d %c%.2d%.2d]"<pos:position pos:line="64" pos:column="66"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="65" pos:column="26">xt<pos:position pos:line="65" pos:column="28"/></name><operator pos:line="65" pos:column="28">.<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="29">tm_mday<pos:position pos:line="65" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="38">apr_month_snames<pos:position pos:line="65" pos:column="54"/></name><index pos:line="65" pos:column="54">[<expr><name><name pos:line="65" pos:column="55">xt<pos:position pos:line="65" pos:column="57"/></name><operator pos:line="65" pos:column="57">.<pos:position pos:line="65" pos:column="58"/></operator><name pos:line="65" pos:column="58">tm_mon<pos:position pos:line="65" pos:column="64"/></name></name></expr>]<pos:position pos:line="65" pos:column="65"/></index></name></expr></argument>,
                         <argument><expr><name><name pos:line="66" pos:column="26">xt<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">.<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="29">tm_year<pos:position pos:line="66" pos:column="36"/></name></name><operator pos:line="66" pos:column="36">+<pos:position pos:line="66" pos:column="37"/></operator><literal type="number" pos:line="66" pos:column="37">1900<pos:position pos:line="66" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="43">xt<pos:position pos:line="66" pos:column="45"/></name><operator pos:line="66" pos:column="45">.<pos:position pos:line="66" pos:column="46"/></operator><name pos:line="66" pos:column="46">tm_hour<pos:position pos:line="66" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="55">xt<pos:position pos:line="66" pos:column="57"/></name><operator pos:line="66" pos:column="57">.<pos:position pos:line="66" pos:column="58"/></operator><name pos:line="66" pos:column="58">tm_min<pos:position pos:line="66" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="66">xt<pos:position pos:line="66" pos:column="68"/></name><operator pos:line="66" pos:column="68">.<pos:position pos:line="66" pos:column="69"/></operator><name pos:line="66" pos:column="69">tm_sec<pos:position pos:line="66" pos:column="75"/></name></name></expr></argument>,
                         <argument><expr><name pos:line="67" pos:column="26">sign<pos:position pos:line="67" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="32">timz<pos:position pos:line="67" pos:column="36"/></name> <operator pos:line="67" pos:column="37">/<pos:position pos:line="67" pos:column="38"/></operator> <operator pos:line="67" pos:column="39">(<pos:position pos:line="67" pos:column="40"/></operator><literal type="number" pos:line="67" pos:column="40">60<pos:position pos:line="67" pos:column="42"/></literal><operator pos:line="67" pos:column="42">*<pos:position pos:line="67" pos:column="43"/></operator><literal type="number" pos:line="67" pos:column="43">60<pos:position pos:line="67" pos:column="45"/></literal><operator pos:line="67" pos:column="45">)<pos:position pos:line="67" pos:column="46"/></operator></expr></argument>, <argument><expr><operator pos:line="67" pos:column="48">(<pos:position pos:line="67" pos:column="49"/></operator><name pos:line="67" pos:column="49">timz<pos:position pos:line="67" pos:column="53"/></name> <operator pos:line="67" pos:column="54">%<pos:position pos:line="67" pos:column="55"/></operator> <operator pos:line="67" pos:column="56">(<pos:position pos:line="67" pos:column="57"/></operator><literal type="number" pos:line="67" pos:column="57">60<pos:position pos:line="67" pos:column="59"/></literal><operator pos:line="67" pos:column="59">*<pos:position pos:line="67" pos:column="60"/></operator><literal type="number" pos:line="67" pos:column="60">60<pos:position pos:line="67" pos:column="62"/></literal><operator pos:line="67" pos:column="62">)<pos:position pos:line="67" pos:column="63"/></operator><operator pos:line="67" pos:column="63">)<pos:position pos:line="67" pos:column="64"/></operator> <operator pos:line="67" pos:column="65">/<pos:position pos:line="67" pos:column="66"/></operator> <literal type="number" pos:line="67" pos:column="67">60<pos:position pos:line="67" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="68" pos:column="13">cached_time<pos:position pos:line="68" pos:column="24"/></name><operator pos:line="68" pos:column="24">-&gt;<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="26">t_validate<pos:position pos:line="68" pos:column="36"/></name></name> <operator pos:line="68" pos:column="37">=<pos:position pos:line="68" pos:column="38"/></operator> <name pos:line="68" pos:column="39">t_seconds<pos:position pos:line="68" pos:column="48"/></name></expr>;<pos:position pos:line="68" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">memcpy<pos:position pos:line="69" pos:column="19"/></name><argument_list pos:line="69" pos:column="19">(<argument><expr><operator pos:line="69" pos:column="20">&amp;<pos:position pos:line="69" pos:column="25"/></operator><operator pos:line="69" pos:column="21">(<pos:position pos:line="69" pos:column="22"/></operator><name><name pos:line="69" pos:column="22">request_time_cache<pos:position pos:line="69" pos:column="40"/></name><index pos:line="69" pos:column="40">[<expr><name pos:line="69" pos:column="41">i<pos:position pos:line="69" pos:column="42"/></name></expr>]<pos:position pos:line="69" pos:column="43"/></index></name><operator pos:line="69" pos:column="43">)<pos:position pos:line="69" pos:column="44"/></operator></expr></argument>, <argument><expr><name pos:line="69" pos:column="46">cached_time<pos:position pos:line="69" pos:column="57"/></name></expr></argument>,
                   <argument><expr><sizeof pos:line="70" pos:column="20">sizeof<argument_list pos:line="70" pos:column="26">(<argument><expr><operator pos:line="70" pos:column="27">*<pos:position pos:line="70" pos:column="28"/></operator><name pos:line="70" pos:column="28">cached_time<pos:position pos:line="70" pos:column="39"/></name></expr></argument>)<pos:position pos:line="70" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>
        <return pos:line="72" pos:column="9">return <expr><name><name pos:line="72" pos:column="16">cached_time<pos:position pos:line="72" pos:column="27"/></name><operator pos:line="72" pos:column="27">-&gt;<pos:position pos:line="72" pos:column="32"/></operator><name pos:line="72" pos:column="29">timestr<pos:position pos:line="72" pos:column="36"/></name></name></expr>;<pos:position pos:line="72" pos:column="37"/></return>
    }<pos:position pos:line="73" pos:column="6"/></block></else></if>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

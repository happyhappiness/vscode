<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3300_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name> <name pos:line="1" pos:column="12">PTRCALL<pos:position pos:line="1" pos:column="19"/></name>
<name pos:line="2" pos:column="1">PREFIX<pos:position pos:line="2" pos:column="7"/></name></type>(<name pos:line="2" pos:column="8">prologTok<pos:position pos:line="2" pos:column="17"/></name>)<parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">ENCODING<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">enc<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">ptr<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier> <name pos:line="2" pos:column="63">char<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">end<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
                  <parameter><decl><type><specifier pos:line="3" pos:column="19">const<pos:position pos:line="3" pos:column="24"/></specifier> <name pos:line="3" pos:column="25">char<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier><modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">nextTokPtr<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="43"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">tok<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">ptr<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">==<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">end<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">XML_TOK_NONE<pos:position pos:line="7" pos:column="24"/></name></expr>;<pos:position pos:line="7" pos:column="25"/></return></block></then></if>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">MINBPC<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><name pos:line="8" pos:column="14">enc<pos:position pos:line="8" pos:column="17"/></name></expr></argument>)<pos:position pos:line="8" pos:column="18"/></argument_list></call> <operator pos:line="8" pos:column="19">&gt;<pos:position pos:line="8" pos:column="23"/></operator> <literal type="number" pos:line="8" pos:column="21">1<pos:position pos:line="8" pos:column="22"/></literal></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23"> <block pos:line="8" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">size_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">n<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name pos:line="9" pos:column="16">end<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">-<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">ptr<pos:position pos:line="9" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">n<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">&amp;<pos:position pos:line="10" pos:column="16"/></operator> <operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">MINBPC<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">enc<pos:position pos:line="10" pos:column="24"/></name></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></call> <operator pos:line="10" pos:column="26">-<pos:position pos:line="10" pos:column="27"/></operator> <literal type="number" pos:line="10" pos:column="28">1<pos:position pos:line="10" pos:column="29"/></literal><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31"> <block pos:line="10" pos:column="32">{
      <expr_stmt><expr><name pos:line="11" pos:column="7">n<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">&amp;=<pos:position pos:line="11" pos:column="15"/></operator> <operator pos:line="11" pos:column="12">~<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">MINBPC<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">enc<pos:position pos:line="11" pos:column="24"/></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call> <operator pos:line="11" pos:column="26">-<pos:position pos:line="11" pos:column="27"/></operator> <literal type="number" pos:line="11" pos:column="28">1<pos:position pos:line="11" pos:column="29"/></literal><operator pos:line="11" pos:column="29">)<pos:position pos:line="11" pos:column="30"/></operator></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><name pos:line="12" pos:column="11">n<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">==<pos:position pos:line="12" pos:column="15"/></operator> <literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">XML_TOK_PARTIAL<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="14" pos:column="7">end<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">ptr<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">+<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">n<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>
  <switch pos:line="17" pos:column="3">switch <condition pos:line="17" pos:column="10">(<expr><call><name pos:line="17" pos:column="11">BYTE_TYPE<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">enc<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="26">ptr<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="31"/></condition> <block pos:line="17" pos:column="32">{
  <case pos:line="18" pos:column="3">case <expr><name pos:line="18" pos:column="8">BT_QUOT<pos:position pos:line="18" pos:column="15"/></name></expr>:<pos:position pos:line="18" pos:column="16"/></case>
    <return pos:line="19" pos:column="5">return <expr><call><call><name pos:line="19" pos:column="12">PREFIX<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">scanLit<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">BT_QUOT<pos:position pos:line="19" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="37">enc<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">ptr<pos:position pos:line="19" pos:column="45"/></name> <operator pos:line="19" pos:column="46">+<pos:position pos:line="19" pos:column="47"/></operator> <call><name pos:line="19" pos:column="48">MINBPC<pos:position pos:line="19" pos:column="54"/></name><argument_list pos:line="19" pos:column="54">(<argument><expr><name pos:line="19" pos:column="55">enc<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="19" pos:column="61">end<pos:position pos:line="19" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="66">nextTokPtr<pos:position pos:line="19" pos:column="76"/></name></expr></argument>)<pos:position pos:line="19" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="78"/></return>
  <case pos:line="20" pos:column="3">case <expr><name pos:line="20" pos:column="8">BT_APOS<pos:position pos:line="20" pos:column="15"/></name></expr>:<pos:position pos:line="20" pos:column="16"/></case>
    <return pos:line="21" pos:column="5">return <expr><call><call><name pos:line="21" pos:column="12">PREFIX<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">scanLit<pos:position pos:line="21" pos:column="26"/></name></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">BT_APOS<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">enc<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">ptr<pos:position pos:line="21" pos:column="45"/></name> <operator pos:line="21" pos:column="46">+<pos:position pos:line="21" pos:column="47"/></operator> <call><name pos:line="21" pos:column="48">MINBPC<pos:position pos:line="21" pos:column="54"/></name><argument_list pos:line="21" pos:column="54">(<argument><expr><name pos:line="21" pos:column="55">enc<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="61">end<pos:position pos:line="21" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="66">nextTokPtr<pos:position pos:line="21" pos:column="76"/></name></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="78"/></return>
  <case pos:line="22" pos:column="3">case <expr><name pos:line="22" pos:column="8">BT_LT<pos:position pos:line="22" pos:column="13"/></name></expr>:<pos:position pos:line="22" pos:column="14"/></case>
    <block pos:line="23" pos:column="5">{
      <expr_stmt><expr><name pos:line="24" pos:column="7">ptr<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">+=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">MINBPC<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">enc<pos:position pos:line="24" pos:column="24"/></name></expr></argument>)<pos:position pos:line="24" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><name pos:line="25" pos:column="11">ptr<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">==<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">end<pos:position pos:line="25" pos:column="21"/></name></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22">
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">XML_TOK_PARTIAL<pos:position pos:line="26" pos:column="31"/></name></expr>;<pos:position pos:line="26" pos:column="32"/></return></block></then></if>
      <switch pos:line="27" pos:column="7">switch <condition pos:line="27" pos:column="14">(<expr><call><name pos:line="27" pos:column="15">BYTE_TYPE<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">enc<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="30">ptr<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="35"/></condition> <block pos:line="27" pos:column="36">{
      <case pos:line="28" pos:column="7">case <expr><name pos:line="28" pos:column="12">BT_EXCL<pos:position pos:line="28" pos:column="19"/></name></expr>:<pos:position pos:line="28" pos:column="20"/></case>
        <return pos:line="29" pos:column="9">return <expr><call><call><name pos:line="29" pos:column="16">PREFIX<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">scanDecl<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">enc<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">ptr<pos:position pos:line="29" pos:column="41"/></name> <operator pos:line="29" pos:column="42">+<pos:position pos:line="29" pos:column="43"/></operator> <call><name pos:line="29" pos:column="44">MINBPC<pos:position pos:line="29" pos:column="50"/></name><argument_list pos:line="29" pos:column="50">(<argument><expr><name pos:line="29" pos:column="51">enc<pos:position pos:line="29" pos:column="54"/></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="57">end<pos:position pos:line="29" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="62">nextTokPtr<pos:position pos:line="29" pos:column="72"/></name></expr></argument>)<pos:position pos:line="29" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="74"/></return>
      <case pos:line="30" pos:column="7">case <expr><name pos:line="30" pos:column="12">BT_QUEST<pos:position pos:line="30" pos:column="20"/></name></expr>:<pos:position pos:line="30" pos:column="21"/></case>
        <return pos:line="31" pos:column="9">return <expr><call><call><name pos:line="31" pos:column="16">PREFIX<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">scanPi<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">enc<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="36">ptr<pos:position pos:line="31" pos:column="39"/></name> <operator pos:line="31" pos:column="40">+<pos:position pos:line="31" pos:column="41"/></operator> <call><name pos:line="31" pos:column="42">MINBPC<pos:position pos:line="31" pos:column="48"/></name><argument_list pos:line="31" pos:column="48">(<argument><expr><name pos:line="31" pos:column="49">enc<pos:position pos:line="31" pos:column="52"/></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="55">end<pos:position pos:line="31" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="60">nextTokPtr<pos:position pos:line="31" pos:column="70"/></name></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="72"/></return>
      <case pos:line="32" pos:column="7">case <expr><name pos:line="32" pos:column="12">BT_NMSTRT<pos:position pos:line="32" pos:column="21"/></name></expr>:<pos:position pos:line="32" pos:column="22"/></case>
      <case pos:line="33" pos:column="7">case <expr><name pos:line="33" pos:column="12">BT_HEX<pos:position pos:line="33" pos:column="18"/></name></expr>:<pos:position pos:line="33" pos:column="19"/></case>
      <case pos:line="34" pos:column="7">case <expr><name pos:line="34" pos:column="12">BT_NONASCII<pos:position pos:line="34" pos:column="23"/></name></expr>:<pos:position pos:line="34" pos:column="24"/></case>
      <case pos:line="35" pos:column="7">case <expr><name pos:line="35" pos:column="12">BT_LEAD2<pos:position pos:line="35" pos:column="20"/></name></expr>:<pos:position pos:line="35" pos:column="21"/></case>
      <case pos:line="36" pos:column="7">case <expr><name pos:line="36" pos:column="12">BT_LEAD3<pos:position pos:line="36" pos:column="20"/></name></expr>:<pos:position pos:line="36" pos:column="21"/></case>
      <case pos:line="37" pos:column="7">case <expr><name pos:line="37" pos:column="12">BT_LEAD4<pos:position pos:line="37" pos:column="20"/></name></expr>:<pos:position pos:line="37" pos:column="21"/></case>
        <expr_stmt><expr><operator pos:line="38" pos:column="9">*<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">nextTokPtr<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">ptr<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">-<pos:position pos:line="38" pos:column="28"/></operator> <call><name pos:line="38" pos:column="29">MINBPC<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><name pos:line="38" pos:column="36">enc<pos:position pos:line="38" pos:column="39"/></name></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">XML_TOK_INSTANCE_START<pos:position pos:line="39" pos:column="38"/></name></expr>;<pos:position pos:line="39" pos:column="39"/></return>
      }<pos:position pos:line="40" pos:column="8"/></block></switch>
      <expr_stmt><expr><operator pos:line="41" pos:column="7">*<pos:position pos:line="41" pos:column="8"/></operator><name pos:line="41" pos:column="8">nextTokPtr<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">ptr<pos:position pos:line="41" pos:column="24"/></name></expr>;<pos:position pos:line="41" pos:column="25"/></expr_stmt>
      <return pos:line="42" pos:column="7">return <expr><name pos:line="42" pos:column="14">XML_TOK_INVALID<pos:position pos:line="42" pos:column="29"/></name></expr>;<pos:position pos:line="42" pos:column="30"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block>
  <case pos:line="44" pos:column="3">case <expr><name pos:line="44" pos:column="8">BT_CR<pos:position pos:line="44" pos:column="13"/></name></expr>:<pos:position pos:line="44" pos:column="14"/></case>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">ptr<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">+<pos:position pos:line="45" pos:column="14"/></operator> <call><name pos:line="45" pos:column="15">MINBPC<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">enc<pos:position pos:line="45" pos:column="25"/></name></expr></argument>)<pos:position pos:line="45" pos:column="26"/></argument_list></call> <operator pos:line="45" pos:column="27">==<pos:position pos:line="45" pos:column="29"/></operator> <name pos:line="45" pos:column="30">end<pos:position pos:line="45" pos:column="33"/></name></expr>)<pos:position pos:line="45" pos:column="34"/></condition><then pos:line="45" pos:column="34"> <block pos:line="45" pos:column="35">{
      <expr_stmt><expr><operator pos:line="46" pos:column="7">*<pos:position pos:line="46" pos:column="8"/></operator><name pos:line="46" pos:column="8">nextTokPtr<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <name pos:line="46" pos:column="21">end<pos:position pos:line="46" pos:column="24"/></name></expr>;<pos:position pos:line="46" pos:column="25"/></expr_stmt>
      <comment type="block" pos:line="47" pos:column="7">/* indicate that this might be part of a CR/LF pair */</comment>
      <return pos:line="48" pos:column="7">return <expr><operator pos:line="48" pos:column="14">-<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="15">XML_TOK_PROLOG_S<pos:position pos:line="48" pos:column="31"/></name></expr>;<pos:position pos:line="48" pos:column="32"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="50" pos:column="5">/* fall through */</comment>
  <case pos:line="51" pos:column="3">case <expr><name pos:line="51" pos:column="8">BT_S<pos:position pos:line="51" pos:column="12"/></name></expr>:<pos:position pos:line="51" pos:column="13"/></case> <case pos:line="51" pos:column="14">case <expr><name pos:line="51" pos:column="19">BT_LF<pos:position pos:line="51" pos:column="24"/></name></expr>:<pos:position pos:line="51" pos:column="25"/></case>
    <for pos:line="52" pos:column="5">for <control pos:line="52" pos:column="9">(<init pos:line="52" pos:column="10">;<pos:position pos:line="52" pos:column="11"/></init><condition pos:line="52" pos:column="11">;<pos:position pos:line="52" pos:column="12"/></condition><incr/>)<pos:position pos:line="52" pos:column="13"/></control> <block pos:line="52" pos:column="14">{
      <expr_stmt><expr><name pos:line="53" pos:column="7">ptr<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">+=<pos:position pos:line="53" pos:column="13"/></operator> <call><name pos:line="53" pos:column="14">MINBPC<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">enc<pos:position pos:line="53" pos:column="24"/></name></expr></argument>)<pos:position pos:line="53" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="26"/></expr_stmt>
      <if pos:line="54" pos:column="7">if <condition pos:line="54" pos:column="10">(<expr><name pos:line="54" pos:column="11">ptr<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">==<pos:position pos:line="54" pos:column="17"/></operator> <name pos:line="54" pos:column="18">end<pos:position pos:line="54" pos:column="21"/></name></expr>)<pos:position pos:line="54" pos:column="22"/></condition><then pos:line="54" pos:column="22">
        <block type="pseudo"><break pos:line="55" pos:column="9">break;<pos:position pos:line="55" pos:column="15"/></break></block></then></if>
      <switch pos:line="56" pos:column="7">switch <condition pos:line="56" pos:column="14">(<expr><call><name pos:line="56" pos:column="15">BYTE_TYPE<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">enc<pos:position pos:line="56" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="30">ptr<pos:position pos:line="56" pos:column="33"/></name></expr></argument>)<pos:position pos:line="56" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="35"/></condition> <block pos:line="56" pos:column="36">{
      <case pos:line="57" pos:column="7">case <expr><name pos:line="57" pos:column="12">BT_S<pos:position pos:line="57" pos:column="16"/></name></expr>:<pos:position pos:line="57" pos:column="17"/></case> <case pos:line="57" pos:column="18">case <expr><name pos:line="57" pos:column="23">BT_LF<pos:position pos:line="57" pos:column="28"/></name></expr>:<pos:position pos:line="57" pos:column="29"/></case>
        <break pos:line="58" pos:column="9">break;<pos:position pos:line="58" pos:column="15"/></break>
      <case pos:line="59" pos:column="7">case <expr><name pos:line="59" pos:column="12">BT_CR<pos:position pos:line="59" pos:column="17"/></name></expr>:<pos:position pos:line="59" pos:column="18"/></case>
        <comment type="block" pos:line="60" pos:column="9">/* don't split CR/LF pair */</comment>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">ptr<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">+<pos:position pos:line="61" pos:column="18"/></operator> <call><name pos:line="61" pos:column="19">MINBPC<pos:position pos:line="61" pos:column="25"/></name><argument_list pos:line="61" pos:column="25">(<argument><expr><name pos:line="61" pos:column="26">enc<pos:position pos:line="61" pos:column="29"/></name></expr></argument>)<pos:position pos:line="61" pos:column="30"/></argument_list></call> <operator pos:line="61" pos:column="31">!=<pos:position pos:line="61" pos:column="33"/></operator> <name pos:line="61" pos:column="34">end<pos:position pos:line="61" pos:column="37"/></name></expr>)<pos:position pos:line="61" pos:column="38"/></condition><then pos:line="61" pos:column="38">
          <block type="pseudo"><break pos:line="62" pos:column="11">break;<pos:position pos:line="62" pos:column="17"/></break></block></then></if>
        <comment type="block" pos:line="63" pos:column="9">/* fall through */</comment>
      <default pos:line="64" pos:column="7">default:<pos:position pos:line="64" pos:column="15"/></default>
        <expr_stmt><expr><operator pos:line="65" pos:column="9">*<pos:position pos:line="65" pos:column="10"/></operator><name pos:line="65" pos:column="10">nextTokPtr<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <name pos:line="65" pos:column="23">ptr<pos:position pos:line="65" pos:column="26"/></name></expr>;<pos:position pos:line="65" pos:column="27"/></expr_stmt>
        <return pos:line="66" pos:column="9">return <expr><name pos:line="66" pos:column="16">XML_TOK_PROLOG_S<pos:position pos:line="66" pos:column="32"/></name></expr>;<pos:position pos:line="66" pos:column="33"/></return>
      }<pos:position pos:line="67" pos:column="8"/></block></switch>
    }<pos:position pos:line="68" pos:column="6"/></block></for>
    <expr_stmt><expr><operator pos:line="69" pos:column="5">*<pos:position pos:line="69" pos:column="6"/></operator><name pos:line="69" pos:column="6">nextTokPtr<pos:position pos:line="69" pos:column="16"/></name> <operator pos:line="69" pos:column="17">=<pos:position pos:line="69" pos:column="18"/></operator> <name pos:line="69" pos:column="19">ptr<pos:position pos:line="69" pos:column="22"/></name></expr>;<pos:position pos:line="69" pos:column="23"/></expr_stmt>
    <return pos:line="70" pos:column="5">return <expr><name pos:line="70" pos:column="12">XML_TOK_PROLOG_S<pos:position pos:line="70" pos:column="28"/></name></expr>;<pos:position pos:line="70" pos:column="29"/></return>
  <case pos:line="71" pos:column="3">case <expr><name pos:line="71" pos:column="8">BT_PERCNT<pos:position pos:line="71" pos:column="17"/></name></expr>:<pos:position pos:line="71" pos:column="18"/></case>
    <return pos:line="72" pos:column="5">return <expr><call><call><name pos:line="72" pos:column="12">PREFIX<pos:position pos:line="72" pos:column="18"/></name><argument_list pos:line="72" pos:column="18">(<argument><expr><name pos:line="72" pos:column="19">scanPercent<pos:position pos:line="72" pos:column="30"/></name></expr></argument>)<pos:position pos:line="72" pos:column="31"/></argument_list></call><argument_list pos:line="72" pos:column="31">(<argument><expr><name pos:line="72" pos:column="32">enc<pos:position pos:line="72" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="37">ptr<pos:position pos:line="72" pos:column="40"/></name> <operator pos:line="72" pos:column="41">+<pos:position pos:line="72" pos:column="42"/></operator> <call><name pos:line="72" pos:column="43">MINBPC<pos:position pos:line="72" pos:column="49"/></name><argument_list pos:line="72" pos:column="49">(<argument><expr><name pos:line="72" pos:column="50">enc<pos:position pos:line="72" pos:column="53"/></name></expr></argument>)<pos:position pos:line="72" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="72" pos:column="56">end<pos:position pos:line="72" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="61">nextTokPtr<pos:position pos:line="72" pos:column="71"/></name></expr></argument>)<pos:position pos:line="72" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="73"/></return>
  <case pos:line="73" pos:column="3">case <expr><name pos:line="73" pos:column="8">BT_COMMA<pos:position pos:line="73" pos:column="16"/></name></expr>:<pos:position pos:line="73" pos:column="17"/></case>
    <expr_stmt><expr><operator pos:line="74" pos:column="5">*<pos:position pos:line="74" pos:column="6"/></operator><name pos:line="74" pos:column="6">nextTokPtr<pos:position pos:line="74" pos:column="16"/></name> <operator pos:line="74" pos:column="17">=<pos:position pos:line="74" pos:column="18"/></operator> <name pos:line="74" pos:column="19">ptr<pos:position pos:line="74" pos:column="22"/></name> <operator pos:line="74" pos:column="23">+<pos:position pos:line="74" pos:column="24"/></operator> <call><name pos:line="74" pos:column="25">MINBPC<pos:position pos:line="74" pos:column="31"/></name><argument_list pos:line="74" pos:column="31">(<argument><expr><name pos:line="74" pos:column="32">enc<pos:position pos:line="74" pos:column="35"/></name></expr></argument>)<pos:position pos:line="74" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="37"/></expr_stmt>
    <return pos:line="75" pos:column="5">return <expr><name pos:line="75" pos:column="12">XML_TOK_COMMA<pos:position pos:line="75" pos:column="25"/></name></expr>;<pos:position pos:line="75" pos:column="26"/></return>
  <case pos:line="76" pos:column="3">case <expr><name pos:line="76" pos:column="8">BT_LSQB<pos:position pos:line="76" pos:column="15"/></name></expr>:<pos:position pos:line="76" pos:column="16"/></case>
    <expr_stmt><expr><operator pos:line="77" pos:column="5">*<pos:position pos:line="77" pos:column="6"/></operator><name pos:line="77" pos:column="6">nextTokPtr<pos:position pos:line="77" pos:column="16"/></name> <operator pos:line="77" pos:column="17">=<pos:position pos:line="77" pos:column="18"/></operator> <name pos:line="77" pos:column="19">ptr<pos:position pos:line="77" pos:column="22"/></name> <operator pos:line="77" pos:column="23">+<pos:position pos:line="77" pos:column="24"/></operator> <call><name pos:line="77" pos:column="25">MINBPC<pos:position pos:line="77" pos:column="31"/></name><argument_list pos:line="77" pos:column="31">(<argument><expr><name pos:line="77" pos:column="32">enc<pos:position pos:line="77" pos:column="35"/></name></expr></argument>)<pos:position pos:line="77" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="37"/></expr_stmt>
    <return pos:line="78" pos:column="5">return <expr><name pos:line="78" pos:column="12">XML_TOK_OPEN_BRACKET<pos:position pos:line="78" pos:column="32"/></name></expr>;<pos:position pos:line="78" pos:column="33"/></return>
  <case pos:line="79" pos:column="3">case <expr><name pos:line="79" pos:column="8">BT_RSQB<pos:position pos:line="79" pos:column="15"/></name></expr>:<pos:position pos:line="79" pos:column="16"/></case>
    <expr_stmt><expr><name pos:line="80" pos:column="5">ptr<pos:position pos:line="80" pos:column="8"/></name> <operator pos:line="80" pos:column="9">+=<pos:position pos:line="80" pos:column="11"/></operator> <call><name pos:line="80" pos:column="12">MINBPC<pos:position pos:line="80" pos:column="18"/></name><argument_list pos:line="80" pos:column="18">(<argument><expr><name pos:line="80" pos:column="19">enc<pos:position pos:line="80" pos:column="22"/></name></expr></argument>)<pos:position pos:line="80" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="24"/></expr_stmt>
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><name pos:line="81" pos:column="9">ptr<pos:position pos:line="81" pos:column="12"/></name> <operator pos:line="81" pos:column="13">==<pos:position pos:line="81" pos:column="15"/></operator> <name pos:line="81" pos:column="16">end<pos:position pos:line="81" pos:column="19"/></name></expr>)<pos:position pos:line="81" pos:column="20"/></condition><then pos:line="81" pos:column="20">
      <block type="pseudo"><return pos:line="82" pos:column="7">return <expr><operator pos:line="82" pos:column="14">-<pos:position pos:line="82" pos:column="15"/></operator><name pos:line="82" pos:column="15">XML_TOK_CLOSE_BRACKET<pos:position pos:line="82" pos:column="36"/></name></expr>;<pos:position pos:line="82" pos:column="37"/></return></block></then></if>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><call><name pos:line="83" pos:column="9">CHAR_MATCHES<pos:position pos:line="83" pos:column="21"/></name><argument_list pos:line="83" pos:column="21">(<argument><expr><name pos:line="83" pos:column="22">enc<pos:position pos:line="83" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="27">ptr<pos:position pos:line="83" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="32">ASCII_RSQB<pos:position pos:line="83" pos:column="42"/></name></expr></argument>)<pos:position pos:line="83" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="44"/></condition><then pos:line="83" pos:column="44"> <block pos:line="83" pos:column="45">{
      <if pos:line="84" pos:column="7">if <condition pos:line="84" pos:column="10">(<expr><name pos:line="84" pos:column="11">ptr<pos:position pos:line="84" pos:column="14"/></name> <operator pos:line="84" pos:column="15">+<pos:position pos:line="84" pos:column="16"/></operator> <call><name pos:line="84" pos:column="17">MINBPC<pos:position pos:line="84" pos:column="23"/></name><argument_list pos:line="84" pos:column="23">(<argument><expr><name pos:line="84" pos:column="24">enc<pos:position pos:line="84" pos:column="27"/></name></expr></argument>)<pos:position pos:line="84" pos:column="28"/></argument_list></call> <operator pos:line="84" pos:column="29">==<pos:position pos:line="84" pos:column="31"/></operator> <name pos:line="84" pos:column="32">end<pos:position pos:line="84" pos:column="35"/></name></expr>)<pos:position pos:line="84" pos:column="36"/></condition><then pos:line="84" pos:column="36">
        <block type="pseudo"><return pos:line="85" pos:column="9">return <expr><name pos:line="85" pos:column="16">XML_TOK_PARTIAL<pos:position pos:line="85" pos:column="31"/></name></expr>;<pos:position pos:line="85" pos:column="32"/></return></block></then></if>
      <if pos:line="86" pos:column="7">if <condition pos:line="86" pos:column="10">(<expr><call><name pos:line="86" pos:column="11">CHAR_MATCHES<pos:position pos:line="86" pos:column="23"/></name><argument_list pos:line="86" pos:column="23">(<argument><expr><name pos:line="86" pos:column="24">enc<pos:position pos:line="86" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="29">ptr<pos:position pos:line="86" pos:column="32"/></name> <operator pos:line="86" pos:column="33">+<pos:position pos:line="86" pos:column="34"/></operator> <call><name pos:line="86" pos:column="35">MINBPC<pos:position pos:line="86" pos:column="41"/></name><argument_list pos:line="86" pos:column="41">(<argument><expr><name pos:line="86" pos:column="42">enc<pos:position pos:line="86" pos:column="45"/></name></expr></argument>)<pos:position pos:line="86" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="86" pos:column="48">ASCII_GT<pos:position pos:line="86" pos:column="56"/></name></expr></argument>)<pos:position pos:line="86" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="58"/></condition><then pos:line="86" pos:column="58"> <block pos:line="86" pos:column="59">{
        <expr_stmt><expr><operator pos:line="87" pos:column="9">*<pos:position pos:line="87" pos:column="10"/></operator><name pos:line="87" pos:column="10">nextTokPtr<pos:position pos:line="87" pos:column="20"/></name> <operator pos:line="87" pos:column="21">=<pos:position pos:line="87" pos:column="22"/></operator> <name pos:line="87" pos:column="23">ptr<pos:position pos:line="87" pos:column="26"/></name> <operator pos:line="87" pos:column="27">+<pos:position pos:line="87" pos:column="28"/></operator> <literal type="number" pos:line="87" pos:column="29">2<pos:position pos:line="87" pos:column="30"/></literal><operator pos:line="87" pos:column="30">*<pos:position pos:line="87" pos:column="31"/></operator><call><name pos:line="87" pos:column="31">MINBPC<pos:position pos:line="87" pos:column="37"/></name><argument_list pos:line="87" pos:column="37">(<argument><expr><name pos:line="87" pos:column="38">enc<pos:position pos:line="87" pos:column="41"/></name></expr></argument>)<pos:position pos:line="87" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="43"/></expr_stmt>
        <return pos:line="88" pos:column="9">return <expr><name pos:line="88" pos:column="16">XML_TOK_COND_SECT_CLOSE<pos:position pos:line="88" pos:column="39"/></name></expr>;<pos:position pos:line="88" pos:column="40"/></return>
      }<pos:position pos:line="89" pos:column="8"/></block></then></if>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="91" pos:column="5">*<pos:position pos:line="91" pos:column="6"/></operator><name pos:line="91" pos:column="6">nextTokPtr<pos:position pos:line="91" pos:column="16"/></name> <operator pos:line="91" pos:column="17">=<pos:position pos:line="91" pos:column="18"/></operator> <name pos:line="91" pos:column="19">ptr<pos:position pos:line="91" pos:column="22"/></name></expr>;<pos:position pos:line="91" pos:column="23"/></expr_stmt>
    <return pos:line="92" pos:column="5">return <expr><name pos:line="92" pos:column="12">XML_TOK_CLOSE_BRACKET<pos:position pos:line="92" pos:column="33"/></name></expr>;<pos:position pos:line="92" pos:column="34"/></return>
  <case pos:line="93" pos:column="3">case <expr><name pos:line="93" pos:column="8">BT_LPAR<pos:position pos:line="93" pos:column="15"/></name></expr>:<pos:position pos:line="93" pos:column="16"/></case>
    <expr_stmt><expr><operator pos:line="94" pos:column="5">*<pos:position pos:line="94" pos:column="6"/></operator><name pos:line="94" pos:column="6">nextTokPtr<pos:position pos:line="94" pos:column="16"/></name> <operator pos:line="94" pos:column="17">=<pos:position pos:line="94" pos:column="18"/></operator> <name pos:line="94" pos:column="19">ptr<pos:position pos:line="94" pos:column="22"/></name> <operator pos:line="94" pos:column="23">+<pos:position pos:line="94" pos:column="24"/></operator> <call><name pos:line="94" pos:column="25">MINBPC<pos:position pos:line="94" pos:column="31"/></name><argument_list pos:line="94" pos:column="31">(<argument><expr><name pos:line="94" pos:column="32">enc<pos:position pos:line="94" pos:column="35"/></name></expr></argument>)<pos:position pos:line="94" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="37"/></expr_stmt>
    <return pos:line="95" pos:column="5">return <expr><name pos:line="95" pos:column="12">XML_TOK_OPEN_PAREN<pos:position pos:line="95" pos:column="30"/></name></expr>;<pos:position pos:line="95" pos:column="31"/></return>
  <case pos:line="96" pos:column="3">case <expr><name pos:line="96" pos:column="8">BT_RPAR<pos:position pos:line="96" pos:column="15"/></name></expr>:<pos:position pos:line="96" pos:column="16"/></case>
    <expr_stmt><expr><name pos:line="97" pos:column="5">ptr<pos:position pos:line="97" pos:column="8"/></name> <operator pos:line="97" pos:column="9">+=<pos:position pos:line="97" pos:column="11"/></operator> <call><name pos:line="97" pos:column="12">MINBPC<pos:position pos:line="97" pos:column="18"/></name><argument_list pos:line="97" pos:column="18">(<argument><expr><name pos:line="97" pos:column="19">enc<pos:position pos:line="97" pos:column="22"/></name></expr></argument>)<pos:position pos:line="97" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="24"/></expr_stmt>
    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><name pos:line="98" pos:column="9">ptr<pos:position pos:line="98" pos:column="12"/></name> <operator pos:line="98" pos:column="13">==<pos:position pos:line="98" pos:column="15"/></operator> <name pos:line="98" pos:column="16">end<pos:position pos:line="98" pos:column="19"/></name></expr>)<pos:position pos:line="98" pos:column="20"/></condition><then pos:line="98" pos:column="20">
      <block type="pseudo"><return pos:line="99" pos:column="7">return <expr><operator pos:line="99" pos:column="14">-<pos:position pos:line="99" pos:column="15"/></operator><name pos:line="99" pos:column="15">XML_TOK_CLOSE_PAREN<pos:position pos:line="99" pos:column="34"/></name></expr>;<pos:position pos:line="99" pos:column="35"/></return></block></then></if>
    <switch pos:line="100" pos:column="5">switch <condition pos:line="100" pos:column="12">(<expr><call><name pos:line="100" pos:column="13">BYTE_TYPE<pos:position pos:line="100" pos:column="22"/></name><argument_list pos:line="100" pos:column="22">(<argument><expr><name pos:line="100" pos:column="23">enc<pos:position pos:line="100" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="28">ptr<pos:position pos:line="100" pos:column="31"/></name></expr></argument>)<pos:position pos:line="100" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="33"/></condition> <block pos:line="100" pos:column="34">{
    <case pos:line="101" pos:column="5">case <expr><name pos:line="101" pos:column="10">BT_AST<pos:position pos:line="101" pos:column="16"/></name></expr>:<pos:position pos:line="101" pos:column="17"/></case>
      <expr_stmt><expr><operator pos:line="102" pos:column="7">*<pos:position pos:line="102" pos:column="8"/></operator><name pos:line="102" pos:column="8">nextTokPtr<pos:position pos:line="102" pos:column="18"/></name> <operator pos:line="102" pos:column="19">=<pos:position pos:line="102" pos:column="20"/></operator> <name pos:line="102" pos:column="21">ptr<pos:position pos:line="102" pos:column="24"/></name> <operator pos:line="102" pos:column="25">+<pos:position pos:line="102" pos:column="26"/></operator> <call><name pos:line="102" pos:column="27">MINBPC<pos:position pos:line="102" pos:column="33"/></name><argument_list pos:line="102" pos:column="33">(<argument><expr><name pos:line="102" pos:column="34">enc<pos:position pos:line="102" pos:column="37"/></name></expr></argument>)<pos:position pos:line="102" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="39"/></expr_stmt>
      <return pos:line="103" pos:column="7">return <expr><name pos:line="103" pos:column="14">XML_TOK_CLOSE_PAREN_ASTERISK<pos:position pos:line="103" pos:column="42"/></name></expr>;<pos:position pos:line="103" pos:column="43"/></return>
    <case pos:line="104" pos:column="5">case <expr><name pos:line="104" pos:column="10">BT_QUEST<pos:position pos:line="104" pos:column="18"/></name></expr>:<pos:position pos:line="104" pos:column="19"/></case>
      <expr_stmt><expr><operator pos:line="105" pos:column="7">*<pos:position pos:line="105" pos:column="8"/></operator><name pos:line="105" pos:column="8">nextTokPtr<pos:position pos:line="105" pos:column="18"/></name> <operator pos:line="105" pos:column="19">=<pos:position pos:line="105" pos:column="20"/></operator> <name pos:line="105" pos:column="21">ptr<pos:position pos:line="105" pos:column="24"/></name> <operator pos:line="105" pos:column="25">+<pos:position pos:line="105" pos:column="26"/></operator> <call><name pos:line="105" pos:column="27">MINBPC<pos:position pos:line="105" pos:column="33"/></name><argument_list pos:line="105" pos:column="33">(<argument><expr><name pos:line="105" pos:column="34">enc<pos:position pos:line="105" pos:column="37"/></name></expr></argument>)<pos:position pos:line="105" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="39"/></expr_stmt>
      <return pos:line="106" pos:column="7">return <expr><name pos:line="106" pos:column="14">XML_TOK_CLOSE_PAREN_QUESTION<pos:position pos:line="106" pos:column="42"/></name></expr>;<pos:position pos:line="106" pos:column="43"/></return>
    <case pos:line="107" pos:column="5">case <expr><name pos:line="107" pos:column="10">BT_PLUS<pos:position pos:line="107" pos:column="17"/></name></expr>:<pos:position pos:line="107" pos:column="18"/></case>
      <expr_stmt><expr><operator pos:line="108" pos:column="7">*<pos:position pos:line="108" pos:column="8"/></operator><name pos:line="108" pos:column="8">nextTokPtr<pos:position pos:line="108" pos:column="18"/></name> <operator pos:line="108" pos:column="19">=<pos:position pos:line="108" pos:column="20"/></operator> <name pos:line="108" pos:column="21">ptr<pos:position pos:line="108" pos:column="24"/></name> <operator pos:line="108" pos:column="25">+<pos:position pos:line="108" pos:column="26"/></operator> <call><name pos:line="108" pos:column="27">MINBPC<pos:position pos:line="108" pos:column="33"/></name><argument_list pos:line="108" pos:column="33">(<argument><expr><name pos:line="108" pos:column="34">enc<pos:position pos:line="108" pos:column="37"/></name></expr></argument>)<pos:position pos:line="108" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="39"/></expr_stmt>
      <return pos:line="109" pos:column="7">return <expr><name pos:line="109" pos:column="14">XML_TOK_CLOSE_PAREN_PLUS<pos:position pos:line="109" pos:column="38"/></name></expr>;<pos:position pos:line="109" pos:column="39"/></return>
    <case pos:line="110" pos:column="5">case <expr><name pos:line="110" pos:column="10">BT_CR<pos:position pos:line="110" pos:column="15"/></name></expr>:<pos:position pos:line="110" pos:column="16"/></case> <case pos:line="110" pos:column="17">case <expr><name pos:line="110" pos:column="22">BT_LF<pos:position pos:line="110" pos:column="27"/></name></expr>:<pos:position pos:line="110" pos:column="28"/></case> <case pos:line="110" pos:column="29">case <expr><name pos:line="110" pos:column="34">BT_S<pos:position pos:line="110" pos:column="38"/></name></expr>:<pos:position pos:line="110" pos:column="39"/></case>
    <case pos:line="111" pos:column="5">case <expr><name pos:line="111" pos:column="10">BT_GT<pos:position pos:line="111" pos:column="15"/></name></expr>:<pos:position pos:line="111" pos:column="16"/></case> <case pos:line="111" pos:column="17">case <expr><name pos:line="111" pos:column="22">BT_COMMA<pos:position pos:line="111" pos:column="30"/></name></expr>:<pos:position pos:line="111" pos:column="31"/></case> <case pos:line="111" pos:column="32">case <expr><name pos:line="111" pos:column="37">BT_VERBAR<pos:position pos:line="111" pos:column="46"/></name></expr>:<pos:position pos:line="111" pos:column="47"/></case>
    <case pos:line="112" pos:column="5">case <expr><name pos:line="112" pos:column="10">BT_RPAR<pos:position pos:line="112" pos:column="17"/></name></expr>:<pos:position pos:line="112" pos:column="18"/></case>
      <expr_stmt><expr><operator pos:line="113" pos:column="7">*<pos:position pos:line="113" pos:column="8"/></operator><name pos:line="113" pos:column="8">nextTokPtr<pos:position pos:line="113" pos:column="18"/></name> <operator pos:line="113" pos:column="19">=<pos:position pos:line="113" pos:column="20"/></operator> <name pos:line="113" pos:column="21">ptr<pos:position pos:line="113" pos:column="24"/></name></expr>;<pos:position pos:line="113" pos:column="25"/></expr_stmt>
      <return pos:line="114" pos:column="7">return <expr><name pos:line="114" pos:column="14">XML_TOK_CLOSE_PAREN<pos:position pos:line="114" pos:column="33"/></name></expr>;<pos:position pos:line="114" pos:column="34"/></return>
    }<pos:position pos:line="115" pos:column="6"/></block></switch>
    <expr_stmt><expr><operator pos:line="116" pos:column="5">*<pos:position pos:line="116" pos:column="6"/></operator><name pos:line="116" pos:column="6">nextTokPtr<pos:position pos:line="116" pos:column="16"/></name> <operator pos:line="116" pos:column="17">=<pos:position pos:line="116" pos:column="18"/></operator> <name pos:line="116" pos:column="19">ptr<pos:position pos:line="116" pos:column="22"/></name></expr>;<pos:position pos:line="116" pos:column="23"/></expr_stmt>
    <return pos:line="117" pos:column="5">return <expr><name pos:line="117" pos:column="12">XML_TOK_INVALID<pos:position pos:line="117" pos:column="27"/></name></expr>;<pos:position pos:line="117" pos:column="28"/></return>
  <case pos:line="118" pos:column="3">case <expr><name pos:line="118" pos:column="8">BT_VERBAR<pos:position pos:line="118" pos:column="17"/></name></expr>:<pos:position pos:line="118" pos:column="18"/></case>
    <expr_stmt><expr><operator pos:line="119" pos:column="5">*<pos:position pos:line="119" pos:column="6"/></operator><name pos:line="119" pos:column="6">nextTokPtr<pos:position pos:line="119" pos:column="16"/></name> <operator pos:line="119" pos:column="17">=<pos:position pos:line="119" pos:column="18"/></operator> <name pos:line="119" pos:column="19">ptr<pos:position pos:line="119" pos:column="22"/></name> <operator pos:line="119" pos:column="23">+<pos:position pos:line="119" pos:column="24"/></operator> <call><name pos:line="119" pos:column="25">MINBPC<pos:position pos:line="119" pos:column="31"/></name><argument_list pos:line="119" pos:column="31">(<argument><expr><name pos:line="119" pos:column="32">enc<pos:position pos:line="119" pos:column="35"/></name></expr></argument>)<pos:position pos:line="119" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="37"/></expr_stmt>
    <return pos:line="120" pos:column="5">return <expr><name pos:line="120" pos:column="12">XML_TOK_OR<pos:position pos:line="120" pos:column="22"/></name></expr>;<pos:position pos:line="120" pos:column="23"/></return>
  <case pos:line="121" pos:column="3">case <expr><name pos:line="121" pos:column="8">BT_GT<pos:position pos:line="121" pos:column="13"/></name></expr>:<pos:position pos:line="121" pos:column="14"/></case>
    <expr_stmt><expr><operator pos:line="122" pos:column="5">*<pos:position pos:line="122" pos:column="6"/></operator><name pos:line="122" pos:column="6">nextTokPtr<pos:position pos:line="122" pos:column="16"/></name> <operator pos:line="122" pos:column="17">=<pos:position pos:line="122" pos:column="18"/></operator> <name pos:line="122" pos:column="19">ptr<pos:position pos:line="122" pos:column="22"/></name> <operator pos:line="122" pos:column="23">+<pos:position pos:line="122" pos:column="24"/></operator> <call><name pos:line="122" pos:column="25">MINBPC<pos:position pos:line="122" pos:column="31"/></name><argument_list pos:line="122" pos:column="31">(<argument><expr><name pos:line="122" pos:column="32">enc<pos:position pos:line="122" pos:column="35"/></name></expr></argument>)<pos:position pos:line="122" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="37"/></expr_stmt>
    <return pos:line="123" pos:column="5">return <expr><name pos:line="123" pos:column="12">XML_TOK_DECL_CLOSE<pos:position pos:line="123" pos:column="30"/></name></expr>;<pos:position pos:line="123" pos:column="31"/></return>
  <case pos:line="124" pos:column="3">case <expr><name pos:line="124" pos:column="8">BT_NUM<pos:position pos:line="124" pos:column="14"/></name></expr>:<pos:position pos:line="124" pos:column="15"/></case>
    <return pos:line="125" pos:column="5">return <expr><call><call><name pos:line="125" pos:column="12">PREFIX<pos:position pos:line="125" pos:column="18"/></name><argument_list pos:line="125" pos:column="18">(<argument><expr><name pos:line="125" pos:column="19">scanPoundName<pos:position pos:line="125" pos:column="32"/></name></expr></argument>)<pos:position pos:line="125" pos:column="33"/></argument_list></call><argument_list pos:line="125" pos:column="33">(<argument><expr><name pos:line="125" pos:column="34">enc<pos:position pos:line="125" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="39">ptr<pos:position pos:line="125" pos:column="42"/></name> <operator pos:line="125" pos:column="43">+<pos:position pos:line="125" pos:column="44"/></operator> <call><name pos:line="125" pos:column="45">MINBPC<pos:position pos:line="125" pos:column="51"/></name><argument_list pos:line="125" pos:column="51">(<argument><expr><name pos:line="125" pos:column="52">enc<pos:position pos:line="125" pos:column="55"/></name></expr></argument>)<pos:position pos:line="125" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="125" pos:column="58">end<pos:position pos:line="125" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="63">nextTokPtr<pos:position pos:line="125" pos:column="73"/></name></expr></argument>)<pos:position pos:line="125" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="75"/></return>
<cpp:define pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">define<pos:position pos:line="126" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="126" pos:column="9">LEAD_CASE<pos:position pos:line="126" pos:column="18"/></name><parameter_list pos:line="126" pos:column="18">(<parameter><type><name pos:line="126" pos:column="19">n<pos:position pos:line="126" pos:column="20"/></name></type></parameter>)<pos:position pos:line="126" pos:column="21"/></parameter_list></cpp:macro> \
  <cpp:value pos:line="127" pos:column="3">case BT_LEAD ## n: \
    if (end - ptr &lt; n) \
      return XML_TOK_PARTIAL_CHAR; \
    if (IS_NMSTRT_CHAR(enc, ptr, n)) { \
      ptr += n; \
      tok = XML_TOK_NAME; \
      break; \
    } \
    if (IS_NAME_CHAR(enc, ptr, n)) { \
      ptr += n; \
      tok = XML_TOK_NMTOKEN; \
      break; \
    } \
    *nextTokPtr = ptr; \
    return XML_TOK_INVALID;<pos:position pos:line="141" pos:column="28"/></cpp:value></cpp:define>
    <macro><name pos:line="142" pos:column="5">LEAD_CASE<pos:position pos:line="142" pos:column="14"/></name><argument_list pos:line="142" pos:column="14">(<argument><literal type="number" pos:line="142" pos:column="15">2<pos:position pos:line="142" pos:column="16"/></literal></argument>)<pos:position pos:line="142" pos:column="17"/></argument_list></macro> <macro><name pos:line="142" pos:column="18">LEAD_CASE<pos:position pos:line="142" pos:column="27"/></name><argument_list pos:line="142" pos:column="27">(<argument><literal type="number" pos:line="142" pos:column="28">3<pos:position pos:line="142" pos:column="29"/></literal></argument>)<pos:position pos:line="142" pos:column="30"/></argument_list></macro> <macro><name pos:line="142" pos:column="31">LEAD_CASE<pos:position pos:line="142" pos:column="40"/></name><argument_list pos:line="142" pos:column="40">(<argument><literal type="number" pos:line="142" pos:column="41">4<pos:position pos:line="142" pos:column="42"/></literal></argument>)<pos:position pos:line="142" pos:column="43"/></argument_list></macro>
<cpp:undef pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">undef<pos:position pos:line="143" pos:column="7"/></cpp:directive> <name pos:line="143" pos:column="8">LEAD_CASE<pos:position pos:line="143" pos:column="17"/></name></cpp:undef>
  <case pos:line="144" pos:column="3">case <expr><name pos:line="144" pos:column="8">BT_NMSTRT<pos:position pos:line="144" pos:column="17"/></name></expr>:<pos:position pos:line="144" pos:column="18"/></case>
  <case pos:line="145" pos:column="3">case <expr><name pos:line="145" pos:column="8">BT_HEX<pos:position pos:line="145" pos:column="14"/></name></expr>:<pos:position pos:line="145" pos:column="15"/></case>
    <expr_stmt><expr><name pos:line="146" pos:column="5">tok<pos:position pos:line="146" pos:column="8"/></name> <operator pos:line="146" pos:column="9">=<pos:position pos:line="146" pos:column="10"/></operator> <name pos:line="146" pos:column="11">XML_TOK_NAME<pos:position pos:line="146" pos:column="23"/></name></expr>;<pos:position pos:line="146" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="147" pos:column="5">ptr<pos:position pos:line="147" pos:column="8"/></name> <operator pos:line="147" pos:column="9">+=<pos:position pos:line="147" pos:column="11"/></operator> <call><name pos:line="147" pos:column="12">MINBPC<pos:position pos:line="147" pos:column="18"/></name><argument_list pos:line="147" pos:column="18">(<argument><expr><name pos:line="147" pos:column="19">enc<pos:position pos:line="147" pos:column="22"/></name></expr></argument>)<pos:position pos:line="147" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="24"/></expr_stmt>
    <break pos:line="148" pos:column="5">break;<pos:position pos:line="148" pos:column="11"/></break>
  <case pos:line="149" pos:column="3">case <expr><name pos:line="149" pos:column="8">BT_DIGIT<pos:position pos:line="149" pos:column="16"/></name></expr>:<pos:position pos:line="149" pos:column="17"/></case>
  <case pos:line="150" pos:column="3">case <expr><name pos:line="150" pos:column="8">BT_NAME<pos:position pos:line="150" pos:column="15"/></name></expr>:<pos:position pos:line="150" pos:column="16"/></case>
  <case pos:line="151" pos:column="3">case <expr><name pos:line="151" pos:column="8">BT_MINUS<pos:position pos:line="151" pos:column="16"/></name></expr>:<pos:position pos:line="151" pos:column="17"/></case>
<cpp:ifdef pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">ifdef<pos:position pos:line="152" pos:column="7"/></cpp:directive> <name pos:line="152" pos:column="8">XML_NS<pos:position pos:line="152" pos:column="14"/></name></cpp:ifdef>
  <case pos:line="153" pos:column="3">case <expr><name pos:line="153" pos:column="8">BT_COLON<pos:position pos:line="153" pos:column="16"/></name></expr>:<pos:position pos:line="153" pos:column="17"/></case>
<cpp:endif pos:line="154" pos:column="1">#<cpp:directive pos:line="154" pos:column="2">endif<pos:position pos:line="154" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="155" pos:column="5">tok<pos:position pos:line="155" pos:column="8"/></name> <operator pos:line="155" pos:column="9">=<pos:position pos:line="155" pos:column="10"/></operator> <name pos:line="155" pos:column="11">XML_TOK_NMTOKEN<pos:position pos:line="155" pos:column="26"/></name></expr>;<pos:position pos:line="155" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="156" pos:column="5">ptr<pos:position pos:line="156" pos:column="8"/></name> <operator pos:line="156" pos:column="9">+=<pos:position pos:line="156" pos:column="11"/></operator> <call><name pos:line="156" pos:column="12">MINBPC<pos:position pos:line="156" pos:column="18"/></name><argument_list pos:line="156" pos:column="18">(<argument><expr><name pos:line="156" pos:column="19">enc<pos:position pos:line="156" pos:column="22"/></name></expr></argument>)<pos:position pos:line="156" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="24"/></expr_stmt>
    <break pos:line="157" pos:column="5">break;<pos:position pos:line="157" pos:column="11"/></break>
  <case pos:line="158" pos:column="3">case <expr><name pos:line="158" pos:column="8">BT_NONASCII<pos:position pos:line="158" pos:column="19"/></name></expr>:<pos:position pos:line="158" pos:column="20"/></case>
    <if pos:line="159" pos:column="5">if <condition pos:line="159" pos:column="8">(<expr><call><name pos:line="159" pos:column="9">IS_NMSTRT_CHAR_MINBPC<pos:position pos:line="159" pos:column="30"/></name><argument_list pos:line="159" pos:column="30">(<argument><expr><name pos:line="159" pos:column="31">enc<pos:position pos:line="159" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="36">ptr<pos:position pos:line="159" pos:column="39"/></name></expr></argument>)<pos:position pos:line="159" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="159" pos:column="41"/></condition><then pos:line="159" pos:column="41"> <block pos:line="159" pos:column="42">{
      <expr_stmt><expr><name pos:line="160" pos:column="7">ptr<pos:position pos:line="160" pos:column="10"/></name> <operator pos:line="160" pos:column="11">+=<pos:position pos:line="160" pos:column="13"/></operator> <call><name pos:line="160" pos:column="14">MINBPC<pos:position pos:line="160" pos:column="20"/></name><argument_list pos:line="160" pos:column="20">(<argument><expr><name pos:line="160" pos:column="21">enc<pos:position pos:line="160" pos:column="24"/></name></expr></argument>)<pos:position pos:line="160" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name pos:line="161" pos:column="7">tok<pos:position pos:line="161" pos:column="10"/></name> <operator pos:line="161" pos:column="11">=<pos:position pos:line="161" pos:column="12"/></operator> <name pos:line="161" pos:column="13">XML_TOK_NAME<pos:position pos:line="161" pos:column="25"/></name></expr>;<pos:position pos:line="161" pos:column="26"/></expr_stmt>
      <break pos:line="162" pos:column="7">break;<pos:position pos:line="162" pos:column="13"/></break>
    }<pos:position pos:line="163" pos:column="6"/></block></then></if>
    <if pos:line="164" pos:column="5">if <condition pos:line="164" pos:column="8">(<expr><call><name pos:line="164" pos:column="9">IS_NAME_CHAR_MINBPC<pos:position pos:line="164" pos:column="28"/></name><argument_list pos:line="164" pos:column="28">(<argument><expr><name pos:line="164" pos:column="29">enc<pos:position pos:line="164" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="34">ptr<pos:position pos:line="164" pos:column="37"/></name></expr></argument>)<pos:position pos:line="164" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="164" pos:column="39"/></condition><then pos:line="164" pos:column="39"> <block pos:line="164" pos:column="40">{
      <expr_stmt><expr><name pos:line="165" pos:column="7">ptr<pos:position pos:line="165" pos:column="10"/></name> <operator pos:line="165" pos:column="11">+=<pos:position pos:line="165" pos:column="13"/></operator> <call><name pos:line="165" pos:column="14">MINBPC<pos:position pos:line="165" pos:column="20"/></name><argument_list pos:line="165" pos:column="20">(<argument><expr><name pos:line="165" pos:column="21">enc<pos:position pos:line="165" pos:column="24"/></name></expr></argument>)<pos:position pos:line="165" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name pos:line="166" pos:column="7">tok<pos:position pos:line="166" pos:column="10"/></name> <operator pos:line="166" pos:column="11">=<pos:position pos:line="166" pos:column="12"/></operator> <name pos:line="166" pos:column="13">XML_TOK_NMTOKEN<pos:position pos:line="166" pos:column="28"/></name></expr>;<pos:position pos:line="166" pos:column="29"/></expr_stmt>
      <break pos:line="167" pos:column="7">break;<pos:position pos:line="167" pos:column="13"/></break>
    }<pos:position pos:line="168" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="169" pos:column="5">/* fall through */</comment>
  <default pos:line="170" pos:column="3">default:<pos:position pos:line="170" pos:column="11"/></default>
    <expr_stmt><expr><operator pos:line="171" pos:column="5">*<pos:position pos:line="171" pos:column="6"/></operator><name pos:line="171" pos:column="6">nextTokPtr<pos:position pos:line="171" pos:column="16"/></name> <operator pos:line="171" pos:column="17">=<pos:position pos:line="171" pos:column="18"/></operator> <name pos:line="171" pos:column="19">ptr<pos:position pos:line="171" pos:column="22"/></name></expr>;<pos:position pos:line="171" pos:column="23"/></expr_stmt>
    <return pos:line="172" pos:column="5">return <expr><name pos:line="172" pos:column="12">XML_TOK_INVALID<pos:position pos:line="172" pos:column="27"/></name></expr>;<pos:position pos:line="172" pos:column="28"/></return>
  }<pos:position pos:line="173" pos:column="4"/></block></switch>
  <while pos:line="174" pos:column="3">while <condition pos:line="174" pos:column="9">(<expr><name pos:line="174" pos:column="10">ptr<pos:position pos:line="174" pos:column="13"/></name> <operator pos:line="174" pos:column="14">!=<pos:position pos:line="174" pos:column="16"/></operator> <name pos:line="174" pos:column="17">end<pos:position pos:line="174" pos:column="20"/></name></expr>)<pos:position pos:line="174" pos:column="21"/></condition> <block pos:line="174" pos:column="22">{
    <switch pos:line="175" pos:column="5">switch <condition pos:line="175" pos:column="12">(<expr><call><name pos:line="175" pos:column="13">BYTE_TYPE<pos:position pos:line="175" pos:column="22"/></name><argument_list pos:line="175" pos:column="22">(<argument><expr><name pos:line="175" pos:column="23">enc<pos:position pos:line="175" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="28">ptr<pos:position pos:line="175" pos:column="31"/></name></expr></argument>)<pos:position pos:line="175" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="175" pos:column="33"/></condition> <block pos:line="175" pos:column="34">{
    <macro><name pos:line="176" pos:column="5">CHECK_NAME_CASES<pos:position pos:line="176" pos:column="21"/></name><argument_list pos:line="176" pos:column="21">(<argument pos:line="176" pos:column="22">enc<pos:position pos:line="176" pos:column="25"/></argument>, <argument pos:line="176" pos:column="27">ptr<pos:position pos:line="176" pos:column="30"/></argument>, <argument pos:line="176" pos:column="32">end<pos:position pos:line="176" pos:column="35"/></argument>, <argument pos:line="176" pos:column="37">nextTokPtr<pos:position pos:line="176" pos:column="47"/></argument>)<pos:position pos:line="176" pos:column="48"/></argument_list></macro>
    <case pos:line="177" pos:column="5">case <expr><name pos:line="177" pos:column="10">BT_GT<pos:position pos:line="177" pos:column="15"/></name></expr>:<pos:position pos:line="177" pos:column="16"/></case> <case pos:line="177" pos:column="17">case <expr><name pos:line="177" pos:column="22">BT_RPAR<pos:position pos:line="177" pos:column="29"/></name></expr>:<pos:position pos:line="177" pos:column="30"/></case> <case pos:line="177" pos:column="31">case <expr><name pos:line="177" pos:column="36">BT_COMMA<pos:position pos:line="177" pos:column="44"/></name></expr>:<pos:position pos:line="177" pos:column="45"/></case>
    <case pos:line="178" pos:column="5">case <expr><name pos:line="178" pos:column="10">BT_VERBAR<pos:position pos:line="178" pos:column="19"/></name></expr>:<pos:position pos:line="178" pos:column="20"/></case> <case pos:line="178" pos:column="21">case <expr><name pos:line="178" pos:column="26">BT_LSQB<pos:position pos:line="178" pos:column="33"/></name></expr>:<pos:position pos:line="178" pos:column="34"/></case> <case pos:line="178" pos:column="35">case <expr><name pos:line="178" pos:column="40">BT_PERCNT<pos:position pos:line="178" pos:column="49"/></name></expr>:<pos:position pos:line="178" pos:column="50"/></case>
    <case pos:line="179" pos:column="5">case <expr><name pos:line="179" pos:column="10">BT_S<pos:position pos:line="179" pos:column="14"/></name></expr>:<pos:position pos:line="179" pos:column="15"/></case> <case pos:line="179" pos:column="16">case <expr><name pos:line="179" pos:column="21">BT_CR<pos:position pos:line="179" pos:column="26"/></name></expr>:<pos:position pos:line="179" pos:column="27"/></case> <case pos:line="179" pos:column="28">case <expr><name pos:line="179" pos:column="33">BT_LF<pos:position pos:line="179" pos:column="38"/></name></expr>:<pos:position pos:line="179" pos:column="39"/></case>
      <expr_stmt><expr><operator pos:line="180" pos:column="7">*<pos:position pos:line="180" pos:column="8"/></operator><name pos:line="180" pos:column="8">nextTokPtr<pos:position pos:line="180" pos:column="18"/></name> <operator pos:line="180" pos:column="19">=<pos:position pos:line="180" pos:column="20"/></operator> <name pos:line="180" pos:column="21">ptr<pos:position pos:line="180" pos:column="24"/></name></expr>;<pos:position pos:line="180" pos:column="25"/></expr_stmt>
      <return pos:line="181" pos:column="7">return <expr><name pos:line="181" pos:column="14">tok<pos:position pos:line="181" pos:column="17"/></name></expr>;<pos:position pos:line="181" pos:column="18"/></return>
<cpp:ifdef pos:line="182" pos:column="1">#<cpp:directive pos:line="182" pos:column="2">ifdef<pos:position pos:line="182" pos:column="7"/></cpp:directive> <name pos:line="182" pos:column="8">XML_NS<pos:position pos:line="182" pos:column="14"/></name></cpp:ifdef>
    <case pos:line="183" pos:column="5">case <expr><name pos:line="183" pos:column="10">BT_COLON<pos:position pos:line="183" pos:column="18"/></name></expr>:<pos:position pos:line="183" pos:column="19"/></case>
      <expr_stmt><expr><name pos:line="184" pos:column="7">ptr<pos:position pos:line="184" pos:column="10"/></name> <operator pos:line="184" pos:column="11">+=<pos:position pos:line="184" pos:column="13"/></operator> <call><name pos:line="184" pos:column="14">MINBPC<pos:position pos:line="184" pos:column="20"/></name><argument_list pos:line="184" pos:column="20">(<argument><expr><name pos:line="184" pos:column="21">enc<pos:position pos:line="184" pos:column="24"/></name></expr></argument>)<pos:position pos:line="184" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="26"/></expr_stmt>
      <switch pos:line="185" pos:column="7">switch <condition pos:line="185" pos:column="14">(<expr><name pos:line="185" pos:column="15">tok<pos:position pos:line="185" pos:column="18"/></name></expr>)<pos:position pos:line="185" pos:column="19"/></condition> <block pos:line="185" pos:column="20">{
      <case pos:line="186" pos:column="7">case <expr><name pos:line="186" pos:column="12">XML_TOK_NAME<pos:position pos:line="186" pos:column="24"/></name></expr>:<pos:position pos:line="186" pos:column="25"/></case>
        <if pos:line="187" pos:column="9">if <condition pos:line="187" pos:column="12">(<expr><name pos:line="187" pos:column="13">ptr<pos:position pos:line="187" pos:column="16"/></name> <operator pos:line="187" pos:column="17">==<pos:position pos:line="187" pos:column="19"/></operator> <name pos:line="187" pos:column="20">end<pos:position pos:line="187" pos:column="23"/></name></expr>)<pos:position pos:line="187" pos:column="24"/></condition><then pos:line="187" pos:column="24">
          <block type="pseudo"><return pos:line="188" pos:column="11">return <expr><name pos:line="188" pos:column="18">XML_TOK_PARTIAL<pos:position pos:line="188" pos:column="33"/></name></expr>;<pos:position pos:line="188" pos:column="34"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="189" pos:column="9">tok<pos:position pos:line="189" pos:column="12"/></name> <operator pos:line="189" pos:column="13">=<pos:position pos:line="189" pos:column="14"/></operator> <name pos:line="189" pos:column="15">XML_TOK_PREFIXED_NAME<pos:position pos:line="189" pos:column="36"/></name></expr>;<pos:position pos:line="189" pos:column="37"/></expr_stmt>
        <switch pos:line="190" pos:column="9">switch <condition pos:line="190" pos:column="16">(<expr><call><name pos:line="190" pos:column="17">BYTE_TYPE<pos:position pos:line="190" pos:column="26"/></name><argument_list pos:line="190" pos:column="26">(<argument><expr><name pos:line="190" pos:column="27">enc<pos:position pos:line="190" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="32">ptr<pos:position pos:line="190" pos:column="35"/></name></expr></argument>)<pos:position pos:line="190" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="190" pos:column="37"/></condition> <block pos:line="190" pos:column="38">{
        <macro><name pos:line="191" pos:column="9">CHECK_NAME_CASES<pos:position pos:line="191" pos:column="25"/></name><argument_list pos:line="191" pos:column="25">(<argument pos:line="191" pos:column="26">enc<pos:position pos:line="191" pos:column="29"/></argument>, <argument pos:line="191" pos:column="31">ptr<pos:position pos:line="191" pos:column="34"/></argument>, <argument pos:line="191" pos:column="36">end<pos:position pos:line="191" pos:column="39"/></argument>, <argument pos:line="191" pos:column="41">nextTokPtr<pos:position pos:line="191" pos:column="51"/></argument>)<pos:position pos:line="191" pos:column="52"/></argument_list></macro>
        <default pos:line="192" pos:column="9">default:<pos:position pos:line="192" pos:column="17"/></default>
          <expr_stmt><expr><name pos:line="193" pos:column="11">tok<pos:position pos:line="193" pos:column="14"/></name> <operator pos:line="193" pos:column="15">=<pos:position pos:line="193" pos:column="16"/></operator> <name pos:line="193" pos:column="17">XML_TOK_NMTOKEN<pos:position pos:line="193" pos:column="32"/></name></expr>;<pos:position pos:line="193" pos:column="33"/></expr_stmt>
          <break pos:line="194" pos:column="11">break;<pos:position pos:line="194" pos:column="17"/></break>
        }<pos:position pos:line="195" pos:column="10"/></block></switch>
        <break pos:line="196" pos:column="9">break;<pos:position pos:line="196" pos:column="15"/></break>
      <case pos:line="197" pos:column="7">case <expr><name pos:line="197" pos:column="12">XML_TOK_PREFIXED_NAME<pos:position pos:line="197" pos:column="33"/></name></expr>:<pos:position pos:line="197" pos:column="34"/></case>
        <expr_stmt><expr><name pos:line="198" pos:column="9">tok<pos:position pos:line="198" pos:column="12"/></name> <operator pos:line="198" pos:column="13">=<pos:position pos:line="198" pos:column="14"/></operator> <name pos:line="198" pos:column="15">XML_TOK_NMTOKEN<pos:position pos:line="198" pos:column="30"/></name></expr>;<pos:position pos:line="198" pos:column="31"/></expr_stmt>
        <break pos:line="199" pos:column="9">break;<pos:position pos:line="199" pos:column="15"/></break>
      }<pos:position pos:line="200" pos:column="8"/></block></switch>
      <break pos:line="201" pos:column="7">break;<pos:position pos:line="201" pos:column="13"/></break>
<cpp:endif pos:line="202" pos:column="1">#<cpp:directive pos:line="202" pos:column="2">endif<pos:position pos:line="202" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="203" pos:column="5">case <expr><name pos:line="203" pos:column="10">BT_PLUS<pos:position pos:line="203" pos:column="17"/></name></expr>:<pos:position pos:line="203" pos:column="18"/></case>
      <if pos:line="204" pos:column="7">if <condition pos:line="204" pos:column="10">(<expr><name pos:line="204" pos:column="11">tok<pos:position pos:line="204" pos:column="14"/></name> <operator pos:line="204" pos:column="15">==<pos:position pos:line="204" pos:column="17"/></operator> <name pos:line="204" pos:column="18">XML_TOK_NMTOKEN<pos:position pos:line="204" pos:column="33"/></name></expr>)<pos:position pos:line="204" pos:column="34"/></condition><then pos:line="204" pos:column="34">  <block pos:line="204" pos:column="36">{
        <expr_stmt><expr><operator pos:line="205" pos:column="9">*<pos:position pos:line="205" pos:column="10"/></operator><name pos:line="205" pos:column="10">nextTokPtr<pos:position pos:line="205" pos:column="20"/></name> <operator pos:line="205" pos:column="21">=<pos:position pos:line="205" pos:column="22"/></operator> <name pos:line="205" pos:column="23">ptr<pos:position pos:line="205" pos:column="26"/></name></expr>;<pos:position pos:line="205" pos:column="27"/></expr_stmt>
        <return pos:line="206" pos:column="9">return <expr><name pos:line="206" pos:column="16">XML_TOK_INVALID<pos:position pos:line="206" pos:column="31"/></name></expr>;<pos:position pos:line="206" pos:column="32"/></return>
      }<pos:position pos:line="207" pos:column="8"/></block></then></if>
      <expr_stmt><expr><operator pos:line="208" pos:column="7">*<pos:position pos:line="208" pos:column="8"/></operator><name pos:line="208" pos:column="8">nextTokPtr<pos:position pos:line="208" pos:column="18"/></name> <operator pos:line="208" pos:column="19">=<pos:position pos:line="208" pos:column="20"/></operator> <name pos:line="208" pos:column="21">ptr<pos:position pos:line="208" pos:column="24"/></name> <operator pos:line="208" pos:column="25">+<pos:position pos:line="208" pos:column="26"/></operator> <call><name pos:line="208" pos:column="27">MINBPC<pos:position pos:line="208" pos:column="33"/></name><argument_list pos:line="208" pos:column="33">(<argument><expr><name pos:line="208" pos:column="34">enc<pos:position pos:line="208" pos:column="37"/></name></expr></argument>)<pos:position pos:line="208" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="39"/></expr_stmt>
      <return pos:line="209" pos:column="7">return <expr><name pos:line="209" pos:column="14">XML_TOK_NAME_PLUS<pos:position pos:line="209" pos:column="31"/></name></expr>;<pos:position pos:line="209" pos:column="32"/></return>
    <case pos:line="210" pos:column="5">case <expr><name pos:line="210" pos:column="10">BT_AST<pos:position pos:line="210" pos:column="16"/></name></expr>:<pos:position pos:line="210" pos:column="17"/></case>
      <if pos:line="211" pos:column="7">if <condition pos:line="211" pos:column="10">(<expr><name pos:line="211" pos:column="11">tok<pos:position pos:line="211" pos:column="14"/></name> <operator pos:line="211" pos:column="15">==<pos:position pos:line="211" pos:column="17"/></operator> <name pos:line="211" pos:column="18">XML_TOK_NMTOKEN<pos:position pos:line="211" pos:column="33"/></name></expr>)<pos:position pos:line="211" pos:column="34"/></condition><then pos:line="211" pos:column="34">  <block pos:line="211" pos:column="36">{
        <expr_stmt><expr><operator pos:line="212" pos:column="9">*<pos:position pos:line="212" pos:column="10"/></operator><name pos:line="212" pos:column="10">nextTokPtr<pos:position pos:line="212" pos:column="20"/></name> <operator pos:line="212" pos:column="21">=<pos:position pos:line="212" pos:column="22"/></operator> <name pos:line="212" pos:column="23">ptr<pos:position pos:line="212" pos:column="26"/></name></expr>;<pos:position pos:line="212" pos:column="27"/></expr_stmt>
        <return pos:line="213" pos:column="9">return <expr><name pos:line="213" pos:column="16">XML_TOK_INVALID<pos:position pos:line="213" pos:column="31"/></name></expr>;<pos:position pos:line="213" pos:column="32"/></return>
      }<pos:position pos:line="214" pos:column="8"/></block></then></if>
      <expr_stmt><expr><operator pos:line="215" pos:column="7">*<pos:position pos:line="215" pos:column="8"/></operator><name pos:line="215" pos:column="8">nextTokPtr<pos:position pos:line="215" pos:column="18"/></name> <operator pos:line="215" pos:column="19">=<pos:position pos:line="215" pos:column="20"/></operator> <name pos:line="215" pos:column="21">ptr<pos:position pos:line="215" pos:column="24"/></name> <operator pos:line="215" pos:column="25">+<pos:position pos:line="215" pos:column="26"/></operator> <call><name pos:line="215" pos:column="27">MINBPC<pos:position pos:line="215" pos:column="33"/></name><argument_list pos:line="215" pos:column="33">(<argument><expr><name pos:line="215" pos:column="34">enc<pos:position pos:line="215" pos:column="37"/></name></expr></argument>)<pos:position pos:line="215" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="39"/></expr_stmt>
      <return pos:line="216" pos:column="7">return <expr><name pos:line="216" pos:column="14">XML_TOK_NAME_ASTERISK<pos:position pos:line="216" pos:column="35"/></name></expr>;<pos:position pos:line="216" pos:column="36"/></return>
    <case pos:line="217" pos:column="5">case <expr><name pos:line="217" pos:column="10">BT_QUEST<pos:position pos:line="217" pos:column="18"/></name></expr>:<pos:position pos:line="217" pos:column="19"/></case>
      <if pos:line="218" pos:column="7">if <condition pos:line="218" pos:column="10">(<expr><name pos:line="218" pos:column="11">tok<pos:position pos:line="218" pos:column="14"/></name> <operator pos:line="218" pos:column="15">==<pos:position pos:line="218" pos:column="17"/></operator> <name pos:line="218" pos:column="18">XML_TOK_NMTOKEN<pos:position pos:line="218" pos:column="33"/></name></expr>)<pos:position pos:line="218" pos:column="34"/></condition><then pos:line="218" pos:column="34">  <block pos:line="218" pos:column="36">{
        <expr_stmt><expr><operator pos:line="219" pos:column="9">*<pos:position pos:line="219" pos:column="10"/></operator><name pos:line="219" pos:column="10">nextTokPtr<pos:position pos:line="219" pos:column="20"/></name> <operator pos:line="219" pos:column="21">=<pos:position pos:line="219" pos:column="22"/></operator> <name pos:line="219" pos:column="23">ptr<pos:position pos:line="219" pos:column="26"/></name></expr>;<pos:position pos:line="219" pos:column="27"/></expr_stmt>
        <return pos:line="220" pos:column="9">return <expr><name pos:line="220" pos:column="16">XML_TOK_INVALID<pos:position pos:line="220" pos:column="31"/></name></expr>;<pos:position pos:line="220" pos:column="32"/></return>
      }<pos:position pos:line="221" pos:column="8"/></block></then></if>
      <expr_stmt><expr><operator pos:line="222" pos:column="7">*<pos:position pos:line="222" pos:column="8"/></operator><name pos:line="222" pos:column="8">nextTokPtr<pos:position pos:line="222" pos:column="18"/></name> <operator pos:line="222" pos:column="19">=<pos:position pos:line="222" pos:column="20"/></operator> <name pos:line="222" pos:column="21">ptr<pos:position pos:line="222" pos:column="24"/></name> <operator pos:line="222" pos:column="25">+<pos:position pos:line="222" pos:column="26"/></operator> <call><name pos:line="222" pos:column="27">MINBPC<pos:position pos:line="222" pos:column="33"/></name><argument_list pos:line="222" pos:column="33">(<argument><expr><name pos:line="222" pos:column="34">enc<pos:position pos:line="222" pos:column="37"/></name></expr></argument>)<pos:position pos:line="222" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="39"/></expr_stmt>
      <return pos:line="223" pos:column="7">return <expr><name pos:line="223" pos:column="14">XML_TOK_NAME_QUESTION<pos:position pos:line="223" pos:column="35"/></name></expr>;<pos:position pos:line="223" pos:column="36"/></return>
    <default pos:line="224" pos:column="5">default:<pos:position pos:line="224" pos:column="13"/></default>
      <expr_stmt><expr><operator pos:line="225" pos:column="7">*<pos:position pos:line="225" pos:column="8"/></operator><name pos:line="225" pos:column="8">nextTokPtr<pos:position pos:line="225" pos:column="18"/></name> <operator pos:line="225" pos:column="19">=<pos:position pos:line="225" pos:column="20"/></operator> <name pos:line="225" pos:column="21">ptr<pos:position pos:line="225" pos:column="24"/></name></expr>;<pos:position pos:line="225" pos:column="25"/></expr_stmt>
      <return pos:line="226" pos:column="7">return <expr><name pos:line="226" pos:column="14">XML_TOK_INVALID<pos:position pos:line="226" pos:column="29"/></name></expr>;<pos:position pos:line="226" pos:column="30"/></return>
    }<pos:position pos:line="227" pos:column="6"/></block></switch>
  }<pos:position pos:line="228" pos:column="4"/></block></while>
  <return pos:line="229" pos:column="3">return <expr><operator pos:line="229" pos:column="10">-<pos:position pos:line="229" pos:column="11"/></operator><name pos:line="229" pos:column="11">tok<pos:position pos:line="229" pos:column="14"/></name></expr>;<pos:position pos:line="229" pos:column="15"/></return>
}<pos:position pos:line="230" pos:column="2"/></block></function></unit>

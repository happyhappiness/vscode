<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2243_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">child_main<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">child_num_arg<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_socket_t<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">sock<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><name pos:line="5" pos:column="26">NULL<pos:position pos:line="5" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ap_listen_rec<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">lr<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    
    <expr_stmt><expr><name pos:line="8" pos:column="5">my_pid<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">getpid<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">()<pos:position pos:line="8" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ap_fatal_signal_child_setup<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">ap_server_conf<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">child_num<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">child_num_arg<pos:position pos:line="10" pos:column="30"/></name></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">apr_pool_create<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><operator pos:line="11" pos:column="21">&amp;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="22">pchild<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="30">pconf<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>

    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><expr><name pos:line="13" pos:column="10">lr<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">ap_listeners<pos:position pos:line="13" pos:column="27"/></name></expr> ;<pos:position pos:line="13" pos:column="29"/></init> <condition><expr><name><name pos:line="13" pos:column="30">lr<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">-&gt;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="34">next<pos:position pos:line="13" pos:column="38"/></name></name> <operator pos:line="13" pos:column="39">!=<pos:position pos:line="13" pos:column="41"/></operator> <name pos:line="13" pos:column="42">NULL<pos:position pos:line="13" pos:column="46"/></name></expr>;<pos:position pos:line="13" pos:column="47"/></condition> <incr><expr><name pos:line="13" pos:column="48">lr<pos:position pos:line="13" pos:column="50"/></name> <operator pos:line="13" pos:column="51">=<pos:position pos:line="13" pos:column="52"/></operator> <name><name pos:line="13" pos:column="53">lr<pos:position pos:line="13" pos:column="55"/></name><operator pos:line="13" pos:column="55">-&gt;<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="57">next<pos:position pos:line="13" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="13" pos:column="62"/></control> <block pos:line="13" pos:column="63">{
        <continue pos:line="14" pos:column="9">continue;<pos:position pos:line="14" pos:column="18"/></continue>
    }<pos:position pos:line="15" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">apr_os_sock_put<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><operator pos:line="17" pos:column="21">&amp;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="22">sock<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="28">&amp;<pos:position pos:line="17" pos:column="33"/></operator><name><name pos:line="17" pos:column="29">child_info_table<pos:position pos:line="17" pos:column="45"/></name><index pos:line="17" pos:column="45">[<expr><name pos:line="17" pos:column="46">child_num<pos:position pos:line="17" pos:column="55"/></name></expr>]<pos:position pos:line="17" pos:column="56"/></index></name><operator pos:line="17" pos:column="56">.<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="57">input<pos:position pos:line="17" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="64">pconf<pos:position pos:line="17" pos:column="69"/></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">lr<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">next<pos:position pos:line="18" pos:column="13"/></name></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <call><name pos:line="18" pos:column="16">apr_palloc<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">pconf<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="34">sizeof<argument_list pos:line="18" pos:column="40">(<argument><expr><operator pos:line="18" pos:column="41">*<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="42">lr<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">lr<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">next<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">sd<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">sock<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">lr<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">next<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">active<pos:position pos:line="20" pos:column="21"/></name></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <literal type="number" pos:line="20" pos:column="24">1<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">lr<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">next<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">accept_func<pos:position pos:line="21" pos:column="26"/></name></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">receive_from_other_child<pos:position pos:line="21" pos:column="53"/></name></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">lr<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">next<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">next<pos:position pos:line="22" pos:column="19"/></name></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">NULL<pos:position pos:line="22" pos:column="26"/></name></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">lr<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <name><name pos:line="23" pos:column="10">lr<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">next<pos:position pos:line="23" pos:column="18"/></name></name></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">num_listensocks<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">++<pos:position pos:line="24" pos:column="22"/></operator></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="26" pos:column="5">/*stuff to do before we switch id's, so we have permissions.*/</comment>

    <expr_stmt><expr><name pos:line="28" pos:column="5">rv<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <call><name pos:line="28" pos:column="10">SAFE_ACCEPT<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><call><name pos:line="28" pos:column="22">apr_proc_mutex_child_init<pos:position pos:line="28" pos:column="47"/></name><argument_list pos:line="28" pos:column="47">(<argument><expr><operator pos:line="28" pos:column="48">&amp;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="49">process_accept_mutex<pos:position pos:line="28" pos:column="69"/></name></expr></argument>, 
                                               <argument><expr><name pos:line="29" pos:column="48">ap_lock_fname<pos:position pos:line="29" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="63">pchild<pos:position pos:line="29" pos:column="69"/></name></expr></argument>)<pos:position pos:line="29" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="72"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">rv<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">!=<pos:position pos:line="30" pos:column="14"/></operator> <name pos:line="30" pos:column="15">APR_SUCCESS<pos:position pos:line="30" pos:column="26"/></name></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27"> <block pos:line="30" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">ap_log_error<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">APLOG_MARK<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">APLOG_EMERG<pos:position pos:line="31" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="47">rv<pos:position pos:line="31" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="51">ap_server_conf<pos:position pos:line="31" pos:column="65"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="32" pos:column="22">"Couldn't initialize cross-process lock in child"<pos:position pos:line="32" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">clean_child_exit<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">APEXIT_CHILDFATAL<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><call><name pos:line="36" pos:column="9">perchild_setup_child<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">child_num<pos:position pos:line="36" pos:column="39"/></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="41"/></condition><then pos:line="36" pos:column="41"> <block pos:line="36" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">clean_child_exit<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">APEXIT_CHILDFATAL<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">ap_run_child_init<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">pchild<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="31">ap_server_conf<pos:position pos:line="40" pos:column="45"/></name></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt>

    <comment type="block" pos:line="42" pos:column="5">/*done with init critical section */</comment>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">apr_setup_signal_thread<pos:position pos:line="44" pos:column="28"/></name><argument_list pos:line="44" pos:column="28">()<pos:position pos:line="44" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name pos:line="46" pos:column="5">requests_this_child<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <name pos:line="46" pos:column="27">ap_max_requests_per_child<pos:position pos:line="46" pos:column="52"/></name></expr>;<pos:position pos:line="46" pos:column="53"/></expr_stmt>
    

    <comment type="block" pos:line="49" pos:column="5">/* Setup worker threads */</comment>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">threads_to_start<pos:position pos:line="51" pos:column="25"/></name> <operator pos:line="51" pos:column="26">&gt;<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="28">max_threads<pos:position pos:line="51" pos:column="39"/></name></expr>)<pos:position pos:line="51" pos:column="40"/></condition><then pos:line="51" pos:column="40"> <block pos:line="51" pos:column="41">{
        <expr_stmt><expr><name pos:line="52" pos:column="9">threads_to_start<pos:position pos:line="52" pos:column="25"/></name> <operator pos:line="52" pos:column="26">=<pos:position pos:line="52" pos:column="27"/></operator> <name pos:line="52" pos:column="28">max_threads<pos:position pos:line="52" pos:column="39"/></name></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="54" pos:column="5">idle_thread_count<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">=<pos:position pos:line="54" pos:column="24"/></operator> <name pos:line="54" pos:column="25">threads_to_start<pos:position pos:line="54" pos:column="41"/></name></expr>;<pos:position pos:line="54" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="55" pos:column="5">worker_thread_count<pos:position pos:line="55" pos:column="24"/></name> <operator pos:line="55" pos:column="25">=<pos:position pos:line="55" pos:column="26"/></operator> <literal type="number" pos:line="55" pos:column="27">0<pos:position pos:line="55" pos:column="28"/></literal></expr>;<pos:position pos:line="55" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="56" pos:column="5">worker_thread_free_ids<pos:position pos:line="56" pos:column="27"/></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <operator pos:line="56" pos:column="30">(<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="31">int<pos:position pos:line="56" pos:column="34"/></name> <operator pos:line="56" pos:column="35">*<pos:position pos:line="56" pos:column="36"/></operator><operator pos:line="56" pos:column="36">)<pos:position pos:line="56" pos:column="37"/></operator><call><name pos:line="56" pos:column="37">apr_pcalloc<pos:position pos:line="56" pos:column="48"/></name><argument_list pos:line="56" pos:column="48">(<argument><expr><name pos:line="56" pos:column="49">pchild<pos:position pos:line="56" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="57">thread_limit<pos:position pos:line="56" pos:column="69"/></name> <operator pos:line="56" pos:column="70">*<pos:position pos:line="56" pos:column="71"/></operator> <sizeof pos:line="56" pos:column="72">sizeof<argument_list pos:line="56" pos:column="78">(<argument><expr><name pos:line="56" pos:column="79">int<pos:position pos:line="56" pos:column="82"/></name></expr></argument>)<pos:position pos:line="56" pos:column="83"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="56" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="85"/></expr_stmt>
    <for pos:line="57" pos:column="5">for <control pos:line="57" pos:column="9">(<init><expr><name pos:line="57" pos:column="10">i<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <literal type="number" pos:line="57" pos:column="14">0<pos:position pos:line="57" pos:column="15"/></literal></expr>;<pos:position pos:line="57" pos:column="16"/></init> <condition><expr><name pos:line="57" pos:column="17">i<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">&lt;<pos:position pos:line="57" pos:column="23"/></operator> <name pos:line="57" pos:column="21">max_threads<pos:position pos:line="57" pos:column="32"/></name></expr>;<pos:position pos:line="57" pos:column="33"/></condition> <incr><expr><name pos:line="57" pos:column="34">i<pos:position pos:line="57" pos:column="35"/></name><operator pos:line="57" pos:column="35">++<pos:position pos:line="57" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="57" pos:column="38"/></control> <block pos:line="57" pos:column="39">{
        <expr_stmt><expr><name><name pos:line="58" pos:column="9">worker_thread_free_ids<pos:position pos:line="58" pos:column="31"/></name><index pos:line="58" pos:column="31">[<expr><name pos:line="58" pos:column="32">i<pos:position pos:line="58" pos:column="33"/></name></expr>]<pos:position pos:line="58" pos:column="34"/></index></name> <operator pos:line="58" pos:column="35">=<pos:position pos:line="58" pos:column="36"/></operator> <name pos:line="58" pos:column="37">i<pos:position pos:line="58" pos:column="38"/></name></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">apr_pool_create<pos:position pos:line="60" pos:column="20"/></name><argument_list pos:line="60" pos:column="20">(<argument><expr><operator pos:line="60" pos:column="21">&amp;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="22">thread_pool_parent<pos:position pos:line="60" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="42">pchild<pos:position pos:line="60" pos:column="48"/></name></expr></argument>)<pos:position pos:line="60" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">apr_thread_mutex_create<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><operator pos:line="61" pos:column="29">&amp;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="30">thread_pool_parent_mutex<pos:position pos:line="61" pos:column="54"/></name></expr></argument>, 
                    <argument><expr><name pos:line="62" pos:column="21">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="62" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="47">pchild<pos:position pos:line="62" pos:column="53"/></name></expr></argument>)<pos:position pos:line="62" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">apr_thread_mutex_create<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><operator pos:line="63" pos:column="29">&amp;<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="30">idle_thread_count_mutex<pos:position pos:line="63" pos:column="53"/></name></expr></argument>, 
                    <argument><expr><name pos:line="64" pos:column="21">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="64" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="47">pchild<pos:position pos:line="64" pos:column="53"/></name></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">apr_thread_mutex_create<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><operator pos:line="65" pos:column="29">&amp;<pos:position pos:line="65" pos:column="34"/></operator><name pos:line="65" pos:column="30">worker_thread_count_mutex<pos:position pos:line="65" pos:column="55"/></name></expr></argument>,
                    <argument><expr><name pos:line="66" pos:column="21">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="66" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="47">pchild<pos:position pos:line="66" pos:column="53"/></name></expr></argument>)<pos:position pos:line="66" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">apr_thread_mutex_create<pos:position pos:line="67" pos:column="28"/></name><argument_list pos:line="67" pos:column="28">(<argument><expr><operator pos:line="67" pos:column="29">&amp;<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="30">pipe_of_death_mutex<pos:position pos:line="67" pos:column="49"/></name></expr></argument>,
                    <argument><expr><name pos:line="68" pos:column="21">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="68" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="47">pchild<pos:position pos:line="68" pos:column="53"/></name></expr></argument>)<pos:position pos:line="68" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">apr_thread_mutex_create<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><operator pos:line="69" pos:column="29">&amp;<pos:position pos:line="69" pos:column="34"/></operator><name pos:line="69" pos:column="30">thread_accept_mutex<pos:position pos:line="69" pos:column="49"/></name></expr></argument>,
                    <argument><expr><name pos:line="70" pos:column="21">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="70" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="47">pchild<pos:position pos:line="70" pos:column="53"/></name></expr></argument>)<pos:position pos:line="70" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="72" pos:column="5">apr_threadattr_create<pos:position pos:line="72" pos:column="26"/></name><argument_list pos:line="72" pos:column="26">(<argument><expr><operator pos:line="72" pos:column="27">&amp;<pos:position pos:line="72" pos:column="32"/></operator><name pos:line="72" pos:column="28">worker_thread_attr<pos:position pos:line="72" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="48">pchild<pos:position pos:line="72" pos:column="54"/></name></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">apr_threadattr_detach_set<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><name pos:line="73" pos:column="31">worker_thread_attr<pos:position pos:line="73" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="51">1<pos:position pos:line="73" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="54"/></expr_stmt>                                     

    <comment type="block" pos:line="75" pos:column="5">/* We are creating worker threads right now */</comment>
    <for pos:line="76" pos:column="5">for <control pos:line="76" pos:column="9">(<init><expr><name pos:line="76" pos:column="10">i<pos:position pos:line="76" pos:column="11"/></name><operator pos:line="76" pos:column="11">=<pos:position pos:line="76" pos:column="12"/></operator><literal type="number" pos:line="76" pos:column="12">0<pos:position pos:line="76" pos:column="13"/></literal></expr>;<pos:position pos:line="76" pos:column="14"/></init> <condition><expr><name pos:line="76" pos:column="15">i<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">&lt;<pos:position pos:line="76" pos:column="21"/></operator> <name pos:line="76" pos:column="19">threads_to_start<pos:position pos:line="76" pos:column="35"/></name></expr>;<pos:position pos:line="76" pos:column="36"/></condition> <incr><expr><name pos:line="76" pos:column="37">i<pos:position pos:line="76" pos:column="38"/></name><operator pos:line="76" pos:column="38">++<pos:position pos:line="76" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="76" pos:column="41"/></control> <block pos:line="76" pos:column="42">{
        <comment type="block" pos:line="77" pos:column="9">/* start_thread shouldn't fail here */</comment>
        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><operator pos:line="78" pos:column="13">!<pos:position pos:line="78" pos:column="14"/></operator><call><name pos:line="78" pos:column="14">start_thread<pos:position pos:line="78" pos:column="26"/></name><argument_list pos:line="78" pos:column="26">()<pos:position pos:line="78" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="29"/></condition><then pos:line="78" pos:column="29"> <block pos:line="78" pos:column="30">{
            <break pos:line="79" pos:column="13">break;<pos:position pos:line="79" pos:column="19"/></break>
        }<pos:position pos:line="80" pos:column="10"/></block></then></if>
    }<pos:position pos:line="81" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="83" pos:column="5">apr_signal_thread<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">(<argument><expr><name pos:line="83" pos:column="23">check_signal<pos:position pos:line="83" pos:column="35"/></name></expr></argument>)<pos:position pos:line="83" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="37"/></expr_stmt>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2024_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">filter_harness<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">ap_filter_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">f<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">apr_bucket_brigade<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">bb<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">ret<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
<cpp:ifndef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifndef<pos:position pos:line="4" pos:column="8"/></cpp:directive> <name pos:line="4" pos:column="9">NO_PROTOCOL<pos:position pos:line="4" pos:column="20"/></name></cpp:ifndef>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">cachecontrol<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">str<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">harness_ctx<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">ctx<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><name><name pos:line="8" pos:column="24">f<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">ctx<pos:position pos:line="8" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ap_filter_rec_t<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">filter<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><name><name pos:line="9" pos:column="31">f<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">frec<pos:position pos:line="9" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">f<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">r<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">status<pos:position pos:line="11" pos:column="21"/></name></name> <operator pos:line="11" pos:column="22">!=<pos:position pos:line="11" pos:column="24"/></operator> <literal type="number" pos:line="11" pos:column="25">200<pos:position pos:line="11" pos:column="28"/></literal>
        <operator pos:line="12" pos:column="9">&amp;&amp;<pos:position pos:line="12" pos:column="19"/></operator> <operator pos:line="12" pos:column="12">!<pos:position pos:line="12" pos:column="13"/></operator><call><name pos:line="12" pos:column="13">apr_table_get<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name><name pos:line="12" pos:column="27">f<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">r<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">subprocess_env<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="49">"filter-errordocs"<pos:position pos:line="12" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="69"/></condition><then pos:line="12" pos:column="69"> <block pos:line="12" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_remove_output_filter<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">f<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><call><name pos:line="14" pos:column="16">ap_pass_brigade<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name><name pos:line="14" pos:column="32">f<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">next<pos:position pos:line="14" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">bb<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">filter_trace<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><name><name pos:line="17" pos:column="18">f<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">c<pos:position pos:line="17" pos:column="22"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="24">filter<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">debug<pos:position pos:line="17" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="39">f<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">-&gt;<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="42">frec<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">name<pos:position pos:line="17" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">bb<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* look up a handler function if we haven't already set it */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><name><name pos:line="20" pos:column="10">ctx<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">func<pos:position pos:line="20" pos:column="19"/></name></name></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20"> <block pos:line="20" pos:column="21">{
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef<pos:position pos:line="21" pos:column="8"/></cpp:directive> <name pos:line="21" pos:column="9">NO_PROTOCOL<pos:position pos:line="21" pos:column="20"/></name></cpp:ifndef>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">f<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">r<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">proxyreq<pos:position pos:line="22" pos:column="27"/></name></name></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28"> <block pos:line="22" pos:column="29">{
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name><name pos:line="23" pos:column="17">filter<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">-&gt;<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="25">proto_flags<pos:position pos:line="23" pos:column="36"/></name></name> <operator pos:line="23" pos:column="37">&amp;<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="39">AP_FILTER_PROTO_NO_PROXY<pos:position pos:line="23" pos:column="63"/></name></expr>)<pos:position pos:line="23" pos:column="64"/></condition><then pos:line="23" pos:column="64"> <block pos:line="23" pos:column="65">{
                <expr_stmt><expr><call><name pos:line="24" pos:column="17">ap_remove_output_filter<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><name pos:line="24" pos:column="41">f<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
                <return pos:line="25" pos:column="17">return <expr><call><name pos:line="25" pos:column="24">ap_pass_brigade<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><name><name pos:line="25" pos:column="40">f<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">next<pos:position pos:line="25" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">bb<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></return>
            }<pos:position pos:line="26" pos:column="14"/></block></then></if>

            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><name><name pos:line="28" pos:column="17">filter<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">proto_flags<pos:position pos:line="28" pos:column="36"/></name></name> <operator pos:line="28" pos:column="37">&amp;<pos:position pos:line="28" pos:column="42"/></operator> <name pos:line="28" pos:column="39">AP_FILTER_PROTO_TRANSFORM<pos:position pos:line="28" pos:column="64"/></name></expr>)<pos:position pos:line="28" pos:column="65"/></condition><then pos:line="28" pos:column="65"> <block pos:line="28" pos:column="66">{
                <expr_stmt><expr><name pos:line="29" pos:column="17">cachecontrol<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <call><name pos:line="29" pos:column="32">apr_table_get<pos:position pos:line="29" pos:column="45"/></name><argument_list pos:line="29" pos:column="45">(<argument><expr><name><name pos:line="29" pos:column="46">f<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">-&gt;<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="49">r<pos:position pos:line="29" pos:column="50"/></name><operator pos:line="29" pos:column="50">-&gt;<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="52">headers_out<pos:position pos:line="29" pos:column="63"/></name></name></expr></argument>,
                                             <argument><expr><literal type="string" pos:line="30" pos:column="46">"Cache-Control"<pos:position pos:line="30" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="63"/></expr_stmt>
                <if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">cachecontrol<pos:position pos:line="31" pos:column="33"/></name></expr>)<pos:position pos:line="31" pos:column="34"/></condition><then pos:line="31" pos:column="34"> <block pos:line="31" pos:column="35">{
                    <expr_stmt><expr><name pos:line="32" pos:column="21">str<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">=<pos:position pos:line="32" pos:column="26"/></operator> <call><name pos:line="32" pos:column="27">apr_pstrdup<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name><name pos:line="32" pos:column="39">f<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">-&gt;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="42">r<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">-&gt;<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="45">pool<pos:position pos:line="32" pos:column="49"/></name></name></expr></argument>,  <argument><expr><name pos:line="32" pos:column="52">cachecontrol<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="33" pos:column="21">ap_str_tolower<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">str<pos:position pos:line="33" pos:column="39"/></name></expr></argument>)<pos:position pos:line="33" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>
                    <if pos:line="34" pos:column="21">if <condition pos:line="34" pos:column="24">(<expr><call><name pos:line="34" pos:column="25">strstr<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">str<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="37">"no-transform"<pos:position pos:line="34" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="53"/></condition><then pos:line="34" pos:column="53"> <block pos:line="34" pos:column="54">{
                        <expr_stmt><expr><call><name pos:line="35" pos:column="25">ap_remove_output_filter<pos:position pos:line="35" pos:column="48"/></name><argument_list pos:line="35" pos:column="48">(<argument><expr><name pos:line="35" pos:column="49">f<pos:position pos:line="35" pos:column="50"/></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>
                        <return pos:line="36" pos:column="25">return <expr><call><name pos:line="36" pos:column="32">ap_pass_brigade<pos:position pos:line="36" pos:column="47"/></name><argument_list pos:line="36" pos:column="47">(<argument><expr><name><name pos:line="36" pos:column="48">f<pos:position pos:line="36" pos:column="49"/></name><operator pos:line="36" pos:column="49">-&gt;<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="51">next<pos:position pos:line="36" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="57">bb<pos:position pos:line="36" pos:column="59"/></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></return>
                    }<pos:position pos:line="37" pos:column="22"/></block></then></if>
                }<pos:position pos:line="38" pos:column="18"/></block></then></if>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><call><name pos:line="42" pos:column="14">filter_lookup<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">f<pos:position pos:line="42" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="31">filter<pos:position pos:line="42" pos:column="37"/></name></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="39"/></condition><then pos:line="42" pos:column="39"> <block pos:line="42" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">ap_remove_output_filter<pos:position pos:line="43" pos:column="36"/></name><argument_list pos:line="43" pos:column="36">(<argument><expr><name pos:line="43" pos:column="37">f<pos:position pos:line="43" pos:column="38"/></name></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>
            <return pos:line="44" pos:column="13">return <expr><call><name pos:line="44" pos:column="20">ap_pass_brigade<pos:position pos:line="44" pos:column="35"/></name><argument_list pos:line="44" pos:column="35">(<argument><expr><name><name pos:line="44" pos:column="36">f<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">-&gt;<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="39">next<pos:position pos:line="44" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="45">bb<pos:position pos:line="44" pos:column="47"/></name></expr></argument>)<pos:position pos:line="44" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="49"/></return>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="48" pos:column="5">/* call the content filter with its own context, then restore our
     * context
     */</comment>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">f<pos:position pos:line="51" pos:column="6"/></name><operator pos:line="51" pos:column="6">-&gt;<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="8">ctx<pos:position pos:line="51" pos:column="11"/></name></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <name><name pos:line="51" pos:column="14">ctx<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">-&gt;<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="19">fctx<pos:position pos:line="51" pos:column="23"/></name></name></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="52" pos:column="5">ret<pos:position pos:line="52" pos:column="8"/></name> <operator pos:line="52" pos:column="9">=<pos:position pos:line="52" pos:column="10"/></operator> <call><name><name pos:line="52" pos:column="11">ctx<pos:position pos:line="52" pos:column="14"/></name><operator pos:line="52" pos:column="14">-&gt;<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="16">func<pos:position pos:line="52" pos:column="20"/></name></name><argument_list pos:line="52" pos:column="20">(<argument><expr><name pos:line="52" pos:column="21">f<pos:position pos:line="52" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="24">bb<pos:position pos:line="52" pos:column="26"/></name></expr></argument>)<pos:position pos:line="52" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">ctx<pos:position pos:line="53" pos:column="8"/></name><operator pos:line="53" pos:column="8">-&gt;<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="10">fctx<pos:position pos:line="53" pos:column="14"/></name></name> <operator pos:line="53" pos:column="15">=<pos:position pos:line="53" pos:column="16"/></operator> <name><name pos:line="53" pos:column="17">f<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">-&gt;<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="20">ctx<pos:position pos:line="53" pos:column="23"/></name></name></expr>;<pos:position pos:line="53" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">f<pos:position pos:line="54" pos:column="6"/></name><operator pos:line="54" pos:column="6">-&gt;<pos:position pos:line="54" pos:column="11"/></operator><name pos:line="54" pos:column="8">ctx<pos:position pos:line="54" pos:column="11"/></name></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <name pos:line="54" pos:column="14">ctx<pos:position pos:line="54" pos:column="17"/></name></expr>;<pos:position pos:line="54" pos:column="18"/></expr_stmt>

    <return pos:line="56" pos:column="5">return <expr><name pos:line="56" pos:column="12">ret<pos:position pos:line="56" pos:column="15"/></name></expr>;<pos:position pos:line="56" pos:column="16"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

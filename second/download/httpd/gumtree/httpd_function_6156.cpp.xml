<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6156.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_util_copy<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">apr_bucket_brigade<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">to<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">apr_bucket_brigade<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">from<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>, 
                          <parameter><decl><type><name pos:line="2" pos:column="27">apr_off_t<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">maxlen<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">msg<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">status<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">APR_SUCCESS<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">same_alloc<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="7" pos:column="5">(<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">void<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">)<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">msg<pos:position pos:line="7" pos:column="14"/></name></expr>;<pos:position pos:line="7" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">to<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">from<pos:position pos:line="9" pos:column="25"/></name></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">same_alloc<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <operator pos:line="10" pos:column="18">(<pos:position pos:line="10" pos:column="19"/></operator><name><name pos:line="10" pos:column="19">to<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">bucket_alloc<pos:position pos:line="10" pos:column="35"/></name></name> <operator pos:line="10" pos:column="36">==<pos:position pos:line="10" pos:column="38"/></operator> <name><name pos:line="10" pos:column="39">from<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">bucket_alloc<pos:position pos:line="10" pos:column="57"/></name></name><operator pos:line="10" pos:column="57">)<pos:position pos:line="10" pos:column="58"/></operator></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><call><name pos:line="12" pos:column="10">APR_BRIGADE_EMPTY<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">from<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34"> <block pos:line="12" pos:column="35">{
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">apr_bucket<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">b<pos:position pos:line="13" pos:column="22"/></name></decl>, <modifier pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="25">end<pos:position pos:line="13" pos:column="28"/></name></decl>, <modifier pos:line="13" pos:column="30">*<pos:position pos:line="13" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="31">cpy<pos:position pos:line="13" pos:column="34"/></name></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
        
        <expr_stmt><expr><name pos:line="15" pos:column="9">status<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">last_not_included<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">from<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">maxlen<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="50">0<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="53">0<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="56">&amp;<pos:position pos:line="15" pos:column="61"/></operator><name pos:line="15" pos:column="57">end<pos:position pos:line="15" pos:column="60"/></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">status<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">!=<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">APR_SUCCESS<pos:position pos:line="16" pos:column="34"/></name></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35"> <block pos:line="16" pos:column="36">{
            <return pos:line="17" pos:column="13">return <expr><name pos:line="17" pos:column="20">status<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></return>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>

        <for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">b<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">APR_BRIGADE_FIRST<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">from<pos:position pos:line="20" pos:column="40"/></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></init>
             <condition><expr><name pos:line="21" pos:column="14">b<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">!=<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">APR_BRIGADE_SENTINEL<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><name pos:line="21" pos:column="40">from<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call> <operator pos:line="21" pos:column="46">&amp;&amp;<pos:position pos:line="21" pos:column="56"/></operator> <name pos:line="21" pos:column="49">b<pos:position pos:line="21" pos:column="50"/></name> <operator pos:line="21" pos:column="51">!=<pos:position pos:line="21" pos:column="53"/></operator> <name pos:line="21" pos:column="54">end<pos:position pos:line="21" pos:column="57"/></name></expr>;<pos:position pos:line="21" pos:column="58"/></condition>
             <incr><expr><name pos:line="22" pos:column="14">b<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">APR_BUCKET_NEXT<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">b<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr></incr>)<pos:position pos:line="22" pos:column="37"/></control>
        <block pos:line="23" pos:column="9">{
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name pos:line="24" pos:column="17">same_alloc<pos:position pos:line="24" pos:column="27"/></name></expr>)<pos:position pos:line="24" pos:column="28"/></condition><then pos:line="24" pos:column="28"> <block pos:line="24" pos:column="29">{
                <expr_stmt><expr><name pos:line="25" pos:column="17">status<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <call><name pos:line="25" pos:column="26">apr_bucket_copy<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><name pos:line="25" pos:column="42">b<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="45">&amp;<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="46">cpy<pos:position pos:line="25" pos:column="49"/></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
                <if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">status<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">!=<pos:position pos:line="26" pos:column="30"/></operator> <name pos:line="26" pos:column="31">APR_SUCCESS<pos:position pos:line="26" pos:column="42"/></name></expr>)<pos:position pos:line="26" pos:column="43"/></condition><then pos:line="26" pos:column="43"> <block pos:line="26" pos:column="44">{
                    <break pos:line="27" pos:column="21">break;<pos:position pos:line="27" pos:column="27"/></break>
                }<pos:position pos:line="28" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="29" pos:column="40"/></name><argument_list pos:line="29" pos:column="40">(<argument><expr><name pos:line="29" pos:column="41">to<pos:position pos:line="29" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="45">cpy<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></then>
            <else pos:line="31" pos:column="13">else <block pos:line="31" pos:column="18">{
                <if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">APR_BUCKET_IS_METADATA<pos:position pos:line="32" pos:column="43"/></name><argument_list pos:line="32" pos:column="43">(<argument><expr><name pos:line="32" pos:column="44">b<pos:position pos:line="32" pos:column="45"/></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="47"/></condition><then pos:line="32" pos:column="47"> <block pos:line="32" pos:column="48">{
                    <if pos:line="33" pos:column="21">if <condition pos:line="33" pos:column="24">(<expr><call><name pos:line="33" pos:column="25">APR_BUCKET_IS_EOS<pos:position pos:line="33" pos:column="42"/></name><argument_list pos:line="33" pos:column="42">(<argument><expr><name pos:line="33" pos:column="43">b<pos:position pos:line="33" pos:column="44"/></name></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="46"/></condition><then pos:line="33" pos:column="46"> <block pos:line="33" pos:column="47">{
                        <expr_stmt><expr><call><name pos:line="34" pos:column="25">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="34" pos:column="48"/></name><argument_list pos:line="34" pos:column="48">(<argument><expr><name pos:line="34" pos:column="49">to<pos:position pos:line="34" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="53">apr_bucket_eos_create<pos:position pos:line="34" pos:column="74"/></name><argument_list pos:line="34" pos:column="74">(<argument><expr><name><name pos:line="34" pos:column="75">to<pos:position pos:line="34" pos:column="77"/></name><operator pos:line="34" pos:column="77">-&gt;<pos:position pos:line="34" pos:column="82"/></operator><name pos:line="34" pos:column="79">bucket_alloc<pos:position pos:line="34" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="94"/></expr_stmt>
                    }<pos:position pos:line="35" pos:column="22"/></block></then>
                    <elseif pos:line="36" pos:column="21">else <if pos:line="36" pos:column="26">if <condition pos:line="36" pos:column="29">(<expr><call><name pos:line="36" pos:column="30">APR_BUCKET_IS_FLUSH<pos:position pos:line="36" pos:column="49"/></name><argument_list pos:line="36" pos:column="49">(<argument><expr><name pos:line="36" pos:column="50">b<pos:position pos:line="36" pos:column="51"/></name></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="53"/></condition><then pos:line="36" pos:column="53"> <block pos:line="36" pos:column="54">{
                        <expr_stmt><expr><call><name pos:line="37" pos:column="25">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="37" pos:column="48"/></name><argument_list pos:line="37" pos:column="48">(<argument><expr><name pos:line="37" pos:column="49">to<pos:position pos:line="37" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="53">apr_bucket_flush_create<pos:position pos:line="37" pos:column="76"/></name><argument_list pos:line="37" pos:column="76">(<argument><expr><name><name pos:line="37" pos:column="77">to<pos:position pos:line="37" pos:column="79"/></name><operator pos:line="37" pos:column="79">-&gt;<pos:position pos:line="37" pos:column="84"/></operator><name pos:line="37" pos:column="81">bucket_alloc<pos:position pos:line="37" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="96"/></expr_stmt>
                    }<pos:position pos:line="38" pos:column="22"/></block></then></if></elseif>
                    <else pos:line="39" pos:column="21">else <block pos:line="39" pos:column="26">{
                        <comment type="block" pos:line="40" pos:column="25">/* ignore */</comment>
                    }<pos:position pos:line="41" pos:column="22"/></block></else></if>
                }<pos:position pos:line="42" pos:column="18"/></block></then>
                <else pos:line="43" pos:column="17">else <block pos:line="43" pos:column="22">{
                    <decl_stmt><decl><type><specifier pos:line="44" pos:column="21">const<pos:position pos:line="44" pos:column="26"/></specifier> <name pos:line="44" pos:column="27">char<pos:position pos:line="44" pos:column="31"/></name> <modifier pos:line="44" pos:column="32">*<pos:position pos:line="44" pos:column="33"/></modifier></type><name pos:line="44" pos:column="33">data<pos:position pos:line="44" pos:column="37"/></name></decl>;<pos:position pos:line="44" pos:column="38"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="45" pos:column="21">apr_size_t<pos:position pos:line="45" pos:column="31"/></name></type> <name pos:line="45" pos:column="32">len<pos:position pos:line="45" pos:column="35"/></name></decl>;<pos:position pos:line="45" pos:column="36"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="46" pos:column="21">status<pos:position pos:line="46" pos:column="27"/></name> <operator pos:line="46" pos:column="28">=<pos:position pos:line="46" pos:column="29"/></operator> <call><name pos:line="46" pos:column="30">apr_bucket_read<pos:position pos:line="46" pos:column="45"/></name><argument_list pos:line="46" pos:column="45">(<argument><expr><name pos:line="46" pos:column="46">b<pos:position pos:line="46" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="49">&amp;<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="50">data<pos:position pos:line="46" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="56">&amp;<pos:position pos:line="46" pos:column="61"/></operator><name pos:line="46" pos:column="57">len<pos:position pos:line="46" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="62">APR_BLOCK_READ<pos:position pos:line="46" pos:column="76"/></name></expr></argument>)<pos:position pos:line="46" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="78"/></expr_stmt>
                    <if pos:line="47" pos:column="21">if <condition pos:line="47" pos:column="24">(<expr><name pos:line="47" pos:column="25">status<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">==<pos:position pos:line="47" pos:column="34"/></operator> <name pos:line="47" pos:column="35">APR_SUCCESS<pos:position pos:line="47" pos:column="46"/></name> <operator pos:line="47" pos:column="47">&amp;&amp;<pos:position pos:line="47" pos:column="57"/></operator> <name pos:line="47" pos:column="50">len<pos:position pos:line="47" pos:column="53"/></name> <operator pos:line="47" pos:column="54">&gt;<pos:position pos:line="47" pos:column="58"/></operator> <literal type="number" pos:line="47" pos:column="56">0<pos:position pos:line="47" pos:column="57"/></literal></expr>)<pos:position pos:line="47" pos:column="58"/></condition><then pos:line="47" pos:column="58"> <block pos:line="47" pos:column="59">{
                        <expr_stmt><expr><name pos:line="48" pos:column="25">status<pos:position pos:line="48" pos:column="31"/></name> <operator pos:line="48" pos:column="32">=<pos:position pos:line="48" pos:column="33"/></operator> <call><name pos:line="48" pos:column="34">apr_brigade_write<pos:position pos:line="48" pos:column="51"/></name><argument_list pos:line="48" pos:column="51">(<argument><expr><name pos:line="48" pos:column="52">to<pos:position pos:line="48" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="56">NULL<pos:position pos:line="48" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="62">NULL<pos:position pos:line="48" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="68">data<pos:position pos:line="48" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="74">len<pos:position pos:line="48" pos:column="77"/></name></expr></argument>)<pos:position pos:line="48" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="79"/></expr_stmt>
<cpp:if pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">if<pos:position pos:line="49" pos:column="4"/></cpp:directive> <expr><name pos:line="49" pos:column="5">LOG_BUCKETS<pos:position pos:line="49" pos:column="16"/></name></expr></cpp:if>                        
                        <expr_stmt><expr><call><name pos:line="50" pos:column="25">ap_log_perror<pos:position pos:line="50" pos:column="38"/></name><argument_list pos:line="50" pos:column="38">(<argument><expr><name pos:line="50" pos:column="39">APLOG_MARK<pos:position pos:line="50" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="51">LOG_LEVEL<pos:position pos:line="50" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="62">0<pos:position pos:line="50" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="65">to<pos:position pos:line="50" pos:column="67"/></name><operator pos:line="50" pos:column="67">-&gt;<pos:position pos:line="50" pos:column="72"/></operator><name pos:line="50" pos:column="69">p<pos:position pos:line="50" pos:column="70"/></name></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="51" pos:column="39">"h2_util_copy: %s, copied bucket %ld-%ld "<pos:position pos:line="51" pos:column="81"/></literal>
                                      <literal type="string" pos:line="52" pos:column="39">"from=%lx(p=%lx) to=%lx(p=%lx)"<pos:position pos:line="52" pos:column="70"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="53" pos:column="39">msg<pos:position pos:line="53" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="44">(<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="45">long<pos:position pos:line="53" pos:column="49"/></name><operator pos:line="53" pos:column="49">)<pos:position pos:line="53" pos:column="50"/></operator><name><name pos:line="53" pos:column="50">b<pos:position pos:line="53" pos:column="51"/></name><operator pos:line="53" pos:column="51">-&gt;<pos:position pos:line="53" pos:column="56"/></operator><name pos:line="53" pos:column="53">start<pos:position pos:line="53" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="60">(<pos:position pos:line="53" pos:column="61"/></operator><name pos:line="53" pos:column="61">long<pos:position pos:line="53" pos:column="65"/></name><operator pos:line="53" pos:column="65">)<pos:position pos:line="53" pos:column="66"/></operator><name><name pos:line="53" pos:column="66">b<pos:position pos:line="53" pos:column="67"/></name><operator pos:line="53" pos:column="67">-&gt;<pos:position pos:line="53" pos:column="72"/></operator><name pos:line="53" pos:column="69">length<pos:position pos:line="53" pos:column="75"/></name></name></expr></argument>, 
                                      <argument><expr><operator pos:line="54" pos:column="39">(<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="40">long<pos:position pos:line="54" pos:column="44"/></name><operator pos:line="54" pos:column="44">)<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="45">from<pos:position pos:line="54" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="51">(<pos:position pos:line="54" pos:column="52"/></operator><name pos:line="54" pos:column="52">long<pos:position pos:line="54" pos:column="56"/></name><operator pos:line="54" pos:column="56">)<pos:position pos:line="54" pos:column="57"/></operator><name><name pos:line="54" pos:column="57">from<pos:position pos:line="54" pos:column="61"/></name><operator pos:line="54" pos:column="61">-&gt;<pos:position pos:line="54" pos:column="66"/></operator><name pos:line="54" pos:column="63">p<pos:position pos:line="54" pos:column="64"/></name></name></expr></argument>, 
                                      <argument><expr><operator pos:line="55" pos:column="39">(<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="40">long<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">)<pos:position pos:line="55" pos:column="45"/></operator><name pos:line="55" pos:column="45">to<pos:position pos:line="55" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="49">(<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="50">long<pos:position pos:line="55" pos:column="54"/></name><operator pos:line="55" pos:column="54">)<pos:position pos:line="55" pos:column="55"/></operator><name><name pos:line="55" pos:column="55">to<pos:position pos:line="55" pos:column="57"/></name><operator pos:line="55" pos:column="57">-&gt;<pos:position pos:line="55" pos:column="62"/></operator><name pos:line="55" pos:column="59">p<pos:position pos:line="55" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="62"/></expr_stmt>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>
                    }<pos:position pos:line="57" pos:column="22"/></block></then></if>
                }<pos:position pos:line="58" pos:column="18"/></block></else></if>
            }<pos:position pos:line="59" pos:column="14"/></block></else></if>
        }<pos:position pos:line="60" pos:column="10"/></block></for>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
    <return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">status<pos:position pos:line="62" pos:column="18"/></name></expr>;<pos:position pos:line="62" pos:column="19"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

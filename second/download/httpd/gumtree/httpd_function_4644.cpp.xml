<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4644.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ssl_tmp_key_init_rsa<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">server_rec<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">s<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">int<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">bits<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">idx<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SSLModConfigRec<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">mc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><call><name pos:line="4" pos:column="27">myModConfig<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name pos:line="4" pos:column="39">s<pos:position pos:line="4" pos:column="40"/></name></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>

<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">HAVE_FIPS<pos:position pos:line="6" pos:column="17"/></name></cpp:ifdef>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">FIPS_mode<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">()<pos:position pos:line="8" pos:column="20"/></argument_list></call> <operator pos:line="8" pos:column="21">&amp;&amp;<pos:position pos:line="8" pos:column="31"/></operator> <name pos:line="8" pos:column="24">bits<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">&lt;<pos:position pos:line="8" pos:column="33"/></operator> <literal type="number" pos:line="8" pos:column="31">1024<pos:position pos:line="8" pos:column="35"/></literal></expr>)<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36"> <block pos:line="8" pos:column="37">{
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">mc<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">pTmpKeys<pos:position pos:line="9" pos:column="21"/></name><index pos:line="9" pos:column="21">[<expr><name pos:line="9" pos:column="22">idx<pos:position pos:line="9" pos:column="25"/></name></expr>]<pos:position pos:line="9" pos:column="26"/></index></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="29">NULL<pos:position pos:line="9" pos:column="33"/></name></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ap_log_error<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">APLOG_MARK<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">APLOG_ERR<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="45">0<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">s<pos:position pos:line="10" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="51">APLOGNO<pos:position pos:line="10" pos:column="58"/></name><argument_list pos:line="10" pos:column="58">(<argument><expr><literal type="number" pos:line="10" pos:column="59">01877<pos:position pos:line="10" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call>
                     <literal type="string" pos:line="11" pos:column="22">"Init: Skipping generating temporary "<pos:position pos:line="11" pos:column="60"/></literal>
                     <literal type="string" pos:line="12" pos:column="22">"%d bit RSA private key in FIPS mode"<pos:position pos:line="12" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="61">bits<pos:position pos:line="12" pos:column="65"/></name></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="67"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">OK<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">HAVE_GENERATE_EX<pos:position pos:line="17" pos:column="24"/></name></cpp:ifdef>
    <block pos:line="18" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">RSA<pos:position pos:line="19" pos:column="12"/></name> <modifier pos:line="19" pos:column="13">*<pos:position pos:line="19" pos:column="14"/></modifier></type><name pos:line="19" pos:column="14">tkey<pos:position pos:line="19" pos:column="18"/></name></decl>;<pos:position pos:line="19" pos:column="19"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">BIGNUM<pos:position pos:line="20" pos:column="15"/></name> <modifier pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></modifier></type><name pos:line="20" pos:column="17">bn_f4<pos:position pos:line="20" pos:column="22"/></name></decl>;<pos:position pos:line="20" pos:column="23"/></decl_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><operator pos:line="21" pos:column="14">(<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">tkey<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="22">RSA_new<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">()<pos:position pos:line="21" pos:column="31"/></argument_list></call><operator pos:line="21" pos:column="31">)<pos:position pos:line="21" pos:column="32"/></operator>
          <operator pos:line="22" pos:column="11">||<pos:position pos:line="22" pos:column="13"/></operator> <operator pos:line="22" pos:column="14">!<pos:position pos:line="22" pos:column="15"/></operator><operator pos:line="22" pos:column="15">(<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">bn_f4<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <call><name pos:line="22" pos:column="24">BN_new<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">()<pos:position pos:line="22" pos:column="32"/></argument_list></call><operator pos:line="22" pos:column="32">)<pos:position pos:line="22" pos:column="33"/></operator>
          <operator pos:line="23" pos:column="11">||<pos:position pos:line="23" pos:column="13"/></operator> <operator pos:line="23" pos:column="14">!<pos:position pos:line="23" pos:column="15"/></operator><call><name pos:line="23" pos:column="15">BN_set_word<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">bn_f4<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">RSA_F4<pos:position pos:line="23" pos:column="40"/></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call>
          <operator pos:line="24" pos:column="11">||<pos:position pos:line="24" pos:column="13"/></operator> <operator pos:line="24" pos:column="14">!<pos:position pos:line="24" pos:column="15"/></operator><call><name pos:line="24" pos:column="15">RSA_generate_key_ex<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">tkey<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">bits<pos:position pos:line="24" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="47">bn_f4<pos:position pos:line="24" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="54">NULL<pos:position pos:line="24" pos:column="58"/></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="60"/></condition><then pos:line="24" pos:column="60">
        <block pos:line="25" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">ap_log_error<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">APLOG_MARK<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="38">APLOG_ERR<pos:position pos:line="26" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="49">0<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="52">s<pos:position pos:line="26" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="55">APLOGNO<pos:position pos:line="26" pos:column="62"/></name><argument_list pos:line="26" pos:column="62">(<argument><expr><literal type="number" pos:line="26" pos:column="63">01878<pos:position pos:line="26" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call>
                         <literal type="string" pos:line="27" pos:column="26">"Init: Failed to generate temporary "<pos:position pos:line="27" pos:column="63"/></literal>
                         <literal type="string" pos:line="28" pos:column="26">"%d bit RSA private key"<pos:position pos:line="28" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="52">bits<pos:position pos:line="28" pos:column="56"/></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">ssl_log_ssl_error<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">SSLLOG_MARK<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">APLOG_ERR<pos:position pos:line="29" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="55">s<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt>
            <return pos:line="30" pos:column="13">return <expr><operator pos:line="30" pos:column="20">!<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">OK<pos:position pos:line="30" pos:column="23"/></name></expr>;<pos:position pos:line="30" pos:column="24"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">BN_free<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">bn_f4<pos:position pos:line="32" pos:column="22"/></name></expr></argument>)<pos:position pos:line="32" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">mc<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">-&gt;<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="13">pTmpKeys<pos:position pos:line="33" pos:column="21"/></name><index pos:line="33" pos:column="21">[<expr><name pos:line="33" pos:column="22">idx<pos:position pos:line="33" pos:column="25"/></name></expr>]<pos:position pos:line="33" pos:column="26"/></index></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <name pos:line="33" pos:column="29">tkey<pos:position pos:line="33" pos:column="33"/></name></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block>
<cpp:else pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">else<pos:position pos:line="35" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><operator pos:line="36" pos:column="10">(<pos:position pos:line="36" pos:column="11"/></operator><name><name pos:line="36" pos:column="11">mc<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">pTmpKeys<pos:position pos:line="36" pos:column="23"/></name><index pos:line="36" pos:column="23">[<expr><name pos:line="36" pos:column="24">idx<pos:position pos:line="36" pos:column="27"/></name></expr>]<pos:position pos:line="36" pos:column="28"/></index></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator>
          <call><name pos:line="37" pos:column="11">RSA_generate_key<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">bits<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">RSA_F4<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="42">NULL<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="48">NULL<pos:position pos:line="37" pos:column="52"/></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call><operator pos:line="37" pos:column="53">)<pos:position pos:line="37" pos:column="54"/></operator></expr>)<pos:position pos:line="37" pos:column="55"/></condition><then pos:line="37" pos:column="55">
    <block pos:line="38" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">ap_log_error<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name pos:line="39" pos:column="22">APLOG_MARK<pos:position pos:line="39" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="34">APLOG_ERR<pos:position pos:line="39" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="45">0<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="48">s<pos:position pos:line="39" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="51">APLOGNO<pos:position pos:line="39" pos:column="58"/></name><argument_list pos:line="39" pos:column="58">(<argument><expr><literal type="number" pos:line="39" pos:column="59">01879<pos:position pos:line="39" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="65"/></argument_list></call>
                     <literal type="string" pos:line="40" pos:column="22">"Init: Failed to generate temporary "<pos:position pos:line="40" pos:column="59"/></literal>
                     <literal type="string" pos:line="41" pos:column="22">"%d bit RSA private key"<pos:position pos:line="41" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="48">bits<pos:position pos:line="41" pos:column="52"/></name></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">ssl_log_ssl_error<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><name pos:line="42" pos:column="27">SSLLOG_MARK<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="40">APLOG_ERR<pos:position pos:line="42" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="51">s<pos:position pos:line="42" pos:column="52"/></name></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>
        <return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">!<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">OK<pos:position pos:line="43" pos:column="19"/></name></expr>;<pos:position pos:line="43" pos:column="20"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">OK<pos:position pos:line="47" pos:column="14"/></name></expr>;<pos:position pos:line="47" pos:column="15"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1100_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lua_ap_requestbody<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">lua_State<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">L<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name>     <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">filename<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name>    <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">r<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_off_t<pos:position pos:line="5" pos:column="14"/></name></type>      <name pos:line="5" pos:column="20">maxSize<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    
    <expr_stmt><expr><name pos:line="7" pos:column="5">r<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">ap_lua_check_request_rec<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">L<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="37">1<pos:position pos:line="7" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">filename<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">luaL_optstring<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">L<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="34">2<pos:position pos:line="8" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="37">0<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">maxSize<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">luaL_optint<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">L<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="30">3<pos:position pos:line="9" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="33">0<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">r<pos:position pos:line="11" pos:column="10"/></name></expr>)<pos:position pos:line="11" pos:column="11"/></condition><then pos:line="11" pos:column="11"> <block pos:line="11" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">apr_off_t<pos:position pos:line="12" pos:column="18"/></name></type> <name pos:line="12" pos:column="19">size<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">maxSize<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">&gt;<pos:position pos:line="13" pos:column="25"/></operator> <literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal> <operator pos:line="13" pos:column="25">&amp;&amp;<pos:position pos:line="13" pos:column="35"/></operator> <name><name pos:line="13" pos:column="28">r<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">remaining<pos:position pos:line="13" pos:column="40"/></name></name> <operator pos:line="13" pos:column="41">&gt;<pos:position pos:line="13" pos:column="45"/></operator> <name pos:line="13" pos:column="43">maxSize<pos:position pos:line="13" pos:column="50"/></name></expr>)<pos:position pos:line="13" pos:column="51"/></condition><then pos:line="13" pos:column="51"> <block pos:line="13" pos:column="52">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">lua_pushnil<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">L<pos:position pos:line="14" pos:column="26"/></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">lua_pushliteral<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">L<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="32">"Request body was larger than the permitted size."<pos:position pos:line="15" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="84"/></expr_stmt>
            <return pos:line="16" pos:column="13">return <expr><literal type="number" pos:line="16" pos:column="20">2<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></return>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">r<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">method_number<pos:position pos:line="18" pos:column="29"/></name></name> <operator pos:line="18" pos:column="30">!=<pos:position pos:line="18" pos:column="32"/></operator> <name pos:line="18" pos:column="33">M_POST<pos:position pos:line="18" pos:column="39"/></name> <operator pos:line="18" pos:column="40">&amp;&amp;<pos:position pos:line="18" pos:column="50"/></operator> <name><name pos:line="18" pos:column="43">r<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">-&gt;<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="46">method_number<pos:position pos:line="18" pos:column="59"/></name></name> <operator pos:line="18" pos:column="60">!=<pos:position pos:line="18" pos:column="62"/></operator> <name pos:line="18" pos:column="63">M_PUT<pos:position pos:line="18" pos:column="68"/></name></expr>)<pos:position pos:line="18" pos:column="69"/></condition><then pos:line="18" pos:column="69">
            <block type="pseudo"><return pos:line="19" pos:column="13">return <expr><operator pos:line="19" pos:column="20">(<pos:position pos:line="19" pos:column="21"/></operator><literal type="number" pos:line="19" pos:column="21">0<pos:position pos:line="19" pos:column="22"/></literal><operator pos:line="19" pos:column="22">)<pos:position pos:line="19" pos:column="23"/></operator></expr>;<pos:position pos:line="19" pos:column="24"/></return></block></then></if>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">filename<pos:position pos:line="20" pos:column="22"/></name></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23"> <block pos:line="20" pos:column="24">{
            <decl_stmt><decl><type><specifier pos:line="21" pos:column="13">const<pos:position pos:line="21" pos:column="18"/></specifier> <name pos:line="21" pos:column="19">char<pos:position pos:line="21" pos:column="23"/></name>     <modifier pos:line="21" pos:column="28">*<pos:position pos:line="21" pos:column="29"/></modifier></type><name pos:line="21" pos:column="29">data<pos:position pos:line="21" pos:column="33"/></name></decl>;<pos:position pos:line="21" pos:column="34"/></decl_stmt>

            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><call><name pos:line="23" pos:column="17">lua_read_body<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">r<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="34">&amp;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="35">data<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="41">&amp;<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="42">size<pos:position pos:line="23" pos:column="46"/></name></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call> <operator pos:line="23" pos:column="48">!=<pos:position pos:line="23" pos:column="50"/></operator> <name pos:line="23" pos:column="51">OK<pos:position pos:line="23" pos:column="53"/></name></expr>)<pos:position pos:line="23" pos:column="54"/></condition><then pos:line="23" pos:column="54">
                <block type="pseudo"><return pos:line="24" pos:column="17">return <expr><operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><literal type="number" pos:line="24" pos:column="25">0<pos:position pos:line="24" pos:column="26"/></literal><operator pos:line="24" pos:column="26">)<pos:position pos:line="24" pos:column="27"/></operator></expr>;<pos:position pos:line="24" pos:column="28"/></return></block></then></if>

            <expr_stmt><expr><call><name pos:line="26" pos:column="13">lua_pushlstring<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">L<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="32">data<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="38">(<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="39">size_t<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">)<pos:position pos:line="26" pos:column="46"/></operator> <name pos:line="26" pos:column="47">size<pos:position pos:line="26" pos:column="51"/></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">lua_pushinteger<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">L<pos:position pos:line="27" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="32">(<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="33">lua_Integer<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">)<pos:position pos:line="27" pos:column="45"/></operator> <name pos:line="27" pos:column="46">size<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>
            <return pos:line="28" pos:column="13">return <expr><operator pos:line="28" pos:column="20">(<pos:position pos:line="28" pos:column="21"/></operator><literal type="number" pos:line="28" pos:column="21">2<pos:position pos:line="28" pos:column="22"/></literal><operator pos:line="28" pos:column="22">)<pos:position pos:line="28" pos:column="23"/></operator></expr>;<pos:position pos:line="28" pos:column="24"/></return>
        }<pos:position pos:line="29" pos:column="10"/></block></then> <else pos:line="29" pos:column="11">else <block pos:line="29" pos:column="16">{
            <decl_stmt><decl><type><name pos:line="30" pos:column="13">apr_status_t<pos:position pos:line="30" pos:column="25"/></name></type> <name pos:line="30" pos:column="26">rc<pos:position pos:line="30" pos:column="28"/></name></decl>;<pos:position pos:line="30" pos:column="29"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="31" pos:column="13">apr_file_t<pos:position pos:line="31" pos:column="23"/></name>     <modifier pos:line="31" pos:column="28">*<pos:position pos:line="31" pos:column="29"/></modifier></type><name pos:line="31" pos:column="29">file<pos:position pos:line="31" pos:column="33"/></name></decl>;<pos:position pos:line="31" pos:column="34"/></decl_stmt>

            <expr_stmt><expr><name pos:line="33" pos:column="13">rc<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">apr_file_open<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><operator pos:line="33" pos:column="32">&amp;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="33">file<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">filename<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="49">APR_CREATE<pos:position pos:line="33" pos:column="59"/></name> <operator pos:line="33" pos:column="60">|<pos:position pos:line="33" pos:column="61"/></operator> <name pos:line="33" pos:column="62">APR_FOPEN_WRITE<pos:position pos:line="33" pos:column="77"/></name></expr></argument>,
                               <argument><expr><name pos:line="34" pos:column="32">APR_FPROT_OS_DEFAULT<pos:position pos:line="34" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="54">r<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">-&gt;<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="57">pool<pos:position pos:line="34" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">lua_settop<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">L<pos:position pos:line="35" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="27">0<pos:position pos:line="35" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">rc<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">==<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">APR_SUCCESS<pos:position pos:line="36" pos:column="34"/></name></expr>)<pos:position pos:line="36" pos:column="35"/></condition><then pos:line="36" pos:column="35"> <block pos:line="36" pos:column="36">{
                <expr_stmt><expr><name pos:line="37" pos:column="17">rc<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <call><name pos:line="37" pos:column="22">lua_write_body<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">r<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="40">file<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="46">&amp;<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="47">size<pos:position pos:line="37" pos:column="51"/></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="38" pos:column="17">apr_file_close<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">file<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
                <if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">rc<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">!=<pos:position pos:line="39" pos:column="26"/></operator> <name pos:line="39" pos:column="27">OK<pos:position pos:line="39" pos:column="29"/></name></expr>)<pos:position pos:line="39" pos:column="30"/></condition><then pos:line="39" pos:column="30"> <block pos:line="39" pos:column="31">{
                    <expr_stmt><expr><call><name pos:line="40" pos:column="21">lua_pushboolean<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><name pos:line="40" pos:column="37">L<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="40">0<pos:position pos:line="40" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
                    <return pos:line="41" pos:column="21">return <expr><literal type="number" pos:line="41" pos:column="28">1<pos:position pos:line="41" pos:column="29"/></literal></expr>;<pos:position pos:line="41" pos:column="30"/></return>
                }<pos:position pos:line="42" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="43" pos:column="17">lua_pushinteger<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">L<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="36">(<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="37">lua_Integer<pos:position pos:line="43" pos:column="48"/></name><operator pos:line="43" pos:column="48">)<pos:position pos:line="43" pos:column="49"/></operator> <name pos:line="43" pos:column="50">size<pos:position pos:line="43" pos:column="54"/></name></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt>
                <return pos:line="44" pos:column="17">return <expr><operator pos:line="44" pos:column="24">(<pos:position pos:line="44" pos:column="25"/></operator><literal type="number" pos:line="44" pos:column="25">1<pos:position pos:line="44" pos:column="26"/></literal><operator pos:line="44" pos:column="26">)<pos:position pos:line="44" pos:column="27"/></operator></expr>;<pos:position pos:line="44" pos:column="28"/></return>
            }<pos:position pos:line="45" pos:column="14"/></block></then> <else pos:line="45" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="17">lua_pushboolean<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name pos:line="46" pos:column="33">L<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="36">0<pos:position pos:line="46" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt></block></else></if>
            <return pos:line="47" pos:column="13">return <expr><operator pos:line="47" pos:column="20">(<pos:position pos:line="47" pos:column="21"/></operator><literal type="number" pos:line="47" pos:column="21">1<pos:position pos:line="47" pos:column="22"/></literal><operator pos:line="47" pos:column="22">)<pos:position pos:line="47" pos:column="23"/></operator></expr>;<pos:position pos:line="47" pos:column="24"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></else></if>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <return pos:line="51" pos:column="5">return <expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><literal type="number" pos:line="51" pos:column="13">0<pos:position pos:line="51" pos:column="14"/></literal><operator pos:line="51" pos:column="14">)<pos:position pos:line="51" pos:column="15"/></operator></expr>;<pos:position pos:line="51" pos:column="16"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5911.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">h2_util_bb_log<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">conn_rec<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">c<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">stream_id<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">level<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, 
                    <parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">tag<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">apr_bucket_brigade<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">bb<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buffer<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><literal type="number" pos:line="4" pos:column="17">16<pos:position pos:line="4" pos:column="19"/></literal> <operator pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></operator> <literal type="number" pos:line="4" pos:column="22">1024<pos:position pos:line="4" pos:column="26"/></literal></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">line<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="string" pos:line="5" pos:column="24">"(null)"<pos:position pos:line="5" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">bmax<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><sizeof pos:line="6" pos:column="23">sizeof<argument_list pos:line="6" pos:column="29">(<argument><expr><name pos:line="6" pos:column="30">buffer<pos:position pos:line="6" pos:column="36"/></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></sizeof><operator pos:line="6" pos:column="37">/<pos:position pos:line="6" pos:column="38"/></operator><sizeof pos:line="6" pos:column="38">sizeof<argument_list pos:line="6" pos:column="44">(<argument><expr><name><name pos:line="6" pos:column="45">buffer<pos:position pos:line="6" pos:column="51"/></name><index pos:line="6" pos:column="51">[<expr><literal type="number" pos:line="6" pos:column="52">0<pos:position pos:line="6" pos:column="53"/></literal></expr>]<pos:position pos:line="6" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="6" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">off<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_bucket<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">b<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">bb<pos:position pos:line="10" pos:column="11"/></name></expr>)<pos:position pos:line="10" pos:column="12"/></condition><then pos:line="10" pos:column="12"> <block pos:line="10" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">memset<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">buffer<pos:position pos:line="11" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="27">bmax<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">--<pos:position pos:line="11" pos:column="33"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
        <for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">b<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">APR_BRIGADE_FIRST<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">bb<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></init> 
             <condition><expr><name pos:line="13" pos:column="14">bmax<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">&amp;&amp;<pos:position pos:line="13" pos:column="29"/></operator> <operator pos:line="13" pos:column="22">(<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">b<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">!=<pos:position pos:line="13" pos:column="27"/></operator> <call><name pos:line="13" pos:column="28">APR_BRIGADE_SENTINEL<pos:position pos:line="13" pos:column="48"/></name><argument_list pos:line="13" pos:column="48">(<argument><expr><name pos:line="13" pos:column="49">bb<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call><operator pos:line="13" pos:column="52">)<pos:position pos:line="13" pos:column="53"/></operator></expr>;<pos:position pos:line="13" pos:column="54"/></condition>
             <incr><expr><name pos:line="14" pos:column="14">b<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">APR_BUCKET_NEXT<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">b<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr></incr>)<pos:position pos:line="14" pos:column="37"/></control> <block pos:line="14" pos:column="38">{
            
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><call><name pos:line="16" pos:column="17">APR_BUCKET_IS_METADATA<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><name pos:line="16" pos:column="40">b<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43"> <block pos:line="16" pos:column="44">{
                <if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">APR_BUCKET_IS_EOS<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">b<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42"> <block pos:line="17" pos:column="43">{
                    <expr_stmt><expr><name pos:line="18" pos:column="21">off<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">+=<pos:position pos:line="18" pos:column="27"/></operator> <call><name pos:line="18" pos:column="28">apr_snprintf<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name pos:line="18" pos:column="41">buffer<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">+<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="48">off<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="53">bmax<pos:position pos:line="18" pos:column="57"/></name><operator pos:line="18" pos:column="57">-<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="58">off<pos:position pos:line="18" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="63">"eos "<pos:position pos:line="18" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="71"/></expr_stmt>
                }<pos:position pos:line="19" pos:column="18"/></block></then>
                <elseif pos:line="20" pos:column="17">else <if pos:line="20" pos:column="22">if <condition pos:line="20" pos:column="25">(<expr><call><name pos:line="20" pos:column="26">APR_BUCKET_IS_FLUSH<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><name pos:line="20" pos:column="46">b<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="49"/></condition><then pos:line="20" pos:column="49"> <block pos:line="20" pos:column="50">{
                    <expr_stmt><expr><name pos:line="21" pos:column="21">off<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">+=<pos:position pos:line="21" pos:column="27"/></operator> <call><name pos:line="21" pos:column="28">apr_snprintf<pos:position pos:line="21" pos:column="40"/></name><argument_list pos:line="21" pos:column="40">(<argument><expr><name pos:line="21" pos:column="41">buffer<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">+<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="48">off<pos:position pos:line="21" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">bmax<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">-<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="58">off<pos:position pos:line="21" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="63">"flush "<pos:position pos:line="21" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="73"/></expr_stmt>
                }<pos:position pos:line="22" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="23" pos:column="17">else <if pos:line="23" pos:column="22">if <condition pos:line="23" pos:column="25">(<expr><call><name pos:line="23" pos:column="26">AP_BUCKET_IS_EOR<pos:position pos:line="23" pos:column="42"/></name><argument_list pos:line="23" pos:column="42">(<argument><expr><name pos:line="23" pos:column="43">b<pos:position pos:line="23" pos:column="44"/></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="46"/></condition><then pos:line="23" pos:column="46"> <block pos:line="23" pos:column="47">{
                    <expr_stmt><expr><name pos:line="24" pos:column="21">off<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">+=<pos:position pos:line="24" pos:column="27"/></operator> <call><name pos:line="24" pos:column="28">apr_snprintf<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><name pos:line="24" pos:column="41">buffer<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">+<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="48">off<pos:position pos:line="24" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">bmax<pos:position pos:line="24" pos:column="57"/></name><operator pos:line="24" pos:column="57">-<pos:position pos:line="24" pos:column="58"/></operator><name pos:line="24" pos:column="58">off<pos:position pos:line="24" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="63">"eor "<pos:position pos:line="24" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt>
                }<pos:position pos:line="25" pos:column="18"/></block></then></if></elseif>
                <else pos:line="26" pos:column="17">else <block pos:line="26" pos:column="22">{
                    <expr_stmt><expr><name pos:line="27" pos:column="21">off<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">+=<pos:position pos:line="27" pos:column="27"/></operator> <call><name pos:line="27" pos:column="28">apr_snprintf<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">buffer<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">+<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="48">off<pos:position pos:line="27" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="53">bmax<pos:position pos:line="27" pos:column="57"/></name><operator pos:line="27" pos:column="57">-<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="58">off<pos:position pos:line="27" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="63">"meta(unknown) "<pos:position pos:line="27" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="81"/></expr_stmt>
                }<pos:position pos:line="28" pos:column="18"/></block></else></if>
            }<pos:position pos:line="29" pos:column="14"/></block></then>
            <else pos:line="30" pos:column="13">else <block pos:line="30" pos:column="18">{
                <decl_stmt><decl><type><specifier pos:line="31" pos:column="17">const<pos:position pos:line="31" pos:column="22"/></specifier> <name pos:line="31" pos:column="23">char<pos:position pos:line="31" pos:column="27"/></name> <modifier pos:line="31" pos:column="28">*<pos:position pos:line="31" pos:column="29"/></modifier></type><name pos:line="31" pos:column="29">btype<pos:position pos:line="31" pos:column="34"/></name> <init pos:line="31" pos:column="35">= <expr><literal type="string" pos:line="31" pos:column="37">"data"<pos:position pos:line="31" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="31" pos:column="44"/></decl_stmt>
                <if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">APR_BUCKET_IS_FILE<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><name pos:line="32" pos:column="40">b<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="43"/></condition><then pos:line="32" pos:column="43"> <block pos:line="32" pos:column="44">{
                    <expr_stmt><expr><name pos:line="33" pos:column="21">btype<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <literal type="string" pos:line="33" pos:column="29">"file"<pos:position pos:line="33" pos:column="35"/></literal></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>
                }<pos:position pos:line="34" pos:column="18"/></block></then>
                <elseif pos:line="35" pos:column="17">else <if pos:line="35" pos:column="22">if <condition pos:line="35" pos:column="25">(<expr><call><name pos:line="35" pos:column="26">APR_BUCKET_IS_PIPE<pos:position pos:line="35" pos:column="44"/></name><argument_list pos:line="35" pos:column="44">(<argument><expr><name pos:line="35" pos:column="45">b<pos:position pos:line="35" pos:column="46"/></name></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="48"/></condition><then pos:line="35" pos:column="48"> <block pos:line="35" pos:column="49">{
                    <expr_stmt><expr><name pos:line="36" pos:column="21">btype<pos:position pos:line="36" pos:column="26"/></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <literal type="string" pos:line="36" pos:column="29">"pipe"<pos:position pos:line="36" pos:column="35"/></literal></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>
                }<pos:position pos:line="37" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="38" pos:column="17">else <if pos:line="38" pos:column="22">if <condition pos:line="38" pos:column="25">(<expr><call><name pos:line="38" pos:column="26">APR_BUCKET_IS_SOCKET<pos:position pos:line="38" pos:column="46"/></name><argument_list pos:line="38" pos:column="46">(<argument><expr><name pos:line="38" pos:column="47">b<pos:position pos:line="38" pos:column="48"/></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="50"/></condition><then pos:line="38" pos:column="50"> <block pos:line="38" pos:column="51">{
                    <expr_stmt><expr><name pos:line="39" pos:column="21">btype<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <literal type="string" pos:line="39" pos:column="29">"socket"<pos:position pos:line="39" pos:column="37"/></literal></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="40" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="41" pos:column="17">else <if pos:line="41" pos:column="22">if <condition pos:line="41" pos:column="25">(<expr><call><name pos:line="41" pos:column="26">APR_BUCKET_IS_HEAP<pos:position pos:line="41" pos:column="44"/></name><argument_list pos:line="41" pos:column="44">(<argument><expr><name pos:line="41" pos:column="45">b<pos:position pos:line="41" pos:column="46"/></name></expr></argument>)<pos:position pos:line="41" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="48"/></condition><then pos:line="41" pos:column="48"> <block pos:line="41" pos:column="49">{
                    <expr_stmt><expr><name pos:line="42" pos:column="21">btype<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <literal type="string" pos:line="42" pos:column="29">"heap"<pos:position pos:line="42" pos:column="35"/></literal></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
                }<pos:position pos:line="43" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="44" pos:column="17">else <if pos:line="44" pos:column="22">if <condition pos:line="44" pos:column="25">(<expr><call><name pos:line="44" pos:column="26">APR_BUCKET_IS_TRANSIENT<pos:position pos:line="44" pos:column="49"/></name><argument_list pos:line="44" pos:column="49">(<argument><expr><name pos:line="44" pos:column="50">b<pos:position pos:line="44" pos:column="51"/></name></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="53"/></condition><then pos:line="44" pos:column="53"> <block pos:line="44" pos:column="54">{
                    <expr_stmt><expr><name pos:line="45" pos:column="21">btype<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <literal type="string" pos:line="45" pos:column="29">"transient"<pos:position pos:line="45" pos:column="40"/></literal></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="46" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="47" pos:column="17">else <if pos:line="47" pos:column="22">if <condition pos:line="47" pos:column="25">(<expr><call><name pos:line="47" pos:column="26">APR_BUCKET_IS_IMMORTAL<pos:position pos:line="47" pos:column="48"/></name><argument_list pos:line="47" pos:column="48">(<argument><expr><name pos:line="47" pos:column="49">b<pos:position pos:line="47" pos:column="50"/></name></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="52"/></condition><then pos:line="47" pos:column="52"> <block pos:line="47" pos:column="53">{
                    <expr_stmt><expr><name pos:line="48" pos:column="21">btype<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">=<pos:position pos:line="48" pos:column="28"/></operator> <literal type="string" pos:line="48" pos:column="29">"immortal"<pos:position pos:line="48" pos:column="39"/></literal></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="49" pos:column="18"/></block></then></if></elseif>
<cpp:if pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">if<pos:position pos:line="50" pos:column="4"/></cpp:directive> <expr><name pos:line="50" pos:column="5">APR_HAS_MMAP<pos:position pos:line="50" pos:column="17"/></name></expr></cpp:if>
                <elseif pos:line="51" pos:column="17">else <if pos:line="51" pos:column="22">if <condition pos:line="51" pos:column="25">(<expr><call><name pos:line="51" pos:column="26">APR_BUCKET_IS_MMAP<pos:position pos:line="51" pos:column="44"/></name><argument_list pos:line="51" pos:column="44">(<argument><expr><name pos:line="51" pos:column="45">b<pos:position pos:line="51" pos:column="46"/></name></expr></argument>)<pos:position pos:line="51" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="48"/></condition><then pos:line="51" pos:column="48"> <block pos:line="51" pos:column="49">{
                    <expr_stmt><expr><name pos:line="52" pos:column="21">btype<pos:position pos:line="52" pos:column="26"/></name> <operator pos:line="52" pos:column="27">=<pos:position pos:line="52" pos:column="28"/></operator> <literal type="string" pos:line="52" pos:column="29">"mmap"<pos:position pos:line="52" pos:column="35"/></literal></expr>;<pos:position pos:line="52" pos:column="36"/></expr_stmt>
                }<pos:position pos:line="53" pos:column="18"/></block></then></if></elseif>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>
                <elseif pos:line="55" pos:column="17">else <if pos:line="55" pos:column="22">if <condition pos:line="55" pos:column="25">(<expr><call><name pos:line="55" pos:column="26">APR_BUCKET_IS_POOL<pos:position pos:line="55" pos:column="44"/></name><argument_list pos:line="55" pos:column="44">(<argument><expr><name pos:line="55" pos:column="45">b<pos:position pos:line="55" pos:column="46"/></name></expr></argument>)<pos:position pos:line="55" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="48"/></condition><then pos:line="55" pos:column="48"> <block pos:line="55" pos:column="49">{
                    <expr_stmt><expr><name pos:line="56" pos:column="21">btype<pos:position pos:line="56" pos:column="26"/></name> <operator pos:line="56" pos:column="27">=<pos:position pos:line="56" pos:column="28"/></operator> <literal type="string" pos:line="56" pos:column="29">"pool"<pos:position pos:line="56" pos:column="35"/></literal></expr>;<pos:position pos:line="56" pos:column="36"/></expr_stmt>
                }<pos:position pos:line="57" pos:column="18"/></block></then></if></elseif></if>
                
                <expr_stmt><expr><name pos:line="59" pos:column="17">off<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">+=<pos:position pos:line="59" pos:column="23"/></operator> <call><name pos:line="59" pos:column="24">apr_snprintf<pos:position pos:line="59" pos:column="36"/></name><argument_list pos:line="59" pos:column="36">(<argument><expr><name pos:line="59" pos:column="37">buffer<pos:position pos:line="59" pos:column="43"/></name><operator pos:line="59" pos:column="43">+<pos:position pos:line="59" pos:column="44"/></operator><name pos:line="59" pos:column="44">off<pos:position pos:line="59" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="49">bmax<pos:position pos:line="59" pos:column="53"/></name><operator pos:line="59" pos:column="53">-<pos:position pos:line="59" pos:column="54"/></operator><name pos:line="59" pos:column="54">off<pos:position pos:line="59" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="59">"%s[%ld] "<pos:position pos:line="59" pos:column="69"/></literal></expr></argument>, 
                                    <argument><expr><name pos:line="60" pos:column="37">btype<pos:position pos:line="60" pos:column="42"/></name></expr></argument>, 
                                    <argument><expr><call pos:line="61" pos:column="37">(<name pos:line="61" pos:column="38">long<pos:position pos:line="61" pos:column="42"/></name>)<argument_list pos:line="61" pos:column="43">(<argument><expr><ternary><condition><expr><name><name pos:line="61" pos:column="44">b<pos:position pos:line="61" pos:column="45"/></name><operator pos:line="61" pos:column="45">-&gt;<pos:position pos:line="61" pos:column="50"/></operator><name pos:line="61" pos:column="47">length<pos:position pos:line="61" pos:column="53"/></name></name> <operator pos:line="61" pos:column="54">==<pos:position pos:line="61" pos:column="56"/></operator> <operator pos:line="61" pos:column="57">(<pos:position pos:line="61" pos:column="58"/></operator><operator pos:line="61" pos:column="58">(<pos:position pos:line="61" pos:column="59"/></operator><name pos:line="61" pos:column="59">apr_size_t<pos:position pos:line="61" pos:column="69"/></name><operator pos:line="61" pos:column="69">)<pos:position pos:line="61" pos:column="70"/></operator><operator pos:line="61" pos:column="70">-<pos:position pos:line="61" pos:column="71"/></operator><literal type="number" pos:line="61" pos:column="71">1<pos:position pos:line="61" pos:column="72"/></literal><operator pos:line="61" pos:column="72">)<pos:position pos:line="61" pos:column="73"/></operator></expr>?<pos:position pos:line="61" pos:column="74"/></condition><then pos:line="61" pos:column="74"> 
                                           <expr><operator pos:line="62" pos:column="44">-<pos:position pos:line="62" pos:column="45"/></operator><literal type="number" pos:line="62" pos:column="45">1<pos:position pos:line="62" pos:column="46"/></literal></expr> <pos:position pos:line="62" pos:column="47"/></then><else pos:line="62" pos:column="47">: <expr><name><name pos:line="62" pos:column="49">b<pos:position pos:line="62" pos:column="50"/></name><operator pos:line="62" pos:column="50">-&gt;<pos:position pos:line="62" pos:column="55"/></operator><name pos:line="62" pos:column="52">length<pos:position pos:line="62" pos:column="58"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="62" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="61"/></expr_stmt>
            }<pos:position pos:line="63" pos:column="14"/></block></else></if>
        }<pos:position pos:line="64" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="65" pos:column="9">line<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">=<pos:position pos:line="65" pos:column="15"/></operator> <ternary><condition><expr><operator pos:line="65" pos:column="16">*<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="17">buffer<pos:position pos:line="65" pos:column="23"/></name></expr>?<pos:position pos:line="65" pos:column="24"/></condition><then pos:line="65" pos:column="24"> <expr><name pos:line="65" pos:column="25">buffer<pos:position pos:line="65" pos:column="31"/></name></expr> <pos:position pos:line="65" pos:column="32"/></then><else pos:line="65" pos:column="32">: <expr><literal type="string" pos:line="65" pos:column="34">"(empty)"<pos:position pos:line="65" pos:column="43"/></literal></expr></else></ternary></expr>;<pos:position pos:line="65" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">ap_log_cerror<pos:position pos:line="67" pos:column="18"/></name><argument_list pos:line="67" pos:column="18">(<argument><expr><name pos:line="67" pos:column="19">APLOG_MARK<pos:position pos:line="67" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="31">level<pos:position pos:line="67" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="38">0<pos:position pos:line="67" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="41">c<pos:position pos:line="67" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="44">"bb_dump(%ld-%d)-%s: %s"<pos:position pos:line="67" pos:column="68"/></literal></expr></argument>, 
                  <argument><expr><name><name pos:line="68" pos:column="19">c<pos:position pos:line="68" pos:column="20"/></name><operator pos:line="68" pos:column="20">-&gt;<pos:position pos:line="68" pos:column="25"/></operator><name pos:line="68" pos:column="22">id<pos:position pos:line="68" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="26">stream_id<pos:position pos:line="68" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="37">tag<pos:position pos:line="68" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="42">line<pos:position pos:line="68" pos:column="46"/></name></expr></argument>)<pos:position pos:line="68" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="48"/></expr_stmt>

}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

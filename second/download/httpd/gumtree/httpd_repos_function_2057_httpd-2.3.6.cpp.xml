<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2057_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ap_parse_request_form<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">request_rec<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type> <name pos:line="1" pos:column="48">r<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">ap_filter_t<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type> <name pos:line="1" pos:column="65">f<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">apr_array_header_t<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier><modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type> <name pos:line="2" pos:column="56">ptr<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">apr_size_t<pos:position pos:line="3" pos:column="44"/></name></type> <name pos:line="3" pos:column="45">num<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="50">apr_size_t<pos:position pos:line="3" pos:column="60"/></name></type> <name pos:line="3" pos:column="61">size<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="66"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_bucket_brigade<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">bb<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">NULL<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">seen_eos<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><literal type="number" pos:line="6" pos:column="20">0<pos:position pos:line="6" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">buffer<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><name pos:line="7" pos:column="17">HUGE_STRING_LEN<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">+<pos:position pos:line="7" pos:column="34"/></operator> <literal type="number" pos:line="7" pos:column="35">1<pos:position pos:line="7" pos:column="36"/></literal></expr>]<pos:position pos:line="7" pos:column="37"/></index></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">ct<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">offset<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ap_form_type_t<pos:position pos:line="10" pos:column="19"/></name></type> <name pos:line="10" pos:column="20">state<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><name pos:line="10" pos:column="28">FORM_NAME<pos:position pos:line="10" pos:column="37"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="39">percent<pos:position pos:line="10" pos:column="46"/></name> <init pos:line="10" pos:column="47">= <expr><name pos:line="10" pos:column="49">FORM_NORMAL<pos:position pos:line="10" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="61"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">ap_form_pair_t<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">pair<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><name pos:line="11" pos:column="28">NULL<pos:position pos:line="11" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_array_header_t<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">pairs<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><call><name pos:line="12" pos:column="33">apr_array_make<pos:position pos:line="12" pos:column="47"/></name><argument_list pos:line="12" pos:column="47">(<argument><expr><name><name pos:line="12" pos:column="48">r<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">pool<pos:position pos:line="12" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="57">4<pos:position pos:line="12" pos:column="58"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="60">sizeof<argument_list pos:line="12" pos:column="66">(<argument><expr><name pos:line="12" pos:column="67">ap_form_pair_t<pos:position pos:line="12" pos:column="81"/></name></expr></argument>)<pos:position pos:line="12" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="84"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name></type> <name pos:line="14" pos:column="10">hi<pos:position pos:line="14" pos:column="12"/></name> <init pos:line="14" pos:column="13">= <expr><literal type="number" pos:line="14" pos:column="15">0<pos:position pos:line="14" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">low<pos:position pos:line="15" pos:column="13"/></name> <init pos:line="15" pos:column="14">= <expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="17" pos:column="5">*<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">ptr<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <name pos:line="17" pos:column="12">pairs<pos:position pos:line="17" pos:column="17"/></name></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* sanity check - we only support forms for now */</comment>
    <expr_stmt><expr><name pos:line="20" pos:column="5">ct<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <call><name pos:line="20" pos:column="10">apr_table_get<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name><name pos:line="20" pos:column="24">r<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">headers_in<pos:position pos:line="20" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="39">"Content-Type"<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">ct<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">||<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">strcmp<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><literal type="string" pos:line="21" pos:column="23">"application/x-www-form-urlencoded"<pos:position pos:line="21" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="60">ct<pos:position pos:line="21" pos:column="62"/></name></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="64"/></condition><then pos:line="21" pos:column="64"> <block pos:line="21" pos:column="65">{
        <return pos:line="22" pos:column="9">return <expr><call><name pos:line="22" pos:column="16">ap_discard_request_body<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><name pos:line="22" pos:column="40">r<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">f<pos:position pos:line="25" pos:column="11"/></name></expr>)<pos:position pos:line="25" pos:column="12"/></condition><then pos:line="25" pos:column="12"> <block pos:line="25" pos:column="13">{
        <expr_stmt><expr><name pos:line="26" pos:column="9">f<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <name><name pos:line="26" pos:column="13">r<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">input_filters<pos:position pos:line="26" pos:column="29"/></name></name></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">bb<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <call><name pos:line="29" pos:column="10">apr_brigade_create<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name><name pos:line="29" pos:column="29">r<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">pool<pos:position pos:line="29" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="38">r<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">connection<pos:position pos:line="29" pos:column="51"/></name><operator pos:line="29" pos:column="51">-&gt;<pos:position pos:line="29" pos:column="56"/></operator><name pos:line="29" pos:column="53">bucket_alloc<pos:position pos:line="29" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="67"/></expr_stmt>
    <do pos:line="30" pos:column="5">do <block pos:line="30" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">apr_bucket<pos:position pos:line="31" pos:column="19"/></name> <modifier pos:line="31" pos:column="20">*<pos:position pos:line="31" pos:column="21"/></modifier></type><name pos:line="31" pos:column="21">bucket<pos:position pos:line="31" pos:column="27"/></name> <init pos:line="31" pos:column="28">= <expr><name pos:line="31" pos:column="30">NULL<pos:position pos:line="31" pos:column="34"/></name></expr></init></decl>, <modifier pos:line="31" pos:column="36">*<pos:position pos:line="31" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="31" pos:column="37">last<pos:position pos:line="31" pos:column="41"/></name> <init pos:line="31" pos:column="42">= <expr><name pos:line="31" pos:column="44">NULL<pos:position pos:line="31" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="49"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="33" pos:column="9">int<pos:position pos:line="33" pos:column="12"/></name></type> <name pos:line="33" pos:column="13">rv<pos:position pos:line="33" pos:column="15"/></name> <init pos:line="33" pos:column="16">= <expr><call><name pos:line="33" pos:column="18">ap_get_brigade<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">f<pos:position pos:line="33" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="36">bb<pos:position pos:line="33" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="40">AP_MODE_READBYTES<pos:position pos:line="33" pos:column="57"/></name></expr></argument>,
                                <argument><expr><name pos:line="34" pos:column="33">APR_BLOCK_READ<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">HUGE_STRING_LEN<pos:position pos:line="34" pos:column="64"/></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="66"/></decl_stmt>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">rv<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">!=<pos:position pos:line="35" pos:column="18"/></operator> <name pos:line="35" pos:column="19">APR_SUCCESS<pos:position pos:line="35" pos:column="30"/></name></expr>)<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31"> <block pos:line="35" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">apr_brigade_destroy<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">bb<pos:position pos:line="36" pos:column="35"/></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
            <return pos:line="37" pos:column="13">return <expr><ternary><condition><expr><operator pos:line="37" pos:column="20">(<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="21">rv<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">==<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="27">AP_FILTER_ERROR<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">)<pos:position pos:line="37" pos:column="43"/></operator></expr> ?<pos:position pos:line="37" pos:column="45"/></condition><then pos:line="37" pos:column="45"> <expr><name pos:line="37" pos:column="46">rv<pos:position pos:line="37" pos:column="48"/></name></expr> <pos:position pos:line="37" pos:column="49"/></then><else pos:line="37" pos:column="49">: <expr><name pos:line="37" pos:column="51">HTTP_BAD_REQUEST<pos:position pos:line="37" pos:column="67"/></name></expr></else></ternary></expr>;<pos:position pos:line="37" pos:column="68"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>

        <for pos:line="40" pos:column="9">for <control pos:line="40" pos:column="13">(<init><expr><name pos:line="40" pos:column="14">bucket<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <call><name pos:line="40" pos:column="23">APR_BRIGADE_FIRST<pos:position pos:line="40" pos:column="40"/></name><argument_list pos:line="40" pos:column="40">(<argument><expr><name pos:line="40" pos:column="41">bb<pos:position pos:line="40" pos:column="43"/></name></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="45"/></init>
             <condition><expr><name pos:line="41" pos:column="14">bucket<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">!=<pos:position pos:line="41" pos:column="23"/></operator> <call><name pos:line="41" pos:column="24">APR_BRIGADE_SENTINEL<pos:position pos:line="41" pos:column="44"/></name><argument_list pos:line="41" pos:column="44">(<argument><expr><name pos:line="41" pos:column="45">bb<pos:position pos:line="41" pos:column="47"/></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="49"/></condition>
             <incr><expr><name pos:line="42" pos:column="14">last<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">=<pos:position pos:line="42" pos:column="20"/></operator> <name pos:line="42" pos:column="21">bucket<pos:position pos:line="42" pos:column="27"/></name></expr><operator pos:line="42" pos:column="27">,<pos:position pos:line="42" pos:column="28"/></operator> <expr><name pos:line="42" pos:column="29">bucket<pos:position pos:line="42" pos:column="35"/></name> <operator pos:line="42" pos:column="36">=<pos:position pos:line="42" pos:column="37"/></operator> <call><name pos:line="42" pos:column="38">APR_BUCKET_NEXT<pos:position pos:line="42" pos:column="53"/></name><argument_list pos:line="42" pos:column="53">(<argument><expr><name pos:line="42" pos:column="54">bucket<pos:position pos:line="42" pos:column="60"/></name></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr></incr>)<pos:position pos:line="42" pos:column="62"/></control> <block pos:line="42" pos:column="63">{
            <decl_stmt><decl><type><specifier pos:line="43" pos:column="13">const<pos:position pos:line="43" pos:column="18"/></specifier> <name pos:line="43" pos:column="19">char<pos:position pos:line="43" pos:column="23"/></name> <modifier pos:line="43" pos:column="24">*<pos:position pos:line="43" pos:column="25"/></modifier></type><name pos:line="43" pos:column="25">data<pos:position pos:line="43" pos:column="29"/></name></decl>;<pos:position pos:line="43" pos:column="30"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="44" pos:column="13">apr_size_t<pos:position pos:line="44" pos:column="23"/></name></type> <name pos:line="44" pos:column="24">len<pos:position pos:line="44" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="44" pos:column="29">slide<pos:position pos:line="44" pos:column="34"/></name></decl>;<pos:position pos:line="44" pos:column="35"/></decl_stmt>

            <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><name pos:line="46" pos:column="17">last<pos:position pos:line="46" pos:column="21"/></name></expr>)<pos:position pos:line="46" pos:column="22"/></condition><then pos:line="46" pos:column="22"> <block pos:line="46" pos:column="23">{
                <expr_stmt><expr><call><name pos:line="47" pos:column="17">apr_bucket_delete<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name pos:line="47" pos:column="35">last<pos:position pos:line="47" pos:column="39"/></name></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block></then></if>
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><call><name pos:line="49" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><name pos:line="49" pos:column="35">bucket<pos:position pos:line="49" pos:column="41"/></name></expr></argument>)<pos:position pos:line="49" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="43"/></condition><then pos:line="49" pos:column="43"> <block pos:line="49" pos:column="44">{
                <expr_stmt><expr><name pos:line="50" pos:column="17">seen_eos<pos:position pos:line="50" pos:column="25"/></name> <operator pos:line="50" pos:column="26">=<pos:position pos:line="50" pos:column="27"/></operator> <literal type="number" pos:line="50" pos:column="28">1<pos:position pos:line="50" pos:column="29"/></literal></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt>
                <break pos:line="51" pos:column="17">break;<pos:position pos:line="51" pos:column="23"/></break>
            }<pos:position pos:line="52" pos:column="14"/></block></then></if>
            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><name><name pos:line="53" pos:column="17">bucket<pos:position pos:line="53" pos:column="23"/></name><operator pos:line="53" pos:column="23">-&gt;<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="25">length<pos:position pos:line="53" pos:column="31"/></name></name> <operator pos:line="53" pos:column="32">==<pos:position pos:line="53" pos:column="34"/></operator> <literal type="number" pos:line="53" pos:column="35">0<pos:position pos:line="53" pos:column="36"/></literal></expr>)<pos:position pos:line="53" pos:column="37"/></condition><then pos:line="53" pos:column="37"> <block pos:line="53" pos:column="38">{
                <continue pos:line="54" pos:column="17">continue;<pos:position pos:line="54" pos:column="26"/></continue>
            }<pos:position pos:line="55" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="57" pos:column="13">rv<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <call><name pos:line="57" pos:column="18">apr_bucket_read<pos:position pos:line="57" pos:column="33"/></name><argument_list pos:line="57" pos:column="33">(<argument><expr><name pos:line="57" pos:column="34">bucket<pos:position pos:line="57" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="42">&amp;<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="43">data<pos:position pos:line="57" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="49">&amp;<pos:position pos:line="57" pos:column="54"/></operator><name pos:line="57" pos:column="50">len<pos:position pos:line="57" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="55">APR_BLOCK_READ<pos:position pos:line="57" pos:column="69"/></name></expr></argument>)<pos:position pos:line="57" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="71"/></expr_stmt>
            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><name pos:line="58" pos:column="17">rv<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">!=<pos:position pos:line="58" pos:column="22"/></operator> <name pos:line="58" pos:column="23">APR_SUCCESS<pos:position pos:line="58" pos:column="34"/></name></expr>)<pos:position pos:line="58" pos:column="35"/></condition><then pos:line="58" pos:column="35"> <block pos:line="58" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="59" pos:column="17">apr_brigade_destroy<pos:position pos:line="59" pos:column="36"/></name><argument_list pos:line="59" pos:column="36">(<argument><expr><name pos:line="59" pos:column="37">bb<pos:position pos:line="59" pos:column="39"/></name></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>
                <return pos:line="60" pos:column="17">return <expr><name pos:line="60" pos:column="24">HTTP_BAD_REQUEST<pos:position pos:line="60" pos:column="40"/></name></expr>;<pos:position pos:line="60" pos:column="41"/></return>
            }<pos:position pos:line="61" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="63" pos:column="13">slide<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">=<pos:position pos:line="63" pos:column="20"/></operator> <name pos:line="63" pos:column="21">len<pos:position pos:line="63" pos:column="24"/></name></expr>;<pos:position pos:line="63" pos:column="25"/></expr_stmt>
            <while pos:line="64" pos:column="13">while <condition pos:line="64" pos:column="19">(<expr><name pos:line="64" pos:column="20">state<pos:position pos:line="64" pos:column="25"/></name> <operator pos:line="64" pos:column="26">!=<pos:position pos:line="64" pos:column="28"/></operator> <name pos:line="64" pos:column="29">FORM_ABORT<pos:position pos:line="64" pos:column="39"/></name> <operator pos:line="64" pos:column="40">&amp;&amp;<pos:position pos:line="64" pos:column="50"/></operator> <name pos:line="64" pos:column="43">slide<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">--<pos:position pos:line="64" pos:column="50"/></operator> <operator pos:line="64" pos:column="51">&gt;<pos:position pos:line="64" pos:column="55"/></operator> <literal type="number" pos:line="64" pos:column="53">0<pos:position pos:line="64" pos:column="54"/></literal> <operator pos:line="64" pos:column="55">&amp;&amp;<pos:position pos:line="64" pos:column="65"/></operator> <name pos:line="64" pos:column="58">size<pos:position pos:line="64" pos:column="62"/></name> <operator pos:line="64" pos:column="63">&gt;=<pos:position pos:line="64" pos:column="68"/></operator> <literal type="number" pos:line="64" pos:column="66">0<pos:position pos:line="64" pos:column="67"/></literal> <operator pos:line="64" pos:column="68">&amp;&amp;<pos:position pos:line="64" pos:column="78"/></operator> <name pos:line="64" pos:column="71">num<pos:position pos:line="64" pos:column="74"/></name> <operator pos:line="64" pos:column="75">!=<pos:position pos:line="64" pos:column="77"/></operator> <literal type="number" pos:line="64" pos:column="78">0<pos:position pos:line="64" pos:column="79"/></literal></expr>)<pos:position pos:line="64" pos:column="80"/></condition> <block pos:line="64" pos:column="81">{
                <decl_stmt><decl><type><name pos:line="65" pos:column="17">char<pos:position pos:line="65" pos:column="21"/></name></type> <name pos:line="65" pos:column="22">c<pos:position pos:line="65" pos:column="23"/></name> <init pos:line="65" pos:column="24">= <expr><operator pos:line="65" pos:column="26">*<pos:position pos:line="65" pos:column="27"/></operator><name pos:line="65" pos:column="27">data<pos:position pos:line="65" pos:column="31"/></name><operator pos:line="65" pos:column="31">++<pos:position pos:line="65" pos:column="33"/></operator></expr></init></decl>;<pos:position pos:line="65" pos:column="34"/></decl_stmt>
                <if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><literal type="char" pos:line="66" pos:column="21">'+'<pos:position pos:line="66" pos:column="24"/></literal> <operator pos:line="66" pos:column="25">==<pos:position pos:line="66" pos:column="27"/></operator> <name pos:line="66" pos:column="28">c<pos:position pos:line="66" pos:column="29"/></name></expr>)<pos:position pos:line="66" pos:column="30"/></condition><then pos:line="66" pos:column="30"> <block pos:line="66" pos:column="31">{
                    <expr_stmt><expr><name pos:line="67" pos:column="21">c<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <literal type="char" pos:line="67" pos:column="25">' '<pos:position pos:line="67" pos:column="28"/></literal></expr>;<pos:position pos:line="67" pos:column="29"/></expr_stmt>
                }<pos:position pos:line="68" pos:column="18"/></block></then>
                <elseif pos:line="69" pos:column="17">else <if pos:line="69" pos:column="22">if <condition pos:line="69" pos:column="25">(<expr><literal type="char" pos:line="69" pos:column="26">'&amp;'<pos:position pos:line="69" pos:column="33"/></literal> <operator pos:line="69" pos:column="30">==<pos:position pos:line="69" pos:column="32"/></operator> <name pos:line="69" pos:column="33">c<pos:position pos:line="69" pos:column="34"/></name></expr>)<pos:position pos:line="69" pos:column="35"/></condition><then pos:line="69" pos:column="35"> <block pos:line="69" pos:column="36">{
                    <expr_stmt><expr><name pos:line="70" pos:column="21">state<pos:position pos:line="70" pos:column="26"/></name> <operator pos:line="70" pos:column="27">=<pos:position pos:line="70" pos:column="28"/></operator> <name pos:line="70" pos:column="29">FORM_AMP<pos:position pos:line="70" pos:column="37"/></name></expr>;<pos:position pos:line="70" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="71" pos:column="18"/></block></then></if></elseif></if>
                <if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><literal type="char" pos:line="72" pos:column="21">'%'<pos:position pos:line="72" pos:column="24"/></literal> <operator pos:line="72" pos:column="25">==<pos:position pos:line="72" pos:column="27"/></operator> <name pos:line="72" pos:column="28">c<pos:position pos:line="72" pos:column="29"/></name></expr>)<pos:position pos:line="72" pos:column="30"/></condition><then pos:line="72" pos:column="30"> <block pos:line="72" pos:column="31">{
                    <expr_stmt><expr><name pos:line="73" pos:column="21">percent<pos:position pos:line="73" pos:column="28"/></name> <operator pos:line="73" pos:column="29">=<pos:position pos:line="73" pos:column="30"/></operator> <name pos:line="73" pos:column="31">FORM_PERCENTA<pos:position pos:line="73" pos:column="44"/></name></expr>;<pos:position pos:line="73" pos:column="45"/></expr_stmt>
                    <continue pos:line="74" pos:column="21">continue;<pos:position pos:line="74" pos:column="30"/></continue>
                }<pos:position pos:line="75" pos:column="18"/></block></then></if>
                <if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name pos:line="76" pos:column="21">FORM_PERCENTA<pos:position pos:line="76" pos:column="34"/></name> <operator pos:line="76" pos:column="35">==<pos:position pos:line="76" pos:column="37"/></operator> <name pos:line="76" pos:column="38">percent<pos:position pos:line="76" pos:column="45"/></name></expr>)<pos:position pos:line="76" pos:column="46"/></condition><then pos:line="76" pos:column="46"> <block pos:line="76" pos:column="47">{
                    <if pos:line="77" pos:column="21">if <condition pos:line="77" pos:column="24">(<expr><name pos:line="77" pos:column="25">c<pos:position pos:line="77" pos:column="26"/></name> <operator pos:line="77" pos:column="27">&gt;=<pos:position pos:line="77" pos:column="32"/></operator> <literal type="char" pos:line="77" pos:column="30">'a'<pos:position pos:line="77" pos:column="33"/></literal></expr>)<pos:position pos:line="77" pos:column="34"/></condition><then pos:line="77" pos:column="34"> <block pos:line="77" pos:column="35">{
                        <expr_stmt><expr><name pos:line="78" pos:column="25">hi<pos:position pos:line="78" pos:column="27"/></name> <operator pos:line="78" pos:column="28">=<pos:position pos:line="78" pos:column="29"/></operator> <name pos:line="78" pos:column="30">c<pos:position pos:line="78" pos:column="31"/></name> <operator pos:line="78" pos:column="32">-<pos:position pos:line="78" pos:column="33"/></operator> <literal type="char" pos:line="78" pos:column="34">'a'<pos:position pos:line="78" pos:column="37"/></literal> <operator pos:line="78" pos:column="38">+<pos:position pos:line="78" pos:column="39"/></operator> <literal type="number" pos:line="78" pos:column="40">10<pos:position pos:line="78" pos:column="42"/></literal></expr>;<pos:position pos:line="78" pos:column="43"/></expr_stmt>
                    }<pos:position pos:line="79" pos:column="22"/></block></then>
                    <elseif pos:line="80" pos:column="21">else <if pos:line="80" pos:column="26">if <condition pos:line="80" pos:column="29">(<expr><name pos:line="80" pos:column="30">c<pos:position pos:line="80" pos:column="31"/></name> <operator pos:line="80" pos:column="32">&gt;=<pos:position pos:line="80" pos:column="37"/></operator> <literal type="char" pos:line="80" pos:column="35">'A'<pos:position pos:line="80" pos:column="38"/></literal></expr>)<pos:position pos:line="80" pos:column="39"/></condition><then pos:line="80" pos:column="39"> <block pos:line="80" pos:column="40">{
                        <expr_stmt><expr><name pos:line="81" pos:column="25">hi<pos:position pos:line="81" pos:column="27"/></name> <operator pos:line="81" pos:column="28">=<pos:position pos:line="81" pos:column="29"/></operator> <name pos:line="81" pos:column="30">c<pos:position pos:line="81" pos:column="31"/></name> <operator pos:line="81" pos:column="32">-<pos:position pos:line="81" pos:column="33"/></operator> <literal type="char" pos:line="81" pos:column="34">'A'<pos:position pos:line="81" pos:column="37"/></literal> <operator pos:line="81" pos:column="38">+<pos:position pos:line="81" pos:column="39"/></operator> <literal type="number" pos:line="81" pos:column="40">10<pos:position pos:line="81" pos:column="42"/></literal></expr>;<pos:position pos:line="81" pos:column="43"/></expr_stmt>
                    }<pos:position pos:line="82" pos:column="22"/></block></then></if></elseif>
                    <elseif pos:line="83" pos:column="21">else <if pos:line="83" pos:column="26">if <condition pos:line="83" pos:column="29">(<expr><name pos:line="83" pos:column="30">c<pos:position pos:line="83" pos:column="31"/></name> <operator pos:line="83" pos:column="32">&gt;=<pos:position pos:line="83" pos:column="37"/></operator> <literal type="char" pos:line="83" pos:column="35">'0'<pos:position pos:line="83" pos:column="38"/></literal></expr>)<pos:position pos:line="83" pos:column="39"/></condition><then pos:line="83" pos:column="39"> <block pos:line="83" pos:column="40">{
                        <expr_stmt><expr><name pos:line="84" pos:column="25">hi<pos:position pos:line="84" pos:column="27"/></name> <operator pos:line="84" pos:column="28">=<pos:position pos:line="84" pos:column="29"/></operator> <name pos:line="84" pos:column="30">c<pos:position pos:line="84" pos:column="31"/></name> <operator pos:line="84" pos:column="32">-<pos:position pos:line="84" pos:column="33"/></operator> <literal type="char" pos:line="84" pos:column="34">'0'<pos:position pos:line="84" pos:column="37"/></literal></expr>;<pos:position pos:line="84" pos:column="38"/></expr_stmt>
                    }<pos:position pos:line="85" pos:column="22"/></block></then></if></elseif></if>
                    <expr_stmt><expr><name pos:line="86" pos:column="21">hi<pos:position pos:line="86" pos:column="23"/></name> <operator pos:line="86" pos:column="24">=<pos:position pos:line="86" pos:column="25"/></operator> <name pos:line="86" pos:column="26">hi<pos:position pos:line="86" pos:column="28"/></name> <operator pos:line="86" pos:column="29">&lt;&lt;<pos:position pos:line="86" pos:column="37"/></operator> <literal type="number" pos:line="86" pos:column="32">4<pos:position pos:line="86" pos:column="33"/></literal></expr>;<pos:position pos:line="86" pos:column="34"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="87" pos:column="21">percent<pos:position pos:line="87" pos:column="28"/></name> <operator pos:line="87" pos:column="29">=<pos:position pos:line="87" pos:column="30"/></operator> <name pos:line="87" pos:column="31">FORM_PERCENTB<pos:position pos:line="87" pos:column="44"/></name></expr>;<pos:position pos:line="87" pos:column="45"/></expr_stmt>
                    <continue pos:line="88" pos:column="21">continue;<pos:position pos:line="88" pos:column="30"/></continue>
                }<pos:position pos:line="89" pos:column="18"/></block></then></if>
                <if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><name pos:line="90" pos:column="21">FORM_PERCENTB<pos:position pos:line="90" pos:column="34"/></name> <operator pos:line="90" pos:column="35">==<pos:position pos:line="90" pos:column="37"/></operator> <name pos:line="90" pos:column="38">percent<pos:position pos:line="90" pos:column="45"/></name></expr>)<pos:position pos:line="90" pos:column="46"/></condition><then pos:line="90" pos:column="46"> <block pos:line="90" pos:column="47">{
                    <if pos:line="91" pos:column="21">if <condition pos:line="91" pos:column="24">(<expr><name pos:line="91" pos:column="25">c<pos:position pos:line="91" pos:column="26"/></name> <operator pos:line="91" pos:column="27">&gt;=<pos:position pos:line="91" pos:column="32"/></operator> <literal type="char" pos:line="91" pos:column="30">'a'<pos:position pos:line="91" pos:column="33"/></literal></expr>)<pos:position pos:line="91" pos:column="34"/></condition><then pos:line="91" pos:column="34"> <block pos:line="91" pos:column="35">{
                        <expr_stmt><expr><name pos:line="92" pos:column="25">low<pos:position pos:line="92" pos:column="28"/></name> <operator pos:line="92" pos:column="29">=<pos:position pos:line="92" pos:column="30"/></operator> <name pos:line="92" pos:column="31">c<pos:position pos:line="92" pos:column="32"/></name> <operator pos:line="92" pos:column="33">-<pos:position pos:line="92" pos:column="34"/></operator> <literal type="char" pos:line="92" pos:column="35">'a'<pos:position pos:line="92" pos:column="38"/></literal> <operator pos:line="92" pos:column="39">+<pos:position pos:line="92" pos:column="40"/></operator> <literal type="number" pos:line="92" pos:column="41">10<pos:position pos:line="92" pos:column="43"/></literal></expr>;<pos:position pos:line="92" pos:column="44"/></expr_stmt>
                    }<pos:position pos:line="93" pos:column="22"/></block></then>
                    <elseif pos:line="94" pos:column="21">else <if pos:line="94" pos:column="26">if <condition pos:line="94" pos:column="29">(<expr><name pos:line="94" pos:column="30">c<pos:position pos:line="94" pos:column="31"/></name> <operator pos:line="94" pos:column="32">&gt;=<pos:position pos:line="94" pos:column="37"/></operator> <literal type="char" pos:line="94" pos:column="35">'A'<pos:position pos:line="94" pos:column="38"/></literal></expr>)<pos:position pos:line="94" pos:column="39"/></condition><then pos:line="94" pos:column="39"> <block pos:line="94" pos:column="40">{
                        <expr_stmt><expr><name pos:line="95" pos:column="25">low<pos:position pos:line="95" pos:column="28"/></name> <operator pos:line="95" pos:column="29">=<pos:position pos:line="95" pos:column="30"/></operator> <name pos:line="95" pos:column="31">c<pos:position pos:line="95" pos:column="32"/></name> <operator pos:line="95" pos:column="33">-<pos:position pos:line="95" pos:column="34"/></operator> <literal type="char" pos:line="95" pos:column="35">'A'<pos:position pos:line="95" pos:column="38"/></literal> <operator pos:line="95" pos:column="39">+<pos:position pos:line="95" pos:column="40"/></operator> <literal type="number" pos:line="95" pos:column="41">10<pos:position pos:line="95" pos:column="43"/></literal></expr>;<pos:position pos:line="95" pos:column="44"/></expr_stmt>
                    }<pos:position pos:line="96" pos:column="22"/></block></then></if></elseif>
                    <elseif pos:line="97" pos:column="21">else <if pos:line="97" pos:column="26">if <condition pos:line="97" pos:column="29">(<expr><name pos:line="97" pos:column="30">c<pos:position pos:line="97" pos:column="31"/></name> <operator pos:line="97" pos:column="32">&gt;=<pos:position pos:line="97" pos:column="37"/></operator> <literal type="char" pos:line="97" pos:column="35">'0'<pos:position pos:line="97" pos:column="38"/></literal></expr>)<pos:position pos:line="97" pos:column="39"/></condition><then pos:line="97" pos:column="39"> <block pos:line="97" pos:column="40">{
                        <expr_stmt><expr><name pos:line="98" pos:column="25">low<pos:position pos:line="98" pos:column="28"/></name> <operator pos:line="98" pos:column="29">=<pos:position pos:line="98" pos:column="30"/></operator> <name pos:line="98" pos:column="31">c<pos:position pos:line="98" pos:column="32"/></name> <operator pos:line="98" pos:column="33">-<pos:position pos:line="98" pos:column="34"/></operator> <literal type="char" pos:line="98" pos:column="35">'0'<pos:position pos:line="98" pos:column="38"/></literal></expr>;<pos:position pos:line="98" pos:column="39"/></expr_stmt>
                    }<pos:position pos:line="99" pos:column="22"/></block></then></if></elseif></if>
                    <expr_stmt><expr><name pos:line="100" pos:column="21">c<pos:position pos:line="100" pos:column="22"/></name> <operator pos:line="100" pos:column="23">=<pos:position pos:line="100" pos:column="24"/></operator> <name pos:line="100" pos:column="25">low<pos:position pos:line="100" pos:column="28"/></name> <operator pos:line="100" pos:column="29">|<pos:position pos:line="100" pos:column="30"/></operator> <name pos:line="100" pos:column="31">hi<pos:position pos:line="100" pos:column="33"/></name></expr>;<pos:position pos:line="100" pos:column="34"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="101" pos:column="21">percent<pos:position pos:line="101" pos:column="28"/></name> <operator pos:line="101" pos:column="29">=<pos:position pos:line="101" pos:column="30"/></operator> <name pos:line="101" pos:column="31">FORM_NORMAL<pos:position pos:line="101" pos:column="42"/></name></expr>;<pos:position pos:line="101" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="102" pos:column="18"/></block></then></if>
                <switch pos:line="103" pos:column="17">switch <condition pos:line="103" pos:column="24">(<expr><name pos:line="103" pos:column="25">state<pos:position pos:line="103" pos:column="30"/></name></expr>)<pos:position pos:line="103" pos:column="31"/></condition> <block pos:line="103" pos:column="32">{
                <case pos:line="104" pos:column="17">case <expr><name pos:line="104" pos:column="22">FORM_AMP<pos:position pos:line="104" pos:column="30"/></name></expr>:<pos:position pos:line="104" pos:column="31"/></case>
                    <if pos:line="105" pos:column="21">if <condition pos:line="105" pos:column="24">(<expr><name pos:line="105" pos:column="25">pair<pos:position pos:line="105" pos:column="29"/></name></expr>)<pos:position pos:line="105" pos:column="30"/></condition><then pos:line="105" pos:column="30"> <block pos:line="105" pos:column="31">{
                        <decl_stmt><decl><type><specifier pos:line="106" pos:column="25">const<pos:position pos:line="106" pos:column="30"/></specifier> <name pos:line="106" pos:column="31">char<pos:position pos:line="106" pos:column="35"/></name> <modifier pos:line="106" pos:column="36">*<pos:position pos:line="106" pos:column="37"/></modifier></type><name pos:line="106" pos:column="37">tmp<pos:position pos:line="106" pos:column="40"/></name> <init pos:line="106" pos:column="41">= <expr><call><name pos:line="106" pos:column="43">apr_pmemdup<pos:position pos:line="106" pos:column="54"/></name><argument_list pos:line="106" pos:column="54">(<argument><expr><name><name pos:line="106" pos:column="55">r<pos:position pos:line="106" pos:column="56"/></name><operator pos:line="106" pos:column="56">-&gt;<pos:position pos:line="106" pos:column="61"/></operator><name pos:line="106" pos:column="58">pool<pos:position pos:line="106" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="64">buffer<pos:position pos:line="106" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="72">offset<pos:position pos:line="106" pos:column="78"/></name></expr></argument>)<pos:position pos:line="106" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="106" pos:column="80"/></decl_stmt>
                        <decl_stmt><decl><type><name pos:line="107" pos:column="25">apr_bucket<pos:position pos:line="107" pos:column="35"/></name> <modifier pos:line="107" pos:column="36">*<pos:position pos:line="107" pos:column="37"/></modifier></type><name pos:line="107" pos:column="37">b<pos:position pos:line="107" pos:column="38"/></name> <init pos:line="107" pos:column="39">= <expr><call><name pos:line="107" pos:column="41">apr_bucket_pool_create<pos:position pos:line="107" pos:column="63"/></name><argument_list pos:line="107" pos:column="63">(<argument><expr><name pos:line="107" pos:column="64">tmp<pos:position pos:line="107" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="69">offset<pos:position pos:line="107" pos:column="75"/></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="77">r<pos:position pos:line="107" pos:column="78"/></name><operator pos:line="107" pos:column="78">-&gt;<pos:position pos:line="107" pos:column="83"/></operator><name pos:line="107" pos:column="80">pool<pos:position pos:line="107" pos:column="84"/></name></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="86">r<pos:position pos:line="107" pos:column="87"/></name><operator pos:line="107" pos:column="87">-&gt;<pos:position pos:line="107" pos:column="92"/></operator><name pos:line="107" pos:column="89">connection<pos:position pos:line="107" pos:column="99"/></name><operator pos:line="107" pos:column="99">-&gt;<pos:position pos:line="107" pos:column="104"/></operator><name pos:line="107" pos:column="101">bucket_alloc<pos:position pos:line="107" pos:column="113"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="114"/></argument_list></call></expr></init></decl>;<pos:position pos:line="107" pos:column="115"/></decl_stmt>
                        <expr_stmt><expr><call><name pos:line="108" pos:column="25">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="108" pos:column="48"/></name><argument_list pos:line="108" pos:column="48">(<argument><expr><name><name pos:line="108" pos:column="49">pair<pos:position pos:line="108" pos:column="53"/></name><operator pos:line="108" pos:column="53">-&gt;<pos:position pos:line="108" pos:column="58"/></operator><name pos:line="108" pos:column="55">value<pos:position pos:line="108" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="62">b<pos:position pos:line="108" pos:column="63"/></name></expr></argument>)<pos:position pos:line="108" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="65"/></expr_stmt>
                    }<pos:position pos:line="109" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name pos:line="110" pos:column="21">state<pos:position pos:line="110" pos:column="26"/></name> <operator pos:line="110" pos:column="27">=<pos:position pos:line="110" pos:column="28"/></operator> <name pos:line="110" pos:column="29">FORM_NAME<pos:position pos:line="110" pos:column="38"/></name></expr>;<pos:position pos:line="110" pos:column="39"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="111" pos:column="21">pair<pos:position pos:line="111" pos:column="25"/></name> <operator pos:line="111" pos:column="26">=<pos:position pos:line="111" pos:column="27"/></operator> <name pos:line="111" pos:column="28">NULL<pos:position pos:line="111" pos:column="32"/></name></expr>;<pos:position pos:line="111" pos:column="33"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="112" pos:column="21">offset<pos:position pos:line="112" pos:column="27"/></name> <operator pos:line="112" pos:column="28">=<pos:position pos:line="112" pos:column="29"/></operator> <literal type="number" pos:line="112" pos:column="30">0<pos:position pos:line="112" pos:column="31"/></literal></expr>;<pos:position pos:line="112" pos:column="32"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="113" pos:column="21">num<pos:position pos:line="113" pos:column="24"/></name><operator pos:line="113" pos:column="24">--<pos:position pos:line="113" pos:column="26"/></operator></expr>;<pos:position pos:line="113" pos:column="27"/></expr_stmt>
                    <break pos:line="114" pos:column="21">break;<pos:position pos:line="114" pos:column="27"/></break>
                <case pos:line="115" pos:column="17">case <expr><name pos:line="115" pos:column="22">FORM_NAME<pos:position pos:line="115" pos:column="31"/></name></expr>:<pos:position pos:line="115" pos:column="32"/></case>
                    <if pos:line="116" pos:column="21">if <condition pos:line="116" pos:column="24">(<expr><name pos:line="116" pos:column="25">offset<pos:position pos:line="116" pos:column="31"/></name> <operator pos:line="116" pos:column="32">&lt;<pos:position pos:line="116" pos:column="36"/></operator> <name pos:line="116" pos:column="34">HUGE_STRING_LEN<pos:position pos:line="116" pos:column="49"/></name></expr>)<pos:position pos:line="116" pos:column="50"/></condition><then pos:line="116" pos:column="50"> <block pos:line="116" pos:column="51">{
                        <if pos:line="117" pos:column="25">if <condition pos:line="117" pos:column="28">(<expr><literal type="char" pos:line="117" pos:column="29">'='<pos:position pos:line="117" pos:column="32"/></literal> <operator pos:line="117" pos:column="33">==<pos:position pos:line="117" pos:column="35"/></operator> <name pos:line="117" pos:column="36">c<pos:position pos:line="117" pos:column="37"/></name></expr>)<pos:position pos:line="117" pos:column="38"/></condition><then pos:line="117" pos:column="38"> <block pos:line="117" pos:column="39">{
                            <expr_stmt><expr><name><name pos:line="118" pos:column="29">buffer<pos:position pos:line="118" pos:column="35"/></name><index pos:line="118" pos:column="35">[<expr><name pos:line="118" pos:column="36">offset<pos:position pos:line="118" pos:column="42"/></name></expr>]<pos:position pos:line="118" pos:column="43"/></index></name> <operator pos:line="118" pos:column="44">=<pos:position pos:line="118" pos:column="45"/></operator> <literal type="number" pos:line="118" pos:column="46">0<pos:position pos:line="118" pos:column="47"/></literal></expr>;<pos:position pos:line="118" pos:column="48"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="119" pos:column="29">offset<pos:position pos:line="119" pos:column="35"/></name> <operator pos:line="119" pos:column="36">=<pos:position pos:line="119" pos:column="37"/></operator> <literal type="number" pos:line="119" pos:column="38">0<pos:position pos:line="119" pos:column="39"/></literal></expr>;<pos:position pos:line="119" pos:column="40"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="120" pos:column="29">pair<pos:position pos:line="120" pos:column="33"/></name> <operator pos:line="120" pos:column="34">=<pos:position pos:line="120" pos:column="35"/></operator> <operator pos:line="120" pos:column="36">(<pos:position pos:line="120" pos:column="37"/></operator><name pos:line="120" pos:column="37">ap_form_pair_t<pos:position pos:line="120" pos:column="51"/></name> <operator pos:line="120" pos:column="52">*<pos:position pos:line="120" pos:column="53"/></operator><operator pos:line="120" pos:column="53">)<pos:position pos:line="120" pos:column="54"/></operator> <call><name pos:line="120" pos:column="55">apr_array_push<pos:position pos:line="120" pos:column="69"/></name><argument_list pos:line="120" pos:column="69">(<argument><expr><name pos:line="120" pos:column="70">pairs<pos:position pos:line="120" pos:column="75"/></name></expr></argument>)<pos:position pos:line="120" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="77"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="121" pos:column="29">pair<pos:position pos:line="121" pos:column="33"/></name><operator pos:line="121" pos:column="33">-&gt;<pos:position pos:line="121" pos:column="38"/></operator><name pos:line="121" pos:column="35">name<pos:position pos:line="121" pos:column="39"/></name></name> <operator pos:line="121" pos:column="40">=<pos:position pos:line="121" pos:column="41"/></operator> <call><name pos:line="121" pos:column="42">apr_pstrdup<pos:position pos:line="121" pos:column="53"/></name><argument_list pos:line="121" pos:column="53">(<argument><expr><name><name pos:line="121" pos:column="54">r<pos:position pos:line="121" pos:column="55"/></name><operator pos:line="121" pos:column="55">-&gt;<pos:position pos:line="121" pos:column="60"/></operator><name pos:line="121" pos:column="57">pool<pos:position pos:line="121" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="63">buffer<pos:position pos:line="121" pos:column="69"/></name></expr></argument>)<pos:position pos:line="121" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="71"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="122" pos:column="29">pair<pos:position pos:line="122" pos:column="33"/></name><operator pos:line="122" pos:column="33">-&gt;<pos:position pos:line="122" pos:column="38"/></operator><name pos:line="122" pos:column="35">value<pos:position pos:line="122" pos:column="40"/></name></name> <operator pos:line="122" pos:column="41">=<pos:position pos:line="122" pos:column="42"/></operator> <call><name pos:line="122" pos:column="43">apr_brigade_create<pos:position pos:line="122" pos:column="61"/></name><argument_list pos:line="122" pos:column="61">(<argument><expr><name><name pos:line="122" pos:column="62">r<pos:position pos:line="122" pos:column="63"/></name><operator pos:line="122" pos:column="63">-&gt;<pos:position pos:line="122" pos:column="68"/></operator><name pos:line="122" pos:column="65">pool<pos:position pos:line="122" pos:column="69"/></name></name></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="71">r<pos:position pos:line="122" pos:column="72"/></name><operator pos:line="122" pos:column="72">-&gt;<pos:position pos:line="122" pos:column="77"/></operator><name pos:line="122" pos:column="74">connection<pos:position pos:line="122" pos:column="84"/></name><operator pos:line="122" pos:column="84">-&gt;<pos:position pos:line="122" pos:column="89"/></operator><name pos:line="122" pos:column="86">bucket_alloc<pos:position pos:line="122" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="100"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="123" pos:column="29">state<pos:position pos:line="123" pos:column="34"/></name> <operator pos:line="123" pos:column="35">=<pos:position pos:line="123" pos:column="36"/></operator> <name pos:line="123" pos:column="37">FORM_VALUE<pos:position pos:line="123" pos:column="47"/></name></expr>;<pos:position pos:line="123" pos:column="48"/></expr_stmt>
                        }<pos:position pos:line="124" pos:column="26"/></block></then>
                        <else pos:line="125" pos:column="25">else <block pos:line="125" pos:column="30">{
                            <expr_stmt><expr><name><name pos:line="126" pos:column="29">buffer<pos:position pos:line="126" pos:column="35"/></name><index pos:line="126" pos:column="35">[<expr><name pos:line="126" pos:column="36">offset<pos:position pos:line="126" pos:column="42"/></name><operator pos:line="126" pos:column="42">++<pos:position pos:line="126" pos:column="44"/></operator></expr>]<pos:position pos:line="126" pos:column="45"/></index></name> <operator pos:line="126" pos:column="46">=<pos:position pos:line="126" pos:column="47"/></operator> <name pos:line="126" pos:column="48">c<pos:position pos:line="126" pos:column="49"/></name></expr>;<pos:position pos:line="126" pos:column="50"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="127" pos:column="29">size<pos:position pos:line="127" pos:column="33"/></name><operator pos:line="127" pos:column="33">--<pos:position pos:line="127" pos:column="35"/></operator></expr>;<pos:position pos:line="127" pos:column="36"/></expr_stmt>
                        }<pos:position pos:line="128" pos:column="26"/></block></else></if>
                    }<pos:position pos:line="129" pos:column="22"/></block></then>
                    <else pos:line="130" pos:column="21">else <block pos:line="130" pos:column="26">{
                        <expr_stmt><expr><name pos:line="131" pos:column="25">state<pos:position pos:line="131" pos:column="30"/></name> <operator pos:line="131" pos:column="31">=<pos:position pos:line="131" pos:column="32"/></operator> <name pos:line="131" pos:column="33">FORM_ABORT<pos:position pos:line="131" pos:column="43"/></name></expr>;<pos:position pos:line="131" pos:column="44"/></expr_stmt>
                    }<pos:position pos:line="132" pos:column="22"/></block></else></if>
                    <break pos:line="133" pos:column="21">break;<pos:position pos:line="133" pos:column="27"/></break>
                <case pos:line="134" pos:column="17">case <expr><name pos:line="134" pos:column="22">FORM_VALUE<pos:position pos:line="134" pos:column="32"/></name></expr>:<pos:position pos:line="134" pos:column="33"/></case>
                    <if pos:line="135" pos:column="21">if <condition pos:line="135" pos:column="24">(<expr><name pos:line="135" pos:column="25">offset<pos:position pos:line="135" pos:column="31"/></name> <operator pos:line="135" pos:column="32">&gt;=<pos:position pos:line="135" pos:column="37"/></operator> <name pos:line="135" pos:column="35">HUGE_STRING_LEN<pos:position pos:line="135" pos:column="50"/></name></expr>)<pos:position pos:line="135" pos:column="51"/></condition><then pos:line="135" pos:column="51"> <block pos:line="135" pos:column="52">{
                        <decl_stmt><decl><type><specifier pos:line="136" pos:column="25">const<pos:position pos:line="136" pos:column="30"/></specifier> <name pos:line="136" pos:column="31">char<pos:position pos:line="136" pos:column="35"/></name> <modifier pos:line="136" pos:column="36">*<pos:position pos:line="136" pos:column="37"/></modifier></type><name pos:line="136" pos:column="37">tmp<pos:position pos:line="136" pos:column="40"/></name> <init pos:line="136" pos:column="41">= <expr><call><name pos:line="136" pos:column="43">apr_pmemdup<pos:position pos:line="136" pos:column="54"/></name><argument_list pos:line="136" pos:column="54">(<argument><expr><name><name pos:line="136" pos:column="55">r<pos:position pos:line="136" pos:column="56"/></name><operator pos:line="136" pos:column="56">-&gt;<pos:position pos:line="136" pos:column="61"/></operator><name pos:line="136" pos:column="58">pool<pos:position pos:line="136" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="64">buffer<pos:position pos:line="136" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="72">offset<pos:position pos:line="136" pos:column="78"/></name></expr></argument>)<pos:position pos:line="136" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="136" pos:column="80"/></decl_stmt>
                        <decl_stmt><decl><type><name pos:line="137" pos:column="25">apr_bucket<pos:position pos:line="137" pos:column="35"/></name> <modifier pos:line="137" pos:column="36">*<pos:position pos:line="137" pos:column="37"/></modifier></type><name pos:line="137" pos:column="37">b<pos:position pos:line="137" pos:column="38"/></name> <init pos:line="137" pos:column="39">= <expr><call><name pos:line="137" pos:column="41">apr_bucket_pool_create<pos:position pos:line="137" pos:column="63"/></name><argument_list pos:line="137" pos:column="63">(<argument><expr><name pos:line="137" pos:column="64">tmp<pos:position pos:line="137" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="69">offset<pos:position pos:line="137" pos:column="75"/></name></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="77">r<pos:position pos:line="137" pos:column="78"/></name><operator pos:line="137" pos:column="78">-&gt;<pos:position pos:line="137" pos:column="83"/></operator><name pos:line="137" pos:column="80">pool<pos:position pos:line="137" pos:column="84"/></name></name></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="86">r<pos:position pos:line="137" pos:column="87"/></name><operator pos:line="137" pos:column="87">-&gt;<pos:position pos:line="137" pos:column="92"/></operator><name pos:line="137" pos:column="89">connection<pos:position pos:line="137" pos:column="99"/></name><operator pos:line="137" pos:column="99">-&gt;<pos:position pos:line="137" pos:column="104"/></operator><name pos:line="137" pos:column="101">bucket_alloc<pos:position pos:line="137" pos:column="113"/></name></name></expr></argument>)<pos:position pos:line="137" pos:column="114"/></argument_list></call></expr></init></decl>;<pos:position pos:line="137" pos:column="115"/></decl_stmt>
                        <expr_stmt><expr><call><name pos:line="138" pos:column="25">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="138" pos:column="48"/></name><argument_list pos:line="138" pos:column="48">(<argument><expr><name><name pos:line="138" pos:column="49">pair<pos:position pos:line="138" pos:column="53"/></name><operator pos:line="138" pos:column="53">-&gt;<pos:position pos:line="138" pos:column="58"/></operator><name pos:line="138" pos:column="55">value<pos:position pos:line="138" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="62">b<pos:position pos:line="138" pos:column="63"/></name></expr></argument>)<pos:position pos:line="138" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="65"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="139" pos:column="25">offset<pos:position pos:line="139" pos:column="31"/></name> <operator pos:line="139" pos:column="32">=<pos:position pos:line="139" pos:column="33"/></operator> <literal type="number" pos:line="139" pos:column="34">0<pos:position pos:line="139" pos:column="35"/></literal></expr>;<pos:position pos:line="139" pos:column="36"/></expr_stmt>
                    }<pos:position pos:line="140" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name><name pos:line="141" pos:column="21">buffer<pos:position pos:line="141" pos:column="27"/></name><index pos:line="141" pos:column="27">[<expr><name pos:line="141" pos:column="28">offset<pos:position pos:line="141" pos:column="34"/></name><operator pos:line="141" pos:column="34">++<pos:position pos:line="141" pos:column="36"/></operator></expr>]<pos:position pos:line="141" pos:column="37"/></index></name> <operator pos:line="141" pos:column="38">=<pos:position pos:line="141" pos:column="39"/></operator> <name pos:line="141" pos:column="40">c<pos:position pos:line="141" pos:column="41"/></name></expr>;<pos:position pos:line="141" pos:column="42"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="142" pos:column="21">size<pos:position pos:line="142" pos:column="25"/></name><operator pos:line="142" pos:column="25">--<pos:position pos:line="142" pos:column="27"/></operator></expr>;<pos:position pos:line="142" pos:column="28"/></expr_stmt>
                    <break pos:line="143" pos:column="21">break;<pos:position pos:line="143" pos:column="27"/></break>
                <default pos:line="144" pos:column="17">default:<pos:position pos:line="144" pos:column="25"/></default>
                    <break pos:line="145" pos:column="21">break;<pos:position pos:line="145" pos:column="27"/></break>
                }<pos:position pos:line="146" pos:column="18"/></block></switch>
            }<pos:position pos:line="147" pos:column="14"/></block></while>

        }<pos:position pos:line="149" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="151" pos:column="9">apr_brigade_cleanup<pos:position pos:line="151" pos:column="28"/></name><argument_list pos:line="151" pos:column="28">(<argument><expr><name pos:line="151" pos:column="29">bb<pos:position pos:line="151" pos:column="31"/></name></expr></argument>)<pos:position pos:line="151" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="152" pos:column="6"/></block> while <condition pos:line="152" pos:column="13">(<expr><operator pos:line="152" pos:column="14">!<pos:position pos:line="152" pos:column="15"/></operator><name pos:line="152" pos:column="15">seen_eos<pos:position pos:line="152" pos:column="23"/></name></expr>)<pos:position pos:line="152" pos:column="24"/></condition>;<pos:position pos:line="152" pos:column="25"/></do>

    <if pos:line="154" pos:column="5">if <condition pos:line="154" pos:column="8">(<expr><name pos:line="154" pos:column="9">FORM_ABORT<pos:position pos:line="154" pos:column="19"/></name> <operator pos:line="154" pos:column="20">==<pos:position pos:line="154" pos:column="22"/></operator> <name pos:line="154" pos:column="23">state<pos:position pos:line="154" pos:column="28"/></name> <operator pos:line="154" pos:column="29">||<pos:position pos:line="154" pos:column="31"/></operator> <name pos:line="154" pos:column="32">size<pos:position pos:line="154" pos:column="36"/></name> <operator pos:line="154" pos:column="37">&lt;<pos:position pos:line="154" pos:column="41"/></operator> <literal type="number" pos:line="154" pos:column="39">0<pos:position pos:line="154" pos:column="40"/></literal> <operator pos:line="154" pos:column="41">||<pos:position pos:line="154" pos:column="43"/></operator> <name pos:line="154" pos:column="44">num<pos:position pos:line="154" pos:column="47"/></name> <operator pos:line="154" pos:column="48">==<pos:position pos:line="154" pos:column="50"/></operator> <literal type="number" pos:line="154" pos:column="51">0<pos:position pos:line="154" pos:column="52"/></literal></expr>)<pos:position pos:line="154" pos:column="53"/></condition><then pos:line="154" pos:column="53"> <block pos:line="154" pos:column="54">{
        <return pos:line="155" pos:column="9">return <expr><name pos:line="155" pos:column="16">HTTP_REQUEST_ENTITY_TOO_LARGE<pos:position pos:line="155" pos:column="45"/></name></expr>;<pos:position pos:line="155" pos:column="46"/></return>
    }<pos:position pos:line="156" pos:column="6"/></block></then>
    <elseif pos:line="157" pos:column="5">else <if pos:line="157" pos:column="10">if <condition pos:line="157" pos:column="13">(<expr><name pos:line="157" pos:column="14">FORM_VALUE<pos:position pos:line="157" pos:column="24"/></name> <operator pos:line="157" pos:column="25">==<pos:position pos:line="157" pos:column="27"/></operator> <name pos:line="157" pos:column="28">state<pos:position pos:line="157" pos:column="33"/></name> <operator pos:line="157" pos:column="34">&amp;&amp;<pos:position pos:line="157" pos:column="44"/></operator> <name pos:line="157" pos:column="37">pair<pos:position pos:line="157" pos:column="41"/></name> <operator pos:line="157" pos:column="42">&amp;&amp;<pos:position pos:line="157" pos:column="52"/></operator> <name pos:line="157" pos:column="45">offset<pos:position pos:line="157" pos:column="51"/></name> <operator pos:line="157" pos:column="52">&gt;<pos:position pos:line="157" pos:column="56"/></operator> <literal type="number" pos:line="157" pos:column="54">0<pos:position pos:line="157" pos:column="55"/></literal></expr>)<pos:position pos:line="157" pos:column="56"/></condition><then pos:line="157" pos:column="56"> <block pos:line="157" pos:column="57">{
        <decl_stmt><decl><type><specifier pos:line="158" pos:column="9">const<pos:position pos:line="158" pos:column="14"/></specifier> <name pos:line="158" pos:column="15">char<pos:position pos:line="158" pos:column="19"/></name> <modifier pos:line="158" pos:column="20">*<pos:position pos:line="158" pos:column="21"/></modifier></type><name pos:line="158" pos:column="21">tmp<pos:position pos:line="158" pos:column="24"/></name> <init pos:line="158" pos:column="25">= <expr><call><name pos:line="158" pos:column="27">apr_pmemdup<pos:position pos:line="158" pos:column="38"/></name><argument_list pos:line="158" pos:column="38">(<argument><expr><name><name pos:line="158" pos:column="39">r<pos:position pos:line="158" pos:column="40"/></name><operator pos:line="158" pos:column="40">-&gt;<pos:position pos:line="158" pos:column="45"/></operator><name pos:line="158" pos:column="42">pool<pos:position pos:line="158" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="48">buffer<pos:position pos:line="158" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="56">offset<pos:position pos:line="158" pos:column="62"/></name></expr></argument>)<pos:position pos:line="158" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="158" pos:column="64"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="159" pos:column="9">apr_bucket<pos:position pos:line="159" pos:column="19"/></name> <modifier pos:line="159" pos:column="20">*<pos:position pos:line="159" pos:column="21"/></modifier></type><name pos:line="159" pos:column="21">b<pos:position pos:line="159" pos:column="22"/></name> <init pos:line="159" pos:column="23">= <expr><call><name pos:line="159" pos:column="25">apr_bucket_pool_create<pos:position pos:line="159" pos:column="47"/></name><argument_list pos:line="159" pos:column="47">(<argument><expr><name pos:line="159" pos:column="48">tmp<pos:position pos:line="159" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="53">offset<pos:position pos:line="159" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="159" pos:column="61">r<pos:position pos:line="159" pos:column="62"/></name><operator pos:line="159" pos:column="62">-&gt;<pos:position pos:line="159" pos:column="67"/></operator><name pos:line="159" pos:column="64">pool<pos:position pos:line="159" pos:column="68"/></name></name></expr></argument>, <argument><expr><name><name pos:line="159" pos:column="70">r<pos:position pos:line="159" pos:column="71"/></name><operator pos:line="159" pos:column="71">-&gt;<pos:position pos:line="159" pos:column="76"/></operator><name pos:line="159" pos:column="73">connection<pos:position pos:line="159" pos:column="83"/></name><operator pos:line="159" pos:column="83">-&gt;<pos:position pos:line="159" pos:column="88"/></operator><name pos:line="159" pos:column="85">bucket_alloc<pos:position pos:line="159" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="159" pos:column="98"/></argument_list></call></expr></init></decl>;<pos:position pos:line="159" pos:column="99"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="160" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="160" pos:column="32"/></name><argument_list pos:line="160" pos:column="32">(<argument><expr><name><name pos:line="160" pos:column="33">pair<pos:position pos:line="160" pos:column="37"/></name><operator pos:line="160" pos:column="37">-&gt;<pos:position pos:line="160" pos:column="42"/></operator><name pos:line="160" pos:column="39">value<pos:position pos:line="160" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="46">b<pos:position pos:line="160" pos:column="47"/></name></expr></argument>)<pos:position pos:line="160" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="161" pos:column="6"/></block></then></if></elseif></if>

    <return pos:line="163" pos:column="5">return <expr><name pos:line="163" pos:column="12">OK<pos:position pos:line="163" pos:column="14"/></name></expr>;<pos:position pos:line="163" pos:column="15"/></return>

}<pos:position pos:line="165" pos:column="2"/></block></function></unit>

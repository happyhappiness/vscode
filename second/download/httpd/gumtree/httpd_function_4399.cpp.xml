<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4399.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">proxy_fdpass_handler<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">request_rec<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">r<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">proxy_worker<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">worker<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">proxy_server_conf<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">conf<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="3" pos:column="31">char<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">url<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="42">const<pos:position pos:line="3" pos:column="47"/></specifier> <name pos:line="3" pos:column="48">char<pos:position pos:line="3" pos:column="52"/></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">proxyname<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="4" pos:column="31">apr_port_t<pos:position pos:line="4" pos:column="41"/></name></type> <name pos:line="4" pos:column="42">proxyport<pos:position pos:line="4" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="52"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_socket_t<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">sock<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_socket_t<pos:position pos:line="8" pos:column="17"/></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">clientsock<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">strncasecmp<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">url<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="26">"fd://"<pos:position pos:line="10" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="35">5<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call> <operator pos:line="10" pos:column="38">==<pos:position pos:line="10" pos:column="40"/></operator> <literal type="number" pos:line="10" pos:column="41">0<pos:position pos:line="10" pos:column="42"/></literal></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43"> <block pos:line="10" pos:column="44">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">url<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">+=<pos:position pos:line="11" pos:column="15"/></operator> <literal type="number" pos:line="11" pos:column="16">5<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then>
    <else pos:line="13" pos:column="5">else <block pos:line="13" pos:column="10">{
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">DECLINED<pos:position pos:line="14" pos:column="24"/></name></expr>;<pos:position pos:line="14" pos:column="25"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">rv<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">get_socket_from_path<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name><name pos:line="17" pos:column="31">r<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">pool<pos:position pos:line="17" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">url<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="45">&amp;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="46">sock<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">rv<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">!=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">APR_SUCCESS<pos:position pos:line="19" pos:column="26"/></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27"> <block pos:line="19" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_log_rerror<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">APLOG_MARK<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">APLOG_ERR<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">rv<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">r<pos:position pos:line="20" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="21" pos:column="23">"proxy: FD: Failed to connect to '%s'"<pos:position pos:line="21" pos:column="61"/></literal></expr></argument>,
                      <argument><expr><name pos:line="22" pos:column="23">url<pos:position pos:line="22" pos:column="26"/></name></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="23" pos:column="42"/></name></expr>;<pos:position pos:line="23" pos:column="43"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <block pos:line="26" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">int<pos:position pos:line="27" pos:column="12"/></name></type> <name pos:line="27" pos:column="13">status<pos:position pos:line="27" pos:column="19"/></name></decl>;<pos:position pos:line="27" pos:column="20"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="28" pos:column="9">const<pos:position pos:line="28" pos:column="14"/></specifier> <name pos:line="28" pos:column="15">char<pos:position pos:line="28" pos:column="19"/></name> <modifier pos:line="28" pos:column="20">*<pos:position pos:line="28" pos:column="21"/></modifier></type><name pos:line="28" pos:column="21">flush_method<pos:position pos:line="28" pos:column="33"/></name> <init pos:line="28" pos:column="34">= <expr><ternary><condition><expr><name><name pos:line="28" pos:column="36">worker<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">-&gt;<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="44">flusher<pos:position pos:line="28" pos:column="51"/></name></name></expr> ?<pos:position pos:line="28" pos:column="53"/></condition><then pos:line="28" pos:column="53"> <expr><name><name pos:line="28" pos:column="54">worker<pos:position pos:line="28" pos:column="60"/></name><operator pos:line="28" pos:column="60">-&gt;<pos:position pos:line="28" pos:column="65"/></operator><name pos:line="28" pos:column="62">flusher<pos:position pos:line="28" pos:column="69"/></name></name></expr> <pos:position pos:line="28" pos:column="70"/></then><else pos:line="28" pos:column="70">: <expr><literal type="string" pos:line="28" pos:column="72">"flush"<pos:position pos:line="28" pos:column="79"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="28" pos:column="80"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="30" pos:column="9">proxy_fdpass_flush<pos:position pos:line="30" pos:column="27"/></name> <modifier pos:line="30" pos:column="28">*<pos:position pos:line="30" pos:column="29"/></modifier></type><name pos:line="30" pos:column="29">flush<pos:position pos:line="30" pos:column="34"/></name> <init pos:line="30" pos:column="35">= <expr><call><name pos:line="30" pos:column="37">ap_lookup_provider<pos:position pos:line="30" pos:column="55"/></name><argument_list pos:line="30" pos:column="55">(<argument><expr><name pos:line="30" pos:column="56">PROXY_FDPASS_FLUSHER<pos:position pos:line="30" pos:column="76"/></name></expr></argument>,
                                                       <argument><expr><name pos:line="31" pos:column="56">flush_method<pos:position pos:line="31" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="70">"0"<pos:position pos:line="31" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="75"/></decl_stmt>

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">flush<pos:position pos:line="33" pos:column="19"/></name></expr>)<pos:position pos:line="33" pos:column="20"/></condition><then pos:line="33" pos:column="20"> <block pos:line="33" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">ap_log_rerror<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">APLOG_MARK<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">APLOG_ERR<pos:position pos:line="34" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="50">rv<pos:position pos:line="34" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="54">r<pos:position pos:line="34" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="35" pos:column="27">"proxy: FD: Unable to find configured flush "<pos:position pos:line="35" pos:column="72"/></literal>
                          <literal type="string" pos:line="36" pos:column="27">"provider '%s'"<pos:position pos:line="36" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="44">flush_method<pos:position pos:line="36" pos:column="56"/></name></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>
            <return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="37" pos:column="46"/></name></expr>;<pos:position pos:line="37" pos:column="47"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="40" pos:column="9">status<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <call><name><name pos:line="40" pos:column="18">flush<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">-&gt;<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="25">flusher<pos:position pos:line="40" pos:column="32"/></name></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">r<pos:position pos:line="40" pos:column="34"/></name></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">status<pos:position pos:line="41" pos:column="19"/></name></expr>)<pos:position pos:line="41" pos:column="20"/></condition><then pos:line="41" pos:column="20"> <block pos:line="41" pos:column="21">{
            <return pos:line="42" pos:column="13">return <expr><name pos:line="42" pos:column="20">status<pos:position pos:line="42" pos:column="26"/></name></expr>;<pos:position pos:line="42" pos:column="27"/></return>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
    }<pos:position pos:line="44" pos:column="6"/></block>

    <comment type="block" pos:line="46" pos:column="5">/* XXXXX: THIS IS AN EVIL HACK */</comment>
    <comment type="block" pos:line="47" pos:column="5">/* There should really be a (documented) public API for this ! */</comment>
    <expr_stmt><expr><name pos:line="48" pos:column="5">clientsock<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <call><name pos:line="48" pos:column="18">ap_get_module_config<pos:position pos:line="48" pos:column="38"/></name><argument_list pos:line="48" pos:column="38">(<argument><expr><name><name pos:line="48" pos:column="39">r<pos:position pos:line="48" pos:column="40"/></name><operator pos:line="48" pos:column="40">-&gt;<pos:position pos:line="48" pos:column="45"/></operator><name pos:line="48" pos:column="42">connection<pos:position pos:line="48" pos:column="52"/></name><operator pos:line="48" pos:column="52">-&gt;<pos:position pos:line="48" pos:column="57"/></operator><name pos:line="48" pos:column="54">conn_config<pos:position pos:line="48" pos:column="65"/></name></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="67">&amp;<pos:position pos:line="48" pos:column="72"/></operator><name pos:line="48" pos:column="68">core_module<pos:position pos:line="48" pos:column="79"/></name></expr></argument>)<pos:position pos:line="48" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="81"/></expr_stmt>

    <expr_stmt><expr><name pos:line="50" pos:column="5">rv<pos:position pos:line="50" pos:column="7"/></name> <operator pos:line="50" pos:column="8">=<pos:position pos:line="50" pos:column="9"/></operator> <call><name pos:line="50" pos:column="10">send_socket<pos:position pos:line="50" pos:column="21"/></name><argument_list pos:line="50" pos:column="21">(<argument><expr><name><name pos:line="50" pos:column="22">r<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">-&gt;<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="25">pool<pos:position pos:line="50" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="31">sock<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="37">clientsock<pos:position pos:line="50" pos:column="47"/></name></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">rv<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">!=<pos:position pos:line="51" pos:column="14"/></operator> <name pos:line="51" pos:column="15">APR_SUCCESS<pos:position pos:line="51" pos:column="26"/></name></expr>)<pos:position pos:line="51" pos:column="27"/></condition><then pos:line="51" pos:column="27"> <block pos:line="51" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">ap_log_rerror<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><name pos:line="52" pos:column="23">APLOG_MARK<pos:position pos:line="52" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="35">APLOG_ERR<pos:position pos:line="52" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="46">rv<pos:position pos:line="52" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="50">r<pos:position pos:line="52" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="53" pos:column="23">"proxy: FD: send_socket failed:"<pos:position pos:line="53" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="57"/></expr_stmt>
        <return pos:line="54" pos:column="9">return <expr><name pos:line="54" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="54" pos:column="42"/></name></expr>;<pos:position pos:line="54" pos:column="43"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <block pos:line="57" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="58" pos:column="9">apr_socket_t<pos:position pos:line="58" pos:column="21"/></name> <modifier pos:line="58" pos:column="22">*<pos:position pos:line="58" pos:column="23"/></modifier></type><name pos:line="58" pos:column="23">dummy<pos:position pos:line="58" pos:column="28"/></name></decl>;<pos:position pos:line="58" pos:column="29"/></decl_stmt>
        <comment type="block" pos:line="59" pos:column="9">/* Create a dummy unconnected socket, and set it as the one we were 
         * connected to, so that when the core closes it, it doesn't close 
         * the tcp connection to the client.
         */</comment>
        <expr_stmt><expr><name pos:line="63" pos:column="9">rv<pos:position pos:line="63" pos:column="11"/></name> <operator pos:line="63" pos:column="12">=<pos:position pos:line="63" pos:column="13"/></operator> <call><name pos:line="63" pos:column="14">apr_socket_create<pos:position pos:line="63" pos:column="31"/></name><argument_list pos:line="63" pos:column="31">(<argument><expr><operator pos:line="63" pos:column="32">&amp;<pos:position pos:line="63" pos:column="37"/></operator><name pos:line="63" pos:column="33">dummy<pos:position pos:line="63" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="40">APR_INET<pos:position pos:line="63" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="50">SOCK_STREAM<pos:position pos:line="63" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="63">APR_PROTO_TCP<pos:position pos:line="63" pos:column="76"/></name></expr></argument>,
                               <argument><expr><name><name pos:line="64" pos:column="32">r<pos:position pos:line="64" pos:column="33"/></name><operator pos:line="64" pos:column="33">-&gt;<pos:position pos:line="64" pos:column="38"/></operator><name pos:line="64" pos:column="35">connection<pos:position pos:line="64" pos:column="45"/></name><operator pos:line="64" pos:column="45">-&gt;<pos:position pos:line="64" pos:column="50"/></operator><name pos:line="64" pos:column="47">pool<pos:position pos:line="64" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="53"/></expr_stmt>
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">rv<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">!=<pos:position pos:line="65" pos:column="18"/></operator> <name pos:line="65" pos:column="19">APR_SUCCESS<pos:position pos:line="65" pos:column="30"/></name></expr>)<pos:position pos:line="65" pos:column="31"/></condition><then pos:line="65" pos:column="31"> <block pos:line="65" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">ap_log_rerror<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">APLOG_MARK<pos:position pos:line="66" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="39">APLOG_ERR<pos:position pos:line="66" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="50">rv<pos:position pos:line="66" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="54">r<pos:position pos:line="66" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="67" pos:column="27">"proxy: FD: failed to create dummy socket"<pos:position pos:line="67" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="71"/></expr_stmt>
            <return pos:line="68" pos:column="13">return <expr><name pos:line="68" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="68" pos:column="46"/></name></expr>;<pos:position pos:line="68" pos:column="47"/></return>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">ap_set_module_config<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><name><name pos:line="70" pos:column="30">r<pos:position pos:line="70" pos:column="31"/></name><operator pos:line="70" pos:column="31">-&gt;<pos:position pos:line="70" pos:column="36"/></operator><name pos:line="70" pos:column="33">connection<pos:position pos:line="70" pos:column="43"/></name><operator pos:line="70" pos:column="43">-&gt;<pos:position pos:line="70" pos:column="48"/></operator><name pos:line="70" pos:column="45">conn_config<pos:position pos:line="70" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="58">&amp;<pos:position pos:line="70" pos:column="63"/></operator><name pos:line="70" pos:column="59">core_module<pos:position pos:line="70" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="72">dummy<pos:position pos:line="70" pos:column="77"/></name></expr></argument>)<pos:position pos:line="70" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block>
    
    
    <return pos:line="74" pos:column="5">return <expr><name pos:line="74" pos:column="12">OK<pos:position pos:line="74" pos:column="14"/></name></expr>;<pos:position pos:line="74" pos:column="15"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_621_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">APR_INLINE<pos:position pos:line="1" pos:column="18"/></name> <specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">header_inout_cmd<pos:position pos:line="1" pos:column="47"/></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><name pos:line="1" pos:column="48">cmd_parms<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">cmd<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="2" pos:column="48">void<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">indirconf<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                                               <parameter><decl><type><specifier pos:line="3" pos:column="48">const<pos:position pos:line="3" pos:column="53"/></specifier> <name pos:line="3" pos:column="54">char<pos:position pos:line="3" pos:column="58"/></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">action<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>,
                                               <parameter><decl><type><specifier pos:line="4" pos:column="48">const<pos:position pos:line="4" pos:column="53"/></specifier> <name pos:line="4" pos:column="54">char<pos:position pos:line="4" pos:column="58"/></name> <modifier pos:line="4" pos:column="59">*<pos:position pos:line="4" pos:column="60"/></modifier></type><name pos:line="4" pos:column="60">hdr<pos:position pos:line="4" pos:column="63"/></name></decl></parameter>,
                                               <parameter><decl><type><specifier pos:line="5" pos:column="48">const<pos:position pos:line="5" pos:column="53"/></specifier> <name pos:line="5" pos:column="54">char<pos:position pos:line="5" pos:column="58"/></name> <modifier pos:line="5" pos:column="59">*<pos:position pos:line="5" pos:column="60"/></modifier></type><name pos:line="5" pos:column="60">value<pos:position pos:line="5" pos:column="65"/></name></decl></parameter>,
                                               <parameter><decl><type><specifier pos:line="6" pos:column="48">const<pos:position pos:line="6" pos:column="53"/></specifier> <name pos:line="6" pos:column="54">char<pos:position pos:line="6" pos:column="58"/></name> <modifier pos:line="6" pos:column="59">*<pos:position pos:line="6" pos:column="60"/></modifier></type><name pos:line="6" pos:column="60">subs<pos:position pos:line="6" pos:column="64"/></name></decl></parameter>,
                                               <parameter><decl><type><specifier pos:line="7" pos:column="48">const<pos:position pos:line="7" pos:column="53"/></specifier> <name pos:line="7" pos:column="54">char<pos:position pos:line="7" pos:column="58"/></name> <modifier pos:line="7" pos:column="59">*<pos:position pos:line="7" pos:column="60"/></modifier></type><name pos:line="7" pos:column="60">envclause<pos:position pos:line="7" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="70"/></parameter_list>
<block pos:line="8" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">headers_conf<pos:position pos:line="9" pos:column="17"/></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type><name pos:line="9" pos:column="19">dirconf<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name pos:line="9" pos:column="29">indirconf<pos:position pos:line="9" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">condition_var<pos:position pos:line="10" pos:column="30"/></name> <init pos:line="10" pos:column="31">= <expr><name pos:line="10" pos:column="33">NULL<pos:position pos:line="10" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">colon<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">header_entry<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">*<pos:position pos:line="12" pos:column="19"/></operator><operator pos:line="12" pos:column="19">new<pos:position pos:line="12" pos:column="22"/></operator></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">ap_expr_info_t<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">expr<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><name pos:line="13" pos:column="28">NULL<pos:position pos:line="13" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="33"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_array_header_t<pos:position pos:line="15" pos:column="23"/></name> <modifier pos:line="15" pos:column="24">*<pos:position pos:line="15" pos:column="25"/></modifier></type><name pos:line="15" pos:column="25">fixup<pos:position pos:line="15" pos:column="30"/></name> <init pos:line="15" pos:column="31">= <expr><ternary><condition><expr><operator pos:line="15" pos:column="33">(<pos:position pos:line="15" pos:column="34"/></operator><name><name pos:line="15" pos:column="34">cmd<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">-&gt;<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="39">info<pos:position pos:line="15" pos:column="43"/></name></name> <operator pos:line="15" pos:column="44">==<pos:position pos:line="15" pos:column="46"/></operator> <operator pos:line="15" pos:column="47">&amp;<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="48">hdr_in<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">)<pos:position pos:line="15" pos:column="55"/></operator></expr>
        ?<pos:position pos:line="16" pos:column="10"/></condition><then pos:line="16" pos:column="10"> <expr><name><name pos:line="16" pos:column="11">dirconf<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">fixup_in<pos:position pos:line="16" pos:column="28"/></name></name></expr>   <pos:position pos:line="16" pos:column="31"/></then><else pos:line="16" pos:column="31">: <expr><ternary><condition><expr><operator pos:line="16" pos:column="33">(<pos:position pos:line="16" pos:column="34"/></operator><name><name pos:line="16" pos:column="34">cmd<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">info<pos:position pos:line="16" pos:column="43"/></name></name> <operator pos:line="16" pos:column="44">==<pos:position pos:line="16" pos:column="46"/></operator> <operator pos:line="16" pos:column="47">&amp;<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="48">hdr_out_always<pos:position pos:line="16" pos:column="62"/></name><operator pos:line="16" pos:column="62">)<pos:position pos:line="16" pos:column="63"/></operator></expr>
        ?<pos:position pos:line="17" pos:column="10"/></condition><then pos:line="17" pos:column="10"> <expr><name><name pos:line="17" pos:column="11">dirconf<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">fixup_err<pos:position pos:line="17" pos:column="29"/></name></name></expr>
        <pos:position pos:line="18" pos:column="9"/></then><else pos:line="18" pos:column="9">: <expr><name><name pos:line="18" pos:column="11">dirconf<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">fixup_out<pos:position pos:line="18" pos:column="29"/></name></name></expr></else></ternary></expr></else></ternary></expr></init></decl>;<pos:position pos:line="18" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="20" pos:column="5">new<pos:position pos:line="20" pos:column="8"/></operator> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <operator pos:line="20" pos:column="11">(<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">header_entry<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">*<pos:position pos:line="20" pos:column="26"/></operator><operator pos:line="20" pos:column="26">)<pos:position pos:line="20" pos:column="27"/></operator> <call><name pos:line="20" pos:column="28">apr_array_push<pos:position pos:line="20" pos:column="42"/></name><argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">fixup<pos:position pos:line="20" pos:column="48"/></name></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><call><name pos:line="22" pos:column="10">strcasecmp<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">action<pos:position pos:line="22" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="29">"set"<pos:position pos:line="22" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="36"/></condition><then pos:line="22" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="23" pos:column="9">new<pos:position pos:line="23" pos:column="12"/></operator><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">action<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">hdr_set<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt></block></then>
    <elseif pos:line="24" pos:column="5">else <if pos:line="24" pos:column="10">if <condition pos:line="24" pos:column="13">(<expr><operator pos:line="24" pos:column="14">!<pos:position pos:line="24" pos:column="15"/></operator><call><name pos:line="24" pos:column="15">strcasecmp<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">action<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="34">"setifempty"<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="48"/></condition><then pos:line="24" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="25" pos:column="9">new<pos:position pos:line="25" pos:column="12"/></operator><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">action<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">hdr_setifempty<pos:position pos:line="25" pos:column="37"/></name></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><operator pos:line="26" pos:column="14">!<pos:position pos:line="26" pos:column="15"/></operator><call><name pos:line="26" pos:column="15">strcasecmp<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">action<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="34">"add"<pos:position pos:line="26" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="41"/></condition><then pos:line="26" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="27" pos:column="9">new<pos:position pos:line="27" pos:column="12"/></operator><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">action<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="23">hdr_add<pos:position pos:line="27" pos:column="30"/></name></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><operator pos:line="28" pos:column="14">!<pos:position pos:line="28" pos:column="15"/></operator><call><name pos:line="28" pos:column="15">strcasecmp<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">action<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="34">"append"<pos:position pos:line="28" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="44"/></condition><then pos:line="28" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="29" pos:column="9">new<pos:position pos:line="29" pos:column="12"/></operator><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">action<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <name pos:line="29" pos:column="23">hdr_append<pos:position pos:line="29" pos:column="33"/></name></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if <condition pos:line="30" pos:column="13">(<expr><operator pos:line="30" pos:column="14">!<pos:position pos:line="30" pos:column="15"/></operator><call><name pos:line="30" pos:column="15">strcasecmp<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">action<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="34">"merge"<pos:position pos:line="30" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="43"/></condition><then pos:line="30" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="31" pos:column="9">new<pos:position pos:line="31" pos:column="12"/></operator><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">action<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">hdr_merge<pos:position pos:line="31" pos:column="32"/></name></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><operator pos:line="32" pos:column="14">!<pos:position pos:line="32" pos:column="15"/></operator><call><name pos:line="32" pos:column="15">strcasecmp<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">action<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="34">"unset"<pos:position pos:line="32" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="43"/></condition><then pos:line="32" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="33" pos:column="9">new<pos:position pos:line="33" pos:column="12"/></operator><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">action<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">hdr_unset<pos:position pos:line="33" pos:column="32"/></name></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="34" pos:column="5">else <if pos:line="34" pos:column="10">if <condition pos:line="34" pos:column="13">(<expr><operator pos:line="34" pos:column="14">!<pos:position pos:line="34" pos:column="15"/></operator><call><name pos:line="34" pos:column="15">strcasecmp<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">action<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="34">"echo"<pos:position pos:line="34" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="42"/></condition><then pos:line="34" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="35" pos:column="9">new<pos:position pos:line="35" pos:column="12"/></operator><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">action<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="23">hdr_echo<pos:position pos:line="35" pos:column="31"/></name></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="36" pos:column="5">else <if pos:line="36" pos:column="10">if <condition pos:line="36" pos:column="13">(<expr><operator pos:line="36" pos:column="14">!<pos:position pos:line="36" pos:column="15"/></operator><call><name pos:line="36" pos:column="15">strcasecmp<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><name pos:line="36" pos:column="26">action<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="34">"edit"<pos:position pos:line="36" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="42"/></condition><then pos:line="36" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="37" pos:column="9">new<pos:position pos:line="37" pos:column="12"/></operator><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">action<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <name pos:line="37" pos:column="23">hdr_edit<pos:position pos:line="37" pos:column="31"/></name></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><operator pos:line="38" pos:column="14">!<pos:position pos:line="38" pos:column="15"/></operator><call><name pos:line="38" pos:column="15">strcasecmp<pos:position pos:line="38" pos:column="25"/></name><argument_list pos:line="38" pos:column="25">(<argument><expr><name pos:line="38" pos:column="26">action<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="34">"edit*"<pos:position pos:line="38" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="43"/></condition><then pos:line="38" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="39" pos:column="9">new<pos:position pos:line="39" pos:column="12"/></operator><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">action<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <name pos:line="39" pos:column="23">hdr_edit_r<pos:position pos:line="39" pos:column="33"/></name></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="40" pos:column="5">else <if pos:line="40" pos:column="10">if <condition pos:line="40" pos:column="13">(<expr><operator pos:line="40" pos:column="14">!<pos:position pos:line="40" pos:column="15"/></operator><call><name pos:line="40" pos:column="15">strcasecmp<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">action<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="34">"note"<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="42"/></condition><then pos:line="40" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="41" pos:column="9">new<pos:position pos:line="41" pos:column="12"/></operator><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">action<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <name pos:line="41" pos:column="23">hdr_note<pos:position pos:line="41" pos:column="31"/></name></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt></block></then></if></elseif>
    <else pos:line="42" pos:column="5">else
        <block type="pseudo"><return pos:line="43" pos:column="9">return <expr><literal type="string" pos:line="43" pos:column="16">"first argument must be 'add', 'set', 'setifempty', 'append', 'merge', "<pos:position pos:line="43" pos:column="88"/></literal>
               <literal type="string" pos:line="44" pos:column="16">"'unset', 'echo', 'note', 'edit', or 'edit*'."<pos:position pos:line="44" pos:column="62"/></literal></expr>;<pos:position pos:line="44" pos:column="63"/></return></block></else></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">new<pos:position pos:line="46" pos:column="12"/></operator><operator pos:line="46" pos:column="12">-&gt;<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="14">action<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">==<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">hdr_edit<pos:position pos:line="46" pos:column="32"/></name> <operator pos:line="46" pos:column="33">||<pos:position pos:line="46" pos:column="35"/></operator> <operator pos:line="46" pos:column="36">new<pos:position pos:line="46" pos:column="39"/></operator><operator pos:line="46" pos:column="39">-&gt;<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="41">action<pos:position pos:line="46" pos:column="47"/></name> <operator pos:line="46" pos:column="48">==<pos:position pos:line="46" pos:column="50"/></operator> <name pos:line="46" pos:column="51">hdr_edit_r<pos:position pos:line="46" pos:column="61"/></name></expr>)<pos:position pos:line="46" pos:column="62"/></condition><then pos:line="46" pos:column="62"> <block pos:line="46" pos:column="63">{
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">subs<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">==<pos:position pos:line="47" pos:column="20"/></operator> <name pos:line="47" pos:column="21">NULL<pos:position pos:line="47" pos:column="25"/></name></expr>)<pos:position pos:line="47" pos:column="26"/></condition><then pos:line="47" pos:column="26"> <block pos:line="47" pos:column="27">{
            <return pos:line="48" pos:column="13">return <expr><literal type="string" pos:line="48" pos:column="20">"Header edit requires a match and a substitution"<pos:position pos:line="48" pos:column="69"/></literal></expr>;<pos:position pos:line="48" pos:column="70"/></return>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="50" pos:column="9">new<pos:position pos:line="50" pos:column="12"/></operator><operator pos:line="50" pos:column="12">-&gt;<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="14">regex<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <call><name pos:line="50" pos:column="22">ap_pregcomp<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><name><name pos:line="50" pos:column="34">cmd<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">-&gt;<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="39">pool<pos:position pos:line="50" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="45">value<pos:position pos:line="50" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="52">AP_REG_EXTENDED<pos:position pos:line="50" pos:column="67"/></name></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="69"/></expr_stmt>
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">new<pos:position pos:line="51" pos:column="16"/></operator><operator pos:line="51" pos:column="16">-&gt;<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="18">regex<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">==<pos:position pos:line="51" pos:column="26"/></operator> <name pos:line="51" pos:column="27">NULL<pos:position pos:line="51" pos:column="31"/></name></expr>)<pos:position pos:line="51" pos:column="32"/></condition><then pos:line="51" pos:column="32"> <block pos:line="51" pos:column="33">{
            <return pos:line="52" pos:column="13">return <expr><literal type="string" pos:line="52" pos:column="20">"Header edit regex could not be compiled"<pos:position pos:line="52" pos:column="61"/></literal></expr>;<pos:position pos:line="52" pos:column="62"/></return>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="54" pos:column="9">new<pos:position pos:line="54" pos:column="12"/></operator><operator pos:line="54" pos:column="12">-&gt;<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="14">subs<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <name pos:line="54" pos:column="21">subs<pos:position pos:line="54" pos:column="25"/></name></expr>;<pos:position pos:line="54" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then>
    <else pos:line="56" pos:column="5">else <block pos:line="56" pos:column="10">{
        <comment type="block" pos:line="57" pos:column="9">/* there's no subs, so envclause is really that argument */</comment>
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name pos:line="58" pos:column="13">envclause<pos:position pos:line="58" pos:column="22"/></name> <operator pos:line="58" pos:column="23">!=<pos:position pos:line="58" pos:column="25"/></operator> <name pos:line="58" pos:column="26">NULL<pos:position pos:line="58" pos:column="30"/></name></expr>)<pos:position pos:line="58" pos:column="31"/></condition><then pos:line="58" pos:column="31"> <block pos:line="58" pos:column="32">{
            <return pos:line="59" pos:column="13">return <expr><literal type="string" pos:line="59" pos:column="20">"Too many arguments to directive"<pos:position pos:line="59" pos:column="53"/></literal></expr>;<pos:position pos:line="59" pos:column="54"/></return>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="61" pos:column="9">envclause<pos:position pos:line="61" pos:column="18"/></name> <operator pos:line="61" pos:column="19">=<pos:position pos:line="61" pos:column="20"/></operator> <name pos:line="61" pos:column="21">subs<pos:position pos:line="61" pos:column="25"/></name></expr>;<pos:position pos:line="61" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></else></if>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><operator pos:line="63" pos:column="9">new<pos:position pos:line="63" pos:column="12"/></operator><operator pos:line="63" pos:column="12">-&gt;<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="14">action<pos:position pos:line="63" pos:column="20"/></name> <operator pos:line="63" pos:column="21">==<pos:position pos:line="63" pos:column="23"/></operator> <name pos:line="63" pos:column="24">hdr_unset<pos:position pos:line="63" pos:column="33"/></name></expr>)<pos:position pos:line="63" pos:column="34"/></condition><then pos:line="63" pos:column="34"> <block pos:line="63" pos:column="35">{
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">value<pos:position pos:line="64" pos:column="18"/></name></expr>)<pos:position pos:line="64" pos:column="19"/></condition><then pos:line="64" pos:column="19"> <block pos:line="64" pos:column="20">{
            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><name pos:line="65" pos:column="17">envclause<pos:position pos:line="65" pos:column="26"/></name></expr>)<pos:position pos:line="65" pos:column="27"/></condition><then pos:line="65" pos:column="27"> <block pos:line="65" pos:column="28">{
                <return pos:line="66" pos:column="17">return <expr><literal type="string" pos:line="66" pos:column="24">"header unset takes two arguments"<pos:position pos:line="66" pos:column="58"/></literal></expr>;<pos:position pos:line="66" pos:column="59"/></return>
            }<pos:position pos:line="67" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="68" pos:column="13">envclause<pos:position pos:line="68" pos:column="22"/></name> <operator pos:line="68" pos:column="23">=<pos:position pos:line="68" pos:column="24"/></operator> <name pos:line="68" pos:column="25">value<pos:position pos:line="68" pos:column="30"/></name></expr>;<pos:position pos:line="68" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="69" pos:column="13">value<pos:position pos:line="69" pos:column="18"/></name> <operator pos:line="69" pos:column="19">=<pos:position pos:line="69" pos:column="20"/></operator> <name pos:line="69" pos:column="21">NULL<pos:position pos:line="69" pos:column="25"/></name></expr>;<pos:position pos:line="69" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></then>
    <elseif pos:line="72" pos:column="5">else <if pos:line="72" pos:column="10">if <condition pos:line="72" pos:column="13">(<expr><operator pos:line="72" pos:column="14">new<pos:position pos:line="72" pos:column="17"/></operator><operator pos:line="72" pos:column="17">-&gt;<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="19">action<pos:position pos:line="72" pos:column="25"/></name> <operator pos:line="72" pos:column="26">==<pos:position pos:line="72" pos:column="28"/></operator> <name pos:line="72" pos:column="29">hdr_echo<pos:position pos:line="72" pos:column="37"/></name></expr>)<pos:position pos:line="72" pos:column="38"/></condition><then pos:line="72" pos:column="38"> <block pos:line="72" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="73" pos:column="9">ap_regex_t<pos:position pos:line="73" pos:column="19"/></name> <modifier pos:line="73" pos:column="20">*<pos:position pos:line="73" pos:column="21"/></modifier></type><name pos:line="73" pos:column="21">regex<pos:position pos:line="73" pos:column="26"/></name></decl>;<pos:position pos:line="73" pos:column="27"/></decl_stmt>

        <if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">value<pos:position pos:line="75" pos:column="18"/></name></expr>)<pos:position pos:line="75" pos:column="19"/></condition><then pos:line="75" pos:column="19"> <block pos:line="75" pos:column="20">{
            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><name pos:line="76" pos:column="17">envclause<pos:position pos:line="76" pos:column="26"/></name></expr>)<pos:position pos:line="76" pos:column="27"/></condition><then pos:line="76" pos:column="27"> <block pos:line="76" pos:column="28">{
                <return pos:line="77" pos:column="17">return <expr><literal type="string" pos:line="77" pos:column="24">"Header echo takes two arguments"<pos:position pos:line="77" pos:column="57"/></literal></expr>;<pos:position pos:line="77" pos:column="58"/></return>
            }<pos:position pos:line="78" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="79" pos:column="13">envclause<pos:position pos:line="79" pos:column="22"/></name> <operator pos:line="79" pos:column="23">=<pos:position pos:line="79" pos:column="24"/></operator> <name pos:line="79" pos:column="25">value<pos:position pos:line="79" pos:column="30"/></name></expr>;<pos:position pos:line="79" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="80" pos:column="13">value<pos:position pos:line="80" pos:column="18"/></name> <operator pos:line="80" pos:column="19">=<pos:position pos:line="80" pos:column="20"/></operator> <name pos:line="80" pos:column="21">NULL<pos:position pos:line="80" pos:column="25"/></name></expr>;<pos:position pos:line="80" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="81" pos:column="10"/></block></then></if>
        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name><name pos:line="82" pos:column="13">cmd<pos:position pos:line="82" pos:column="16"/></name><operator pos:line="82" pos:column="16">-&gt;<pos:position pos:line="82" pos:column="21"/></operator><name pos:line="82" pos:column="18">info<pos:position pos:line="82" pos:column="22"/></name></name> <operator pos:line="82" pos:column="23">!=<pos:position pos:line="82" pos:column="25"/></operator> <operator pos:line="82" pos:column="26">&amp;<pos:position pos:line="82" pos:column="31"/></operator><name pos:line="82" pos:column="27">hdr_out_onsuccess<pos:position pos:line="82" pos:column="44"/></name> <operator pos:line="82" pos:column="45">&amp;&amp;<pos:position pos:line="82" pos:column="55"/></operator> <name><name pos:line="82" pos:column="48">cmd<pos:position pos:line="82" pos:column="51"/></name><operator pos:line="82" pos:column="51">-&gt;<pos:position pos:line="82" pos:column="56"/></operator><name pos:line="82" pos:column="53">info<pos:position pos:line="82" pos:column="57"/></name></name> <operator pos:line="82" pos:column="58">!=<pos:position pos:line="82" pos:column="60"/></operator> <operator pos:line="82" pos:column="61">&amp;<pos:position pos:line="82" pos:column="66"/></operator><name pos:line="82" pos:column="62">hdr_out_always<pos:position pos:line="82" pos:column="76"/></name></expr>)<pos:position pos:line="82" pos:column="77"/></condition><then pos:line="82" pos:column="77">
            <block type="pseudo"><return pos:line="83" pos:column="13">return <expr><literal type="string" pos:line="83" pos:column="20">"Header echo only valid on Header "<pos:position pos:line="83" pos:column="55"/></literal>
                   <literal type="string" pos:line="84" pos:column="20">"directives"<pos:position pos:line="84" pos:column="32"/></literal></expr>;<pos:position pos:line="84" pos:column="33"/></return></block></then>
        <else pos:line="85" pos:column="9">else <block pos:line="85" pos:column="14">{
            <expr_stmt><expr><name pos:line="86" pos:column="13">regex<pos:position pos:line="86" pos:column="18"/></name> <operator pos:line="86" pos:column="19">=<pos:position pos:line="86" pos:column="20"/></operator> <call><name pos:line="86" pos:column="21">ap_pregcomp<pos:position pos:line="86" pos:column="32"/></name><argument_list pos:line="86" pos:column="32">(<argument><expr><name><name pos:line="86" pos:column="33">cmd<pos:position pos:line="86" pos:column="36"/></name><operator pos:line="86" pos:column="36">-&gt;<pos:position pos:line="86" pos:column="41"/></operator><name pos:line="86" pos:column="38">pool<pos:position pos:line="86" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="44">hdr<pos:position pos:line="86" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="49">AP_REG_EXTENDED<pos:position pos:line="86" pos:column="64"/></name> <operator pos:line="86" pos:column="65">|<pos:position pos:line="86" pos:column="66"/></operator> <name pos:line="86" pos:column="67">AP_REG_NOSUB<pos:position pos:line="86" pos:column="79"/></name></expr></argument>)<pos:position pos:line="86" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="81"/></expr_stmt>
            <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><name pos:line="87" pos:column="17">regex<pos:position pos:line="87" pos:column="22"/></name> <operator pos:line="87" pos:column="23">==<pos:position pos:line="87" pos:column="25"/></operator> <name pos:line="87" pos:column="26">NULL<pos:position pos:line="87" pos:column="30"/></name></expr>)<pos:position pos:line="87" pos:column="31"/></condition><then pos:line="87" pos:column="31"> <block pos:line="87" pos:column="32">{
                <return pos:line="88" pos:column="17">return <expr><literal type="string" pos:line="88" pos:column="24">"Header echo regex could not be compiled"<pos:position pos:line="88" pos:column="65"/></literal></expr>;<pos:position pos:line="88" pos:column="66"/></return>
            }<pos:position pos:line="89" pos:column="14"/></block></then></if>
        }<pos:position pos:line="90" pos:column="10"/></block></else></if>
        <expr_stmt><expr><operator pos:line="91" pos:column="9">new<pos:position pos:line="91" pos:column="12"/></operator><operator pos:line="91" pos:column="12">-&gt;<pos:position pos:line="91" pos:column="17"/></operator><name pos:line="91" pos:column="14">regex<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">=<pos:position pos:line="91" pos:column="21"/></operator> <name pos:line="91" pos:column="22">regex<pos:position pos:line="91" pos:column="27"/></name></expr>;<pos:position pos:line="91" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="93" pos:column="5">else <if pos:line="93" pos:column="10">if <condition pos:line="93" pos:column="13">(<expr><operator pos:line="93" pos:column="14">!<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="15">value<pos:position pos:line="93" pos:column="20"/></name></expr>)<pos:position pos:line="93" pos:column="21"/></condition><then pos:line="93" pos:column="21">
        <block type="pseudo"><return pos:line="94" pos:column="9">return <expr><literal type="string" pos:line="94" pos:column="16">"Header requires three arguments"<pos:position pos:line="94" pos:column="49"/></literal></expr>;<pos:position pos:line="94" pos:column="50"/></return></block></then></if></elseif></if>

    <comment type="block" pos:line="96" pos:column="5">/* Handle the envclause on Header */</comment>
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><name pos:line="97" pos:column="9">envclause<pos:position pos:line="97" pos:column="18"/></name> <operator pos:line="97" pos:column="19">!=<pos:position pos:line="97" pos:column="21"/></operator> <name pos:line="97" pos:column="22">NULL<pos:position pos:line="97" pos:column="26"/></name></expr>)<pos:position pos:line="97" pos:column="27"/></condition><then pos:line="97" pos:column="27"> <block pos:line="97" pos:column="28">{
        <if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><call><name pos:line="98" pos:column="13">strcasecmp<pos:position pos:line="98" pos:column="23"/></name><argument_list pos:line="98" pos:column="23">(<argument><expr><name pos:line="98" pos:column="24">envclause<pos:position pos:line="98" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="35">"early"<pos:position pos:line="98" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="43"/></argument_list></call> <operator pos:line="98" pos:column="44">==<pos:position pos:line="98" pos:column="46"/></operator> <literal type="number" pos:line="98" pos:column="47">0<pos:position pos:line="98" pos:column="48"/></literal></expr>)<pos:position pos:line="98" pos:column="49"/></condition><then pos:line="98" pos:column="49"> <block pos:line="98" pos:column="50">{
            <expr_stmt><expr><name pos:line="99" pos:column="13">condition_var<pos:position pos:line="99" pos:column="26"/></name> <operator pos:line="99" pos:column="27">=<pos:position pos:line="99" pos:column="28"/></operator> <name pos:line="99" pos:column="29">condition_early<pos:position pos:line="99" pos:column="44"/></name></expr>;<pos:position pos:line="99" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="100" pos:column="10"/></block></then>
        <elseif pos:line="101" pos:column="9">else <if pos:line="101" pos:column="14">if <condition pos:line="101" pos:column="17">(<expr><call><name pos:line="101" pos:column="18">strncasecmp<pos:position pos:line="101" pos:column="29"/></name><argument_list pos:line="101" pos:column="29">(<argument><expr><name pos:line="101" pos:column="30">envclause<pos:position pos:line="101" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="41">"env="<pos:position pos:line="101" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="49">4<pos:position pos:line="101" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="51"/></argument_list></call> <operator pos:line="101" pos:column="52">==<pos:position pos:line="101" pos:column="54"/></operator> <literal type="number" pos:line="101" pos:column="55">0<pos:position pos:line="101" pos:column="56"/></literal></expr>)<pos:position pos:line="101" pos:column="57"/></condition><then pos:line="101" pos:column="57"> <block pos:line="101" pos:column="58">{
            <if pos:line="102" pos:column="13">if <condition pos:line="102" pos:column="16">(<expr><operator pos:line="102" pos:column="17">(<pos:position pos:line="102" pos:column="18"/></operator><name><name pos:line="102" pos:column="18">envclause<pos:position pos:line="102" pos:column="27"/></name><index pos:line="102" pos:column="27">[<expr><literal type="number" pos:line="102" pos:column="28">4<pos:position pos:line="102" pos:column="29"/></literal></expr>]<pos:position pos:line="102" pos:column="30"/></index></name> <operator pos:line="102" pos:column="31">==<pos:position pos:line="102" pos:column="33"/></operator> <literal type="char" pos:line="102" pos:column="34">'\0'<pos:position pos:line="102" pos:column="38"/></literal><operator pos:line="102" pos:column="38">)<pos:position pos:line="102" pos:column="39"/></operator>
                <operator pos:line="103" pos:column="17">||<pos:position pos:line="103" pos:column="19"/></operator> <operator pos:line="103" pos:column="20">(<pos:position pos:line="103" pos:column="21"/></operator><operator pos:line="103" pos:column="21">(<pos:position pos:line="103" pos:column="22"/></operator><name><name pos:line="103" pos:column="22">envclause<pos:position pos:line="103" pos:column="31"/></name><index pos:line="103" pos:column="31">[<expr><literal type="number" pos:line="103" pos:column="32">4<pos:position pos:line="103" pos:column="33"/></literal></expr>]<pos:position pos:line="103" pos:column="34"/></index></name> <operator pos:line="103" pos:column="35">==<pos:position pos:line="103" pos:column="37"/></operator> <literal type="char" pos:line="103" pos:column="38">'!'<pos:position pos:line="103" pos:column="41"/></literal><operator pos:line="103" pos:column="41">)<pos:position pos:line="103" pos:column="42"/></operator> <operator pos:line="103" pos:column="43">&amp;&amp;<pos:position pos:line="103" pos:column="53"/></operator> <operator pos:line="103" pos:column="46">(<pos:position pos:line="103" pos:column="47"/></operator><name><name pos:line="103" pos:column="47">envclause<pos:position pos:line="103" pos:column="56"/></name><index pos:line="103" pos:column="56">[<expr><literal type="number" pos:line="103" pos:column="57">5<pos:position pos:line="103" pos:column="58"/></literal></expr>]<pos:position pos:line="103" pos:column="59"/></index></name> <operator pos:line="103" pos:column="60">==<pos:position pos:line="103" pos:column="62"/></operator> <literal type="char" pos:line="103" pos:column="63">'\0'<pos:position pos:line="103" pos:column="67"/></literal><operator pos:line="103" pos:column="67">)<pos:position pos:line="103" pos:column="68"/></operator><operator pos:line="103" pos:column="68">)<pos:position pos:line="103" pos:column="69"/></operator></expr>)<pos:position pos:line="103" pos:column="70"/></condition><then pos:line="103" pos:column="70"> <block pos:line="103" pos:column="71">{
                <return pos:line="104" pos:column="17">return <expr><literal type="string" pos:line="104" pos:column="24">"error: missing environment variable name. "<pos:position pos:line="104" pos:column="68"/></literal>
                    <literal type="string" pos:line="105" pos:column="21">"envclause should be in the form env=envar "<pos:position pos:line="105" pos:column="65"/></literal></expr>;<pos:position pos:line="105" pos:column="66"/></return>
            }<pos:position pos:line="106" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="107" pos:column="13">condition_var<pos:position pos:line="107" pos:column="26"/></name> <operator pos:line="107" pos:column="27">=<pos:position pos:line="107" pos:column="28"/></operator> <name pos:line="107" pos:column="29">envclause<pos:position pos:line="107" pos:column="38"/></name> <operator pos:line="107" pos:column="39">+<pos:position pos:line="107" pos:column="40"/></operator> <literal type="number" pos:line="107" pos:column="41">4<pos:position pos:line="107" pos:column="42"/></literal></expr>;<pos:position pos:line="107" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="108" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="109" pos:column="9">else <if pos:line="109" pos:column="14">if <condition pos:line="109" pos:column="17">(<expr><call><name pos:line="109" pos:column="18">strncasecmp<pos:position pos:line="109" pos:column="29"/></name><argument_list pos:line="109" pos:column="29">(<argument><expr><name pos:line="109" pos:column="30">envclause<pos:position pos:line="109" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="41">"expr="<pos:position pos:line="109" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="50">5<pos:position pos:line="109" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="52"/></argument_list></call> <operator pos:line="109" pos:column="53">==<pos:position pos:line="109" pos:column="55"/></operator> <literal type="number" pos:line="109" pos:column="56">0<pos:position pos:line="109" pos:column="57"/></literal></expr>)<pos:position pos:line="109" pos:column="58"/></condition><then pos:line="109" pos:column="58"> <block pos:line="109" pos:column="59">{
            <decl_stmt><decl><type><specifier pos:line="110" pos:column="13">const<pos:position pos:line="110" pos:column="18"/></specifier> <name pos:line="110" pos:column="19">char<pos:position pos:line="110" pos:column="23"/></name> <modifier pos:line="110" pos:column="24">*<pos:position pos:line="110" pos:column="25"/></modifier></type><name pos:line="110" pos:column="25">err<pos:position pos:line="110" pos:column="28"/></name> <init pos:line="110" pos:column="29">= <expr><name pos:line="110" pos:column="31">NULL<pos:position pos:line="110" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="110" pos:column="36"/></decl_stmt>
            <expr_stmt><expr><name pos:line="111" pos:column="13">expr<pos:position pos:line="111" pos:column="17"/></name> <operator pos:line="111" pos:column="18">=<pos:position pos:line="111" pos:column="19"/></operator> <call><name pos:line="111" pos:column="20">ap_expr_parse_cmd<pos:position pos:line="111" pos:column="37"/></name><argument_list pos:line="111" pos:column="37">(<argument><expr><name pos:line="111" pos:column="38">cmd<pos:position pos:line="111" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="43">envclause<pos:position pos:line="111" pos:column="52"/></name> <operator pos:line="111" pos:column="53">+<pos:position pos:line="111" pos:column="54"/></operator> <literal type="number" pos:line="111" pos:column="55">5<pos:position pos:line="111" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="58">0<pos:position pos:line="111" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="111" pos:column="61">&amp;<pos:position pos:line="111" pos:column="66"/></operator><name pos:line="111" pos:column="62">err<pos:position pos:line="111" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="67">NULL<pos:position pos:line="111" pos:column="71"/></name></expr></argument>)<pos:position pos:line="111" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="73"/></expr_stmt>
            <if pos:line="112" pos:column="13">if <condition pos:line="112" pos:column="16">(<expr><name pos:line="112" pos:column="17">err<pos:position pos:line="112" pos:column="20"/></name></expr>)<pos:position pos:line="112" pos:column="21"/></condition><then pos:line="112" pos:column="21"> <block pos:line="112" pos:column="22">{
                <return pos:line="113" pos:column="17">return <macro><name pos:line="113" pos:column="24">apr_ps<pos:position pos:line="113" pos:column="30"/></name></macro></return></block></then></if></block></then></if></elseif></if></block></then></if></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_669_httpd-2.3.8.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">YY_BUFFER_STATE<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">yy_create_buffer<pos:position pos:line="1" pos:column="33"/></name><argument_list pos:line="1" pos:column="33">( <argument><expr><name pos:line="1" pos:column="35">FILE<pos:position pos:line="1" pos:column="39"/></name> <operator pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></operator><name pos:line="1" pos:column="41">file<pos:position pos:line="1" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">size<pos:position pos:line="1" pos:column="55"/></name></expr></argument> )<pos:position pos:line="1" pos:column="57"/></argument_list>
<cpp:else pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">else<pos:position pos:line="2" pos:column="6"/></cpp:directive></cpp:else>
<name pos:line="3" pos:column="1">YY_BUFFER_STATE<pos:position pos:line="3" pos:column="16"/></name> <name pos:line="3" pos:column="17">yy_create_buffer<pos:position pos:line="3" pos:column="33"/></name><argument_list pos:line="3" pos:column="33">( <argument><expr><name pos:line="3" pos:column="35">file<pos:position pos:line="3" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="41">size<pos:position pos:line="3" pos:column="45"/></name></expr></argument> )<pos:position pos:line="3" pos:column="47"/></argument_list>
<name pos:line="4" pos:column="1">FILE<pos:position pos:line="4" pos:column="5"/></name> <modifier pos:line="4" pos:column="6">*<pos:position pos:line="4" pos:column="7"/></modifier><name pos:line="4" pos:column="7">file<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="5" pos:column="1">int<pos:position pos:line="5" pos:column="4"/></name></type> <name pos:line="5" pos:column="5">size<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>
        <block pos:line="7" pos:column="9">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">YY_BUFFER_STATE<pos:position pos:line="8" pos:column="24"/></name></type> <name pos:line="8" pos:column="25">b<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

        <expr_stmt><expr><name pos:line="10" pos:column="9">b<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">YY_BUFFER_STATE<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator> <call><name pos:line="10" pos:column="31">yy_flex_alloc<pos:position pos:line="10" pos:column="44"/></name><argument_list pos:line="10" pos:column="44">( <argument><expr><sizeof pos:line="10" pos:column="46">sizeof<argument_list pos:line="10" pos:column="52">( <argument><expr pos:line="10" pos:column="54">struct <name pos:line="10" pos:column="61">yy_buffer_state<pos:position pos:line="10" pos:column="76"/></name></expr></argument> )<pos:position pos:line="10" pos:column="78"/></argument_list></sizeof></expr></argument> )<pos:position pos:line="10" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="81"/></expr_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">( <expr><operator pos:line="11" pos:column="14">!<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">b<pos:position pos:line="11" pos:column="17"/></name></expr> )<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">YY_FATAL_ERROR<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">( <argument><expr><literal type="string" pos:line="12" pos:column="33">"out of dynamic memory in yy_create_buffer()"<pos:position pos:line="12" pos:column="78"/></literal></expr></argument> )<pos:position pos:line="12" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="81"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name><name pos:line="14" pos:column="9">b<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">yy_buf_size<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">size<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>

        <comment type="block" pos:line="16" pos:column="9">/* yy_ch_buf has to be 2 characters longer than the size given because
         * we need to put in 2 end-of-buffer characters.
         */</comment>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">b<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">yy_ch_buf<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">char<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">*<pos:position pos:line="19" pos:column="31"/></operator><operator pos:line="19" pos:column="31">)<pos:position pos:line="19" pos:column="32"/></operator> <call><name pos:line="19" pos:column="33">yy_flex_alloc<pos:position pos:line="19" pos:column="46"/></name><argument_list pos:line="19" pos:column="46">( <argument><expr><name><name pos:line="19" pos:column="48">b<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">-&gt;<pos:position pos:line="19" pos:column="54"/></operator><name pos:line="19" pos:column="51">yy_buf_size<pos:position pos:line="19" pos:column="62"/></name></name> <operator pos:line="19" pos:column="63">+<pos:position pos:line="19" pos:column="64"/></operator> <literal type="number" pos:line="19" pos:column="65">2<pos:position pos:line="19" pos:column="66"/></literal></expr></argument> )<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="69"/></expr_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">( <expr><operator pos:line="20" pos:column="14">!<pos:position pos:line="20" pos:column="15"/></operator> <name><name pos:line="20" pos:column="16">b<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">yy_ch_buf<pos:position pos:line="20" pos:column="28"/></name></name></expr> )<pos:position pos:line="20" pos:column="30"/></condition><then pos:line="20" pos:column="30">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">YY_FATAL_ERROR<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">( <argument><expr><literal type="string" pos:line="21" pos:column="33">"out of dynamic memory in yy_create_buffer()"<pos:position pos:line="21" pos:column="78"/></literal></expr></argument> )<pos:position pos:line="21" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="81"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name><name pos:line="23" pos:column="9">b<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">yy_is_our_buffer<pos:position pos:line="23" pos:column="28"/></name></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <literal type="number" pos:line="23" pos:column="31">1<pos:position pos:line="23" pos:column="32"/></literal></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="25" pos:column="9">yy_init_buffer<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">( <argument><expr><name pos:line="25" pos:column="25">b<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">file<pos:position pos:line="25" pos:column="32"/></name></expr></argument> )<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>

        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">b<pos:position pos:line="27" pos:column="17"/></name></expr>;<pos:position pos:line="27" pos:column="18"/></return>
        }<pos:position pos:line="28" pos:column="10"/></block></unit>

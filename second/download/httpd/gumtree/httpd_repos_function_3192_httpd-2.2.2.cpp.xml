<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3192_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">file_dup<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_file_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">new_file<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, 
                             <parameter><decl><type><name pos:line="2" pos:column="30">apr_file_t<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">old_file<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">apr_pool_t<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">p<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="3" pos:column="30">int<pos:position pos:line="3" pos:column="33"/></name></type> <name pos:line="3" pos:column="34">which_dup<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="44"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">rv<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
    
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">which_dup<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">==<pos:position pos:line="7" pos:column="21"/></operator> <literal type="number" pos:line="7" pos:column="22">2<pos:position pos:line="7" pos:column="23"/></literal></expr>)<pos:position pos:line="7" pos:column="24"/></condition><then pos:line="7" pos:column="24"> <block pos:line="7" pos:column="25">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><operator pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">new_file<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">)<pos:position pos:line="8" pos:column="24"/></operator> <operator pos:line="8" pos:column="25">==<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">NULL<pos:position pos:line="8" pos:column="32"/></name></expr>)<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33"> <block pos:line="8" pos:column="34">{
            <comment type="block" pos:line="9" pos:column="13">/* We can't dup2 unless we have a valid new_file */</comment>
            <return pos:line="10" pos:column="13">return <expr><name pos:line="10" pos:column="20">APR_EINVAL<pos:position pos:line="10" pos:column="30"/></name></expr>;<pos:position pos:line="10" pos:column="31"/></return>
        }<pos:position pos:line="11" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="12" pos:column="9">rv<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">dup2<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name><name pos:line="12" pos:column="19">old_file<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">filedes<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><operator pos:line="12" pos:column="38">(<pos:position pos:line="12" pos:column="39"/></operator><operator pos:line="12" pos:column="39">*<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">new_file<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">)<pos:position pos:line="12" pos:column="49"/></operator><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">filedes<pos:position pos:line="12" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then> <else pos:line="13" pos:column="7">else <block pos:line="13" pos:column="12">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">dup<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name><name pos:line="14" pos:column="18">old_file<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">filedes<pos:position pos:line="14" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></else></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">rv<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">==<pos:position pos:line="17" pos:column="14"/></operator> <operator pos:line="17" pos:column="15">-<pos:position pos:line="17" pos:column="16"/></operator><literal type="number" pos:line="17" pos:column="16">1<pos:position pos:line="17" pos:column="17"/></literal></expr>)<pos:position pos:line="17" pos:column="18"/></condition><then pos:line="17" pos:column="18">
        <block type="pseudo"><return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">errno<pos:position pos:line="18" pos:column="21"/></name></expr>;<pos:position pos:line="18" pos:column="22"/></return></block></then></if>
    
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">which_dup<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">==<pos:position pos:line="20" pos:column="21"/></operator> <literal type="number" pos:line="20" pos:column="22">1<pos:position pos:line="20" pos:column="23"/></literal></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24"> <block pos:line="20" pos:column="25">{
        <expr_stmt><expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><operator pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="11">new_file<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">)<pos:position pos:line="21" pos:column="20"/></operator> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <operator pos:line="21" pos:column="23">(<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">apr_file_t<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">*<pos:position pos:line="21" pos:column="36"/></operator><operator pos:line="21" pos:column="36">)<pos:position pos:line="21" pos:column="37"/></operator><call><name pos:line="21" pos:column="37">apr_pcalloc<pos:position pos:line="21" pos:column="48"/></name><argument_list pos:line="21" pos:column="48">(<argument><expr><name pos:line="21" pos:column="49">p<pos:position pos:line="21" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="52">sizeof<argument_list pos:line="21" pos:column="58">(<argument><expr><name pos:line="21" pos:column="59">apr_file_t<pos:position pos:line="21" pos:column="69"/></name></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><operator pos:line="22" pos:column="10">*<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">new_file<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">)<pos:position pos:line="22" pos:column="20"/></operator><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">pool<pos:position pos:line="22" pos:column="26"/></name></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="29">p<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><operator pos:line="23" pos:column="10">*<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">new_file<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">)<pos:position pos:line="23" pos:column="20"/></operator><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">filedes<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="32">rv<pos:position pos:line="23" pos:column="34"/></name></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><operator pos:line="26" pos:column="5">(<pos:position pos:line="26" pos:column="6"/></operator><operator pos:line="26" pos:column="6">*<pos:position pos:line="26" pos:column="7"/></operator><name pos:line="26" pos:column="7">new_file<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">)<pos:position pos:line="26" pos:column="16"/></operator><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">fname<pos:position pos:line="26" pos:column="23"/></name></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <call><name pos:line="26" pos:column="26">apr_pstrdup<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><name pos:line="26" pos:column="38">p<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="41">old_file<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">-&gt;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="51">fname<pos:position pos:line="26" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="27" pos:column="5">(<pos:position pos:line="27" pos:column="6"/></operator><operator pos:line="27" pos:column="6">*<pos:position pos:line="27" pos:column="7"/></operator><name pos:line="27" pos:column="7">new_file<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">)<pos:position pos:line="27" pos:column="16"/></operator><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">buffered<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <name><name pos:line="27" pos:column="29">old_file<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">buffered<pos:position pos:line="27" pos:column="47"/></name></name></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* If the existing socket in a dup2 is already buffered, we
     * have an existing and valid (hopefully) mutex, so we don't
     * want to create it again as we could leak!
     */</comment>
<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><name pos:line="33" pos:column="5">APR_HAS_THREADS<pos:position pos:line="33" pos:column="20"/></name></expr></cpp:if>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><operator pos:line="34" pos:column="10">*<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="11">new_file<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">)<pos:position pos:line="34" pos:column="20"/></operator><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">buffered<pos:position pos:line="34" pos:column="30"/></name></name> <operator pos:line="34" pos:column="31">&amp;&amp;<pos:position pos:line="34" pos:column="41"/></operator> <operator pos:line="34" pos:column="34">!<pos:position pos:line="34" pos:column="35"/></operator><name><operator pos:line="34" pos:column="35">(<pos:position pos:line="34" pos:column="36"/></operator><operator pos:line="34" pos:column="36">*<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="37">new_file<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">)<pos:position pos:line="34" pos:column="46"/></operator><operator pos:line="34" pos:column="46">-&gt;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="48">thlock<pos:position pos:line="34" pos:column="54"/></name></name> <operator pos:line="34" pos:column="55">&amp;&amp;<pos:position pos:line="34" pos:column="65"/></operator> <name><name pos:line="34" pos:column="58">old_file<pos:position pos:line="34" pos:column="66"/></name><operator pos:line="34" pos:column="66">-&gt;<pos:position pos:line="34" pos:column="71"/></operator><name pos:line="34" pos:column="68">thlock<pos:position pos:line="34" pos:column="74"/></name></name></expr>)<pos:position pos:line="34" pos:column="75"/></condition><then pos:line="34" pos:column="75"> <block pos:line="34" pos:column="76">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">apr_thread_mutex_create<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><operator pos:line="35" pos:column="33">&amp;<pos:position pos:line="35" pos:column="38"/></operator><operator pos:line="35" pos:column="34">(<pos:position pos:line="35" pos:column="35"/></operator><name><operator pos:line="35" pos:column="35">(<pos:position pos:line="35" pos:column="36"/></operator><operator pos:line="35" pos:column="36">*<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="37">new_file<pos:position pos:line="35" pos:column="45"/></name><operator pos:line="35" pos:column="45">)<pos:position pos:line="35" pos:column="46"/></operator><operator pos:line="35" pos:column="46">-&gt;<pos:position pos:line="35" pos:column="51"/></operator><name pos:line="35" pos:column="48">thlock<pos:position pos:line="35" pos:column="54"/></name></name><operator pos:line="35" pos:column="54">)<pos:position pos:line="35" pos:column="55"/></operator></expr></argument>,
                                <argument><expr><name pos:line="36" pos:column="33">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="36" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="59">p<pos:position pos:line="36" pos:column="60"/></name></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>
    <comment type="block" pos:line="39" pos:column="5">/* As above, only create the buffer if we haven't already
     * got one.
     */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><operator pos:line="42" pos:column="9">(<pos:position pos:line="42" pos:column="10"/></operator><operator pos:line="42" pos:column="10">*<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="11">new_file<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">)<pos:position pos:line="42" pos:column="20"/></operator><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">buffered<pos:position pos:line="42" pos:column="30"/></name></name> <operator pos:line="42" pos:column="31">&amp;&amp;<pos:position pos:line="42" pos:column="41"/></operator> <operator pos:line="42" pos:column="34">!<pos:position pos:line="42" pos:column="35"/></operator><name><operator pos:line="42" pos:column="35">(<pos:position pos:line="42" pos:column="36"/></operator><operator pos:line="42" pos:column="36">*<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="37">new_file<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">)<pos:position pos:line="42" pos:column="46"/></operator><operator pos:line="42" pos:column="46">-&gt;<pos:position pos:line="42" pos:column="51"/></operator><name pos:line="42" pos:column="48">buffer<pos:position pos:line="42" pos:column="54"/></name></name></expr>)<pos:position pos:line="42" pos:column="55"/></condition><then pos:line="42" pos:column="55"> <block pos:line="42" pos:column="56">{
        <expr_stmt><expr><name><operator pos:line="43" pos:column="9">(<pos:position pos:line="43" pos:column="10"/></operator><operator pos:line="43" pos:column="10">*<pos:position pos:line="43" pos:column="11"/></operator><name pos:line="43" pos:column="11">new_file<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">)<pos:position pos:line="43" pos:column="20"/></operator><operator pos:line="43" pos:column="20">-&gt;<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="22">buffer<pos:position pos:line="43" pos:column="28"/></name></name> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <call><name pos:line="43" pos:column="31">apr_palloc<pos:position pos:line="43" pos:column="41"/></name><argument_list pos:line="43" pos:column="41">(<argument><expr><name pos:line="43" pos:column="42">p<pos:position pos:line="43" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="45">APR_FILE_BUFSIZE<pos:position pos:line="43" pos:column="61"/></name></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="46" pos:column="5">/* this is the way dup() works */</comment>
    <expr_stmt><expr><name><operator pos:line="47" pos:column="5">(<pos:position pos:line="47" pos:column="6"/></operator><operator pos:line="47" pos:column="6">*<pos:position pos:line="47" pos:column="7"/></operator><name pos:line="47" pos:column="7">new_file<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">)<pos:position pos:line="47" pos:column="16"/></operator><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">blocking<pos:position pos:line="47" pos:column="26"/></name></name> <operator pos:line="47" pos:column="27">=<pos:position pos:line="47" pos:column="28"/></operator> <name><name pos:line="47" pos:column="29">old_file<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">-&gt;<pos:position pos:line="47" pos:column="42"/></operator><name pos:line="47" pos:column="39">blocking<pos:position pos:line="47" pos:column="47"/></name></name></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt> 

    <comment type="block" pos:line="49" pos:column="5">/* make sure unget behavior is consistent */</comment>
    <expr_stmt><expr><name><operator pos:line="50" pos:column="5">(<pos:position pos:line="50" pos:column="6"/></operator><operator pos:line="50" pos:column="6">*<pos:position pos:line="50" pos:column="7"/></operator><name pos:line="50" pos:column="7">new_file<pos:position pos:line="50" pos:column="15"/></name><operator pos:line="50" pos:column="15">)<pos:position pos:line="50" pos:column="16"/></operator><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">ungetchar<pos:position pos:line="50" pos:column="27"/></name></name> <operator pos:line="50" pos:column="28">=<pos:position pos:line="50" pos:column="29"/></operator> <name><name pos:line="50" pos:column="30">old_file<pos:position pos:line="50" pos:column="38"/></name><operator pos:line="50" pos:column="38">-&gt;<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="40">ungetchar<pos:position pos:line="50" pos:column="49"/></name></name></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="52" pos:column="5">/* apr_file_dup2() retains the original cleanup, reflecting 
     * the existing inherit and nocleanup flags.  This means, 
     * that apr_file_dup2() cannot be called against an apr_file_t
     * already closed with apr_file_close, because the expected
     * cleanup was already killed.
     */</comment>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">which_dup<pos:position pos:line="58" pos:column="18"/></name> <operator pos:line="58" pos:column="19">==<pos:position pos:line="58" pos:column="21"/></operator> <literal type="number" pos:line="58" pos:column="22">2<pos:position pos:line="58" pos:column="23"/></literal></expr>)<pos:position pos:line="58" pos:column="24"/></condition><then pos:line="58" pos:column="24"> <block pos:line="58" pos:column="25">{
        <return pos:line="59" pos:column="9">return <expr><name pos:line="59" pos:column="16">APR_SUCCESS<pos:position pos:line="59" pos:column="27"/></name></expr>;<pos:position pos:line="59" pos:column="28"/></return>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="62" pos:column="5">/* apr_file_dup() retains all old_file flags with the exceptions
     * of APR_INHERIT and APR_FILE_NOCLEANUP.
     * The user must call apr_file_inherit_set() on the dupped 
     * apr_file_t when desired.
     */</comment>
    <expr_stmt><expr><name><operator pos:line="67" pos:column="5">(<pos:position pos:line="67" pos:column="6"/></operator><operator pos:line="67" pos:column="6">*<pos:position pos:line="67" pos:column="7"/></operator><name pos:line="67" pos:column="7">new_file<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">)<pos:position pos:line="67" pos:column="16"/></operator><operator pos:line="67" pos:column="16">-&gt;<pos:position pos:line="67" pos:column="21"/></operator><name pos:line="67" pos:column="18">flags<pos:position pos:line="67" pos:column="23"/></name></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <name><name pos:line="67" pos:column="26">old_file<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">-&gt;<pos:position pos:line="67" pos:column="39"/></operator><name pos:line="67" pos:column="36">flags<pos:position pos:line="67" pos:column="41"/></name></name>
                       <operator pos:line="68" pos:column="24">&amp;<pos:position pos:line="68" pos:column="29"/></operator> <operator pos:line="68" pos:column="26">~<pos:position pos:line="68" pos:column="27"/></operator><operator pos:line="68" pos:column="27">(<pos:position pos:line="68" pos:column="28"/></operator><name pos:line="68" pos:column="28">APR_INHERIT<pos:position pos:line="68" pos:column="39"/></name> <operator pos:line="68" pos:column="40">|<pos:position pos:line="68" pos:column="41"/></operator> <name pos:line="68" pos:column="42">APR_FILE_NOCLEANUP<pos:position pos:line="68" pos:column="60"/></name><operator pos:line="68" pos:column="60">)<pos:position pos:line="68" pos:column="61"/></operator></expr>;<pos:position pos:line="68" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="70" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="70" pos:column="30"/></name><argument_list pos:line="70" pos:column="30">(<argument><expr><name><operator pos:line="70" pos:column="31">(<pos:position pos:line="70" pos:column="32"/></operator><operator pos:line="70" pos:column="32">*<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="33">new_file<pos:position pos:line="70" pos:column="41"/></name><operator pos:line="70" pos:column="41">)<pos:position pos:line="70" pos:column="42"/></operator><operator pos:line="70" pos:column="42">-&gt;<pos:position pos:line="70" pos:column="47"/></operator><name pos:line="70" pos:column="44">pool<pos:position pos:line="70" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="50">(<pos:position pos:line="70" pos:column="51"/></operator><name pos:line="70" pos:column="51">void<pos:position pos:line="70" pos:column="55"/></name> <operator pos:line="70" pos:column="56">*<pos:position pos:line="70" pos:column="57"/></operator><operator pos:line="70" pos:column="57">)<pos:position pos:line="70" pos:column="58"/></operator><operator pos:line="70" pos:column="58">(<pos:position pos:line="70" pos:column="59"/></operator><operator pos:line="70" pos:column="59">*<pos:position pos:line="70" pos:column="60"/></operator><name pos:line="70" pos:column="60">new_file<pos:position pos:line="70" pos:column="68"/></name><operator pos:line="70" pos:column="68">)<pos:position pos:line="70" pos:column="69"/></operator></expr></argument>,
                              <argument><expr><name pos:line="71" pos:column="31">apr_unix_file_cleanup<pos:position pos:line="71" pos:column="52"/></name></expr></argument>, 
                              <argument><expr><name pos:line="72" pos:column="31">apr_unix_file_cleanup<pos:position pos:line="72" pos:column="52"/></name></expr></argument>)<pos:position pos:line="72" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="54"/></expr_stmt>
<cpp:ifndef pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">ifndef<pos:position pos:line="73" pos:column="8"/></cpp:directive> <name pos:line="73" pos:column="9">WAITIO_USES_POLL<pos:position pos:line="73" pos:column="25"/></name></cpp:ifndef>
    <comment type="block" pos:line="74" pos:column="5">/* Start out with no pollset.  apr_wait_for_io_or_timeout() will
     * initialize the pollset if needed.
     */</comment>
    <expr_stmt><expr><name><operator pos:line="77" pos:column="5">(<pos:position pos:line="77" pos:column="6"/></operator><operator pos:line="77" pos:column="6">*<pos:position pos:line="77" pos:column="7"/></operator><name pos:line="77" pos:column="7">new_file<pos:position pos:line="77" pos:column="15"/></name><operator pos:line="77" pos:column="15">)<pos:position pos:line="77" pos:column="16"/></operator><operator pos:line="77" pos:column="16">-&gt;<pos:position pos:line="77" pos:column="21"/></operator><name pos:line="77" pos:column="18">pollset<pos:position pos:line="77" pos:column="25"/></name></name> <operator pos:line="77" pos:column="26">=<pos:position pos:line="77" pos:column="27"/></operator> <name pos:line="77" pos:column="28">NULL<pos:position pos:line="77" pos:column="32"/></name></expr>;<pos:position pos:line="77" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif<pos:position pos:line="78" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="79" pos:column="5">return <expr><name pos:line="79" pos:column="12">APR_SUCCESS<pos:position pos:line="79" pos:column="23"/></name></expr>;<pos:position pos:line="79" pos:column="24"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

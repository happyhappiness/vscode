<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2994.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">simple_pre_config<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">apr_pool_t<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">pconf<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">apr_pool_t<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type> <name pos:line="2" pos:column="52">plog<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">apr_pool_t<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type> <name pos:line="2" pos:column="71">ptemp<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">run_debug<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">simple_core_t<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">sc<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* this is our first 'real' entry point, so setup everything here. */</comment>
    <expr_stmt><expr><name pos:line="9" pos:column="5">rv<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <call><name pos:line="9" pos:column="10">simple_core_init_once<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">()<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">rv<pos:position pos:line="11" pos:column="11"/></name></expr>)<pos:position pos:line="11" pos:column="12"/></condition><then pos:line="11" pos:column="12"> <block pos:line="11" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ap_log_error<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">APLOG_MARK<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="34">APLOG_CRIT<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">rv<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">NULL<pos:position pos:line="12" pos:column="54"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="13" pos:column="22">"simple_core_init_once: Fatal Error Encountered"<pos:position pos:line="13" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="14" pos:column="42"/></name></expr>;<pos:position pos:line="14" pos:column="43"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">sc<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">simple_core_get<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">()<pos:position pos:line="17" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">sc<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">restart_num<pos:position pos:line="19" pos:column="20"/></name></name><operator pos:line="19" pos:column="20">++<pos:position pos:line="19" pos:column="22"/></operator></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">run_debug<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">ap_exists_config_define<pos:position pos:line="21" pos:column="40"/></name><argument_list pos:line="21" pos:column="40">(<argument><expr><literal type="string" pos:line="21" pos:column="41">"DEBUG"<pos:position pos:line="21" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">run_debug<pos:position pos:line="23" pos:column="18"/></name></expr>)<pos:position pos:line="23" pos:column="19"/></condition><then pos:line="23" pos:column="19"> <block pos:line="23" pos:column="20">{
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">sc<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">run_foreground<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <literal type="number" pos:line="24" pos:column="30">1<pos:position pos:line="24" pos:column="31"/></literal></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">sc<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">run_single_process<pos:position pos:line="25" pos:column="31"/></name></name> <operator pos:line="25" pos:column="32">=<pos:position pos:line="25" pos:column="33"/></operator> <literal type="number" pos:line="25" pos:column="34">1<pos:position pos:line="25" pos:column="35"/></literal></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then>
    <else pos:line="27" pos:column="5">else <block pos:line="27" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">sc<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">run_foreground<pos:position pos:line="28" pos:column="27"/></name></name> <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <call><name pos:line="28" pos:column="30">ap_exists_config_define<pos:position pos:line="28" pos:column="53"/></name><argument_list pos:line="28" pos:column="53">(<argument><expr><literal type="string" pos:line="28" pos:column="54">"FOREGROUND"<pos:position pos:line="28" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">sc<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">restart_num<pos:position pos:line="31" pos:column="24"/></name></name> <operator pos:line="31" pos:column="25">==<pos:position pos:line="31" pos:column="27"/></operator> <literal type="number" pos:line="31" pos:column="28">2<pos:position pos:line="31" pos:column="29"/></literal></expr>)<pos:position pos:line="31" pos:column="30"/></condition><then pos:line="31" pos:column="30"> <block pos:line="31" pos:column="31">{

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">sc<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">run_foreground<pos:position pos:line="33" pos:column="31"/></name></name></expr>)<pos:position pos:line="33" pos:column="32"/></condition><then pos:line="33" pos:column="32"> <block pos:line="33" pos:column="33">{
            <expr_stmt><expr><name pos:line="34" pos:column="13">rv<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">apr_proc_detach<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><name pos:line="34" pos:column="34">APR_PROC_DETACH_FOREGROUND<pos:position pos:line="34" pos:column="60"/></name></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then>
        <else pos:line="36" pos:column="9">else <block pos:line="36" pos:column="14">{
            <expr_stmt><expr><name pos:line="37" pos:column="13">rv<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">apr_proc_detach<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">APR_PROC_DETACH_DAEMONIZE<pos:position pos:line="37" pos:column="59"/></name></expr></argument>)<pos:position pos:line="37" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></else></if>

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">rv<pos:position pos:line="40" pos:column="15"/></name></expr>)<pos:position pos:line="40" pos:column="16"/></condition><then pos:line="40" pos:column="16"> <block pos:line="40" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">ap_log_error<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">APLOG_MARK<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="38">APLOG_CRIT<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">rv<pos:position pos:line="41" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="54">NULL<pos:position pos:line="41" pos:column="58"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="42" pos:column="26">"simple_pre_config: apr_proc_detach(%s) failed"<pos:position pos:line="42" pos:column="73"/></literal></expr></argument>,
                         <argument><expr><ternary><condition><expr><name><name pos:line="43" pos:column="26">sc<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">-&gt;<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="30">run_foreground<pos:position pos:line="43" pos:column="44"/></name></name></expr> ?<pos:position pos:line="43" pos:column="46"/></condition><then pos:line="43" pos:column="46"> <expr><literal type="string" pos:line="43" pos:column="47">"FOREGROUND"<pos:position pos:line="43" pos:column="59"/></literal></expr> <pos:position pos:line="43" pos:column="60"/></then><else pos:line="43" pos:column="60">: <expr><literal type="string" pos:line="43" pos:column="62">"DAEMONIZE"<pos:position pos:line="43" pos:column="73"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="43" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="75"/></expr_stmt>
            <return pos:line="44" pos:column="13">return <expr><name pos:line="44" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="44" pos:column="46"/></name></expr>;<pos:position pos:line="44" pos:column="47"/></return>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">OK<pos:position pos:line="48" pos:column="14"/></name></expr>;<pos:position pos:line="48" pos:column="15"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

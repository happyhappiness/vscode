<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1736_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_array_header_t<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">proxy_vars<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">request_rec<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">r<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">apr_array_header_t<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">hdr<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_array_header_t<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">ret<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><call><name pos:line="5" pos:column="31">apr_array_make<pos:position pos:line="5" pos:column="45"/></name><argument_list pos:line="5" pos:column="45">(<argument><expr><name><name pos:line="5" pos:column="46">r<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">-&gt;<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="49">pool<pos:position pos:line="5" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="55">hdr<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">-&gt;<pos:position pos:line="5" pos:column="63"/></operator><name pos:line="5" pos:column="60">nelts<pos:position pos:line="5" pos:column="65"/></name></name></expr></argument>,
                                             <argument><expr><sizeof pos:line="6" pos:column="46">sizeof <argument_list pos:line="6" pos:column="53">(<argument><expr pos:line="6" pos:column="54">struct <name pos:line="6" pos:column="61">proxy_alias<pos:position pos:line="6" pos:column="72"/></name></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="75"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">proxy_alias<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">old<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><operator pos:line="7" pos:column="31">(<pos:position pos:line="7" pos:column="32"/></operator>struct <name pos:line="7" pos:column="39">proxy_alias<pos:position pos:line="7" pos:column="50"/></name> <operator pos:line="7" pos:column="51">*<pos:position pos:line="7" pos:column="52"/></operator><operator pos:line="7" pos:column="52">)<pos:position pos:line="7" pos:column="53"/></operator> <name><name pos:line="7" pos:column="54">hdr<pos:position pos:line="7" pos:column="57"/></name><operator pos:line="7" pos:column="57">-&gt;<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="59">elts<pos:position pos:line="7" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="64"/></decl_stmt>

    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><expr><name pos:line="9" pos:column="10">i<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></init> <condition><expr><name pos:line="9" pos:column="17">i<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">&lt;<pos:position pos:line="9" pos:column="23"/></operator> <name><name pos:line="9" pos:column="21">hdr<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">nelts<pos:position pos:line="9" pos:column="31"/></name></name></expr>;<pos:position pos:line="9" pos:column="32"/></condition> <incr><expr><operator pos:line="9" pos:column="33">++<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">i<pos:position pos:line="9" pos:column="36"/></name></expr></incr>)<pos:position pos:line="9" pos:column="37"/></control> <block pos:line="9" pos:column="38">{
        <decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">proxy_alias<pos:position pos:line="10" pos:column="27"/></name></name> <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">newcopy<pos:position pos:line="10" pos:column="36"/></name> <init pos:line="10" pos:column="37">= <expr><call><name pos:line="10" pos:column="39">apr_array_push<pos:position pos:line="10" pos:column="53"/></name><argument_list pos:line="10" pos:column="53">(<argument><expr><name pos:line="10" pos:column="54">ret<pos:position pos:line="10" pos:column="57"/></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="59"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">newcopy<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">fake<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <ternary><condition><expr><operator pos:line="11" pos:column="25">(<pos:position pos:line="11" pos:column="26"/></operator><name><name pos:line="11" pos:column="26">old<pos:position pos:line="11" pos:column="29"/></name><index pos:line="11" pos:column="29">[<expr><name pos:line="11" pos:column="30">i<pos:position pos:line="11" pos:column="31"/></name></expr>]<pos:position pos:line="11" pos:column="32"/></index></name><operator pos:line="11" pos:column="32">.<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">flags<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">&amp;<pos:position pos:line="11" pos:column="44"/></operator> <name pos:line="11" pos:column="41">PROXYPASS_INTERPOLATE<pos:position pos:line="11" pos:column="62"/></name><operator pos:line="11" pos:column="62">)<pos:position pos:line="11" pos:column="63"/></operator></expr>
                        ?<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26"> <expr><call><name pos:line="12" pos:column="27">proxy_interpolate<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><name pos:line="12" pos:column="45">r<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="48">old<pos:position pos:line="12" pos:column="51"/></name><index pos:line="12" pos:column="51">[<expr><name pos:line="12" pos:column="52">i<pos:position pos:line="12" pos:column="53"/></name></expr>]<pos:position pos:line="12" pos:column="54"/></index></name><operator pos:line="12" pos:column="54">.<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="55">fake<pos:position pos:line="12" pos:column="59"/></name></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr> <pos:position pos:line="12" pos:column="61"/></then><else pos:line="12" pos:column="61">: <expr><name><name pos:line="12" pos:column="63">old<pos:position pos:line="12" pos:column="66"/></name><index pos:line="12" pos:column="66">[<expr><name pos:line="12" pos:column="67">i<pos:position pos:line="12" pos:column="68"/></name></expr>]<pos:position pos:line="12" pos:column="69"/></index></name><operator pos:line="12" pos:column="69">.<pos:position pos:line="12" pos:column="70"/></operator><name pos:line="12" pos:column="70">fake<pos:position pos:line="12" pos:column="74"/></name></expr></else></ternary></expr>;<pos:position pos:line="12" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">newcopy<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">real<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <ternary><condition><expr><operator pos:line="13" pos:column="25">(<pos:position pos:line="13" pos:column="26"/></operator><name><name pos:line="13" pos:column="26">old<pos:position pos:line="13" pos:column="29"/></name><index pos:line="13" pos:column="29">[<expr><name pos:line="13" pos:column="30">i<pos:position pos:line="13" pos:column="31"/></name></expr>]<pos:position pos:line="13" pos:column="32"/></index></name><operator pos:line="13" pos:column="32">.<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">flags<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">&amp;<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="41">PROXYPASS_INTERPOLATE<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">)<pos:position pos:line="13" pos:column="63"/></operator></expr>
                        ?<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26"> <expr><call><name pos:line="14" pos:column="27">proxy_interpolate<pos:position pos:line="14" pos:column="44"/></name><argument_list pos:line="14" pos:column="44">(<argument><expr><name pos:line="14" pos:column="45">r<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="48">old<pos:position pos:line="14" pos:column="51"/></name><index pos:line="14" pos:column="51">[<expr><name pos:line="14" pos:column="52">i<pos:position pos:line="14" pos:column="53"/></name></expr>]<pos:position pos:line="14" pos:column="54"/></index></name><operator pos:line="14" pos:column="54">.<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="55">real<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr> <pos:position pos:line="14" pos:column="61"/></then><else pos:line="14" pos:column="61">: <expr><name><name pos:line="14" pos:column="63">old<pos:position pos:line="14" pos:column="66"/></name><index pos:line="14" pos:column="66">[<expr><name pos:line="14" pos:column="67">i<pos:position pos:line="14" pos:column="68"/></name></expr>]<pos:position pos:line="14" pos:column="69"/></index></name><operator pos:line="14" pos:column="69">.<pos:position pos:line="14" pos:column="70"/></operator><name pos:line="14" pos:column="70">real<pos:position pos:line="14" pos:column="74"/></name></expr></else></ternary></expr>;<pos:position pos:line="14" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></for>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">ret<pos:position pos:line="16" pos:column="15"/></name></expr>;<pos:position pos:line="16" pos:column="16"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3137_httpd-2.0.61.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">include_hdrs_in_length<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">HAVE_SYS_SYSCTL_H<pos:position pos:line="3" pos:column="25"/></name></cpp:ifdef>
<comment type="block" pos:line="4" pos:column="1">/* this assumes: 
 *   if the header exists, so does the sysctlbyname() syscall, and 
 *   if the header doesn't exist, the kernel is really old
 */</comment>

<comment type="block" pos:line="9" pos:column="1">/* see 
 * http://www.freebsd.org/cgi/cvsweb.cgi/src/sys/sys/param.h#rev1.61.2.29 
 * for kernel version number
 * 
 * http://www.freebsd.org/cgi/cvsweb.cgi/src/sys/kern/uipc_syscalls.c#rev1.65.2.10
 * for the sendfile patch
 */</comment>
<cpp:define pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">define<pos:position pos:line="16" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="16" pos:column="9">KERNEL_WITH_SENDFILE_LENGTH_FIX<pos:position pos:line="16" pos:column="40"/></name></cpp:macro> <cpp:value pos:line="16" pos:column="41">460001<pos:position pos:line="16" pos:column="47"/></cpp:value></cpp:define>

    <typedef pos:line="18" pos:column="5">typedef <type><enum pos:line="18" pos:column="13">enum <block pos:line="18" pos:column="18">{ <decl><name pos:line="18" pos:column="20">UNKNOWN<pos:position pos:line="18" pos:column="27"/></name> <init pos:line="18" pos:column="28">= <expr><literal type="number" pos:line="18" pos:column="30">0<pos:position pos:line="18" pos:column="31"/></literal></expr></init></decl>, 
                   <decl><name pos:line="19" pos:column="20">NEW<pos:position pos:line="19" pos:column="23"/></name></decl>, 
                   <decl><name pos:line="20" pos:column="20">OLD<pos:position pos:line="20" pos:column="23"/></name></decl> 
                 }<pos:position pos:line="21" pos:column="19"/></block></enum></type> <name pos:line="21" pos:column="20">api_e<pos:position pos:line="21" pos:column="25"/></name>;<pos:position pos:line="21" pos:column="26"/></typedef>

    <decl_stmt><decl><specifier pos:line="23" pos:column="5">static<pos:position pos:line="23" pos:column="11"/></specifier> <type><name pos:line="23" pos:column="12">api_e<pos:position pos:line="23" pos:column="17"/></name></type> <name pos:line="23" pos:column="18">api<pos:position pos:line="23" pos:column="21"/></name></decl>;<pos:position pos:line="23" pos:column="22"/></decl_stmt> 
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">int<pos:position pos:line="24" pos:column="8"/></name></type> <name pos:line="24" pos:column="9">kernel_version<pos:position pos:line="24" pos:column="23"/></name></decl>;<pos:position pos:line="24" pos:column="24"/></decl_stmt>  
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">apr_size_t<pos:position pos:line="25" pos:column="15"/></name></type> <name pos:line="25" pos:column="16">kernel_version_size<pos:position pos:line="25" pos:column="35"/></name></decl>;<pos:position pos:line="25" pos:column="36"/></decl_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">api<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">!=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">UNKNOWN<pos:position pos:line="27" pos:column="23"/></name></expr>)<pos:position pos:line="27" pos:column="24"/></condition><then pos:line="27" pos:column="24"> <block pos:line="27" pos:column="25">{
        <return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">api<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">==<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">OLD<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">)<pos:position pos:line="28" pos:column="28"/></operator></expr>;<pos:position pos:line="28" pos:column="29"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="30" pos:column="5">kernel_version<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <literal type="number" pos:line="30" pos:column="22">0<pos:position pos:line="30" pos:column="23"/></literal></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>    <comment type="block" pos:line="30" pos:column="28">/* silence compiler warning */</comment>
    <expr_stmt><expr><name pos:line="31" pos:column="5">kernel_version_size<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <sizeof pos:line="31" pos:column="27">sizeof<argument_list pos:line="31" pos:column="33">(<argument><expr><name pos:line="31" pos:column="34">kernel_version<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></sizeof></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">sysctlbyname<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><literal type="string" pos:line="32" pos:column="22">"kern.osreldate"<pos:position pos:line="32" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="40">&amp;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="41">kernel_version<pos:position pos:line="32" pos:column="55"/></name></expr></argument>, 
                     <argument><expr><operator pos:line="33" pos:column="22">&amp;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="23">kernel_version_size<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">NULL<pos:position pos:line="33" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="50">0<pos:position pos:line="33" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call> <operator pos:line="33" pos:column="53">==<pos:position pos:line="33" pos:column="55"/></operator> <literal type="number" pos:line="33" pos:column="56">0<pos:position pos:line="33" pos:column="57"/></literal> <operator pos:line="33" pos:column="58">&amp;&amp;<pos:position pos:line="33" pos:column="68"/></operator>
        <name pos:line="34" pos:column="9">kernel_version<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">&lt;<pos:position pos:line="34" pos:column="28"/></operator> <name pos:line="34" pos:column="26">KERNEL_WITH_SENDFILE_LENGTH_FIX<pos:position pos:line="34" pos:column="57"/></name></expr>)<pos:position pos:line="34" pos:column="58"/></condition><then pos:line="34" pos:column="58"> <block pos:line="34" pos:column="59">{
        <expr_stmt><expr><name pos:line="35" pos:column="9">api<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <name pos:line="35" pos:column="15">OLD<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt>
        <return pos:line="36" pos:column="9">return <expr><literal type="number" pos:line="36" pos:column="16">1<pos:position pos:line="36" pos:column="17"/></literal></expr>;<pos:position pos:line="36" pos:column="18"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="38" pos:column="5">/* size of kern.osreldate's output might change in the future 
     * causing the sysctlbyname to fail,
     * but if it's the future, we should use the newer API 
     */</comment>
    <expr_stmt><expr><name pos:line="42" pos:column="5">api<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">=<pos:position pos:line="42" pos:column="10"/></operator> <name pos:line="42" pos:column="11">NEW<pos:position pos:line="42" pos:column="14"/></name></expr>;<pos:position pos:line="42" pos:column="15"/></expr_stmt>
    <return pos:line="43" pos:column="5">return <expr><literal type="number" pos:line="43" pos:column="12">0<pos:position pos:line="43" pos:column="13"/></literal></expr>;<pos:position pos:line="43" pos:column="14"/></return>
<cpp:else pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">else<pos:position pos:line="44" pos:column="6"/></cpp:directive></cpp:else>
    <comment type="block" pos:line="45" pos:column="5">/* the build system's kernel is older than 3.4.  Use the old API */</comment>
    <return pos:line="46" pos:column="5">return <expr><literal type="number" pos:line="46" pos:column="12">1<pos:position pos:line="46" pos:column="13"/></literal></expr>;<pos:position pos:line="46" pos:column="14"/></return>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif<pos:position pos:line="47" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

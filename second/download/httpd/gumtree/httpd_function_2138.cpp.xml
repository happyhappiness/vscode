<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2138.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">open_error_log<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">server_rec<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">s<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">is_main<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">apr_pool_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">p<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">fname<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rc<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></operator><name><name pos:line="6" pos:column="10">s<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">error_fname<pos:position pos:line="6" pos:column="24"/></name></name> <operator pos:line="6" pos:column="25">==<pos:position pos:line="6" pos:column="27"/></operator> <literal type="char" pos:line="6" pos:column="28">'|'<pos:position pos:line="6" pos:column="31"/></literal></expr>)<pos:position pos:line="6" pos:column="32"/></condition><then pos:line="6" pos:column="32"> <block pos:line="6" pos:column="33">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">apr_file_t<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">dummy<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">NULL<pos:position pos:line="7" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">apr_cmdtype_e<pos:position pos:line="8" pos:column="22"/></name></type> <name pos:line="8" pos:column="23">cmdtype<pos:position pos:line="8" pos:column="30"/></name> <init pos:line="8" pos:column="31">= <expr><name pos:line="8" pos:column="33">APR_SHELLCMD_ENV<pos:position pos:line="8" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">fname<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <name><name pos:line="9" pos:column="17">s<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">error_fname<pos:position pos:line="9" pos:column="31"/></name></name> <operator pos:line="9" pos:column="32">+<pos:position pos:line="9" pos:column="33"/></operator> <literal type="number" pos:line="9" pos:column="34">1<pos:position pos:line="9" pos:column="35"/></literal></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>

        <comment type="block" pos:line="11" pos:column="9">/* In 2.4 favor PROGRAM_ENV, accept "||prog" syntax for compatibility
         * and "|$cmd" to override the default.
         * Any 2.2 backport would continue to favor SHELLCMD_ENV so there 
         * accept "||prog" to override, and "|$cmd" to ease conversion.
         */</comment>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">*<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">fname<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">==<pos:position pos:line="16" pos:column="22"/></operator> <literal type="char" pos:line="16" pos:column="23">'|'<pos:position pos:line="16" pos:column="26"/></literal></expr>)<pos:position pos:line="16" pos:column="27"/></condition><then pos:line="16" pos:column="27"> <block pos:line="16" pos:column="28">{
            <expr_stmt><expr><name pos:line="17" pos:column="13">cmdtype<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">APR_PROGRAM_ENV<pos:position pos:line="17" pos:column="38"/></name></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="18" pos:column="13">++<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">fname<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">fname<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">==<pos:position pos:line="20" pos:column="22"/></operator> <literal type="char" pos:line="20" pos:column="23">'$'<pos:position pos:line="20" pos:column="26"/></literal></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="21" pos:column="13">++<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">fname<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt></block></then></if>
	
        <comment type="block" pos:line="23" pos:column="9">/* Spawn a new child logger.  If this is the main server_rec,
         * the new child must use a dummy stderr since the current
         * stderr might be a pipe to the old logger.  Otherwise, the
         * child inherits the parents stderr. */</comment>
        <expr_stmt><expr><name pos:line="27" pos:column="9">rc<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">log_child<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">p<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="27">fname<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="34">&amp;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="35">dummy<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="42">cmdtype<pos:position pos:line="27" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="51">is_main<pos:position pos:line="27" pos:column="58"/></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">rc<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">!=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">APR_SUCCESS<pos:position pos:line="28" pos:column="30"/></name></expr>)<pos:position pos:line="28" pos:column="31"/></condition><then pos:line="28" pos:column="31"> <block pos:line="28" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">ap_log_error<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">APLOG_MARK<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">APLOG_STARTUP<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="53">rc<pos:position pos:line="29" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="57">NULL<pos:position pos:line="29" pos:column="61"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="30" pos:column="26">"Couldn't start ErrorLog process"<pos:position pos:line="30" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt>
            <return pos:line="31" pos:column="13">return <expr><name pos:line="31" pos:column="20">DONE<pos:position pos:line="31" pos:column="24"/></name></expr>;<pos:position pos:line="31" pos:column="25"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="34" pos:column="9">s<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">error_log<pos:position pos:line="34" pos:column="21"/></name></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">dummy<pos:position pos:line="34" pos:column="29"/></name></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then>

<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">HAVE_SYSLOG<pos:position pos:line="37" pos:column="19"/></name></cpp:ifdef>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><operator pos:line="38" pos:column="14">!<pos:position pos:line="38" pos:column="15"/></operator><call><name pos:line="38" pos:column="15">strncasecmp<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><name><name pos:line="38" pos:column="27">s<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">-&gt;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="30">error_fname<pos:position pos:line="38" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="43">"syslog"<pos:position pos:line="38" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="53">6<pos:position pos:line="38" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="56"/></condition><then pos:line="38" pos:column="56"> <block pos:line="38" pos:column="57">{
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">(<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">fname<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <call><name pos:line="39" pos:column="22">strchr<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><name><name pos:line="39" pos:column="29">s<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">error_fname<pos:position pos:line="39" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="39" pos:column="45">':'<pos:position pos:line="39" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call><operator pos:line="39" pos:column="49">)<pos:position pos:line="39" pos:column="50"/></operator></expr>)<pos:position pos:line="39" pos:column="51"/></condition><then pos:line="39" pos:column="51"> <block pos:line="39" pos:column="52">{
            <decl_stmt><decl><type><specifier pos:line="40" pos:column="13">const<pos:position pos:line="40" pos:column="18"/></specifier> <name pos:line="40" pos:column="19">TRANS<pos:position pos:line="40" pos:column="24"/></name> <modifier pos:line="40" pos:column="25">*<pos:position pos:line="40" pos:column="26"/></modifier></type><name pos:line="40" pos:column="26">fac<pos:position pos:line="40" pos:column="29"/></name></decl>;<pos:position pos:line="40" pos:column="30"/></decl_stmt>

            <expr_stmt><expr><name pos:line="42" pos:column="13">fname<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">++<pos:position pos:line="42" pos:column="20"/></operator></expr>;<pos:position pos:line="42" pos:column="21"/></expr_stmt>
            <for pos:line="43" pos:column="13">for <control pos:line="43" pos:column="17">(<init><expr><name pos:line="43" pos:column="18">fac<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">=<pos:position pos:line="43" pos:column="23"/></operator> <name pos:line="43" pos:column="24">facilities<pos:position pos:line="43" pos:column="34"/></name></expr>;<pos:position pos:line="43" pos:column="35"/></init> <condition><expr><name><name pos:line="43" pos:column="36">fac<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">-&gt;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="41">t_name<pos:position pos:line="43" pos:column="47"/></name></name></expr>;<pos:position pos:line="43" pos:column="48"/></condition> <incr><expr><name pos:line="43" pos:column="49">fac<pos:position pos:line="43" pos:column="52"/></name><operator pos:line="43" pos:column="52">++<pos:position pos:line="43" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="43" pos:column="55"/></control> <block pos:line="43" pos:column="56">{
                <if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><operator pos:line="44" pos:column="21">!<pos:position pos:line="44" pos:column="22"/></operator><call><name pos:line="44" pos:column="22">strcasecmp<pos:position pos:line="44" pos:column="32"/></name><argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">fname<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="40">fac<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">-&gt;<pos:position pos:line="44" pos:column="48"/></operator><name pos:line="44" pos:column="45">t_name<pos:position pos:line="44" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="53"/></condition><then pos:line="44" pos:column="53"> <block pos:line="44" pos:column="54">{
                    <expr_stmt><expr><call><name pos:line="45" pos:column="21">openlog<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><name pos:line="45" pos:column="29">ap_server_argv0<pos:position pos:line="45" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="46">LOG_NDELAY<pos:position pos:line="45" pos:column="56"/></name><operator pos:line="45" pos:column="56">|<pos:position pos:line="45" pos:column="57"/></operator><name pos:line="45" pos:column="57">LOG_CONS<pos:position pos:line="45" pos:column="65"/></name><operator pos:line="45" pos:column="65">|<pos:position pos:line="45" pos:column="66"/></operator><name pos:line="45" pos:column="66">LOG_PID<pos:position pos:line="45" pos:column="73"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="46" pos:column="29">fac<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">-&gt;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="34">t_val<pos:position pos:line="46" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="47" pos:column="21">s<pos:position pos:line="47" pos:column="22"/></name><operator pos:line="47" pos:column="22">-&gt;<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="24">error_log<pos:position pos:line="47" pos:column="33"/></name></name> <operator pos:line="47" pos:column="34">=<pos:position pos:line="47" pos:column="35"/></operator> <name pos:line="47" pos:column="36">NULL<pos:position pos:line="47" pos:column="40"/></name></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
                    <return pos:line="48" pos:column="21">return <expr><name pos:line="48" pos:column="28">OK<pos:position pos:line="48" pos:column="30"/></name></expr>;<pos:position pos:line="48" pos:column="31"/></return>
                }<pos:position pos:line="49" pos:column="18"/></block></then></if>
            }<pos:position pos:line="50" pos:column="14"/></block></for>
        }<pos:position pos:line="51" pos:column="10"/></block></then>
        <else pos:line="52" pos:column="9">else <block pos:line="52" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">openlog<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">ap_server_argv0<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="38">LOG_NDELAY<pos:position pos:line="53" pos:column="48"/></name><operator pos:line="53" pos:column="48">|<pos:position pos:line="53" pos:column="49"/></operator><name pos:line="53" pos:column="49">LOG_CONS<pos:position pos:line="53" pos:column="57"/></name><operator pos:line="53" pos:column="57">|<pos:position pos:line="53" pos:column="58"/></operator><name pos:line="53" pos:column="58">LOG_PID<pos:position pos:line="53" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="67">LOG_LOCAL7<pos:position pos:line="53" pos:column="77"/></name></expr></argument>)<pos:position pos:line="53" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name><name pos:line="56" pos:column="9">s<pos:position pos:line="56" pos:column="10"/></name><operator pos:line="56" pos:column="10">-&gt;<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="12">error_log<pos:position pos:line="56" pos:column="21"/></name></name> <operator pos:line="56" pos:column="22">=<pos:position pos:line="56" pos:column="23"/></operator> <name pos:line="56" pos:column="24">NULL<pos:position pos:line="56" pos:column="28"/></name></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if></elseif>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>
    <else pos:line="59" pos:column="5">else <block pos:line="59" pos:column="10">{
        <expr_stmt><expr><name pos:line="60" pos:column="9">fname<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">=<pos:position pos:line="60" pos:column="16"/></operator> <call><name pos:line="60" pos:column="17">ap_server_root_relative<pos:position pos:line="60" pos:column="40"/></name><argument_list pos:line="60" pos:column="40">(<argument><expr><name pos:line="60" pos:column="41">p<pos:position pos:line="60" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="44">s<pos:position pos:line="60" pos:column="45"/></name><operator pos:line="60" pos:column="45">-&gt;<pos:position pos:line="60" pos:column="50"/></operator><name pos:line="60" pos:column="47">error_fname<pos:position pos:line="60" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="60"/></expr_stmt>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">!<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">fname<pos:position pos:line="61" pos:column="19"/></name></expr>)<pos:position pos:line="61" pos:column="20"/></condition><then pos:line="61" pos:column="20"> <block pos:line="61" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">ap_log_error<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">APLOG_MARK<pos:position pos:line="62" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="38">APLOG_STARTUP<pos:position pos:line="62" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="53">APR_EBADPATH<pos:position pos:line="62" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="67">NULL<pos:position pos:line="62" pos:column="71"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="63" pos:column="26">"%s: Invalid error log path %s."<pos:position pos:line="63" pos:column="58"/></literal></expr></argument>,
                         <argument><expr><name pos:line="64" pos:column="26">ap_server_argv0<pos:position pos:line="64" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="43">s<pos:position pos:line="64" pos:column="44"/></name><operator pos:line="64" pos:column="44">-&gt;<pos:position pos:line="64" pos:column="49"/></operator><name pos:line="64" pos:column="46">error_fname<pos:position pos:line="64" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="59"/></expr_stmt>
            <return pos:line="65" pos:column="13">return <expr><name pos:line="65" pos:column="20">DONE<pos:position pos:line="65" pos:column="24"/></name></expr>;<pos:position pos:line="65" pos:column="25"/></return>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>
        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><operator pos:line="67" pos:column="13">(<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="14">rc<pos:position pos:line="67" pos:column="16"/></name> <operator pos:line="67" pos:column="17">=<pos:position pos:line="67" pos:column="18"/></operator> <call><name pos:line="67" pos:column="19">apr_file_open<pos:position pos:line="67" pos:column="32"/></name><argument_list pos:line="67" pos:column="32">(<argument><expr><operator pos:line="67" pos:column="33">&amp;<pos:position pos:line="67" pos:column="38"/></operator><name><name pos:line="67" pos:column="34">s<pos:position pos:line="67" pos:column="35"/></name><operator pos:line="67" pos:column="35">-&gt;<pos:position pos:line="67" pos:column="40"/></operator><name pos:line="67" pos:column="37">error_log<pos:position pos:line="67" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="48">fname<pos:position pos:line="67" pos:column="53"/></name></expr></argument>,
                               <argument><expr><name pos:line="68" pos:column="32">APR_APPEND<pos:position pos:line="68" pos:column="42"/></name> <operator pos:line="68" pos:column="43">|<pos:position pos:line="68" pos:column="44"/></operator> <name pos:line="68" pos:column="45">APR_WRITE<pos:position pos:line="68" pos:column="54"/></name> <operator pos:line="68" pos:column="55">|<pos:position pos:line="68" pos:column="56"/></operator> <name pos:line="68" pos:column="57">APR_CREATE<pos:position pos:line="68" pos:column="67"/></name> <operator pos:line="68" pos:column="68">|<pos:position pos:line="68" pos:column="69"/></operator> <name pos:line="68" pos:column="70">APR_LARGEFILE<pos:position pos:line="68" pos:column="83"/></name></expr></argument>,
                               <argument><expr><name pos:line="69" pos:column="32">APR_OS_DEFAULT<pos:position pos:line="69" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="48">p<pos:position pos:line="69" pos:column="49"/></name></expr></argument>)<pos:position pos:line="69" pos:column="50"/></argument_list></call><operator pos:line="69" pos:column="50">)<pos:position pos:line="69" pos:column="51"/></operator> <operator pos:line="69" pos:column="52">!=<pos:position pos:line="69" pos:column="54"/></operator> <name pos:line="69" pos:column="55">APR_SUCCESS<pos:position pos:line="69" pos:column="66"/></name></expr>)<pos:position pos:line="69" pos:column="67"/></condition><then pos:line="69" pos:column="67"> <block pos:line="69" pos:column="68">{
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">ap_log_error<pos:position pos:line="70" pos:column="25"/></name><argument_list pos:line="70" pos:column="25">(<argument><expr><name pos:line="70" pos:column="26">APLOG_MARK<pos:position pos:line="70" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="38">APLOG_STARTUP<pos:position pos:line="70" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="53">rc<pos:position pos:line="70" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="57">NULL<pos:position pos:line="70" pos:column="61"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="71" pos:column="26">"%s: could not open error log file %s."<pos:position pos:line="71" pos:column="65"/></literal></expr></argument>,
                         <argument><expr><name pos:line="72" pos:column="26">ap_server_argv0<pos:position pos:line="72" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="43">fname<pos:position pos:line="72" pos:column="48"/></name></expr></argument>)<pos:position pos:line="72" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="50"/></expr_stmt>
            <return pos:line="73" pos:column="13">return <expr><name pos:line="73" pos:column="20">DONE<pos:position pos:line="73" pos:column="24"/></name></expr>;<pos:position pos:line="73" pos:column="25"/></return>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>
    }<pos:position pos:line="75" pos:column="6"/></block></else></if>

    <return pos:line="77" pos:column="5">return <expr><name pos:line="77" pos:column="12">OK<pos:position pos:line="77" pos:column="14"/></name></expr>;<pos:position pos:line="77" pos:column="15"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

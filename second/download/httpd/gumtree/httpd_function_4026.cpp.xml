<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4026.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">scan_meta_file<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">request_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">r<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">apr_file_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">f<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">w<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">MAX_STRING_LEN<pos:position pos:line="3" pos:column="26"/></name></expr>]<pos:position pos:line="3" pos:column="27"/></index></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">l<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_table_t<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">tmp_headers<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">tmp_headers<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">apr_table_make<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name><name pos:line="8" pos:column="34">r<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">pool<pos:position pos:line="8" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="43">5<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><call><name pos:line="9" pos:column="12">apr_file_gets<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">w<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="29">MAX_STRING_LEN<pos:position pos:line="9" pos:column="43"/></name> <operator pos:line="9" pos:column="44">-<pos:position pos:line="9" pos:column="45"/></operator> <literal type="number" pos:line="9" pos:column="46">1<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="49">f<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call> <operator pos:line="9" pos:column="52">==<pos:position pos:line="9" pos:column="54"/></operator> <name pos:line="9" pos:column="55">APR_SUCCESS<pos:position pos:line="9" pos:column="66"/></name></expr>)<pos:position pos:line="9" pos:column="67"/></condition> <block pos:line="9" pos:column="68">{

    <comment type="block" pos:line="11" pos:column="5">/* Delete terminal (CR?)LF */</comment>
        <expr_stmt><expr><name pos:line="12" pos:column="9">p<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">strlen<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">w<pos:position pos:line="12" pos:column="21"/></name></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">p<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">&gt;<pos:position pos:line="13" pos:column="19"/></operator> <literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal> <operator pos:line="13" pos:column="19">&amp;&amp;<pos:position pos:line="13" pos:column="29"/></operator> <name><name pos:line="13" pos:column="22">w<pos:position pos:line="13" pos:column="23"/></name><index pos:line="13" pos:column="23">[<expr><name pos:line="13" pos:column="24">p<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">-<pos:position pos:line="13" pos:column="27"/></operator> <literal type="number" pos:line="13" pos:column="28">1<pos:position pos:line="13" pos:column="29"/></literal></expr>]<pos:position pos:line="13" pos:column="30"/></index></name> <operator pos:line="13" pos:column="31">==<pos:position pos:line="13" pos:column="33"/></operator> <literal type="char" pos:line="13" pos:column="34">'\n'<pos:position pos:line="13" pos:column="38"/></literal></expr>)<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39"> <block pos:line="13" pos:column="40">{
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><name pos:line="14" pos:column="17">p<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">&gt;<pos:position pos:line="14" pos:column="23"/></operator> <literal type="number" pos:line="14" pos:column="21">1<pos:position pos:line="14" pos:column="22"/></literal> <operator pos:line="14" pos:column="23">&amp;&amp;<pos:position pos:line="14" pos:column="33"/></operator> <name><name pos:line="14" pos:column="26">w<pos:position pos:line="14" pos:column="27"/></name><index pos:line="14" pos:column="27">[<expr><name pos:line="14" pos:column="28">p<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">-<pos:position pos:line="14" pos:column="31"/></operator> <literal type="number" pos:line="14" pos:column="32">2<pos:position pos:line="14" pos:column="33"/></literal></expr>]<pos:position pos:line="14" pos:column="34"/></index></name> <operator pos:line="14" pos:column="35">==<pos:position pos:line="14" pos:column="37"/></operator> <literal type="char" pos:line="14" pos:column="38">'\015'<pos:position pos:line="14" pos:column="44"/></literal></expr>)<pos:position pos:line="14" pos:column="45"/></condition><then pos:line="14" pos:column="45">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="17">w<pos:position pos:line="15" pos:column="18"/></name><index pos:line="15" pos:column="18">[<expr><name pos:line="15" pos:column="19">p<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">-<pos:position pos:line="15" pos:column="22"/></operator> <literal type="number" pos:line="15" pos:column="23">2<pos:position pos:line="15" pos:column="24"/></literal></expr>]<pos:position pos:line="15" pos:column="25"/></index></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <literal type="char" pos:line="15" pos:column="28">'\0'<pos:position pos:line="15" pos:column="32"/></literal></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt></block></then>
            <else pos:line="16" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="17">w<pos:position pos:line="17" pos:column="18"/></name><index pos:line="17" pos:column="18">[<expr><name pos:line="17" pos:column="19">p<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">-<pos:position pos:line="17" pos:column="22"/></operator> <literal type="number" pos:line="17" pos:column="23">1<pos:position pos:line="17" pos:column="24"/></literal></expr>]<pos:position pos:line="17" pos:column="25"/></index></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <literal type="char" pos:line="17" pos:column="28">'\0'<pos:position pos:line="17" pos:column="32"/></literal></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt></block></else></if>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">w<pos:position pos:line="20" pos:column="14"/></name><index pos:line="20" pos:column="14">[<expr><literal type="number" pos:line="20" pos:column="15">0<pos:position pos:line="20" pos:column="16"/></literal></expr>]<pos:position pos:line="20" pos:column="17"/></index></name> <operator pos:line="20" pos:column="18">==<pos:position pos:line="20" pos:column="20"/></operator> <literal type="char" pos:line="20" pos:column="21">'\0'<pos:position pos:line="20" pos:column="25"/></literal></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26"> <block pos:line="20" pos:column="27">{
            <return pos:line="21" pos:column="13">return <expr><name pos:line="21" pos:column="20">OK<pos:position pos:line="21" pos:column="22"/></name></expr>;<pos:position pos:line="21" pos:column="23"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="24" pos:column="9">/* if we see a bogus header don't ignore it. Shout and scream */</comment>

        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><operator pos:line="26" pos:column="14">(<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">l<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">strchr<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">w<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="29">':'<pos:position pos:line="26" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="33"/></argument_list></call><operator pos:line="26" pos:column="33">)<pos:position pos:line="26" pos:column="34"/></operator></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35"> <block pos:line="26" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">ap_log_rerror<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">APLOG_MARK<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="39">APLOG_ERR<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="50">0<pos:position pos:line="27" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="53">r<pos:position pos:line="27" pos:column="54"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="28" pos:column="17">"malformed header in meta file: %s"<pos:position pos:line="28" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="54">r<pos:position pos:line="28" pos:column="55"/></name><operator pos:line="28" pos:column="55">-&gt;<pos:position pos:line="28" pos:column="60"/></operator><name pos:line="28" pos:column="57">filename<pos:position pos:line="28" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="67"/></expr_stmt>
            <return pos:line="29" pos:column="13">return <expr><name pos:line="29" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="29" pos:column="46"/></name></expr>;<pos:position pos:line="29" pos:column="47"/></return>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>

        <expr_stmt><expr><operator pos:line="32" pos:column="9">*<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">l<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">++<pos:position pos:line="32" pos:column="13"/></operator> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <literal type="char" pos:line="32" pos:column="16">'\0'<pos:position pos:line="32" pos:column="20"/></literal></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
        <while pos:line="33" pos:column="9">while <condition pos:line="33" pos:column="15">(<expr><operator pos:line="33" pos:column="16">*<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">l<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">&amp;&amp;<pos:position pos:line="33" pos:column="29"/></operator> <call><name pos:line="33" pos:column="22">apr_isspace<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><operator pos:line="33" pos:column="34">*<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="35">l<pos:position pos:line="33" pos:column="36"/></name></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="38"/></condition>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="34" pos:column="13">++<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">l<pos:position pos:line="34" pos:column="16"/></name></expr>;<pos:position pos:line="34" pos:column="17"/></expr_stmt></block></while>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><call><name pos:line="36" pos:column="14">strcasecmp<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">w<pos:position pos:line="36" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="28">"Content-type"<pos:position pos:line="36" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="44"/></condition><then pos:line="36" pos:column="44"> <block pos:line="36" pos:column="45">{
            <decl_stmt><decl><type><name pos:line="37" pos:column="13">char<pos:position pos:line="37" pos:column="17"/></name> <modifier pos:line="37" pos:column="18">*<pos:position pos:line="37" pos:column="19"/></modifier></type><name pos:line="37" pos:column="19">tmp<pos:position pos:line="37" pos:column="22"/></name></decl>;<pos:position pos:line="37" pos:column="23"/></decl_stmt>
            <comment type="block" pos:line="38" pos:column="13">/* Nuke trailing whitespace */</comment>

            <decl_stmt><decl><type><name pos:line="40" pos:column="13">char<pos:position pos:line="40" pos:column="17"/></name> <modifier pos:line="40" pos:column="18">*<pos:position pos:line="40" pos:column="19"/></modifier></type><name pos:line="40" pos:column="19">endp<pos:position pos:line="40" pos:column="23"/></name> <init pos:line="40" pos:column="24">= <expr><name pos:line="40" pos:column="26">l<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">+<pos:position pos:line="40" pos:column="29"/></operator> <call><name pos:line="40" pos:column="30">strlen<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><name pos:line="40" pos:column="37">l<pos:position pos:line="40" pos:column="38"/></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call> <operator pos:line="40" pos:column="40">-<pos:position pos:line="40" pos:column="41"/></operator> <literal type="number" pos:line="40" pos:column="42">1<pos:position pos:line="40" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="40" pos:column="44"/></decl_stmt>
            <while pos:line="41" pos:column="13">while <condition pos:line="41" pos:column="19">(<expr><name pos:line="41" pos:column="20">endp<pos:position pos:line="41" pos:column="24"/></name> <operator pos:line="41" pos:column="25">&gt;<pos:position pos:line="41" pos:column="29"/></operator> <name pos:line="41" pos:column="27">l<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">&amp;&amp;<pos:position pos:line="41" pos:column="39"/></operator> <call><name pos:line="41" pos:column="32">apr_isspace<pos:position pos:line="41" pos:column="43"/></name><argument_list pos:line="41" pos:column="43">(<argument><expr><operator pos:line="41" pos:column="44">*<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="45">endp<pos:position pos:line="41" pos:column="49"/></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="51"/></condition>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="42" pos:column="13">*<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">endp<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">--<pos:position pos:line="42" pos:column="20"/></operator> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <literal type="char" pos:line="42" pos:column="23">'\0'<pos:position pos:line="42" pos:column="27"/></literal></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt></block></while>

            <expr_stmt><expr><name pos:line="44" pos:column="13">tmp<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <call><name pos:line="44" pos:column="19">apr_pstrdup<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name><name pos:line="44" pos:column="31">r<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">pool<pos:position pos:line="44" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="40">l<pos:position pos:line="44" pos:column="41"/></name></expr></argument>)<pos:position pos:line="44" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">ap_content_type_tolower<pos:position pos:line="45" pos:column="36"/></name><argument_list pos:line="45" pos:column="36">(<argument><expr><name pos:line="45" pos:column="37">tmp<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">ap_set_content_type<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name pos:line="46" pos:column="33">r<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="36">tmp<pos:position pos:line="46" pos:column="39"/></name></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></then>
        <elseif pos:line="48" pos:column="9">else <if pos:line="48" pos:column="14">if <condition pos:line="48" pos:column="17">(<expr><operator pos:line="48" pos:column="18">!<pos:position pos:line="48" pos:column="19"/></operator><call><name pos:line="48" pos:column="19">strcasecmp<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">w<pos:position pos:line="48" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="33">"Status"<pos:position pos:line="48" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="43"/></condition><then pos:line="48" pos:column="43"> <block pos:line="48" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">sscanf<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><name pos:line="49" pos:column="20">l<pos:position pos:line="49" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="23">"%d"<pos:position pos:line="49" pos:column="27"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="29">&amp;<pos:position pos:line="49" pos:column="34"/></operator><name><name pos:line="49" pos:column="30">r<pos:position pos:line="49" pos:column="31"/></name><operator pos:line="49" pos:column="31">-&gt;<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="33">status<pos:position pos:line="49" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="50" pos:column="13">r<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">-&gt;<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="16">status_line<pos:position pos:line="50" pos:column="27"/></name></name> <operator pos:line="50" pos:column="28">=<pos:position pos:line="50" pos:column="29"/></operator> <call><name pos:line="50" pos:column="30">apr_pstrdup<pos:position pos:line="50" pos:column="41"/></name><argument_list pos:line="50" pos:column="41">(<argument><expr><name><name pos:line="50" pos:column="42">r<pos:position pos:line="50" pos:column="43"/></name><operator pos:line="50" pos:column="43">-&gt;<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="45">pool<pos:position pos:line="50" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="51">l<pos:position pos:line="50" pos:column="52"/></name></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if></elseif>
        <else pos:line="52" pos:column="9">else <block pos:line="52" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">apr_table_set<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">tmp_headers<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="40">w<pos:position pos:line="53" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="43">l<pos:position pos:line="53" pos:column="44"/></name></expr></argument>)<pos:position pos:line="53" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></else></if>
    }<pos:position pos:line="55" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">apr_table_overlap<pos:position pos:line="56" pos:column="22"/></name><argument_list pos:line="56" pos:column="22">(<argument><expr><name><name pos:line="56" pos:column="23">r<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">-&gt;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="26">headers_out<pos:position pos:line="56" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="39">tmp_headers<pos:position pos:line="56" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="52">APR_OVERLAP_TABLES_SET<pos:position pos:line="56" pos:column="74"/></name></expr></argument>)<pos:position pos:line="56" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="76"/></expr_stmt>
    <return pos:line="57" pos:column="5">return <expr><name pos:line="57" pos:column="12">OK<pos:position pos:line="57" pos:column="14"/></name></expr>;<pos:position pos:line="57" pos:column="15"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2314_httpd-2.0.58.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">worker_thread<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">apr_thread_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">thd<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">void<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type> <name pos:line="1" pos:column="54">dummy<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">proc_info<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type> <name pos:line="3" pos:column="17">ti<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">dummy<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">process_slot<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name><name pos:line="4" pos:column="24">ti<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">-&gt;<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="28">pid<pos:position pos:line="4" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">thread_slot<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name><name pos:line="5" pos:column="23">ti<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">tid<pos:position pos:line="5" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_uint32_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">my_worker_num<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><call pos:line="6" pos:column="34">(<name pos:line="6" pos:column="35">apr_uint32_t<pos:position pos:line="6" pos:column="47"/></name>)<argument_list pos:line="6" pos:column="48">(<argument><expr><name><name pos:line="6" pos:column="49">ti<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">-&gt;<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="53">tid<pos:position pos:line="6" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_pool_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">tpool<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><call><name pos:line="7" pos:column="25">apr_thread_pool_get<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">thd<pos:position pos:line="7" pos:column="48"/></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">void<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">csd<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_allocator_t<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">allocator<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_pool_t<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">ptrans<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>                <comment type="block" pos:line="10" pos:column="40">/* Pool for per-transaction stuff */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_bucket_alloc_t<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">bucket_alloc<pos:position pos:line="11" pos:column="37"/></name></decl>;<pos:position pos:line="11" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">n<pos:position pos:line="12" pos:column="10"/></name></decl>;<pos:position pos:line="12" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_pollfd_t<pos:position pos:line="13" pos:column="17"/></name> <modifier pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></modifier></type><name pos:line="13" pos:column="19">pollset<pos:position pos:line="13" pos:column="26"/></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_status_t<pos:position pos:line="14" pos:column="17"/></name></type> <name pos:line="14" pos:column="18">rv<pos:position pos:line="14" pos:column="20"/></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">ap_listen_rec<pos:position pos:line="15" pos:column="18"/></name> <modifier pos:line="15" pos:column="19">*<pos:position pos:line="15" pos:column="20"/></modifier></type><name pos:line="15" pos:column="20">lr<pos:position pos:line="15" pos:column="22"/></name></decl>, <modifier pos:line="15" pos:column="24">*<pos:position pos:line="15" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="15" pos:column="25">last_lr<pos:position pos:line="15" pos:column="32"/></name> <init pos:line="15" pos:column="33">= <expr><name pos:line="15" pos:column="35">ap_listeners<pos:position pos:line="15" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">is_listener<pos:position pos:line="16" pos:column="20"/></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ap_update_child_status_from_indexes<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name pos:line="18" pos:column="41">process_slot<pos:position pos:line="18" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="55">thread_slot<pos:position pos:line="18" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="68">SERVER_STARTING<pos:position pos:line="18" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="85">NULL<pos:position pos:line="18" pos:column="89"/></name></expr></argument>)<pos:position pos:line="18" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="91"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">free<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><name pos:line="20" pos:column="10">ti<pos:position pos:line="20" pos:column="12"/></name></expr></argument>)<pos:position pos:line="20" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="14"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">apr_allocator_create<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><operator pos:line="22" pos:column="26">&amp;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="27">allocator<pos:position pos:line="22" pos:column="36"/></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">apr_allocator_max_free_set<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">allocator<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="43">ap_max_mem_free<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt>
    <comment type="block" pos:line="24" pos:column="5">/* XXX: why is ptrans's parent not tpool?  --jcw 08/2003 */</comment>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">apr_pool_create_ex<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><operator pos:line="25" pos:column="24">&amp;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="25">ptrans<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="33">NULL<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">NULL<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="45">allocator<pos:position pos:line="25" pos:column="54"/></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">apr_allocator_owner_set<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">allocator<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="40">ptrans<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">bucket_alloc<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <call><name pos:line="27" pos:column="20">apr_bucket_alloc_create_ex<pos:position pos:line="27" pos:column="46"/></name><argument_list pos:line="27" pos:column="46">(<argument><expr><name pos:line="27" pos:column="47">allocator<pos:position pos:line="27" pos:column="56"/></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">apr_poll_setup<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><operator pos:line="29" pos:column="20">&amp;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="21">pollset<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">num_listensocks<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="47">tpool<pos:position pos:line="29" pos:column="52"/></name></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="54"/></expr_stmt>
    <for pos:line="30" pos:column="5">for<control pos:line="30" pos:column="8">(<init><expr><name pos:line="30" pos:column="9">lr<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <name pos:line="30" pos:column="14">ap_listeners<pos:position pos:line="30" pos:column="26"/></name></expr> ;<pos:position pos:line="30" pos:column="28"/></init> <condition><expr><name pos:line="30" pos:column="29">lr<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">!=<pos:position pos:line="30" pos:column="34"/></operator> <name pos:line="30" pos:column="35">NULL<pos:position pos:line="30" pos:column="39"/></name></expr> ;<pos:position pos:line="30" pos:column="41"/></condition> <incr><expr><name pos:line="30" pos:column="42">lr<pos:position pos:line="30" pos:column="44"/></name> <operator pos:line="30" pos:column="45">=<pos:position pos:line="30" pos:column="46"/></operator> <name><name pos:line="30" pos:column="47">lr<pos:position pos:line="30" pos:column="49"/></name><operator pos:line="30" pos:column="49">-&gt;<pos:position pos:line="30" pos:column="54"/></operator><name pos:line="30" pos:column="51">next<pos:position pos:line="30" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="30" pos:column="56"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="9">apr_poll_socket_add<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><name pos:line="31" pos:column="29">pollset<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="38">lr<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">-&gt;<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="42">sd<pos:position pos:line="31" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="46">APR_POLLIN<pos:position pos:line="31" pos:column="56"/></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt></block></for>

    <comment type="block" pos:line="33" pos:column="5">/* TODO: Switch to a system where threads reuse the results from earlier
       poll calls - manoj */</comment>
    <expr_stmt><expr><name pos:line="35" pos:column="5">is_listener<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <literal type="number" pos:line="35" pos:column="19">0<pos:position pos:line="35" pos:column="20"/></literal></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
    <while pos:line="36" pos:column="5">while <condition pos:line="36" pos:column="11">(<expr><operator pos:line="36" pos:column="12">!<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">workers_may_exit<pos:position pos:line="36" pos:column="29"/></name></expr>)<pos:position pos:line="36" pos:column="30"/></condition> <block pos:line="36" pos:column="31">{

        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ap_update_child_status_from_indexes<pos:position pos:line="38" pos:column="44"/></name><argument_list pos:line="38" pos:column="44">(<argument><expr><name pos:line="38" pos:column="45">process_slot<pos:position pos:line="38" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="59">thread_slot<pos:position pos:line="38" pos:column="70"/></name></expr></argument>,
                                            <argument><expr><name pos:line="39" pos:column="45">SERVER_READY<pos:position pos:line="39" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="59">NULL<pos:position pos:line="39" pos:column="63"/></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="65"/></expr_stmt>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">is_listener<pos:position pos:line="40" pos:column="25"/></name></expr>)<pos:position pos:line="40" pos:column="26"/></condition><then pos:line="40" pos:column="26"> <block pos:line="40" pos:column="27">{
            <comment type="block" pos:line="41" pos:column="13">/* Wait until it's our turn to become the listener */</comment>
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><operator pos:line="42" pos:column="17">(<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">rv<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <call><name pos:line="42" pos:column="23">worker_stack_wait<pos:position pos:line="42" pos:column="40"/></name><argument_list pos:line="42" pos:column="40">(<argument><expr><name pos:line="42" pos:column="41">idle_worker_stack<pos:position pos:line="42" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="60">my_worker_num<pos:position pos:line="42" pos:column="73"/></name></expr></argument>)<pos:position pos:line="42" pos:column="74"/></argument_list></call><operator pos:line="42" pos:column="74">)<pos:position pos:line="42" pos:column="75"/></operator> <operator pos:line="42" pos:column="76">!=<pos:position pos:line="42" pos:column="78"/></operator>
                <name pos:line="43" pos:column="17">APR_SUCCESS<pos:position pos:line="43" pos:column="28"/></name></expr>)<pos:position pos:line="43" pos:column="29"/></condition><then pos:line="43" pos:column="29"> <block pos:line="43" pos:column="30">{
                <if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">rv<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">!=<pos:position pos:line="44" pos:column="26"/></operator> <name pos:line="44" pos:column="27">APR_EINVAL<pos:position pos:line="44" pos:column="37"/></name></expr>)<pos:position pos:line="44" pos:column="38"/></condition><then pos:line="44" pos:column="38"> <block pos:line="44" pos:column="39">{
                    <expr_stmt><expr><call><name pos:line="45" pos:column="21">ap_log_error<pos:position pos:line="45" pos:column="33"/></name><argument_list pos:line="45" pos:column="33">(<argument><expr><name pos:line="45" pos:column="34">APLOG_MARK<pos:position pos:line="45" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="46">APLOG_EMERG<pos:position pos:line="45" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="59">rv<pos:position pos:line="45" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="63">ap_server_conf<pos:position pos:line="45" pos:column="77"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="46" pos:column="34">"worker_stack_wait failed. Shutting down"<pos:position pos:line="46" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="77"/></expr_stmt>
                }<pos:position pos:line="47" pos:column="18"/></block></then></if>
                <break pos:line="48" pos:column="17">break;<pos:position pos:line="48" pos:column="23"/></break>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>
            <if pos:line="50" pos:column="13">if <condition pos:line="50" pos:column="16">(<expr><name pos:line="50" pos:column="17">workers_may_exit<pos:position pos:line="50" pos:column="33"/></name></expr>)<pos:position pos:line="50" pos:column="34"/></condition><then pos:line="50" pos:column="34"> <block pos:line="50" pos:column="35">{
                <break pos:line="51" pos:column="17">break;<pos:position pos:line="51" pos:column="23"/></break>
            }<pos:position pos:line="52" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="53" pos:column="13">is_listener<pos:position pos:line="53" pos:column="24"/></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <literal type="number" pos:line="53" pos:column="27">1<pos:position pos:line="53" pos:column="28"/></literal></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="56" pos:column="9">/* TODO: requests_this_child should be synchronized - aaron */</comment>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">requests_this_child<pos:position pos:line="57" pos:column="32"/></name> <operator pos:line="57" pos:column="33">&lt;=<pos:position pos:line="57" pos:column="38"/></operator> <literal type="number" pos:line="57" pos:column="36">0<pos:position pos:line="57" pos:column="37"/></literal></expr>)<pos:position pos:line="57" pos:column="38"/></condition><then pos:line="57" pos:column="38"> <block pos:line="57" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">check_infinite_requests<pos:position pos:line="58" pos:column="36"/></name><argument_list pos:line="58" pos:column="36">()<pos:position pos:line="58" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">workers_may_exit<pos:position pos:line="60" pos:column="29"/></name></expr>)<pos:position pos:line="60" pos:column="30"/></condition><then pos:line="60" pos:column="30"> <block type="pseudo"><break pos:line="60" pos:column="31">break;<pos:position pos:line="60" pos:column="37"/></break></block></then></if>

        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">(<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="14">rv<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">=<pos:position pos:line="62" pos:column="18"/></operator> <call><name pos:line="62" pos:column="19">SAFE_ACCEPT<pos:position pos:line="62" pos:column="30"/></name><argument_list pos:line="62" pos:column="30">(<argument><expr><call><name pos:line="62" pos:column="31">apr_proc_mutex_lock<pos:position pos:line="62" pos:column="50"/></name><argument_list pos:line="62" pos:column="50">(<argument><expr><name pos:line="62" pos:column="51">accept_mutex<pos:position pos:line="62" pos:column="63"/></name></expr></argument>)<pos:position pos:line="62" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="65"/></argument_list></call><operator pos:line="62" pos:column="65">)<pos:position pos:line="62" pos:column="66"/></operator>
            <operator pos:line="63" pos:column="13">!=<pos:position pos:line="63" pos:column="15"/></operator> <name pos:line="63" pos:column="16">APR_SUCCESS<pos:position pos:line="63" pos:column="27"/></name></expr>)<pos:position pos:line="63" pos:column="28"/></condition><then pos:line="63" pos:column="28"> <block pos:line="63" pos:column="29">{
            <decl_stmt><decl><type><name pos:line="64" pos:column="13">int<pos:position pos:line="64" pos:column="16"/></name></type> <name pos:line="64" pos:column="17">level<pos:position pos:line="64" pos:column="22"/></name> <init pos:line="64" pos:column="23">= <expr><name pos:line="64" pos:column="25">APLOG_EMERG<pos:position pos:line="64" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="64" pos:column="37"/></decl_stmt>

            <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><name pos:line="66" pos:column="17">workers_may_exit<pos:position pos:line="66" pos:column="33"/></name></expr>)<pos:position pos:line="66" pos:column="34"/></condition><then pos:line="66" pos:column="34"> <block pos:line="66" pos:column="35">{
                <break pos:line="67" pos:column="17">break;<pos:position pos:line="67" pos:column="23"/></break>
            }<pos:position pos:line="68" pos:column="14"/></block></then></if>
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name><name pos:line="69" pos:column="17">ap_scoreboard_image<pos:position pos:line="69" pos:column="36"/></name><operator pos:line="69" pos:column="36">-&gt;<pos:position pos:line="69" pos:column="41"/></operator><name pos:line="69" pos:column="38">parent<pos:position pos:line="69" pos:column="44"/></name><index pos:line="69" pos:column="44">[<expr><name pos:line="69" pos:column="45">process_slot<pos:position pos:line="69" pos:column="57"/></name></expr>]<pos:position pos:line="69" pos:column="58"/></index></name><operator pos:line="69" pos:column="58">.<pos:position pos:line="69" pos:column="59"/></operator><name pos:line="69" pos:column="59">generation<pos:position pos:line="69" pos:column="69"/></name> <operator pos:line="69" pos:column="70">!=<pos:position pos:line="69" pos:column="72"/></operator> 
                <name><name pos:line="70" pos:column="17">ap_scoreboard_image<pos:position pos:line="70" pos:column="36"/></name><operator pos:line="70" pos:column="36">-&gt;<pos:position pos:line="70" pos:column="41"/></operator><name pos:line="70" pos:column="38">global<pos:position pos:line="70" pos:column="44"/></name><operator pos:line="70" pos:column="44">-&gt;<pos:position pos:line="70" pos:column="49"/></operator><name pos:line="70" pos:column="46">running_generation<pos:position pos:line="70" pos:column="64"/></name></name></expr>)<pos:position pos:line="70" pos:column="65"/></condition><then pos:line="70" pos:column="65"> <block pos:line="70" pos:column="66">{
                <expr_stmt><expr><name pos:line="71" pos:column="17">level<pos:position pos:line="71" pos:column="22"/></name> <operator pos:line="71" pos:column="23">=<pos:position pos:line="71" pos:column="24"/></operator> <name pos:line="71" pos:column="25">APLOG_DEBUG<pos:position pos:line="71" pos:column="36"/></name></expr>;<pos:position pos:line="71" pos:column="37"/></expr_stmt> <comment type="block" pos:line="71" pos:column="38">/* common to get these at restart time */</comment>
            }<pos:position pos:line="72" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">ap_log_error<pos:position pos:line="73" pos:column="25"/></name><argument_list pos:line="73" pos:column="25">(<argument><expr><name pos:line="73" pos:column="26">APLOG_MARK<pos:position pos:line="73" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="38">level<pos:position pos:line="73" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="45">rv<pos:position pos:line="73" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="49">ap_server_conf<pos:position pos:line="73" pos:column="63"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="74" pos:column="26">"apr_proc_mutex_lock failed. Attempting to shutdown "<pos:position pos:line="74" pos:column="79"/></literal>
                         <literal type="string" pos:line="75" pos:column="26">"process gracefully."<pos:position pos:line="75" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">signal_threads<pos:position pos:line="76" pos:column="27"/></name><argument_list pos:line="76" pos:column="27">(<argument><expr><name pos:line="76" pos:column="28">ST_GRACEFUL<pos:position pos:line="76" pos:column="39"/></name></expr></argument>)<pos:position pos:line="76" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="41"/></expr_stmt>
            <break pos:line="77" pos:column="13">break;<pos:position pos:line="77" pos:column="19"/></break>                    <comment type="block" pos:line="77" pos:column="39">/* skip the lock release */</comment>
        }<pos:position pos:line="78" pos:column="10"/></block></then></if>

        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><operator pos:line="80" pos:column="13">!<pos:position pos:line="80" pos:column="14"/></operator><name><name pos:line="80" pos:column="14">ap_listeners<pos:position pos:line="80" pos:column="26"/></name><operator pos:line="80" pos:column="26">-&gt;<pos:position pos:line="80" pos:column="31"/></operator><name pos:line="80" pos:column="28">next<pos:position pos:line="80" pos:column="32"/></name></name></expr>)<pos:position pos:line="80" pos:column="33"/></condition><then pos:line="80" pos:column="33"> <block pos:line="80" pos:column="34">{
            <comment type="block" pos:line="81" pos:column="13">/* Only one listener, so skip the poll */</comment>
            <expr_stmt><expr><name pos:line="82" pos:column="13">lr<pos:position pos:line="82" pos:column="15"/></name> <operator pos:line="82" pos:column="16">=<pos:position pos:line="82" pos:column="17"/></operator> <name pos:line="82" pos:column="18">ap_listeners<pos:position pos:line="82" pos:column="30"/></name></expr>;<pos:position pos:line="82" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="83" pos:column="10"/></block></then>
        <else pos:line="84" pos:column="9">else <block pos:line="84" pos:column="14">{
            <while pos:line="85" pos:column="13">while <condition pos:line="85" pos:column="19">(<expr><operator pos:line="85" pos:column="20">!<pos:position pos:line="85" pos:column="21"/></operator><name pos:line="85" pos:column="21">workers_may_exit<pos:position pos:line="85" pos:column="37"/></name></expr>)<pos:position pos:line="85" pos:column="38"/></condition> <block pos:line="85" pos:column="39">{
                <decl_stmt><decl><type><name pos:line="86" pos:column="17">apr_status_t<pos:position pos:line="86" pos:column="29"/></name></type> <name pos:line="86" pos:column="30">ret<pos:position pos:line="86" pos:column="33"/></name></decl>;<pos:position pos:line="86" pos:column="34"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="87" pos:column="17">apr_int16_t<pos:position pos:line="87" pos:column="28"/></name></type> <name pos:line="87" pos:column="29">event<pos:position pos:line="87" pos:column="34"/></name></decl>;<pos:position pos:line="87" pos:column="35"/></decl_stmt>

                <expr_stmt><expr><name pos:line="89" pos:column="17">ret<pos:position pos:line="89" pos:column="20"/></name> <operator pos:line="89" pos:column="21">=<pos:position pos:line="89" pos:column="22"/></operator> <call><name pos:line="89" pos:column="23">apr_poll<pos:position pos:line="89" pos:column="31"/></name><argument_list pos:line="89" pos:column="31">(<argument><expr><name pos:line="89" pos:column="32">pollset<pos:position pos:line="89" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="41">num_listensocks<pos:position pos:line="89" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="58">&amp;<pos:position pos:line="89" pos:column="63"/></operator><name pos:line="89" pos:column="59">n<pos:position pos:line="89" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="62">-<pos:position pos:line="89" pos:column="63"/></operator><literal type="number" pos:line="89" pos:column="63">1<pos:position pos:line="89" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="66"/></expr_stmt>
                <if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><name pos:line="90" pos:column="21">ret<pos:position pos:line="90" pos:column="24"/></name> <operator pos:line="90" pos:column="25">!=<pos:position pos:line="90" pos:column="27"/></operator> <name pos:line="90" pos:column="28">APR_SUCCESS<pos:position pos:line="90" pos:column="39"/></name></expr>)<pos:position pos:line="90" pos:column="40"/></condition><then pos:line="90" pos:column="40"> <block pos:line="90" pos:column="41">{
                    <if pos:line="91" pos:column="21">if <condition pos:line="91" pos:column="24">(<expr><call><name pos:line="91" pos:column="25">APR_STATUS_IS_EINTR<pos:position pos:line="91" pos:column="44"/></name><argument_list pos:line="91" pos:column="44">(<argument><expr><name pos:line="91" pos:column="45">ret<pos:position pos:line="91" pos:column="48"/></name></expr></argument>)<pos:position pos:line="91" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="50"/></condition><then pos:line="91" pos:column="50"> <block pos:line="91" pos:column="51">{
                        <continue pos:line="92" pos:column="25">continue;<pos:position pos:line="92" pos:column="34"/></continue>
                    }<pos:position pos:line="93" pos:column="22"/></block></then></if>

                    <comment type="block" pos:line="95" pos:column="21">/* apr_poll() will only return errors in catastrophic
                     * circumstances. Let's try exiting gracefully, for now. */</comment>
                    <expr_stmt><expr><call><name pos:line="97" pos:column="21">ap_log_error<pos:position pos:line="97" pos:column="33"/></name><argument_list pos:line="97" pos:column="33">(<argument><expr><name pos:line="97" pos:column="34">APLOG_MARK<pos:position pos:line="97" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="46">APLOG_ERR<pos:position pos:line="97" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="57">ret<pos:position pos:line="97" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="62">(<pos:position pos:line="97" pos:column="63"/></operator><specifier pos:line="97" pos:column="63">const<pos:position pos:line="97" pos:column="68"/></specifier> <name pos:line="97" pos:column="69">server_rec<pos:position pos:line="97" pos:column="79"/></name> <operator pos:line="97" pos:column="80">*<pos:position pos:line="97" pos:column="81"/></operator><operator pos:line="97" pos:column="81">)<pos:position pos:line="97" pos:column="82"/></operator>
                                 <name pos:line="98" pos:column="34">ap_server_conf<pos:position pos:line="98" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="50">"apr_poll: (listen)"<pos:position pos:line="98" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="72"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="99" pos:column="21">signal_threads<pos:position pos:line="99" pos:column="35"/></name><argument_list pos:line="99" pos:column="35">(<argument><expr><name pos:line="99" pos:column="36">ST_GRACEFUL<pos:position pos:line="99" pos:column="47"/></name></expr></argument>)<pos:position pos:line="99" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="49"/></expr_stmt>
                }<pos:position pos:line="100" pos:column="18"/></block></then></if>

                <if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><name pos:line="102" pos:column="21">workers_may_exit<pos:position pos:line="102" pos:column="37"/></name></expr>)<pos:position pos:line="102" pos:column="38"/></condition><then pos:line="102" pos:column="38"> <block type="pseudo"><break pos:line="102" pos:column="39">break;<pos:position pos:line="102" pos:column="45"/></break></block></then></if>

                <comment type="block" pos:line="104" pos:column="17">/* find a listener */</comment>
                <expr_stmt><expr><name pos:line="105" pos:column="17">lr<pos:position pos:line="105" pos:column="19"/></name> <operator pos:line="105" pos:column="20">=<pos:position pos:line="105" pos:column="21"/></operator> <name pos:line="105" pos:column="22">last_lr<pos:position pos:line="105" pos:column="29"/></name></expr>;<pos:position pos:line="105" pos:column="30"/></expr_stmt>
                <do pos:line="106" pos:column="17">do <block pos:line="106" pos:column="20">{
                    <expr_stmt><expr><name pos:line="107" pos:column="21">lr<pos:position pos:line="107" pos:column="23"/></name> <operator pos:line="107" pos:column="24">=<pos:position pos:line="107" pos:column="25"/></operator> <name><name pos:line="107" pos:column="26">lr<pos:position pos:line="107" pos:column="28"/></name><operator pos:line="107" pos:column="28">-&gt;<pos:position pos:line="107" pos:column="33"/></operator><name pos:line="107" pos:column="30">next<pos:position pos:line="107" pos:column="34"/></name></name></expr>;<pos:position pos:line="107" pos:column="35"/></expr_stmt>
                    <if pos:line="108" pos:column="21">if <condition pos:line="108" pos:column="24">(<expr><name pos:line="108" pos:column="25">lr<pos:position pos:line="108" pos:column="27"/></name> <operator pos:line="108" pos:column="28">==<pos:position pos:line="108" pos:column="30"/></operator> <name pos:line="108" pos:column="31">NULL<pos:position pos:line="108" pos:column="35"/></name></expr>)<pos:position pos:line="108" pos:column="36"/></condition><then pos:line="108" pos:column="36"> <block pos:line="108" pos:column="37">{
                        <expr_stmt><expr><name pos:line="109" pos:column="25">lr<pos:position pos:line="109" pos:column="27"/></name> <operator pos:line="109" pos:column="28">=<pos:position pos:line="109" pos:column="29"/></operator> <name pos:line="109" pos:column="30">ap_listeners<pos:position pos:line="109" pos:column="42"/></name></expr>;<pos:position pos:line="109" pos:column="43"/></expr_stmt>
                    }<pos:position pos:line="110" pos:column="22"/></block></then></if></block></do></block></while></block></else></if></block></while></block></function>
      </unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6598.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">task_done<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">h2_mplx<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">m<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">h2_task<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">task<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">h2_req_engine<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">ngn<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name><name pos:line="3" pos:column="9">task<pos:position pos:line="3" pos:column="13"/></name><operator pos:line="3" pos:column="13">-&gt;<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="15">frozen<pos:position pos:line="3" pos:column="21"/></name></name></expr>)<pos:position pos:line="3" pos:column="22"/></condition><then pos:line="3" pos:column="22"> <block pos:line="3" pos:column="23">{
        <comment type="block" pos:line="4" pos:column="9">/* this task was handed over to an engine for processing 
         * and the original worker has finished. That means the 
         * engine may start processing now. */</comment>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">h2_task_thaw<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">task<pos:position pos:line="7" pos:column="26"/></name></expr></argument>)<pos:position pos:line="7" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>
        <comment type="block" pos:line="8" pos:column="9">/* we do not want the task to block on writing response
         * bodies into the mplx. */</comment>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">h2_task_set_io_blocking<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">task<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="39">0<pos:position pos:line="10" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">apr_thread_cond_broadcast<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name><name pos:line="11" pos:column="35">m<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">task_thawed<pos:position pos:line="11" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="51"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then>
    <else pos:line="14" pos:column="5">else <block pos:line="14" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">h2_stream<pos:position pos:line="15" pos:column="18"/></name> <modifier pos:line="15" pos:column="19">*<pos:position pos:line="15" pos:column="20"/></modifier></type><name pos:line="15" pos:column="20">stream<pos:position pos:line="15" pos:column="26"/></name></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
        
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">ap_log_cerror<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">APLOG_MARK<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">APLOG_TRACE1<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="49">0<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="52">m<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">-&gt;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="55">c<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="18" pos:column="23">"h2_mplx(%ld): task(%s) done"<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="54">m<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">-&gt;<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="57">id<pos:position pos:line="18" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="61">task<pos:position pos:line="18" pos:column="65"/></name><operator pos:line="18" pos:column="65">-&gt;<pos:position pos:line="18" pos:column="70"/></operator><name pos:line="18" pos:column="67">id<pos:position pos:line="18" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">out_close<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">m<pos:position pos:line="19" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="22">task<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">stream<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">h2_ihash_get<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name><name pos:line="20" pos:column="31">m<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">streams<pos:position pos:line="20" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="43">task<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">-&gt;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="49">stream_id<pos:position pos:line="20" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="60"/></expr_stmt>
        
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">ngn<pos:position pos:line="22" pos:column="16"/></name></expr>)<pos:position pos:line="22" pos:column="17"/></condition><then pos:line="22" pos:column="17"> <block pos:line="22" pos:column="18">{
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">apr_off_t<pos:position pos:line="23" pos:column="22"/></name></type> <name pos:line="23" pos:column="23">bytes<pos:position pos:line="23" pos:column="28"/></name> <init pos:line="23" pos:column="29">= <expr><literal type="number" pos:line="23" pos:column="31">0<pos:position pos:line="23" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="33"/></decl_stmt>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name><name pos:line="24" pos:column="17">task<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">output<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">.<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">beam<pos:position pos:line="24" pos:column="34"/></name></name></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35"> <block pos:line="24" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="25" pos:column="17">h2_beam_send<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name><name pos:line="25" pos:column="30">task<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">-&gt;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="36">output<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">.<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">beam<pos:position pos:line="25" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">NULL<pos:position pos:line="25" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="55">APR_NONBLOCK_READ<pos:position pos:line="25" pos:column="72"/></name></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="74"/></expr_stmt>
                <expr_stmt><expr><name pos:line="26" pos:column="17">bytes<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">+=<pos:position pos:line="26" pos:column="25"/></operator> <call><name pos:line="26" pos:column="26">h2_beam_get_buffered<pos:position pos:line="26" pos:column="46"/></name><argument_list pos:line="26" pos:column="46">(<argument><expr><name><name pos:line="26" pos:column="47">task<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">-&gt;<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="53">output<pos:position pos:line="26" pos:column="59"/></name><operator pos:line="26" pos:column="59">.<pos:position pos:line="26" pos:column="60"/></operator><name pos:line="26" pos:column="60">beam<pos:position pos:line="26" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="66"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></then></if>
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><name pos:line="28" pos:column="17">bytes<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">&gt;<pos:position pos:line="28" pos:column="27"/></operator> <literal type="number" pos:line="28" pos:column="25">0<pos:position pos:line="28" pos:column="26"/></literal></expr>)<pos:position pos:line="28" pos:column="27"/></condition><then pos:line="28" pos:column="27"> <block pos:line="28" pos:column="28">{
                <comment type="block" pos:line="29" pos:column="17">/* we need to report consumed and current buffered output
                 * to the engine. The request will be streamed out or cancelled,
                 * no more data is coming from it and the engine should update
                 * its calculations before we destroy this information. */</comment>
                <expr_stmt><expr><call><name pos:line="33" pos:column="17">h2_req_engine_out_consumed<pos:position pos:line="33" pos:column="43"/></name><argument_list pos:line="33" pos:column="43">(<argument><expr><name pos:line="33" pos:column="44">ngn<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="49">task<pos:position pos:line="33" pos:column="53"/></name><operator pos:line="33" pos:column="53">-&gt;<pos:position pos:line="33" pos:column="58"/></operator><name pos:line="33" pos:column="55">c<pos:position pos:line="33" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="58">bytes<pos:position pos:line="33" pos:column="63"/></name></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
        
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name><name pos:line="37" pos:column="13">task<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">-&gt;<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="19">engine<pos:position pos:line="37" pos:column="25"/></name></name></expr>)<pos:position pos:line="37" pos:column="26"/></condition><then pos:line="37" pos:column="26"> <block pos:line="37" pos:column="27">{
            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><operator pos:line="38" pos:column="17">!<pos:position pos:line="38" pos:column="18"/></operator><call><name pos:line="38" pos:column="18">h2_req_engine_is_shutdown<pos:position pos:line="38" pos:column="43"/></name><argument_list pos:line="38" pos:column="43">(<argument><expr><name><name pos:line="38" pos:column="44">task<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">-&gt;<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="50">engine<pos:position pos:line="38" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="58"/></condition><then pos:line="38" pos:column="58"> <block pos:line="38" pos:column="59">{
                <expr_stmt><expr><call><name pos:line="39" pos:column="17">ap_log_cerror<pos:position pos:line="39" pos:column="30"/></name><argument_list pos:line="39" pos:column="30">(<argument><expr><name pos:line="39" pos:column="31">APLOG_MARK<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">APLOG_WARNING<pos:position pos:line="39" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="58">0<pos:position pos:line="39" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="61">m<pos:position pos:line="39" pos:column="62"/></name><operator pos:line="39" pos:column="62">-&gt;<pos:position pos:line="39" pos:column="67"/></operator><name pos:line="39" pos:column="64">c<pos:position pos:line="39" pos:column="65"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="40" pos:column="31">"h2_mplx(%ld): task(%s) has not-shutdown "<pos:position pos:line="40" pos:column="73"/></literal>
                              <literal type="string" pos:line="41" pos:column="31">"engine(%s)"<pos:position pos:line="41" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="45">m<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">-&gt;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="48">id<pos:position pos:line="41" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="52">task<pos:position pos:line="41" pos:column="56"/></name><operator pos:line="41" pos:column="56">-&gt;<pos:position pos:line="41" pos:column="61"/></operator><name pos:line="41" pos:column="58">id<pos:position pos:line="41" pos:column="60"/></name></name></expr></argument>, 
                              <argument><expr><call><name pos:line="42" pos:column="31">h2_req_engine_get_id<pos:position pos:line="42" pos:column="51"/></name><argument_list pos:line="42" pos:column="51">(<argument><expr><name><name pos:line="42" pos:column="52">task<pos:position pos:line="42" pos:column="56"/></name><operator pos:line="42" pos:column="56">-&gt;<pos:position pos:line="42" pos:column="61"/></operator><name pos:line="42" pos:column="58">engine<pos:position pos:line="42" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="67"/></expr_stmt>
            }<pos:position pos:line="43" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">h2_ngn_shed_done_ngn<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name><name pos:line="44" pos:column="34">m<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">-&gt;<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="37">ngn_shed<pos:position pos:line="44" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="47">task<pos:position pos:line="44" pos:column="51"/></name><operator pos:line="44" pos:column="51">-&gt;<pos:position pos:line="44" pos:column="56"/></operator><name pos:line="44" pos:column="53">engine<pos:position pos:line="44" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
        
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><name><name pos:line="47" pos:column="14">m<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">-&gt;<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="17">aborted<pos:position pos:line="47" pos:column="24"/></name></name> <operator pos:line="47" pos:column="25">&amp;&amp;<pos:position pos:line="47" pos:column="35"/></operator> <name pos:line="47" pos:column="28">stream<pos:position pos:line="47" pos:column="34"/></name> <operator pos:line="47" pos:column="35">&amp;&amp;<pos:position pos:line="47" pos:column="45"/></operator> <name><name pos:line="47" pos:column="38">m<pos:position pos:line="47" pos:column="39"/></name><operator pos:line="47" pos:column="39">-&gt;<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="41">redo_tasks<pos:position pos:line="47" pos:column="51"/></name></name>
            <operator pos:line="48" pos:column="13">&amp;&amp;<pos:position pos:line="48" pos:column="23"/></operator> <call><name pos:line="48" pos:column="16">h2_ihash_get<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name><name pos:line="48" pos:column="29">m<pos:position pos:line="48" pos:column="30"/></name><operator pos:line="48" pos:column="30">-&gt;<pos:position pos:line="48" pos:column="35"/></operator><name pos:line="48" pos:column="32">redo_tasks<pos:position pos:line="48" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="44">task<pos:position pos:line="48" pos:column="48"/></name><operator pos:line="48" pos:column="48">-&gt;<pos:position pos:line="48" pos:column="53"/></operator><name pos:line="48" pos:column="50">stream_id<pos:position pos:line="48" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="61"/></condition><then pos:line="48" pos:column="61"> <block pos:line="48" pos:column="62">{
            <comment type="block" pos:line="49" pos:column="13">/* reset and schedule again */</comment>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">h2_task_redo<pos:position pos:line="50" pos:column="25"/></name><argument_list pos:line="50" pos:column="25">(<argument><expr><name pos:line="50" pos:column="26">task<pos:position pos:line="50" pos:column="30"/></name></expr></argument>)<pos:position pos:line="50" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">h2_ihash_remove<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name><name pos:line="51" pos:column="29">m<pos:position pos:line="51" pos:column="30"/></name><operator pos:line="51" pos:column="30">-&gt;<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="32">redo_tasks<pos:position pos:line="51" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="44">task<pos:position pos:line="51" pos:column="48"/></name><operator pos:line="51" pos:column="48">-&gt;<pos:position pos:line="51" pos:column="53"/></operator><name pos:line="51" pos:column="50">stream_id<pos:position pos:line="51" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">h2_iq_add<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><name><name pos:line="52" pos:column="23">m<pos:position pos:line="52" pos:column="24"/></name><operator pos:line="52" pos:column="24">-&gt;<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="26">q<pos:position pos:line="52" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="29">task<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">-&gt;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="35">stream_id<pos:position pos:line="52" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="46">NULL<pos:position pos:line="52" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="52">NULL<pos:position pos:line="52" pos:column="56"/></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="58"/></expr_stmt>
            <return pos:line="53" pos:column="13">return;<pos:position pos:line="53" pos:column="20"/></return>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
        
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">task<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">worker_done<pos:position pos:line="56" pos:column="26"/></name></name> <operator pos:line="56" pos:column="27">=<pos:position pos:line="56" pos:column="28"/></operator> <literal type="number" pos:line="56" pos:column="29">1<pos:position pos:line="56" pos:column="30"/></literal></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="57" pos:column="9">task<pos:position pos:line="57" pos:column="13"/></name><operator pos:line="57" pos:column="13">-&gt;<pos:position pos:line="57" pos:column="18"/></operator><name pos:line="57" pos:column="15">done_at<pos:position pos:line="57" pos:column="22"/></name></name> <operator pos:line="57" pos:column="23">=<pos:position pos:line="57" pos:column="24"/></operator> <call><name pos:line="57" pos:column="25">apr_time_now<pos:position pos:line="57" pos:column="37"/></name><argument_list pos:line="57" pos:column="37">()<pos:position pos:line="57" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="40"/></expr_stmt>
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">task<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">-&gt;<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="19">output<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">.<pos:position pos:line="58" pos:column="26"/></operator><name pos:line="58" pos:column="26">beam<pos:position pos:line="58" pos:column="30"/></name></name></expr>)<pos:position pos:line="58" pos:column="31"/></condition><then pos:line="58" pos:column="31"> <block pos:line="58" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">h2_beam_on_consumed<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name><name pos:line="59" pos:column="33">task<pos:position pos:line="59" pos:column="37"/></name><operator pos:line="59" pos:column="37">-&gt;<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="39">output<pos:position pos:line="59" pos:column="45"/></name><operator pos:line="59" pos:column="45">.<pos:position pos:line="59" pos:column="46"/></operator><name pos:line="59" pos:column="46">beam<pos:position pos:line="59" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="52">NULL<pos:position pos:line="59" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="58">NULL<pos:position pos:line="59" pos:column="62"/></name></expr></argument>)<pos:position pos:line="59" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">h2_beam_mutex_set<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><name><name pos:line="60" pos:column="31">task<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">-&gt;<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="37">output<pos:position pos:line="60" pos:column="43"/></name><operator pos:line="60" pos:column="43">.<pos:position pos:line="60" pos:column="44"/></operator><name pos:line="60" pos:column="44">beam<pos:position pos:line="60" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="50">NULL<pos:position pos:line="60" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="56">NULL<pos:position pos:line="60" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="62">NULL<pos:position pos:line="60" pos:column="66"/></name></expr></argument>)<pos:position pos:line="60" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">ap_log_cerror<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">(<argument><expr><name pos:line="62" pos:column="23">APLOG_MARK<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="35">APLOG_TRACE2<pos:position pos:line="62" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="49">0<pos:position pos:line="62" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="52">m<pos:position pos:line="62" pos:column="53"/></name><operator pos:line="62" pos:column="53">-&gt;<pos:position pos:line="62" pos:column="58"/></operator><name pos:line="62" pos:column="55">c<pos:position pos:line="62" pos:column="56"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="63" pos:column="23">"h2_mplx(%s): request done, %f ms elapsed"<pos:position pos:line="63" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="67">task<pos:position pos:line="63" pos:column="71"/></name><operator pos:line="63" pos:column="71">-&gt;<pos:position pos:line="63" pos:column="76"/></operator><name pos:line="63" pos:column="73">id<pos:position pos:line="63" pos:column="75"/></name></name></expr></argument>, 
                      <argument><expr><operator pos:line="64" pos:column="23">(<pos:position pos:line="64" pos:column="24"/></operator><name><name pos:line="64" pos:column="24">task<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">done_at<pos:position pos:line="64" pos:column="37"/></name></name> <operator pos:line="64" pos:column="38">-<pos:position pos:line="64" pos:column="39"/></operator> <name><name pos:line="64" pos:column="40">task<pos:position pos:line="64" pos:column="44"/></name><operator pos:line="64" pos:column="44">-&gt;<pos:position pos:line="64" pos:column="49"/></operator><name pos:line="64" pos:column="46">started_at<pos:position pos:line="64" pos:column="56"/></name></name><operator pos:line="64" pos:column="56">)<pos:position pos:line="64" pos:column="57"/></operator> <operator pos:line="64" pos:column="58">/<pos:position pos:line="64" pos:column="59"/></operator> <literal type="number" pos:line="64" pos:column="60">1000.0<pos:position pos:line="64" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="68"/></expr_stmt>
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name><name pos:line="65" pos:column="13">task<pos:position pos:line="65" pos:column="17"/></name><operator pos:line="65" pos:column="17">-&gt;<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="19">started_at<pos:position pos:line="65" pos:column="29"/></name></name> <operator pos:line="65" pos:column="30">&gt;<pos:position pos:line="65" pos:column="34"/></operator> <name><name pos:line="65" pos:column="32">m<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">-&gt;<pos:position pos:line="65" pos:column="38"/></operator><name pos:line="65" pos:column="35">last_idle_block<pos:position pos:line="65" pos:column="50"/></name></name></expr>)<pos:position pos:line="65" pos:column="51"/></condition><then pos:line="65" pos:column="51"> <block pos:line="65" pos:column="52">{
            <comment type="block" pos:line="66" pos:column="13">/* this task finished without causing an 'idle block', e.g.
             * a block by flow control.
             */</comment>
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name><name pos:line="69" pos:column="17">task<pos:position pos:line="69" pos:column="21"/></name><operator pos:line="69" pos:column="21">-&gt;<pos:position pos:line="69" pos:column="26"/></operator><name pos:line="69" pos:column="23">done_at<pos:position pos:line="69" pos:column="30"/></name></name><operator pos:line="69" pos:column="30">-<pos:position pos:line="69" pos:column="31"/></operator> <name><name pos:line="69" pos:column="32">m<pos:position pos:line="69" pos:column="33"/></name><operator pos:line="69" pos:column="33">-&gt;<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="35">last_limit_change<pos:position pos:line="69" pos:column="52"/></name></name> <operator pos:line="69" pos:column="53">&gt;=<pos:position pos:line="69" pos:column="58"/></operator> <name><name pos:line="69" pos:column="56">m<pos:position pos:line="69" pos:column="57"/></name><operator pos:line="69" pos:column="57">-&gt;<pos:position pos:line="69" pos:column="62"/></operator><name pos:line="69" pos:column="59">limit_change_interval<pos:position pos:line="69" pos:column="80"/></name></name>
                <operator pos:line="70" pos:column="17">&amp;&amp;<pos:position pos:line="70" pos:column="27"/></operator> <name><name pos:line="70" pos:column="20">m<pos:position pos:line="70" pos:column="21"/></name><operator pos:line="70" pos:column="21">-&gt;<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="23">workers_limit<pos:position pos:line="70" pos:column="36"/></name></name> <operator pos:line="70" pos:column="37">&lt;<pos:position pos:line="70" pos:column="41"/></operator> <name><name pos:line="70" pos:column="39">m<pos:position pos:line="70" pos:column="40"/></name><operator pos:line="70" pos:column="40">-&gt;<pos:position pos:line="70" pos:column="45"/></operator><name pos:line="70" pos:column="42">workers_max<pos:position pos:line="70" pos:column="53"/></name></name></expr>)<pos:position pos:line="70" pos:column="54"/></condition><then pos:line="70" pos:column="54"> <block pos:line="70" pos:column="55">{
                <comment type="block" pos:line="71" pos:column="17">/* Well behaving stream, allow it more workers */</comment>
                <expr_stmt><expr><name><name pos:line="72" pos:column="17">m<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">-&gt;<pos:position pos:line="72" pos:column="23"/></operator><name pos:line="72" pos:column="20">workers_limit<pos:position pos:line="72" pos:column="33"/></name></name> <operator pos:line="72" pos:column="34">=<pos:position pos:line="72" pos:column="35"/></operator> <call><name pos:line="72" pos:column="36">H2MIN<pos:position pos:line="72" pos:column="41"/></name><argument_list pos:line="72" pos:column="41">(<argument><expr><name><name pos:line="72" pos:column="42">m<pos:position pos:line="72" pos:column="43"/></name><operator pos:line="72" pos:column="43">-&gt;<pos:position pos:line="72" pos:column="48"/></operator><name pos:line="72" pos:column="45">workers_limit<pos:position pos:line="72" pos:column="58"/></name></name> <operator pos:line="72" pos:column="59">*<pos:position pos:line="72" pos:column="60"/></operator> <literal type="number" pos:line="72" pos:column="61">2<pos:position pos:line="72" pos:column="62"/></literal></expr></argument>, 
                                         <argument><expr><name><name pos:line="73" pos:column="42">m<pos:position pos:line="73" pos:column="43"/></name><operator pos:line="73" pos:column="43">-&gt;<pos:position pos:line="73" pos:column="48"/></operator><name pos:line="73" pos:column="45">workers_max<pos:position pos:line="73" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="74" pos:column="17">m<pos:position pos:line="74" pos:column="18"/></name><operator pos:line="74" pos:column="18">-&gt;<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="20">last_limit_change<pos:position pos:line="74" pos:column="37"/></name></name> <operator pos:line="74" pos:column="38">=<pos:position pos:line="74" pos:column="39"/></operator> <name><name pos:line="74" pos:column="40">task<pos:position pos:line="74" pos:column="44"/></name><operator pos:line="74" pos:column="44">-&gt;<pos:position pos:line="74" pos:column="49"/></operator><name pos:line="74" pos:column="46">done_at<pos:position pos:line="74" pos:column="53"/></name></name></expr>;<pos:position pos:line="74" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="75" pos:column="17">m<pos:position pos:line="75" pos:column="18"/></name><operator pos:line="75" pos:column="18">-&gt;<pos:position pos:line="75" pos:column="23"/></operator><name pos:line="75" pos:column="20">need_registration<pos:position pos:line="75" pos:column="37"/></name></name> <operator pos:line="75" pos:column="38">=<pos:position pos:line="75" pos:column="39"/></operator> <literal type="number" pos:line="75" pos:column="40">1<pos:position pos:line="75" pos:column="41"/></literal></expr>;<pos:position pos:line="75" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="76" pos:column="17">ap_log_cerror<pos:position pos:line="76" pos:column="30"/></name><argument_list pos:line="76" pos:column="30">(<argument><expr><name pos:line="76" pos:column="31">APLOG_MARK<pos:position pos:line="76" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="43">APLOG_TRACE1<pos:position pos:line="76" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="57">0<pos:position pos:line="76" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="60">m<pos:position pos:line="76" pos:column="61"/></name><operator pos:line="76" pos:column="61">-&gt;<pos:position pos:line="76" pos:column="66"/></operator><name pos:line="76" pos:column="63">c<pos:position pos:line="76" pos:column="64"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="77" pos:column="31">"h2_mplx(%ld): increase worker limit to %d"<pos:position pos:line="77" pos:column="74"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="78" pos:column="31">m<pos:position pos:line="78" pos:column="32"/></name><operator pos:line="78" pos:column="32">-&gt;<pos:position pos:line="78" pos:column="37"/></operator><name pos:line="78" pos:column="34">id<pos:position pos:line="78" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="38">m<pos:position pos:line="78" pos:column="39"/></name><operator pos:line="78" pos:column="39">-&gt;<pos:position pos:line="78" pos:column="44"/></operator><name pos:line="78" pos:column="41">workers_limit<pos:position pos:line="78" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="79" pos:column="14"/></block></then></if>
        }<pos:position pos:line="80" pos:column="10"/></block></then></if>
        
        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name pos:line="82" pos:column="13">stream<pos:position pos:line="82" pos:column="19"/></name></expr>)<pos:position pos:line="82" pos:column="20"/></condition><then pos:line="82" pos:column="20"> <block pos:line="82" pos:column="21">{
            <comment type="block" pos:line="83" pos:column="13">/* hang around until the stream deregisters */</comment>
            <expr_stmt><expr><call><name pos:line="84" pos:column="13">ap_log_cerror<pos:position pos:line="84" pos:column="26"/></name><argument_list pos:line="84" pos:column="26">(<argument><expr><name pos:line="84" pos:column="27">APLOG_MARK<pos:position pos:line="84" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="39">APLOG_TRACE2<pos:position pos:line="84" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="53">0<pos:position pos:line="84" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="56">m<pos:position pos:line="84" pos:column="57"/></name><operator pos:line="84" pos:column="57">-&gt;<pos:position pos:line="84" pos:column="62"/></operator><name pos:line="84" pos:column="59">c<pos:position pos:line="84" pos:column="60"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="85" pos:column="27">"h2_mplx(%s): task_done, stream still open"<pos:position pos:line="85" pos:column="70"/></literal></expr></argument>, 
                          <argument><expr><name><name pos:line="86" pos:column="27">task<pos:position pos:line="86" pos:column="31"/></name><operator pos:line="86" pos:column="31">-&gt;<pos:position pos:line="86" pos:column="36"/></operator><name pos:line="86" pos:column="33">id<pos:position pos:line="86" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="37"/></expr_stmt>
            <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><call><name pos:line="87" pos:column="17">h2_stream_is_suspended<pos:position pos:line="87" pos:column="39"/></name><argument_list pos:line="87" pos:column="39">(<argument><expr><name pos:line="87" pos:column="40">stream<pos:position pos:line="87" pos:column="46"/></name></expr></argument>)<pos:position pos:line="87" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="48"/></condition><then pos:line="87" pos:column="48"> <block pos:line="87" pos:column="49">{
                <comment type="block" pos:line="88" pos:column="17">/* more data will not arrive, resume the stream */</comment>
                <expr_stmt><expr><call><name pos:line="89" pos:column="17">h2_ihash_add<pos:position pos:line="89" pos:column="29"/></name><argument_list pos:line="89" pos:column="29">(<argument><expr><name><name pos:line="89" pos:column="30">m<pos:position pos:line="89" pos:column="31"/></name><operator pos:line="89" pos:column="31">-&gt;<pos:position pos:line="89" pos:column="36"/></operator><name pos:line="89" pos:column="33">sresume<pos:position pos:line="89" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="42">stream<pos:position pos:line="89" pos:column="48"/></name></expr></argument>)<pos:position pos:line="89" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="90" pos:column="17">have_out_data_for<pos:position pos:line="90" pos:column="34"/></name><argument_list pos:line="90" pos:column="34">(<argument><expr><name pos:line="90" pos:column="35">m<pos:position pos:line="90" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="38">stream<pos:position pos:line="90" pos:column="44"/></name><operator pos:line="90" pos:column="44">-&gt;<pos:position pos:line="90" pos:column="49"/></operator><name pos:line="90" pos:column="46">id<pos:position pos:line="90" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="50"/></expr_stmt>
            }<pos:position pos:line="91" pos:column="14"/></block></then></if>
        }<pos:position pos:line="92" pos:column="10"/></block></then>
        <else pos:line="93" pos:column="9">else <block pos:line="93" pos:column="14">{
            <comment type="block" pos:line="94" pos:column="13">/* stream no longer active, was it placed in hold? */</comment>
            <expr_stmt><expr><name pos:line="95" pos:column="13">stream<pos:position pos:line="95" pos:column="19"/></name> <operator pos:line="95" pos:column="20">=<pos:position pos:line="95" pos:column="21"/></operator> <call><name pos:line="95" pos:column="22">h2_ihash_get<pos:position pos:line="95" pos:column="34"/></name><argument_list pos:line="95" pos:column="34">(<argument><expr><name><name pos:line="95" pos:column="35">m<pos:position pos:line="95" pos:column="36"/></name><operator pos:line="95" pos:column="36">-&gt;<pos:position pos:line="95" pos:column="41"/></operator><name pos:line="95" pos:column="38">shold<pos:position pos:line="95" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="45">task<pos:position pos:line="95" pos:column="49"/></name><operator pos:line="95" pos:column="49">-&gt;<pos:position pos:line="95" pos:column="54"/></operator><name pos:line="95" pos:column="51">stream_id<pos:position pos:line="95" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="62"/></expr_stmt>
            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><name pos:line="96" pos:column="17">stream<pos:position pos:line="96" pos:column="23"/></name></expr>)<pos:position pos:line="96" pos:column="24"/></condition><then pos:line="96" pos:column="24"> <block pos:line="96" pos:column="25">{
                <expr_stmt><expr><call><name pos:line="97" pos:column="17">ap_log_cerror<pos:position pos:line="97" pos:column="30"/></name><argument_list pos:line="97" pos:column="30">(<argument><expr><name pos:line="97" pos:column="31">APLOG_MARK<pos:position pos:line="97" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="43">APLOG_TRACE2<pos:position pos:line="97" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="57">0<pos:position pos:line="97" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="60">m<pos:position pos:line="97" pos:column="61"/></name><operator pos:line="97" pos:column="61">-&gt;<pos:position pos:line="97" pos:column="66"/></operator><name pos:line="97" pos:column="63">c<pos:position pos:line="97" pos:column="64"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="98" pos:column="31">"h2_mplx(%s): task_done, stream in hold"<pos:position pos:line="98" pos:column="71"/></literal></expr></argument>, 
                              <argument><expr><name><name pos:line="99" pos:column="31">task<pos:position pos:line="99" pos:column="35"/></name><operator pos:line="99" pos:column="35">-&gt;<pos:position pos:line="99" pos:column="40"/></operator><name pos:line="99" pos:column="37">id<pos:position pos:line="99" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="41"/></expr_stmt>
                <comment type="block" pos:line="100" pos:column="17">/* We cannot destroy the stream here since this is 
                 * called from a worker thread and freeing memory pools
                 * is only safe in the only thread using it (and its
                 * parent pool / allocator) */</comment>
                <expr_stmt><expr><call><name pos:line="104" pos:column="17">h2_ihash_remove<pos:position pos:line="104" pos:column="32"/></name><argument_list pos:line="104" pos:column="32">(<argument><expr><name><name pos:line="104" pos:column="33">m<pos:position pos:line="104" pos:column="34"/></name><operator pos:line="104" pos:column="34">-&gt;<pos:position pos:line="104" pos:column="39"/></operator><name pos:line="104" pos:column="36">shold<pos:position pos:line="104" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="43">stream<pos:position pos:line="104" pos:column="49"/></name><operator pos:line="104" pos:column="49">-&gt;<pos:position pos:line="104" pos:column="54"/></operator><name pos:line="104" pos:column="51">id<pos:position pos:line="104" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="105" pos:column="17">h2_ihash_add<pos:position pos:line="105" pos:column="29"/></name><argument_list pos:line="105" pos:column="29">(<argument><expr><name><name pos:line="105" pos:column="30">m<pos:position pos:line="105" pos:column="31"/></name><operator pos:line="105" pos:column="31">-&gt;<pos:position pos:line="105" pos:column="36"/></operator><name pos:line="105" pos:column="33">spurge<pos:position pos:line="105" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="41">stream<pos:position pos:line="105" pos:column="47"/></name></expr></argument>)<pos:position pos:line="105" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="106" pos:column="14"/></block></then>
            <else pos:line="107" pos:column="13">else <block pos:line="107" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="108" pos:column="17">ap_log_cerror<pos:position pos:line="108" pos:column="30"/></name><argument_list pos:line="108" pos:column="30">(<argument><expr><name pos:line="108" pos:column="31">APLOG_MARK<pos:position pos:line="108" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="43">APLOG_TRACE2<pos:position pos:line="108" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="57">0<pos:position pos:line="108" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="60">m<pos:position pos:line="108" pos:column="61"/></name><operator pos:line="108" pos:column="61">-&gt;<pos:position pos:line="108" pos:column="66"/></operator><name pos:line="108" pos:column="63">c<pos:position pos:line="108" pos:column="64"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="109" pos:column="31">"h2_mplx(%s): task_done, stream not found"<pos:position pos:line="109" pos:column="73"/></literal></expr></argument>, 
                              <argument><expr><name><name pos:line="110" pos:column="31">task<pos:position pos:line="110" pos:column="35"/></name><operator pos:line="110" pos:column="35">-&gt;<pos:position pos:line="110" pos:column="40"/></operator><name pos:line="110" pos:column="37">id<pos:position pos:line="110" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="111" pos:column="17">task_destroy<pos:position pos:line="111" pos:column="29"/></name><argument_list pos:line="111" pos:column="29">(<argument><expr><name pos:line="111" pos:column="30">m<pos:position pos:line="111" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="33">task<pos:position pos:line="111" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="39">0<pos:position pos:line="111" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="112" pos:column="14"/></block></else></if>
            
            <if pos:line="114" pos:column="13">if <condition pos:line="114" pos:column="16">(<expr><name><name pos:line="114" pos:column="17">m<pos:position pos:line="114" pos:column="18"/></name><operator pos:line="114" pos:column="18">-&gt;<pos:position pos:line="114" pos:column="23"/></operator><name pos:line="114" pos:column="20">join_wait<pos:position pos:line="114" pos:column="29"/></name></name></expr>)<pos:position pos:line="114" pos:column="30"/></condition><then pos:line="114" pos:column="30"> <block pos:line="114" pos:column="31">{
                <expr_stmt><expr><call><name pos:line="115" pos:column="17">apr_thread_cond_signal<pos:position pos:line="115" pos:column="39"/></name><argument_list pos:line="115" pos:column="39">(<argument><expr><name><name pos:line="115" pos:column="40">m<pos:position pos:line="115" pos:column="41"/></name><operator pos:line="115" pos:column="41">-&gt;<pos:position pos:line="115" pos:column="46"/></operator><name pos:line="115" pos:column="43">join_wait<pos:position pos:line="115" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="116" pos:column="14"/></block></then></if>
        }<pos:position pos:line="117" pos:column="10"/></block></else></if>
    }<pos:position pos:line="118" pos:column="6"/></block></else></if>
}<pos:position pos:line="119" pos:column="2"/></block></function></unit>

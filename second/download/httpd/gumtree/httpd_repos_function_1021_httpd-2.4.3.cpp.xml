<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1021_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cfg_lua_map_handler<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">lua_State<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">L<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ap_lua_dir_cfg<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">cfg<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">check_dir_config<pos:position pos:line="3" pos:column="43"/></name><argument_list pos:line="3" pos:column="43">(<argument><expr><name pos:line="3" pos:column="44">L<pos:position pos:line="3" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="47">1<pos:position pos:line="3" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ap_lua_mapped_handler_spec<pos:position pos:line="4" pos:column="31"/></name> <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier></type><name pos:line="4" pos:column="33">handler<pos:position pos:line="4" pos:column="40"/></name> <init pos:line="4" pos:column="41">=
        <expr><call><name pos:line="5" pos:column="9">apr_pcalloc<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name><name pos:line="5" pos:column="21">cfg<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">pool<pos:position pos:line="5" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="32">sizeof<argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">ap_lua_mapped_handler_spec<pos:position pos:line="5" pos:column="65"/></name></expr></argument>)<pos:position pos:line="5" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="68"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">handler<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">uri_pattern<pos:position pos:line="6" pos:column="25"/></name></name> <operator pos:line="6" pos:column="26">=<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="28">NULL<pos:position pos:line="6" pos:column="32"/></name></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">handler<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">function_name<pos:position pos:line="7" pos:column="27"/></name></name> <operator pos:line="7" pos:column="28">=<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="30">NULL<pos:position pos:line="7" pos:column="34"/></name></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">luaL_checktype<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">L<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="23">2<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="26">LUA_TTABLE<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">lua_getfield<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">L<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="21">2<pos:position pos:line="10" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="24">"file"<pos:position pos:line="10" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">lua_isstring<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">L<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29"> <block pos:line="11" pos:column="30">{
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">char<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">file<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><call><name pos:line="12" pos:column="28">lua_tostring<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">L<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="44">-<pos:position pos:line="12" pos:column="45"/></operator><literal type="number" pos:line="12" pos:column="45">1<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="48"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">handler<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">file_name<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <call><name pos:line="13" pos:column="30">apr_pstrdup<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><name><name pos:line="13" pos:column="42">cfg<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">pool<pos:position pos:line="13" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="53">file<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">lua_pop<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">L<pos:position pos:line="15" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="16">1<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">lua_getfield<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><name pos:line="17" pos:column="18">L<pos:position pos:line="17" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="21">2<pos:position pos:line="17" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="24">"pattern"<pos:position pos:line="17" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">lua_isstring<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">L<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="25">-<pos:position pos:line="18" pos:column="26"/></operator><literal type="number" pos:line="18" pos:column="26">1<pos:position pos:line="18" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29"> <block pos:line="18" pos:column="30">{
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">const<pos:position pos:line="19" pos:column="14"/></specifier> <name pos:line="19" pos:column="15">char<pos:position pos:line="19" pos:column="19"/></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">pattern<pos:position pos:line="19" pos:column="28"/></name> <init pos:line="19" pos:column="29">= <expr><call><name pos:line="19" pos:column="31">lua_tostring<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">L<pos:position pos:line="19" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="47">-<pos:position pos:line="19" pos:column="48"/></operator><literal type="number" pos:line="19" pos:column="48">1<pos:position pos:line="19" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="51"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="21" pos:column="9">ap_regex_t<pos:position pos:line="21" pos:column="19"/></name> <modifier pos:line="21" pos:column="20">*<pos:position pos:line="21" pos:column="21"/></modifier></type><name pos:line="21" pos:column="21">uri_pattern<pos:position pos:line="21" pos:column="32"/></name> <init pos:line="21" pos:column="33">= <expr><call><name pos:line="21" pos:column="35">apr_palloc<pos:position pos:line="21" pos:column="45"/></name><argument_list pos:line="21" pos:column="45">(<argument><expr><name><name pos:line="21" pos:column="46">cfg<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">-&gt;<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="51">pool<pos:position pos:line="21" pos:column="55"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="57">sizeof<argument_list pos:line="21" pos:column="63">(<argument><expr><name pos:line="21" pos:column="64">ap_regex_t<pos:position pos:line="21" pos:column="74"/></name></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="77"/></decl_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">ap_regcomp<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">uri_pattern<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">pattern<pos:position pos:line="22" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="46">0<pos:position pos:line="22" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call> <operator pos:line="22" pos:column="49">!=<pos:position pos:line="22" pos:column="51"/></operator> <name pos:line="22" pos:column="52">OK<pos:position pos:line="22" pos:column="54"/></name></expr>)<pos:position pos:line="22" pos:column="55"/></condition><then pos:line="22" pos:column="55"> <block pos:line="22" pos:column="56">{
            <return pos:line="23" pos:column="13">return <expr><call><name pos:line="23" pos:column="20">luaL_error<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">L<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="34">"Unable to compile regular expression, '%s'"<pos:position pos:line="23" pos:column="78"/></literal></expr></argument>,
                              <argument><expr><name pos:line="24" pos:column="31">pattern<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></return>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">handler<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">uri_pattern<pos:position pos:line="26" pos:column="29"/></name></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <name pos:line="26" pos:column="32">uri_pattern<pos:position pos:line="26" pos:column="43"/></name></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">lua_pop<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><name pos:line="28" pos:column="13">L<pos:position pos:line="28" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="16">1<pos:position pos:line="28" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">lua_getfield<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">L<pos:position pos:line="30" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="21">2<pos:position pos:line="30" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="24">"scope"<pos:position pos:line="30" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><call><name pos:line="31" pos:column="9">lua_isstring<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">L<pos:position pos:line="31" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="25">-<pos:position pos:line="31" pos:column="26"/></operator><literal type="number" pos:line="31" pos:column="26">1<pos:position pos:line="31" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="29"/></condition><then pos:line="31" pos:column="29"> <block pos:line="31" pos:column="30">{
        <decl_stmt><decl><type><specifier pos:line="32" pos:column="9">const<pos:position pos:line="32" pos:column="14"/></specifier> <name pos:line="32" pos:column="15">char<pos:position pos:line="32" pos:column="19"/></name> <modifier pos:line="32" pos:column="20">*<pos:position pos:line="32" pos:column="21"/></modifier></type><name pos:line="32" pos:column="21">scope<pos:position pos:line="32" pos:column="26"/></name> <init pos:line="32" pos:column="27">= <expr><call><name pos:line="32" pos:column="29">lua_tostring<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">(<argument><expr><name pos:line="32" pos:column="42">L<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="45">-<pos:position pos:line="32" pos:column="46"/></operator><literal type="number" pos:line="32" pos:column="46">1<pos:position pos:line="32" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="49"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">handler<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">scope<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <call><name pos:line="33" pos:column="26">apl_toscope<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">(<argument><expr><name pos:line="33" pos:column="38">scope<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then>
    <else pos:line="35" pos:column="5">else <block pos:line="35" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">handler<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">-&gt;<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="18">scope<pos:position pos:line="36" pos:column="23"/></name></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="26">AP_LUA_SCOPE_ONCE<pos:position pos:line="36" pos:column="43"/></name></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">lua_pop<pos:position pos:line="38" pos:column="12"/></name><argument_list pos:line="38" pos:column="12">(<argument><expr><name pos:line="38" pos:column="13">L<pos:position pos:line="38" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="16">1<pos:position pos:line="38" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">lua_getfield<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<argument><expr><name pos:line="40" pos:column="18">L<pos:position pos:line="40" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="21">2<pos:position pos:line="40" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="24">"func"<pos:position pos:line="40" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><call><name pos:line="41" pos:column="9">lua_isstring<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">L<pos:position pos:line="41" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="25">-<pos:position pos:line="41" pos:column="26"/></operator><literal type="number" pos:line="41" pos:column="26">1<pos:position pos:line="41" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="29"/></condition><then pos:line="41" pos:column="29"> <block pos:line="41" pos:column="30">{
        <decl_stmt><decl><type><specifier pos:line="42" pos:column="9">const<pos:position pos:line="42" pos:column="14"/></specifier> <name pos:line="42" pos:column="15">char<pos:position pos:line="42" pos:column="19"/></name> <modifier pos:line="42" pos:column="20">*<pos:position pos:line="42" pos:column="21"/></modifier></type><name pos:line="42" pos:column="21">value<pos:position pos:line="42" pos:column="26"/></name> <init pos:line="42" pos:column="27">= <expr><call><name pos:line="42" pos:column="29">lua_tostring<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">L<pos:position pos:line="42" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="45">-<pos:position pos:line="42" pos:column="46"/></operator><literal type="number" pos:line="42" pos:column="46">1<pos:position pos:line="42" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="49"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">handler<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">function_name<pos:position pos:line="43" pos:column="31"/></name></name> <operator pos:line="43" pos:column="32">=<pos:position pos:line="43" pos:column="33"/></operator> <call><name pos:line="43" pos:column="34">apr_pstrdup<pos:position pos:line="43" pos:column="45"/></name><argument_list pos:line="43" pos:column="45">(<argument><expr><name><name pos:line="43" pos:column="46">cfg<pos:position pos:line="43" pos:column="49"/></name><operator pos:line="43" pos:column="49">-&gt;<pos:position pos:line="43" pos:column="54"/></operator><name pos:line="43" pos:column="51">pool<pos:position pos:line="43" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="57">value<pos:position pos:line="43" pos:column="62"/></name></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then>
    <else pos:line="45" pos:column="5">else <block pos:line="45" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">handler<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">function_name<pos:position pos:line="46" pos:column="31"/></name></name> <operator pos:line="46" pos:column="32">=<pos:position pos:line="46" pos:column="33"/></operator> <literal type="string" pos:line="46" pos:column="34">"handle"<pos:position pos:line="46" pos:column="42"/></literal></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">lua_pop<pos:position pos:line="48" pos:column="12"/></name><argument_list pos:line="48" pos:column="12">(<argument><expr><name pos:line="48" pos:column="13">L<pos:position pos:line="48" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="16">1<pos:position pos:line="48" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="19"/></expr_stmt>


    <expr_stmt><expr><operator pos:line="51" pos:column="5">*<pos:position pos:line="51" pos:column="6"/></operator><operator pos:line="51" pos:column="6">(<pos:position pos:line="51" pos:column="7"/></operator><specifier pos:line="51" pos:column="7">const<pos:position pos:line="51" pos:column="12"/></specifier> <name pos:line="51" pos:column="13">ap_lua_mapped_handler_spec<pos:position pos:line="51" pos:column="39"/></name> <operator pos:line="51" pos:column="40">*<pos:position pos:line="51" pos:column="41"/></operator><operator pos:line="51" pos:column="41">*<pos:position pos:line="51" pos:column="42"/></operator><operator pos:line="51" pos:column="42">)<pos:position pos:line="51" pos:column="43"/></operator> <call><name pos:line="51" pos:column="44">apr_array_push<pos:position pos:line="51" pos:column="58"/></name><argument_list pos:line="51" pos:column="58">(<argument><expr><name><name pos:line="51" pos:column="59">cfg<pos:position pos:line="51" pos:column="62"/></name><operator pos:line="51" pos:column="62">-&gt;<pos:position pos:line="51" pos:column="67"/></operator><name pos:line="51" pos:column="64">mapped_handlers<pos:position pos:line="51" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="80"/></argument_list></call> <operator pos:line="51" pos:column="81">=<pos:position pos:line="51" pos:column="82"/></operator>
        <name pos:line="52" pos:column="9">handler<pos:position pos:line="52" pos:column="16"/></name></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>
    <return pos:line="53" pos:column="5">return <expr><literal type="number" pos:line="53" pos:column="12">0<pos:position pos:line="53" pos:column="13"/></literal></expr>;<pos:position pos:line="53" pos:column="14"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3566.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">hm_post_config<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">apr_pool_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">p<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">apr_pool_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">plog<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">apr_pool_t<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">ptemp<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">server_rec<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">s<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">userdata_key<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><literal type="string" pos:line="5" pos:column="32">"mod_heartmonitor_init"<pos:position pos:line="5" pos:column="55"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">void<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">data<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">hm_ctx_t<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">ctx<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><call><name pos:line="7" pos:column="21">ap_get_module_config<pos:position pos:line="7" pos:column="41"/></name><argument_list pos:line="7" pos:column="41">(<argument><expr><name><name pos:line="7" pos:column="42">s<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">module_config<pos:position pos:line="7" pos:column="58"/></name></name></expr></argument>,
                                         <argument><expr><operator pos:line="8" pos:column="42">&amp;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="43">heartmonitor_module<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="64"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">APR_OPTIONAL_FN_TYPE<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">ap_watchdog_get_instance<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call> <operator pos:line="9" pos:column="52">*<pos:position pos:line="9" pos:column="53"/></operator><name pos:line="9" pos:column="53">hm_watchdog_get_instance<pos:position pos:line="9" pos:column="77"/></name></expr>;<pos:position pos:line="9" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">APR_OPTIONAL_FN_TYPE<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">ap_watchdog_register_callback<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call> <operator pos:line="10" pos:column="57">*<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="58">hm_watchdog_register_callback<pos:position pos:line="10" pos:column="87"/></name></expr>;<pos:position pos:line="10" pos:column="88"/></expr_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">hm_watchdog_get_instance<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">=<pos:position pos:line="12" pos:column="31"/></operator> <call><name pos:line="12" pos:column="32">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="12" pos:column="56"/></name><argument_list pos:line="12" pos:column="56">(<argument><expr><name pos:line="12" pos:column="57">ap_watchdog_get_instance<pos:position pos:line="12" pos:column="81"/></name></expr></argument>)<pos:position pos:line="12" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="83"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">hm_watchdog_register_callback<pos:position pos:line="13" pos:column="34"/></name> <operator pos:line="13" pos:column="35">=<pos:position pos:line="13" pos:column="36"/></operator> <call><name pos:line="13" pos:column="37">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="13" pos:column="61"/></name><argument_list pos:line="13" pos:column="61">(<argument><expr><name pos:line="13" pos:column="62">ap_watchdog_register_callback<pos:position pos:line="13" pos:column="91"/></name></expr></argument>)<pos:position pos:line="13" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="93"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">hm_watchdog_get_instance<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">||<pos:position pos:line="14" pos:column="37"/></operator> <operator pos:line="14" pos:column="38">!<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">hm_watchdog_register_callback<pos:position pos:line="14" pos:column="68"/></name></expr>)<pos:position pos:line="14" pos:column="69"/></condition><then pos:line="14" pos:column="69"> <block pos:line="14" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ap_log_error<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">APLOG_MARK<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">APLOG_CRIT<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="46">0<pos:position pos:line="15" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="49">s<pos:position pos:line="15" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="16" pos:column="22">"Heartmonitor: mod_watchdog is required"<pos:position pos:line="16" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><operator pos:line="17" pos:column="16">!<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">OK<pos:position pos:line="17" pos:column="19"/></name></expr>;<pos:position pos:line="17" pos:column="20"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="20" pos:column="5">/* Create the slotmem */</comment>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">apr_pool_userdata_get<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><operator pos:line="21" pos:column="27">&amp;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="28">data<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">userdata_key<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="48">s<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">-&gt;<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="51">process<pos:position pos:line="21" pos:column="58"/></name><operator pos:line="21" pos:column="58">-&gt;<pos:position pos:line="21" pos:column="63"/></operator><name pos:line="21" pos:column="60">pool<pos:position pos:line="21" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="66"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">data<pos:position pos:line="22" pos:column="14"/></name></expr>)<pos:position pos:line="22" pos:column="15"/></condition><then pos:line="22" pos:column="15"> <block pos:line="22" pos:column="16">{
        <comment type="block" pos:line="23" pos:column="9">/* first call do nothing */</comment>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">apr_pool_userdata_set<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><operator pos:line="24" pos:column="31">(<pos:position pos:line="24" pos:column="32"/></operator><specifier pos:line="24" pos:column="32">const<pos:position pos:line="24" pos:column="37"/></specifier> <name pos:line="24" pos:column="38">void<pos:position pos:line="24" pos:column="42"/></name> <operator pos:line="24" pos:column="43">*<pos:position pos:line="24" pos:column="44"/></operator><operator pos:line="24" pos:column="44">)<pos:position pos:line="24" pos:column="45"/></operator><literal type="number" pos:line="24" pos:column="45">1<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="48">userdata_key<pos:position pos:line="24" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="62">apr_pool_cleanup_null<pos:position pos:line="24" pos:column="83"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="85">s<pos:position pos:line="24" pos:column="86"/></name><operator pos:line="24" pos:column="86">-&gt;<pos:position pos:line="24" pos:column="91"/></operator><name pos:line="24" pos:column="88">process<pos:position pos:line="24" pos:column="95"/></name><operator pos:line="24" pos:column="95">-&gt;<pos:position pos:line="24" pos:column="100"/></operator><name pos:line="24" pos:column="97">pool<pos:position pos:line="24" pos:column="101"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="103"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then> <else pos:line="25" pos:column="7">else <block pos:line="25" pos:column="12">{
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">maxworkers<pos:position pos:line="26" pos:column="23"/></name></expr>)<pos:position pos:line="26" pos:column="24"/></condition><then pos:line="26" pos:column="24"> <block pos:line="26" pos:column="25">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">storage<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <call><name pos:line="27" pos:column="23">ap_lookup_provider<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">AP_SLOTMEM_PROVIDER_GROUP<pos:position pos:line="27" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="69">"shared"<pos:position pos:line="27" pos:column="77"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="79">"0"<pos:position pos:line="27" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="84"/></expr_stmt>
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><operator pos:line="28" pos:column="17">!<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">storage<pos:position pos:line="28" pos:column="25"/></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26"> <block pos:line="28" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">ap_log_error<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">APLOG_MARK<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">APLOG_NOERRNO<pos:position pos:line="29" pos:column="55"/></name><operator pos:line="29" pos:column="55">|<pos:position pos:line="29" pos:column="56"/></operator><name pos:line="29" pos:column="56">APLOG_EMERG<pos:position pos:line="29" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="69">0<pos:position pos:line="29" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="72">s<pos:position pos:line="29" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="75">"ap_lookup_provider %s failed"<pos:position pos:line="29" pos:column="105"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="107">AP_SLOTMEM_PROVIDER_GROUP<pos:position pos:line="29" pos:column="132"/></name></expr></argument>)<pos:position pos:line="29" pos:column="133"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="134"/></expr_stmt>
                <return pos:line="30" pos:column="17">return <expr><operator pos:line="30" pos:column="24">!<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">OK<pos:position pos:line="30" pos:column="27"/></name></expr>;<pos:position pos:line="30" pos:column="28"/></return>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">storage<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">create<pos:position pos:line="32" pos:column="28"/></name></name><argument_list pos:line="32" pos:column="28">(<argument><expr><operator pos:line="32" pos:column="29">&amp;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="30">slotmem<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="39">"mod_heartmonitor"<pos:position pos:line="32" pos:column="57"/></literal></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="59">sizeof<argument_list pos:line="32" pos:column="65">(<argument><expr><name pos:line="32" pos:column="66">hm_slot_server_t<pos:position pos:line="32" pos:column="82"/></name></expr></argument>)<pos:position pos:line="32" pos:column="83"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="32" pos:column="85">maxworkers<pos:position pos:line="32" pos:column="95"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="97">AP_SLOTMEM_TYPE_PREGRAB<pos:position pos:line="32" pos:column="120"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="122">p<pos:position pos:line="32" pos:column="123"/></name></expr></argument>)<pos:position pos:line="32" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="125"/></expr_stmt>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><operator pos:line="33" pos:column="17">!<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">slotmem<pos:position pos:line="33" pos:column="25"/></name></expr>)<pos:position pos:line="33" pos:column="26"/></condition><then pos:line="33" pos:column="26"> <block pos:line="33" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="34" pos:column="17">ap_log_error<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">APLOG_MARK<pos:position pos:line="34" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="42">APLOG_NOERRNO<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">|<pos:position pos:line="34" pos:column="56"/></operator><name pos:line="34" pos:column="56">APLOG_EMERG<pos:position pos:line="34" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="69">0<pos:position pos:line="34" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="72">s<pos:position pos:line="34" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="75">"slotmem_create for status failed"<pos:position pos:line="34" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="111"/></expr_stmt>
                <return pos:line="35" pos:column="17">return <expr><operator pos:line="35" pos:column="24">!<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">OK<pos:position pos:line="35" pos:column="27"/></name></expr>;<pos:position pos:line="35" pos:column="28"/></return>
            }<pos:position pos:line="36" pos:column="14"/></block></then></if>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><name><name pos:line="40" pos:column="10">ctx<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">active<pos:position pos:line="40" pos:column="21"/></name></name></expr>)<pos:position pos:line="40" pos:column="22"/></condition><then pos:line="40" pos:column="22"> <block pos:line="40" pos:column="23">{
        <return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">OK<pos:position pos:line="41" pos:column="18"/></name></expr>;<pos:position pos:line="41" pos:column="19"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="43" pos:column="5">rv<pos:position pos:line="43" pos:column="7"/></name> <operator pos:line="43" pos:column="8">=<pos:position pos:line="43" pos:column="9"/></operator> <call><name pos:line="43" pos:column="10">hm_watchdog_get_instance<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><operator pos:line="43" pos:column="35">&amp;<pos:position pos:line="43" pos:column="40"/></operator><name><name pos:line="43" pos:column="36">ctx<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">-&gt;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="41">watchdog<pos:position pos:line="43" pos:column="49"/></name></name></expr></argument>,
                                  <argument><expr><name pos:line="44" pos:column="35">HM_WATHCHDOG_NAME<pos:position pos:line="44" pos:column="52"/></name></expr></argument>,
                                  <argument><expr><literal type="number" pos:line="45" pos:column="35">0<pos:position pos:line="45" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="38">1<pos:position pos:line="45" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="41">p<pos:position pos:line="45" pos:column="42"/></name></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">rv<pos:position pos:line="46" pos:column="11"/></name></expr>)<pos:position pos:line="46" pos:column="12"/></condition><then pos:line="46" pos:column="12"> <block pos:line="46" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">ap_log_error<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">APLOG_MARK<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">APLOG_CRIT<pos:position pos:line="47" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="46">rv<pos:position pos:line="47" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="50">s<pos:position pos:line="47" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="48" pos:column="22">"Heartmonitor: Failed to create watchdog "<pos:position pos:line="48" pos:column="64"/></literal>
                     <literal type="string" pos:line="49" pos:column="22">"instance (%s)"<pos:position pos:line="49" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="39">HM_WATHCHDOG_NAME<pos:position pos:line="49" pos:column="56"/></name></expr></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="58"/></expr_stmt>
        <return pos:line="50" pos:column="9">return <expr><operator pos:line="50" pos:column="16">!<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">OK<pos:position pos:line="50" pos:column="19"/></name></expr>;<pos:position pos:line="50" pos:column="20"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="52" pos:column="5">/* Register a callback with zero interval. */</comment>
    <expr_stmt><expr><name pos:line="53" pos:column="5">rv<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <call><name pos:line="53" pos:column="10">hm_watchdog_register_callback<pos:position pos:line="53" pos:column="39"/></name><argument_list pos:line="53" pos:column="39">(<argument><expr><name><name pos:line="53" pos:column="40">ctx<pos:position pos:line="53" pos:column="43"/></name><operator pos:line="53" pos:column="43">-&gt;<pos:position pos:line="53" pos:column="48"/></operator><name pos:line="53" pos:column="45">watchdog<pos:position pos:line="53" pos:column="53"/></name></name></expr></argument>,
                                       <argument><expr><literal type="number" pos:line="54" pos:column="40">0<pos:position pos:line="54" pos:column="41"/></literal></expr></argument>,
                                       <argument><expr><name pos:line="55" pos:column="40">ctx<pos:position pos:line="55" pos:column="43"/></name></expr></argument>,
                                       <argument><expr><name pos:line="56" pos:column="40">hm_watchdog_callback<pos:position pos:line="56" pos:column="60"/></name></expr></argument>)<pos:position pos:line="56" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="62"/></expr_stmt>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">rv<pos:position pos:line="57" pos:column="11"/></name></expr>)<pos:position pos:line="57" pos:column="12"/></condition><then pos:line="57" pos:column="12"> <block pos:line="57" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">ap_log_error<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">APLOG_MARK<pos:position pos:line="58" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="34">APLOG_CRIT<pos:position pos:line="58" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="46">rv<pos:position pos:line="58" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="50">s<pos:position pos:line="58" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="59" pos:column="22">"Heartmonitor: Failed to register watchdog "<pos:position pos:line="59" pos:column="66"/></literal>
                     <literal type="string" pos:line="60" pos:column="22">"callback (%s)"<pos:position pos:line="60" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="39">HM_WATHCHDOG_NAME<pos:position pos:line="60" pos:column="56"/></name></expr></argument>)<pos:position pos:line="60" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="58"/></expr_stmt>
        <return pos:line="61" pos:column="9">return <expr><operator pos:line="61" pos:column="16">!<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="17">OK<pos:position pos:line="61" pos:column="19"/></name></expr>;<pos:position pos:line="61" pos:column="20"/></return>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">ap_log_error<pos:position pos:line="63" pos:column="17"/></name><argument_list pos:line="63" pos:column="17">(<argument><expr><name pos:line="63" pos:column="18">APLOG_MARK<pos:position pos:line="63" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="30">APLOG_DEBUG<pos:position pos:line="63" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="43">0<pos:position pos:line="63" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="46">s<pos:position pos:line="63" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="64" pos:column="18">"Heartmonitor: wd callback %s"<pos:position pos:line="64" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="50">HM_WATHCHDOG_NAME<pos:position pos:line="64" pos:column="67"/></name></expr></argument>)<pos:position pos:line="64" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="69"/></expr_stmt>
    <return pos:line="65" pos:column="5">return <expr><name pos:line="65" pos:column="12">OK<pos:position pos:line="65" pos:column="14"/></name></expr>;<pos:position pos:line="65" pos:column="15"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5993.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_response_output_filter<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">ap_filter_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">f<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">apr_bucket_brigade<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">bb<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">h2_task<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">task<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name><name pos:line="3" pos:column="21">f<pos:position pos:line="3" pos:column="22"/></name><operator pos:line="3" pos:column="22">-&gt;<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="24">ctx<pos:position pos:line="3" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">h2_from_h1<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">from_h1<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><ternary><condition><expr><name><name pos:line="4" pos:column="27">task<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">output<pos:position pos:line="4" pos:column="39"/></name></name></expr>?<pos:position pos:line="4" pos:column="40"/></condition><then pos:line="4" pos:column="40"> <expr><name><name pos:line="4" pos:column="41">task<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">-&gt;<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="47">output<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">-&gt;<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="55">from_h1<pos:position pos:line="4" pos:column="62"/></name></name></expr> <pos:position pos:line="4" pos:column="63"/></then><else pos:line="4" pos:column="63">: <expr><name pos:line="4" pos:column="65">NULL<pos:position pos:line="4" pos:column="69"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">request_rec<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">r<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name><name pos:line="5" pos:column="22">f<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">r<pos:position pos:line="5" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">b<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ap_bucket_error<pos:position pos:line="7" pos:column="20"/></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">eb<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">from_h1<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">!=<pos:position pos:line="9" pos:column="31"/></operator> <name pos:line="9" pos:column="32">NULL<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ap_log_cerror<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">APLOG_MARK<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="31">APLOG_TRACE1<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="45">0<pos:position pos:line="11" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="48">f<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">-&gt;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="51">c<pos:position pos:line="11" pos:column="52"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="12" pos:column="19">"h2_from_h1(%d): output_filter called"<pos:position pos:line="12" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="59">from_h1<pos:position pos:line="12" pos:column="66"/></name><operator pos:line="12" pos:column="66">-&gt;<pos:position pos:line="12" pos:column="71"/></operator><name pos:line="12" pos:column="68">stream_id<pos:position pos:line="12" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="79"/></expr_stmt>
    
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">r<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">header_only<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">&amp;&amp;<pos:position pos:line="14" pos:column="34"/></operator> <name><name pos:line="14" pos:column="27">task<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">output<pos:position pos:line="14" pos:column="39"/></name></name> <operator pos:line="14" pos:column="40">&amp;&amp;<pos:position pos:line="14" pos:column="50"/></operator> <name><name pos:line="14" pos:column="43">from_h1<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">response<pos:position pos:line="14" pos:column="60"/></name></name></expr>)<pos:position pos:line="14" pos:column="61"/></condition><then pos:line="14" pos:column="61"> <block pos:line="14" pos:column="62">{
        <comment type="block" pos:line="15" pos:column="9">/* throw away any data after we have compiled the response */</comment>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">apr_brigade_cleanup<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">bb<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">OK<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    
    <for pos:line="20" pos:column="5">for <control pos:line="20" pos:column="9">(<init><expr><name pos:line="20" pos:column="10">b<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">APR_BRIGADE_FIRST<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">bb<pos:position pos:line="20" pos:column="34"/></name></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="36"/></init>
         <condition><expr><name pos:line="21" pos:column="10">b<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">!=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">APR_BRIGADE_SENTINEL<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">bb<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></condition>
         <incr><expr><name pos:line="22" pos:column="10">b<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">APR_BUCKET_NEXT<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">b<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr></incr>)<pos:position pos:line="22" pos:column="33"/></control>
    <block pos:line="23" pos:column="5">{
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">AP_BUCKET_IS_ERROR<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">b<pos:position pos:line="24" pos:column="33"/></name></expr></argument>)<pos:position pos:line="24" pos:column="34"/></argument_list></call> <operator pos:line="24" pos:column="35">&amp;&amp;<pos:position pos:line="24" pos:column="45"/></operator> <operator pos:line="24" pos:column="38">!<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="39">eb<pos:position pos:line="24" pos:column="41"/></name></expr>)<pos:position pos:line="24" pos:column="42"/></condition><then pos:line="24" pos:column="42"> <block pos:line="24" pos:column="43">{
            <expr_stmt><expr><name pos:line="25" pos:column="13">eb<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <name><name pos:line="25" pos:column="18">b<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">data<pos:position pos:line="25" pos:column="25"/></name></name></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
            <continue pos:line="26" pos:column="13">continue;<pos:position pos:line="26" pos:column="22"/></continue>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="28" pos:column="9">/*
         * If we see an EOC bucket it is a signal that we should get out
         * of the way doing nothing.
         */</comment>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name pos:line="32" pos:column="13">AP_BUCKET_IS_EOC<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">b<pos:position pos:line="32" pos:column="31"/></name></expr></argument>)<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="33"/></condition><then pos:line="32" pos:column="33"> <block pos:line="32" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">ap_remove_output_filter<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">f<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">ap_log_cerror<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">APLOG_MARK<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">APLOG_INFO<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="51">0<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="54">f<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">-&gt;<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="57">c<pos:position pos:line="34" pos:column="58"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="35" pos:column="27">"h2_from_h1(%d): eoc bucket passed"<pos:position pos:line="35" pos:column="62"/></literal></expr></argument>, 
                          <argument><expr><name><name pos:line="36" pos:column="27">from_h1<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">-&gt;<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="36">stream_id<pos:position pos:line="36" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>
            <return pos:line="37" pos:column="13">return <expr><call><name pos:line="37" pos:column="20">ap_pass_brigade<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><name><name pos:line="37" pos:column="36">f<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">next<pos:position pos:line="37" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="45">bb<pos:position pos:line="37" pos:column="47"/></name></expr></argument>)<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="49"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></for>
    
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">eb<pos:position pos:line="41" pos:column="11"/></name></expr>)<pos:position pos:line="41" pos:column="12"/></condition><then pos:line="41" pos:column="12"> <block pos:line="41" pos:column="13">{
        <decl_stmt><decl><type><name pos:line="42" pos:column="9">int<pos:position pos:line="42" pos:column="12"/></name></type> <name pos:line="42" pos:column="13">st<pos:position pos:line="42" pos:column="15"/></name> <init pos:line="42" pos:column="16">= <expr><name><name pos:line="42" pos:column="18">eb<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">status<pos:position pos:line="42" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="42" pos:column="29"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">apr_brigade_cleanup<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><name pos:line="43" pos:column="29">bb<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">ap_log_cerror<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">APLOG_MARK<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="35">APLOG_DEBUG<pos:position pos:line="44" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="48">0<pos:position pos:line="44" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="51">f<pos:position pos:line="44" pos:column="52"/></name><operator pos:line="44" pos:column="52">-&gt;<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="54">c<pos:position pos:line="44" pos:column="55"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="45" pos:column="23">"h2_from_h1(%d): err bucket status=%d"<pos:position pos:line="45" pos:column="61"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="46" pos:column="23">from_h1<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">-&gt;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="32">stream_id<pos:position pos:line="46" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="43">st<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">ap_die<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">(<argument><expr><name pos:line="47" pos:column="16">st<pos:position pos:line="47" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="20">r<pos:position pos:line="47" pos:column="21"/></name></expr></argument>)<pos:position pos:line="47" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">AP_FILTER_ERROR<pos:position pos:line="48" pos:column="31"/></name></expr>;<pos:position pos:line="48" pos:column="32"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">from_h1<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">-&gt;<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="14">response<pos:position pos:line="51" pos:column="22"/></name></name> <operator pos:line="51" pos:column="23">=<pos:position pos:line="51" pos:column="24"/></operator> <call><name pos:line="51" pos:column="25">create_response<pos:position pos:line="51" pos:column="40"/></name><argument_list pos:line="51" pos:column="40">(<argument><expr><name pos:line="51" pos:column="41">from_h1<pos:position pos:line="51" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="50">r<pos:position pos:line="51" pos:column="51"/></name></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name><name pos:line="52" pos:column="9">from_h1<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">response<pos:position pos:line="52" pos:column="26"/></name></name> <operator pos:line="52" pos:column="27">==<pos:position pos:line="52" pos:column="29"/></operator> <name pos:line="52" pos:column="30">NULL<pos:position pos:line="52" pos:column="34"/></name></expr>)<pos:position pos:line="52" pos:column="35"/></condition><then pos:line="52" pos:column="35"> <block pos:line="52" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">ap_log_cerror<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">APLOG_MARK<pos:position pos:line="53" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="35">APLOG_INFO<pos:position pos:line="53" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="47">0<pos:position pos:line="53" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="50">f<pos:position pos:line="53" pos:column="51"/></name><operator pos:line="53" pos:column="51">-&gt;<pos:position pos:line="53" pos:column="56"/></operator><name pos:line="53" pos:column="53">c<pos:position pos:line="53" pos:column="54"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="54" pos:column="23">"h2_from_h1(%d): unable to create response"<pos:position pos:line="54" pos:column="66"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="55" pos:column="23">from_h1<pos:position pos:line="55" pos:column="30"/></name><operator pos:line="55" pos:column="30">-&gt;<pos:position pos:line="55" pos:column="35"/></operator><name pos:line="55" pos:column="32">stream_id<pos:position pos:line="55" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="43"/></expr_stmt>
        <return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">APR_ENOMEM<pos:position pos:line="56" pos:column="26"/></name></expr>;<pos:position pos:line="56" pos:column="27"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
    
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name><name pos:line="59" pos:column="9">r<pos:position pos:line="59" pos:column="10"/></name><operator pos:line="59" pos:column="10">-&gt;<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="12">header_only<pos:position pos:line="59" pos:column="23"/></name></name></expr>)<pos:position pos:line="59" pos:column="24"/></condition><then pos:line="59" pos:column="24"> <block pos:line="59" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">ap_log_cerror<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">(<argument><expr><name pos:line="60" pos:column="23">APLOG_MARK<pos:position pos:line="60" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="35">APLOG_TRACE1<pos:position pos:line="60" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="49">0<pos:position pos:line="60" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="52">f<pos:position pos:line="60" pos:column="53"/></name><operator pos:line="60" pos:column="53">-&gt;<pos:position pos:line="60" pos:column="58"/></operator><name pos:line="60" pos:column="55">c<pos:position pos:line="60" pos:column="56"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="61" pos:column="23">"h2_from_h1(%d): header_only, cleanup output brigade"<pos:position pos:line="61" pos:column="76"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="62" pos:column="23">from_h1<pos:position pos:line="62" pos:column="30"/></name><operator pos:line="62" pos:column="30">-&gt;<pos:position pos:line="62" pos:column="35"/></operator><name pos:line="62" pos:column="32">stream_id<pos:position pos:line="62" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">apr_brigade_cleanup<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><name pos:line="63" pos:column="29">bb<pos:position pos:line="63" pos:column="31"/></name></expr></argument>)<pos:position pos:line="63" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt>
        <return pos:line="64" pos:column="9">return <expr><name pos:line="64" pos:column="16">OK<pos:position pos:line="64" pos:column="18"/></name></expr>;<pos:position pos:line="64" pos:column="19"/></return>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">r<pos:position pos:line="67" pos:column="6"/></name><operator pos:line="67" pos:column="6">-&gt;<pos:position pos:line="67" pos:column="11"/></operator><name pos:line="67" pos:column="8">sent_bodyct<pos:position pos:line="67" pos:column="19"/></name></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <literal type="number" pos:line="67" pos:column="22">1<pos:position pos:line="67" pos:column="23"/></literal></expr>;<pos:position pos:line="67" pos:column="24"/></expr_stmt>         <comment type="block" pos:line="67" pos:column="33">/* Whatever follows is real body stuff... */</comment>
    
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">ap_remove_output_filter<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><name pos:line="69" pos:column="29">f<pos:position pos:line="69" pos:column="30"/></name></expr></argument>)<pos:position pos:line="69" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="32"/></expr_stmt>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><call><name pos:line="70" pos:column="9">APLOGctrace1<pos:position pos:line="70" pos:column="21"/></name><argument_list pos:line="70" pos:column="21">(<argument><expr><name><name pos:line="70" pos:column="22">f<pos:position pos:line="70" pos:column="23"/></name><operator pos:line="70" pos:column="23">-&gt;<pos:position pos:line="70" pos:column="28"/></operator><name pos:line="70" pos:column="25">c<pos:position pos:line="70" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="28"/></condition><then pos:line="70" pos:column="28"> <block pos:line="70" pos:column="29">{
        <decl_stmt><decl><type><name pos:line="71" pos:column="9">apr_off_t<pos:position pos:line="71" pos:column="18"/></name></type> <name pos:line="71" pos:column="19">len<pos:position pos:line="71" pos:column="22"/></name> <init pos:line="71" pos:column="23">= <expr><literal type="number" pos:line="71" pos:column="25">0<pos:position pos:line="71" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="71" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">apr_brigade_length<pos:position pos:line="72" pos:column="27"/></name><argument_list pos:line="72" pos:column="27">(<argument><expr><name pos:line="72" pos:column="28">bb<pos:position pos:line="72" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="32">0<pos:position pos:line="72" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="72" pos:column="35">&amp;<pos:position pos:line="72" pos:column="40"/></operator><name pos:line="72" pos:column="36">len<pos:position pos:line="72" pos:column="39"/></name></expr></argument>)<pos:position pos:line="72" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">ap_log_cerror<pos:position pos:line="73" pos:column="22"/></name><argument_list pos:line="73" pos:column="22">(<argument><expr><name pos:line="73" pos:column="23">APLOG_MARK<pos:position pos:line="73" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="35">APLOG_TRACE1<pos:position pos:line="73" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="49">0<pos:position pos:line="73" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="52">f<pos:position pos:line="73" pos:column="53"/></name><operator pos:line="73" pos:column="53">-&gt;<pos:position pos:line="73" pos:column="58"/></operator><name pos:line="73" pos:column="55">c<pos:position pos:line="73" pos:column="56"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="74" pos:column="23">"h2_from_h1(%d): removed header filter, passing brigade "<pos:position pos:line="74" pos:column="80"/></literal>
                      <literal type="string" pos:line="75" pos:column="23">"len=%ld"<pos:position pos:line="75" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="34">from_h1<pos:position pos:line="75" pos:column="41"/></name><operator pos:line="75" pos:column="41">-&gt;<pos:position pos:line="75" pos:column="46"/></operator><name pos:line="75" pos:column="43">stream_id<pos:position pos:line="75" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="54">(<pos:position pos:line="75" pos:column="55"/></operator><name pos:line="75" pos:column="55">long<pos:position pos:line="75" pos:column="59"/></name><operator pos:line="75" pos:column="59">)<pos:position pos:line="75" pos:column="60"/></operator><name pos:line="75" pos:column="60">len<pos:position pos:line="75" pos:column="63"/></name></expr></argument>)<pos:position pos:line="75" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>
    <return pos:line="77" pos:column="5">return <expr><call><name pos:line="77" pos:column="12">ap_pass_brigade<pos:position pos:line="77" pos:column="27"/></name><argument_list pos:line="77" pos:column="27">(<argument><expr><name><name pos:line="77" pos:column="28">f<pos:position pos:line="77" pos:column="29"/></name><operator pos:line="77" pos:column="29">-&gt;<pos:position pos:line="77" pos:column="34"/></operator><name pos:line="77" pos:column="31">next<pos:position pos:line="77" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="37">bb<pos:position pos:line="77" pos:column="39"/></name></expr></argument>)<pos:position pos:line="77" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="41"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3286_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">uschar<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type>
<name pos:line="2" pos:column="1">read_repeat_counts<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">uschar<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">p<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">minp<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">maxp<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
  <parameter><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">errorptr<pos:position pos:line="3" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="26">compile_data<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">cd<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="43"/></parameter_list>
<block pos:line="4" pos:column="1">{
<decl_stmt><decl><type><name pos:line="5" pos:column="1">int<pos:position pos:line="5" pos:column="4"/></name></type> <name pos:line="5" pos:column="5">min<pos:position pos:line="5" pos:column="8"/></name> <init pos:line="5" pos:column="9">= <expr><literal type="number" pos:line="5" pos:column="11">0<pos:position pos:line="5" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="6" pos:column="1">int<pos:position pos:line="6" pos:column="4"/></name></type> <name pos:line="6" pos:column="5">max<pos:position pos:line="6" pos:column="8"/></name> <init pos:line="6" pos:column="9">= <expr><operator pos:line="6" pos:column="11">-<pos:position pos:line="6" pos:column="12"/></operator><literal type="number" pos:line="6" pos:column="12">1<pos:position pos:line="6" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

<comment type="block" pos:line="8" pos:column="1">/* Read the minimum value and do a paranoid check: a negative value indicates
an integer overflow. */</comment>

<while pos:line="11" pos:column="1">while <condition pos:line="11" pos:column="7">(<expr><operator pos:line="11" pos:column="8">(<pos:position pos:line="11" pos:column="9"/></operator><name><name pos:line="11" pos:column="9">cd<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">ctypes<pos:position pos:line="11" pos:column="19"/></name><index pos:line="11" pos:column="19">[<expr><operator pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">p<pos:position pos:line="11" pos:column="22"/></name></expr>]<pos:position pos:line="11" pos:column="23"/></index></name> <operator pos:line="11" pos:column="24">&amp;<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="26">ctype_digit<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">)<pos:position pos:line="11" pos:column="38"/></operator> <operator pos:line="11" pos:column="39">!=<pos:position pos:line="11" pos:column="41"/></operator> <literal type="number" pos:line="11" pos:column="42">0<pos:position pos:line="11" pos:column="43"/></literal></expr>)<pos:position pos:line="11" pos:column="44"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="45">min<pos:position pos:line="11" pos:column="48"/></name> <operator pos:line="11" pos:column="49">=<pos:position pos:line="11" pos:column="50"/></operator> <name pos:line="11" pos:column="51">min<pos:position pos:line="11" pos:column="54"/></name> <operator pos:line="11" pos:column="55">*<pos:position pos:line="11" pos:column="56"/></operator> <literal type="number" pos:line="11" pos:column="57">10<pos:position pos:line="11" pos:column="59"/></literal> <operator pos:line="11" pos:column="60">+<pos:position pos:line="11" pos:column="61"/></operator> <operator pos:line="11" pos:column="62">*<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="63">p<pos:position pos:line="11" pos:column="64"/></name><operator pos:line="11" pos:column="64">++<pos:position pos:line="11" pos:column="66"/></operator> <operator pos:line="11" pos:column="67">-<pos:position pos:line="11" pos:column="68"/></operator> <literal type="char" pos:line="11" pos:column="69">'0'<pos:position pos:line="11" pos:column="72"/></literal></expr>;<pos:position pos:line="11" pos:column="73"/></expr_stmt></block></while>
<if pos:line="12" pos:column="1">if <condition pos:line="12" pos:column="4">(<expr><name><name pos:line="12" pos:column="5">min<pos:position pos:line="12" pos:column="8"/></name> <argument_list type="generic" pos:line="12" pos:column="9">&lt; <argument><expr><literal type="number" pos:line="12" pos:column="11">0<pos:position pos:line="12" pos:column="12"/></literal> <operator pos:line="12" pos:column="13">||<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">min<pos:position pos:line="12" pos:column="19"/></name></expr></argument> &gt;<pos:position pos:line="12" pos:column="24"/></argument_list></name> <literal type="number" pos:line="12" pos:column="22">65535<pos:position pos:line="12" pos:column="27"/></literal></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28">
  <block pos:line="13" pos:column="3">{
  <expr_stmt><expr><operator pos:line="14" pos:column="3">*<pos:position pos:line="14" pos:column="4"/></operator><name pos:line="14" pos:column="4">errorptr<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">ERR5<pos:position pos:line="14" pos:column="19"/></name></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
  <return pos:line="15" pos:column="3">return <expr><name pos:line="15" pos:column="10">p<pos:position pos:line="15" pos:column="11"/></name></expr>;<pos:position pos:line="15" pos:column="12"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

<comment type="block" pos:line="18" pos:column="1">/* Read the maximum value if there is one, and again do a paranoid on its size.
Also, max must not be less than min. */</comment>

<if pos:line="21" pos:column="1">if <condition pos:line="21" pos:column="4">(<expr><operator pos:line="21" pos:column="5">*<pos:position pos:line="21" pos:column="6"/></operator><name pos:line="21" pos:column="6">p<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">==<pos:position pos:line="21" pos:column="10"/></operator> <literal type="char" pos:line="21" pos:column="11">'}'<pos:position pos:line="21" pos:column="14"/></literal></expr>)<pos:position pos:line="21" pos:column="15"/></condition><then pos:line="21" pos:column="15"> <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="16">max<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">min<pos:position pos:line="21" pos:column="25"/></name></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt></block></then> <else pos:line="21" pos:column="27">else
  <block pos:line="22" pos:column="3">{
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">*<pos:position pos:line="23" pos:column="8"/></operator><operator pos:line="23" pos:column="8">(<pos:position pos:line="23" pos:column="9"/></operator><operator pos:line="23" pos:column="9">++<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">p<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">)<pos:position pos:line="23" pos:column="13"/></operator> <operator pos:line="23" pos:column="14">!=<pos:position pos:line="23" pos:column="16"/></operator> <literal type="char" pos:line="23" pos:column="17">'}'<pos:position pos:line="23" pos:column="20"/></literal></expr>)<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21">
    <block pos:line="24" pos:column="5">{
    <expr_stmt><expr><name pos:line="25" pos:column="5">max<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">=<pos:position pos:line="25" pos:column="10"/></operator> <literal type="number" pos:line="25" pos:column="11">0<pos:position pos:line="25" pos:column="12"/></literal></expr>;<pos:position pos:line="25" pos:column="13"/></expr_stmt>
    <while pos:line="26" pos:column="5">while<condition pos:line="26" pos:column="10">(<expr><operator pos:line="26" pos:column="11">(<pos:position pos:line="26" pos:column="12"/></operator><name><name pos:line="26" pos:column="12">cd<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">ctypes<pos:position pos:line="26" pos:column="22"/></name><index pos:line="26" pos:column="22">[<expr><operator pos:line="26" pos:column="23">*<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="24">p<pos:position pos:line="26" pos:column="25"/></name></expr>]<pos:position pos:line="26" pos:column="26"/></index></name> <operator pos:line="26" pos:column="27">&amp;<pos:position pos:line="26" pos:column="32"/></operator> <name pos:line="26" pos:column="29">ctype_digit<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">)<pos:position pos:line="26" pos:column="41"/></operator> <operator pos:line="26" pos:column="42">!=<pos:position pos:line="26" pos:column="44"/></operator> <literal type="number" pos:line="26" pos:column="45">0<pos:position pos:line="26" pos:column="46"/></literal></expr>)<pos:position pos:line="26" pos:column="47"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="48">max<pos:position pos:line="26" pos:column="51"/></name> <operator pos:line="26" pos:column="52">=<pos:position pos:line="26" pos:column="53"/></operator> <name pos:line="26" pos:column="54">max<pos:position pos:line="26" pos:column="57"/></name> <operator pos:line="26" pos:column="58">*<pos:position pos:line="26" pos:column="59"/></operator> <literal type="number" pos:line="26" pos:column="60">10<pos:position pos:line="26" pos:column="62"/></literal> <operator pos:line="26" pos:column="63">+<pos:position pos:line="26" pos:column="64"/></operator> <operator pos:line="26" pos:column="65">*<pos:position pos:line="26" pos:column="66"/></operator><name pos:line="26" pos:column="66">p<pos:position pos:line="26" pos:column="67"/></name><operator pos:line="26" pos:column="67">++<pos:position pos:line="26" pos:column="69"/></operator> <operator pos:line="26" pos:column="70">-<pos:position pos:line="26" pos:column="71"/></operator> <literal type="char" pos:line="26" pos:column="72">'0'<pos:position pos:line="26" pos:column="75"/></literal></expr>;<pos:position pos:line="26" pos:column="76"/></expr_stmt></block></while>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">max<pos:position pos:line="27" pos:column="12"/></name> <argument_list type="generic" pos:line="27" pos:column="13">&lt; <argument><expr><literal type="number" pos:line="27" pos:column="15">0<pos:position pos:line="27" pos:column="16"/></literal> <operator pos:line="27" pos:column="17">||<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">max<pos:position pos:line="27" pos:column="23"/></name></expr></argument> &gt;<pos:position pos:line="27" pos:column="28"/></argument_list></name> <literal type="number" pos:line="27" pos:column="26">65535<pos:position pos:line="27" pos:column="31"/></literal></expr>)<pos:position pos:line="27" pos:column="32"/></condition><then pos:line="27" pos:column="32">
      <block pos:line="28" pos:column="7">{
      <expr_stmt><expr><operator pos:line="29" pos:column="7">*<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">errorptr<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">ERR5<pos:position pos:line="29" pos:column="23"/></name></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>
      <return pos:line="30" pos:column="7">return <expr><name pos:line="30" pos:column="14">p<pos:position pos:line="30" pos:column="15"/></name></expr>;<pos:position pos:line="30" pos:column="16"/></return>
      }<pos:position pos:line="31" pos:column="8"/></block></then></if>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">max<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">&lt;<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="15">min<pos:position pos:line="32" pos:column="18"/></name></expr>)<pos:position pos:line="32" pos:column="19"/></condition><then pos:line="32" pos:column="19">
      <block pos:line="33" pos:column="7">{
      <expr_stmt><expr><operator pos:line="34" pos:column="7">*<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">errorptr<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <name pos:line="34" pos:column="19">ERR4<pos:position pos:line="34" pos:column="23"/></name></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>
      <return pos:line="35" pos:column="7">return <expr><name pos:line="35" pos:column="14">p<pos:position pos:line="35" pos:column="15"/></name></expr>;<pos:position pos:line="35" pos:column="16"/></return>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
  }<pos:position pos:line="38" pos:column="4"/></block></else></if>

<comment type="block" pos:line="40" pos:column="1">/* Fill in the required variables, and pass back the pointer to the terminating
'}'. */</comment>

<expr_stmt><expr><operator pos:line="43" pos:column="1">*<pos:position pos:line="43" pos:column="2"/></operator><name pos:line="43" pos:column="2">minp<pos:position pos:line="43" pos:column="6"/></name> <operator pos:line="43" pos:column="7">=<pos:position pos:line="43" pos:column="8"/></operator> <name pos:line="43" pos:column="9">min<pos:position pos:line="43" pos:column="12"/></name></expr>;<pos:position pos:line="43" pos:column="13"/></expr_stmt>
<expr_stmt><expr><operator pos:line="44" pos:column="1">*<pos:position pos:line="44" pos:column="2"/></operator><name pos:line="44" pos:column="2">maxp<pos:position pos:line="44" pos:column="6"/></name> <operator pos:line="44" pos:column="7">=<pos:position pos:line="44" pos:column="8"/></operator> <name pos:line="44" pos:column="9">max<pos:position pos:line="44" pos:column="12"/></name></expr>;<pos:position pos:line="44" pos:column="13"/></expr_stmt>
<return pos:line="45" pos:column="1">return <expr><name pos:line="45" pos:column="8">p<pos:position pos:line="45" pos:column="9"/></name></expr>;<pos:position pos:line="45" pos:column="10"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1393_httpd-2.0.43.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">util_ald_free<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">ptr<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">APR_HAS_SHARED_MEMORY<pos:position pos:line="3" pos:column="26"/></name></expr></cpp:if>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">util_ldap_shm<pos:position pos:line="4" pos:column="22"/></name></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23"> <block pos:line="4" pos:column="24">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">ptr<pos:position pos:line="5" pos:column="16"/></name></expr>)<pos:position pos:line="5" pos:column="17"/></condition><then pos:line="5" pos:column="17">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="13">apr_rmm_free<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">util_ldap_rmm<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="41">apr_rmm_offset_get<pos:position pos:line="6" pos:column="59"/></name><argument_list pos:line="6" pos:column="59">(<argument><expr><name pos:line="6" pos:column="60">util_ldap_rmm<pos:position pos:line="6" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="75">(<pos:position pos:line="6" pos:column="76"/></operator><name pos:line="6" pos:column="76">void<pos:position pos:line="6" pos:column="80"/></name> <operator pos:line="6" pos:column="81">*<pos:position pos:line="6" pos:column="82"/></operator><operator pos:line="6" pos:column="82">)<pos:position pos:line="6" pos:column="83"/></operator><name pos:line="6" pos:column="83">ptr<pos:position pos:line="6" pos:column="86"/></name></expr></argument>)<pos:position pos:line="6" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="89"/></expr_stmt></block></then></if>
    }<pos:position pos:line="7" pos:column="6"/></block></then> <else pos:line="7" pos:column="7">else <block pos:line="7" pos:column="12">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">ptr<pos:position pos:line="8" pos:column="16"/></name></expr>)<pos:position pos:line="8" pos:column="17"/></condition><then pos:line="8" pos:column="17">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="13">free<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><operator pos:line="9" pos:column="18">(<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">void<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator><operator pos:line="9" pos:column="25">)<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">ptr<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt></block></then></if>
    }<pos:position pos:line="10" pos:column="6"/></block></else></if>
<cpp:else pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">else<pos:position pos:line="11" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">ptr<pos:position pos:line="12" pos:column="12"/></name></expr>)<pos:position pos:line="12" pos:column="13"/></condition><then pos:line="12" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="9">free<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><operator pos:line="13" pos:column="14">(<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">void<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></operator><operator pos:line="13" pos:column="21">)<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">ptr<pos:position pos:line="13" pos:column="25"/></name></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt></block></then></if>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

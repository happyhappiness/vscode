<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1014_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">rewritelog<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">request_rec<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">r<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">level<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">text<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="69">...<pos:position pos:line="1" pos:column="72"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">rewrite_server_conf<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">conf<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">conn_rec<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">conn<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">str1<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">str2<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><literal type="number" pos:line="6" pos:column="15">512<pos:position pos:line="6" pos:column="18"/></literal></expr>]<pos:position pos:line="6" pos:column="19"/></index></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">str3<pos:position pos:line="7" pos:column="14"/></name><index pos:line="7" pos:column="14">[<expr><literal type="number" pos:line="7" pos:column="15">1024<pos:position pos:line="7" pos:column="19"/></literal></expr>]<pos:position pos:line="7" pos:column="20"/></index></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">type<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">redir<pos:position pos:line="9" pos:column="15"/></name><index pos:line="9" pos:column="15">[<expr><literal type="number" pos:line="9" pos:column="16">20<pos:position pos:line="9" pos:column="18"/></literal></expr>]<pos:position pos:line="9" pos:column="19"/></index></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt> <comment type="block" pos:line="9" pos:column="21">/* enough for "/redir#%d" if int is 32 bit */</comment>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">va_list<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">ap<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">i<pos:position pos:line="11" pos:column="10"/></name></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_size_t<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">nbytes<pos:position pos:line="12" pos:column="22"/></name></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">request_rec<pos:position pos:line="13" pos:column="16"/></name> <modifier pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></modifier></type><name pos:line="13" pos:column="18">req<pos:position pos:line="13" pos:column="21"/></name></decl>;<pos:position pos:line="13" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">ruser<pos:position pos:line="14" pos:column="16"/></name></decl>;<pos:position pos:line="14" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">const<pos:position pos:line="15" pos:column="10"/></specifier> <name pos:line="15" pos:column="11">char<pos:position pos:line="15" pos:column="15"/></name> <modifier pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></modifier></type><name pos:line="15" pos:column="17">rhost<pos:position pos:line="15" pos:column="22"/></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">apr_status_t<pos:position pos:line="16" pos:column="17"/></name></type> <name pos:line="16" pos:column="18">rv<pos:position pos:line="16" pos:column="20"/></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">va_start<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name pos:line="18" pos:column="14">ap<pos:position pos:line="18" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="18">text<pos:position pos:line="18" pos:column="22"/></name></expr></argument>)<pos:position pos:line="18" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">conf<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">ap_get_module_config<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name><name pos:line="19" pos:column="33">r<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">server<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">module_config<pos:position pos:line="19" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="59">&amp;<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="60">rewrite_module<pos:position pos:line="19" pos:column="74"/></name></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">conn<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <name><name pos:line="20" pos:column="12">r<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">connection<pos:position pos:line="20" pos:column="25"/></name></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name><name pos:line="22" pos:column="9">conf<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">rewritelogfp<pos:position pos:line="22" pos:column="27"/></name></name> <operator pos:line="22" pos:column="28">==<pos:position pos:line="22" pos:column="30"/></operator> <name pos:line="22" pos:column="31">NULL<pos:position pos:line="22" pos:column="35"/></name></expr>)<pos:position pos:line="22" pos:column="36"/></condition><then pos:line="22" pos:column="36"> <block pos:line="22" pos:column="37">{
        <return pos:line="23" pos:column="9">return;<pos:position pos:line="23" pos:column="16"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">conf<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">rewritelogfile<pos:position pos:line="25" pos:column="29"/></name></name> <operator pos:line="25" pos:column="30">==<pos:position pos:line="25" pos:column="32"/></operator> <name pos:line="25" pos:column="33">NULL<pos:position pos:line="25" pos:column="37"/></name></expr>)<pos:position pos:line="25" pos:column="38"/></condition><then pos:line="25" pos:column="38"> <block pos:line="25" pos:column="39">{
        <return pos:line="26" pos:column="9">return;<pos:position pos:line="26" pos:column="16"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">*<pos:position pos:line="28" pos:column="10"/></operator><operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><name><name pos:line="28" pos:column="11">conf<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">rewritelogfile<pos:position pos:line="28" pos:column="31"/></name></name><operator pos:line="28" pos:column="31">)<pos:position pos:line="28" pos:column="32"/></operator> <operator pos:line="28" pos:column="33">==<pos:position pos:line="28" pos:column="35"/></operator> <literal type="char" pos:line="28" pos:column="36">'\0'<pos:position pos:line="28" pos:column="40"/></literal></expr>)<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41"> <block pos:line="28" pos:column="42">{
        <return pos:line="29" pos:column="9">return;<pos:position pos:line="29" pos:column="16"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">level<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">&gt;<pos:position pos:line="32" pos:column="19"/></operator> <name><name pos:line="32" pos:column="17">conf<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">rewriteloglevel<pos:position pos:line="32" pos:column="38"/></name></name></expr>)<pos:position pos:line="32" pos:column="39"/></condition><then pos:line="32" pos:column="39"> <block pos:line="32" pos:column="40">{
        <return pos:line="33" pos:column="9">return;<pos:position pos:line="33" pos:column="16"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">r<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">user<pos:position pos:line="36" pos:column="16"/></name></name> <operator pos:line="36" pos:column="17">==<pos:position pos:line="36" pos:column="19"/></operator> <name pos:line="36" pos:column="20">NULL<pos:position pos:line="36" pos:column="24"/></name></expr>)<pos:position pos:line="36" pos:column="25"/></condition><then pos:line="36" pos:column="25"> <block pos:line="36" pos:column="26">{
        <expr_stmt><expr><name pos:line="37" pos:column="9">ruser<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <literal type="string" pos:line="37" pos:column="17">"-"<pos:position pos:line="37" pos:column="20"/></literal></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><call><name pos:line="39" pos:column="14">strlen<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name><name pos:line="39" pos:column="21">r<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">user<pos:position pos:line="39" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="29"/></argument_list></call> <operator pos:line="39" pos:column="30">!=<pos:position pos:line="39" pos:column="32"/></operator> <literal type="number" pos:line="39" pos:column="33">0<pos:position pos:line="39" pos:column="34"/></literal></expr>)<pos:position pos:line="39" pos:column="35"/></condition><then pos:line="39" pos:column="35"> <block pos:line="39" pos:column="36">{
        <expr_stmt><expr><name pos:line="40" pos:column="9">ruser<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <name><name pos:line="40" pos:column="17">r<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">-&gt;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="20">user<pos:position pos:line="40" pos:column="24"/></name></name></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if></elseif>
    <else pos:line="42" pos:column="5">else <block pos:line="42" pos:column="10">{
        <expr_stmt><expr><name pos:line="43" pos:column="9">ruser<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <literal type="string" pos:line="43" pos:column="17">"\"\""<pos:position pos:line="43" pos:column="23"/></literal></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="46" pos:column="5">rhost<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">=<pos:position pos:line="46" pos:column="12"/></operator> <call><name pos:line="46" pos:column="13">ap_get_remote_host<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><name pos:line="46" pos:column="32">conn<pos:position pos:line="46" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="38">r<pos:position pos:line="46" pos:column="39"/></name><operator pos:line="46" pos:column="39">-&gt;<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="41">per_dir_config<pos:position pos:line="46" pos:column="55"/></name></name></expr></argument>,
                               <argument><expr><name pos:line="47" pos:column="32">REMOTE_NOLOOKUP<pos:position pos:line="47" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="49">NULL<pos:position pos:line="47" pos:column="53"/></name></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="55"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">rhost<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">==<pos:position pos:line="48" pos:column="17"/></operator> <name pos:line="48" pos:column="18">NULL<pos:position pos:line="48" pos:column="22"/></name></expr>)<pos:position pos:line="48" pos:column="23"/></condition><then pos:line="48" pos:column="23"> <block pos:line="48" pos:column="24">{
        <expr_stmt><expr><name pos:line="49" pos:column="9">rhost<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <literal type="string" pos:line="49" pos:column="17">"UNKNOWN-HOST"<pos:position pos:line="49" pos:column="31"/></literal></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="52" pos:column="5">str1<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <call><name pos:line="52" pos:column="12">apr_pstrcat<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><name><name pos:line="52" pos:column="24">r<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">-&gt;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="27">pool<pos:position pos:line="52" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="33">rhost<pos:position pos:line="52" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="40">" "<pos:position pos:line="52" pos:column="43"/></literal></expr></argument>,
                      <argument><expr><operator pos:line="53" pos:column="23">(<pos:position pos:line="53" pos:column="24"/></operator><ternary><condition><expr><name><name pos:line="53" pos:column="24">conn<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">remote_logname<pos:position pos:line="53" pos:column="44"/></name></name> <operator pos:line="53" pos:column="45">!=<pos:position pos:line="53" pos:column="47"/></operator> <name pos:line="53" pos:column="48">NULL<pos:position pos:line="53" pos:column="52"/></name></expr> ?<pos:position pos:line="53" pos:column="54"/></condition><then pos:line="53" pos:column="54">
                      <expr><name><name pos:line="54" pos:column="23">conn<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">-&gt;<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="29">remote_logname<pos:position pos:line="54" pos:column="43"/></name></name></expr> <pos:position pos:line="54" pos:column="44"/></then><else pos:line="54" pos:column="44">: <expr><literal type="string" pos:line="54" pos:column="46">"-"<pos:position pos:line="54" pos:column="49"/></literal></expr></else></ternary><operator pos:line="54" pos:column="49">)<pos:position pos:line="54" pos:column="50"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="52">" "<pos:position pos:line="54" pos:column="55"/></literal></expr></argument>,
                      <argument><expr><name pos:line="55" pos:column="23">ruser<pos:position pos:line="55" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="30">NULL<pos:position pos:line="55" pos:column="34"/></name></expr></argument>)<pos:position pos:line="55" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">apr_vsnprintf<pos:position pos:line="56" pos:column="18"/></name><argument_list pos:line="56" pos:column="18">(<argument><expr><name pos:line="56" pos:column="19">str2<pos:position pos:line="56" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="25">sizeof<argument_list pos:line="56" pos:column="31">(<argument><expr><name pos:line="56" pos:column="32">str2<pos:position pos:line="56" pos:column="36"/></name></expr></argument>)<pos:position pos:line="56" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="56" pos:column="39">text<pos:position pos:line="56" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="45">ap<pos:position pos:line="56" pos:column="47"/></name></expr></argument>)<pos:position pos:line="56" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="49"/></expr_stmt>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name><name pos:line="58" pos:column="9">r<pos:position pos:line="58" pos:column="10"/></name><operator pos:line="58" pos:column="10">-&gt;<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="12">main<pos:position pos:line="58" pos:column="16"/></name></name> <operator pos:line="58" pos:column="17">==<pos:position pos:line="58" pos:column="19"/></operator> <name pos:line="58" pos:column="20">NULL<pos:position pos:line="58" pos:column="24"/></name></expr>)<pos:position pos:line="58" pos:column="25"/></condition><then pos:line="58" pos:column="25"> <block pos:line="58" pos:column="26">{
        <expr_stmt><expr><name pos:line="59" pos:column="9">type<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <literal type="string" pos:line="59" pos:column="16">"initial"<pos:position pos:line="59" pos:column="25"/></literal></expr>;<pos:position pos:line="59" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then>
    <else pos:line="61" pos:column="5">else <block pos:line="61" pos:column="10">{
        <expr_stmt><expr><name pos:line="62" pos:column="9">type<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <literal type="string" pos:line="62" pos:column="16">"subreq"<pos:position pos:line="62" pos:column="24"/></literal></expr>;<pos:position pos:line="62" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></else></if>

    <for pos:line="65" pos:column="5">for <control pos:line="65" pos:column="9">(<init><expr><name pos:line="65" pos:column="10">i<pos:position pos:line="65" pos:column="11"/></name> <operator pos:line="65" pos:column="12">=<pos:position pos:line="65" pos:column="13"/></operator> <literal type="number" pos:line="65" pos:column="14">0<pos:position pos:line="65" pos:column="15"/></literal></expr><operator pos:line="65" pos:column="15">,<pos:position pos:line="65" pos:column="16"/></operator> <expr><name pos:line="65" pos:column="17">req<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <name pos:line="65" pos:column="23">r<pos:position pos:line="65" pos:column="24"/></name></expr>;<pos:position pos:line="65" pos:column="25"/></init> <condition><expr><name><name pos:line="65" pos:column="26">req<pos:position pos:line="65" pos:column="29"/></name><operator pos:line="65" pos:column="29">-&gt;<pos:position pos:line="65" pos:column="34"/></operator><name pos:line="65" pos:column="31">prev<pos:position pos:line="65" pos:column="35"/></name></name> <operator pos:line="65" pos:column="36">!=<pos:position pos:line="65" pos:column="38"/></operator> <name pos:line="65" pos:column="39">NULL<pos:position pos:line="65" pos:column="43"/></name></expr>;<pos:position pos:line="65" pos:column="44"/></condition> <incr><expr><name pos:line="65" pos:column="45">req<pos:position pos:line="65" pos:column="48"/></name> <operator pos:line="65" pos:column="49">=<pos:position pos:line="65" pos:column="50"/></operator> <name><name pos:line="65" pos:column="51">req<pos:position pos:line="65" pos:column="54"/></name><operator pos:line="65" pos:column="54">-&gt;<pos:position pos:line="65" pos:column="59"/></operator><name pos:line="65" pos:column="56">prev<pos:position pos:line="65" pos:column="60"/></name></name></expr></incr>)<pos:position pos:line="65" pos:column="61"/></control> <block pos:line="65" pos:column="62">{
        <expr_stmt><expr><name pos:line="66" pos:column="9">i<pos:position pos:line="66" pos:column="10"/></name><operator pos:line="66" pos:column="10">++<pos:position pos:line="66" pos:column="12"/></operator></expr>;<pos:position pos:line="66" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></for>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name pos:line="68" pos:column="9">i<pos:position pos:line="68" pos:column="10"/></name> <operator pos:line="68" pos:column="11">==<pos:position pos:line="68" pos:column="13"/></operator> <literal type="number" pos:line="68" pos:column="14">0<pos:position pos:line="68" pos:column="15"/></literal></expr>)<pos:position pos:line="68" pos:column="16"/></condition><then pos:line="68" pos:column="16"> <block pos:line="68" pos:column="17">{
        <expr_stmt><expr><name><name pos:line="69" pos:column="9">redir<pos:position pos:line="69" pos:column="14"/></name><index pos:line="69" pos:column="14">[<expr><literal type="number" pos:line="69" pos:column="15">0<pos:position pos:line="69" pos:column="16"/></literal></expr>]<pos:position pos:line="69" pos:column="17"/></index></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <literal type="char" pos:line="69" pos:column="20">'\0'<pos:position pos:line="69" pos:column="24"/></literal></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then>
    <else pos:line="71" pos:column="5">else <block pos:line="71" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">apr_snprintf<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><name pos:line="72" pos:column="22">redir<pos:position pos:line="72" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="29">sizeof<argument_list pos:line="72" pos:column="35">(<argument><expr><name pos:line="72" pos:column="36">redir<pos:position pos:line="72" pos:column="41"/></name></expr></argument>)<pos:position pos:line="72" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="44">"/redir#%d"<pos:position pos:line="72" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="57">i<pos:position pos:line="72" pos:column="58"/></name></expr></argument>)<pos:position pos:line="72" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="75" pos:column="5">apr_snprintf<pos:position pos:line="75" pos:column="17"/></name><argument_list pos:line="75" pos:column="17">(<argument><expr><name pos:line="75" pos:column="18">str3<pos:position pos:line="75" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="75" pos:column="24">sizeof<argument_list pos:line="75" pos:column="30">(<argument><expr><name pos:line="75" pos:column="31">str3<pos:position pos:line="75" pos:column="35"/></name></expr></argument>)<pos:position pos:line="75" pos:column="36"/></argument_list></sizeof></expr></argument>,
                <argument><expr><literal type="string" pos:line="76" pos:column="17">"%s %s [%s/sid#%lx][rid#%lx/%s%s] (%d) %s"<pos:position pos:line="76" pos:column="59"/></literal> <name pos:line="76" pos:column="60">APR_EOL_STR<pos:position pos:line="76" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="73">str1<pos:position pos:line="76" pos:column="77"/></name></expr></argument>,
                <argument><expr><call><name pos:line="77" pos:column="17">current_logtime<pos:position pos:line="77" pos:column="32"/></name><argument_list pos:line="77" pos:column="32">(<argument><expr><name pos:line="77" pos:column="33">r<pos:position pos:line="77" pos:column="34"/></name></expr></argument>)<pos:position pos:line="77" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="37">ap_get_server_name<pos:position pos:line="77" pos:column="55"/></name><argument_list pos:line="77" pos:column="55">(<argument><expr><name pos:line="77" pos:column="56">r<pos:position pos:line="77" pos:column="57"/></name></expr></argument>)<pos:position pos:line="77" pos:column="58"/></argument_list></call></expr></argument>,
                <argument><expr><call pos:line="78" pos:column="17">(<name pos:line="78" pos:column="18">unsigned<pos:position pos:line="78" pos:column="26"/></name> <name pos:line="78" pos:column="27">long<pos:position pos:line="78" pos:column="31"/></name>)<argument_list pos:line="78" pos:column="32">(<argument><expr><name><name pos:line="78" pos:column="33">r<pos:position pos:line="78" pos:column="34"/></name><operator pos:line="78" pos:column="34">-&gt;<pos:position pos:line="78" pos:column="39"/></operator><name pos:line="78" pos:column="36">server<pos:position pos:line="78" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="78" pos:column="45">(<pos:position pos:line="78" pos:column="46"/></operator><name pos:line="78" pos:column="46">unsigned<pos:position pos:line="78" pos:column="54"/></name> <name pos:line="78" pos:column="55">long<pos:position pos:line="78" pos:column="59"/></name><operator pos:line="78" pos:column="59">)<pos:position pos:line="78" pos:column="60"/></operator><name pos:line="78" pos:column="60">r<pos:position pos:line="78" pos:column="61"/></name></expr></argument>,
                <argument><expr><name pos:line="79" pos:column="17">type<pos:position pos:line="79" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="23">redir<pos:position pos:line="79" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="30">level<pos:position pos:line="79" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="37">str2<pos:position pos:line="79" pos:column="41"/></name></expr></argument>)<pos:position pos:line="79" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name pos:line="81" pos:column="5">rv<pos:position pos:line="81" pos:column="7"/></name> <operator pos:line="81" pos:column="8">=<pos:position pos:line="81" pos:column="9"/></operator> <call><name pos:line="81" pos:column="10">apr_global_mutex_lock<pos:position pos:line="81" pos:column="31"/></name><argument_list pos:line="81" pos:column="31">(<argument><expr><name pos:line="81" pos:column="32">rewrite_log_lock<pos:position pos:line="81" pos:column="48"/></name></expr></argument>)<pos:position pos:line="81" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="50"/></expr_stmt>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><name pos:line="82" pos:column="9">rv<pos:position pos:line="82" pos:column="11"/></name> <operator pos:line="82" pos:column="12">!=<pos:position pos:line="82" pos:column="14"/></operator> <name pos:line="82" pos:column="15">APR_SUCCESS<pos:position pos:line="82" pos:column="26"/></name></expr>)<pos:position pos:line="82" pos:column="27"/></condition><then pos:line="82" pos:column="27"> <block pos:line="82" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">ap_log_rerror<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">(<argument><expr><name pos:line="83" pos:column="23">APLOG_MARK<pos:position pos:line="83" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="35">APLOG_ERR<pos:position pos:line="83" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="46">rv<pos:position pos:line="83" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="50">r<pos:position pos:line="83" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="84" pos:column="23">"apr_global_mutex_lock(rewrite_log_lock) failed"<pos:position pos:line="84" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="73"/></expr_stmt>
        <comment type="block" pos:line="85" pos:column="9">/* XXX: Maybe this should be fatal? */</comment>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="87" pos:column="5">nbytes<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <call><name pos:line="87" pos:column="14">strlen<pos:position pos:line="87" pos:column="20"/></name><argument_list pos:line="87" pos:column="20">(<argument><expr><name pos:line="87" pos:column="21">str3<pos:position pos:line="87" pos:column="25"/></name></expr></argument>)<pos:position pos:line="87" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">apr_file_write<pos:position pos:line="88" pos:column="19"/></name><argument_list pos:line="88" pos:column="19">(<argument><expr><name><name pos:line="88" pos:column="20">conf<pos:position pos:line="88" pos:column="24"/></name><operator pos:line="88" pos:column="24">-&gt;<pos:position pos:line="88" pos:column="29"/></operator><name pos:line="88" pos:column="26">rewritelogfp<pos:position pos:line="88" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="40">str3<pos:position pos:line="88" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="46">&amp;<pos:position pos:line="88" pos:column="51"/></operator><name pos:line="88" pos:column="47">nbytes<pos:position pos:line="88" pos:column="53"/></name></expr></argument>)<pos:position pos:line="88" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="89" pos:column="5">rv<pos:position pos:line="89" pos:column="7"/></name> <operator pos:line="89" pos:column="8">=<pos:position pos:line="89" pos:column="9"/></operator> <call><name pos:line="89" pos:column="10">apr_global_mutex_unlock<pos:position pos:line="89" pos:column="33"/></name><argument_list pos:line="89" pos:column="33">(<argument><expr><name pos:line="89" pos:column="34">rewrite_log_lock<pos:position pos:line="89" pos:column="50"/></name></expr></argument>)<pos:position pos:line="89" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="52"/></expr_stmt>
    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><name pos:line="90" pos:column="9">rv<pos:position pos:line="90" pos:column="11"/></name> <operator pos:line="90" pos:column="12">!=<pos:position pos:line="90" pos:column="14"/></operator> <name pos:line="90" pos:column="15">APR_SUCCESS<pos:position pos:line="90" pos:column="26"/></name></expr>)<pos:position pos:line="90" pos:column="27"/></condition><then pos:line="90" pos:column="27"> <block pos:line="90" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">ap_log_rerror<pos:position pos:line="91" pos:column="22"/></name><argument_list pos:line="91" pos:column="22">(<argument><expr><name pos:line="91" pos:column="23">APLOG_MARK<pos:position pos:line="91" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="35">APLOG_ERR<pos:position pos:line="91" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="46">rv<pos:position pos:line="91" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="50">r<pos:position pos:line="91" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="92" pos:column="23">"apr_global_mutex_unlock(rewrite_log_lock) failed"<pos:position pos:line="92" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="75"/></expr_stmt>
        <comment type="block" pos:line="93" pos:column="9">/* XXX: Maybe this should be fatal? */</comment>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="96" pos:column="5">va_end<pos:position pos:line="96" pos:column="11"/></name><argument_list pos:line="96" pos:column="11">(<argument><expr><name pos:line="96" pos:column="12">ap<pos:position pos:line="96" pos:column="14"/></name></expr></argument>)<pos:position pos:line="96" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="16"/></expr_stmt>
    <return pos:line="97" pos:column="5">return;<pos:position pos:line="97" pos:column="12"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1231_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">add_index<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">cmd_parms<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">cmd<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">void<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">dummy<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">arg<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dir_config_rec<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">d<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><name pos:line="3" pos:column="25">dummy<pos:position pos:line="3" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">t<pos:position pos:line="4" pos:column="18"/></name></decl>, <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="21">w<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">count<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">d<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">index_names<pos:position pos:line="7" pos:column="24"/></name></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25"> <block pos:line="7" pos:column="26">{
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">d<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">index_names<pos:position pos:line="8" pos:column="23"/></name></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <call><name pos:line="8" pos:column="26">apr_array_make<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">(<argument><expr><name><name pos:line="8" pos:column="41">cmd<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">pool<pos:position pos:line="8" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="52">2<pos:position pos:line="8" pos:column="53"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="55">sizeof<argument_list pos:line="8" pos:column="61">(<argument><expr><name pos:line="8" pos:column="62">char<pos:position pos:line="8" pos:column="66"/></name> <operator pos:line="8" pos:column="67">*<pos:position pos:line="8" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="11" pos:column="5">t<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <name pos:line="11" pos:column="9">arg<pos:position pos:line="11" pos:column="12"/></name></expr>;<pos:position pos:line="11" pos:column="13"/></expr_stmt>
    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">w<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">ap_getword_conf<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name><name pos:line="12" pos:column="33">cmd<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">pool<pos:position pos:line="12" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="44">&amp;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="45">t<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call><operator pos:line="12" pos:column="47">)<pos:position pos:line="12" pos:column="48"/></operator> <operator pos:line="12" pos:column="49">&amp;&amp;<pos:position pos:line="12" pos:column="59"/></operator> <name><name pos:line="12" pos:column="52">w<pos:position pos:line="12" pos:column="53"/></name><index pos:line="12" pos:column="53">[<expr><literal type="number" pos:line="12" pos:column="54">0<pos:position pos:line="12" pos:column="55"/></literal></expr>]<pos:position pos:line="12" pos:column="56"/></index></name></expr>)<pos:position pos:line="12" pos:column="57"/></condition> <block pos:line="12" pos:column="58">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">count<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">==<pos:position pos:line="13" pos:column="21"/></operator> <literal type="number" pos:line="13" pos:column="22">0<pos:position pos:line="13" pos:column="23"/></literal> <operator pos:line="13" pos:column="24">&amp;&amp;<pos:position pos:line="13" pos:column="34"/></operator> <operator pos:line="13" pos:column="27">!<pos:position pos:line="13" pos:column="28"/></operator><call><name pos:line="13" pos:column="28">strcasecmp<pos:position pos:line="13" pos:column="38"/></name><argument_list pos:line="13" pos:column="38">(<argument><expr><name pos:line="13" pos:column="39">w<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="42">"disabled"<pos:position pos:line="13" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="54"/></condition><then pos:line="13" pos:column="54"> <block pos:line="13" pos:column="55">{
            <comment type="block" pos:line="14" pos:column="13">/* peek to see if "disabled" is first in a series of arguments */</comment>
            <decl_stmt><decl><type><specifier pos:line="15" pos:column="13">const<pos:position pos:line="15" pos:column="18"/></specifier> <name pos:line="15" pos:column="19">char<pos:position pos:line="15" pos:column="23"/></name> <modifier pos:line="15" pos:column="24">*<pos:position pos:line="15" pos:column="25"/></modifier></type><name pos:line="15" pos:column="25">tt<pos:position pos:line="15" pos:column="27"/></name> <init pos:line="15" pos:column="28">= <expr><name pos:line="15" pos:column="30">t<pos:position pos:line="15" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="32"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="16" pos:column="13">const<pos:position pos:line="16" pos:column="18"/></specifier> <name pos:line="16" pos:column="19">char<pos:position pos:line="16" pos:column="23"/></name> <modifier pos:line="16" pos:column="24">*<pos:position pos:line="16" pos:column="25"/></modifier></type><name pos:line="16" pos:column="25">ww<pos:position pos:line="16" pos:column="27"/></name> <init pos:line="16" pos:column="28">= <expr><call><name pos:line="16" pos:column="30">ap_getword_conf<pos:position pos:line="16" pos:column="45"/></name><argument_list pos:line="16" pos:column="45">(<argument><expr><name><name pos:line="16" pos:column="46">cmd<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">-&gt;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="51">pool<pos:position pos:line="16" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="57">&amp;<pos:position pos:line="16" pos:column="62"/></operator><name pos:line="16" pos:column="58">tt<pos:position pos:line="16" pos:column="60"/></name></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="62"/></decl_stmt>
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><name pos:line="17" pos:column="17">ww<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">==<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">NULL<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">||<pos:position pos:line="17" pos:column="30"/></operator> <operator pos:line="17" pos:column="31">!<pos:position pos:line="17" pos:column="32"/></operator><name><name pos:line="17" pos:column="32">ww<pos:position pos:line="17" pos:column="34"/></name><index pos:line="17" pos:column="34">[<expr><literal type="number" pos:line="17" pos:column="35">0<pos:position pos:line="17" pos:column="36"/></literal></expr>]<pos:position pos:line="17" pos:column="37"/></index></name></expr>)<pos:position pos:line="17" pos:column="38"/></condition><then pos:line="17" pos:column="38"> <block pos:line="17" pos:column="39">{
               <comment type="block" pos:line="18" pos:column="16">/* "disabled" is first, and alone */</comment>
               <break pos:line="19" pos:column="16">break;<pos:position pos:line="19" pos:column="22"/></break>
            }<pos:position pos:line="20" pos:column="14"/></block></then></if>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="22" pos:column="9">*<pos:position pos:line="22" pos:column="10"/></operator><operator pos:line="22" pos:column="10">(<pos:position pos:line="22" pos:column="11"/></operator><specifier pos:line="22" pos:column="11">const<pos:position pos:line="22" pos:column="16"/></specifier> <name pos:line="22" pos:column="17">char<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></operator><operator pos:line="22" pos:column="23">*<pos:position pos:line="22" pos:column="24"/></operator><operator pos:line="22" pos:column="24">)<pos:position pos:line="22" pos:column="25"/></operator><call><name pos:line="22" pos:column="25">apr_array_push<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><name><name pos:line="22" pos:column="40">d<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">index_names<pos:position pos:line="22" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call> <operator pos:line="22" pos:column="56">=<pos:position pos:line="22" pos:column="57"/></operator> <name pos:line="22" pos:column="58">w<pos:position pos:line="22" pos:column="59"/></name></expr>;<pos:position pos:line="22" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">count<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">++<pos:position pos:line="23" pos:column="16"/></operator></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></while>

    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">NULL<pos:position pos:line="26" pos:column="16"/></name></expr>;<pos:position pos:line="26" pos:column="17"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

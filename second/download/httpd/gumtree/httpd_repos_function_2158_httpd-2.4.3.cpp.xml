<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2158_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">include_expr_var_fn<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">ap_expr_eval_ctx_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">eval_ctx<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">void<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">data<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="3" pos:column="40">const<pos:position pos:line="3" pos:column="45"/></specifier> <name pos:line="3" pos:column="46">char<pos:position pos:line="3" pos:column="50"/></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">arg<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">res<pos:position pos:line="5" pos:column="20"/></name></decl>, <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="23">name<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">data<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">include_ctx_t<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">ctx<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><name><name pos:line="6" pos:column="26">eval_ctx<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">data<pos:position pos:line="6" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">name<pos:position pos:line="7" pos:column="13"/></name><index pos:line="7" pos:column="13">[<expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr>]<pos:position pos:line="7" pos:column="16"/></index></name> <operator pos:line="7" pos:column="17">==<pos:position pos:line="7" pos:column="19"/></operator> <literal type="char" pos:line="7" pos:column="20">'e'<pos:position pos:line="7" pos:column="23"/></literal></expr>)<pos:position pos:line="7" pos:column="24"/></condition><then pos:line="7" pos:column="24"> <block pos:line="7" pos:column="25">{
        <comment type="block" pos:line="8" pos:column="9">/* keep legacy "env" semantics */</comment>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">res<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <call><name pos:line="9" pos:column="20">apr_table_get<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name><name pos:line="9" pos:column="34">ctx<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">-&gt;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="39">r<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">-&gt;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="42">notes<pos:position pos:line="9" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="49">arg<pos:position pos:line="9" pos:column="52"/></name></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call><operator pos:line="9" pos:column="53">)<pos:position pos:line="9" pos:column="54"/></operator> <operator pos:line="9" pos:column="55">!=<pos:position pos:line="9" pos:column="57"/></operator> <name pos:line="9" pos:column="58">NULL<pos:position pos:line="9" pos:column="62"/></name></expr>)<pos:position pos:line="9" pos:column="63"/></condition><then pos:line="9" pos:column="63">
            <block type="pseudo"><return pos:line="10" pos:column="13">return <expr><name pos:line="10" pos:column="20">res<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></return></block></then>
        <elseif pos:line="11" pos:column="9">else <if pos:line="11" pos:column="14">if <condition pos:line="11" pos:column="17">(<expr><operator pos:line="11" pos:column="18">(<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">res<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <call><name pos:line="11" pos:column="25">get_include_var<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">(<argument><expr><name pos:line="11" pos:column="41">arg<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">ctx<pos:position pos:line="11" pos:column="49"/></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call><operator pos:line="11" pos:column="50">)<pos:position pos:line="11" pos:column="51"/></operator> <operator pos:line="11" pos:column="52">!=<pos:position pos:line="11" pos:column="54"/></operator> <name pos:line="11" pos:column="55">NULL<pos:position pos:line="11" pos:column="59"/></name></expr>)<pos:position pos:line="11" pos:column="60"/></condition><then pos:line="11" pos:column="60">
            <block type="pseudo"><return pos:line="12" pos:column="13">return <expr><name pos:line="12" pos:column="20">res<pos:position pos:line="12" pos:column="23"/></name></expr>;<pos:position pos:line="12" pos:column="24"/></return></block></then></if></elseif>
        <else pos:line="13" pos:column="9">else
            <block type="pseudo"><return pos:line="14" pos:column="13">return <expr><call><name pos:line="14" pos:column="20">getenv<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">arg<pos:position pos:line="14" pos:column="30"/></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></return></block></else></if>
    }<pos:position pos:line="15" pos:column="6"/></block></then>
    <else pos:line="16" pos:column="5">else <block pos:line="16" pos:column="10">{
        <return pos:line="17" pos:column="9">return <expr><call><name pos:line="17" pos:column="16">get_include_var<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">arg<pos:position pos:line="17" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="37">ctx<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3362.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">isapi_cmd_cachefile<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">cmd_parms<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">cmd<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">void<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">dummy<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">filename<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">isapi_loaded<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">isa<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_finfo_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">tmp<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">fspec<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* ### Just an observation ... it would be terribly cool to be
     * able to use this per-dir, relative to the directory block being
     * defined.  The hash result remains global, but shorthand of
     * &lt;Directory "c:/webapps/isapi"&gt;
     *     ISAPICacheFile myapp.dll anotherapp.dll thirdapp.dll
     * &lt;/Directory&gt;
     * would be very convienent.
     */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">fspec<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">ap_server_root_relative<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name><name pos:line="17" pos:column="37">cmd<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">-&gt;<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="42">pool<pos:position pos:line="17" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">filename<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">fspec<pos:position pos:line="18" pos:column="15"/></name></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16"> <block pos:line="18" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">ap_log_error<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">APLOG_MARK<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">APLOG_WARNING<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="49">APR_EBADPATH<pos:position pos:line="19" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="63">cmd<pos:position pos:line="19" pos:column="66"/></name><operator pos:line="19" pos:column="66">-&gt;<pos:position pos:line="19" pos:column="71"/></operator><name pos:line="19" pos:column="68">server<pos:position pos:line="19" pos:column="74"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="20" pos:column="22">"ISAPI: invalid module path, skipping %s"<pos:position pos:line="20" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="65">filename<pos:position pos:line="20" pos:column="73"/></name></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="75"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">NULL<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">rv<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">apr_stat<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><operator pos:line="23" pos:column="24">&amp;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="25">tmp<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="30">fspec<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="37">APR_FINFO_TYPE<pos:position pos:line="23" pos:column="51"/></name></expr></argument>,
                      <argument><expr><name><name pos:line="24" pos:column="23">cmd<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">temp_pool<pos:position pos:line="24" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call><operator pos:line="24" pos:column="38">)<pos:position pos:line="24" pos:column="39"/></operator> <operator pos:line="24" pos:column="40">!=<pos:position pos:line="24" pos:column="42"/></operator> <name pos:line="24" pos:column="43">APR_SUCCESS<pos:position pos:line="24" pos:column="54"/></name></expr>)<pos:position pos:line="24" pos:column="55"/></condition><then pos:line="24" pos:column="55"> <block pos:line="24" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ap_log_error<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">APLOG_MARK<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">APLOG_WARNING<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">rv<pos:position pos:line="25" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="53">cmd<pos:position pos:line="25" pos:column="56"/></name><operator pos:line="25" pos:column="56">-&gt;<pos:position pos:line="25" pos:column="61"/></operator><name pos:line="25" pos:column="58">server<pos:position pos:line="25" pos:column="64"/></name></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="26" pos:column="13">"ISAPI: unable to stat, skipping %s"<pos:position pos:line="26" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="51">fspec<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">tmp<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">.<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">filetype<pos:position pos:line="29" pos:column="21"/></name></name> <operator pos:line="29" pos:column="22">!=<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">APR_REG<pos:position pos:line="29" pos:column="32"/></name></expr>)<pos:position pos:line="29" pos:column="33"/></condition><then pos:line="29" pos:column="33"> <block pos:line="29" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">ap_log_error<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">APLOG_MARK<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">APLOG_WARNING<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="49">0<pos:position pos:line="30" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="52">cmd<pos:position pos:line="30" pos:column="55"/></name><operator pos:line="30" pos:column="55">-&gt;<pos:position pos:line="30" pos:column="60"/></operator><name pos:line="30" pos:column="57">server<pos:position pos:line="30" pos:column="63"/></name></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="31" pos:column="13">"ISAPI: not a regular file, skipping %s"<pos:position pos:line="31" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="55">fspec<pos:position pos:line="31" pos:column="60"/></name></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt>
        <return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">NULL<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="35" pos:column="5">/* Load the extention as cached (with null request_rec) */</comment>
    <expr_stmt><expr><name pos:line="36" pos:column="5">rv<pos:position pos:line="36" pos:column="7"/></name> <operator pos:line="36" pos:column="8">=<pos:position pos:line="36" pos:column="9"/></operator> <call><name pos:line="36" pos:column="10">isapi_lookup<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name><name pos:line="36" pos:column="23">cmd<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">pool<pos:position pos:line="36" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="34">cmd<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">-&gt;<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="39">server<pos:position pos:line="36" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">NULL<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">fspec<pos:position pos:line="36" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="60">&amp;<pos:position pos:line="36" pos:column="65"/></operator><name pos:line="36" pos:column="61">isa<pos:position pos:line="36" pos:column="64"/></name></expr></argument>)<pos:position pos:line="36" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="66"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">rv<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">!=<pos:position pos:line="37" pos:column="14"/></operator> <name pos:line="37" pos:column="15">APR_SUCCESS<pos:position pos:line="37" pos:column="26"/></name></expr>)<pos:position pos:line="37" pos:column="27"/></condition><then pos:line="37" pos:column="27"> <block pos:line="37" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ap_log_error<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">APLOG_MARK<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="34">APLOG_WARNING<pos:position pos:line="38" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="49">rv<pos:position pos:line="38" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="53">cmd<pos:position pos:line="38" pos:column="56"/></name><operator pos:line="38" pos:column="56">-&gt;<pos:position pos:line="38" pos:column="61"/></operator><name pos:line="38" pos:column="58">server<pos:position pos:line="38" pos:column="64"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="39" pos:column="22">"ISAPI: unable to cache, skipping %s"<pos:position pos:line="39" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="61">fspec<pos:position pos:line="39" pos:column="66"/></name></expr></argument>)<pos:position pos:line="39" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="68"/></expr_stmt>
        <return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">NULL<pos:position pos:line="40" pos:column="20"/></name></expr>;<pos:position pos:line="40" pos:column="21"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">NULL<pos:position pos:line="43" pos:column="16"/></name></expr>;<pos:position pos:line="43" pos:column="17"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

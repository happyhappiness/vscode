<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3341_httpd-2.4.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_uint32_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ap_queue_info_get_idlers<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">fd_queue_info_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type> <name pos:line="1" pos:column="57">queue_info<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_int32_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">val<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <expr_stmt><expr><name pos:line="4" pos:column="5">val<pos:position pos:line="4" pos:column="8"/></name> <operator pos:line="4" pos:column="9">=<pos:position pos:line="4" pos:column="10"/></operator> <operator pos:line="4" pos:column="11">(<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">apr_int32_t<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">)<pos:position pos:line="4" pos:column="24"/></operator><call><name pos:line="4" pos:column="24">apr_atomic_read32<pos:position pos:line="4" pos:column="41"/></name><argument_list pos:line="4" pos:column="41">(<argument><expr><operator pos:line="4" pos:column="42">(<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="43">apr_uint32_t<pos:position pos:line="4" pos:column="55"/></name> <operator pos:line="4" pos:column="56">*<pos:position pos:line="4" pos:column="57"/></operator><operator pos:line="4" pos:column="57">)<pos:position pos:line="4" pos:column="58"/></operator><operator pos:line="4" pos:column="58">&amp;<pos:position pos:line="4" pos:column="63"/></operator><name><name pos:line="4" pos:column="59">queue_info<pos:position pos:line="4" pos:column="69"/></name><operator pos:line="4" pos:column="69">-&gt;<pos:position pos:line="4" pos:column="74"/></operator><name pos:line="4" pos:column="71">idlers<pos:position pos:line="4" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="79"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">val<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">&lt;<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="15">0<pos:position pos:line="5" pos:column="16"/></literal></expr>)<pos:position pos:line="5" pos:column="17"/></condition><then pos:line="5" pos:column="17">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return></block></then></if>
    <return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">val<pos:position pos:line="7" pos:column="15"/></name></expr>;<pos:position pos:line="7" pos:column="16"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

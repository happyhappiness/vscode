<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3207_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">enum<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">XML_Error<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name pos:line="2" pos:column="1">addBinding<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">XML_Parser<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">parser<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">PREFIX<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">prefix<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">ATTRIBUTE_ID<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">attId<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
           <parameter><decl><type><specifier pos:line="3" pos:column="12">const<pos:position pos:line="3" pos:column="17"/></specifier> <name pos:line="3" pos:column="18">XML_Char<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">uri<pos:position pos:line="3" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="33">BINDING<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier><modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">bindingsPtr<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="55"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">BINDING<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">b<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">len<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* empty string is only valid when there is no prefix per XML NS 1.0 */</comment>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">*<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">uri<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">XML_T<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><literal type="char" pos:line="9" pos:column="21">'\0'<pos:position pos:line="9" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call> <operator pos:line="9" pos:column="27">&amp;&amp;<pos:position pos:line="9" pos:column="37"/></operator> <name><name pos:line="9" pos:column="30">prefix<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">name<pos:position pos:line="9" pos:column="42"/></name></name></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">XML_ERROR_SYNTAX<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></return></block></then></if>

  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init><expr><name pos:line="12" pos:column="8">len<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></init> <condition><expr><name><name pos:line="12" pos:column="17">uri<pos:position pos:line="12" pos:column="20"/></name><index pos:line="12" pos:column="20">[<expr><name pos:line="12" pos:column="21">len<pos:position pos:line="12" pos:column="24"/></name></expr>]<pos:position pos:line="12" pos:column="25"/></index></name></expr>;<pos:position pos:line="12" pos:column="26"/></condition> <incr><expr><name pos:line="12" pos:column="27">len<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">++<pos:position pos:line="12" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="33"/></control>
    <block type="pseudo"><empty_stmt pos:line="13" pos:column="5">;<pos:position pos:line="13" pos:column="6"/></empty_stmt></block></for>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">namespaceSeparator<pos:position pos:line="14" pos:column="25"/></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="5">len<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">++<pos:position pos:line="15" pos:column="10"/></operator></expr>;<pos:position pos:line="15" pos:column="11"/></expr_stmt></block></then></if>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">freeBindingList<pos:position pos:line="16" pos:column="22"/></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23"> <block pos:line="16" pos:column="24">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">b<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <name pos:line="17" pos:column="9">freeBindingList<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">len<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">&gt;<pos:position pos:line="18" pos:column="17"/></operator> <name><name pos:line="18" pos:column="15">b<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">uriAlloc<pos:position pos:line="18" pos:column="26"/></name></name></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27"> <block pos:line="18" pos:column="28">{
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">XML_Char<pos:position pos:line="19" pos:column="15"/></name> <modifier pos:line="19" pos:column="16">*<pos:position pos:line="19" pos:column="17"/></modifier></type><name pos:line="19" pos:column="17">temp<pos:position pos:line="19" pos:column="21"/></name> <init pos:line="19" pos:column="22">= <expr><operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">XML_Char<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">*<pos:position pos:line="19" pos:column="35"/></operator><operator pos:line="19" pos:column="35">)<pos:position pos:line="19" pos:column="36"/></operator><call><name pos:line="19" pos:column="36">REALLOC<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><name><name pos:line="19" pos:column="44">b<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">-&gt;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="47">uri<pos:position pos:line="19" pos:column="50"/></name></name></expr></argument>,
                          <argument><expr><sizeof pos:line="20" pos:column="27">sizeof<argument_list pos:line="20" pos:column="33">(<argument><expr><name pos:line="20" pos:column="34">XML_Char<pos:position pos:line="20" pos:column="42"/></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></sizeof> <operator pos:line="20" pos:column="44">*<pos:position pos:line="20" pos:column="45"/></operator> <operator pos:line="20" pos:column="46">(<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="47">len<pos:position pos:line="20" pos:column="50"/></name> <operator pos:line="20" pos:column="51">+<pos:position pos:line="20" pos:column="52"/></operator> <name pos:line="20" pos:column="53">EXPAND_SPARE<pos:position pos:line="20" pos:column="65"/></name><operator pos:line="20" pos:column="65">)<pos:position pos:line="20" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="68"/></decl_stmt>
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><name pos:line="21" pos:column="11">temp<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">==<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">NULL<pos:position pos:line="21" pos:column="23"/></name></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24">
        <block type="pseudo"><return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">XML_ERROR_NO_MEMORY<pos:position pos:line="22" pos:column="35"/></name></expr>;<pos:position pos:line="22" pos:column="36"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="23" pos:column="7">b<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">-&gt;<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="10">uri<pos:position pos:line="23" pos:column="13"/></name></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">temp<pos:position pos:line="23" pos:column="20"/></name></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="24" pos:column="7">b<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">uriAlloc<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">len<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">+<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">EXPAND_SPARE<pos:position pos:line="24" pos:column="39"/></name></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="26" pos:column="5">freeBindingList<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name><name pos:line="26" pos:column="23">b<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">-&gt;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="26">nextTagBinding<pos:position pos:line="26" pos:column="40"/></name></name></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></then>
  <else pos:line="28" pos:column="3">else <block pos:line="28" pos:column="8">{
    <expr_stmt><expr><name pos:line="29" pos:column="5">b<pos:position pos:line="29" pos:column="6"/></name> <operator pos:line="29" pos:column="7">=<pos:position pos:line="29" pos:column="8"/></operator> <operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">BINDING<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">*<pos:position pos:line="29" pos:column="19"/></operator><operator pos:line="29" pos:column="19">)<pos:position pos:line="29" pos:column="20"/></operator><call><name pos:line="29" pos:column="20">MALLOC<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><sizeof pos:line="29" pos:column="27">sizeof<argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">BINDING<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">b<pos:position pos:line="30" pos:column="11"/></name></expr>)<pos:position pos:line="30" pos:column="12"/></condition><then pos:line="30" pos:column="12">
      <block type="pseudo"><return pos:line="31" pos:column="7">return <expr><name pos:line="31" pos:column="14">XML_ERROR_NO_MEMORY<pos:position pos:line="31" pos:column="33"/></name></expr>;<pos:position pos:line="31" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">b<pos:position pos:line="32" pos:column="6"/></name><operator pos:line="32" pos:column="6">-&gt;<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="8">uri<pos:position pos:line="32" pos:column="11"/></name></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <operator pos:line="32" pos:column="14">(<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">XML_Char<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">*<pos:position pos:line="32" pos:column="25"/></operator><operator pos:line="32" pos:column="25">)<pos:position pos:line="32" pos:column="26"/></operator><call><name pos:line="32" pos:column="26">MALLOC<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><sizeof pos:line="32" pos:column="33">sizeof<argument_list pos:line="32" pos:column="39">(<argument><expr><name pos:line="32" pos:column="40">XML_Char<pos:position pos:line="32" pos:column="48"/></name></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></sizeof> <operator pos:line="32" pos:column="50">*<pos:position pos:line="32" pos:column="51"/></operator> <operator pos:line="32" pos:column="52">(<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="53">len<pos:position pos:line="32" pos:column="56"/></name> <operator pos:line="32" pos:column="57">+<pos:position pos:line="32" pos:column="58"/></operator> <name pos:line="32" pos:column="59">EXPAND_SPARE<pos:position pos:line="32" pos:column="71"/></name><operator pos:line="32" pos:column="71">)<pos:position pos:line="32" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="74"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">!<pos:position pos:line="33" pos:column="10"/></operator><name><name pos:line="33" pos:column="10">b<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">-&gt;<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="13">uri<pos:position pos:line="33" pos:column="16"/></name></name></expr>)<pos:position pos:line="33" pos:column="17"/></condition><then pos:line="33" pos:column="17"> <block pos:line="33" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">FREE<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><name pos:line="34" pos:column="12">b<pos:position pos:line="34" pos:column="13"/></name></expr></argument>)<pos:position pos:line="34" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="15"/></expr_stmt>
      <return pos:line="35" pos:column="7">return <expr><name pos:line="35" pos:column="14">XML_ERROR_NO_MEMORY<pos:position pos:line="35" pos:column="33"/></name></expr>;<pos:position pos:line="35" pos:column="34"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">b<pos:position pos:line="37" pos:column="6"/></name><operator pos:line="37" pos:column="6">-&gt;<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="8">uriAlloc<pos:position pos:line="37" pos:column="16"/></name></name> <operator pos:line="37" pos:column="17">=<pos:position pos:line="37" pos:column="18"/></operator> <name pos:line="37" pos:column="19">len<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">+<pos:position pos:line="37" pos:column="24"/></operator> <name pos:line="37" pos:column="25">EXPAND_SPARE<pos:position pos:line="37" pos:column="37"/></name></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">b<pos:position pos:line="39" pos:column="4"/></name><operator pos:line="39" pos:column="4">-&gt;<pos:position pos:line="39" pos:column="9"/></operator><name pos:line="39" pos:column="6">uriLen<pos:position pos:line="39" pos:column="12"/></name></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <name pos:line="39" pos:column="15">len<pos:position pos:line="39" pos:column="18"/></name></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">memcpy<pos:position pos:line="40" pos:column="9"/></name><argument_list pos:line="40" pos:column="9">(<argument><expr><name><name pos:line="40" pos:column="10">b<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">-&gt;<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="13">uri<pos:position pos:line="40" pos:column="16"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="18">uri<pos:position pos:line="40" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="23">len<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">*<pos:position pos:line="40" pos:column="28"/></operator> <sizeof pos:line="40" pos:column="29">sizeof<argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">XML_Char<pos:position pos:line="40" pos:column="44"/></name></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name pos:line="41" pos:column="7">namespaceSeparator<pos:position pos:line="41" pos:column="25"/></name></expr>)<pos:position pos:line="41" pos:column="26"/></condition><then pos:line="41" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="5">b<pos:position pos:line="42" pos:column="6"/></name><operator pos:line="42" pos:column="6">-&gt;<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="8">uri<pos:position pos:line="42" pos:column="11"/></name><index pos:line="42" pos:column="11">[<expr><name pos:line="42" pos:column="12">len<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">-<pos:position pos:line="42" pos:column="17"/></operator> <literal type="number" pos:line="42" pos:column="18">1<pos:position pos:line="42" pos:column="19"/></literal></expr>]<pos:position pos:line="42" pos:column="20"/></index></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <name pos:line="42" pos:column="23">namespaceSeparator<pos:position pos:line="42" pos:column="41"/></name></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="43" pos:column="3">b<pos:position pos:line="43" pos:column="4"/></name><operator pos:line="43" pos:column="4">-&gt;<pos:position pos:line="43" pos:column="9"/></operator><name pos:line="43" pos:column="6">prefix<pos:position pos:line="43" pos:column="12"/></name></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <name pos:line="43" pos:column="15">prefix<pos:position pos:line="43" pos:column="21"/></name></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">b<pos:position pos:line="44" pos:column="4"/></name><operator pos:line="44" pos:column="4">-&gt;<pos:position pos:line="44" pos:column="9"/></operator><name pos:line="44" pos:column="6">attId<pos:position pos:line="44" pos:column="11"/></name></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <name pos:line="44" pos:column="14">attId<pos:position pos:line="44" pos:column="19"/></name></expr>;<pos:position pos:line="44" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">b<pos:position pos:line="45" pos:column="4"/></name><operator pos:line="45" pos:column="4">-&gt;<pos:position pos:line="45" pos:column="9"/></operator><name pos:line="45" pos:column="6">prevPrefixBinding<pos:position pos:line="45" pos:column="23"/></name></name> <operator pos:line="45" pos:column="24">=<pos:position pos:line="45" pos:column="25"/></operator> <name><name pos:line="45" pos:column="26">prefix<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">-&gt;<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="34">binding<pos:position pos:line="45" pos:column="41"/></name></name></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
  <comment type="block" pos:line="46" pos:column="3">/* NULL binding when default namespace undeclared */</comment>
  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><operator pos:line="47" pos:column="7">*<pos:position pos:line="47" pos:column="8"/></operator><name pos:line="47" pos:column="8">uri<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">==<pos:position pos:line="47" pos:column="14"/></operator> <call><name pos:line="47" pos:column="15">XML_T<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><literal type="char" pos:line="47" pos:column="21">'\0'<pos:position pos:line="47" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="26"/></argument_list></call> <operator pos:line="47" pos:column="27">&amp;&amp;<pos:position pos:line="47" pos:column="37"/></operator> <name pos:line="47" pos:column="30">prefix<pos:position pos:line="47" pos:column="36"/></name> <operator pos:line="47" pos:column="37">==<pos:position pos:line="47" pos:column="39"/></operator> <operator pos:line="47" pos:column="40">&amp;<pos:position pos:line="47" pos:column="45"/></operator><name><name pos:line="47" pos:column="41">_dtd<pos:position pos:line="47" pos:column="45"/></name><operator pos:line="47" pos:column="45">-&gt;<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="47">defaultPrefix<pos:position pos:line="47" pos:column="60"/></name></name></expr>)<pos:position pos:line="47" pos:column="61"/></condition><then pos:line="47" pos:column="61">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="48" pos:column="5">prefix<pos:position pos:line="48" pos:column="11"/></name><operator pos:line="48" pos:column="11">-&gt;<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="13">binding<pos:position pos:line="48" pos:column="20"/></name></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <name pos:line="48" pos:column="23">NULL<pos:position pos:line="48" pos:column="27"/></name></expr>;<pos:position pos:line="48" pos:column="28"/></expr_stmt></block></then>
  <else pos:line="49" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="5">prefix<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">binding<pos:position pos:line="50" pos:column="20"/></name></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">b<pos:position pos:line="50" pos:column="24"/></name></expr>;<pos:position pos:line="50" pos:column="25"/></expr_stmt></block></else></if>
  <expr_stmt><expr><name><name pos:line="51" pos:column="3">b<pos:position pos:line="51" pos:column="4"/></name><operator pos:line="51" pos:column="4">-&gt;<pos:position pos:line="51" pos:column="9"/></operator><name pos:line="51" pos:column="6">nextTagBinding<pos:position pos:line="51" pos:column="20"/></name></name> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <operator pos:line="51" pos:column="23">*<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="24">bindingsPtr<pos:position pos:line="51" pos:column="35"/></name></expr>;<pos:position pos:line="51" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="52" pos:column="3">*<pos:position pos:line="52" pos:column="4"/></operator><name pos:line="52" pos:column="4">bindingsPtr<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <name pos:line="52" pos:column="18">b<pos:position pos:line="52" pos:column="19"/></name></expr>;<pos:position pos:line="52" pos:column="20"/></expr_stmt>
  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name pos:line="53" pos:column="7">startNamespaceDeclHandler<pos:position pos:line="53" pos:column="32"/></name></expr>)<pos:position pos:line="53" pos:column="33"/></condition><then pos:line="53" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="5">startNamespaceDeclHandler<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name pos:line="54" pos:column="31">handlerArg<pos:position pos:line="54" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="43">prefix<pos:position pos:line="54" pos:column="49"/></name><operator pos:line="54" pos:column="49">-&gt;<pos:position pos:line="54" pos:column="54"/></operator><name pos:line="54" pos:column="51">name<pos:position pos:line="54" pos:column="55"/></name></name></expr></argument>,
                              <argument><expr><ternary><condition><expr><name><name pos:line="55" pos:column="31">prefix<pos:position pos:line="55" pos:column="37"/></name><operator pos:line="55" pos:column="37">-&gt;<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="39">binding<pos:position pos:line="55" pos:column="46"/></name></name></expr> ?<pos:position pos:line="55" pos:column="48"/></condition><then pos:line="55" pos:column="48"> <expr><name pos:line="55" pos:column="49">uri<pos:position pos:line="55" pos:column="52"/></name></expr> <pos:position pos:line="55" pos:column="53"/></then><else pos:line="55" pos:column="53">: <expr><literal type="number" pos:line="55" pos:column="55">0<pos:position pos:line="55" pos:column="56"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="55" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="58"/></expr_stmt></block></then></if>
  <return pos:line="56" pos:column="3">return <expr><name pos:line="56" pos:column="10">XML_ERROR_NONE<pos:position pos:line="56" pos:column="24"/></name></expr>;<pos:position pos:line="56" pos:column="25"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

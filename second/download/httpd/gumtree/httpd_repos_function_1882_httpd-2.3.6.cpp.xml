<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1882_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">send_headers<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">request_rec<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">r<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">proxy_conn_rec<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">conn<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">buf<pos:position pos:line="3" pos:column="14"/></name></decl>, <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="17">cp<pos:position pos:line="3" pos:column="19"/></name></decl>, <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="22">bodylen<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">ns_len<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">apr_array_header_t<pos:position pos:line="5" pos:column="29"/></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">env_table<pos:position pos:line="5" pos:column="40"/></name></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">apr_table_entry_t<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">env<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">j<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">len<pos:position pos:line="8" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="21">bodylen_size<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">headerlen<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">=   <expr><sizeof pos:line="9" pos:column="30">sizeof<argument_list pos:line="9" pos:column="36">(<argument><expr><name pos:line="9" pos:column="37">CONTENT_LENGTH<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></sizeof>
                           <operator pos:line="10" pos:column="28">+<pos:position pos:line="10" pos:column="29"/></operator> <sizeof pos:line="10" pos:column="30">sizeof<argument_list pos:line="10" pos:column="36">(<argument><expr><name pos:line="10" pos:column="37">SCGI_MAGIC<pos:position pos:line="10" pos:column="47"/></name></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></sizeof>
                           <operator pos:line="11" pos:column="28">+<pos:position pos:line="11" pos:column="29"/></operator> <sizeof pos:line="11" pos:column="30">sizeof<argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">SCGI_PROTOCOL_VERSION<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="11" pos:column="60"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ap_add_common_vars<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">r<pos:position pos:line="13" pos:column="25"/></name></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ap_add_cgi_vars<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">r<pos:position pos:line="14" pos:column="22"/></name></expr></argument>)<pos:position pos:line="14" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="16" pos:column="5">/*
     * The header blob basically takes the environment and concatenates
     * keys and values using 0 bytes. There are special treatments here:
     *   - GATEWAY_INTERFACE and SCGI_MAGIC are dropped
     *   - CONTENT_LENGTH is always set and must be sent as the very first
     *     variable
     *
     * Additionally it's wrapped into a so-called netstring (see SCGI spec)
     */</comment>
    <expr_stmt><expr><name pos:line="25" pos:column="5">env_table<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <call><name pos:line="25" pos:column="17">apr_table_elts<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name><name pos:line="25" pos:column="32">r<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">subprocess_env<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">env<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <operator pos:line="26" pos:column="11">(<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">apr_table_entry_t<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></operator><operator pos:line="26" pos:column="31">)<pos:position pos:line="26" pos:column="32"/></operator><name><name pos:line="26" pos:column="32">env_table<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">elts<pos:position pos:line="26" pos:column="47"/></name></name></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
    <for pos:line="27" pos:column="5">for <control pos:line="27" pos:column="9">(<init><expr><name pos:line="27" pos:column="10">j<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="number" pos:line="27" pos:column="14">0<pos:position pos:line="27" pos:column="15"/></literal></expr>;<pos:position pos:line="27" pos:column="16"/></init> <condition><expr><name pos:line="27" pos:column="17">j<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">&lt;<pos:position pos:line="27" pos:column="23"/></operator> <name><name pos:line="27" pos:column="21">env_table<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">nelts<pos:position pos:line="27" pos:column="37"/></name></name></expr>;<pos:position pos:line="27" pos:column="38"/></condition> <incr><expr><operator pos:line="27" pos:column="39">++<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="41">j<pos:position pos:line="27" pos:column="42"/></name></expr></incr>)<pos:position pos:line="27" pos:column="43"/></control> <block pos:line="27" pos:column="44">{
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(   <expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><operator pos:line="28" pos:column="17">!<pos:position pos:line="28" pos:column="18"/></operator><call><name pos:line="28" pos:column="18">strcmp<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name><name pos:line="28" pos:column="25">env<pos:position pos:line="28" pos:column="28"/></name><index pos:line="28" pos:column="28">[<expr><name pos:line="28" pos:column="29">j<pos:position pos:line="28" pos:column="30"/></name></expr>]<pos:position pos:line="28" pos:column="31"/></index></name><operator pos:line="28" pos:column="31">.<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="32">key<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="37">GATEWAY_INTERFACE<pos:position pos:line="28" pos:column="54"/></name></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call><operator pos:line="28" pos:column="55">)<pos:position pos:line="28" pos:column="56"/></operator>
            <operator pos:line="29" pos:column="13">||<pos:position pos:line="29" pos:column="15"/></operator> <operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><operator pos:line="29" pos:column="17">!<pos:position pos:line="29" pos:column="18"/></operator><call><name pos:line="29" pos:column="18">strcmp<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name><name pos:line="29" pos:column="25">env<pos:position pos:line="29" pos:column="28"/></name><index pos:line="29" pos:column="28">[<expr><name pos:line="29" pos:column="29">j<pos:position pos:line="29" pos:column="30"/></name></expr>]<pos:position pos:line="29" pos:column="31"/></index></name><operator pos:line="29" pos:column="31">.<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="32">key<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="37">CONTENT_LENGTH<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call><operator pos:line="29" pos:column="52">)<pos:position pos:line="29" pos:column="53"/></operator>
            <operator pos:line="30" pos:column="13">||<pos:position pos:line="30" pos:column="15"/></operator> <operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><operator pos:line="30" pos:column="17">!<pos:position pos:line="30" pos:column="18"/></operator><call><name pos:line="30" pos:column="18">strcmp<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name><name pos:line="30" pos:column="25">env<pos:position pos:line="30" pos:column="28"/></name><index pos:line="30" pos:column="28">[<expr><name pos:line="30" pos:column="29">j<pos:position pos:line="30" pos:column="30"/></name></expr>]<pos:position pos:line="30" pos:column="31"/></index></name><operator pos:line="30" pos:column="31">.<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">key<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="37">SCGI_MAGIC<pos:position pos:line="30" pos:column="47"/></name></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call><operator pos:line="30" pos:column="48">)<pos:position pos:line="30" pos:column="49"/></operator></expr>)<pos:position pos:line="30" pos:column="50"/></condition><then pos:line="30" pos:column="50"> <block pos:line="30" pos:column="51">{
            <continue pos:line="31" pos:column="13">continue;<pos:position pos:line="31" pos:column="22"/></continue>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="33" pos:column="9">headerlen<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">+=<pos:position pos:line="33" pos:column="21"/></operator> <call><name pos:line="33" pos:column="22">strlen<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name><name pos:line="33" pos:column="29">env<pos:position pos:line="33" pos:column="32"/></name><index pos:line="33" pos:column="32">[<expr><name pos:line="33" pos:column="33">j<pos:position pos:line="33" pos:column="34"/></name></expr>]<pos:position pos:line="33" pos:column="35"/></index></name><operator pos:line="33" pos:column="35">.<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="36">key<pos:position pos:line="33" pos:column="39"/></name></expr></argument>)<pos:position pos:line="33" pos:column="40"/></argument_list></call> <operator pos:line="33" pos:column="41">+<pos:position pos:line="33" pos:column="42"/></operator> <call><name pos:line="33" pos:column="43">strlen<pos:position pos:line="33" pos:column="49"/></name><argument_list pos:line="33" pos:column="49">(<argument><expr><name><name pos:line="33" pos:column="50">env<pos:position pos:line="33" pos:column="53"/></name><index pos:line="33" pos:column="53">[<expr><name pos:line="33" pos:column="54">j<pos:position pos:line="33" pos:column="55"/></name></expr>]<pos:position pos:line="33" pos:column="56"/></index></name><operator pos:line="33" pos:column="56">.<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="57">val<pos:position pos:line="33" pos:column="60"/></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call> <operator pos:line="33" pos:column="62">+<pos:position pos:line="33" pos:column="63"/></operator> <literal type="number" pos:line="33" pos:column="64">2<pos:position pos:line="33" pos:column="65"/></literal></expr>;<pos:position pos:line="33" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></for>
    <expr_stmt><expr><name pos:line="35" pos:column="5">bodylen<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">apr_psprintf<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name><name pos:line="35" pos:column="28">r<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">pool<pos:position pos:line="35" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="37">"%"<pos:position pos:line="35" pos:column="40"/></literal> <name pos:line="35" pos:column="41">APR_OFF_T_FMT<pos:position pos:line="35" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="56">r<pos:position pos:line="35" pos:column="57"/></name><operator pos:line="35" pos:column="57">-&gt;<pos:position pos:line="35" pos:column="62"/></operator><name pos:line="35" pos:column="59">remaining<pos:position pos:line="35" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">bodylen_size<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <call><name pos:line="36" pos:column="20">strlen<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><name pos:line="36" pos:column="27">bodylen<pos:position pos:line="36" pos:column="34"/></name></expr></argument>)<pos:position pos:line="36" pos:column="35"/></argument_list></call> <operator pos:line="36" pos:column="36">+<pos:position pos:line="36" pos:column="37"/></operator> <literal type="number" pos:line="36" pos:column="38">1<pos:position pos:line="36" pos:column="39"/></literal></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">headerlen<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">+=<pos:position pos:line="37" pos:column="17"/></operator> <name pos:line="37" pos:column="18">bodylen_size<pos:position pos:line="37" pos:column="30"/></name></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name pos:line="39" pos:column="5">ns_len<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <call><name pos:line="39" pos:column="14">apr_psprintf<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name><name pos:line="39" pos:column="27">r<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">pool<pos:position pos:line="39" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="36">"%"<pos:position pos:line="39" pos:column="39"/></literal> <name pos:line="39" pos:column="40">APR_SIZE_T_FMT<pos:position pos:line="39" pos:column="54"/></name> <literal type="string" pos:line="39" pos:column="55">":"<pos:position pos:line="39" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="60">headerlen<pos:position pos:line="39" pos:column="69"/></name></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">len<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">=<pos:position pos:line="40" pos:column="10"/></operator> <call><name pos:line="40" pos:column="11">strlen<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<argument><expr><name pos:line="40" pos:column="18">ns_len<pos:position pos:line="40" pos:column="24"/></name></expr></argument>)<pos:position pos:line="40" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">headerlen<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">+=<pos:position pos:line="41" pos:column="17"/></operator> <name pos:line="41" pos:column="18">len<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">+<pos:position pos:line="41" pos:column="23"/></operator> <literal type="number" pos:line="41" pos:column="24">1<pos:position pos:line="41" pos:column="25"/></literal></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt> <comment type="block" pos:line="41" pos:column="27">/* 1 == , */</comment>
    <expr_stmt><expr><name pos:line="42" pos:column="5">cp<pos:position pos:line="42" pos:column="7"/></name> <operator pos:line="42" pos:column="8">=<pos:position pos:line="42" pos:column="9"/></operator> <name pos:line="42" pos:column="10">buf<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <call><name pos:line="42" pos:column="16">apr_palloc<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><name><name pos:line="42" pos:column="27">r<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-&gt;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="30">pool<pos:position pos:line="42" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="36">headerlen<pos:position pos:line="42" pos:column="45"/></name></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">memcpy<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">(<argument><expr><name pos:line="43" pos:column="12">cp<pos:position pos:line="43" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="16">ns_len<pos:position pos:line="43" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="24">len<pos:position pos:line="43" pos:column="27"/></name></expr></argument>)<pos:position pos:line="43" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">cp<pos:position pos:line="44" pos:column="7"/></name> <operator pos:line="44" pos:column="8">+=<pos:position pos:line="44" pos:column="10"/></operator> <name pos:line="44" pos:column="11">len<pos:position pos:line="44" pos:column="14"/></name></expr>;<pos:position pos:line="44" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">memcpy<pos:position pos:line="46" pos:column="11"/></name><argument_list pos:line="46" pos:column="11">(<argument><expr><name pos:line="46" pos:column="12">cp<pos:position pos:line="46" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="16">CONTENT_LENGTH<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="32">sizeof<argument_list pos:line="46" pos:column="38">(<argument><expr><name pos:line="46" pos:column="39">CONTENT_LENGTH<pos:position pos:line="46" pos:column="53"/></name></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">cp<pos:position pos:line="47" pos:column="7"/></name> <operator pos:line="47" pos:column="8">+=<pos:position pos:line="47" pos:column="10"/></operator> <sizeof pos:line="47" pos:column="11">sizeof<argument_list pos:line="47" pos:column="17">(<argument><expr><name pos:line="47" pos:column="18">CONTENT_LENGTH<pos:position pos:line="47" pos:column="32"/></name></expr></argument>)<pos:position pos:line="47" pos:column="33"/></argument_list></sizeof></expr>;<pos:position pos:line="47" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">memcpy<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">(<argument><expr><name pos:line="48" pos:column="12">cp<pos:position pos:line="48" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="16">bodylen<pos:position pos:line="48" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="25">bodylen_size<pos:position pos:line="48" pos:column="37"/></name></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">cp<pos:position pos:line="49" pos:column="7"/></name> <operator pos:line="49" pos:column="8">+=<pos:position pos:line="49" pos:column="10"/></operator> <name pos:line="49" pos:column="11">bodylen_size<pos:position pos:line="49" pos:column="23"/></name></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">memcpy<pos:position pos:line="50" pos:column="11"/></name><argument_list pos:line="50" pos:column="11">(<argument><expr><name pos:line="50" pos:column="12">cp<pos:position pos:line="50" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="16">SCGI_MAGIC<pos:position pos:line="50" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="28">sizeof<argument_list pos:line="50" pos:column="34">(<argument><expr><name pos:line="50" pos:column="35">SCGI_MAGIC<pos:position pos:line="50" pos:column="45"/></name></expr></argument>)<pos:position pos:line="50" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="51" pos:column="5">cp<pos:position pos:line="51" pos:column="7"/></name> <operator pos:line="51" pos:column="8">+=<pos:position pos:line="51" pos:column="10"/></operator> <sizeof pos:line="51" pos:column="11">sizeof<argument_list pos:line="51" pos:column="17">(<argument><expr><name pos:line="51" pos:column="18">SCGI_MAGIC<pos:position pos:line="51" pos:column="28"/></name></expr></argument>)<pos:position pos:line="51" pos:column="29"/></argument_list></sizeof></expr>;<pos:position pos:line="51" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">memcpy<pos:position pos:line="52" pos:column="11"/></name><argument_list pos:line="52" pos:column="11">(<argument><expr><name pos:line="52" pos:column="12">cp<pos:position pos:line="52" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="16">SCGI_PROTOCOL_VERSION<pos:position pos:line="52" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="39">sizeof<argument_list pos:line="52" pos:column="45">(<argument><expr><name pos:line="52" pos:column="46">SCGI_PROTOCOL_VERSION<pos:position pos:line="52" pos:column="67"/></name></expr></argument>)<pos:position pos:line="52" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name pos:line="53" pos:column="5">cp<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">+=<pos:position pos:line="53" pos:column="10"/></operator> <sizeof pos:line="53" pos:column="11">sizeof<argument_list pos:line="53" pos:column="17">(<argument><expr><name pos:line="53" pos:column="18">SCGI_PROTOCOL_VERSION<pos:position pos:line="53" pos:column="39"/></name></expr></argument>)<pos:position pos:line="53" pos:column="40"/></argument_list></sizeof></expr>;<pos:position pos:line="53" pos:column="41"/></expr_stmt>

    <for pos:line="55" pos:column="5">for <control pos:line="55" pos:column="9">(<init><expr><name pos:line="55" pos:column="10">j<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <literal type="number" pos:line="55" pos:column="14">0<pos:position pos:line="55" pos:column="15"/></literal></expr>;<pos:position pos:line="55" pos:column="16"/></init> <condition><expr><name pos:line="55" pos:column="17">j<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">&lt;<pos:position pos:line="55" pos:column="23"/></operator> <name><name pos:line="55" pos:column="21">env_table<pos:position pos:line="55" pos:column="30"/></name><operator pos:line="55" pos:column="30">-&gt;<pos:position pos:line="55" pos:column="35"/></operator><name pos:line="55" pos:column="32">nelts<pos:position pos:line="55" pos:column="37"/></name></name></expr>;<pos:position pos:line="55" pos:column="38"/></condition> <incr><expr><operator pos:line="55" pos:column="39">++<pos:position pos:line="55" pos:column="41"/></operator><name pos:line="55" pos:column="41">j<pos:position pos:line="55" pos:column="42"/></name></expr></incr>)<pos:position pos:line="55" pos:column="43"/></control> <block pos:line="55" pos:column="44">{
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(   <expr><operator pos:line="56" pos:column="16">(<pos:position pos:line="56" pos:column="17"/></operator><operator pos:line="56" pos:column="17">!<pos:position pos:line="56" pos:column="18"/></operator><call><name pos:line="56" pos:column="18">strcmp<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name><name pos:line="56" pos:column="25">env<pos:position pos:line="56" pos:column="28"/></name><index pos:line="56" pos:column="28">[<expr><name pos:line="56" pos:column="29">j<pos:position pos:line="56" pos:column="30"/></name></expr>]<pos:position pos:line="56" pos:column="31"/></index></name><operator pos:line="56" pos:column="31">.<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="32">key<pos:position pos:line="56" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="37">GATEWAY_INTERFACE<pos:position pos:line="56" pos:column="54"/></name></expr></argument>)<pos:position pos:line="56" pos:column="55"/></argument_list></call><operator pos:line="56" pos:column="55">)<pos:position pos:line="56" pos:column="56"/></operator>
            <operator pos:line="57" pos:column="13">||<pos:position pos:line="57" pos:column="15"/></operator> <operator pos:line="57" pos:column="16">(<pos:position pos:line="57" pos:column="17"/></operator><operator pos:line="57" pos:column="17">!<pos:position pos:line="57" pos:column="18"/></operator><call><name pos:line="57" pos:column="18">strcmp<pos:position pos:line="57" pos:column="24"/></name><argument_list pos:line="57" pos:column="24">(<argument><expr><name><name pos:line="57" pos:column="25">env<pos:position pos:line="57" pos:column="28"/></name><index pos:line="57" pos:column="28">[<expr><name pos:line="57" pos:column="29">j<pos:position pos:line="57" pos:column="30"/></name></expr>]<pos:position pos:line="57" pos:column="31"/></index></name><operator pos:line="57" pos:column="31">.<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="32">key<pos:position pos:line="57" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="37">CONTENT_LENGTH<pos:position pos:line="57" pos:column="51"/></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call><operator pos:line="57" pos:column="52">)<pos:position pos:line="57" pos:column="53"/></operator>
            <operator pos:line="58" pos:column="13">||<pos:position pos:line="58" pos:column="15"/></operator> <operator pos:line="58" pos:column="16">(<pos:position pos:line="58" pos:column="17"/></operator><operator pos:line="58" pos:column="17">!<pos:position pos:line="58" pos:column="18"/></operator><call><name pos:line="58" pos:column="18">strcmp<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><name><name pos:line="58" pos:column="25">env<pos:position pos:line="58" pos:column="28"/></name><index pos:line="58" pos:column="28">[<expr><name pos:line="58" pos:column="29">j<pos:position pos:line="58" pos:column="30"/></name></expr>]<pos:position pos:line="58" pos:column="31"/></index></name><operator pos:line="58" pos:column="31">.<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="32">key<pos:position pos:line="58" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="37">SCGI_MAGIC<pos:position pos:line="58" pos:column="47"/></name></expr></argument>)<pos:position pos:line="58" pos:column="48"/></argument_list></call><operator pos:line="58" pos:column="48">)<pos:position pos:line="58" pos:column="49"/></operator></expr>)<pos:position pos:line="58" pos:column="50"/></condition><then pos:line="58" pos:column="50"> <block pos:line="58" pos:column="51">{
            <continue pos:line="59" pos:column="13">continue;<pos:position pos:line="59" pos:column="22"/></continue>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="61" pos:column="9">len<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">=<pos:position pos:line="61" pos:column="14"/></operator> <call><name pos:line="61" pos:column="15">strlen<pos:position pos:line="61" pos:column="21"/></name><argument_list pos:line="61" pos:column="21">(<argument><expr><name><name pos:line="61" pos:column="22">env<pos:position pos:line="61" pos:column="25"/></name><index pos:line="61" pos:column="25">[<expr><name pos:line="61" pos:column="26">j<pos:position pos:line="61" pos:column="27"/></name></expr>]<pos:position pos:line="61" pos:column="28"/></index></name><operator pos:line="61" pos:column="28">.<pos:position pos:line="61" pos:column="29"/></operator><name pos:line="61" pos:column="29">key<pos:position pos:line="61" pos:column="32"/></name></expr></argument>)<pos:position pos:line="61" pos:column="33"/></argument_list></call> <operator pos:line="61" pos:column="34">+<pos:position pos:line="61" pos:column="35"/></operator> <literal type="number" pos:line="61" pos:column="36">1<pos:position pos:line="61" pos:column="37"/></literal></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">memcpy<pos:position pos:line="62" pos:column="15"/></name><argument_list pos:line="62" pos:column="15">(<argument><expr><name pos:line="62" pos:column="16">cp<pos:position pos:line="62" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="20">env<pos:position pos:line="62" pos:column="23"/></name><index pos:line="62" pos:column="23">[<expr><name pos:line="62" pos:column="24">j<pos:position pos:line="62" pos:column="25"/></name></expr>]<pos:position pos:line="62" pos:column="26"/></index></name><operator pos:line="62" pos:column="26">.<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="27">key<pos:position pos:line="62" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="32">len<pos:position pos:line="62" pos:column="35"/></name></expr></argument>)<pos:position pos:line="62" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="63" pos:column="9">cp<pos:position pos:line="63" pos:column="11"/></name> <operator pos:line="63" pos:column="12">+=<pos:position pos:line="63" pos:column="14"/></operator> <name pos:line="63" pos:column="15">len<pos:position pos:line="63" pos:column="18"/></name></expr>;<pos:position pos:line="63" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="64" pos:column="9">len<pos:position pos:line="64" pos:column="12"/></name> <operator pos:line="64" pos:column="13">=<pos:position pos:line="64" pos:column="14"/></operator> <call><name pos:line="64" pos:column="15">strlen<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">(<argument><expr><name><name pos:line="64" pos:column="22">env<pos:position pos:line="64" pos:column="25"/></name><index pos:line="64" pos:column="25">[<expr><name pos:line="64" pos:column="26">j<pos:position pos:line="64" pos:column="27"/></name></expr>]<pos:position pos:line="64" pos:column="28"/></index></name><operator pos:line="64" pos:column="28">.<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="29">val<pos:position pos:line="64" pos:column="32"/></name></expr></argument>)<pos:position pos:line="64" pos:column="33"/></argument_list></call> <operator pos:line="64" pos:column="34">+<pos:position pos:line="64" pos:column="35"/></operator> <literal type="number" pos:line="64" pos:column="36">1<pos:position pos:line="64" pos:column="37"/></literal></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">memcpy<pos:position pos:line="65" pos:column="15"/></name><argument_list pos:line="65" pos:column="15">(<argument><expr><name pos:line="65" pos:column="16">cp<pos:position pos:line="65" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="20">env<pos:position pos:line="65" pos:column="23"/></name><index pos:line="65" pos:column="23">[<expr><name pos:line="65" pos:column="24">j<pos:position pos:line="65" pos:column="25"/></name></expr>]<pos:position pos:line="65" pos:column="26"/></index></name><operator pos:line="65" pos:column="26">.<pos:position pos:line="65" pos:column="27"/></operator><name pos:line="65" pos:column="27">val<pos:position pos:line="65" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="32">len<pos:position pos:line="65" pos:column="35"/></name></expr></argument>)<pos:position pos:line="65" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="66" pos:column="9">cp<pos:position pos:line="66" pos:column="11"/></name> <operator pos:line="66" pos:column="12">+=<pos:position pos:line="66" pos:column="14"/></operator> <name pos:line="66" pos:column="15">len<pos:position pos:line="66" pos:column="18"/></name></expr>;<pos:position pos:line="66" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></for>
    <expr_stmt><expr><operator pos:line="68" pos:column="5">*<pos:position pos:line="68" pos:column="6"/></operator><name pos:line="68" pos:column="6">cp<pos:position pos:line="68" pos:column="8"/></name><operator pos:line="68" pos:column="8">++<pos:position pos:line="68" pos:column="10"/></operator> <operator pos:line="68" pos:column="11">=<pos:position pos:line="68" pos:column="12"/></operator> <literal type="char" pos:line="68" pos:column="13">','<pos:position pos:line="68" pos:column="16"/></literal></expr>;<pos:position pos:line="68" pos:column="17"/></expr_stmt>

    <return pos:line="70" pos:column="5">return <expr><call><name pos:line="70" pos:column="12">sendall<pos:position pos:line="70" pos:column="19"/></name><argument_list pos:line="70" pos:column="19">(<argument><expr><name pos:line="70" pos:column="20">conn<pos:position pos:line="70" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="26">buf<pos:position pos:line="70" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="31">headerlen<pos:position pos:line="70" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="42">r<pos:position pos:line="70" pos:column="43"/></name></expr></argument>)<pos:position pos:line="70" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="45"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3580_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_notes_auth<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">request_rec<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type> <name pos:line="1" pos:column="42">r<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">user<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">pw<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name pos:line="3" pos:column="39">char<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">method<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="53">const<pos:position pos:line="3" pos:column="58"/></specifier> <name pos:line="3" pos:column="59">char<pos:position pos:line="3" pos:column="63"/></name> <modifier pos:line="3" pos:column="64">*<pos:position pos:line="3" pos:column="65"/></modifier></type><name pos:line="3" pos:column="65">mimetype<pos:position pos:line="3" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="74"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_table_t<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">notes<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><name pos:line="5" pos:column="26">NULL<pos:position pos:line="5" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">authname<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* find the main request */</comment>
    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><name><name pos:line="9" pos:column="12">r<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">main<pos:position pos:line="9" pos:column="19"/></name></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition> <block pos:line="9" pos:column="21">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">r<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name><name pos:line="10" pos:column="13">r<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">main<pos:position pos:line="10" pos:column="20"/></name></name></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></while>
    <comment type="block" pos:line="12" pos:column="5">/* find the first redirect */</comment>
    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><name><name pos:line="13" pos:column="12">r<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">prev<pos:position pos:line="13" pos:column="19"/></name></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition> <block pos:line="13" pos:column="21">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">r<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <name><name pos:line="14" pos:column="13">r<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">prev<pos:position pos:line="14" pos:column="20"/></name></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></while>
    <expr_stmt><expr><name pos:line="16" pos:column="5">notes<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name><name pos:line="16" pos:column="13">r<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">notes<pos:position pos:line="16" pos:column="21"/></name></name></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="18" pos:column="5">/* have we isolated the user and pw before? */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">authname<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">ap_auth_name<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">r<pos:position pos:line="19" pos:column="30"/></name></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">user<pos:position pos:line="20" pos:column="13"/></name></expr>)<pos:position pos:line="20" pos:column="14"/></condition><then pos:line="20" pos:column="14"> <block pos:line="20" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">apr_table_setn<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">notes<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="31">apr_pstrcat<pos:position pos:line="21" pos:column="42"/></name><argument_list pos:line="21" pos:column="42">(<argument><expr><name><name pos:line="21" pos:column="43">r<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">pool<pos:position pos:line="21" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="52">authname<pos:position pos:line="21" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="62">"-user"<pos:position pos:line="21" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="71">NULL<pos:position pos:line="21" pos:column="75"/></name></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="78">user<pos:position pos:line="21" pos:column="82"/></name></expr></argument>)<pos:position pos:line="21" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="84"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">pw<pos:position pos:line="23" pos:column="11"/></name></expr>)<pos:position pos:line="23" pos:column="12"/></condition><then pos:line="23" pos:column="12"> <block pos:line="23" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">apr_table_setn<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">notes<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="31">apr_pstrcat<pos:position pos:line="24" pos:column="42"/></name><argument_list pos:line="24" pos:column="42">(<argument><expr><name><name pos:line="24" pos:column="43">r<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">-&gt;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="46">pool<pos:position pos:line="24" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="52">authname<pos:position pos:line="24" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="62">"-pw"<pos:position pos:line="24" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="69">NULL<pos:position pos:line="24" pos:column="73"/></name></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="76">pw<pos:position pos:line="24" pos:column="78"/></name></expr></argument>)<pos:position pos:line="24" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="80"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">method<pos:position pos:line="26" pos:column="15"/></name></expr>)<pos:position pos:line="26" pos:column="16"/></condition><then pos:line="26" pos:column="16"> <block pos:line="26" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">apr_table_setn<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">notes<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="31">apr_pstrcat<pos:position pos:line="27" pos:column="42"/></name><argument_list pos:line="27" pos:column="42">(<argument><expr><name><name pos:line="27" pos:column="43">r<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">-&gt;<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="46">pool<pos:position pos:line="27" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="52">authname<pos:position pos:line="27" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="62">"-method"<pos:position pos:line="27" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="73">NULL<pos:position pos:line="27" pos:column="77"/></name></expr></argument>)<pos:position pos:line="27" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="80">method<pos:position pos:line="27" pos:column="86"/></name></expr></argument>)<pos:position pos:line="27" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="88"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">mimetype<pos:position pos:line="29" pos:column="17"/></name></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18"> <block pos:line="29" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">apr_table_setn<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">notes<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="31">apr_pstrcat<pos:position pos:line="30" pos:column="42"/></name><argument_list pos:line="30" pos:column="42">(<argument><expr><name><name pos:line="30" pos:column="43">r<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">-&gt;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="46">pool<pos:position pos:line="30" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="52">authname<pos:position pos:line="30" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="62">"-mimetype"<pos:position pos:line="30" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="75">NULL<pos:position pos:line="30" pos:column="79"/></name></expr></argument>)<pos:position pos:line="30" pos:column="80"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="82">mimetype<pos:position pos:line="30" pos:column="90"/></name></expr></argument>)<pos:position pos:line="30" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="92"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

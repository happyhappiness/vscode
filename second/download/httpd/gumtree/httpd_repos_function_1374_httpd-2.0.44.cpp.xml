<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1374_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">deflate_out_filter<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">ap_filter_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">f<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="2" pos:column="40">apr_bucket_brigade<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">bb<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_bucket<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">e<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">request_rec<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">r<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name><name pos:line="5" pos:column="22">f<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">r<pos:position pos:line="5" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">deflate_ctx<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">ctx<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><name><name pos:line="6" pos:column="24">f<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">ctx<pos:position pos:line="6" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">zRC<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">deflate_filter_config<pos:position pos:line="8" pos:column="26"/></name> <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier></type><name pos:line="8" pos:column="28">c<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><call><name pos:line="8" pos:column="32">ap_get_module_config<pos:position pos:line="8" pos:column="52"/></name><argument_list pos:line="8" pos:column="52">(<argument><expr><name><name pos:line="8" pos:column="53">r<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">-&gt;<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="56">server<pos:position pos:line="8" pos:column="62"/></name><operator pos:line="8" pos:column="62">-&gt;<pos:position pos:line="8" pos:column="67"/></operator><name pos:line="8" pos:column="64">module_config<pos:position pos:line="8" pos:column="77"/></name></name></expr></argument>,
                                                    <argument><expr><operator pos:line="9" pos:column="53">&amp;<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="54">deflate_module<pos:position pos:line="9" pos:column="68"/></name></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="70"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* If we don't have a context, we need to ensure that it is okay to send
     * the deflated content.  If we have a context, that means we've done
     * this before and we liked it.
     * This could be not so nice if we always fail.  But, if we succeed,
     * we're in better shape.
     */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">ctx<pos:position pos:line="17" pos:column="13"/></name></expr>)<pos:position pos:line="17" pos:column="14"/></condition><then pos:line="17" pos:column="14"> <block pos:line="17" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">char<pos:position pos:line="18" pos:column="13"/></name> <modifier pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></modifier></type><name pos:line="18" pos:column="15">buf<pos:position pos:line="18" pos:column="18"/></name></decl>, <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="18" pos:column="21">token<pos:position pos:line="18" pos:column="26"/></name></decl>;<pos:position pos:line="18" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">const<pos:position pos:line="19" pos:column="14"/></specifier> <name pos:line="19" pos:column="15">char<pos:position pos:line="19" pos:column="19"/></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">encoding<pos:position pos:line="19" pos:column="29"/></name></decl>, <modifier pos:line="19" pos:column="31">*<pos:position pos:line="19" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="19" pos:column="32">accepts<pos:position pos:line="19" pos:column="39"/></name></decl>;<pos:position pos:line="19" pos:column="40"/></decl_stmt>

        <comment type="block" pos:line="21" pos:column="9">/* only work on main request/no subrequests */</comment>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">r<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">main<pos:position pos:line="22" pos:column="20"/></name></name></expr>)<pos:position pos:line="22" pos:column="21"/></condition><then pos:line="22" pos:column="21"> <block pos:line="22" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">ap_remove_output_filter<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">f<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
            <return pos:line="24" pos:column="13">return <expr><call><name pos:line="24" pos:column="20">ap_pass_brigade<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><name><name pos:line="24" pos:column="36">f<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">-&gt;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="39">next<pos:position pos:line="24" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="45">bb<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></return>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="27" pos:column="9">/* some browsers might have problems, so set no-gzip
         * (with browsermatch) for them
         */</comment>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">apr_table_get<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(<argument><expr><name><name pos:line="30" pos:column="27">r<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">-&gt;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="30">subprocess_env<pos:position pos:line="30" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="46">"no-gzip"<pos:position pos:line="30" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="57"/></condition><then pos:line="30" pos:column="57"> <block pos:line="30" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">ap_remove_output_filter<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name pos:line="31" pos:column="37">f<pos:position pos:line="31" pos:column="38"/></name></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
            <return pos:line="32" pos:column="13">return <expr><call><name pos:line="32" pos:column="20">ap_pass_brigade<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name><name pos:line="32" pos:column="36">f<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">-&gt;<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="39">next<pos:position pos:line="32" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="45">bb<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></return>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="35" pos:column="9">/* Some browsers might have problems with content types
         * other than text/html, so set gzip-only-text/html
         * (with browsermatch) for them
         */</comment>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">r<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">-&gt;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="16">content_type<pos:position pos:line="39" pos:column="28"/></name></name> <operator pos:line="39" pos:column="29">==<pos:position pos:line="39" pos:column="31"/></operator> <name pos:line="39" pos:column="32">NULL<pos:position pos:line="39" pos:column="36"/></name>
             <operator pos:line="40" pos:column="14">||<pos:position pos:line="40" pos:column="16"/></operator> <call><name pos:line="40" pos:column="17">strncmp<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name><name pos:line="40" pos:column="25">r<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">-&gt;<pos:position pos:line="40" pos:column="31"/></operator><name pos:line="40" pos:column="28">content_type<pos:position pos:line="40" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="42">"text/html"<pos:position pos:line="40" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="55">9<pos:position pos:line="40" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="58"/></condition><then pos:line="40" pos:column="58"> <block pos:line="40" pos:column="59">{
            <decl_stmt><decl><type><specifier pos:line="41" pos:column="13">const<pos:position pos:line="41" pos:column="18"/></specifier> <name pos:line="41" pos:column="19">char<pos:position pos:line="41" pos:column="23"/></name> <modifier pos:line="41" pos:column="24">*<pos:position pos:line="41" pos:column="25"/></modifier></type><name pos:line="41" pos:column="25">env_value<pos:position pos:line="41" pos:column="34"/></name> <init pos:line="41" pos:column="35">= <expr><call><name pos:line="41" pos:column="37">apr_table_get<pos:position pos:line="41" pos:column="50"/></name><argument_list pos:line="41" pos:column="50">(<argument><expr><name><name pos:line="41" pos:column="51">r<pos:position pos:line="41" pos:column="52"/></name><operator pos:line="41" pos:column="52">-&gt;<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="54">subprocess_env<pos:position pos:line="41" pos:column="68"/></name></name></expr></argument>,
                                                  <argument><expr><literal type="string" pos:line="42" pos:column="51">"gzip-only-text/html"<pos:position pos:line="42" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="74"/></decl_stmt>
            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">( <expr><name pos:line="43" pos:column="18">env_value<pos:position pos:line="43" pos:column="27"/></name> <operator pos:line="43" pos:column="28">&amp;&amp;<pos:position pos:line="43" pos:column="38"/></operator> <operator pos:line="43" pos:column="31">(<pos:position pos:line="43" pos:column="32"/></operator><call><name pos:line="43" pos:column="32">strcmp<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><name pos:line="43" pos:column="39">env_value<pos:position pos:line="43" pos:column="48"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="43" pos:column="49">"1"<pos:position pos:line="43" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call> <operator pos:line="43" pos:column="54">==<pos:position pos:line="43" pos:column="56"/></operator> <literal type="number" pos:line="43" pos:column="57">0<pos:position pos:line="43" pos:column="58"/></literal><operator pos:line="43" pos:column="58">)<pos:position pos:line="43" pos:column="59"/></operator></expr> )<pos:position pos:line="43" pos:column="61"/></condition><then pos:line="43" pos:column="61"> <block pos:line="43" pos:column="62">{
                <expr_stmt><expr><call><name pos:line="44" pos:column="17">ap_remove_output_filter<pos:position pos:line="44" pos:column="40"/></name><argument_list pos:line="44" pos:column="40">(<argument><expr><name pos:line="44" pos:column="41">f<pos:position pos:line="44" pos:column="42"/></name></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="44"/></expr_stmt>
                <return pos:line="45" pos:column="17">return <expr><call><name pos:line="45" pos:column="24">ap_pass_brigade<pos:position pos:line="45" pos:column="39"/></name><argument_list pos:line="45" pos:column="39">(<argument><expr><name><name pos:line="45" pos:column="40">f<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">-&gt;<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="43">next<pos:position pos:line="45" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="49">bb<pos:position pos:line="45" pos:column="51"/></name></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="53"/></return>
            }<pos:position pos:line="46" pos:column="14"/></block></then></if>            
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="49" pos:column="9">/* Let's see what our current Content-Encoding is.
         * If gzip is present, don't gzip again.  (We could, but let's not.)
         */</comment>
        <expr_stmt><expr><name pos:line="52" pos:column="9">encoding<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">=<pos:position pos:line="52" pos:column="19"/></operator> <call><name pos:line="52" pos:column="20">apr_table_get<pos:position pos:line="52" pos:column="33"/></name><argument_list pos:line="52" pos:column="33">(<argument><expr><name><name pos:line="52" pos:column="34">r<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">-&gt;<pos:position pos:line="52" pos:column="40"/></operator><name pos:line="52" pos:column="37">headers_out<pos:position pos:line="52" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="50">"Content-Encoding"<pos:position pos:line="52" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="70"/></expr_stmt>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">encoding<pos:position pos:line="53" pos:column="21"/></name></expr>)<pos:position pos:line="53" pos:column="22"/></condition><then pos:line="53" pos:column="22"> <block pos:line="53" pos:column="23">{
            <decl_stmt><decl><type><specifier pos:line="54" pos:column="13">const<pos:position pos:line="54" pos:column="18"/></specifier> <name pos:line="54" pos:column="19">char<pos:position pos:line="54" pos:column="23"/></name> <modifier pos:line="54" pos:column="24">*<pos:position pos:line="54" pos:column="25"/></modifier></type><name pos:line="54" pos:column="25">tmp<pos:position pos:line="54" pos:column="28"/></name> <init pos:line="54" pos:column="29">= <expr><name pos:line="54" pos:column="31">encoding<pos:position pos:line="54" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="54" pos:column="40"/></decl_stmt>

            <expr_stmt><expr><name pos:line="56" pos:column="13">token<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <call><name pos:line="56" pos:column="21">ap_get_token<pos:position pos:line="56" pos:column="33"/></name><argument_list pos:line="56" pos:column="33">(<argument><expr><name><name pos:line="56" pos:column="34">r<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">-&gt;<pos:position pos:line="56" pos:column="40"/></operator><name pos:line="56" pos:column="37">pool<pos:position pos:line="56" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="43">&amp;<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="44">tmp<pos:position pos:line="56" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="49">0<pos:position pos:line="56" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="52"/></expr_stmt>
            <while pos:line="57" pos:column="13">while <condition pos:line="57" pos:column="19">(<expr><name pos:line="57" pos:column="20">token<pos:position pos:line="57" pos:column="25"/></name> <operator pos:line="57" pos:column="26">&amp;&amp;<pos:position pos:line="57" pos:column="36"/></operator> <name><name pos:line="57" pos:column="29">token<pos:position pos:line="57" pos:column="34"/></name><index pos:line="57" pos:column="34">[<expr><literal type="number" pos:line="57" pos:column="35">0<pos:position pos:line="57" pos:column="36"/></literal></expr>]<pos:position pos:line="57" pos:column="37"/></index></name></expr>)<pos:position pos:line="57" pos:column="38"/></condition> <block pos:line="57" pos:column="39">{
                <if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><operator pos:line="58" pos:column="21">!<pos:position pos:line="58" pos:column="22"/></operator><call><name pos:line="58" pos:column="22">strcasecmp<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">token<pos:position pos:line="58" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="40">"gzip"<pos:position pos:line="58" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="48"/></condition><then pos:line="58" pos:column="48"> <block pos:line="58" pos:column="49">{
                    <expr_stmt><expr><call><name pos:line="59" pos:column="21">ap_remove_output_filter<pos:position pos:line="59" pos:column="44"/></name><argument_list pos:line="59" pos:column="44">(<argument><expr><name pos:line="59" pos:column="45">f<pos:position pos:line="59" pos:column="46"/></name></expr></argument>)<pos:position pos:line="59" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="48"/></expr_stmt>
                    <return pos:line="60" pos:column="21">return <expr><call><name pos:line="60" pos:column="28">ap_pass_brigade<pos:position pos:line="60" pos:column="43"/></name><argument_list pos:line="60" pos:column="43">(<argument><expr><name><name pos:line="60" pos:column="44">f<pos:position pos:line="60" pos:column="45"/></name><operator pos:line="60" pos:column="45">-&gt;<pos:position pos:line="60" pos:column="50"/></operator><name pos:line="60" pos:column="47">next<pos:position pos:line="60" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="53">bb<pos:position pos:line="60" pos:column="55"/></name></expr></argument>)<pos:position pos:line="60" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="57"/></return>			
                }<pos:position pos:line="61" pos:column="18"/></block></then></if>
                <comment type="block" pos:line="62" pos:column="17">/* Otherwise, skip token */</comment>
                <expr_stmt><expr><name pos:line="63" pos:column="17">tmp<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">++<pos:position pos:line="63" pos:column="22"/></operator></expr>;<pos:position pos:line="63" pos:column="23"/></expr_stmt>
                <expr_stmt><expr><name pos:line="64" pos:column="17">token<pos:position pos:line="64" pos:column="22"/></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <call><name pos:line="64" pos:column="25">ap_get_token<pos:position pos:line="64" pos:column="37"/></name><argument_list pos:line="64" pos:column="37">(<argument><expr><name><name pos:line="64" pos:column="38">r<pos:position pos:line="64" pos:column="39"/></name><operator pos:line="64" pos:column="39">-&gt;<pos:position pos:line="64" pos:column="44"/></operator><name pos:line="64" pos:column="41">pool<pos:position pos:line="64" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="47">&amp;<pos:position pos:line="64" pos:column="52"/></operator><name pos:line="64" pos:column="48">tmp<pos:position pos:line="64" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="53">0<pos:position pos:line="64" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="65" pos:column="14"/></block></while>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="68" pos:column="9">/* Even if we don't accept this request based on it not having
         * the Accept-Encoding, we need to note that we were looking
         * for this header and downstream proxies should be aware of that.
         */</comment>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">apr_table_setn<pos:position pos:line="72" pos:column="23"/></name><argument_list pos:line="72" pos:column="23">(<argument><expr><name><name pos:line="72" pos:column="24">r<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">-&gt;<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="27">headers_out<pos:position pos:line="72" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="40">"Vary"<pos:position pos:line="72" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="48">"Accept-Encoding"<pos:position pos:line="72" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="67"/></expr_stmt>

        <comment type="block" pos:line="74" pos:column="9">/* if they don't have the line, then they can't play */</comment>
        <expr_stmt><expr><name pos:line="75" pos:column="9">accepts<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">=<pos:position pos:line="75" pos:column="18"/></operator> <call><name pos:line="75" pos:column="19">apr_table_get<pos:position pos:line="75" pos:column="32"/></name><argument_list pos:line="75" pos:column="32">(<argument><expr><name><name pos:line="75" pos:column="33">r<pos:position pos:line="75" pos:column="34"/></name><operator pos:line="75" pos:column="34">-&gt;<pos:position pos:line="75" pos:column="39"/></operator><name pos:line="75" pos:column="36">headers_in<pos:position pos:line="75" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="48">"Accept-Encoding"<pos:position pos:line="75" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="67"/></expr_stmt>
        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">accepts<pos:position pos:line="76" pos:column="20"/></name> <operator pos:line="76" pos:column="21">==<pos:position pos:line="76" pos:column="23"/></operator> <name pos:line="76" pos:column="24">NULL<pos:position pos:line="76" pos:column="28"/></name></expr>)<pos:position pos:line="76" pos:column="29"/></condition><then pos:line="76" pos:column="29"> <block pos:line="76" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="77" pos:column="13">ap_remove_output_filter<pos:position pos:line="77" pos:column="36"/></name><argument_list pos:line="77" pos:column="36">(<argument><expr><name pos:line="77" pos:column="37">f<pos:position pos:line="77" pos:column="38"/></name></expr></argument>)<pos:position pos:line="77" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="40"/></expr_stmt>
            <return pos:line="78" pos:column="13">return <expr><call><name pos:line="78" pos:column="20">ap_pass_brigade<pos:position pos:line="78" pos:column="35"/></name><argument_list pos:line="78" pos:column="35">(<argument><expr><name><name pos:line="78" pos:column="36">f<pos:position pos:line="78" pos:column="37"/></name><operator pos:line="78" pos:column="37">-&gt;<pos:position pos:line="78" pos:column="42"/></operator><name pos:line="78" pos:column="39">next<pos:position pos:line="78" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="45">bb<pos:position pos:line="78" pos:column="47"/></name></expr></argument>)<pos:position pos:line="78" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="49"/></return>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="81" pos:column="9">token<pos:position pos:line="81" pos:column="14"/></name> <operator pos:line="81" pos:column="15">=<pos:position pos:line="81" pos:column="16"/></operator> <call><name pos:line="81" pos:column="17">ap_get_token<pos:position pos:line="81" pos:column="29"/></name><argument_list pos:line="81" pos:column="29">(<argument><expr><name><name pos:line="81" pos:column="30">r<pos:position pos:line="81" pos:column="31"/></name><operator pos:line="81" pos:column="31">-&gt;<pos:position pos:line="81" pos:column="36"/></operator><name pos:line="81" pos:column="33">pool<pos:position pos:line="81" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="39">&amp;<pos:position pos:line="81" pos:column="44"/></operator><name pos:line="81" pos:column="40">accepts<pos:position pos:line="81" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="49">0<pos:position pos:line="81" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="52"/></expr_stmt>
        <while pos:line="82" pos:column="9">while <condition pos:line="82" pos:column="15">(<expr><name pos:line="82" pos:column="16">token<pos:position pos:line="82" pos:column="21"/></name> <operator pos:line="82" pos:column="22">&amp;&amp;<pos:position pos:line="82" pos:column="32"/></operator> <name><name pos:line="82" pos:column="25">token<pos:position pos:line="82" pos:column="30"/></name><index pos:line="82" pos:column="30">[<expr><literal type="number" pos:line="82" pos:column="31">0<pos:position pos:line="82" pos:column="32"/></literal></expr>]<pos:position pos:line="82" pos:column="33"/></index></name> <operator pos:line="82" pos:column="34">&amp;&amp;<pos:position pos:line="82" pos:column="44"/></operator> <call><name pos:line="82" pos:column="37">strcasecmp<pos:position pos:line="82" pos:column="47"/></name><argument_list pos:line="82" pos:column="47">(<argument><expr><name pos:line="82" pos:column="48">token<pos:position pos:line="82" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="55">"gzip"<pos:position pos:line="82" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="63"/></condition> <block pos:line="82" pos:column="64">{
            <comment type="block" pos:line="83" pos:column="13">/* skip token */</comment>
            <expr_stmt><expr><name pos:line="84" pos:column="13">accepts<pos:position pos:line="84" pos:column="20"/></name><operator pos:line="84" pos:column="20">++<pos:position pos:line="84" pos:column="22"/></operator></expr>;<pos:position pos:line="84" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="85" pos:column="13">token<pos:position pos:line="85" pos:column="18"/></name> <operator pos:line="85" pos:column="19">=<pos:position pos:line="85" pos:column="20"/></operator> <call><name pos:line="85" pos:column="21">ap_get_token<pos:position pos:line="85" pos:column="33"/></name><argument_list pos:line="85" pos:column="33">(<argument><expr><name><name pos:line="85" pos:column="34">r<pos:position pos:line="85" pos:column="35"/></name><operator pos:line="85" pos:column="35">-&gt;<pos:position pos:line="85" pos:column="40"/></operator><name pos:line="85" pos:column="37">pool<pos:position pos:line="85" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="43">&amp;<pos:position pos:line="85" pos:column="48"/></operator><name pos:line="85" pos:column="44">accepts<pos:position pos:line="85" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="53">0<pos:position pos:line="85" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="86" pos:column="10"/></block></while>

        <comment type="block" pos:line="88" pos:column="9">/* No acceptable token found. */</comment>
        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">token<pos:position pos:line="89" pos:column="18"/></name> <operator pos:line="89" pos:column="19">==<pos:position pos:line="89" pos:column="21"/></operator> <name pos:line="89" pos:column="22">NULL<pos:position pos:line="89" pos:column="26"/></name> <operator pos:line="89" pos:column="27">||<pos:position pos:line="89" pos:column="29"/></operator> <name><name pos:line="89" pos:column="30">token<pos:position pos:line="89" pos:column="35"/></name><index pos:line="89" pos:column="35">[<expr><literal type="number" pos:line="89" pos:column="36">0<pos:position pos:line="89" pos:column="37"/></literal></expr>]<pos:position pos:line="89" pos:column="38"/></index></name> <operator pos:line="89" pos:column="39">==<pos:position pos:line="89" pos:column="41"/></operator> <literal type="char" pos:line="89" pos:column="42">'\0'<pos:position pos:line="89" pos:column="46"/></literal></expr>)<pos:position pos:line="89" pos:column="47"/></condition><then pos:line="89" pos:column="47"> <block pos:line="89" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">ap_remove_output_filter<pos:position pos:line="90" pos:column="36"/></name><argument_list pos:line="90" pos:column="36">(<argument><expr><name pos:line="90" pos:column="37">f<pos:position pos:line="90" pos:column="38"/></name></expr></argument>)<pos:position pos:line="90" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="40"/></expr_stmt>
            <return pos:line="91" pos:column="13">return <expr><call><name pos:line="91" pos:column="20">ap_pass_brigade<pos:position pos:line="91" pos:column="35"/></name><argument_list pos:line="91" pos:column="35">(<argument><expr><name><name pos:line="91" pos:column="36">f<pos:position pos:line="91" pos:column="37"/></name><operator pos:line="91" pos:column="37">-&gt;<pos:position pos:line="91" pos:column="42"/></operator><name pos:line="91" pos:column="39">next<pos:position pos:line="91" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="45">bb<pos:position pos:line="91" pos:column="47"/></name></expr></argument>)<pos:position pos:line="91" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="49"/></return>
        }<pos:position pos:line="92" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="94" pos:column="9">/* We're cool with filtering this. */</comment>
        <expr_stmt><expr><name pos:line="95" pos:column="9">ctx<pos:position pos:line="95" pos:column="12"/></name> <operator pos:line="95" pos:column="13">=<pos:position pos:line="95" pos:column="14"/></operator> <name><name pos:line="95" pos:column="15">f<pos:position pos:line="95" pos:column="16"/></name><operator pos:line="95" pos:column="16">-&gt;<pos:position pos:line="95" pos:column="21"/></operator><name pos:line="95" pos:column="18">ctx<pos:position pos:line="95" pos:column="21"/></name></name> <operator pos:line="95" pos:column="22">=<pos:position pos:line="95" pos:column="23"/></operator> <call><name pos:line="95" pos:column="24">apr_pcalloc<pos:position pos:line="95" pos:column="35"/></name><argument_list pos:line="95" pos:column="35">(<argument><expr><name><name pos:line="95" pos:column="36">r<pos:position pos:line="95" pos:column="37"/></name><operator pos:line="95" pos:column="37">-&gt;<pos:position pos:line="95" pos:column="42"/></operator><name pos:line="95" pos:column="39">pool<pos:position pos:line="95" pos:column="43"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="95" pos:column="45">sizeof<argument_list pos:line="95" pos:column="51">(<argument><expr><operator pos:line="95" pos:column="52">*<pos:position pos:line="95" pos:column="53"/></operator><name pos:line="95" pos:column="53">ctx<pos:position pos:line="95" pos:column="56"/></name></expr></argument>)<pos:position pos:line="95" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="95" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="96" pos:column="9">ctx<pos:position pos:line="96" pos:column="12"/></name><operator pos:line="96" pos:column="12">-&gt;<pos:position pos:line="96" pos:column="17"/></operator><name pos:line="96" pos:column="14">bb<pos:position pos:line="96" pos:column="16"/></name></name> <operator pos:line="96" pos:column="17">=<pos:position pos:line="96" pos:column="18"/></operator> <call><name pos:line="96" pos:column="19">apr_brigade_create<pos:position pos:line="96" pos:column="37"/></name><argument_list pos:line="96" pos:column="37">(<argument><expr><name><name pos:line="96" pos:column="38">r<pos:position pos:line="96" pos:column="39"/></name><operator pos:line="96" pos:column="39">-&gt;<pos:position pos:line="96" pos:column="44"/></operator><name pos:line="96" pos:column="41">pool<pos:position pos:line="96" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="47">f<pos:position pos:line="96" pos:column="48"/></name><operator pos:line="96" pos:column="48">-&gt;<pos:position pos:line="96" pos:column="53"/></operator><name pos:line="96" pos:column="50">c<pos:position pos:line="96" pos:column="51"/></name><operator pos:line="96" pos:column="51">-&gt;<pos:position pos:line="96" pos:column="56"/></operator><name pos:line="96" pos:column="53">bucket_alloc<pos:position pos:line="96" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="97" pos:column="9">ctx<pos:position pos:line="97" pos:column="12"/></name><operator pos:line="97" pos:column="12">-&gt;<pos:position pos:line="97" pos:column="17"/></operator><name pos:line="97" pos:column="14">buffer<pos:position pos:line="97" pos:column="20"/></name></name> <operator pos:line="97" pos:column="21">=<pos:position pos:line="97" pos:column="22"/></operator> <call><name pos:line="97" pos:column="23">apr_palloc<pos:position pos:line="97" pos:column="33"/></name><argument_list pos:line="97" pos:column="33">(<argument><expr><name><name pos:line="97" pos:column="34">r<pos:position pos:line="97" pos:column="35"/></name><operator pos:line="97" pos:column="35">-&gt;<pos:position pos:line="97" pos:column="40"/></operator><name pos:line="97" pos:column="37">pool<pos:position pos:line="97" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="43">c<pos:position pos:line="97" pos:column="44"/></name><operator pos:line="97" pos:column="44">-&gt;<pos:position pos:line="97" pos:column="49"/></operator><name pos:line="97" pos:column="46">bufferSize<pos:position pos:line="97" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="58"/></expr_stmt>

        <expr_stmt><expr><name pos:line="99" pos:column="9">zRC<pos:position pos:line="99" pos:column="12"/></name> <operator pos:line="99" pos:column="13">=<pos:position pos:line="99" pos:column="14"/></operator> <call><name pos:line="99" pos:column="15">deflateInit2<pos:position pos:line="99" pos:column="27"/></name><argument_list pos:line="99" pos:column="27">(<argument><expr><operator pos:line="99" pos:column="28">&amp;<pos:position pos:line="99" pos:column="33"/></operator><name><name pos:line="99" pos:column="29">ctx<pos:position pos:line="99" pos:column="32"/></name><operator pos:line="99" pos:column="32">-&gt;<pos:position pos:line="99" pos:column="37"/></operator><name pos:line="99" pos:column="34">stream<pos:position pos:line="99" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="42">Z_BEST_SPEED<pos:position pos:line="99" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="56">Z_DEFLATED<pos:position pos:line="99" pos:column="66"/></name></expr></argument>,
                           <argument><expr><name><name pos:line="100" pos:column="28">c<pos:position pos:line="100" pos:column="29"/></name><operator pos:line="100" pos:column="29">-&gt;<pos:position pos:line="100" pos:column="34"/></operator><name pos:line="100" pos:column="31">windowSize<pos:position pos:line="100" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="43">c<pos:position pos:line="100" pos:column="44"/></name><operator pos:line="100" pos:column="44">-&gt;<pos:position pos:line="100" pos:column="49"/></operator><name pos:line="100" pos:column="46">memlevel<pos:position pos:line="100" pos:column="54"/></name></name></expr></argument>,
                           <argument><expr><name pos:line="101" pos:column="28">Z_DEFAULT_STRATEGY<pos:position pos:line="101" pos:column="46"/></name></expr></argument>)<pos:position pos:line="101" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="48"/></expr_stmt>

        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name pos:line="103" pos:column="13">zRC<pos:position pos:line="103" pos:column="16"/></name> <operator pos:line="103" pos:column="17">!=<pos:position pos:line="103" pos:column="19"/></operator> <name pos:line="103" pos:column="20">Z_OK<pos:position pos:line="103" pos:column="24"/></name></expr>)<pos:position pos:line="103" pos:column="25"/></condition><then pos:line="103" pos:column="25"> <block pos:line="103" pos:column="26">{
            <expr_stmt><expr><name><name pos:line="104" pos:column="13">f<pos:position pos:line="104" pos:column="14"/></name><operator pos:line="104" pos:column="14">-&gt;<pos:position pos:line="104" pos:column="19"/></operator><name pos:line="104" pos:column="16">ctx<pos:position pos:line="104" pos:column="19"/></name></name> <operator pos:line="104" pos:column="20">=<pos:position pos:line="104" pos:column="21"/></operator> <name pos:line="104" pos:column="22">NULL<pos:position pos:line="104" pos:column="26"/></name></expr>;<pos:position pos:line="104" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="105" pos:column="13">ap_log_rerror<pos:position pos:line="105" pos:column="26"/></name><argument_list pos:line="105" pos:column="26">(<argument><expr><name pos:line="105" pos:column="27">APLOG_MARK<pos:position pos:line="105" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="39">APLOG_ERR<pos:position pos:line="105" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="105" pos:column="50">0<pos:position pos:line="105" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="53">r<pos:position pos:line="105" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="106" pos:column="27">"unable to init Zlib: "<pos:position pos:line="106" pos:column="50"/></literal>
                          <literal type="string" pos:line="107" pos:column="27">"deflateInit2 returned %d: URL %s"<pos:position pos:line="107" pos:column="61"/></literal></expr></argument>,
                          <argument><expr><name pos:line="108" pos:column="27">zRC<pos:position pos:line="108" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="32">r<pos:position pos:line="108" pos:column="33"/></name><operator pos:line="108" pos:column="33">-&gt;<pos:position pos:line="108" pos:column="38"/></operator><name pos:line="108" pos:column="35">uri<pos:position pos:line="108" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="40"/></expr_stmt>
            <return pos:line="109" pos:column="13">return <expr><call><name pos:line="109" pos:column="20">ap_pass_brigade<pos:position pos:line="109" pos:column="35"/></name><argument_list pos:line="109" pos:column="35">(<argument><expr><name><name pos:line="109" pos:column="36">f<pos:position pos:line="109" pos:column="37"/></name><operator pos:line="109" pos:column="37">-&gt;<pos:position pos:line="109" pos:column="42"/></operator><name pos:line="109" pos:column="39">next<pos:position pos:line="109" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="45">bb<pos:position pos:line="109" pos:column="47"/></name></expr></argument>)<pos:position pos:line="109" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="49"/></return>
        }<pos:position pos:line="110" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="112" pos:column="9">/* RFC 1952 Section 2.3 dictates the gzip header:
         *
         * +---+---+---+---+---+---+---+---+---+---+
         * |ID1|ID2|CM |FLG|     MTIME     |XFL|OS |
         * +---+---+---+---+---+---+---+---+---+---+
         *
         * If we wish to populate in MTIME (as hinted in RFC 1952), do:
         * putLong(date_array, apr_time_now() / APR_USEC_PER_SEC);
         * where date_array is a char[4] and then print date_array in the
         * MTIME position.  WARNING: ENDIANNESS ISSUE HERE.
         */</comment>
        <expr_stmt><expr><name pos:line="123" pos:column="9">buf<pos:position pos:line="123" pos:column="12"/></name> <operator pos:line="123" pos:column="13">=<pos:position pos:line="123" pos:column="14"/></operator> <call><name pos:line="123" pos:column="15">apr_psprintf<pos:position pos:line="123" pos:column="27"/></name><argument_list pos:line="123" pos:column="27">(<argument><expr><name><name pos:line="123" pos:column="28">r<pos:position pos:line="123" pos:column="29"/></name><operator pos:line="123" pos:column="29">-&gt;<pos:position pos:line="123" pos:column="34"/></operator><name pos:line="123" pos:column="31">pool<pos:position pos:line="123" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="37">"%c%c%c%c%c%c%c%c%c%c"<pos:position pos:line="123" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="61">deflate_magic<pos:position pos:line="123" pos:column="74"/></name><index pos:line="123" pos:column="74">[<expr><literal type="number" pos:line="123" pos:column="75">0<pos:position pos:line="123" pos:column="76"/></literal></expr>]<pos:position pos:line="123" pos:column="77"/></index></name></expr></argument>,
                           <argument><expr><name><name pos:line="124" pos:column="28">deflate_magic<pos:position pos:line="124" pos:column="41"/></name><index pos:line="124" pos:column="41">[<expr><literal type="number" pos:line="124" pos:column="42">1<pos:position pos:line="124" pos:column="43"/></literal></expr>]<pos:position pos:line="124" pos:column="44"/></index></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="46">Z_DEFLATED<pos:position pos:line="124" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="58">0<pos:position pos:line="124" pos:column="59"/></literal></expr></argument> <comment type="block" pos:line="124" pos:column="60">/* flags */</comment>,
                           <argument><expr><literal type="number" pos:line="125" pos:column="28">0<pos:position pos:line="125" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="31">0<pos:position pos:line="125" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="34">0<pos:position pos:line="125" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="37">0<pos:position pos:line="125" pos:column="38"/></literal></expr></argument> <comment type="block" pos:line="125" pos:column="39">/* 4 chars for mtime */</comment>,
                           <argument><expr><literal type="number" pos:line="126" pos:column="28">0<pos:position pos:line="126" pos:column="29"/></literal></expr></argument> <comment type="block" pos:line="126" pos:column="30">/* xflags */</comment>, <argument><expr><name pos:line="126" pos:column="44">OS_CODE<pos:position pos:line="126" pos:column="51"/></name></expr></argument>)<pos:position pos:line="126" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name pos:line="127" pos:column="9">e<pos:position pos:line="127" pos:column="10"/></name> <operator pos:line="127" pos:column="11">=<pos:position pos:line="127" pos:column="12"/></operator> <call><name pos:line="127" pos:column="13">apr_bucket_pool_create<pos:position pos:line="127" pos:column="35"/></name><argument_list pos:line="127" pos:column="35">(<argument><expr><name pos:line="127" pos:column="36">buf<pos:position pos:line="127" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="41">10<pos:position pos:line="127" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="45">r<pos:position pos:line="127" pos:column="46"/></name><operator pos:line="127" pos:column="46">-&gt;<pos:position pos:line="127" pos:column="51"/></operator><name pos:line="127" pos:column="48">pool<pos:position pos:line="127" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="54">f<pos:position pos:line="127" pos:column="55"/></name><operator pos:line="127" pos:column="55">-&gt;<pos:position pos:line="127" pos:column="60"/></operator><name pos:line="127" pos:column="57">c<pos:position pos:line="127" pos:column="58"/></name><operator pos:line="127" pos:column="58">-&gt;<pos:position pos:line="127" pos:column="63"/></operator><name pos:line="127" pos:column="60">bucket_alloc<pos:position pos:line="127" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="128" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="128" pos:column="32"/></name><argument_list pos:line="128" pos:column="32">(<argument><expr><name><name pos:line="128" pos:column="33">ctx<pos:position pos:line="128" pos:column="36"/></name><operator pos:line="128" pos:column="36">-&gt;<pos:position pos:line="128" pos:column="41"/></operator><name pos:line="128" pos:column="38">bb<pos:position pos:line="128" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="42">e<pos:position pos:line="128" pos:column="43"/></name></expr></argument>)<pos:position pos:line="128" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="45"/></expr_stmt>

        <comment type="block" pos:line="130" pos:column="9">/* If the entire Content-Encoding is "identity", we can replace it. */</comment>
        <if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><operator pos:line="131" pos:column="13">!<pos:position pos:line="131" pos:column="14"/></operator><name pos:line="131" pos:column="14">encoding<pos:position pos:line="131" pos:column="22"/></name> <operator pos:line="131" pos:column="23">||<pos:position pos:line="131" pos:column="25"/></operator> <operator pos:line="131" pos:column="26">!<pos:position pos:line="131" pos:column="27"/></operator><call><name pos:line="131" pos:column="27">strcasecmp<pos:position pos:line="131" pos:column="37"/></name><argument_list pos:line="131" pos:column="37">(<argument><expr><name pos:line="131" pos:column="38">encoding<pos:position pos:line="131" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="48">"identity"<pos:position pos:line="131" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="131" pos:column="60"/></condition><then pos:line="131" pos:column="60"> <block pos:line="131" pos:column="61">{
            <expr_stmt><expr><call><name pos:line="132" pos:column="13">apr_table_setn<pos:position pos:line="132" pos:column="27"/></name><argument_list pos:line="132" pos:column="27">(<argument><expr><name><name pos:line="132" pos:column="28">r<pos:position pos:line="132" pos:column="29"/></name><operator pos:line="132" pos:column="29">-&gt;<pos:position pos:line="132" pos:column="34"/></operator><name pos:line="132" pos:column="31">headers_out<pos:position pos:line="132" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="44">"Content-Encoding"<pos:position pos:line="132" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="64">"gzip"<pos:position pos:line="132" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="133" pos:column="10"/></block></then>
        <else pos:line="134" pos:column="9">else <block pos:line="134" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="135" pos:column="13">apr_table_mergen<pos:position pos:line="135" pos:column="29"/></name><argument_list pos:line="135" pos:column="29">(<argument><expr><name><name pos:line="135" pos:column="30">r<pos:position pos:line="135" pos:column="31"/></name><operator pos:line="135" pos:column="31">-&gt;<pos:position pos:line="135" pos:column="36"/></operator><name pos:line="135" pos:column="33">headers_out<pos:position pos:line="135" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="46">"Content-Encoding"<pos:position pos:line="135" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="66">"gzip"<pos:position pos:line="135" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="136" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="137" pos:column="9">apr_table_unset<pos:position pos:line="137" pos:column="24"/></name><argument_list pos:line="137" pos:column="24">(<argument><expr><name><name pos:line="137" pos:column="25">r<pos:position pos:line="137" pos:column="26"/></name><operator pos:line="137" pos:column="26">-&gt;<pos:position pos:line="137" pos:column="31"/></operator><name pos:line="137" pos:column="28">headers_out<pos:position pos:line="137" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="41">"Content-Length"<pos:position pos:line="137" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="59"/></expr_stmt>

        <comment type="block" pos:line="139" pos:column="9">/* initialize deflate output buffer */</comment>
        <expr_stmt><expr><name><name pos:line="140" pos:column="9">ctx<pos:position pos:line="140" pos:column="12"/></name><operator pos:line="140" pos:column="12">-&gt;<pos:position pos:line="140" pos:column="17"/></operator><name pos:line="140" pos:column="14">stream<pos:position pos:line="140" pos:column="20"/></name><operator pos:line="140" pos:column="20">.<pos:position pos:line="140" pos:column="21"/></operator><name pos:line="140" pos:column="21">next_out<pos:position pos:line="140" pos:column="29"/></name></name> <operator pos:line="140" pos:column="30">=<pos:position pos:line="140" pos:column="31"/></operator> <name><name pos:line="140" pos:column="32">ctx<pos:position pos:line="140" pos:column="35"/></name><operator pos:line="140" pos:column="35">-&gt;<pos:position pos:line="140" pos:column="40"/></operator><name pos:line="140" pos:column="37">buffer<pos:position pos:line="140" pos:column="43"/></name></name></expr>;<pos:position pos:line="140" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="141" pos:column="9">ctx<pos:position pos:line="141" pos:column="12"/></name><operator pos:line="141" pos:column="12">-&gt;<pos:position pos:line="141" pos:column="17"/></operator><name pos:line="141" pos:column="14">stream<pos:position pos:line="141" pos:column="20"/></name><operator pos:line="141" pos:column="20">.<pos:position pos:line="141" pos:column="21"/></operator><name pos:line="141" pos:column="21">avail_out<pos:position pos:line="141" pos:column="30"/></name></name> <operator pos:line="141" pos:column="31">=<pos:position pos:line="141" pos:column="32"/></operator> <name><name pos:line="141" pos:column="33">c<pos:position pos:line="141" pos:column="34"/></name><operator pos:line="141" pos:column="34">-&gt;<pos:position pos:line="141" pos:column="39"/></operator><name pos:line="141" pos:column="36">bufferSize<pos:position pos:line="141" pos:column="46"/></name></name></expr>;<pos:position pos:line="141" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="142" pos:column="6"/></block></then></if>
    
    <macro><name pos:line="144" pos:column="5">APR_BRIGADE_FOREACH<pos:position pos:line="144" pos:column="24"/></name><argument_list pos:line="144" pos:column="24">(<argument pos:line="144" pos:column="25">e<pos:position pos:line="144" pos:column="26"/></argument>, <argument pos:line="144" pos:column="28">bb<pos:position pos:line="144" pos:column="30"/></argument>)<pos:position pos:line="144" pos:column="31"/></argument_list></macro> <block pos:line="144" pos:column="32">{
        <decl_stmt><decl><type><specifier pos:line="145" pos:column="9">const<pos:position pos:line="145" pos:column="14"/></specifier> <name pos:line="145" pos:column="15">char<pos:position pos:line="145" pos:column="19"/></name> <modifier pos:line="145" pos:column="20">*<pos:position pos:line="145" pos:column="21"/></modifier></type><name pos:line="145" pos:column="21">data<pos:position pos:line="145" pos:column="25"/></name></decl>;<pos:position pos:line="145" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="146" pos:column="9">apr_bucket<pos:position pos:line="146" pos:column="19"/></name> <modifier pos:line="146" pos:column="20">*<pos:position pos:line="146" pos:column="21"/></modifier></type><name pos:line="146" pos:column="21">b<pos:position pos:line="146" pos:column="22"/></name></decl>;<pos:position pos:line="146" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="147" pos:column="9">apr_size_t<pos:position pos:line="147" pos:column="19"/></name></type> <name pos:line="147" pos:column="20">len<pos:position pos:line="147" pos:column="23"/></name></decl>;<pos:position pos:line="147" pos:column="24"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="149" pos:column="9">int<pos:position pos:line="149" pos:column="12"/></name></type> <name pos:line="149" pos:column="13">done<pos:position pos:line="149" pos:column="17"/></name> <init pos:line="149" pos:column="18">= <expr><literal type="number" pos:line="149" pos:column="20">0<pos:position pos:line="149" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="149" pos:column="22"/></decl_stmt>

        <if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><call><name pos:line="151" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="151" pos:column="30"/></name><argument_list pos:line="151" pos:column="30">(<argument><expr><name pos:line="151" pos:column="31">e<pos:position pos:line="151" pos:column="32"/></name></expr></argument>)<pos:position pos:line="151" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="151" pos:column="34"/></condition><then pos:line="151" pos:column="34"> <block pos:line="151" pos:column="35">{
            <decl_stmt><decl><type><name pos:line="152" pos:column="13">char<pos:position pos:line="152" pos:column="17"/></name> <modifier pos:line="152" pos:column="18">*<pos:position pos:line="152" pos:column="19"/></modifier></type><name pos:line="152" pos:column="19">buf<pos:position pos:line="152" pos:column="22"/></name></decl>;<pos:position pos:line="152" pos:column="23"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="153" pos:column="13">unsigned<pos:position pos:line="153" pos:column="21"/></name> <name pos:line="153" pos:column="22">int<pos:position pos:line="153" pos:column="25"/></name></type> <name pos:line="153" pos:column="26">deflate_len<pos:position pos:line="153" pos:column="37"/></name></decl>;<pos:position pos:line="153" pos:column="38"/></decl_stmt>

            <expr_stmt><expr><name><name pos:line="155" pos:column="13">ctx<pos:position pos:line="155" pos:column="16"/></name><operator pos:line="155" pos:column="16">-&gt;<pos:position pos:line="155" pos:column="21"/></operator><name pos:line="155" pos:column="18">stream<pos:position pos:line="155" pos:column="24"/></name><operator pos:line="155" pos:column="24">.<pos:position pos:line="155" pos:column="25"/></operator><name pos:line="155" pos:column="25">avail_in<pos:position pos:line="155" pos:column="33"/></name></name> <operator pos:line="155" pos:column="34">=<pos:position pos:line="155" pos:column="35"/></operator> <literal type="number" pos:line="155" pos:column="36">0<pos:position pos:line="155" pos:column="37"/></literal></expr>;<pos:position pos:line="155" pos:column="38"/></expr_stmt> <comment type="block" pos:line="155" pos:column="39">/* should be zero already anyway */</comment>
            <for pos:line="156" pos:column="13">for <control pos:line="156" pos:column="17">(<init pos:line="156" pos:column="18">;<pos:position pos:line="156" pos:column="19"/></init><condition pos:line="156" pos:column="19">;<pos:position pos:line="156" pos:column="20"/></condition><incr/>)<pos:position pos:line="156" pos:column="21"/></control> <block pos:line="156" pos:column="22">{
                <expr_stmt><expr><name pos:line="157" pos:column="17">deflate_len<pos:position pos:line="157" pos:column="28"/></name> <operator pos:line="157" pos:column="29">=<pos:position pos:line="157" pos:column="30"/></operator> <name><name pos:line="157" pos:column="31">c<pos:position pos:line="157" pos:column="32"/></name><operator pos:line="157" pos:column="32">-&gt;<pos:position pos:line="157" pos:column="37"/></operator><name pos:line="157" pos:column="34">bufferSize<pos:position pos:line="157" pos:column="44"/></name></name> <operator pos:line="157" pos:column="45">-<pos:position pos:line="157" pos:column="46"/></operator> <name><name pos:line="157" pos:column="47">ctx<pos:position pos:line="157" pos:column="50"/></name><operator pos:line="157" pos:column="50">-&gt;<pos:position pos:line="157" pos:column="55"/></operator><name pos:line="157" pos:column="52">stream<pos:position pos:line="157" pos:column="58"/></name><operator pos:line="157" pos:column="58">.<pos:position pos:line="157" pos:column="59"/></operator><name pos:line="157" pos:column="59">avail_out<pos:position pos:line="157" pos:column="68"/></name></name></expr>;<pos:position pos:line="157" pos:column="69"/></expr_stmt>

                <if pos:line="159" pos:column="17">if <condition pos:line="159" pos:column="20">(<expr><name pos:line="159" pos:column="21">deflate_len<pos:position pos:line="159" pos:column="32"/></name> <operator pos:line="159" pos:column="33">!=<pos:position pos:line="159" pos:column="35"/></operator> <literal type="number" pos:line="159" pos:column="36">0<pos:position pos:line="159" pos:column="37"/></literal></expr>)<pos:position pos:line="159" pos:column="38"/></condition><then pos:line="159" pos:column="38"> <block pos:line="159" pos:column="39">{
                    <expr_stmt><expr><name pos:line="160" pos:column="21">b<pos:position pos:line="160" pos:column="22"/></name> <operator pos:line="160" pos:column="23">=<pos:position pos:line="160" pos:column="24"/></operator> <call><name pos:line="160" pos:column="25">apr_bucket_heap_create<pos:position pos:line="160" pos:column="47"/></name><argument_list pos:line="160" pos:column="47">(<argument><expr><operator pos:line="160" pos:column="48">(<pos:position pos:line="160" pos:column="49"/></operator><name pos:line="160" pos:column="49">char<pos:position pos:line="160" pos:column="53"/></name> <operator pos:line="160" pos:column="54">*<pos:position pos:line="160" pos:column="55"/></operator><operator pos:line="160" pos:column="55">)<pos:position pos:line="160" pos:column="56"/></operator><name><name pos:line="160" pos:column="56">ctx<pos:position pos:line="160" pos:column="59"/></name><operator pos:line="160" pos:column="59">-&gt;<pos:position pos:line="160" pos:column="64"/></operator><name pos:line="160" pos:column="61">buffer<pos:position pos:line="160" pos:column="67"/></name></name></expr></argument>,
                                               <argument><expr><name pos:line="161" pos:column="48">deflate_len<pos:position pos:line="161" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="61">NULL<pos:position pos:line="161" pos:column="65"/></name></expr></argument>,
                                               <argument><expr><name><name pos:line="162" pos:column="48">f<pos:position pos:line="162" pos:column="49"/></name><operator pos:line="162" pos:column="49">-&gt;<pos:position pos:line="162" pos:column="54"/></operator><name pos:line="162" pos:column="51">c<pos:position pos:line="162" pos:column="52"/></name><operator pos:line="162" pos:column="52">-&gt;<pos:position pos:line="162" pos:column="57"/></operator><name pos:line="162" pos:column="54">bucket_alloc<pos:position pos:line="162" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="162" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="68"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="163" pos:column="21">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="163" pos:column="44"/></name><argument_list pos:line="163" pos:column="44">(<argument><expr><name><name pos:line="163" pos:column="45">ctx<pos:position pos:line="163" pos:column="48"/></name><operator pos:line="163" pos:column="48">-&gt;<pos:position pos:line="163" pos:column="53"/></operator><name pos:line="163" pos:column="50">bb<pos:position pos:line="163" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="54">b<pos:position pos:line="163" pos:column="55"/></name></expr></argument>)<pos:position pos:line="163" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="57"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="164" pos:column="21">ctx<pos:position pos:line="164" pos:column="24"/></name><operator pos:line="164" pos:column="24">-&gt;<pos:position pos:line="164" pos:column="29"/></operator><name pos:line="164" pos:column="26">stream<pos:position pos:line="164" pos:column="32"/></name><operator pos:line="164" pos:column="32">.<pos:position pos:line="164" pos:column="33"/></operator><name pos:line="164" pos:column="33">next_out<pos:position pos:line="164" pos:column="41"/></name></name> <operator pos:line="164" pos:column="42">=<pos:position pos:line="164" pos:column="43"/></operator> <name><name pos:line="164" pos:column="44">ctx<pos:position pos:line="164" pos:column="47"/></name><operator pos:line="164" pos:column="47">-&gt;<pos:position pos:line="164" pos:column="52"/></operator><name pos:line="164" pos:column="49">buffer<pos:position pos:line="164" pos:column="55"/></name></name></expr>;<pos:position pos:line="164" pos:column="56"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="165" pos:column="21">ctx<pos:position pos:line="165" pos:column="24"/></name><operator pos:line="165" pos:column="24">-&gt;<pos:position pos:line="165" pos:column="29"/></operator><name pos:line="165" pos:column="26">stream<pos:position pos:line="165" pos:column="32"/></name><operator pos:line="165" pos:column="32">.<pos:position pos:line="165" pos:column="33"/></operator><name pos:line="165" pos:column="33">avail_out<pos:position pos:line="165" pos:column="42"/></name></name> <operator pos:line="165" pos:column="43">=<pos:position pos:line="165" pos:column="44"/></operator> <name><name pos:line="165" pos:column="45">c<pos:position pos:line="165" pos:column="46"/></name><operator pos:line="165" pos:column="46">-&gt;<pos:position pos:line="165" pos:column="51"/></operator><name pos:line="165" pos:column="48">bufferSize<pos:position pos:line="165" pos:column="58"/></name></name></expr>;<pos:position pos:line="165" pos:column="59"/></expr_stmt>
                }<pos:position pos:line="166" pos:column="18"/></block></then></if>

                <if pos:line="168" pos:column="17">if <condition pos:line="168" pos:column="20">(<expr><name pos:line="168" pos:column="21">done<pos:position pos:line="168" pos:column="25"/></name></expr>)<pos:position pos:line="168" pos:column="26"/></condition><then pos:line="168" pos:column="26"> <block pos:line="168" pos:column="27">{
                    <break pos:line="169" pos:column="21">break;<pos:position pos:line="169" pos:column="27"/></break>
                }<pos:position pos:line="170" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="172" pos:column="17">zRC<pos:position pos:line="172" pos:column="20"/></name> <operator pos:line="172" pos:column="21">=<pos:position pos:line="172" pos:column="22"/></operator> <call><name pos:line="172" pos:column="23">deflate<pos:position pos:line="172" pos:column="30"/></name><argument_list pos:line="172" pos:column="30">(<argument><expr><operator pos:line="172" pos:column="31">&amp;<pos:position pos:line="172" pos:column="36"/></operator><name><name pos:line="172" pos:column="32">ctx<pos:position pos:line="172" pos:column="35"/></name><operator pos:line="172" pos:column="35">-&gt;<pos:position pos:line="172" pos:column="40"/></operator><name pos:line="172" pos:column="37">stream<pos:position pos:line="172" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="45">Z_FINISH<pos:position pos:line="172" pos:column="53"/></name></expr></argument>)<pos:position pos:line="172" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="55"/></expr_stmt>

                <if pos:line="174" pos:column="17">if <condition pos:line="174" pos:column="20">(<expr><name pos:line="174" pos:column="21">deflate_len<pos:position pos:line="174" pos:column="32"/></name> <operator pos:line="174" pos:column="33">==<pos:position pos:line="174" pos:column="35"/></operator> <literal type="number" pos:line="174" pos:column="36">0<pos:position pos:line="174" pos:column="37"/></literal> <operator pos:line="174" pos:column="38">&amp;&amp;<pos:position pos:line="174" pos:column="48"/></operator> <name pos:line="174" pos:column="41">zRC<pos:position pos:line="174" pos:column="44"/></name> <operator pos:line="174" pos:column="45">==<pos:position pos:line="174" pos:column="47"/></operator> <name pos:line="174" pos:column="48">Z_BUF_ERROR<pos:position pos:line="174" pos:column="59"/></name></expr>)<pos:position pos:line="174" pos:column="60"/></condition><then pos:line="174" pos:column="60"> <block pos:line="174" pos:column="61">{
                    <expr_stmt><expr><name pos:line="175" pos:column="21">zRC<pos:position pos:line="175" pos:column="24"/></name> <operator pos:line="175" pos:column="25">=<pos:position pos:line="175" pos:column="26"/></operator> <name pos:line="175" pos:column="27">Z_OK<pos:position pos:line="175" pos:column="31"/></name></expr>;<pos:position pos:line="175" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="176" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="178" pos:column="17">done<pos:position pos:line="178" pos:column="21"/></name> <operator pos:line="178" pos:column="22">=<pos:position pos:line="178" pos:column="23"/></operator> <operator pos:line="178" pos:column="24">(<pos:position pos:line="178" pos:column="25"/></operator><name><name pos:line="178" pos:column="25">ctx<pos:position pos:line="178" pos:column="28"/></name><operator pos:line="178" pos:column="28">-&gt;<pos:position pos:line="178" pos:column="33"/></operator><name pos:line="178" pos:column="30">stream<pos:position pos:line="178" pos:column="36"/></name><operator pos:line="178" pos:column="36">.<pos:position pos:line="178" pos:column="37"/></operator><name pos:line="178" pos:column="37">avail_out<pos:position pos:line="178" pos:column="46"/></name></name> <operator pos:line="178" pos:column="47">!=<pos:position pos:line="178" pos:column="49"/></operator> <literal type="number" pos:line="178" pos:column="50">0<pos:position pos:line="178" pos:column="51"/></literal> <operator pos:line="178" pos:column="52">||<pos:position pos:line="178" pos:column="54"/></operator> <name pos:line="178" pos:column="55">zRC<pos:position pos:line="178" pos:column="58"/></name> <operator pos:line="178" pos:column="59">==<pos:position pos:line="178" pos:column="61"/></operator> <name pos:line="178" pos:column="62">Z_STREAM_END<pos:position pos:line="178" pos:column="74"/></name><operator pos:line="178" pos:column="74">)<pos:position pos:line="178" pos:column="75"/></operator></expr>;<pos:position pos:line="178" pos:column="76"/></expr_stmt>

                <if pos:line="180" pos:column="17">if <condition pos:line="180" pos:column="20">(<expr><name pos:line="180" pos:column="21">zRC<pos:position pos:line="180" pos:column="24"/></name> <operator pos:line="180" pos:column="25">!=<pos:position pos:line="180" pos:column="27"/></operator> <name pos:line="180" pos:column="28">Z_OK<pos:position pos:line="180" pos:column="32"/></name> <operator pos:line="180" pos:column="33">&amp;&amp;<pos:position pos:line="180" pos:column="43"/></operator> <name pos:line="180" pos:column="36">zRC<pos:position pos:line="180" pos:column="39"/></name> <operator pos:line="180" pos:column="40">!=<pos:position pos:line="180" pos:column="42"/></operator> <name pos:line="180" pos:column="43">Z_STREAM_END<pos:position pos:line="180" pos:column="55"/></name></expr>)<pos:position pos:line="180" pos:column="56"/></condition><then pos:line="180" pos:column="56"> <block pos:line="180" pos:column="57">{
                    <break pos:line="181" pos:column="21">break;<pos:position pos:line="181" pos:column="27"/></break>
                }<pos:position pos:line="182" pos:column="18"/></block></then></if>
            }<pos:position pos:line="183" pos:column="14"/></block></for>

            <expr_stmt><expr><name pos:line="185" pos:column="13">buf<pos:position pos:line="185" pos:column="16"/></name> <operator pos:line="185" pos:column="17">=<pos:position pos:line="185" pos:column="18"/></operator> <call><name pos:line="185" pos:column="19">apr_palloc<pos:position pos:line="185" pos:column="29"/></name><argument_list pos:line="185" pos:column="29">(<argument><expr><name><name pos:line="185" pos:column="30">r<pos:position pos:line="185" pos:column="31"/></name><operator pos:line="185" pos:column="31">-&gt;<pos:position pos:line="185" pos:column="36"/></operator><name pos:line="185" pos:column="33">pool<pos:position pos:line="185" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="185" pos:column="39">8<pos:position pos:line="185" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="186" pos:column="13">putLong<pos:position pos:line="186" pos:column="20"/></name><argument_list pos:line="186" pos:column="20">(<argument><expr><operator pos:line="186" pos:column="21">(<pos:position pos:line="186" pos:column="22"/></operator><name pos:line="186" pos:column="22">unsigned<pos:position pos:line="186" pos:column="30"/></name> <name pos:line="186" pos:column="31">char<pos:position pos:line="186" pos:column="35"/></name> <operator pos:line="186" pos:column="36">*<pos:position pos:line="186" pos:column="37"/></operator><operator pos:line="186" pos:column="37">)<pos:position pos:line="186" pos:column="38"/></operator><operator pos:line="186" pos:column="38">&amp;<pos:position pos:line="186" pos:column="43"/></operator><name><name pos:line="186" pos:column="39">buf<pos:position pos:line="186" pos:column="42"/></name><index pos:line="186" pos:column="42">[<expr><literal type="number" pos:line="186" pos:column="43">0<pos:position pos:line="186" pos:column="44"/></literal></expr>]<pos:position pos:line="186" pos:column="45"/></index></name></expr></argument>, <argument><expr><name><name pos:line="186" pos:column="47">ctx<pos:position pos:line="186" pos:column="50"/></name><operator pos:line="186" pos:column="50">-&gt;<pos:position pos:line="186" pos:column="55"/></operator><name pos:line="186" pos:column="52">crc<pos:position pos:line="186" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="186" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="187" pos:column="13">putLong<pos:position pos:line="187" pos:column="20"/></name><argument_list pos:line="187" pos:column="20">(<argument><expr><operator pos:line="187" pos:column="21">(<pos:position pos:line="187" pos:column="22"/></operator><name pos:line="187" pos:column="22">unsigned<pos:position pos:line="187" pos:column="30"/></name> <name pos:line="187" pos:column="31">char<pos:position pos:line="187" pos:column="35"/></name> <operator pos:line="187" pos:column="36">*<pos:position pos:line="187" pos:column="37"/></operator><operator pos:line="187" pos:column="37">)<pos:position pos:line="187" pos:column="38"/></operator><operator pos:line="187" pos:column="38">&amp;<pos:position pos:line="187" pos:column="43"/></operator><name><name pos:line="187" pos:column="39">buf<pos:position pos:line="187" pos:column="42"/></name><index pos:line="187" pos:column="42">[<expr><literal type="number" pos:line="187" pos:column="43">4<pos:position pos:line="187" pos:column="44"/></literal></expr>]<pos:position pos:line="187" pos:column="45"/></index></name></expr></argument>, <argument><expr><name><name pos:line="187" pos:column="47">ctx<pos:position pos:line="187" pos:column="50"/></name><operator pos:line="187" pos:column="50">-&gt;<pos:position pos:line="187" pos:column="55"/></operator><name pos:line="187" pos:column="52">stream<pos:position pos:line="187" pos:column="58"/></name><operator pos:line="187" pos:column="58">.<pos:position pos:line="187" pos:column="59"/></operator><name pos:line="187" pos:column="59">total_in<pos:position pos:line="187" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="187" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="69"/></expr_stmt>

            <expr_stmt><expr><name pos:line="189" pos:column="13">b<pos:position pos:line="189" pos:column="14"/></name> <operator pos:line="189" pos:column="15">=<pos:position pos:line="189" pos:column="16"/></operator> <call><name pos:line="189" pos:column="17">apr_bucket_pool_create<pos:position pos:line="189" pos:column="39"/></name><argument_list pos:line="189" pos:column="39">(<argument><expr><name pos:line="189" pos:column="40">buf<pos:position pos:line="189" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="189" pos:column="45">8<pos:position pos:line="189" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="189" pos:column="48">r<pos:position pos:line="189" pos:column="49"/></name><operator pos:line="189" pos:column="49">-&gt;<pos:position pos:line="189" pos:column="54"/></operator><name pos:line="189" pos:column="51">pool<pos:position pos:line="189" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="189" pos:column="57">f<pos:position pos:line="189" pos:column="58"/></name><operator pos:line="189" pos:column="58">-&gt;<pos:position pos:line="189" pos:column="63"/></operator><name pos:line="189" pos:column="60">c<pos:position pos:line="189" pos:column="61"/></name><operator pos:line="189" pos:column="61">-&gt;<pos:position pos:line="189" pos:column="66"/></operator><name pos:line="189" pos:column="63">bucket_alloc<pos:position pos:line="189" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="190" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="190" pos:column="36"/></name><argument_list pos:line="190" pos:column="36">(<argument><expr><name><name pos:line="190" pos:column="37">ctx<pos:position pos:line="190" pos:column="40"/></name><operator pos:line="190" pos:column="40">-&gt;<pos:position pos:line="190" pos:column="45"/></operator><name pos:line="190" pos:column="42">bb<pos:position pos:line="190" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="46">b<pos:position pos:line="190" pos:column="47"/></name></expr></argument>)<pos:position pos:line="190" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="191" pos:column="13">ap_log_rerror<pos:position pos:line="191" pos:column="26"/></name><argument_list pos:line="191" pos:column="26">(<argument><expr><name pos:line="191" pos:column="27">APLOG_MARK<pos:position pos:line="191" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="39">APLOG_DEBUG<pos:position pos:line="191" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="191" pos:column="52">0<pos:position pos:line="191" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="191" pos:column="55">r<pos:position pos:line="191" pos:column="56"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="192" pos:column="27">"Zlib: Compressed %ld to %ld : URL %s"<pos:position pos:line="192" pos:column="65"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="193" pos:column="27">ctx<pos:position pos:line="193" pos:column="30"/></name><operator pos:line="193" pos:column="30">-&gt;<pos:position pos:line="193" pos:column="35"/></operator><name pos:line="193" pos:column="32">stream<pos:position pos:line="193" pos:column="38"/></name><operator pos:line="193" pos:column="38">.<pos:position pos:line="193" pos:column="39"/></operator><name pos:line="193" pos:column="39">total_in<pos:position pos:line="193" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="193" pos:column="49">ctx<pos:position pos:line="193" pos:column="52"/></name><operator pos:line="193" pos:column="52">-&gt;<pos:position pos:line="193" pos:column="57"/></operator><name pos:line="193" pos:column="54">stream<pos:position pos:line="193" pos:column="60"/></name><operator pos:line="193" pos:column="60">.<pos:position pos:line="193" pos:column="61"/></operator><name pos:line="193" pos:column="61">total_out<pos:position pos:line="193" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="193" pos:column="72">r<pos:position pos:line="193" pos:column="73"/></name><operator pos:line="193" pos:column="73">-&gt;<pos:position pos:line="193" pos:column="78"/></operator><name pos:line="193" pos:column="75">uri<pos:position pos:line="193" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="193" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="80"/></expr_stmt>

            <if pos:line="195" pos:column="13">if <condition pos:line="195" pos:column="16">(<expr><name><name pos:line="195" pos:column="17">c<pos:position pos:line="195" pos:column="18"/></name><operator pos:line="195" pos:column="18">-&gt;<pos:position pos:line="195" pos:column="23"/></operator><name pos:line="195" pos:column="20">noteName<pos:position pos:line="195" pos:column="28"/></name></name></expr>)<pos:position pos:line="195" pos:column="29"/></condition><then pos:line="195" pos:column="29"> <block pos:line="195" pos:column="30">{
                <if pos:line="196" pos:column="17">if <condition pos:line="196" pos:column="20">(<expr><name><name pos:line="196" pos:column="21">ctx<pos:position pos:line="196" pos:column="24"/></name><operator pos:line="196" pos:column="24">-&gt;<pos:position pos:line="196" pos:column="29"/></operator><name pos:line="196" pos:column="26">stream<pos:position pos:line="196" pos:column="32"/></name><operator pos:line="196" pos:column="32">.<pos:position pos:line="196" pos:column="33"/></operator><name pos:line="196" pos:column="33">total_in<pos:position pos:line="196" pos:column="41"/></name></name> <operator pos:line="196" pos:column="42">&gt;<pos:position pos:line="196" pos:column="46"/></operator> <literal type="number" pos:line="196" pos:column="44">0<pos:position pos:line="196" pos:column="45"/></literal></expr>)<pos:position pos:line="196" pos:column="46"/></condition><then pos:line="196" pos:column="46"> <block pos:line="196" pos:column="47">{
                    <decl_stmt><decl><type><name pos:line="197" pos:column="21">int<pos:position pos:line="197" pos:column="24"/></name></type> <name pos:line="197" pos:column="25">total<pos:position pos:line="197" pos:column="30"/></name></decl>;<pos:position pos:line="197" pos:column="31"/></decl_stmt>

                    <expr_stmt><expr><name pos:line="199" pos:column="21">total<pos:position pos:line="199" pos:column="26"/></name> <operator pos:line="199" pos:column="27">=<pos:position pos:line="199" pos:column="28"/></operator> <name><name pos:line="199" pos:column="29">ctx<pos:position pos:line="199" pos:column="32"/></name><operator pos:line="199" pos:column="32">-&gt;<pos:position pos:line="199" pos:column="37"/></operator><name pos:line="199" pos:column="34">stream<pos:position pos:line="199" pos:column="40"/></name><operator pos:line="199" pos:column="40">.<pos:position pos:line="199" pos:column="41"/></operator><name pos:line="199" pos:column="41">total_out<pos:position pos:line="199" pos:column="50"/></name></name> <operator pos:line="199" pos:column="51">*<pos:position pos:line="199" pos:column="52"/></operator> <literal type="number" pos:line="199" pos:column="53">100<pos:position pos:line="199" pos:column="56"/></literal> <operator pos:line="199" pos:column="57">/<pos:position pos:line="199" pos:column="58"/></operator> <name><name pos:line="199" pos:column="59">ctx<pos:position pos:line="199" pos:column="62"/></name><operator pos:line="199" pos:column="62">-&gt;<pos:position pos:line="199" pos:column="67"/></operator><name pos:line="199" pos:column="64">stream<pos:position pos:line="199" pos:column="70"/></name><operator pos:line="199" pos:column="70">.<pos:position pos:line="199" pos:column="71"/></operator><name pos:line="199" pos:column="71">total_in<pos:position pos:line="199" pos:column="79"/></name></name></expr>;<pos:position pos:line="199" pos:column="80"/></expr_stmt>

                    <expr_stmt><expr><call><name pos:line="201" pos:column="21">apr_table_setn<pos:position pos:line="201" pos:column="35"/></name><argument_list pos:line="201" pos:column="35">(<argument><expr><name><name pos:line="201" pos:column="36">r<pos:position pos:line="201" pos:column="37"/></name><operator pos:line="201" pos:column="37">-&gt;<pos:position pos:line="201" pos:column="42"/></operator><name pos:line="201" pos:column="39">notes<pos:position pos:line="201" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="201" pos:column="46">c<pos:position pos:line="201" pos:column="47"/></name><operator pos:line="201" pos:column="47">-&gt;<pos:position pos:line="201" pos:column="52"/></operator><name pos:line="201" pos:column="49">noteName<pos:position pos:line="201" pos:column="57"/></name></name></expr></argument>,
                                   <argument><expr><call><name pos:line="202" pos:column="36">apr_itoa<pos:position pos:line="202" pos:column="44"/></name><argument_list pos:line="202" pos:column="44">(<argument><expr><name><name pos:line="202" pos:column="45">r<pos:position pos:line="202" pos:column="46"/></name><operator pos:line="202" pos:column="46">-&gt;<pos:position pos:line="202" pos:column="51"/></operator><name pos:line="202" pos:column="48">pool<pos:position pos:line="202" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="54">total<pos:position pos:line="202" pos:column="59"/></name></expr></argument>)<pos:position pos:line="202" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="202" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="62"/></expr_stmt>
                }<pos:position pos:line="203" pos:column="18"/></block></then>
                <else pos:line="204" pos:column="17">else <block pos:line="204" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="205" pos:column="21">apr_table_setn<pos:position pos:line="205" pos:column="35"/></name><argument_list pos:line="205" pos:column="35">(<argument><expr><name><name pos:line="205" pos:column="36">r<pos:position pos:line="205" pos:column="37"/></name><operator pos:line="205" pos:column="37">-&gt;<pos:position pos:line="205" pos:column="42"/></operator><name pos:line="205" pos:column="39">notes<pos:position pos:line="205" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="205" pos:column="46">c<pos:position pos:line="205" pos:column="47"/></name><operator pos:line="205" pos:column="47">-&gt;<pos:position pos:line="205" pos:column="52"/></operator><name pos:line="205" pos:column="49">noteName<pos:position pos:line="205" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="205" pos:column="59">"-"<pos:position pos:line="205" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="205" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="64"/></expr_stmt>
                }<pos:position pos:line="206" pos:column="18"/></block></else></if>
            }<pos:position pos:line="207" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="209" pos:column="13">deflateEnd<pos:position pos:line="209" pos:column="23"/></name><argument_list pos:line="209" pos:column="23">(<argument><expr><operator pos:line="209" pos:column="24">&amp;<pos:position pos:line="209" pos:column="29"/></operator><name><name pos:line="209" pos:column="25">ctx<pos:position pos:line="209" pos:column="28"/></name><operator pos:line="209" pos:column="28">-&gt;<pos:position pos:line="209" pos:column="33"/></operator><name pos:line="209" pos:column="30">stream<pos:position pos:line="209" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="209" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="38"/></expr_stmt>

            <comment type="block" pos:line="211" pos:column="13">/* Remove EOS from the old list, and insert into the new. */</comment>
            <expr_stmt><expr><call><name pos:line="212" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="212" pos:column="30"/></name><argument_list pos:line="212" pos:column="30">(<argument><expr><name pos:line="212" pos:column="31">e<pos:position pos:line="212" pos:column="32"/></name></expr></argument>)<pos:position pos:line="212" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="213" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="213" pos:column="36"/></name><argument_list pos:line="213" pos:column="36">(<argument><expr><name><name pos:line="213" pos:column="37">ctx<pos:position pos:line="213" pos:column="40"/></name><operator pos:line="213" pos:column="40">-&gt;<pos:position pos:line="213" pos:column="45"/></operator><name pos:line="213" pos:column="42">bb<pos:position pos:line="213" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="46">e<pos:position pos:line="213" pos:column="47"/></name></expr></argument>)<pos:position pos:line="213" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="49"/></expr_stmt>

            <comment type="block" pos:line="215" pos:column="13">/* Okay, we've seen the EOS.
             * Time to pass it along down the chain.
             */</comment>
            <return pos:line="218" pos:column="13">return <expr><call><name pos:line="218" pos:column="20">ap_pass_brigade<pos:position pos:line="218" pos:column="35"/></name><argument_list pos:line="218" pos:column="35">(<argument><expr><name><name pos:line="218" pos:column="36">f<pos:position pos:line="218" pos:column="37"/></name><operator pos:line="218" pos:column="37">-&gt;<pos:position pos:line="218" pos:column="42"/></operator><name pos:line="218" pos:column="39">next<pos:position pos:line="218" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="218" pos:column="45">ctx<pos:position pos:line="218" pos:column="48"/></name><operator pos:line="218" pos:column="48">-&gt;<pos:position pos:line="218" pos:column="53"/></operator><name pos:line="218" pos:column="50">bb<pos:position pos:line="218" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="218" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="54"/></return>
        }<pos:position pos:line="219" pos:column="10"/></block></then></if>

        <if pos:line="221" pos:column="9">if <condition pos:line="221" pos:column="12">(<expr><call><name pos:line="221" pos:column="13">APR_BUCKET_IS_FLUSH<pos:position pos:line="221" pos:column="32"/></name><argument_list pos:line="221" pos:column="32">(<argument><expr><name pos:line="221" pos:column="33">e<pos:position pos:line="221" pos:column="34"/></name></expr></argument>)<pos:position pos:line="221" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="221" pos:column="36"/></condition><then pos:line="221" pos:column="36"> <block pos:line="221" pos:column="37">{
            <decl_stmt><decl><type><name pos:line="222" pos:column="13">apr_bucket<pos:position pos:line="222" pos:column="23"/></name> <modifier pos:line="222" pos:column="24">*<pos:position pos:line="222" pos:column="25"/></modifier></type><name pos:line="222" pos:column="25">bkt<pos:position pos:line="222" pos:column="28"/></name></decl>;<pos:position pos:line="222" pos:column="29"/></decl_stmt>
            <expr_stmt><expr><name pos:line="223" pos:column="13">zRC<pos:position pos:line="223" pos:column="16"/></name> <operator pos:line="223" pos:column="17">=<pos:position pos:line="223" pos:column="18"/></operator> <call><name pos:line="223" pos:column="19">deflate<pos:position pos:line="223" pos:column="26"/></name><argument_list pos:line="223" pos:column="26">(<argument><expr><operator pos:line="223" pos:column="27">&amp;<pos:position pos:line="223" pos:column="32"/></operator><operator pos:line="223" pos:column="28">(<pos:position pos:line="223" pos:column="29"/></operator><name><name pos:line="223" pos:column="29">ctx<pos:position pos:line="223" pos:column="32"/></name><operator pos:line="223" pos:column="32">-&gt;<pos:position pos:line="223" pos:column="37"/></operator><name pos:line="223" pos:column="34">stream<pos:position pos:line="223" pos:column="40"/></name></name><operator pos:line="223" pos:column="40">)<pos:position pos:line="223" pos:column="41"/></operator></expr></argument>, <argument><expr><name pos:line="223" pos:column="43">Z_SYNC_FLUSH<pos:position pos:line="223" pos:column="55"/></name></expr></argument>)<pos:position pos:line="223" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="57"/></expr_stmt>
            <if pos:line="224" pos:column="13">if <condition pos:line="224" pos:column="16">(<expr><name pos:line="224" pos:column="17">zRC<pos:position pos:line="224" pos:column="20"/></name> <operator pos:line="224" pos:column="21">!=<pos:position pos:line="224" pos:column="23"/></operator> <name pos:line="224" pos:column="24">Z_OK<pos:position pos:line="224" pos:column="28"/></name></expr>)<pos:position pos:line="224" pos:column="29"/></condition><then pos:line="224" pos:column="29"> <block pos:line="224" pos:column="30">{
                <return pos:line="225" pos:column="17">return <expr><name pos:line="225" pos:column="24">APR_EGENERAL<pos:position pos:line="225" pos:column="36"/></name></expr>;<pos:position pos:line="225" pos:column="37"/></return>
            }<pos:position pos:line="226" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="228" pos:column="13">ctx<pos:position pos:line="228" pos:column="16"/></name><operator pos:line="228" pos:column="16">-&gt;<pos:position pos:line="228" pos:column="21"/></operator><name pos:line="228" pos:column="18">stream<pos:position pos:line="228" pos:column="24"/></name><operator pos:line="228" pos:column="24">.<pos:position pos:line="228" pos:column="25"/></operator><name pos:line="228" pos:column="25">next_out<pos:position pos:line="228" pos:column="33"/></name></name> <operator pos:line="228" pos:column="34">=<pos:position pos:line="228" pos:column="35"/></operator> <name><name pos:line="228" pos:column="36">ctx<pos:position pos:line="228" pos:column="39"/></name><operator pos:line="228" pos:column="39">-&gt;<pos:position pos:line="228" pos:column="44"/></operator><name pos:line="228" pos:column="41">buffer<pos:position pos:line="228" pos:column="47"/></name></name></expr>;<pos:position pos:line="228" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name pos:line="229" pos:column="13">len<pos:position pos:line="229" pos:column="16"/></name> <operator pos:line="229" pos:column="17">=<pos:position pos:line="229" pos:column="18"/></operator> <name><name pos:line="229" pos:column="19">c<pos:position pos:line="229" pos:column="20"/></name><operator pos:line="229" pos:column="20">-&gt;<pos:position pos:line="229" pos:column="25"/></operator><name pos:line="229" pos:column="22">bufferSize<pos:position pos:line="229" pos:column="32"/></name></name> <operator pos:line="229" pos:column="33">-<pos:position pos:line="229" pos:column="34"/></operator> <name><name pos:line="229" pos:column="35">ctx<pos:position pos:line="229" pos:column="38"/></name><operator pos:line="229" pos:column="38">-&gt;<pos:position pos:line="229" pos:column="43"/></operator><name pos:line="229" pos:column="40">stream<pos:position pos:line="229" pos:column="46"/></name><operator pos:line="229" pos:column="46">.<pos:position pos:line="229" pos:column="47"/></operator><name pos:line="229" pos:column="47">avail_out<pos:position pos:line="229" pos:column="56"/></name></name></expr>;<pos:position pos:line="229" pos:column="57"/></expr_stmt>

            <expr_stmt><expr><name pos:line="231" pos:column="13">b<pos:position pos:line="231" pos:column="14"/></name> <operator pos:line="231" pos:column="15">=<pos:position pos:line="231" pos:column="16"/></operator> <call><name pos:line="231" pos:column="17">apr_bucket_heap_create<pos:position pos:line="231" pos:column="39"/></name><argument_list pos:line="231" pos:column="39">(<argument><expr><operator pos:line="231" pos:column="40">(<pos:position pos:line="231" pos:column="41"/></operator><name pos:line="231" pos:column="41">char<pos:position pos:line="231" pos:column="45"/></name> <operator pos:line="231" pos:column="46">*<pos:position pos:line="231" pos:column="47"/></operator><operator pos:line="231" pos:column="47">)<pos:position pos:line="231" pos:column="48"/></operator><name><name pos:line="231" pos:column="48">ctx<pos:position pos:line="231" pos:column="51"/></name><operator pos:line="231" pos:column="51">-&gt;<pos:position pos:line="231" pos:column="56"/></operator><name pos:line="231" pos:column="53">buffer<pos:position pos:line="231" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="231" pos:column="61">len<pos:position pos:line="231" pos:column="64"/></name></expr></argument>,
                                       <argument><expr><name pos:line="232" pos:column="40">NULL<pos:position pos:line="232" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="232" pos:column="46">f<pos:position pos:line="232" pos:column="47"/></name><operator pos:line="232" pos:column="47">-&gt;<pos:position pos:line="232" pos:column="52"/></operator><name pos:line="232" pos:column="49">c<pos:position pos:line="232" pos:column="50"/></name><operator pos:line="232" pos:column="50">-&gt;<pos:position pos:line="232" pos:column="55"/></operator><name pos:line="232" pos:column="52">bucket_alloc<pos:position pos:line="232" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="232" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="233" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="233" pos:column="36"/></name><argument_list pos:line="233" pos:column="36">(<argument><expr><name><name pos:line="233" pos:column="37">ctx<pos:position pos:line="233" pos:column="40"/></name><operator pos:line="233" pos:column="40">-&gt;<pos:position pos:line="233" pos:column="45"/></operator><name pos:line="233" pos:column="42">bb<pos:position pos:line="233" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="46">b<pos:position pos:line="233" pos:column="47"/></name></expr></argument>)<pos:position pos:line="233" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="234" pos:column="13">ctx<pos:position pos:line="234" pos:column="16"/></name><operator pos:line="234" pos:column="16">-&gt;<pos:position pos:line="234" pos:column="21"/></operator><name pos:line="234" pos:column="18">stream<pos:position pos:line="234" pos:column="24"/></name><operator pos:line="234" pos:column="24">.<pos:position pos:line="234" pos:column="25"/></operator><name pos:line="234" pos:column="25">avail_out<pos:position pos:line="234" pos:column="34"/></name></name> <operator pos:line="234" pos:column="35">=<pos:position pos:line="234" pos:column="36"/></operator> <name><name pos:line="234" pos:column="37">c<pos:position pos:line="234" pos:column="38"/></name><operator pos:line="234" pos:column="38">-&gt;<pos:position pos:line="234" pos:column="43"/></operator><name pos:line="234" pos:column="40">bufferSize<pos:position pos:line="234" pos:column="50"/></name></name></expr>;<pos:position pos:line="234" pos:column="51"/></expr_stmt>

            <expr_stmt><expr><name pos:line="236" pos:column="13">bkt<pos:position pos:line="236" pos:column="16"/></name> <operator pos:line="236" pos:column="17">=<pos:position pos:line="236" pos:column="18"/></operator> <call><name pos:line="236" pos:column="19">apr_bucket_flush_create<pos:position pos:line="236" pos:column="42"/></name><argument_list pos:line="236" pos:column="42">(<argument><expr><name><name pos:line="236" pos:column="43">f<pos:position pos:line="236" pos:column="44"/></name><operator pos:line="236" pos:column="44">-&gt;<pos:position pos:line="236" pos:column="49"/></operator><name pos:line="236" pos:column="46">c<pos:position pos:line="236" pos:column="47"/></name><operator pos:line="236" pos:column="47">-&gt;<pos:position pos:line="236" pos:column="52"/></operator><name pos:line="236" pos:column="49">bucket_alloc<pos:position pos:line="236" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="236" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="237" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="237" pos:column="36"/></name><argument_list pos:line="237" pos:column="36">(<argument><expr><name><name pos:line="237" pos:column="37">ctx<pos:position pos:line="237" pos:column="40"/></name><operator pos:line="237" pos:column="40">-&gt;<pos:position pos:line="237" pos:column="45"/></operator><name pos:line="237" pos:column="42">bb<pos:position pos:line="237" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="46">bkt<pos:position pos:line="237" pos:column="49"/></name></expr></argument>)<pos:position pos:line="237" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="238" pos:column="13">ap_pass_brigade<pos:position pos:line="238" pos:column="28"/></name><argument_list pos:line="238" pos:column="28">(<argument><expr><name><name pos:line="238" pos:column="29">f<pos:position pos:line="238" pos:column="30"/></name><operator pos:line="238" pos:column="30">-&gt;<pos:position pos:line="238" pos:column="35"/></operator><name pos:line="238" pos:column="32">next<pos:position pos:line="238" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="238" pos:column="38">ctx<pos:position pos:line="238" pos:column="41"/></name><operator pos:line="238" pos:column="41">-&gt;<pos:position pos:line="238" pos:column="46"/></operator><name pos:line="238" pos:column="43">bb<pos:position pos:line="238" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="238" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="47"/></expr_stmt>
            <continue pos:line="239" pos:column="13">continue;<pos:position pos:line="239" pos:column="22"/></continue>
        }<pos:position pos:line="240" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="242" pos:column="9">/* read */</comment>
        <expr_stmt><expr><call><name pos:line="243" pos:column="9">apr_bucket_read<pos:position pos:line="243" pos:column="24"/></name><argument_list pos:line="243" pos:column="24">(<argument><expr><name pos:line="243" pos:column="25">e<pos:position pos:line="243" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="243" pos:column="28">&amp;<pos:position pos:line="243" pos:column="33"/></operator><name pos:line="243" pos:column="29">data<pos:position pos:line="243" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="243" pos:column="35">&amp;<pos:position pos:line="243" pos:column="40"/></operator><name pos:line="243" pos:column="36">len<pos:position pos:line="243" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="41">APR_BLOCK_READ<pos:position pos:line="243" pos:column="55"/></name></expr></argument>)<pos:position pos:line="243" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="57"/></expr_stmt>

        <comment type="block" pos:line="245" pos:column="9">/* This crc32 function is from zlib. */</comment>
        <expr_stmt><expr><name><name pos:line="246" pos:column="9">ctx<pos:position pos:line="246" pos:column="12"/></name><operator pos:line="246" pos:column="12">-&gt;<pos:position pos:line="246" pos:column="17"/></operator><name pos:line="246" pos:column="14">crc<pos:position pos:line="246" pos:column="17"/></name></name> <operator pos:line="246" pos:column="18">=<pos:position pos:line="246" pos:column="19"/></operator> <call><name pos:line="246" pos:column="20">crc32<pos:position pos:line="246" pos:column="25"/></name><argument_list pos:line="246" pos:column="25">(<argument><expr><name><name pos:line="246" pos:column="26">ctx<pos:position pos:line="246" pos:column="29"/></name><operator pos:line="246" pos:column="29">-&gt;<pos:position pos:line="246" pos:column="34"/></operator><name pos:line="246" pos:column="31">crc<pos:position pos:line="246" pos:column="34"/></name></name></expr></argument>, <argument><expr><operator pos:line="246" pos:column="36">(<pos:position pos:line="246" pos:column="37"/></operator><specifier pos:line="246" pos:column="37">const<pos:position pos:line="246" pos:column="42"/></specifier> <name pos:line="246" pos:column="43">Bytef<pos:position pos:line="246" pos:column="48"/></name> <operator pos:line="246" pos:column="49">*<pos:position pos:line="246" pos:column="50"/></operator><operator pos:line="246" pos:column="50">)<pos:position pos:line="246" pos:column="51"/></operator><name pos:line="246" pos:column="51">data<pos:position pos:line="246" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="57">len<pos:position pos:line="246" pos:column="60"/></name></expr></argument>)<pos:position pos:line="246" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="62"/></expr_stmt>

        <comment type="block" pos:line="248" pos:column="9">/* write */</comment>
        <expr_stmt><expr><name><name pos:line="249" pos:column="9">ctx<pos:position pos:line="249" pos:column="12"/></name><operator pos:line="249" pos:column="12">-&gt;<pos:position pos:line="249" pos:column="17"/></operator><name pos:line="249" pos:column="14">stream<pos:position pos:line="249" pos:column="20"/></name><operator pos:line="249" pos:column="20">.<pos:position pos:line="249" pos:column="21"/></operator><name pos:line="249" pos:column="21">next_in<pos:position pos:line="249" pos:column="28"/></name></name> <operator pos:line="249" pos:column="29">=<pos:position pos:line="249" pos:column="30"/></operator> <operator pos:line="249" pos:column="31">(<pos:position pos:line="249" pos:column="32"/></operator><name pos:line="249" pos:column="32">unsigned<pos:position pos:line="249" pos:column="40"/></name> <name pos:line="249" pos:column="41">char<pos:position pos:line="249" pos:column="45"/></name> <operator pos:line="249" pos:column="46">*<pos:position pos:line="249" pos:column="47"/></operator><operator pos:line="249" pos:column="47">)<pos:position pos:line="249" pos:column="48"/></operator><name pos:line="249" pos:column="48">data<pos:position pos:line="249" pos:column="52"/></name></expr>;<pos:position pos:line="249" pos:column="53"/></expr_stmt> <comment type="block" pos:line="249" pos:column="54">/* We just lost const-ness,
                                                      * but we'll just have to
                                                      * trust zlib */</comment>
        <expr_stmt><expr><name><name pos:line="252" pos:column="9">ctx<pos:position pos:line="252" pos:column="12"/></name><operator pos:line="252" pos:column="12">-&gt;<pos:position pos:line="252" pos:column="17"/></operator><name pos:line="252" pos:column="14">stream<pos:position pos:line="252" pos:column="20"/></name><operator pos:line="252" pos:column="20">.<pos:position pos:line="252" pos:column="21"/></operator><name pos:line="252" pos:column="21">avail_in<pos:position pos:line="252" pos:column="29"/></name></name> <operator pos:line="252" pos:column="30">=<pos:position pos:line="252" pos:column="31"/></operator> <name pos:line="252" pos:column="32">len<pos:position pos:line="252" pos:column="35"/></name></expr>;<pos:position pos:line="252" pos:column="36"/></expr_stmt>

        <while pos:line="254" pos:column="9">while <condition pos:line="254" pos:column="15">(<expr><name><name pos:line="254" pos:column="16">ctx<pos:position pos:line="254" pos:column="19"/></name><operator pos:line="254" pos:column="19">-&gt;<pos:position pos:line="254" pos:column="24"/></operator><name pos:line="254" pos:column="21">stream<pos:position pos:line="254" pos:column="27"/></name><operator pos:line="254" pos:column="27">.<pos:position pos:line="254" pos:column="28"/></operator><name pos:line="254" pos:column="28">avail_in<pos:position pos:line="254" pos:column="36"/></name></name> <operator pos:line="254" pos:column="37">!=<pos:position pos:line="254" pos:column="39"/></operator> <literal type="number" pos:line="254" pos:column="40">0<pos:position pos:line="254" pos:column="41"/></literal></expr>)<pos:position pos:line="254" pos:column="42"/></condition> <block pos:line="254" pos:column="43">{
            <if pos:line="255" pos:column="13">if <condition pos:line="255" pos:column="16">(<expr><name><name pos:line="255" pos:column="17">ctx<pos:position pos:line="255" pos:column="20"/></name><operator pos:line="255" pos:column="20">-&gt;<pos:position pos:line="255" pos:column="25"/></operator><name pos:line="255" pos:column="22">stream<pos:position pos:line="255" pos:column="28"/></name><operator pos:line="255" pos:column="28">.<pos:position pos:line="255" pos:column="29"/></operator><name pos:line="255" pos:column="29">avail_out<pos:position pos:line="255" pos:column="38"/></name></name> <operator pos:line="255" pos:column="39">==<pos:position pos:line="255" pos:column="41"/></operator> <literal type="number" pos:line="255" pos:column="42">0<pos:position pos:line="255" pos:column="43"/></literal></expr>)<pos:position pos:line="255" pos:column="44"/></condition><then pos:line="255" pos:column="44"> <block pos:line="255" pos:column="45">{
                <expr_stmt><expr><name><name pos:line="256" pos:column="17">ctx<pos:position pos:line="256" pos:column="20"/></name><operator pos:line="256" pos:column="20">-&gt;<pos:position pos:line="256" pos:column="25"/></operator><name pos:line="256" pos:column="22">stream<pos:position pos:line="256" pos:column="28"/></name><operator pos:line="256" pos:column="28">.<pos:position pos:line="256" pos:column="29"/></operator><name pos:line="256" pos:column="29">next_out<pos:position pos:line="256" pos:column="37"/></name></name> <operator pos:line="256" pos:column="38">=<pos:position pos:line="256" pos:column="39"/></operator> <name><name pos:line="256" pos:column="40">ctx<pos:position pos:line="256" pos:column="43"/></name><operator pos:line="256" pos:column="43">-&gt;<pos:position pos:line="256" pos:column="48"/></operator><name pos:line="256" pos:column="45">buffer<pos:position pos:line="256" pos:column="51"/></name></name></expr>;<pos:position pos:line="256" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><name pos:line="257" pos:column="17">len<pos:position pos:line="257" pos:column="20"/></name> <operator pos:line="257" pos:column="21">=<pos:position pos:line="257" pos:column="22"/></operator> <name><name pos:line="257" pos:column="23">c<pos:position pos:line="257" pos:column="24"/></name><operator pos:line="257" pos:column="24">-&gt;<pos:position pos:line="257" pos:column="29"/></operator><name pos:line="257" pos:column="26">bufferSize<pos:position pos:line="257" pos:column="36"/></name></name> <operator pos:line="257" pos:column="37">-<pos:position pos:line="257" pos:column="38"/></operator> <name><name pos:line="257" pos:column="39">ctx<pos:position pos:line="257" pos:column="42"/></name><operator pos:line="257" pos:column="42">-&gt;<pos:position pos:line="257" pos:column="47"/></operator><name pos:line="257" pos:column="44">stream<pos:position pos:line="257" pos:column="50"/></name><operator pos:line="257" pos:column="50">.<pos:position pos:line="257" pos:column="51"/></operator><name pos:line="257" pos:column="51">avail_out<pos:position pos:line="257" pos:column="60"/></name></name></expr>;<pos:position pos:line="257" pos:column="61"/></expr_stmt>

                <expr_stmt><expr><name pos:line="259" pos:column="17">b<pos:position pos:line="259" pos:column="18"/></name> <operator pos:line="259" pos:column="19">=<pos:position pos:line="259" pos:column="20"/></operator> <call><name pos:line="259" pos:column="21">apr_bucket_heap_create<pos:position pos:line="259" pos:column="43"/></name><argument_list pos:line="259" pos:column="43">(<argument><expr><operator pos:line="259" pos:column="44">(<pos:position pos:line="259" pos:column="45"/></operator><name pos:line="259" pos:column="45">char<pos:position pos:line="259" pos:column="49"/></name> <operator pos:line="259" pos:column="50">*<pos:position pos:line="259" pos:column="51"/></operator><operator pos:line="259" pos:column="51">)<pos:position pos:line="259" pos:column="52"/></operator><name><name pos:line="259" pos:column="52">ctx<pos:position pos:line="259" pos:column="55"/></name><operator pos:line="259" pos:column="55">-&gt;<pos:position pos:line="259" pos:column="60"/></operator><name pos:line="259" pos:column="57">buffer<pos:position pos:line="259" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="65">len<pos:position pos:line="259" pos:column="68"/></name></expr></argument>,
                                           <argument><expr><name pos:line="260" pos:column="44">NULL<pos:position pos:line="260" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="260" pos:column="50">f<pos:position pos:line="260" pos:column="51"/></name><operator pos:line="260" pos:column="51">-&gt;<pos:position pos:line="260" pos:column="56"/></operator><name pos:line="260" pos:column="53">c<pos:position pos:line="260" pos:column="54"/></name><operator pos:line="260" pos:column="54">-&gt;<pos:position pos:line="260" pos:column="59"/></operator><name pos:line="260" pos:column="56">bucket_alloc<pos:position pos:line="260" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="260" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="70"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="261" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="261" pos:column="40"/></name><argument_list pos:line="261" pos:column="40">(<argument><expr><name><name pos:line="261" pos:column="41">ctx<pos:position pos:line="261" pos:column="44"/></name><operator pos:line="261" pos:column="44">-&gt;<pos:position pos:line="261" pos:column="49"/></operator><name pos:line="261" pos:column="46">bb<pos:position pos:line="261" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="50">b<pos:position pos:line="261" pos:column="51"/></name></expr></argument>)<pos:position pos:line="261" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="262" pos:column="17">ctx<pos:position pos:line="262" pos:column="20"/></name><operator pos:line="262" pos:column="20">-&gt;<pos:position pos:line="262" pos:column="25"/></operator><name pos:line="262" pos:column="22">stream<pos:position pos:line="262" pos:column="28"/></name><operator pos:line="262" pos:column="28">.<pos:position pos:line="262" pos:column="29"/></operator><name pos:line="262" pos:column="29">avail_out<pos:position pos:line="262" pos:column="38"/></name></name> <operator pos:line="262" pos:column="39">=<pos:position pos:line="262" pos:column="40"/></operator> <name><name pos:line="262" pos:column="41">c<pos:position pos:line="262" pos:column="42"/></name><operator pos:line="262" pos:column="42">-&gt;<pos:position pos:line="262" pos:column="47"/></operator><name pos:line="262" pos:column="44">bufferSize<pos:position pos:line="262" pos:column="54"/></name></name></expr>;<pos:position pos:line="262" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="263" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="265" pos:column="13">zRC<pos:position pos:line="265" pos:column="16"/></name> <operator pos:line="265" pos:column="17">=<pos:position pos:line="265" pos:column="18"/></operator> <call><name pos:line="265" pos:column="19">deflate<pos:position pos:line="265" pos:column="26"/></name><argument_list pos:line="265" pos:column="26">(<argument><expr><operator pos:line="265" pos:column="27">&amp;<pos:position pos:line="265" pos:column="32"/></operator><operator pos:line="265" pos:column="28">(<pos:position pos:line="265" pos:column="29"/></operator><name><name pos:line="265" pos:column="29">ctx<pos:position pos:line="265" pos:column="32"/></name><operator pos:line="265" pos:column="32">-&gt;<pos:position pos:line="265" pos:column="37"/></operator><name pos:line="265" pos:column="34">stream<pos:position pos:line="265" pos:column="40"/></name></name><operator pos:line="265" pos:column="40">)<pos:position pos:line="265" pos:column="41"/></operator></expr></argument>, <argument><expr><name pos:line="265" pos:column="43">Z_NO_FLUSH<pos:position pos:line="265" pos:column="53"/></name></expr></argument>)<pos:position pos:line="265" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="55"/></expr_stmt>

            <if pos:line="267" pos:column="13">if <condition pos:line="267" pos:column="16">(<expr><name pos:line="267" pos:column="17">zRC<pos:position pos:line="267" pos:column="20"/></name> <operator pos:line="267" pos:column="21">!=<pos:position pos:line="267" pos:column="23"/></operator> <name pos:line="267" pos:column="24">Z_OK<pos:position pos:line="267" pos:column="28"/></name></expr>)<pos:position pos:line="267" pos:column="29"/></condition><then pos:line="267" pos:column="29">
                <block type="pseudo"><return pos:line="268" pos:column="17">return <expr><name pos:line="268" pos:column="24">APR_EGENERAL<pos:position pos:line="268" pos:column="36"/></name></expr>;<pos:position pos:line="268" pos:column="37"/></return></block></then></if>
        }<pos:position pos:line="269" pos:column="10"/></block></while>
    }<pos:position pos:line="270" pos:column="6"/></block>

    <expr_stmt><expr><call><name pos:line="272" pos:column="5">apr_brigade_cleanup<pos:position pos:line="272" pos:column="24"/></name><argument_list pos:line="272" pos:column="24">(<argument><expr><name pos:line="272" pos:column="25">bb<pos:position pos:line="272" pos:column="27"/></name></expr></argument>)<pos:position pos:line="272" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="29"/></expr_stmt>
    <return pos:line="273" pos:column="5">return <expr><name pos:line="273" pos:column="12">APR_SUCCESS<pos:position pos:line="273" pos:column="23"/></name></expr>;<pos:position pos:line="273" pos:column="24"/></return>
}<pos:position pos:line="274" pos:column="2"/></block></function></unit>

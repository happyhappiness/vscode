<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1330_httpd-2.4.12.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">socache_shmcb_init<pos:position pos:line="1" pos:column="39"/></name><argument_list pos:line="1" pos:column="39">(<argument><expr><name pos:line="1" pos:column="40">ap_socache_instance_t<pos:position pos:line="1" pos:column="61"/></name> <operator pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></operator><name pos:line="1" pos:column="63">ctx<pos:position pos:line="1" pos:column="66"/></name></expr></argument>,
                                       <argument><expr><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <operator pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></operator></expr></argument><namespace pos:line="2" pos:column="52">namespace<operator pos:line="2" pos:column="61">,<pos:position pos:line="2" pos:column="62"/></operator>
                                       const struct <name pos:line="3" pos:column="53">ap_socache_hints<pos:position pos:line="3" pos:column="69"/></name> <modifier pos:line="3" pos:column="70">*<pos:position pos:line="3" pos:column="71"/></modifier><name pos:line="3" pos:column="71">hints<pos:position pos:line="3" pos:column="76"/></name><operator pos:line="3" pos:column="76">,<pos:position pos:line="3" pos:column="77"/></operator>
                                       <name pos:line="4" pos:column="40">server_rec<pos:position pos:line="4" pos:column="50"/></name> <modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier><name pos:line="4" pos:column="52">s<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">,<pos:position pos:line="4" pos:column="54"/></operator> <name pos:line="4" pos:column="55">apr_pool_t<pos:position pos:line="4" pos:column="65"/></name> <modifier pos:line="4" pos:column="66">*<pos:position pos:line="4" pos:column="67"/></modifier><name pos:line="4" pos:column="67">p<pos:position pos:line="4" pos:column="68"/></name></namespace>)<pos:position pos:line="4" pos:column="69"/></argument_list>
<argument_list pos:line="5" pos:column="1">{
    <argument><expr><name pos:line="6" pos:column="5">void<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">shm_segment<pos:position pos:line="6" pos:column="22"/></name></expr></argument>;
    <argument><expr><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">shm_segsize<pos:position pos:line="7" pos:column="27"/></name></expr></argument>;
    <argument><expr><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name></expr></argument>;
    <argument><expr><name pos:line="9" pos:column="5">SHMCBHeader<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">header<pos:position pos:line="9" pos:column="24"/></name></expr></argument>;
    <argument><expr><name pos:line="10" pos:column="5">unsigned<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">int<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">num_subcache<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">num_idx<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">loop<pos:position pos:line="10" pos:column="45"/></name></expr></argument>;
    <argument><expr><name pos:line="11" pos:column="5">apr_size_t<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">avg_obj_size<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="30">avg_id_len<pos:position pos:line="11" pos:column="40"/></name></expr></argument>;

    <comment type="block" pos:line="13" pos:column="5">/* Create shared memory segment */</comment>
    if <argument><expr><operator pos:line="14" pos:column="8">(<pos:position pos:line="14" pos:column="9"/></operator><name><name pos:line="14" pos:column="9">ctx<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">data_file<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">==<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">NULL<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">)<pos:position pos:line="14" pos:column="32"/></operator> <block pos:line="14" pos:column="33">{
        <expr><specifier pos:line="15" pos:column="9">const<pos:position pos:line="15" pos:column="14"/></specifier> <name pos:line="15" pos:column="15">char<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">path<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <macro><name pos:line="15" pos:column="28">apr_pstrcat<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument pos:line="15" pos:column="40">p<pos:position pos:line="15" pos:column="41"/></argument>, <argument pos:line="15" pos:column="43">DEFAULT_SHMCB_PREFIX<pos:position pos:line="15" pos:column="63"/></argument>, <argument pos:line="15" pos:column="65">namespace<pos:position pos:line="15" pos:column="74"/></argument>,
                                       <argument pos:line="16" pos:column="40">DEFAULT_SHMCB_SUFFIX<pos:position pos:line="16" pos:column="60"/></argument>, <argument pos:line="16" pos:column="62">NULL<pos:position pos:line="16" pos:column="66"/></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></macro></expr>;

        <expr><name><name pos:line="18" pos:column="9">ctx<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">data_file<pos:position pos:line="18" pos:column="23"/></name></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <call><name pos:line="18" pos:column="26">ap_runtime_dir_relative<pos:position pos:line="18" pos:column="49"/></name><argument_list pos:line="18" pos:column="49">(<argument><expr><name pos:line="18" pos:column="50">p<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="53">path<pos:position pos:line="18" pos:column="57"/></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>;
    }<pos:position pos:line="19" pos:column="6"/></block>

    <comment type="block" pos:line="21" pos:column="5">/* Use anonymous shm by default, fall back on name-based. */</comment>
    <name pos:line="22" pos:column="5">rv<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <call><name pos:line="22" pos:column="10">apr_shm_create<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><operator pos:line="22" pos:column="25">&amp;<pos:position pos:line="22" pos:column="30"/></operator><name><name pos:line="22" pos:column="26">ctx<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">-&gt;<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="31">shm<pos:position pos:line="22" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="36">ctx<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">-&gt;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="41">shm_size<pos:position pos:line="22" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="51">NULL<pos:position pos:line="22" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="57">p<pos:position pos:line="22" pos:column="58"/></name></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr></argument>;
    if <argument><expr><operator pos:line="23" pos:column="8">(<pos:position pos:line="23" pos:column="9"/></operator><call><name pos:line="23" pos:column="9">APR_STATUS_IS_ENOTIMPL<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">rv<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call><operator pos:line="23" pos:column="35">)<pos:position pos:line="23" pos:column="36"/></operator> <block pos:line="23" pos:column="37">{
        <comment type="block" pos:line="24" pos:column="9">/* If anon shm isn't supported, fail if no named file was
         * configured successfully; the ap_server_root_relative call
         * above will return NULL for invalid paths. */</comment>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">ctx<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">data_file<pos:position pos:line="27" pos:column="27"/></name></name> <operator pos:line="27" pos:column="28">==<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">NULL<pos:position pos:line="27" pos:column="35"/></name></expr>)<pos:position pos:line="27" pos:column="36"/></condition><then pos:line="27" pos:column="36"> <expr_stmt><expr><block pos:line="27" pos:column="37">{
            <expr><call><name pos:line="28" pos:column="13">ap_log_error<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">APLOG_MARK<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">APLOG_ERR<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="49">0<pos:position pos:line="28" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="52">s<pos:position pos:line="28" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="55">APLOGNO<pos:position pos:line="28" pos:column="62"/></name><argument_list pos:line="28" pos:column="62">(<argument><expr><literal type="number" pos:line="28" pos:column="63">00818<pos:position pos:line="28" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call>
                         <literal type="string" pos:line="29" pos:column="26">"Could not use default path '%s' for shmcb socache"<pos:position pos:line="29" pos:column="77"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="30" pos:column="26">ctx<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">data_file<pos:position pos:line="30" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></block></expr></expr_stmt></then></if>
            <return pos:line="31" pos:column="13">return <expr><name pos:line="31" pos:column="20">APR_EINVAL<pos:position pos:line="31" pos:column="30"/></name></expr>;<pos:position pos:line="31" pos:column="31"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block>

        <comment type="block" pos:line="34" pos:column="9">/* For a name-based segment, remove it first in case of a
         * previous unclean shutdown. */</comment>
        <call><name pos:line="36" pos:column="9">apr_shm_remove<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name><name pos:line="36" pos:column="24">ctx<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">data_file<pos:position pos:line="36" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="40">p<pos:position pos:line="36" pos:column="41"/></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr></argument>;

        <argument><expr><name pos:line="38" pos:column="9">rv<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <call><name pos:line="38" pos:column="14">apr_shm_create<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><operator pos:line="38" pos:column="29">&amp;<pos:position pos:line="38" pos:column="34"/></operator><name><name pos:line="38" pos:column="30">ctx<pos:position pos:line="38" pos:column="33"/></name><operator pos:line="38" pos:column="33">-&gt;<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="35">shm<pos:position pos:line="38" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="40">ctx<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">-&gt;<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="45">shm_size<pos:position pos:line="38" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="55">ctx<pos:position pos:line="38" pos:column="58"/></name><operator pos:line="38" pos:column="58">-&gt;<pos:position pos:line="38" pos:column="63"/></operator><name pos:line="38" pos:column="60">data_file<pos:position pos:line="38" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="71">p<pos:position pos:line="38" pos:column="72"/></name></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr></argument>;
    }<pos:position pos:line="39" pos:column="6"/></argument_list>

    if <argument_list pos:line="41" pos:column="8">(<argument><expr><name pos:line="41" pos:column="9">rv<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">!=<pos:position pos:line="41" pos:column="14"/></operator> <name pos:line="41" pos:column="15">APR_SUCCESS<pos:position pos:line="41" pos:column="26"/></name></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list> <argument_list pos:line="41" pos:column="28">{
        <argument><expr><call><name pos:line="42" pos:column="9">ap_log_error<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">APLOG_MARK<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="34">APLOG_ERR<pos:position pos:line="42" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="45">rv<pos:position pos:line="42" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="49">s<pos:position pos:line="42" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="52">APLOGNO<pos:position pos:line="42" pos:column="59"/></name><argument_list pos:line="42" pos:column="59">(<argument><expr><literal type="number" pos:line="42" pos:column="60">00819<pos:position pos:line="42" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call>
                     <literal type="string" pos:line="43" pos:column="22">"Could not allocate shared memory segment for shmcb "<pos:position pos:line="43" pos:column="75"/></literal>
                     <literal type="string" pos:line="44" pos:column="22">"socache"<pos:position pos:line="44" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call></expr></argument>;
        return <argument><expr><name pos:line="45" pos:column="16">rv<pos:position pos:line="45" pos:column="18"/></name></expr></argument>;
    }<pos:position pos:line="46" pos:column="6"/></argument_list>

    <name pos:line="48" pos:column="5">shm_segment<pos:position pos:line="48" pos:column="16"/></name> <init pos:line="48" pos:column="17">= <expr><call><name pos:line="48" pos:column="19">apr_shm_baseaddr_get<pos:position pos:line="48" pos:column="39"/></name><argument_list pos:line="48" pos:column="39">(<argument><expr><name><name pos:line="48" pos:column="40">ctx<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">-&gt;<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="45">shm<pos:position pos:line="48" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="48" pos:column="50"/></decl_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">shm_segsize<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <call><name pos:line="49" pos:column="19">apr_shm_size_get<pos:position pos:line="49" pos:column="35"/></name><argument_list pos:line="49" pos:column="35">(<argument><expr><name><name pos:line="49" pos:column="36">ctx<pos:position pos:line="49" pos:column="39"/></name><operator pos:line="49" pos:column="39">-&gt;<pos:position pos:line="49" pos:column="44"/></operator><name pos:line="49" pos:column="41">shm<pos:position pos:line="49" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">shm_segsize<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">&lt;<pos:position pos:line="50" pos:column="25"/></operator> <operator pos:line="50" pos:column="23">(<pos:position pos:line="50" pos:column="24"/></operator><literal type="number" pos:line="50" pos:column="24">5<pos:position pos:line="50" pos:column="25"/></literal> <operator pos:line="50" pos:column="26">*<pos:position pos:line="50" pos:column="27"/></operator> <name pos:line="50" pos:column="28">ALIGNED_HEADER_SIZE<pos:position pos:line="50" pos:column="47"/></name><operator pos:line="50" pos:column="47">)<pos:position pos:line="50" pos:column="48"/></operator></expr>)<pos:position pos:line="50" pos:column="49"/></condition><then pos:line="50" pos:column="49"> <block pos:line="50" pos:column="50">{
        <comment type="block" pos:line="51" pos:column="9">/* the segment is ridiculously small, bail out */</comment>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">ap_log_error<pos:position pos:line="52" pos:column="21"/></name><argument_list pos:line="52" pos:column="21">(<argument><expr><name pos:line="52" pos:column="22">APLOG_MARK<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">APLOG_ERR<pos:position pos:line="52" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="45">0<pos:position pos:line="52" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="48">s<pos:position pos:line="52" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="51">APLOGNO<pos:position pos:line="52" pos:column="58"/></name><argument_list pos:line="52" pos:column="58">(<argument><expr><literal type="number" pos:line="52" pos:column="59">00820<pos:position pos:line="52" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="65"/></argument_list></call>
                     <literal type="string" pos:line="53" pos:column="22">"shared memory segment too small"<pos:position pos:line="53" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="57"/></expr_stmt>
        <return pos:line="54" pos:column="9">return <expr><name pos:line="54" pos:column="16">APR_ENOSPC<pos:position pos:line="54" pos:column="26"/></name></expr>;<pos:position pos:line="54" pos:column="27"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">ap_log_error<pos:position pos:line="56" pos:column="17"/></name><argument_list pos:line="56" pos:column="17">(<argument><expr><name pos:line="56" pos:column="18">APLOG_MARK<pos:position pos:line="56" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="30">APLOG_DEBUG<pos:position pos:line="56" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="43">0<pos:position pos:line="56" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="46">s<pos:position pos:line="56" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="49">APLOGNO<pos:position pos:line="56" pos:column="56"/></name><argument_list pos:line="56" pos:column="56">(<argument><expr><literal type="number" pos:line="56" pos:column="57">00821<pos:position pos:line="56" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="63"/></argument_list></call>
                 <literal type="string" pos:line="57" pos:column="18">"shmcb_init allocated %"<pos:position pos:line="57" pos:column="42"/></literal> <name pos:line="57" pos:column="43">APR_SIZE_T_FMT<pos:position pos:line="57" pos:column="57"/></name>
                 <literal type="string" pos:line="58" pos:column="18">" bytes of shared memory"<pos:position pos:line="58" pos:column="43"/></literal></expr></argument>,
                 <argument><expr><name pos:line="59" pos:column="18">shm_segsize<pos:position pos:line="59" pos:column="29"/></name></expr></argument>)<pos:position pos:line="59" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="31"/></expr_stmt>
    <comment type="block" pos:line="60" pos:column="5">/* Discount the header */</comment>
    <expr_stmt><expr><name pos:line="61" pos:column="5">shm_segsize<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">-=<pos:position pos:line="61" pos:column="19"/></operator> <name pos:line="61" pos:column="20">ALIGNED_HEADER_SIZE<pos:position pos:line="61" pos:column="39"/></name></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt>
    <comment type="block" pos:line="62" pos:column="5">/* Select index size based on average object size hints, if given. */</comment>
    <expr_stmt><expr><name pos:line="63" pos:column="5">avg_obj_size<pos:position pos:line="63" pos:column="17"/></name> <operator pos:line="63" pos:column="18">=<pos:position pos:line="63" pos:column="19"/></operator> <ternary><condition><expr><name pos:line="63" pos:column="20">hints<pos:position pos:line="63" pos:column="25"/></name> <operator pos:line="63" pos:column="26">&amp;&amp;<pos:position pos:line="63" pos:column="36"/></operator> <name><name pos:line="63" pos:column="29">hints<pos:position pos:line="63" pos:column="34"/></name><operator pos:line="63" pos:column="34">-&gt;<pos:position pos:line="63" pos:column="39"/></operator><name pos:line="63" pos:column="36">avg_obj_size<pos:position pos:line="63" pos:column="48"/></name></name></expr> ?<pos:position pos:line="63" pos:column="50"/></condition><then pos:line="63" pos:column="50"> <expr><name><name pos:line="63" pos:column="51">hints<pos:position pos:line="63" pos:column="56"/></name><operator pos:line="63" pos:column="56">-&gt;<pos:position pos:line="63" pos:column="61"/></operator><name pos:line="63" pos:column="58">avg_obj_size<pos:position pos:line="63" pos:column="70"/></name></name></expr> <pos:position pos:line="63" pos:column="71"/></then><else pos:line="63" pos:column="71">: <expr><literal type="number" pos:line="63" pos:column="73">150<pos:position pos:line="63" pos:column="76"/></literal></expr></else></ternary></expr>;<pos:position pos:line="63" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><name pos:line="64" pos:column="5">avg_id_len<pos:position pos:line="64" pos:column="15"/></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator> <ternary><condition><expr><name pos:line="64" pos:column="18">hints<pos:position pos:line="64" pos:column="23"/></name> <operator pos:line="64" pos:column="24">&amp;&amp;<pos:position pos:line="64" pos:column="34"/></operator> <name><name pos:line="64" pos:column="27">hints<pos:position pos:line="64" pos:column="32"/></name><operator pos:line="64" pos:column="32">-&gt;<pos:position pos:line="64" pos:column="37"/></operator><name pos:line="64" pos:column="34">avg_id_len<pos:position pos:line="64" pos:column="44"/></name></name></expr> ?<pos:position pos:line="64" pos:column="46"/></condition><then pos:line="64" pos:column="46"> <expr><name><name pos:line="64" pos:column="47">hints<pos:position pos:line="64" pos:column="52"/></name><operator pos:line="64" pos:column="52">-&gt;<pos:position pos:line="64" pos:column="57"/></operator><name pos:line="64" pos:column="54">avg_id_len<pos:position pos:line="64" pos:column="64"/></name></name></expr> <pos:position pos:line="64" pos:column="65"/></then><else pos:line="64" pos:column="65">: <expr><literal type="number" pos:line="64" pos:column="67">30<pos:position pos:line="64" pos:column="69"/></literal></expr></else></ternary></expr>;<pos:position pos:line="64" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name pos:line="65" pos:column="5">num_idx<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">=<pos:position pos:line="65" pos:column="14"/></operator> <operator pos:line="65" pos:column="15">(<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="16">shm_segsize<pos:position pos:line="65" pos:column="27"/></name><operator pos:line="65" pos:column="27">)<pos:position pos:line="65" pos:column="28"/></operator> <operator pos:line="65" pos:column="29">/<pos:position pos:line="65" pos:column="30"/></operator> <operator pos:line="65" pos:column="31">(<pos:position pos:line="65" pos:column="32"/></operator><name pos:line="65" pos:column="32">avg_obj_size<pos:position pos:line="65" pos:column="44"/></name> <operator pos:line="65" pos:column="45">+<pos:position pos:line="65" pos:column="46"/></operator> <name pos:line="65" pos:column="47">avg_id_len<pos:position pos:line="65" pos:column="57"/></name><operator pos:line="65" pos:column="57">)<pos:position pos:line="65" pos:column="58"/></operator></expr>;<pos:position pos:line="65" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="66" pos:column="5">num_subcache<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">=<pos:position pos:line="66" pos:column="19"/></operator> <literal type="number" pos:line="66" pos:column="20">256<pos:position pos:line="66" pos:column="23"/></literal></expr>;<pos:position pos:line="66" pos:column="24"/></expr_stmt>
    <while pos:line="67" pos:column="5">while <condition pos:line="67" pos:column="11">(<expr><operator pos:line="67" pos:column="12">(<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="13">num_idx<pos:position pos:line="67" pos:column="20"/></name> <operator pos:line="67" pos:column="21">/<pos:position pos:line="67" pos:column="22"/></operator> <name pos:line="67" pos:column="23">num_subcache<pos:position pos:line="67" pos:column="35"/></name><operator pos:line="67" pos:column="35">)<pos:position pos:line="67" pos:column="36"/></operator> <operator pos:line="67" pos:column="37">&lt;<pos:position pos:line="67" pos:column="41"/></operator> <operator pos:line="67" pos:column="39">(<pos:position pos:line="67" pos:column="40"/></operator><literal type="number" pos:line="67" pos:column="40">2<pos:position pos:line="67" pos:column="41"/></literal> <operator pos:line="67" pos:column="42">*<pos:position pos:line="67" pos:column="43"/></operator> <name pos:line="67" pos:column="44">num_subcache<pos:position pos:line="67" pos:column="56"/></name><operator pos:line="67" pos:column="56">)<pos:position pos:line="67" pos:column="57"/></operator></expr>)<pos:position pos:line="67" pos:column="58"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="68" pos:column="9">num_subcache<pos:position pos:line="68" pos:column="21"/></name> <operator pos:line="68" pos:column="22">/=<pos:position pos:line="68" pos:column="24"/></operator> <literal type="number" pos:line="68" pos:column="25">2<pos:position pos:line="68" pos:column="26"/></literal></expr>;<pos:position pos:line="68" pos:column="27"/></expr_stmt></block></while>
    <expr_stmt><expr><name pos:line="69" pos:column="5">num_idx<pos:position pos:line="69" pos:column="12"/></name> <operator pos:line="69" pos:column="13">/=<pos:position pos:line="69" pos:column="15"/></operator> <name pos:line="69" pos:column="16">num_subcache<pos:position pos:line="69" pos:column="28"/></name></expr>;<pos:position pos:line="69" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">ap_log_error<pos:position pos:line="70" pos:column="17"/></name><argument_list pos:line="70" pos:column="17">(<argument><expr><name pos:line="70" pos:column="18">APLOG_MARK<pos:position pos:line="70" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="30">APLOG_DEBUG<pos:position pos:line="70" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="43">0<pos:position pos:line="70" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="46">s<pos:position pos:line="70" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="70" pos:column="49">APLOGNO<pos:position pos:line="70" pos:column="56"/></name><argument_list pos:line="70" pos:column="56">(<argument><expr><literal type="number" pos:line="70" pos:column="57">00822<pos:position pos:line="70" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="63"/></argument_list></call>
                 <literal type="string" pos:line="71" pos:column="18">"for %"<pos:position pos:line="71" pos:column="25"/></literal> <name pos:line="71" pos:column="26">APR_SIZE_T_FMT<pos:position pos:line="71" pos:column="40"/></name> <literal type="string" pos:line="71" pos:column="41">" bytes (%"<pos:position pos:line="71" pos:column="52"/></literal> <name pos:line="71" pos:column="53">APR_SIZE_T_FMT<pos:position pos:line="71" pos:column="67"/></name>
                 <literal type="string" pos:line="72" pos:column="18">" including header), recommending %u subcaches, "<pos:position pos:line="72" pos:column="67"/></literal>
                 <literal type="string" pos:line="73" pos:column="18">"%u indexes each"<pos:position pos:line="73" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="37">shm_segsize<pos:position pos:line="73" pos:column="48"/></name></expr></argument>,
                 <argument><expr><name pos:line="74" pos:column="18">shm_segsize<pos:position pos:line="74" pos:column="29"/></name> <operator pos:line="74" pos:column="30">+<pos:position pos:line="74" pos:column="31"/></operator> <name pos:line="74" pos:column="32">ALIGNED_HEADER_SIZE<pos:position pos:line="74" pos:column="51"/></name></expr></argument>,
                 <argument><expr><name pos:line="75" pos:column="18">num_subcache<pos:position pos:line="75" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="32">num_idx<pos:position pos:line="75" pos:column="39"/></name></expr></argument>)<pos:position pos:line="75" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="41"/></expr_stmt>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">num_idx<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">&lt;<pos:position pos:line="76" pos:column="21"/></operator> <literal type="number" pos:line="76" pos:column="19">5<pos:position pos:line="76" pos:column="20"/></literal></expr>)<pos:position pos:line="76" pos:column="21"/></condition><then pos:line="76" pos:column="21"> <block pos:line="76" pos:column="22">{
        <comment type="block" pos:line="77" pos:column="9">/* we're still too small, bail out */</comment>
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">ap_log_error<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">(<argument><expr><name pos:line="78" pos:column="22">APLOG_MARK<pos:position pos:line="78" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="34">APLOG_ERR<pos:position pos:line="78" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="45">0<pos:position pos:line="78" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="48">s<pos:position pos:line="78" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="78" pos:column="51">APLOGNO<pos:position pos:line="78" pos:column="58"/></name><argument_list pos:line="78" pos:column="58">(<argument><expr><literal type="number" pos:line="78" pos:column="59">00823<pos:position pos:line="78" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="65"/></argument_list></call>
                     <literal type="string" pos:line="79" pos:column="22">"shared memory segment too small"<pos:position pos:line="79" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="57"/></expr_stmt>
        <return pos:line="80" pos:column="9">return <expr><name pos:line="80" pos:column="16">APR_ENOSPC<pos:position pos:line="80" pos:column="26"/></name></expr>;<pos:position pos:line="80" pos:column="27"/></return>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="82" pos:column="5">/* OK, we're sorted */</comment>
    <expr_stmt><expr><name><name pos:line="83" pos:column="5">ctx<pos:position pos:line="83" pos:column="8"/></name><operator pos:line="83" pos:column="8">-&gt;<pos:position pos:line="83" pos:column="13"/></operator><name pos:line="83" pos:column="10">header<pos:position pos:line="83" pos:column="16"/></name></name> <operator pos:line="83" pos:column="17">=<pos:position pos:line="83" pos:column="18"/></operator> <name pos:line="83" pos:column="19">header<pos:position pos:line="83" pos:column="25"/></name> <operator pos:line="83" pos:column="26">=<pos:position pos:line="83" pos:column="27"/></operator> <name pos:line="83" pos:column="28">shm_segment<pos:position pos:line="83" pos:column="39"/></name></expr>;<pos:position pos:line="83" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">header<pos:position pos:line="84" pos:column="11"/></name><operator pos:line="84" pos:column="11">-&gt;<pos:position pos:line="84" pos:column="16"/></operator><name pos:line="84" pos:column="13">stat_stores<pos:position pos:line="84" pos:column="24"/></name></name> <operator pos:line="84" pos:column="25">=<pos:position pos:line="84" pos:column="26"/></operator> <literal type="number" pos:line="84" pos:column="27">0<pos:position pos:line="84" pos:column="28"/></literal></expr>;<pos:position pos:line="84" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="85" pos:column="5">header<pos:position pos:line="85" pos:column="11"/></name><operator pos:line="85" pos:column="11">-&gt;<pos:position pos:line="85" pos:column="16"/></operator><name pos:line="85" pos:column="13">stat_replaced<pos:position pos:line="85" pos:column="26"/></name></name> <operator pos:line="85" pos:column="27">=<pos:position pos:line="85" pos:column="28"/></operator> <literal type="number" pos:line="85" pos:column="29">0<pos:position pos:line="85" pos:column="30"/></literal></expr>;<pos:position pos:line="85" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="86" pos:column="5">header<pos:position pos:line="86" pos:column="11"/></name><operator pos:line="86" pos:column="11">-&gt;<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="13">stat_expiries<pos:position pos:line="86" pos:column="26"/></name></name> <operator pos:line="86" pos:column="27">=<pos:position pos:line="86" pos:column="28"/></operator> <literal type="number" pos:line="86" pos:column="29">0<pos:position pos:line="86" pos:column="30"/></literal></expr>;<pos:position pos:line="86" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="87" pos:column="5">header<pos:position pos:line="87" pos:column="11"/></name><operator pos:line="87" pos:column="11">-&gt;<pos:position pos:line="87" pos:column="16"/></operator><name pos:line="87" pos:column="13">stat_scrolled<pos:position pos:line="87" pos:column="26"/></name></name> <operator pos:line="87" pos:column="27">=<pos:position pos:line="87" pos:column="28"/></operator> <literal type="number" pos:line="87" pos:column="29">0<pos:position pos:line="87" pos:column="30"/></literal></expr>;<pos:position pos:line="87" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="88" pos:column="5">header<pos:position pos:line="88" pos:column="11"/></name><operator pos:line="88" pos:column="11">-&gt;<pos:position pos:line="88" pos:column="16"/></operator><name pos:line="88" pos:column="13">stat_retrieves_hit<pos:position pos:line="88" pos:column="31"/></name></name> <operator pos:line="88" pos:column="32">=<pos:position pos:line="88" pos:column="33"/></operator> <literal type="number" pos:line="88" pos:column="34">0<pos:position pos:line="88" pos:column="35"/></literal></expr>;<pos:position pos:line="88" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="89" pos:column="5">header<pos:position pos:line="89" pos:column="11"/></name><operator pos:line="89" pos:column="11">-&gt;<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="13">stat_retrieves_miss<pos:position pos:line="89" pos:column="32"/></name></name> <operator pos:line="89" pos:column="33">=<pos:position pos:line="89" pos:column="34"/></operator> <literal type="number" pos:line="89" pos:column="35">0<pos:position pos:line="89" pos:column="36"/></literal></expr>;<pos:position pos:line="89" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="90" pos:column="5">header<pos:position pos:line="90" pos:column="11"/></name><operator pos:line="90" pos:column="11">-&gt;<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="13">stat_removes_hit<pos:position pos:line="90" pos:column="29"/></name></name> <operator pos:line="90" pos:column="30">=<pos:position pos:line="90" pos:column="31"/></operator> <literal type="number" pos:line="90" pos:column="32">0<pos:position pos:line="90" pos:column="33"/></literal></expr>;<pos:position pos:line="90" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="91" pos:column="5">header<pos:position pos:line="91" pos:column="11"/></name><operator pos:line="91" pos:column="11">-&gt;<pos:position pos:line="91" pos:column="16"/></operator><name pos:line="91" pos:column="13">stat_removes_miss<pos:position pos:line="91" pos:column="30"/></name></name> <operator pos:line="91" pos:column="31">=<pos:position pos:line="91" pos:column="32"/></operator> <literal type="number" pos:line="91" pos:column="33">0<pos:position pos:line="91" pos:column="34"/></literal></expr>;<pos:position pos:line="91" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="92" pos:column="5">header<pos:position pos:line="92" pos:column="11"/></name><operator pos:line="92" pos:column="11">-&gt;<pos:position pos:line="92" pos:column="16"/></operator><name pos:line="92" pos:column="13">subcache_num<pos:position pos:line="92" pos:column="25"/></name></name> <operator pos:line="92" pos:column="26">=<pos:position pos:line="92" pos:column="27"/></operator> <name pos:line="92" pos:column="28">num_subcache<pos:position pos:line="92" pos:column="40"/></name></expr>;<pos:position pos:line="92" pos:column="41"/></expr_stmt>
    <comment type="block" pos:line="93" pos:column="5">/* Convert the subcache size (in bytes) to a value that is suitable for
     * structure alignment on the host platform, by rounding down if necessary. */</comment>
    <expr_stmt><expr><name><name pos:line="95" pos:column="5">header<pos:position pos:line="95" pos:column="11"/></name><operator pos:line="95" pos:column="11">-&gt;<pos:position pos:line="95" pos:column="16"/></operator><name pos:line="95" pos:column="13">subcache_size<pos:position pos:line="95" pos:column="26"/></name></name> <operator pos:line="95" pos:column="27">=<pos:position pos:line="95" pos:column="28"/></operator> <call pos:line="95" pos:column="29">(<name pos:line="95" pos:column="30">size_t<pos:position pos:line="95" pos:column="36"/></name>)<argument_list pos:line="95" pos:column="37">(<argument><expr><name pos:line="95" pos:column="38">shm_segsize<pos:position pos:line="95" pos:column="49"/></name> <operator pos:line="95" pos:column="50">/<pos:position pos:line="95" pos:column="51"/></operator> <name pos:line="95" pos:column="52">num_subcache<pos:position pos:line="95" pos:column="64"/></name></expr></argument>)<pos:position pos:line="95" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="66"/></expr_stmt>
    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name><name pos:line="96" pos:column="9">header<pos:position pos:line="96" pos:column="15"/></name><operator pos:line="96" pos:column="15">-&gt;<pos:position pos:line="96" pos:column="20"/></operator><name pos:line="96" pos:column="17">subcache_size<pos:position pos:line="96" pos:column="30"/></name></name> <operator pos:line="96" pos:column="31">!=<pos:position pos:line="96" pos:column="33"/></operator> <call><name pos:line="96" pos:column="34">APR_ALIGN_DEFAULT<pos:position pos:line="96" pos:column="51"/></name><argument_list pos:line="96" pos:column="51">(<argument><expr><name><name pos:line="96" pos:column="52">header<pos:position pos:line="96" pos:column="58"/></name><operator pos:line="96" pos:column="58">-&gt;<pos:position pos:line="96" pos:column="63"/></operator><name pos:line="96" pos:column="60">subcache_size<pos:position pos:line="96" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="75"/></condition><then pos:line="96" pos:column="75"> <block pos:line="96" pos:column="76">{
        <expr_stmt><expr><name><name pos:line="97" pos:column="9">header<pos:position pos:line="97" pos:column="15"/></name><operator pos:line="97" pos:column="15">-&gt;<pos:position pos:line="97" pos:column="20"/></operator><name pos:line="97" pos:column="17">subcache_size<pos:position pos:line="97" pos:column="30"/></name></name> <operator pos:line="97" pos:column="31">=<pos:position pos:line="97" pos:column="32"/></operator> <call><name pos:line="97" pos:column="33">APR_ALIGN_DEFAULT<pos:position pos:line="97" pos:column="50"/></name><argument_list pos:line="97" pos:column="50">(<argument><expr><name><name pos:line="97" pos:column="51">header<pos:position pos:line="97" pos:column="57"/></name><operator pos:line="97" pos:column="57">-&gt;<pos:position pos:line="97" pos:column="62"/></operator><name pos:line="97" pos:column="59">subcache_size<pos:position pos:line="97" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="73"/></argument_list></call> <operator pos:line="97" pos:column="74">-<pos:position pos:line="97" pos:column="75"/></operator>
                                <call><name pos:line="98" pos:column="33">APR_ALIGN_DEFAULT<pos:position pos:line="98" pos:column="50"/></name><argument_list pos:line="98" pos:column="50">(<argument><expr><literal type="number" pos:line="98" pos:column="51">1<pos:position pos:line="98" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="100" pos:column="5">header<pos:position pos:line="100" pos:column="11"/></name><operator pos:line="100" pos:column="11">-&gt;<pos:position pos:line="100" pos:column="16"/></operator><name pos:line="100" pos:column="13">subcache_data_offset<pos:position pos:line="100" pos:column="33"/></name></name> <operator pos:line="100" pos:column="34">=<pos:position pos:line="100" pos:column="35"/></operator> <name pos:line="100" pos:column="36">ALIGNED_SUBCACHE_SIZE<pos:position pos:line="100" pos:column="57"/></name> <operator pos:line="100" pos:column="58">+<pos:position pos:line="100" pos:column="59"/></operator>
                                   <name pos:line="101" pos:column="36">num_idx<pos:position pos:line="101" pos:column="43"/></name> <operator pos:line="101" pos:column="44">*<pos:position pos:line="101" pos:column="45"/></operator> <name pos:line="101" pos:column="46">ALIGNED_INDEX_SIZE<pos:position pos:line="101" pos:column="64"/></name></expr>;<pos:position pos:line="101" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="102" pos:column="5">header<pos:position pos:line="102" pos:column="11"/></name><operator pos:line="102" pos:column="11">-&gt;<pos:position pos:line="102" pos:column="16"/></operator><name pos:line="102" pos:column="13">subcache_data_size<pos:position pos:line="102" pos:column="31"/></name></name> <operator pos:line="102" pos:column="32">=<pos:position pos:line="102" pos:column="33"/></operator> <name><name pos:line="102" pos:column="34">header<pos:position pos:line="102" pos:column="40"/></name><operator pos:line="102" pos:column="40">-&gt;<pos:position pos:line="102" pos:column="45"/></operator><name pos:line="102" pos:column="42">subcache_size<pos:position pos:line="102" pos:column="55"/></name></name> <operator pos:line="102" pos:column="56">-<pos:position pos:line="102" pos:column="57"/></operator>
                                 <name><name pos:line="103" pos:column="34">header<pos:position pos:line="103" pos:column="40"/></name><operator pos:line="103" pos:column="40">-&gt;<pos:position pos:line="103" pos:column="45"/></operator><name pos:line="103" pos:column="42">subcache_data_offset<pos:position pos:line="103" pos:column="62"/></name></name></expr>;<pos:position pos:line="103" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="104" pos:column="5">header<pos:position pos:line="104" pos:column="11"/></name><operator pos:line="104" pos:column="11">-&gt;<pos:position pos:line="104" pos:column="16"/></operator><name pos:line="104" pos:column="13">index_num<pos:position pos:line="104" pos:column="22"/></name></name> <operator pos:line="104" pos:column="23">=<pos:position pos:line="104" pos:column="24"/></operator> <name pos:line="104" pos:column="25">num_idx<pos:position pos:line="104" pos:column="32"/></name></expr>;<pos:position pos:line="104" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="106" pos:column="5">/* Output trace info */</comment>
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">ap_log_error<pos:position pos:line="107" pos:column="17"/></name><argument_list pos:line="107" pos:column="17">(<argument><expr><name pos:line="107" pos:column="18">APLOG_MARK<pos:position pos:line="107" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="30">APLOG_DEBUG<pos:position pos:line="107" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="43">0<pos:position pos:line="107" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="46">s<pos:position pos:line="107" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="107" pos:column="49">APLOGNO<pos:position pos:line="107" pos:column="56"/></name><argument_list pos:line="107" pos:column="56">(<argument><expr><literal type="number" pos:line="107" pos:column="57">00824<pos:position pos:line="107" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="63"/></argument_list></call>
                 <literal type="string" pos:line="108" pos:column="18">"shmcb_init_memory choices follow"<pos:position pos:line="108" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="109" pos:column="5">ap_log_error<pos:position pos:line="109" pos:column="17"/></name><argument_list pos:line="109" pos:column="17">(<argument><expr><name pos:line="109" pos:column="18">APLOG_MARK<pos:position pos:line="109" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="30">APLOG_DEBUG<pos:position pos:line="109" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="43">0<pos:position pos:line="109" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="46">s<pos:position pos:line="109" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="109" pos:column="49">APLOGNO<pos:position pos:line="109" pos:column="56"/></name><argument_list pos:line="109" pos:column="56">(<argument><expr><literal type="number" pos:line="109" pos:column="57">00825<pos:position pos:line="109" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="63"/></argument_list></call>
                 <literal type="string" pos:line="110" pos:column="18">"subcache_num = %u"<pos:position pos:line="110" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="39">header<pos:position pos:line="110" pos:column="45"/></name><operator pos:line="110" pos:column="45">-&gt;<pos:position pos:line="110" pos:column="50"/></operator><name pos:line="110" pos:column="47">subcache_num<pos:position pos:line="110" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">ap_log_error<pos:position pos:line="111" pos:column="17"/></name><argument_list pos:line="111" pos:column="17">(<argument><expr><name pos:line="111" pos:column="18">APLOG_MARK<pos:position pos:line="111" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="30">APLOG_DEBUG<pos:position pos:line="111" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="43">0<pos:position pos:line="111" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="46">s<pos:position pos:line="111" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="111" pos:column="49">APLOGNO<pos:position pos:line="111" pos:column="56"/></name><argument_list pos:line="111" pos:column="56">(<argument><expr><literal type="number" pos:line="111" pos:column="57">00826<pos:position pos:line="111" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="63"/></argument_list></call>
                 <literal type="string" pos:line="112" pos:column="18">"subcache_size = %u"<pos:position pos:line="112" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="40">header<pos:position pos:line="112" pos:column="46"/></name><operator pos:line="112" pos:column="46">-&gt;<pos:position pos:line="112" pos:column="51"/></operator><name pos:line="112" pos:column="48">subcache_size<pos:position pos:line="112" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="113" pos:column="5">ap_log_error<pos:position pos:line="113" pos:column="17"/></name><argument_list pos:line="113" pos:column="17">(<argument><expr><name pos:line="113" pos:column="18">APLOG_MARK<pos:position pos:line="113" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="30">APLOG_DEBUG<pos:position pos:line="113" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="43">0<pos:position pos:line="113" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="46">s<pos:position pos:line="113" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="113" pos:column="49">APLOGNO<pos:position pos:line="113" pos:column="56"/></name><argument_list pos:line="113" pos:column="56">(<argument><expr><literal type="number" pos:line="113" pos:column="57">00827<pos:position pos:line="113" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="63"/></argument_list></call>
                 <literal type="string" pos:line="114" pos:column="18">"subcache_data_offset = %u"<pos:position pos:line="114" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="47">header<pos:position pos:line="114" pos:column="53"/></name><operator pos:line="114" pos:column="53">-&gt;<pos:position pos:line="114" pos:column="58"/></operator><name pos:line="114" pos:column="55">subcache_data_offset<pos:position pos:line="114" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="115" pos:column="5">ap_log_error<pos:position pos:line="115" pos:column="17"/></name><argument_list pos:line="115" pos:column="17">(<argument><expr><name pos:line="115" pos:column="18">APLOG_MARK<pos:position pos:line="115" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="30">APLOG_DEBUG<pos:position pos:line="115" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="115" pos:column="43">0<pos:position pos:line="115" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="115" pos:column="46">s<pos:position pos:line="115" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="115" pos:column="49">APLOGNO<pos:position pos:line="115" pos:column="56"/></name><argument_list pos:line="115" pos:column="56">(<argument><expr><literal type="number" pos:line="115" pos:column="57">00828<pos:position pos:line="115" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="63"/></argument_list></call>
                 <literal type="string" pos:line="116" pos:column="18">"subcache_data_size = %u"<pos:position pos:line="116" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="45">header<pos:position pos:line="116" pos:column="51"/></name><operator pos:line="116" pos:column="51">-&gt;<pos:position pos:line="116" pos:column="56"/></operator><name pos:line="116" pos:column="53">subcache_data_size<pos:position pos:line="116" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="117" pos:column="5">ap_log_error<pos:position pos:line="117" pos:column="17"/></name><argument_list pos:line="117" pos:column="17">(<argument><expr><name pos:line="117" pos:column="18">APLOG_MARK<pos:position pos:line="117" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="30">APLOG_DEBUG<pos:position pos:line="117" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="43">0<pos:position pos:line="117" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="117" pos:column="46">s<pos:position pos:line="117" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="117" pos:column="49">APLOGNO<pos:position pos:line="117" pos:column="56"/></name><argument_list pos:line="117" pos:column="56">(<argument><expr><literal type="number" pos:line="117" pos:column="57">00829<pos:position pos:line="117" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="63"/></argument_list></call>
                 <literal type="string" pos:line="118" pos:column="18">"index_num = %u"<pos:position pos:line="118" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="36">header<pos:position pos:line="118" pos:column="42"/></name><operator pos:line="118" pos:column="42">-&gt;<pos:position pos:line="118" pos:column="47"/></operator><name pos:line="118" pos:column="44">index_num<pos:position pos:line="118" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="55"/></expr_stmt>
    <comment type="block" pos:line="119" pos:column="5">/* The header is done, make the caches empty */</comment>
    <for pos:line="120" pos:column="5">for <control pos:line="120" pos:column="9">(<init><expr><name pos:line="120" pos:column="10">loop<pos:position pos:line="120" pos:column="14"/></name> <operator pos:line="120" pos:column="15">=<pos:position pos:line="120" pos:column="16"/></operator> <literal type="number" pos:line="120" pos:column="17">0<pos:position pos:line="120" pos:column="18"/></literal></expr>;<pos:position pos:line="120" pos:column="19"/></init> <condition><expr><name pos:line="120" pos:column="20">loop<pos:position pos:line="120" pos:column="24"/></name> <operator pos:line="120" pos:column="25">&lt;<pos:position pos:line="120" pos:column="29"/></operator> <name><name pos:line="120" pos:column="27">header<pos:position pos:line="120" pos:column="33"/></name><operator pos:line="120" pos:column="33">-&gt;<pos:position pos:line="120" pos:column="38"/></operator><name pos:line="120" pos:column="35">subcache_num<pos:position pos:line="120" pos:column="47"/></name></name></expr>;<pos:position pos:line="120" pos:column="48"/></condition> <incr><expr><name pos:line="120" pos:column="49">loop<pos:position pos:line="120" pos:column="53"/></name><operator pos:line="120" pos:column="53">++<pos:position pos:line="120" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="120" pos:column="56"/></control> <block pos:line="120" pos:column="57">{
        <decl_stmt><decl><type><name pos:line="121" pos:column="9">SHMCBSubcache<pos:position pos:line="121" pos:column="22"/></name> <modifier pos:line="121" pos:column="23">*<pos:position pos:line="121" pos:column="24"/></modifier></type><name pos:line="121" pos:column="24">subcache<pos:position pos:line="121" pos:column="32"/></name> <init pos:line="121" pos:column="33">= <expr><call><name pos:line="121" pos:column="35">SHMCB_SUBCACHE<pos:position pos:line="121" pos:column="49"/></name><argument_list pos:line="121" pos:column="49">(<argument><expr><name pos:line="121" pos:column="50">header<pos:position pos:line="121" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="58">loop<pos:position pos:line="121" pos:column="62"/></name></expr></argument>)<pos:position pos:line="121" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="121" pos:column="64"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="122" pos:column="9">subcache<pos:position pos:line="122" pos:column="17"/></name><operator pos:line="122" pos:column="17">-&gt;<pos:position pos:line="122" pos:column="22"/></operator><name pos:line="122" pos:column="19">idx_pos<pos:position pos:line="122" pos:column="26"/></name></name> <operator pos:line="122" pos:column="27">=<pos:position pos:line="122" pos:column="28"/></operator> <name><name pos:line="122" pos:column="29">subcache<pos:position pos:line="122" pos:column="37"/></name><operator pos:line="122" pos:column="37">-&gt;<pos:position pos:line="122" pos:column="42"/></operator><name pos:line="122" pos:column="39">idx_used<pos:position pos:line="122" pos:column="47"/></name></name> <operator pos:line="122" pos:column="48">=<pos:position pos:line="122" pos:column="49"/></operator> <literal type="number" pos:line="122" pos:column="50">0<pos:position pos:line="122" pos:column="51"/></literal></expr>;<pos:position pos:line="122" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="123" pos:column="9">subcache<pos:position pos:line="123" pos:column="17"/></name><operator pos:line="123" pos:column="17">-&gt;<pos:position pos:line="123" pos:column="22"/></operator><name pos:line="123" pos:column="19">data_pos<pos:position pos:line="123" pos:column="27"/></name></name> <operator pos:line="123" pos:column="28">=<pos:position pos:line="123" pos:column="29"/></operator> <name><name pos:line="123" pos:column="30">subcache<pos:position pos:line="123" pos:column="38"/></name><operator pos:line="123" pos:column="38">-&gt;<pos:position pos:line="123" pos:column="43"/></operator><name pos:line="123" pos:column="40">data_used<pos:position pos:line="123" pos:column="49"/></name></name> <operator pos:line="123" pos:column="50">=<pos:position pos:line="123" pos:column="51"/></operator> <literal type="number" pos:line="123" pos:column="52">0<pos:position pos:line="123" pos:column="53"/></literal></expr>;<pos:position pos:line="123" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="124" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="125" pos:column="5">ap_log_error<pos:position pos:line="125" pos:column="17"/></name><argument_list pos:line="125" pos:column="17">(<argument><expr><name pos:line="125" pos:column="18">APLOG_MARK<pos:position pos:line="125" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="30">APLOG_INFO<pos:position pos:line="125" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="42">0<pos:position pos:line="125" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="45">s<pos:position pos:line="125" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="125" pos:column="48">APLOGNO<pos:position pos:line="125" pos:column="55"/></name><argument_list pos:line="125" pos:column="55">(<argument><expr><literal type="number" pos:line="125" pos:column="56">00830<pos:position pos:line="125" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="62"/></argument_list></call>
                 <literal type="string" pos:line="126" pos:column="18">"Shared memory socache initialised"<pos:position pos:line="126" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="55"/></expr_stmt>
    <comment type="block" pos:line="127" pos:column="5">/* Success ... */</comment>

    <return pos:line="129" pos:column="5">return <expr><name pos:line="129" pos:column="12">APR_SUCCESS<pos:position pos:line="129" pos:column="23"/></name></expr>;<pos:position pos:line="129" pos:column="24"/></return>
}</unit>

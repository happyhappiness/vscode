<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6020.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_mplx_in_read<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">h2_mplx<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">m<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">apr_read_type_e<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">block<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">stream_id<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">apr_bucket_brigade<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">bb<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>, 
                             <parameter><decl><type><name pos:line="3" pos:column="30">apr_table_t<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">trailers<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>,
                             <parameter><decl><type><name><name pos:line="4" pos:column="30">struct<pos:position pos:line="4" pos:column="36"/></name> <name pos:line="4" pos:column="37">apr_thread_cond_t<pos:position pos:line="4" pos:column="54"/></name></name> <modifier pos:line="4" pos:column="55">*<pos:position pos:line="4" pos:column="56"/></modifier></type><name pos:line="4" pos:column="56">iowait<pos:position pos:line="4" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="63"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">status<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt> 
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">acquired<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">m<pos:position pos:line="9" pos:column="22"/></name></expr></argument>)<pos:position pos:line="9" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">status<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <call><name pos:line="10" pos:column="19">enter_mutex<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">m<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="34">&amp;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="35">acquired<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call><operator pos:line="10" pos:column="44">)<pos:position pos:line="10" pos:column="45"/></operator> <operator pos:line="10" pos:column="46">==<pos:position pos:line="10" pos:column="48"/></operator> <name pos:line="10" pos:column="49">APR_SUCCESS<pos:position pos:line="10" pos:column="60"/></name></expr>)<pos:position pos:line="10" pos:column="61"/></condition><then pos:line="10" pos:column="61"> <block pos:line="10" pos:column="62">{
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">h2_io<pos:position pos:line="11" pos:column="14"/></name> <modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">io<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><call><name pos:line="11" pos:column="21">h2_io_set_get<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name><name pos:line="11" pos:column="35">m<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">stream_ios<pos:position pos:line="11" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">stream_id<pos:position pos:line="11" pos:column="59"/></name></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="61"/></decl_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">io<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&amp;&amp;<pos:position pos:line="12" pos:column="26"/></operator> <operator pos:line="12" pos:column="19">!<pos:position pos:line="12" pos:column="20"/></operator><name><name pos:line="12" pos:column="20">io<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">orphaned<pos:position pos:line="12" pos:column="32"/></name></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33"> <block pos:line="12" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">H2_MPLX_IO_IN<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">APLOG_TRACE2<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="41">m<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">io<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="48">"h2_mplx_in_read_pre"<pos:position pos:line="13" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></expr_stmt>
            
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">h2_io_signal_init<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">io<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">H2_IO_READ<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="47">m<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">-&gt;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="50">stream_timeout<pos:position pos:line="15" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="66">iowait<pos:position pos:line="15" pos:column="72"/></name></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><name pos:line="16" pos:column="13">status<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <call><name pos:line="16" pos:column="22">h2_io_in_read<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">io<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">bb<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="44">-<pos:position pos:line="16" pos:column="45"/></operator><literal type="number" pos:line="16" pos:column="45">1<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">trailers<pos:position pos:line="16" pos:column="56"/></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt>
            <while pos:line="17" pos:column="13">while <condition pos:line="17" pos:column="19">(<expr><call><name pos:line="17" pos:column="20">APR_STATUS_IS_EAGAIN<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name pos:line="17" pos:column="41">status<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call> 
                   <operator pos:line="18" pos:column="20">&amp;&amp;<pos:position pos:line="18" pos:column="30"/></operator> <operator pos:line="18" pos:column="23">!<pos:position pos:line="18" pos:column="24"/></operator><call><name pos:line="18" pos:column="24">is_aborted<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><name pos:line="18" pos:column="35">m<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="38">&amp;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="39">status<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call>
                   <operator pos:line="19" pos:column="20">&amp;&amp;<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="23">block<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">==<pos:position pos:line="19" pos:column="31"/></operator> <name pos:line="19" pos:column="32">APR_BLOCK_READ<pos:position pos:line="19" pos:column="46"/></name></expr>)<pos:position pos:line="19" pos:column="47"/></condition> <block pos:line="19" pos:column="48">{
                <expr_stmt><expr><call><name pos:line="20" pos:column="17">ap_log_cerror<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">APLOG_MARK<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">APLOG_TRACE2<pos:position pos:line="20" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="57">status<pos:position pos:line="20" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="65">m<pos:position pos:line="20" pos:column="66"/></name><operator pos:line="20" pos:column="66">-&gt;<pos:position pos:line="20" pos:column="71"/></operator><name pos:line="20" pos:column="68">c<pos:position pos:line="20" pos:column="69"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="21" pos:column="31">"h2_mplx(%ld-%d): wait on in data (BLOCK_READ)"<pos:position pos:line="21" pos:column="78"/></literal></expr></argument>, 
                              <argument><expr><name><name pos:line="22" pos:column="31">m<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">id<pos:position pos:line="22" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">stream_id<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><name pos:line="23" pos:column="17">status<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <call><name pos:line="23" pos:column="26">h2_io_signal_wait<pos:position pos:line="23" pos:column="43"/></name><argument_list pos:line="23" pos:column="43">(<argument><expr><name pos:line="23" pos:column="44">m<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">io<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>
                <if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">status<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">==<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">APR_SUCCESS<pos:position pos:line="24" pos:column="42"/></name></expr>)<pos:position pos:line="24" pos:column="43"/></condition><then pos:line="24" pos:column="43"> <block pos:line="24" pos:column="44">{
                    <expr_stmt><expr><name pos:line="25" pos:column="21">status<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">=<pos:position pos:line="25" pos:column="29"/></operator> <call><name pos:line="25" pos:column="30">h2_io_in_read<pos:position pos:line="25" pos:column="43"/></name><argument_list pos:line="25" pos:column="43">(<argument><expr><name pos:line="25" pos:column="44">io<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">bb<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="52">-<pos:position pos:line="25" pos:column="53"/></operator><literal type="number" pos:line="25" pos:column="53">1<pos:position pos:line="25" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="56">trailers<pos:position pos:line="25" pos:column="64"/></name></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="66"/></expr_stmt>
                }<pos:position pos:line="26" pos:column="18"/></block></then></if>
            }<pos:position pos:line="27" pos:column="14"/></block></while>
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">H2_MPLX_IO_IN<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">APLOG_TRACE2<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="41">m<pos:position pos:line="28" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="44">io<pos:position pos:line="28" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="48">"h2_mplx_in_read_post"<pos:position pos:line="28" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">h2_io_signal_exit<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">io<pos:position pos:line="29" pos:column="33"/></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then>
        <else pos:line="31" pos:column="9">else <block pos:line="31" pos:column="14">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">status<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">APR_EOF<pos:position pos:line="32" pos:column="29"/></name></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">leave_mutex<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">m<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="24">acquired<pos:position pos:line="34" pos:column="32"/></name></expr></argument>)<pos:position pos:line="34" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">status<pos:position pos:line="36" pos:column="18"/></name></expr>;<pos:position pos:line="36" pos:column="19"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

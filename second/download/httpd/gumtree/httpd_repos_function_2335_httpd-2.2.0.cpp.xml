<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2335_httpd-2.2.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ap_mpm_run<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">apr_pool_t<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">_pconf<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">apr_pool_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">plog<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">server_rec<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">s<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">index<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">remaining_children_to_start<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ap_log_pid<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">pconf<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">ap_pid_fname<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">first_server_limit<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">server_limit<pos:position pos:line="9" pos:column="38"/></name></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">changed_limit_at_restart<pos:position pos:line="10" pos:column="33"/></name></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34"> <block pos:line="10" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ap_log_error<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">APLOG_MARK<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">APLOG_WARNING<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="49">0<pos:position pos:line="11" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">s<pos:position pos:line="11" pos:column="53"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="12" pos:column="22">"WARNING: Attempt to change ServerLimit "<pos:position pos:line="12" pos:column="63"/></literal>
                     <literal type="string" pos:line="13" pos:column="22">"ignored during restart"<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">changed_limit_at_restart<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">=<pos:position pos:line="14" pos:column="35"/></operator> <literal type="number" pos:line="14" pos:column="36">0<pos:position pos:line="14" pos:column="37"/></literal></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* Initialize cross-process accept lock */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">ap_lock_fname<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <call><name pos:line="18" pos:column="21">apr_psprintf<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">_pconf<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="42">"%s.%"<pos:position pos:line="18" pos:column="48"/></literal> <name pos:line="18" pos:column="49">APR_PID_T_FMT<pos:position pos:line="18" pos:column="62"/></name></expr></argument>,
                                 <argument><expr><call><name pos:line="19" pos:column="34">ap_server_root_relative<pos:position pos:line="19" pos:column="57"/></name><argument_list pos:line="19" pos:column="57">(<argument><expr><name pos:line="19" pos:column="58">_pconf<pos:position pos:line="19" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="66">ap_lock_fname<pos:position pos:line="19" pos:column="79"/></name></expr></argument>)<pos:position pos:line="19" pos:column="80"/></argument_list></call></expr></argument>,
                                 <argument><expr><name pos:line="20" pos:column="34">ap_my_pid<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">rv<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <call><name pos:line="22" pos:column="10">apr_proc_mutex_create<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><operator pos:line="22" pos:column="32">&amp;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="33">accept_mutex<pos:position pos:line="22" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="47">ap_lock_fname<pos:position pos:line="22" pos:column="60"/></name></expr></argument>,
                               <argument><expr><name pos:line="23" pos:column="32">ap_accept_lock_mech<pos:position pos:line="23" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="53">_pconf<pos:position pos:line="23" pos:column="59"/></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="61"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">rv<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">!=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">APR_SUCCESS<pos:position pos:line="24" pos:column="26"/></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27"> <block pos:line="24" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ap_log_error<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">APLOG_MARK<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">APLOG_EMERG<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="47">rv<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">s<pos:position pos:line="25" pos:column="52"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="26" pos:column="22">"Couldn't create accept lock (%s) (%d)"<pos:position pos:line="26" pos:column="61"/></literal></expr></argument>,
                     <argument><expr><name pos:line="27" pos:column="22">ap_lock_fname<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">ap_accept_lock_mech<pos:position pos:line="27" pos:column="56"/></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">mpm_state<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">AP_MPMQ_STOPPING<pos:position pos:line="28" pos:column="37"/></name></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
        <return pos:line="29" pos:column="9">return <expr><literal type="number" pos:line="29" pos:column="16">1<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

<cpp:if pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">if<pos:position pos:line="32" pos:column="4"/></cpp:directive> <expr><name pos:line="32" pos:column="5">APR_USE_SYSVSEM_SERIALIZE<pos:position pos:line="32" pos:column="30"/></name></expr></cpp:if>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">ap_accept_lock_mech<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">==<pos:position pos:line="33" pos:column="31"/></operator> <name pos:line="33" pos:column="32">APR_LOCK_DEFAULT<pos:position pos:line="33" pos:column="48"/></name> <operator pos:line="33" pos:column="49">||<pos:position pos:line="33" pos:column="51"/></operator>
        <name pos:line="34" pos:column="9">ap_accept_lock_mech<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">==<pos:position pos:line="34" pos:column="31"/></operator> <name pos:line="34" pos:column="32">APR_LOCK_SYSVSEM<pos:position pos:line="34" pos:column="48"/></name></expr>)<pos:position pos:line="34" pos:column="49"/></condition><then pos:line="34" pos:column="49"> <block pos:line="34" pos:column="50">{
<cpp:else pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">else<pos:position pos:line="35" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">ap_accept_lock_mech<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">==<pos:position pos:line="36" pos:column="31"/></operator> <name pos:line="36" pos:column="32">APR_LOCK_SYSVSEM<pos:position pos:line="36" pos:column="48"/></name></expr>)<pos:position pos:line="36" pos:column="49"/></condition><then pos:line="36" pos:column="49"> <block pos:line="36" pos:column="50">{
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name pos:line="38" pos:column="9">rv<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <call><name pos:line="38" pos:column="14">unixd_set_proc_mutex_perms<pos:position pos:line="38" pos:column="40"/></name><argument_list pos:line="38" pos:column="40">(<argument><expr><name pos:line="38" pos:column="41">accept_mutex<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">rv<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">!=<pos:position pos:line="39" pos:column="18"/></operator> <name pos:line="39" pos:column="19">APR_SUCCESS<pos:position pos:line="39" pos:column="30"/></name></expr>)<pos:position pos:line="39" pos:column="31"/></condition><then pos:line="39" pos:column="31"> <block pos:line="39" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">ap_log_error<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">APLOG_MARK<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="38">APLOG_EMERG<pos:position pos:line="40" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="51">rv<pos:position pos:line="40" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="55">s<pos:position pos:line="40" pos:column="56"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="41" pos:column="26">"Couldn't set permissions on cross-process lock; "<pos:position pos:line="41" pos:column="76"/></literal>
                         <literal type="string" pos:line="42" pos:column="26">"check User and Group directives"<pos:position pos:line="42" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name pos:line="43" pos:column="13">mpm_state<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">=<pos:position pos:line="43" pos:column="24"/></operator> <name pos:line="43" pos:column="25">AP_MPMQ_STOPPING<pos:position pos:line="43" pos:column="41"/></name></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>
            <return pos:line="44" pos:column="13">return <expr><literal type="number" pos:line="44" pos:column="20">1<pos:position pos:line="44" pos:column="21"/></literal></expr>;<pos:position pos:line="44" pos:column="22"/></return>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><operator pos:line="48" pos:column="9">!<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">is_graceful<pos:position pos:line="48" pos:column="21"/></name></expr>)<pos:position pos:line="48" pos:column="22"/></condition><then pos:line="48" pos:column="22"> <block pos:line="48" pos:column="23">{
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><call><name pos:line="49" pos:column="13">ap_run_pre_mpm<pos:position pos:line="49" pos:column="27"/></name><argument_list pos:line="49" pos:column="27">(<argument><expr><name><name pos:line="49" pos:column="28">s<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">-&gt;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="31">process<pos:position pos:line="49" pos:column="38"/></name><operator pos:line="49" pos:column="38">-&gt;<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="40">pool<pos:position pos:line="49" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="46">SB_SHARED<pos:position pos:line="49" pos:column="55"/></name></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call> <operator pos:line="49" pos:column="57">!=<pos:position pos:line="49" pos:column="59"/></operator> <name pos:line="49" pos:column="60">OK<pos:position pos:line="49" pos:column="62"/></name></expr>)<pos:position pos:line="49" pos:column="63"/></condition><then pos:line="49" pos:column="63"> <block pos:line="49" pos:column="64">{
            <expr_stmt><expr><name pos:line="50" pos:column="13">mpm_state<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">=<pos:position pos:line="50" pos:column="24"/></operator> <name pos:line="50" pos:column="25">AP_MPMQ_STOPPING<pos:position pos:line="50" pos:column="41"/></name></expr>;<pos:position pos:line="50" pos:column="42"/></expr_stmt>
            <return pos:line="51" pos:column="13">return <expr><literal type="number" pos:line="51" pos:column="20">1<pos:position pos:line="51" pos:column="21"/></literal></expr>;<pos:position pos:line="51" pos:column="22"/></return>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="53" pos:column="9">/* fix the generation number in the global score; we just got a new,
         * cleared scoreboard
         */</comment>
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">ap_scoreboard_image<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">-&gt;<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="30">global<pos:position pos:line="56" pos:column="36"/></name><operator pos:line="56" pos:column="36">-&gt;<pos:position pos:line="56" pos:column="41"/></operator><name pos:line="56" pos:column="38">running_generation<pos:position pos:line="56" pos:column="56"/></name></name> <operator pos:line="56" pos:column="57">=<pos:position pos:line="56" pos:column="58"/></operator> <name pos:line="56" pos:column="59">ap_my_generation<pos:position pos:line="56" pos:column="75"/></name></expr>;<pos:position pos:line="56" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="59" pos:column="5">set_signals<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">()<pos:position pos:line="59" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="19"/></expr_stmt>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">one_process<pos:position pos:line="61" pos:column="20"/></name></expr>)<pos:position pos:line="61" pos:column="21"/></condition><then pos:line="61" pos:column="21"> <block pos:line="61" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">AP_MONCONTROL<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">(<argument><expr><literal type="number" pos:line="62" pos:column="23">1<pos:position pos:line="62" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">make_child<pos:position pos:line="63" pos:column="19"/></name><argument_list pos:line="63" pos:column="19">(<argument><expr><name pos:line="63" pos:column="20">ap_server_conf<pos:position pos:line="63" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="36">0<pos:position pos:line="63" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then>
    <else pos:line="65" pos:column="5">else <block pos:line="65" pos:column="10">{
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">ap_daemons_max_free<pos:position pos:line="66" pos:column="28"/></name> <operator pos:line="66" pos:column="29">&lt;<pos:position pos:line="66" pos:column="33"/></operator> <name pos:line="66" pos:column="31">ap_daemons_min_free<pos:position pos:line="66" pos:column="50"/></name> <operator pos:line="66" pos:column="51">+<pos:position pos:line="66" pos:column="52"/></operator> <literal type="number" pos:line="66" pos:column="53">1<pos:position pos:line="66" pos:column="54"/></literal></expr>)<pos:position pos:line="66" pos:column="55"/></condition><then pos:line="66" pos:column="55">  <comment type="block" pos:line="66" pos:column="57">/* Don't thrash... */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="9">ap_daemons_max_free<pos:position pos:line="67" pos:column="28"/></name> <operator pos:line="67" pos:column="29">=<pos:position pos:line="67" pos:column="30"/></operator> <name pos:line="67" pos:column="31">ap_daemons_min_free<pos:position pos:line="67" pos:column="50"/></name> <operator pos:line="67" pos:column="51">+<pos:position pos:line="67" pos:column="52"/></operator> <literal type="number" pos:line="67" pos:column="53">1<pos:position pos:line="67" pos:column="54"/></literal></expr>;<pos:position pos:line="67" pos:column="55"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="69" pos:column="5">/* If we're doing a graceful_restart then we're going to see a lot
     * of children exiting immediately when we get into the main loop
     * below (because we just sent them AP_SIG_GRACEFUL).  This happens pretty
     * rapidly... and for each one that exits we'll start a new one until
     * we reach at least daemons_min_free.  But we may be permitted to
     * start more than that, so we'll just keep track of how many we're
     * supposed to start up without the 1 second penalty between each fork.
     */</comment>
    <expr_stmt><expr><name pos:line="77" pos:column="5">remaining_children_to_start<pos:position pos:line="77" pos:column="32"/></name> <operator pos:line="77" pos:column="33">=<pos:position pos:line="77" pos:column="34"/></operator> <name pos:line="77" pos:column="35">ap_daemons_to_start<pos:position pos:line="77" pos:column="54"/></name></expr>;<pos:position pos:line="77" pos:column="55"/></expr_stmt>
    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><name pos:line="78" pos:column="9">remaining_children_to_start<pos:position pos:line="78" pos:column="36"/></name> <operator pos:line="78" pos:column="37">&gt;<pos:position pos:line="78" pos:column="41"/></operator> <name pos:line="78" pos:column="39">ap_daemons_limit<pos:position pos:line="78" pos:column="55"/></name></expr>)<pos:position pos:line="78" pos:column="56"/></condition><then pos:line="78" pos:column="56"> <block pos:line="78" pos:column="57">{
        <expr_stmt><expr><name pos:line="79" pos:column="9">remaining_children_to_start<pos:position pos:line="79" pos:column="36"/></name> <operator pos:line="79" pos:column="37">=<pos:position pos:line="79" pos:column="38"/></operator> <name pos:line="79" pos:column="39">ap_daemons_limit<pos:position pos:line="79" pos:column="55"/></name></expr>;<pos:position pos:line="79" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><operator pos:line="81" pos:column="9">!<pos:position pos:line="81" pos:column="10"/></operator><name pos:line="81" pos:column="10">is_graceful<pos:position pos:line="81" pos:column="21"/></name></expr>)<pos:position pos:line="81" pos:column="22"/></condition><then pos:line="81" pos:column="22"> <block pos:line="81" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">startup_children<pos:position pos:line="82" pos:column="25"/></name><argument_list pos:line="82" pos:column="25">(<argument><expr><name pos:line="82" pos:column="26">remaining_children_to_start<pos:position pos:line="82" pos:column="53"/></name></expr></argument>)<pos:position pos:line="82" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="83" pos:column="9">remaining_children_to_start<pos:position pos:line="83" pos:column="36"/></name> <operator pos:line="83" pos:column="37">=<pos:position pos:line="83" pos:column="38"/></operator> <literal type="number" pos:line="83" pos:column="39">0<pos:position pos:line="83" pos:column="40"/></literal></expr>;<pos:position pos:line="83" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></then>
    <else pos:line="85" pos:column="5">else <block pos:line="85" pos:column="10">{
        <comment type="block" pos:line="86" pos:column="9">/* give the system some time to recover before kicking into
         * exponential mode
         */</comment>
        <expr_stmt><expr><name pos:line="89" pos:column="9">hold_off_on_exponential_spawning<pos:position pos:line="89" pos:column="41"/></name> <operator pos:line="89" pos:column="42">=<pos:position pos:line="89" pos:column="43"/></operator> <literal type="number" pos:line="89" pos:column="44">10<pos:position pos:line="89" pos:column="46"/></literal></expr>;<pos:position pos:line="89" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="92" pos:column="5">ap_log_error<pos:position pos:line="92" pos:column="17"/></name><argument_list pos:line="92" pos:column="17">(<argument><expr><name pos:line="92" pos:column="18">APLOG_MARK<pos:position pos:line="92" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="30">APLOG_NOTICE<pos:position pos:line="92" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="44">0<pos:position pos:line="92" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="47">ap_server_conf<pos:position pos:line="92" pos:column="61"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="93" pos:column="17">"%s configured -- resuming normal operations"<pos:position pos:line="93" pos:column="62"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="94" pos:column="17">ap_get_server_version<pos:position pos:line="94" pos:column="38"/></name><argument_list pos:line="94" pos:column="38">()<pos:position pos:line="94" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">ap_log_error<pos:position pos:line="95" pos:column="17"/></name><argument_list pos:line="95" pos:column="17">(<argument><expr><name pos:line="95" pos:column="18">APLOG_MARK<pos:position pos:line="95" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="30">APLOG_INFO<pos:position pos:line="95" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="42">0<pos:position pos:line="95" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="45">ap_server_conf<pos:position pos:line="95" pos:column="59"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="96" pos:column="17">"Server built: %s"<pos:position pos:line="96" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="96" pos:column="37">ap_get_server_built<pos:position pos:line="96" pos:column="56"/></name><argument_list pos:line="96" pos:column="56">()<pos:position pos:line="96" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="60"/></expr_stmt>
<cpp:ifdef pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">ifdef<pos:position pos:line="97" pos:column="7"/></cpp:directive> <name pos:line="97" pos:column="8">AP_MPM_WANT_SET_ACCEPT_LOCK_MECH<pos:position pos:line="97" pos:column="40"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">ap_log_error<pos:position pos:line="98" pos:column="17"/></name><argument_list pos:line="98" pos:column="17">(<argument><expr><name pos:line="98" pos:column="18">APLOG_MARK<pos:position pos:line="98" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="30">APLOG_DEBUG<pos:position pos:line="98" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="98" pos:column="43">0<pos:position pos:line="98" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="46">ap_server_conf<pos:position pos:line="98" pos:column="60"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="99" pos:column="17">"AcceptMutex: %s (default: %s)"<pos:position pos:line="99" pos:column="48"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="100" pos:column="17">apr_proc_mutex_name<pos:position pos:line="100" pos:column="36"/></name><argument_list pos:line="100" pos:column="36">(<argument><expr><name pos:line="100" pos:column="37">accept_mutex<pos:position pos:line="100" pos:column="49"/></name></expr></argument>)<pos:position pos:line="100" pos:column="50"/></argument_list></call></expr></argument>,
                <argument><expr><call><name pos:line="101" pos:column="17">apr_proc_mutex_defname<pos:position pos:line="101" pos:column="39"/></name><argument_list pos:line="101" pos:column="39">()<pos:position pos:line="101" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="101" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif<pos:position pos:line="102" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="103" pos:column="5">restart_pending<pos:position pos:line="103" pos:column="20"/></name> <operator pos:line="103" pos:column="21">=<pos:position pos:line="103" pos:column="22"/></operator> <name pos:line="103" pos:column="23">shutdown_pending<pos:position pos:line="103" pos:column="39"/></name> <operator pos:line="103" pos:column="40">=<pos:position pos:line="103" pos:column="41"/></operator> <literal type="number" pos:line="103" pos:column="42">0<pos:position pos:line="103" pos:column="43"/></literal></expr>;<pos:position pos:line="103" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><name pos:line="105" pos:column="5">mpm_state<pos:position pos:line="105" pos:column="14"/></name> <operator pos:line="105" pos:column="15">=<pos:position pos:line="105" pos:column="16"/></operator> <name pos:line="105" pos:column="17">AP_MPMQ_RUNNING<pos:position pos:line="105" pos:column="32"/></name></expr>;<pos:position pos:line="105" pos:column="33"/></expr_stmt>

    <while pos:line="107" pos:column="5">while <condition pos:line="107" pos:column="11">(<expr><operator pos:line="107" pos:column="12">!<pos:position pos:line="107" pos:column="13"/></operator><name pos:line="107" pos:column="13">restart_pending<pos:position pos:line="107" pos:column="28"/></name> <operator pos:line="107" pos:column="29">&amp;&amp;<pos:position pos:line="107" pos:column="39"/></operator> <operator pos:line="107" pos:column="32">!<pos:position pos:line="107" pos:column="33"/></operator><name pos:line="107" pos:column="33">shutdown_pending<pos:position pos:line="107" pos:column="49"/></name></expr>)<pos:position pos:line="107" pos:column="50"/></condition> <block pos:line="107" pos:column="51">{
        <decl_stmt><decl><type><name pos:line="108" pos:column="9">int<pos:position pos:line="108" pos:column="12"/></name></type> <name pos:line="108" pos:column="13">child_slot<pos:position pos:line="108" pos:column="23"/></name></decl>;<pos:position pos:line="108" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="109" pos:column="9">apr_exit_why_e<pos:position pos:line="109" pos:column="23"/></name></type> <name pos:line="109" pos:column="24">exitwhy<pos:position pos:line="109" pos:column="31"/></name></decl>;<pos:position pos:line="109" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="110" pos:column="9">int<pos:position pos:line="110" pos:column="12"/></name></type> <name pos:line="110" pos:column="13">status<pos:position pos:line="110" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="110" pos:column="21">processed_status<pos:position pos:line="110" pos:column="37"/></name></decl>;<pos:position pos:line="110" pos:column="38"/></decl_stmt>
        <comment type="block" pos:line="111" pos:column="9">/* this is a memory leak, but I'll fix it later. */</comment>
        <decl_stmt><decl><type><name pos:line="112" pos:column="9">apr_proc_t<pos:position pos:line="112" pos:column="19"/></name></type> <name pos:line="112" pos:column="20">pid<pos:position pos:line="112" pos:column="23"/></name></decl>;<pos:position pos:line="112" pos:column="24"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="114" pos:column="9">ap_wait_or_timeout<pos:position pos:line="114" pos:column="27"/></name><argument_list pos:line="114" pos:column="27">(<argument><expr><operator pos:line="114" pos:column="28">&amp;<pos:position pos:line="114" pos:column="33"/></operator><name pos:line="114" pos:column="29">exitwhy<pos:position pos:line="114" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="38">&amp;<pos:position pos:line="114" pos:column="43"/></operator><name pos:line="114" pos:column="39">status<pos:position pos:line="114" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="47">&amp;<pos:position pos:line="114" pos:column="52"/></operator><name pos:line="114" pos:column="48">pid<pos:position pos:line="114" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="53">pconf<pos:position pos:line="114" pos:column="58"/></name></expr></argument>)<pos:position pos:line="114" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="60"/></expr_stmt>

        <comment type="block" pos:line="116" pos:column="9">/* XXX: if it takes longer than 1 second for all our children
         * to start up and get into IDLE state then we may spawn an
         * extra child
         */</comment>
        <if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name><name pos:line="120" pos:column="13">pid<pos:position pos:line="120" pos:column="16"/></name><operator pos:line="120" pos:column="16">.<pos:position pos:line="120" pos:column="17"/></operator><name pos:line="120" pos:column="17">pid<pos:position pos:line="120" pos:column="20"/></name></name> <operator pos:line="120" pos:column="21">!=<pos:position pos:line="120" pos:column="23"/></operator> <operator pos:line="120" pos:column="24">-<pos:position pos:line="120" pos:column="25"/></operator><literal type="number" pos:line="120" pos:column="25">1<pos:position pos:line="120" pos:column="26"/></literal></expr>)<pos:position pos:line="120" pos:column="27"/></condition><then pos:line="120" pos:column="27"> <block pos:line="120" pos:column="28">{
            <expr_stmt><expr><name pos:line="121" pos:column="13">processed_status<pos:position pos:line="121" pos:column="29"/></name> <operator pos:line="121" pos:column="30">=<pos:position pos:line="121" pos:column="31"/></operator> <call><name pos:line="121" pos:column="32">ap_process_child_status<pos:position pos:line="121" pos:column="55"/></name><argument_list pos:line="121" pos:column="55">(<argument><expr><operator pos:line="121" pos:column="56">&amp;<pos:position pos:line="121" pos:column="61"/></operator><name pos:line="121" pos:column="57">pid<pos:position pos:line="121" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="62">exitwhy<pos:position pos:line="121" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="71">status<pos:position pos:line="121" pos:column="77"/></name></expr></argument>)<pos:position pos:line="121" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="79"/></expr_stmt>
            <if pos:line="122" pos:column="13">if <condition pos:line="122" pos:column="16">(<expr><name pos:line="122" pos:column="17">processed_status<pos:position pos:line="122" pos:column="33"/></name> <operator pos:line="122" pos:column="34">==<pos:position pos:line="122" pos:column="36"/></operator> <name pos:line="122" pos:column="37">APEXIT_CHILDFATAL<pos:position pos:line="122" pos:column="54"/></name></expr>)<pos:position pos:line="122" pos:column="55"/></condition><then pos:line="122" pos:column="55"> <block pos:line="122" pos:column="56">{
                <expr_stmt><expr><name pos:line="123" pos:column="17">mpm_state<pos:position pos:line="123" pos:column="26"/></name> <operator pos:line="123" pos:column="27">=<pos:position pos:line="123" pos:column="28"/></operator> <name pos:line="123" pos:column="29">AP_MPMQ_STOPPING<pos:position pos:line="123" pos:column="45"/></name></expr>;<pos:position pos:line="123" pos:column="46"/></expr_stmt>
                <return pos:line="124" pos:column="17">return <expr><literal type="number" pos:line="124" pos:column="24">1<pos:position pos:line="124" pos:column="25"/></literal></expr>;<pos:position pos:line="124" pos:column="26"/></return>
            }<pos:position pos:line="125" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="127" pos:column="13">/* non-fatal death... note that it's gone in the scoreboard. */</comment>
            <expr_stmt><expr><name pos:line="128" pos:column="13">child_slot<pos:position pos:line="128" pos:column="23"/></name> <operator pos:line="128" pos:column="24">=<pos:position pos:line="128" pos:column="25"/></operator> <call><name pos:line="128" pos:column="26">find_child_by_pid<pos:position pos:line="128" pos:column="43"/></name><argument_list pos:line="128" pos:column="43">(<argument><expr><operator pos:line="128" pos:column="44">&amp;<pos:position pos:line="128" pos:column="49"/></operator><name pos:line="128" pos:column="45">pid<pos:position pos:line="128" pos:column="48"/></name></expr></argument>)<pos:position pos:line="128" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="50"/></expr_stmt>
            <if pos:line="129" pos:column="13">if <condition pos:line="129" pos:column="16">(<expr><name pos:line="129" pos:column="17">child_slot<pos:position pos:line="129" pos:column="27"/></name> <operator pos:line="129" pos:column="28">&gt;=<pos:position pos:line="129" pos:column="33"/></operator> <literal type="number" pos:line="129" pos:column="31">0<pos:position pos:line="129" pos:column="32"/></literal></expr>)<pos:position pos:line="129" pos:column="33"/></condition><then pos:line="129" pos:column="33"> <block pos:line="129" pos:column="34">{
                <expr_stmt><expr><operator pos:line="130" pos:column="17">(<pos:position pos:line="130" pos:column="18"/></operator><name pos:line="130" pos:column="18">void<pos:position pos:line="130" pos:column="22"/></name><operator pos:line="130" pos:column="22">)<pos:position pos:line="130" pos:column="23"/></operator> <call><name pos:line="130" pos:column="24">ap_update_child_status_from_indexes<pos:position pos:line="130" pos:column="59"/></name><argument_list pos:line="130" pos:column="59">(<argument><expr><name pos:line="130" pos:column="60">child_slot<pos:position pos:line="130" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="72">0<pos:position pos:line="130" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="75">SERVER_DEAD<pos:position pos:line="130" pos:column="86"/></name></expr></argument>,
                                                           <argument><expr><operator pos:line="131" pos:column="60">(<pos:position pos:line="131" pos:column="61"/></operator><name pos:line="131" pos:column="61">request_rec<pos:position pos:line="131" pos:column="72"/></name> <operator pos:line="131" pos:column="73">*<pos:position pos:line="131" pos:column="74"/></operator><operator pos:line="131" pos:column="74">)<pos:position pos:line="131" pos:column="75"/></operator> <name pos:line="131" pos:column="76">NULL<pos:position pos:line="131" pos:column="80"/></name></expr></argument>)<pos:position pos:line="131" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="82"/></expr_stmt>
                <if pos:line="132" pos:column="17">if <condition pos:line="132" pos:column="20">(<expr><name pos:line="132" pos:column="21">processed_status<pos:position pos:line="132" pos:column="37"/></name> <operator pos:line="132" pos:column="38">==<pos:position pos:line="132" pos:column="40"/></operator> <name pos:line="132" pos:column="41">APEXIT_CHILDSICK<pos:position pos:line="132" pos:column="57"/></name></expr>)<pos:position pos:line="132" pos:column="58"/></condition><then pos:line="132" pos:column="58"> <block pos:line="132" pos:column="59">{
                    <comment type="block" pos:line="133" pos:column="21">/* child detected a resource shortage (E[NM]FILE, ENOBUFS, etc)
                     * cut the fork rate to the minimum
                     */</comment>
                    <expr_stmt><expr><name pos:line="136" pos:column="21">idle_spawn_rate<pos:position pos:line="136" pos:column="36"/></name> <operator pos:line="136" pos:column="37">=<pos:position pos:line="136" pos:column="38"/></operator> <literal type="number" pos:line="136" pos:column="39">1<pos:position pos:line="136" pos:column="40"/></literal></expr>;<pos:position pos:line="136" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="137" pos:column="18"/></block></then>
                <elseif pos:line="138" pos:column="17">else <if pos:line="138" pos:column="22">if <condition pos:line="138" pos:column="25">(<expr><name pos:line="138" pos:column="26">remaining_children_to_start<pos:position pos:line="138" pos:column="53"/></name>
                    <operator pos:line="139" pos:column="21">&amp;&amp;<pos:position pos:line="139" pos:column="31"/></operator> <name pos:line="139" pos:column="24">child_slot<pos:position pos:line="139" pos:column="34"/></name> <operator pos:line="139" pos:column="35">&lt;<pos:position pos:line="139" pos:column="39"/></operator> <name pos:line="139" pos:column="37">ap_daemons_limit<pos:position pos:line="139" pos:column="53"/></name></expr>)<pos:position pos:line="139" pos:column="54"/></condition><then pos:line="139" pos:column="54"> <block pos:line="139" pos:column="55">{
                    <comment type="block" pos:line="140" pos:column="21">/* we're still doing a 1-for-1 replacement of dead
                     * children with new children
                     */</comment>
                    <expr_stmt><expr><call><name pos:line="143" pos:column="21">make_child<pos:position pos:line="143" pos:column="31"/></name><argument_list pos:line="143" pos:column="31">(<argument><expr><name pos:line="143" pos:column="32">ap_server_conf<pos:position pos:line="143" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="48">child_slot<pos:position pos:line="143" pos:column="58"/></name></expr></argument>)<pos:position pos:line="143" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="60"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="144" pos:column="21">--<pos:position pos:line="144" pos:column="23"/></operator><name pos:line="144" pos:column="23">remaining_children_to_start<pos:position pos:line="144" pos:column="50"/></name></expr>;<pos:position pos:line="144" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="145" pos:column="18"/></block></then></if></elseif></if>
<cpp:if pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">if<pos:position pos:line="146" pos:column="4"/></cpp:directive> <expr><name pos:line="146" pos:column="5">APR_HAS_OTHER_CHILD<pos:position pos:line="146" pos:column="24"/></name></expr></cpp:if>
            }<pos:position pos:line="147" pos:column="14"/></block></then>
            <elseif pos:line="148" pos:column="13">else <if pos:line="148" pos:column="18">if <condition pos:line="148" pos:column="21">(<expr><call><name pos:line="148" pos:column="22">apr_proc_other_child_alert<pos:position pos:line="148" pos:column="48"/></name><argument_list pos:line="148" pos:column="48">(<argument><expr><operator pos:line="148" pos:column="49">&amp;<pos:position pos:line="148" pos:column="54"/></operator><name pos:line="148" pos:column="50">pid<pos:position pos:line="148" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="55">APR_OC_REASON_DEATH<pos:position pos:line="148" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="76">status<pos:position pos:line="148" pos:column="82"/></name></expr></argument>)<pos:position pos:line="148" pos:column="83"/></argument_list></call> <operator pos:line="148" pos:column="84">==<pos:position pos:line="148" pos:column="86"/></operator> <name pos:line="148" pos:column="87">APR_SUCCESS<pos:position pos:line="148" pos:column="98"/></name></expr>)<pos:position pos:line="148" pos:column="99"/></condition><then pos:line="148" pos:column="99"> <block pos:line="148" pos:column="100">{
                <comment type="block" pos:line="149" pos:column="17">/* handled */</comment>
<cpp:endif pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">endif<pos:position pos:line="150" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="151" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="152" pos:column="13">else <if pos:line="152" pos:column="18">if <condition pos:line="152" pos:column="21">(<expr><name pos:line="152" pos:column="22">is_graceful<pos:position pos:line="152" pos:column="33"/></name></expr>)<pos:position pos:line="152" pos:column="34"/></condition><then pos:line="152" pos:column="34"> <block pos:line="152" pos:column="35">{
                <comment type="block" pos:line="153" pos:column="17">/* Great, we've probably just lost a slot in the
                 * scoreboard.  Somehow we don't know about this
                 * child.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="157" pos:column="17">ap_log_error<pos:position pos:line="157" pos:column="29"/></name><argument_list pos:line="157" pos:column="29">(<argument><expr><name pos:line="157" pos:column="30">APLOG_MARK<pos:position pos:line="157" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="42">APLOG_WARNING<pos:position pos:line="157" pos:column="55"/></name></expr></argument>,
                            <argument><expr><literal type="number" pos:line="158" pos:column="29">0<pos:position pos:line="158" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="158" pos:column="32">ap_server_conf<pos:position pos:line="158" pos:column="46"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="159" pos:column="29">"long lost child came home! (pid %ld)"<pos:position pos:line="159" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="159" pos:column="69">(<pos:position pos:line="159" pos:column="70"/></operator><name pos:line="159" pos:column="70">long<pos:position pos:line="159" pos:column="74"/></name><operator pos:line="159" pos:column="74">)<pos:position pos:line="159" pos:column="75"/></operator><name><name pos:line="159" pos:column="75">pid<pos:position pos:line="159" pos:column="78"/></name><operator pos:line="159" pos:column="78">.<pos:position pos:line="159" pos:column="79"/></operator><name pos:line="159" pos:column="79">pid<pos:position pos:line="159" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="159" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="84"/></expr_stmt>
            }<pos:position pos:line="160" pos:column="14"/></block></then></if></elseif></if>
            <comment type="block" pos:line="161" pos:column="13">/* Don't perform idle maintenance when a child dies,
             * only do it when there's a timeout.  Remember only a
             * finite number of children can die, and it's pretty
             * pathological for a lot to die suddenly.
             */</comment>
            <continue pos:line="166" pos:column="13">continue;<pos:position pos:line="166" pos:column="22"/></continue>
        }<pos:position pos:line="167" pos:column="10"/></block></then>
        <elseif pos:line="168" pos:column="9">else <if pos:line="168" pos:column="14">if <condition pos:line="168" pos:column="17">(<expr><name pos:line="168" pos:column="18">remaining_children_to_start<pos:position pos:line="168" pos:column="45"/></name></expr>)<pos:position pos:line="168" pos:column="46"/></condition><then pos:line="168" pos:column="46"> <block pos:line="168" pos:column="47">{
            <comment type="block" pos:line="169" pos:column="13">/* we hit a 1 second timeout in which none of the previous
             * generation of children needed to be reaped... so assume
             * they're all done, and pick up the slack if any is left.
             */</comment>
            <expr_stmt><expr><call><name pos:line="173" pos:column="13">startup_children<pos:position pos:line="173" pos:column="29"/></name><argument_list pos:line="173" pos:column="29">(<argument><expr><name pos:line="173" pos:column="30">remaining_children_to_start<pos:position pos:line="173" pos:column="57"/></name></expr></argument>)<pos:position pos:line="173" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name pos:line="174" pos:column="13">remaining_children_to_start<pos:position pos:line="174" pos:column="40"/></name> <operator pos:line="174" pos:column="41">=<pos:position pos:line="174" pos:column="42"/></operator> <literal type="number" pos:line="174" pos:column="43">0<pos:position pos:line="174" pos:column="44"/></literal></expr>;<pos:position pos:line="174" pos:column="45"/></expr_stmt>
            <comment type="block" pos:line="175" pos:column="13">/* In any event we really shouldn't do the code below because
             * few of the servers we just started are in the IDLE state
             * yet, so we'd mistakenly create an extra server.
             */</comment>
            <continue pos:line="179" pos:column="13">continue;<pos:position pos:line="179" pos:column="22"/></continue>
        }<pos:position pos:line="180" pos:column="10"/></block></then></if></elseif></if>

        <expr_stmt><expr><call><name pos:line="182" pos:column="9">perform_idle_server_maintenance<pos:position pos:line="182" pos:column="40"/></name><argument_list pos:line="182" pos:column="40">(<argument><expr><name pos:line="182" pos:column="41">pconf<pos:position pos:line="182" pos:column="46"/></name></expr></argument>)<pos:position pos:line="182" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="48"/></expr_stmt>
<cpp:ifdef pos:line="183" pos:column="1">#<cpp:directive pos:line="183" pos:column="2">ifdef<pos:position pos:line="183" pos:column="7"/></cpp:directive> <name pos:line="183" pos:column="8">TPF<pos:position pos:line="183" pos:column="11"/></name></cpp:ifdef>
        <expr_stmt><expr><name pos:line="184" pos:column="9">shutdown_pending<pos:position pos:line="184" pos:column="25"/></name> <operator pos:line="184" pos:column="26">=<pos:position pos:line="184" pos:column="27"/></operator> <call><name pos:line="184" pos:column="28">os_check_server<pos:position pos:line="184" pos:column="43"/></name><argument_list pos:line="184" pos:column="43">(<argument><expr><name pos:line="184" pos:column="44">tpf_server_name<pos:position pos:line="184" pos:column="59"/></name></expr></argument>)<pos:position pos:line="184" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="185" pos:column="9">ap_check_signals<pos:position pos:line="185" pos:column="25"/></name><argument_list pos:line="185" pos:column="25">()<pos:position pos:line="185" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="186" pos:column="9">sleep<pos:position pos:line="186" pos:column="14"/></name><argument_list pos:line="186" pos:column="14">(<argument><expr><literal type="number" pos:line="186" pos:column="15">1<pos:position pos:line="186" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="186" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="18"/></expr_stmt>
<cpp:endif pos:line="187" pos:column="1">#<cpp:directive pos:line="187" pos:column="2">endif<pos:position pos:line="187" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="187" pos:column="8">/*TPF */</comment>
    }<pos:position pos:line="188" pos:column="6"/></block></while>
    }<pos:position pos:line="189" pos:column="6"/></block></else></if> <comment type="block" pos:line="189" pos:column="7">/* one_process */</comment>

    <expr_stmt><expr><name pos:line="191" pos:column="5">mpm_state<pos:position pos:line="191" pos:column="14"/></name> <operator pos:line="191" pos:column="15">=<pos:position pos:line="191" pos:column="16"/></operator> <name pos:line="191" pos:column="17">AP_MPMQ_STOPPING<pos:position pos:line="191" pos:column="33"/></name></expr>;<pos:position pos:line="191" pos:column="34"/></expr_stmt>

    <if pos:line="193" pos:column="5">if <condition pos:line="193" pos:column="8">(<expr><name pos:line="193" pos:column="9">shutdown_pending<pos:position pos:line="193" pos:column="25"/></name> <operator pos:line="193" pos:column="26">&amp;&amp;<pos:position pos:line="193" pos:column="36"/></operator> <operator pos:line="193" pos:column="29">!<pos:position pos:line="193" pos:column="30"/></operator><name pos:line="193" pos:column="30">is_graceful<pos:position pos:line="193" pos:column="41"/></name></expr>)<pos:position pos:line="193" pos:column="42"/></condition><then pos:line="193" pos:column="42"> <block pos:line="193" pos:column="43">{
        <comment type="block" pos:line="194" pos:column="9">/* Time to shut down:
         * Kill child processes, tell them to call child_exit, etc...
         */</comment>
        <if pos:line="197" pos:column="9">if <condition pos:line="197" pos:column="12">(<expr><call><name pos:line="197" pos:column="13">unixd_killpg<pos:position pos:line="197" pos:column="25"/></name><argument_list pos:line="197" pos:column="25">(<argument><expr><call><name pos:line="197" pos:column="26">getpgrp<pos:position pos:line="197" pos:column="33"/></name><argument_list pos:line="197" pos:column="33">()<pos:position pos:line="197" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="197" pos:column="37">SIGTERM<pos:position pos:line="197" pos:column="44"/></name></expr></argument>)<pos:position pos:line="197" pos:column="45"/></argument_list></call> <operator pos:line="197" pos:column="46">&lt;<pos:position pos:line="197" pos:column="50"/></operator> <literal type="number" pos:line="197" pos:column="48">0<pos:position pos:line="197" pos:column="49"/></literal></expr>)<pos:position pos:line="197" pos:column="50"/></condition><then pos:line="197" pos:column="50"> <block pos:line="197" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="198" pos:column="13">ap_log_error<pos:position pos:line="198" pos:column="25"/></name><argument_list pos:line="198" pos:column="25">(<argument><expr><name pos:line="198" pos:column="26">APLOG_MARK<pos:position pos:line="198" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="38">APLOG_WARNING<pos:position pos:line="198" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="53">errno<pos:position pos:line="198" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="60">ap_server_conf<pos:position pos:line="198" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="76">"killpg SIGTERM"<pos:position pos:line="198" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="94"/></expr_stmt>
        }<pos:position pos:line="199" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="200" pos:column="9">ap_reclaim_child_processes<pos:position pos:line="200" pos:column="35"/></name><argument_list pos:line="200" pos:column="35">(<argument><expr><literal type="number" pos:line="200" pos:column="36">1<pos:position pos:line="200" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="39"/></expr_stmt>          <comment type="block" pos:line="200" pos:column="49">/* Start with SIGTERM */</comment>

        <comment type="block" pos:line="202" pos:column="9">/* cleanup pid file on normal shutdown */</comment>
        <block pos:line="203" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="204" pos:column="13">const<pos:position pos:line="204" pos:column="18"/></specifier> <name pos:line="204" pos:column="19">char<pos:position pos:line="204" pos:column="23"/></name> <modifier pos:line="204" pos:column="24">*<pos:position pos:line="204" pos:column="25"/></modifier></type><name pos:line="204" pos:column="25">pidfile<pos:position pos:line="204" pos:column="32"/></name> <init pos:line="204" pos:column="33">= <expr><name pos:line="204" pos:column="35">NULL<pos:position pos:line="204" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="204" pos:column="40"/></decl_stmt>
            <expr_stmt><expr><name pos:line="205" pos:column="13">pidfile<pos:position pos:line="205" pos:column="20"/></name> <operator pos:line="205" pos:column="21">=<pos:position pos:line="205" pos:column="22"/></operator> <call><name pos:line="205" pos:column="23">ap_server_root_relative<pos:position pos:line="205" pos:column="46"/></name> <argument_list pos:line="205" pos:column="47">(<argument><expr><name pos:line="205" pos:column="48">pconf<pos:position pos:line="205" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="55">ap_pid_fname<pos:position pos:line="205" pos:column="67"/></name></expr></argument>)<pos:position pos:line="205" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="69"/></expr_stmt>
            <if pos:line="206" pos:column="13">if <condition pos:line="206" pos:column="16">( <expr><name pos:line="206" pos:column="18">pidfile<pos:position pos:line="206" pos:column="25"/></name> <operator pos:line="206" pos:column="26">!=<pos:position pos:line="206" pos:column="28"/></operator> <name pos:line="206" pos:column="29">NULL<pos:position pos:line="206" pos:column="33"/></name> <operator pos:line="206" pos:column="34">&amp;&amp;<pos:position pos:line="206" pos:column="44"/></operator> <call><name pos:line="206" pos:column="37">unlink<pos:position pos:line="206" pos:column="43"/></name><argument_list pos:line="206" pos:column="43">(<argument><expr><name pos:line="206" pos:column="44">pidfile<pos:position pos:line="206" pos:column="51"/></name></expr></argument>)<pos:position pos:line="206" pos:column="52"/></argument_list></call> <operator pos:line="206" pos:column="53">==<pos:position pos:line="206" pos:column="55"/></operator> <literal type="number" pos:line="206" pos:column="56">0<pos:position pos:line="206" pos:column="57"/></literal></expr>)<pos:position pos:line="206" pos:column="58"/></condition><then pos:line="206" pos:column="58">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="207" pos:column="17">ap_log_error<pos:position pos:line="207" pos:column="29"/></name><argument_list pos:line="207" pos:column="29">(<argument><expr><name pos:line="207" pos:column="30">APLOG_MARK<pos:position pos:line="207" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="42">APLOG_INFO<pos:position pos:line="207" pos:column="52"/></name></expr></argument>,
                                <argument><expr><literal type="number" pos:line="208" pos:column="33">0<pos:position pos:line="208" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="208" pos:column="36">ap_server_conf<pos:position pos:line="208" pos:column="50"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="209" pos:column="33">"removed PID file %s (pid=%ld)"<pos:position pos:line="209" pos:column="64"/></literal></expr></argument>,
                                <argument><expr><name pos:line="210" pos:column="33">pidfile<pos:position pos:line="210" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="210" pos:column="42">(<pos:position pos:line="210" pos:column="43"/></operator><name pos:line="210" pos:column="43">long<pos:position pos:line="210" pos:column="47"/></name><operator pos:line="210" pos:column="47">)<pos:position pos:line="210" pos:column="48"/></operator><call><name pos:line="210" pos:column="48">getpid<pos:position pos:line="210" pos:column="54"/></name><argument_list pos:line="210" pos:column="54">()<pos:position pos:line="210" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="210" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="58"/></expr_stmt></block></then></if>
        }<pos:position pos:line="211" pos:column="10"/></block>

        <expr_stmt><expr><call><name pos:line="213" pos:column="9">ap_log_error<pos:position pos:line="213" pos:column="21"/></name><argument_list pos:line="213" pos:column="21">(<argument><expr><name pos:line="213" pos:column="22">APLOG_MARK<pos:position pos:line="213" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="34">APLOG_NOTICE<pos:position pos:line="213" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="213" pos:column="48">0<pos:position pos:line="213" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="213" pos:column="51">ap_server_conf<pos:position pos:line="213" pos:column="65"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="214" pos:column="21">"caught SIGTERM, shutting down"<pos:position pos:line="214" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="54"/></expr_stmt>

        <return pos:line="216" pos:column="9">return <expr><literal type="number" pos:line="216" pos:column="16">1<pos:position pos:line="216" pos:column="17"/></literal></expr>;<pos:position pos:line="216" pos:column="18"/></return>
    }<pos:position pos:line="217" pos:column="6"/></block></then> <elseif pos:line="217" pos:column="7">else <if pos:line="217" pos:column="12">if <condition pos:line="217" pos:column="15">(<expr><name pos:line="217" pos:column="16">shutdown_pending<pos:position pos:line="217" pos:column="32"/></name></expr>)<pos:position pos:line="217" pos:column="33"/></condition><then pos:line="217" pos:column="33"> <block pos:line="217" pos:column="34">{
        <comment type="block" pos:line="218" pos:column="9">/* Time to perform a graceful shut down:
         * Reap the inactive children, and ask the active ones
         * to close their listeners, then wait until they are
         * all done to exit.
         */</comment>
        <decl_stmt><decl><type><name pos:line="223" pos:column="9">int<pos:position pos:line="223" pos:column="12"/></name></type> <name pos:line="223" pos:column="13">active_children<pos:position pos:line="223" pos:column="28"/></name></decl>;<pos:position pos:line="223" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="224" pos:column="9">apr_time_t<pos:position pos:line="224" pos:column="19"/></name></type> <name pos:line="224" pos:column="20">cutoff<pos:position pos:line="224" pos:column="26"/></name> <init pos:line="224" pos:column="27">= <expr><literal type="number" pos:line="224" pos:column="29">0<pos:position pos:line="224" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="224" pos:column="31"/></decl_stmt>

        <comment type="block" pos:line="226" pos:column="9">/* Stop listening */</comment>
        <expr_stmt><expr><call><name pos:line="227" pos:column="9">ap_close_listeners<pos:position pos:line="227" pos:column="27"/></name><argument_list pos:line="227" pos:column="27">()<pos:position pos:line="227" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="30"/></expr_stmt>

        <comment type="block" pos:line="229" pos:column="9">/* kill off the idle ones */</comment>
        <expr_stmt><expr><call><name pos:line="230" pos:column="9">ap_mpm_pod_killpg<pos:position pos:line="230" pos:column="26"/></name><argument_list pos:line="230" pos:column="26">(<argument><expr><name pos:line="230" pos:column="27">pod<pos:position pos:line="230" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="32">ap_max_daemons_limit<pos:position pos:line="230" pos:column="52"/></name></expr></argument>)<pos:position pos:line="230" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="54"/></expr_stmt>

        <comment type="block" pos:line="232" pos:column="9">/* Send SIGUSR1 to the active children */</comment>
        <expr_stmt><expr><name pos:line="233" pos:column="9">active_children<pos:position pos:line="233" pos:column="24"/></name> <operator pos:line="233" pos:column="25">=<pos:position pos:line="233" pos:column="26"/></operator> <literal type="number" pos:line="233" pos:column="27">0<pos:position pos:line="233" pos:column="28"/></literal></expr>;<pos:position pos:line="233" pos:column="29"/></expr_stmt>
        <for pos:line="234" pos:column="9">for <control pos:line="234" pos:column="13">(<init><expr><name pos:line="234" pos:column="14">index<pos:position pos:line="234" pos:column="19"/></name> <operator pos:line="234" pos:column="20">=<pos:position pos:line="234" pos:column="21"/></operator> <literal type="number" pos:line="234" pos:column="22">0<pos:position pos:line="234" pos:column="23"/></literal></expr>;<pos:position pos:line="234" pos:column="24"/></init> <condition><expr><name pos:line="234" pos:column="25">index<pos:position pos:line="234" pos:column="30"/></name> <operator pos:line="234" pos:column="31">&lt;<pos:position pos:line="234" pos:column="35"/></operator> <name pos:line="234" pos:column="33">ap_daemons_limit<pos:position pos:line="234" pos:column="49"/></name></expr>;<pos:position pos:line="234" pos:column="50"/></condition> <incr><expr><operator pos:line="234" pos:column="51">++<pos:position pos:line="234" pos:column="53"/></operator><name pos:line="234" pos:column="53">index<pos:position pos:line="234" pos:column="58"/></name></expr></incr>)<pos:position pos:line="234" pos:column="59"/></control> <block pos:line="234" pos:column="60">{
            <if pos:line="235" pos:column="13">if <condition pos:line="235" pos:column="16">(<expr><name><name pos:line="235" pos:column="17">ap_scoreboard_image<pos:position pos:line="235" pos:column="36"/></name><operator pos:line="235" pos:column="36">-&gt;<pos:position pos:line="235" pos:column="41"/></operator><name pos:line="235" pos:column="38">servers<pos:position pos:line="235" pos:column="45"/></name><index pos:line="235" pos:column="45">[<expr><name pos:line="235" pos:column="46">index<pos:position pos:line="235" pos:column="51"/></name></expr>]<pos:position pos:line="235" pos:column="52"/></index><index pos:line="235" pos:column="52">[<expr><literal type="number" pos:line="235" pos:column="53">0<pos:position pos:line="235" pos:column="54"/></literal></expr>]<pos:position pos:line="235" pos:column="55"/></index></name><operator pos:line="235" pos:column="55">.<pos:position pos:line="235" pos:column="56"/></operator><name pos:line="235" pos:column="56">status<pos:position pos:line="235" pos:column="62"/></name> <operator pos:line="235" pos:column="63">!=<pos:position pos:line="235" pos:column="65"/></operator> <name pos:line="235" pos:column="66">SERVER_DEAD<pos:position pos:line="235" pos:column="77"/></name></expr>)<pos:position pos:line="235" pos:column="78"/></condition><then pos:line="235" pos:column="78"> <block pos:line="235" pos:column="79">{
                <comment type="block" pos:line="236" pos:column="17">/* Ask each child to close its listeners. */</comment>
                <expr_stmt><expr><call><name pos:line="237" pos:column="17">kill<pos:position pos:line="237" pos:column="21"/></name><argument_list pos:line="237" pos:column="21">(<argument><expr><call><name pos:line="237" pos:column="22">MPM_CHILD_PID<pos:position pos:line="237" pos:column="35"/></name><argument_list pos:line="237" pos:column="35">(<argument><expr><name pos:line="237" pos:column="36">index<pos:position pos:line="237" pos:column="41"/></name></expr></argument>)<pos:position pos:line="237" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="237" pos:column="44">AP_SIG_GRACEFUL<pos:position pos:line="237" pos:column="59"/></name></expr></argument>)<pos:position pos:line="237" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><name pos:line="238" pos:column="17">active_children<pos:position pos:line="238" pos:column="32"/></name><operator pos:line="238" pos:column="32">++<pos:position pos:line="238" pos:column="34"/></operator></expr>;<pos:position pos:line="238" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="239" pos:column="14"/></block></then></if>
        }<pos:position pos:line="240" pos:column="10"/></block></for>

        <comment type="block" pos:line="242" pos:column="9">/* Allow each child which actually finished to exit */</comment>
        <expr_stmt><expr><call><name pos:line="243" pos:column="9">ap_relieve_child_processes<pos:position pos:line="243" pos:column="35"/></name><argument_list pos:line="243" pos:column="35">()<pos:position pos:line="243" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="38"/></expr_stmt>

        <comment type="block" pos:line="245" pos:column="9">/* cleanup pid file */</comment>
        <block pos:line="246" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="247" pos:column="13">const<pos:position pos:line="247" pos:column="18"/></specifier> <name pos:line="247" pos:column="19">char<pos:position pos:line="247" pos:column="23"/></name> <modifier pos:line="247" pos:column="24">*<pos:position pos:line="247" pos:column="25"/></modifier></type><name pos:line="247" pos:column="25">pidfile<pos:position pos:line="247" pos:column="32"/></name> <init pos:line="247" pos:column="33">= <expr><name pos:line="247" pos:column="35">NULL<pos:position pos:line="247" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="247" pos:column="40"/></decl_stmt>
            <expr_stmt><expr><name pos:line="248" pos:column="13">pidfile<pos:position pos:line="248" pos:column="20"/></name> <operator pos:line="248" pos:column="21">=<pos:position pos:line="248" pos:column="22"/></operator> <call><name pos:line="248" pos:column="23">ap_server_root_relative<pos:position pos:line="248" pos:column="46"/></name> <argument_list pos:line="248" pos:column="47">(<argument><expr><name pos:line="248" pos:column="48">pconf<pos:position pos:line="248" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="55">ap_pid_fname<pos:position pos:line="248" pos:column="67"/></name></expr></argument>)<pos:position pos:line="248" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="69"/></expr_stmt>
            <if pos:line="249" pos:column="13">if <condition pos:line="249" pos:column="16">( <expr><name pos:line="249" pos:column="18">pidfile<pos:position pos:line="249" pos:column="25"/></name> <operator pos:line="249" pos:column="26">!=<pos:position pos:line="249" pos:column="28"/></operator> <name pos:line="249" pos:column="29">NULL<pos:position pos:line="249" pos:column="33"/></name> <operator pos:line="249" pos:column="34">&amp;&amp;<pos:position pos:line="249" pos:column="44"/></operator> <call><name pos:line="249" pos:column="37">unlink<pos:position pos:line="249" pos:column="43"/></name><argument_list pos:line="249" pos:column="43">(<argument><expr><name pos:line="249" pos:column="44">pidfile<pos:position pos:line="249" pos:column="51"/></name></expr></argument>)<pos:position pos:line="249" pos:column="52"/></argument_list></call> <operator pos:line="249" pos:column="53">==<pos:position pos:line="249" pos:column="55"/></operator> <literal type="number" pos:line="249" pos:column="56">0<pos:position pos:line="249" pos:column="57"/></literal></expr>)<pos:position pos:line="249" pos:column="58"/></condition><then pos:line="249" pos:column="58">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="250" pos:column="17">ap_log_error<pos:position pos:line="250" pos:column="29"/></name><argument_list pos:line="250" pos:column="29">(<argument><expr><name pos:line="250" pos:column="30">APLOG_MARK<pos:position pos:line="250" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="42">APLOG_INFO<pos:position pos:line="250" pos:column="52"/></name></expr></argument>,
                                <argument><expr><literal type="number" pos:line="251" pos:column="33">0<pos:position pos:line="251" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="251" pos:column="36">ap_server_conf<pos:position pos:line="251" pos:column="50"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="252" pos:column="33">"removed PID file %s (pid=%ld)"<pos:position pos:line="252" pos:column="64"/></literal></expr></argument>,
                                <argument><expr><name pos:line="253" pos:column="33">pidfile<pos:position pos:line="253" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="253" pos:column="42">(<pos:position pos:line="253" pos:column="43"/></operator><name pos:line="253" pos:column="43">long<pos:position pos:line="253" pos:column="47"/></name><operator pos:line="253" pos:column="47">)<pos:position pos:line="253" pos:column="48"/></operator><call><name pos:line="253" pos:column="48">getpid<pos:position pos:line="253" pos:column="54"/></name><argument_list pos:line="253" pos:column="54">()<pos:position pos:line="253" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="253" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="58"/></expr_stmt></block></then></if>
        }<pos:position pos:line="254" pos:column="10"/></block>

        <expr_stmt><expr><call><name pos:line="256" pos:column="9">ap_log_error<pos:position pos:line="256" pos:column="21"/></name><argument_list pos:line="256" pos:column="21">(<argument><expr><name pos:line="256" pos:column="22">APLOG_MARK<pos:position pos:line="256" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="256" pos:column="34">APLOG_NOTICE<pos:position pos:line="256" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="256" pos:column="48">0<pos:position pos:line="256" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="256" pos:column="51">ap_server_conf<pos:position pos:line="256" pos:column="65"/></name></expr></argument>,
           <argument><expr><literal type="string" pos:line="257" pos:column="12">"caught "<pos:position pos:line="257" pos:column="21"/></literal> <name pos:line="257" pos:column="22">AP_SIG_GRACEFUL_STOP_STRING<pos:position pos:line="257" pos:column="49"/></name> <literal type="string" pos:line="257" pos:column="50">", shutting down gracefully"<pos:position pos:line="257" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="80"/></expr_stmt>

        <if pos:line="259" pos:column="9">if <condition pos:line="259" pos:column="12">(<expr><name pos:line="259" pos:column="13">ap_graceful_shutdown_timeout<pos:position pos:line="259" pos:column="41"/></name></expr>)<pos:position pos:line="259" pos:column="42"/></condition><then pos:line="259" pos:column="42"> <block pos:line="259" pos:column="43">{
            <expr_stmt><expr><name pos:line="260" pos:column="13">cutoff<pos:position pos:line="260" pos:column="19"/></name> <operator pos:line="260" pos:column="20">=<pos:position pos:line="260" pos:column="21"/></operator> <call><name pos:line="260" pos:column="22">apr_time_now<pos:position pos:line="260" pos:column="34"/></name><argument_list pos:line="260" pos:column="34">()<pos:position pos:line="260" pos:column="36"/></argument_list></call> <operator pos:line="260" pos:column="37">+<pos:position pos:line="260" pos:column="38"/></operator>
                     <call><name pos:line="261" pos:column="22">apr_time_from_sec<pos:position pos:line="261" pos:column="39"/></name><argument_list pos:line="261" pos:column="39">(<argument><expr><name pos:line="261" pos:column="40">ap_graceful_shutdown_timeout<pos:position pos:line="261" pos:column="68"/></name></expr></argument>)<pos:position pos:line="261" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="262" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="264" pos:column="9">/* Don't really exit until each child has finished */</comment>
        <expr_stmt><expr><name pos:line="265" pos:column="9">shutdown_pending<pos:position pos:line="265" pos:column="25"/></name> <operator pos:line="265" pos:column="26">=<pos:position pos:line="265" pos:column="27"/></operator> <literal type="number" pos:line="265" pos:column="28">0<pos:position pos:line="265" pos:column="29"/></literal></expr>;<pos:position pos:line="265" pos:column="30"/></expr_stmt>
        <do pos:line="266" pos:column="9">do <block pos:line="266" pos:column="12">{
            <comment type="block" pos:line="267" pos:column="13">/* Pause for a second */</comment>
            <expr_stmt><expr><call><name pos:line="268" pos:column="13">sleep<pos:position pos:line="268" pos:column="18"/></name><argument_list pos:line="268" pos:column="18">(<argument><expr><literal type="number" pos:line="268" pos:column="19">1<pos:position pos:line="268" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="268" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="22"/></expr_stmt>

            <comment type="block" pos:line="270" pos:column="13">/* Relieve any children which have now exited */</comment>
            <expr_stmt><expr><call><name pos:line="271" pos:column="13">ap_relieve_child_processes<pos:position pos:line="271" pos:column="39"/></name><argument_list pos:line="271" pos:column="39">()<pos:position pos:line="271" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="42"/></expr_stmt>

            <expr_stmt><expr><name pos:line="273" pos:column="13">active_children<pos:position pos:line="273" pos:column="28"/></name> <operator pos:line="273" pos:column="29">=<pos:position pos:line="273" pos:column="30"/></operator> <literal type="number" pos:line="273" pos:column="31">0<pos:position pos:line="273" pos:column="32"/></literal></expr>;<pos:position pos:line="273" pos:column="33"/></expr_stmt>
            <for pos:line="274" pos:column="13">for <control pos:line="274" pos:column="17">(<init><expr><name pos:line="274" pos:column="18">index<pos:position pos:line="274" pos:column="23"/></name> <operator pos:line="274" pos:column="24">=<pos:position pos:line="274" pos:column="25"/></operator> <literal type="number" pos:line="274" pos:column="26">0<pos:position pos:line="274" pos:column="27"/></literal></expr>;<pos:position pos:line="274" pos:column="28"/></init> <condition><expr><name pos:line="274" pos:column="29">index<pos:position pos:line="274" pos:column="34"/></name> <operator pos:line="274" pos:column="35">&lt;<pos:position pos:line="274" pos:column="39"/></operator> <name pos:line="274" pos:column="37">ap_daemons_limit<pos:position pos:line="274" pos:column="53"/></name></expr>;<pos:position pos:line="274" pos:column="54"/></condition> <incr><expr><operator pos:line="274" pos:column="55">++<pos:position pos:line="274" pos:column="57"/></operator><name pos:line="274" pos:column="57">index<pos:position pos:line="274" pos:column="62"/></name></expr></incr>)<pos:position pos:line="274" pos:column="63"/></control> <block pos:line="274" pos:column="64">{
                <if pos:line="275" pos:column="17">if <condition pos:line="275" pos:column="20">(<expr><call><name pos:line="275" pos:column="21">MPM_CHILD_PID<pos:position pos:line="275" pos:column="34"/></name><argument_list pos:line="275" pos:column="34">(<argument><expr><name pos:line="275" pos:column="35">index<pos:position pos:line="275" pos:column="40"/></name></expr></argument>)<pos:position pos:line="275" pos:column="41"/></argument_list></call> <operator pos:line="275" pos:column="42">!=<pos:position pos:line="275" pos:column="44"/></operator> <literal type="number" pos:line="275" pos:column="45">0<pos:position pos:line="275" pos:column="46"/></literal></expr>)<pos:position pos:line="275" pos:column="47"/></condition><then pos:line="275" pos:column="47"> <block pos:line="275" pos:column="48">{
                    <if pos:line="276" pos:column="21">if <condition pos:line="276" pos:column="24">(<expr><call><name pos:line="276" pos:column="25">kill<pos:position pos:line="276" pos:column="29"/></name><argument_list pos:line="276" pos:column="29">(<argument><expr><call><name pos:line="276" pos:column="30">MPM_CHILD_PID<pos:position pos:line="276" pos:column="43"/></name><argument_list pos:line="276" pos:column="43">(<argument><expr><name pos:line="276" pos:column="44">index<pos:position pos:line="276" pos:column="49"/></name></expr></argument>)<pos:position pos:line="276" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="276" pos:column="52">0<pos:position pos:line="276" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="276" pos:column="54"/></argument_list></call> <operator pos:line="276" pos:column="55">==<pos:position pos:line="276" pos:column="57"/></operator> <literal type="number" pos:line="276" pos:column="58">0<pos:position pos:line="276" pos:column="59"/></literal></expr>)<pos:position pos:line="276" pos:column="60"/></condition><then pos:line="276" pos:column="60"> <block pos:line="276" pos:column="61">{
                            <expr_stmt><expr><name pos:line="277" pos:column="29">active_children<pos:position pos:line="277" pos:column="44"/></name> <operator pos:line="277" pos:column="45">=<pos:position pos:line="277" pos:column="46"/></operator> <literal type="number" pos:line="277" pos:column="47">1<pos:position pos:line="277" pos:column="48"/></literal></expr>;<pos:position pos:line="277" pos:column="49"/></expr_stmt>
                            <comment type="block" pos:line="278" pos:column="29">/* Having just one child is enough to stay around */</comment>
                            <break pos:line="279" pos:column="29">break;<pos:position pos:line="279" pos:column="35"/></break>
                    }<pos:position pos:line="280" pos:column="22"/></block></then></if>
                }<pos:position pos:line="281" pos:column="18"/></block></then></if>
            }<pos:position pos:line="282" pos:column="14"/></block></for>
        }<pos:position pos:line="283" pos:column="10"/></block> while <condition pos:line="283" pos:column="17">(<expr><operator pos:line="283" pos:column="18">!<pos:position pos:line="283" pos:column="19"/></operator><name pos:line="283" pos:column="19">shutdown_pending<pos:position pos:line="283" pos:column="35"/></name> <operator pos:line="283" pos:column="36">&amp;&amp;<pos:position pos:line="283" pos:column="46"/></operator> <name pos:line="283" pos:column="39">active_children<pos:position pos:line="283" pos:column="54"/></name> <operator pos:line="283" pos:column="55">&amp;&amp;<pos:position pos:line="283" pos:column="65"/></operator>
                 <operator pos:line="284" pos:column="18">(<pos:position pos:line="284" pos:column="19"/></operator><operator pos:line="284" pos:column="19">!<pos:position pos:line="284" pos:column="20"/></operator><name pos:line="284" pos:column="20">ap_graceful_shutdown_timeout<pos:position pos:line="284" pos:column="48"/></name> <operator pos:line="284" pos:column="49">||<pos:position pos:line="284" pos:column="51"/></operator> <call><name pos:line="284" pos:column="52">apr_time_now<pos:position pos:line="284" pos:column="64"/></name><argument_list pos:line="284" pos:column="64">()<pos:position pos:line="284" pos:column="66"/></argument_list></call> <operator pos:line="284" pos:column="67">&lt;<pos:position pos:line="284" pos:column="71"/></operator> <name pos:line="284" pos:column="69">cutoff<pos:position pos:line="284" pos:column="75"/></name><operator pos:line="284" pos:column="75">)<pos:position pos:line="284" pos:column="76"/></operator></expr>)<pos:position pos:line="284" pos:column="77"/></condition>;<pos:position pos:line="284" pos:column="78"/></do>

        <comment type="block" pos:line="286" pos:column="9">/* We might be here because we received SIGTERM, either
         * way, try and make sure that all of our processes are
         * really dead.
         */</comment>
        <expr_stmt><expr><call><name pos:line="290" pos:column="9">unixd_killpg<pos:position pos:line="290" pos:column="21"/></name><argument_list pos:line="290" pos:column="21">(<argument><expr><call><name pos:line="290" pos:column="22">getpgrp<pos:position pos:line="290" pos:column="29"/></name><argument_list pos:line="290" pos:column="29">()<pos:position pos:line="290" pos:column="31"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="290" pos:column="33">SIGTERM<pos:position pos:line="290" pos:column="40"/></name></expr></argument>)<pos:position pos:line="290" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="42"/></expr_stmt>

        <return pos:line="292" pos:column="9">return <expr><literal type="number" pos:line="292" pos:column="16">1<pos:position pos:line="292" pos:column="17"/></literal></expr>;<pos:position pos:line="292" pos:column="18"/></return>
    }<pos:position pos:line="293" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="295" pos:column="5">/* we've been told to restart */</comment>
    <expr_stmt><expr><call><name pos:line="296" pos:column="5">apr_signal<pos:position pos:line="296" pos:column="15"/></name><argument_list pos:line="296" pos:column="15">(<argument><expr><name pos:line="296" pos:column="16">SIGHUP<pos:position pos:line="296" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="296" pos:column="24">SIG_IGN<pos:position pos:line="296" pos:column="31"/></name></expr></argument>)<pos:position pos:line="296" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="297" pos:column="5">apr_signal<pos:position pos:line="297" pos:column="15"/></name><argument_list pos:line="297" pos:column="15">(<argument><expr><name pos:line="297" pos:column="16">AP_SIG_GRACEFUL<pos:position pos:line="297" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="33">SIG_IGN<pos:position pos:line="297" pos:column="40"/></name></expr></argument>)<pos:position pos:line="297" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="42"/></expr_stmt>
    <if pos:line="298" pos:column="5">if <condition pos:line="298" pos:column="8">(<expr><name pos:line="298" pos:column="9">one_process<pos:position pos:line="298" pos:column="20"/></name></expr>)<pos:position pos:line="298" pos:column="21"/></condition><then pos:line="298" pos:column="21"> <block pos:line="298" pos:column="22">{
        <comment type="block" pos:line="299" pos:column="9">/* not worth thinking about */</comment>
        <return pos:line="300" pos:column="9">return <expr><literal type="number" pos:line="300" pos:column="16">1<pos:position pos:line="300" pos:column="17"/></literal></expr>;<pos:position pos:line="300" pos:column="18"/></return>
    }<pos:position pos:line="301" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="303" pos:column="5">/* advance to the next generation */</comment>
    <comment type="block" pos:line="304" pos:column="5">/* XXX: we really need to make sure this new generation number isn't in
     * use by any of the children.
     */</comment>
    <expr_stmt><expr><operator pos:line="307" pos:column="5">++<pos:position pos:line="307" pos:column="7"/></operator><name pos:line="307" pos:column="7">ap_my_generation<pos:position pos:line="307" pos:column="23"/></name></expr>;<pos:position pos:line="307" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="308" pos:column="5">ap_scoreboard_image<pos:position pos:line="308" pos:column="24"/></name><operator pos:line="308" pos:column="24">-&gt;<pos:position pos:line="308" pos:column="29"/></operator><name pos:line="308" pos:column="26">global<pos:position pos:line="308" pos:column="32"/></name><operator pos:line="308" pos:column="32">-&gt;<pos:position pos:line="308" pos:column="37"/></operator><name pos:line="308" pos:column="34">running_generation<pos:position pos:line="308" pos:column="52"/></name></name> <operator pos:line="308" pos:column="53">=<pos:position pos:line="308" pos:column="54"/></operator> <name pos:line="308" pos:column="55">ap_my_generation<pos:position pos:line="308" pos:column="71"/></name></expr>;<pos:position pos:line="308" pos:column="72"/></expr_stmt>

    <if pos:line="310" pos:column="5">if <condition pos:line="310" pos:column="8">(<expr><name pos:line="310" pos:column="9">is_graceful<pos:position pos:line="310" pos:column="20"/></name></expr>)<pos:position pos:line="310" pos:column="21"/></condition><then pos:line="310" pos:column="21"> <block pos:line="310" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="311" pos:column="9">ap_log_error<pos:position pos:line="311" pos:column="21"/></name><argument_list pos:line="311" pos:column="21">(<argument><expr><name pos:line="311" pos:column="22">APLOG_MARK<pos:position pos:line="311" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="311" pos:column="34">APLOG_NOTICE<pos:position pos:line="311" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="311" pos:column="48">0<pos:position pos:line="311" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="311" pos:column="51">ap_server_conf<pos:position pos:line="311" pos:column="65"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="312" pos:column="21">"Graceful restart requested, doing restart"<pos:position pos:line="312" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="312" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="66"/></expr_stmt>

        <comment type="block" pos:line="314" pos:column="9">/* kill off the idle ones */</comment>
        <expr_stmt><expr><call><name pos:line="315" pos:column="9">ap_mpm_pod_killpg<pos:position pos:line="315" pos:column="26"/></name><argument_list pos:line="315" pos:column="26">(<argument><expr><name pos:line="315" pos:column="27">pod<pos:position pos:line="315" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="315" pos:column="32">ap_max_daemons_limit<pos:position pos:line="315" pos:column="52"/></name></expr></argument>)<pos:position pos:line="315" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="54"/></expr_stmt>

        <comment type="block" pos:line="317" pos:column="9">/* This is mostly for debugging... so that we know what is still
         * gracefully dealing with existing request.  This will break
         * in a very nasty way if we ever have the scoreboard totally
         * file-based (no shared memory)
         */</comment>
        <for pos:line="322" pos:column="9">for <control pos:line="322" pos:column="13">(<init><expr><name pos:line="322" pos:column="14">index<pos:position pos:line="322" pos:column="19"/></name> <operator pos:line="322" pos:column="20">=<pos:position pos:line="322" pos:column="21"/></operator> <literal type="number" pos:line="322" pos:column="22">0<pos:position pos:line="322" pos:column="23"/></literal></expr>;<pos:position pos:line="322" pos:column="24"/></init> <condition><expr><name pos:line="322" pos:column="25">index<pos:position pos:line="322" pos:column="30"/></name> <operator pos:line="322" pos:column="31">&lt;<pos:position pos:line="322" pos:column="35"/></operator> <name pos:line="322" pos:column="33">ap_daemons_limit<pos:position pos:line="322" pos:column="49"/></name></expr>;<pos:position pos:line="322" pos:column="50"/></condition> <incr><expr><operator pos:line="322" pos:column="51">++<pos:position pos:line="322" pos:column="53"/></operator><name pos:line="322" pos:column="53">index<pos:position pos:line="322" pos:column="58"/></name></expr></incr>)<pos:position pos:line="322" pos:column="59"/></control> <block pos:line="322" pos:column="60">{
            <if pos:line="323" pos:column="13">if <condition pos:line="323" pos:column="16">(<expr><name><name pos:line="323" pos:column="17">ap_scoreboard_image<pos:position pos:line="323" pos:column="36"/></name><operator pos:line="323" pos:column="36">-&gt;<pos:position pos:line="323" pos:column="41"/></operator><name pos:line="323" pos:column="38">servers<pos:position pos:line="323" pos:column="45"/></name><index pos:line="323" pos:column="45">[<expr><name pos:line="323" pos:column="46">index<pos:position pos:line="323" pos:column="51"/></name></expr>]<pos:position pos:line="323" pos:column="52"/></index><index pos:line="323" pos:column="52">[<expr><literal type="number" pos:line="323" pos:column="53">0<pos:position pos:line="323" pos:column="54"/></literal></expr>]<pos:position pos:line="323" pos:column="55"/></index></name><operator pos:line="323" pos:column="55">.<pos:position pos:line="323" pos:column="56"/></operator><name pos:line="323" pos:column="56">status<pos:position pos:line="323" pos:column="62"/></name> <operator pos:line="323" pos:column="63">!=<pos:position pos:line="323" pos:column="65"/></operator> <name pos:line="323" pos:column="66">SERVER_DEAD<pos:position pos:line="323" pos:column="77"/></name></expr>)<pos:position pos:line="323" pos:column="78"/></condition><then pos:line="323" pos:column="78"> <block pos:line="323" pos:column="79">{
                <expr_stmt><expr><name><name pos:line="324" pos:column="17">ap_scoreboard_image<pos:position pos:line="324" pos:column="36"/></name><operator pos:line="324" pos:column="36">-&gt;<pos:position pos:line="324" pos:column="41"/></operator><name pos:line="324" pos:column="38">servers<pos:position pos:line="324" pos:column="45"/></name><index pos:line="324" pos:column="45">[<expr><name pos:line="324" pos:column="46">index<pos:position pos:line="324" pos:column="51"/></name></expr>]<pos:position pos:line="324" pos:column="52"/></index><index pos:line="324" pos:column="52">[<expr><literal type="number" pos:line="324" pos:column="53">0<pos:position pos:line="324" pos:column="54"/></literal></expr>]<pos:position pos:line="324" pos:column="55"/></index></name><operator pos:line="324" pos:column="55">.<pos:position pos:line="324" pos:column="56"/></operator><name pos:line="324" pos:column="56">status<pos:position pos:line="324" pos:column="62"/></name> <operator pos:line="324" pos:column="63">=<pos:position pos:line="324" pos:column="64"/></operator> <name pos:line="324" pos:column="65">SERVER_GRACEFUL<pos:position pos:line="324" pos:column="80"/></name></expr>;<pos:position pos:line="324" pos:column="81"/></expr_stmt>
                <comment type="block" pos:line="325" pos:column="17">/* Ask each child to close its listeners.
                 *
                 * NOTE: we use the scoreboard, because if we send SIGUSR1
                 * to every process in the group, this may include CGI's,
                 * piped loggers, etc. They almost certainly won't handle
                 * it gracefully.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="332" pos:column="17">kill<pos:position pos:line="332" pos:column="21"/></name><argument_list pos:line="332" pos:column="21">(<argument><expr><name><name pos:line="332" pos:column="22">ap_scoreboard_image<pos:position pos:line="332" pos:column="41"/></name><operator pos:line="332" pos:column="41">-&gt;<pos:position pos:line="332" pos:column="46"/></operator><name pos:line="332" pos:column="43">parent<pos:position pos:line="332" pos:column="49"/></name><index pos:line="332" pos:column="49">[<expr><name pos:line="332" pos:column="50">index<pos:position pos:line="332" pos:column="55"/></name></expr>]<pos:position pos:line="332" pos:column="56"/></index></name><operator pos:line="332" pos:column="56">.<pos:position pos:line="332" pos:column="57"/></operator><name pos:line="332" pos:column="57">pid<pos:position pos:line="332" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="332" pos:column="62">AP_SIG_GRACEFUL<pos:position pos:line="332" pos:column="77"/></name></expr></argument>)<pos:position pos:line="332" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="79"/></expr_stmt>
            }<pos:position pos:line="333" pos:column="14"/></block></then></if>
        }<pos:position pos:line="334" pos:column="10"/></block></for>
    }<pos:position pos:line="335" pos:column="6"/></block></then>
    <else pos:line="336" pos:column="5">else <block pos:line="336" pos:column="10">{
        <comment type="block" pos:line="337" pos:column="9">/* Kill 'em off */</comment>
        <if pos:line="338" pos:column="9">if <condition pos:line="338" pos:column="12">(<expr><call><name pos:line="338" pos:column="13">unixd_killpg<pos:position pos:line="338" pos:column="25"/></name><argument_list pos:line="338" pos:column="25">(<argument><expr><call><name pos:line="338" pos:column="26">getpgrp<pos:position pos:line="338" pos:column="33"/></name><argument_list pos:line="338" pos:column="33">()<pos:position pos:line="338" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="338" pos:column="37">SIGHUP<pos:position pos:line="338" pos:column="43"/></name></expr></argument>)<pos:position pos:line="338" pos:column="44"/></argument_list></call> <operator pos:line="338" pos:column="45">&lt;<pos:position pos:line="338" pos:column="49"/></operator> <literal type="number" pos:line="338" pos:column="47">0<pos:position pos:line="338" pos:column="48"/></literal></expr>)<pos:position pos:line="338" pos:column="49"/></condition><then pos:line="338" pos:column="49"> <block pos:line="338" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="339" pos:column="13">ap_log_error<pos:position pos:line="339" pos:column="25"/></name><argument_list pos:line="339" pos:column="25">(<argument><expr><name pos:line="339" pos:column="26">APLOG_MARK<pos:position pos:line="339" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="339" pos:column="38">APLOG_WARNING<pos:position pos:line="339" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="339" pos:column="53">errno<pos:position pos:line="339" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="339" pos:column="60">ap_server_conf<pos:position pos:line="339" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="339" pos:column="76">"killpg SIGHUP"<pos:position pos:line="339" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="339" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="93"/></expr_stmt>
        }<pos:position pos:line="340" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="341" pos:column="9">ap_reclaim_child_processes<pos:position pos:line="341" pos:column="35"/></name><argument_list pos:line="341" pos:column="35">(<argument><expr><literal type="number" pos:line="341" pos:column="36">0<pos:position pos:line="341" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="341" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="39"/></expr_stmt>          <comment type="block" pos:line="341" pos:column="49">/* Not when just starting up */</comment>
        <expr_stmt><expr><call><name pos:line="342" pos:column="9">ap_log_error<pos:position pos:line="342" pos:column="21"/></name><argument_list pos:line="342" pos:column="21">(<argument><expr><name pos:line="342" pos:column="22">APLOG_MARK<pos:position pos:line="342" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="342" pos:column="34">APLOG_NOTICE<pos:position pos:line="342" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="342" pos:column="48">0<pos:position pos:line="342" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="342" pos:column="51">ap_server_conf<pos:position pos:line="342" pos:column="65"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="343" pos:column="21">"SIGHUP received.  Attempting to restart"<pos:position pos:line="343" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="343" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="344" pos:column="6"/></block></else></if>

    <return pos:line="346" pos:column="5">return <expr><literal type="number" pos:line="346" pos:column="12">0<pos:position pos:line="346" pos:column="13"/></literal></expr>;<pos:position pos:line="346" pos:column="14"/></return>
}<pos:position pos:line="347" pos:column="2"/></block></then></if>

<comment type="block" pos:line="349" pos:column="1">/* This really should be a post_config hook, but the error log is already
 * redirected by that point, so we need to do this in the open_logs phase.
 */</comment>
<function><specifier pos:line="352" pos:column="1">static<pos:position pos:line="352" pos:column="7"/></specifier> <type><name pos:line="352" pos:column="8">int<pos:position pos:line="352" pos:column="11"/></name></type> <name pos:line="352" pos:column="12">prefork_open_logs<pos:position pos:line="352" pos:column="29"/></name><parameter_list pos:line="352" pos:column="29">(<parameter><decl><type><name pos:line="352" pos:column="30">apr_pool_t<pos:position pos:line="352" pos:column="40"/></name> <modifier pos:line="352" pos:column="41">*<pos:position pos:line="352" pos:column="42"/></modifier></type><name pos:line="352" pos:column="42">p<pos:position pos:line="352" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="352" pos:column="45">apr_pool_t<pos:position pos:line="352" pos:column="55"/></name> <modifier pos:line="352" pos:column="56">*<pos:position pos:line="352" pos:column="57"/></modifier></type><name pos:line="352" pos:column="57">plog<pos:position pos:line="352" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="352" pos:column="63">apr_pool_t<pos:position pos:line="352" pos:column="73"/></name> <modifier pos:line="352" pos:column="74">*<pos:position pos:line="352" pos:column="75"/></modifier></type><name pos:line="352" pos:column="75">ptemp<pos:position pos:line="352" pos:column="80"/></name></decl></parameter>, <parameter><decl><type><name pos:line="352" pos:column="82">server_rec<pos:position pos:line="352" pos:column="92"/></name> <modifier pos:line="352" pos:column="93">*<pos:position pos:line="352" pos:column="94"/></modifier></type><name pos:line="352" pos:column="94">s<pos:position pos:line="352" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="352" pos:column="96"/></parameter_list>
<block pos:line="353" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="354" pos:column="5">apr_status_t<pos:position pos:line="354" pos:column="17"/></name></type> <name pos:line="354" pos:column="18">rv<pos:position pos:line="354" pos:column="20"/></name></decl>;<pos:position pos:line="354" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="356" pos:column="5">pconf<pos:position pos:line="356" pos:column="10"/></name> <operator pos:line="356" pos:column="11">=<pos:position pos:line="356" pos:column="12"/></operator> <name pos:line="356" pos:column="13">p<pos:position pos:line="356" pos:column="14"/></name></expr>;<pos:position pos:line="356" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="357" pos:column="5">ap_server_conf<pos:position pos:line="357" pos:column="19"/></name> <operator pos:line="357" pos:column="20">=<pos:position pos:line="357" pos:column="21"/></operator> <name pos:line="357" pos:column="22">s<pos:position pos:line="357" pos:column="23"/></name></expr>;<pos:position pos:line="357" pos:column="24"/></expr_stmt>

    <if pos:line="359" pos:column="5">if <condition pos:line="359" pos:column="8">(<expr><operator pos:line="359" pos:column="9">(<pos:position pos:line="359" pos:column="10"/></operator><name pos:line="359" pos:column="10">num_listensocks<pos:position pos:line="359" pos:column="25"/></name> <operator pos:line="359" pos:column="26">=<pos:position pos:line="359" pos:column="27"/></operator> <call><name pos:line="359" pos:column="28">ap_setup_listeners<pos:position pos:line="359" pos:column="46"/></name><argument_list pos:line="359" pos:column="46">(<argument><expr><name pos:line="359" pos:column="47">ap_server_conf<pos:position pos:line="359" pos:column="61"/></name></expr></argument>)<pos:position pos:line="359" pos:column="62"/></argument_list></call><operator pos:line="359" pos:column="62">)<pos:position pos:line="359" pos:column="63"/></operator> <operator pos:line="359" pos:column="64">&lt;<pos:position pos:line="359" pos:column="68"/></operator> <literal type="number" pos:line="359" pos:column="66">1<pos:position pos:line="359" pos:column="67"/></literal></expr>)<pos:position pos:line="359" pos:column="68"/></condition><then pos:line="359" pos:column="68"> <block pos:line="359" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="360" pos:column="9">ap_log_error<pos:position pos:line="360" pos:column="21"/></name><argument_list pos:line="360" pos:column="21">(<argument><expr><name pos:line="360" pos:column="22">APLOG_MARK<pos:position pos:line="360" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="360" pos:column="34">APLOG_ALERT<pos:position pos:line="360" pos:column="45"/></name><operator pos:line="360" pos:column="45">|<pos:position pos:line="360" pos:column="46"/></operator><name pos:line="360" pos:column="46">APLOG_STARTUP<pos:position pos:line="360" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="360" pos:column="61">0<pos:position pos:line="360" pos:column="62"/></literal></expr></argument>,
                     <argument><expr><name pos:line="361" pos:column="22">NULL<pos:position pos:line="361" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="361" pos:column="28">"no listening sockets available, shutting down"<pos:position pos:line="361" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="361" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="77"/></expr_stmt>
        <return pos:line="362" pos:column="9">return <expr><name pos:line="362" pos:column="16">DONE<pos:position pos:line="362" pos:column="20"/></name></expr>;<pos:position pos:line="362" pos:column="21"/></return>
    }<pos:position pos:line="363" pos:column="6"/></block></then></if>

    <if pos:line="365" pos:column="5">if <condition pos:line="365" pos:column="8">(<expr><operator pos:line="365" pos:column="9">(<pos:position pos:line="365" pos:column="10"/></operator><name pos:line="365" pos:column="10">rv<pos:position pos:line="365" pos:column="12"/></name> <operator pos:line="365" pos:column="13">=<pos:position pos:line="365" pos:column="14"/></operator> <call><name pos:line="365" pos:column="15">ap_mpm_pod_open<pos:position pos:line="365" pos:column="30"/></name><argument_list pos:line="365" pos:column="30">(<argument><expr><name pos:line="365" pos:column="31">pconf<pos:position pos:line="365" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="365" pos:column="38">&amp;<pos:position pos:line="365" pos:column="43"/></operator><name pos:line="365" pos:column="39">pod<pos:position pos:line="365" pos:column="42"/></name></expr></argument>)<pos:position pos:line="365" pos:column="43"/></argument_list></call><operator pos:line="365" pos:column="43">)<pos:position pos:line="365" pos:column="44"/></operator></expr>)<pos:position pos:line="365" pos:column="45"/></condition><then pos:line="365" pos:column="45"> <block pos:line="365" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="366" pos:column="9">ap_log_error<pos:position pos:line="366" pos:column="21"/></name><argument_list pos:line="366" pos:column="21">(<argument><expr><name pos:line="366" pos:column="22">APLOG_MARK<pos:position pos:line="366" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="366" pos:column="34">APLOG_CRIT<pos:position pos:line="366" pos:column="44"/></name><operator pos:line="366" pos:column="44">|<pos:position pos:line="366" pos:column="45"/></operator><name pos:line="366" pos:column="45">APLOG_STARTUP<pos:position pos:line="366" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="366" pos:column="60">rv<pos:position pos:line="366" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="366" pos:column="64">NULL<pos:position pos:line="366" pos:column="68"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="367" pos:column="17">"Could not open pipe-of-death."<pos:position pos:line="367" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="367" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="50"/></expr_stmt>
        <return pos:line="368" pos:column="9">return <expr><name pos:line="368" pos:column="16">DONE<pos:position pos:line="368" pos:column="20"/></name></expr>;<pos:position pos:line="368" pos:column="21"/></return>
    }<pos:position pos:line="369" pos:column="6"/></block></then></if>
    <return pos:line="370" pos:column="5">return <expr><name pos:line="370" pos:column="12">OK<pos:position pos:line="370" pos:column="14"/></name></expr>;<pos:position pos:line="370" pos:column="15"/></return>
}<pos:position pos:line="371" pos:column="2"/></block></function>

<function><specifier pos:line="373" pos:column="1">static<pos:position pos:line="373" pos:column="7"/></specifier> <type><name pos:line="373" pos:column="8">int<pos:position pos:line="373" pos:column="11"/></name></type> <name pos:line="373" pos:column="12">prefork_pre_config<pos:position pos:line="373" pos:column="30"/></name><parameter_list pos:line="373" pos:column="30">(<parameter><decl><type><name pos:line="373" pos:column="31">apr_pool_t<pos:position pos:line="373" pos:column="41"/></name> <modifier pos:line="373" pos:column="42">*<pos:position pos:line="373" pos:column="43"/></modifier></type><name pos:line="373" pos:column="43">p<pos:position pos:line="373" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="373" pos:column="46">apr_pool_t<pos:position pos:line="373" pos:column="56"/></name> <modifier pos:line="373" pos:column="57">*<pos:position pos:line="373" pos:column="58"/></modifier></type><name pos:line="373" pos:column="58">plog<pos:position pos:line="373" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="373" pos:column="64">apr_pool_t<pos:position pos:line="373" pos:column="74"/></name> <modifier pos:line="373" pos:column="75">*<pos:position pos:line="373" pos:column="76"/></modifier></type><name pos:line="373" pos:column="76">ptemp<pos:position pos:line="373" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="373" pos:column="82"/></parameter_list>
<block pos:line="374" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="375" pos:column="5">static<pos:position pos:line="375" pos:column="11"/></specifier> <type><name pos:line="375" pos:column="12">int<pos:position pos:line="375" pos:column="15"/></name></type> <name pos:line="375" pos:column="16">restart_num<pos:position pos:line="375" pos:column="27"/></name> <init pos:line="375" pos:column="28">= <expr><literal type="number" pos:line="375" pos:column="30">0<pos:position pos:line="375" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="375" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="376" pos:column="5">int<pos:position pos:line="376" pos:column="8"/></name></type> <name pos:line="376" pos:column="9">no_detach<pos:position pos:line="376" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="376" pos:column="20">debug<pos:position pos:line="376" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="376" pos:column="27">foreground<pos:position pos:line="376" pos:column="37"/></name></decl>;<pos:position pos:line="376" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="377" pos:column="5">apr_status_t<pos:position pos:line="377" pos:column="17"/></name></type> <name pos:line="377" pos:column="18">rv<pos:position pos:line="377" pos:column="20"/></name></decl>;<pos:position pos:line="377" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="379" pos:column="5">mpm_state<pos:position pos:line="379" pos:column="14"/></name> <operator pos:line="379" pos:column="15">=<pos:position pos:line="379" pos:column="16"/></operator> <name pos:line="379" pos:column="17">AP_MPMQ_STARTING<pos:position pos:line="379" pos:column="33"/></name></expr>;<pos:position pos:line="379" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="381" pos:column="5">debug<pos:position pos:line="381" pos:column="10"/></name> <operator pos:line="381" pos:column="11">=<pos:position pos:line="381" pos:column="12"/></operator> <call><name pos:line="381" pos:column="13">ap_exists_config_define<pos:position pos:line="381" pos:column="36"/></name><argument_list pos:line="381" pos:column="36">(<argument><expr><literal type="string" pos:line="381" pos:column="37">"DEBUG"<pos:position pos:line="381" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="381" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="46"/></expr_stmt>

    <if pos:line="383" pos:column="5">if <condition pos:line="383" pos:column="8">(<expr><name pos:line="383" pos:column="9">debug<pos:position pos:line="383" pos:column="14"/></name></expr>)<pos:position pos:line="383" pos:column="15"/></condition><then pos:line="383" pos:column="15"> <block pos:line="383" pos:column="16">{
        <expr_stmt><expr><name pos:line="384" pos:column="9">foreground<pos:position pos:line="384" pos:column="19"/></name> <operator pos:line="384" pos:column="20">=<pos:position pos:line="384" pos:column="21"/></operator> <name pos:line="384" pos:column="22">one_process<pos:position pos:line="384" pos:column="33"/></name> <operator pos:line="384" pos:column="34">=<pos:position pos:line="384" pos:column="35"/></operator> <literal type="number" pos:line="384" pos:column="36">1<pos:position pos:line="384" pos:column="37"/></literal></expr>;<pos:position pos:line="384" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="385" pos:column="9">no_detach<pos:position pos:line="385" pos:column="18"/></name> <operator pos:line="385" pos:column="19">=<pos:position pos:line="385" pos:column="20"/></operator> <literal type="number" pos:line="385" pos:column="21">0<pos:position pos:line="385" pos:column="22"/></literal></expr>;<pos:position pos:line="385" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="386" pos:column="6"/></block></then>
    <else pos:line="387" pos:column="5">else
    <block pos:line="388" pos:column="5">{
        <expr_stmt><expr><name pos:line="389" pos:column="9">no_detach<pos:position pos:line="389" pos:column="18"/></name> <operator pos:line="389" pos:column="19">=<pos:position pos:line="389" pos:column="20"/></operator> <call><name pos:line="389" pos:column="21">ap_exists_config_define<pos:position pos:line="389" pos:column="44"/></name><argument_list pos:line="389" pos:column="44">(<argument><expr><literal type="string" pos:line="389" pos:column="45">"NO_DETACH"<pos:position pos:line="389" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="389" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="389" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="390" pos:column="9">one_process<pos:position pos:line="390" pos:column="20"/></name> <operator pos:line="390" pos:column="21">=<pos:position pos:line="390" pos:column="22"/></operator> <call><name pos:line="390" pos:column="23">ap_exists_config_define<pos:position pos:line="390" pos:column="46"/></name><argument_list pos:line="390" pos:column="46">(<argument><expr><literal type="string" pos:line="390" pos:column="47">"ONE_PROCESS"<pos:position pos:line="390" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="390" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="390" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name pos:line="391" pos:column="9">foreground<pos:position pos:line="391" pos:column="19"/></name> <operator pos:line="391" pos:column="20">=<pos:position pos:line="391" pos:column="21"/></operator> <call><name pos:line="391" pos:column="22">ap_exists_config_define<pos:position pos:line="391" pos:column="45"/></name><argument_list pos:line="391" pos:column="45">(<argument><expr><literal type="string" pos:line="391" pos:column="46">"FOREGROUND"<pos:position pos:line="391" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="391" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="391" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="392" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="394" pos:column="5">/* sigh, want this only the second time around */</comment>
    <if pos:line="395" pos:column="5">if <condition pos:line="395" pos:column="8">(<expr><name pos:line="395" pos:column="9">restart_num<pos:position pos:line="395" pos:column="20"/></name><operator pos:line="395" pos:column="20">++<pos:position pos:line="395" pos:column="22"/></operator> <operator pos:line="395" pos:column="23">==<pos:position pos:line="395" pos:column="25"/></operator> <literal type="number" pos:line="395" pos:column="26">1<pos:position pos:line="395" pos:column="27"/></literal></expr>)<pos:position pos:line="395" pos:column="28"/></condition><then pos:line="395" pos:column="28"> <block pos:line="395" pos:column="29">{
        <expr_stmt><expr><name pos:line="396" pos:column="9">is_graceful<pos:position pos:line="396" pos:column="20"/></name> <operator pos:line="396" pos:column="21">=<pos:position pos:line="396" pos:column="22"/></operator> <literal type="number" pos:line="396" pos:column="23">0<pos:position pos:line="396" pos:column="24"/></literal></expr>;<pos:position pos:line="396" pos:column="25"/></expr_stmt>

        <if pos:line="398" pos:column="9">if <condition pos:line="398" pos:column="12">(<expr><operator pos:line="398" pos:column="13">!<pos:position pos:line="398" pos:column="14"/></operator><name pos:line="398" pos:column="14">one_process<pos:position pos:line="398" pos:column="25"/></name> <operator pos:line="398" pos:column="26">&amp;&amp;<pos:position pos:line="398" pos:column="36"/></operator> <operator pos:line="398" pos:column="29">!<pos:position pos:line="398" pos:column="30"/></operator><name pos:line="398" pos:column="30">foreground<pos:position pos:line="398" pos:column="40"/></name></expr>)<pos:position pos:line="398" pos:column="41"/></condition><then pos:line="398" pos:column="41"> <block pos:line="398" pos:column="42">{
            <expr_stmt><expr><name pos:line="399" pos:column="13">rv<pos:position pos:line="399" pos:column="15"/></name> <operator pos:line="399" pos:column="16">=<pos:position pos:line="399" pos:column="17"/></operator> <call><name pos:line="399" pos:column="18">apr_proc_detach<pos:position pos:line="399" pos:column="33"/></name><argument_list pos:line="399" pos:column="33">(<argument><expr><ternary><condition><expr><name pos:line="399" pos:column="34">no_detach<pos:position pos:line="399" pos:column="43"/></name></expr> ?<pos:position pos:line="399" pos:column="45"/></condition><then pos:line="399" pos:column="45"> <expr><name pos:line="399" pos:column="46">APR_PROC_DETACH_FOREGROUND<pos:position pos:line="399" pos:column="72"/></name></expr>
                                           <pos:position pos:line="400" pos:column="44"/></then><else pos:line="400" pos:column="44">: <expr><name pos:line="400" pos:column="46">APR_PROC_DETACH_DAEMONIZE<pos:position pos:line="400" pos:column="71"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="400" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="73"/></expr_stmt>
            <if pos:line="401" pos:column="13">if <condition pos:line="401" pos:column="16">(<expr><name pos:line="401" pos:column="17">rv<pos:position pos:line="401" pos:column="19"/></name> <operator pos:line="401" pos:column="20">!=<pos:position pos:line="401" pos:column="22"/></operator> <name pos:line="401" pos:column="23">APR_SUCCESS<pos:position pos:line="401" pos:column="34"/></name></expr>)<pos:position pos:line="401" pos:column="35"/></condition><then pos:line="401" pos:column="35"> <block pos:line="401" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="402" pos:column="17">ap_log_error<pos:position pos:line="402" pos:column="29"/></name><argument_list pos:line="402" pos:column="29">(<argument><expr><name pos:line="402" pos:column="30">APLOG_MARK<pos:position pos:line="402" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="402" pos:column="42">APLOG_CRIT<pos:position pos:line="402" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="402" pos:column="54">rv<pos:position pos:line="402" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="402" pos:column="58">NULL<pos:position pos:line="402" pos:column="62"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="403" pos:column="30">"apr_proc_detach failed"<pos:position pos:line="403" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="403" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="403" pos:column="56"/></expr_stmt>
                <return pos:line="404" pos:column="17">return <expr><name pos:line="404" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="404" pos:column="50"/></name></expr>;<pos:position pos:line="404" pos:column="51"/></return>
            }<pos:position pos:line="405" pos:column="14"/></block></then></if>
        }<pos:position pos:line="406" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="408" pos:column="9">parent_pid<pos:position pos:line="408" pos:column="19"/></name> <operator pos:line="408" pos:column="20">=<pos:position pos:line="408" pos:column="21"/></operator> <name pos:line="408" pos:column="22">ap_my_pid<pos:position pos:line="408" pos:column="31"/></name> <operator pos:line="408" pos:column="32">=<pos:position pos:line="408" pos:column="33"/></operator> <call><name pos:line="408" pos:column="34">getpid<pos:position pos:line="408" pos:column="40"/></name><argument_list pos:line="408" pos:column="40">()<pos:position pos:line="408" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="408" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="409" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="411" pos:column="5">unixd_pre_config<pos:position pos:line="411" pos:column="21"/></name><argument_list pos:line="411" pos:column="21">(<argument><expr><name pos:line="411" pos:column="22">ptemp<pos:position pos:line="411" pos:column="27"/></name></expr></argument>)<pos:position pos:line="411" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="411" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="412" pos:column="5">ap_listen_pre_config<pos:position pos:line="412" pos:column="25"/></name><argument_list pos:line="412" pos:column="25">()<pos:position pos:line="412" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="412" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="413" pos:column="5">ap_daemons_to_start<pos:position pos:line="413" pos:column="24"/></name> <operator pos:line="413" pos:column="25">=<pos:position pos:line="413" pos:column="26"/></operator> <name pos:line="413" pos:column="27">DEFAULT_START_DAEMON<pos:position pos:line="413" pos:column="47"/></name></expr>;<pos:position pos:line="413" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="414" pos:column="5">ap_daemons_min_free<pos:position pos:line="414" pos:column="24"/></name> <operator pos:line="414" pos:column="25">=<pos:position pos:line="414" pos:column="26"/></operator> <name pos:line="414" pos:column="27">DEFAULT_MIN_FREE_DAEMON<pos:position pos:line="414" pos:column="50"/></name></expr>;<pos:position pos:line="414" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="415" pos:column="5">ap_daemons_max_free<pos:position pos:line="415" pos:column="24"/></name> <operator pos:line="415" pos:column="25">=<pos:position pos:line="415" pos:column="26"/></operator> <name pos:line="415" pos:column="27">DEFAULT_MAX_FREE_DAEMON<pos:position pos:line="415" pos:column="50"/></name></expr>;<pos:position pos:line="415" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="416" pos:column="5">ap_daemons_limit<pos:position pos:line="416" pos:column="21"/></name> <operator pos:line="416" pos:column="22">=<pos:position pos:line="416" pos:column="23"/></operator> <name pos:line="416" pos:column="24">server_limit<pos:position pos:line="416" pos:column="36"/></name></expr>;<pos:position pos:line="416" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="417" pos:column="5">ap_pid_fname<pos:position pos:line="417" pos:column="17"/></name> <operator pos:line="417" pos:column="18">=<pos:position pos:line="417" pos:column="19"/></operator> <name pos:line="417" pos:column="20">DEFAULT_PIDLOG<pos:position pos:line="417" pos:column="34"/></name></expr>;<pos:position pos:line="417" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="418" pos:column="5">ap_lock_fname<pos:position pos:line="418" pos:column="18"/></name> <operator pos:line="418" pos:column="19">=<pos:position pos:line="418" pos:column="20"/></operator> <name pos:line="418" pos:column="21">DEFAULT_LOCKFILE<pos:position pos:line="418" pos:column="37"/></name></expr>;<pos:position pos:line="418" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="419" pos:column="5">ap_max_requests_per_child<pos:position pos:line="419" pos:column="30"/></name> <operator pos:line="419" pos:column="31">=<pos:position pos:line="419" pos:column="32"/></operator> <name pos:line="419" pos:column="33">DEFAULT_MAX_REQUESTS_PER_CHILD<pos:position pos:line="419" pos:column="63"/></name></expr>;<pos:position pos:line="419" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="420" pos:column="5">ap_extended_status<pos:position pos:line="420" pos:column="23"/></name> <operator pos:line="420" pos:column="24">=<pos:position pos:line="420" pos:column="25"/></operator> <literal type="number" pos:line="420" pos:column="26">0<pos:position pos:line="420" pos:column="27"/></literal></expr>;<pos:position pos:line="420" pos:column="28"/></expr_stmt>
<cpp:ifdef pos:line="421" pos:column="1">#<cpp:directive pos:line="421" pos:column="2">ifdef<pos:position pos:line="421" pos:column="7"/></cpp:directive> <name pos:line="421" pos:column="8">AP_MPM_WANT_SET_MAX_MEM_FREE<pos:position pos:line="421" pos:column="36"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="422" pos:column="5">ap_max_mem_free<pos:position pos:line="422" pos:column="20"/></name> <operator pos:line="422" pos:column="21">=<pos:position pos:line="422" pos:column="22"/></operator> <name pos:line="422" pos:column="23">APR_ALLOCATOR_MAX_FREE_UNLIMITED<pos:position pos:line="422" pos:column="55"/></name></expr>;<pos:position pos:line="422" pos:column="56"/></expr_stmt>
<cpp:endif pos:line="423" pos:column="1">#<cpp:directive pos:line="423" pos:column="2">endif<pos:position pos:line="423" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="425" pos:column="5">apr_cpystrn<pos:position pos:line="425" pos:column="16"/></name><argument_list pos:line="425" pos:column="16">(<argument><expr><name pos:line="425" pos:column="17">ap_coredump_dir<pos:position pos:line="425" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="425" pos:column="34">ap_server_root<pos:position pos:line="425" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="425" pos:column="50">sizeof<argument_list pos:line="425" pos:column="56">(<argument><expr><name pos:line="425" pos:column="57">ap_coredump_dir<pos:position pos:line="425" pos:column="72"/></name></expr></argument>)<pos:position pos:line="425" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="425" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="425" pos:column="75"/></expr_stmt>

    <return pos:line="427" pos:column="5">return <expr><name pos:line="427" pos:column="12">OK<pos:position pos:line="427" pos:column="14"/></name></expr>;<pos:position pos:line="427" pos:column="15"/></return>
}<pos:position pos:line="428" pos:column="2"/></block></function>

<function><specifier pos:line="430" pos:column="1">static<pos:position pos:line="430" pos:column="7"/></specifier> <type><name pos:line="430" pos:column="8">void<pos:position pos:line="430" pos:column="12"/></name></type> <name pos:line="430" pos:column="13">prefork_hooks<pos:position pos:line="430" pos:column="26"/></name><parameter_list pos:line="430" pos:column="26">(<parameter><decl><type><name pos:line="430" pos:column="27">apr_pool_t<pos:position pos:line="430" pos:column="37"/></name> <modifier pos:line="430" pos:column="38">*<pos:position pos:line="430" pos:column="39"/></modifier></type><name pos:line="430" pos:column="39">p<pos:position pos:line="430" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="430" pos:column="41"/></parameter_list>
<block pos:line="431" pos:column="1">{
    <comment type="block" pos:line="432" pos:column="5">/* The prefork open_logs phase must run before the core's, or stderr
     * will be redirected to a file, and the messages won't print to the
     * console.
     */</comment>
    <decl_stmt><decl><specifier pos:line="436" pos:column="5">static<pos:position pos:line="436" pos:column="11"/></specifier> <type><specifier pos:line="436" pos:column="12">const<pos:position pos:line="436" pos:column="17"/></specifier> <name pos:line="436" pos:column="18">char<pos:position pos:line="436" pos:column="22"/></name> <modifier pos:line="436" pos:column="23">*<pos:position pos:line="436" pos:column="24"/></modifier><specifier pos:line="436" pos:column="24">const<pos:position pos:line="436" pos:column="29"/></specifier></type> <name><name pos:line="436" pos:column="30">aszSucc<pos:position pos:line="436" pos:column="37"/></name><index pos:line="436" pos:column="37">[]<pos:position pos:line="436" pos:column="39"/></index></name> <init pos:line="436" pos:column="40">= <expr><block pos:line="436" pos:column="42">{<expr><literal type="string" pos:line="436" pos:column="43">"core.c"<pos:position pos:line="436" pos:column="51"/></literal></expr>, <expr><name pos:line="436" pos:column="53">NULL<pos:position pos:line="436" pos:column="57"/></name></expr>}<pos:position pos:line="436" pos:column="58"/></block></expr></init></decl>;<pos:position pos:line="436" pos:column="59"/></decl_stmt>

<cpp:ifdef pos:line="438" pos:column="1">#<cpp:directive pos:line="438" pos:column="2">ifdef<pos:position pos:line="438" pos:column="7"/></cpp:directive> <name pos:line="438" pos:column="8">AUX3<pos:position pos:line="438" pos:column="12"/></name></cpp:ifdef>
    <expr_stmt><expr><operator pos:line="439" pos:column="5">(<pos:position pos:line="439" pos:column="6"/></operator><name pos:line="439" pos:column="6">void<pos:position pos:line="439" pos:column="10"/></name><operator pos:line="439" pos:column="10">)<pos:position pos:line="439" pos:column="11"/></operator> <call><name pos:line="439" pos:column="12">set42sig<pos:position pos:line="439" pos:column="20"/></name><argument_list pos:line="439" pos:column="20">()<pos:position pos:line="439" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="439" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="440" pos:column="1">#<cpp:directive pos:line="440" pos:column="2">endif<pos:position pos:line="440" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="442" pos:column="5">ap_hook_open_logs<pos:position pos:line="442" pos:column="22"/></name><argument_list pos:line="442" pos:column="22">(<argument><expr><name pos:line="442" pos:column="23">prefork_open_logs<pos:position pos:line="442" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="42">NULL<pos:position pos:line="442" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="48">aszSucc<pos:position pos:line="442" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="57">APR_HOOK_MIDDLE<pos:position pos:line="442" pos:column="72"/></name></expr></argument>)<pos:position pos:line="442" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="74"/></expr_stmt>
    <comment type="block" pos:line="443" pos:column="5">/* we need to set the MPM state before other pre-config hooks use MPM query
     * to retrieve it, so register as REALLY_FIRST
     */</comment>
    <expr_stmt><expr><call><name pos:line="446" pos:column="5">ap_hook_pre_config<pos:position pos:line="446" pos:column="23"/></name><argument_list pos:line="446" pos:column="23">(<argument><expr><name pos:line="446" pos:column="24">prefork_pre_config<pos:position pos:line="446" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="446" pos:column="44">NULL<pos:position pos:line="446" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="446" pos:column="50">NULL<pos:position pos:line="446" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="446" pos:column="56">APR_HOOK_REALLY_FIRST<pos:position pos:line="446" pos:column="77"/></name></expr></argument>)<pos:position pos:line="446" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="79"/></expr_stmt>
}<pos:position pos:line="447" pos:column="2"/></block></function>

<function><specifier pos:line="449" pos:column="1">static<pos:position pos:line="449" pos:column="7"/></specifier> <type><specifier pos:line="449" pos:column="8">const<pos:position pos:line="449" pos:column="13"/></specifier> <name pos:line="449" pos:column="14">char<pos:position pos:line="449" pos:column="18"/></name> <modifier pos:line="449" pos:column="19">*<pos:position pos:line="449" pos:column="20"/></modifier></type><name pos:line="449" pos:column="20">set_daemons_to_start<pos:position pos:line="449" pos:column="40"/></name><parameter_list pos:line="449" pos:column="40">(<parameter><decl><type><name pos:line="449" pos:column="41">cmd_parms<pos:position pos:line="449" pos:column="50"/></name> <modifier pos:line="449" pos:column="51">*<pos:position pos:line="449" pos:column="52"/></modifier></type><name pos:line="449" pos:column="52">cmd<pos:position pos:line="449" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="449" pos:column="57">void<pos:position pos:line="449" pos:column="61"/></name> <modifier pos:line="449" pos:column="62">*<pos:position pos:line="449" pos:column="63"/></modifier></type><name pos:line="449" pos:column="63">dummy<pos:position pos:line="449" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="449" pos:column="70">const<pos:position pos:line="449" pos:column="75"/></specifier> <name pos:line="449" pos:column="76">char<pos:position pos:line="449" pos:column="80"/></name> <modifier pos:line="449" pos:column="81">*<pos:position pos:line="449" pos:column="82"/></modifier></type><name pos:line="449" pos:column="82">arg<pos:position pos:line="449" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="449" pos:column="86"/></parameter_list>
<block pos:line="450" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="451" pos:column="5">const<pos:position pos:line="451" pos:column="10"/></specifier> <name pos:line="451" pos:column="11">char<pos:position pos:line="451" pos:column="15"/></name> <modifier pos:line="451" pos:column="16">*<pos:position pos:line="451" pos:column="17"/></modifier></type><name pos:line="451" pos:column="17">err<pos:position pos:line="451" pos:column="20"/></name> <init pos:line="451" pos:column="21">= <expr><call><name pos:line="451" pos:column="23">ap_check_cmd_context<pos:position pos:line="451" pos:column="43"/></name><argument_list pos:line="451" pos:column="43">(<argument><expr><name pos:line="451" pos:column="44">cmd<pos:position pos:line="451" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="451" pos:column="49">GLOBAL_ONLY<pos:position pos:line="451" pos:column="60"/></name></expr></argument>)<pos:position pos:line="451" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="451" pos:column="62"/></decl_stmt>
    <if pos:line="452" pos:column="5">if <condition pos:line="452" pos:column="8">(<expr><name pos:line="452" pos:column="9">err<pos:position pos:line="452" pos:column="12"/></name> <operator pos:line="452" pos:column="13">!=<pos:position pos:line="452" pos:column="15"/></operator> <name pos:line="452" pos:column="16">NULL<pos:position pos:line="452" pos:column="20"/></name></expr>)<pos:position pos:line="452" pos:column="21"/></condition><then pos:line="452" pos:column="21"> <block pos:line="452" pos:column="22">{
        <return pos:line="453" pos:column="9">return <expr><name pos:line="453" pos:column="16">err<pos:position pos:line="453" pos:column="19"/></name></expr>;<pos:position pos:line="453" pos:column="20"/></return>
    }<pos:position pos:line="454" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="456" pos:column="5">ap_daemons_to_start<pos:position pos:line="456" pos:column="24"/></name> <operator pos:line="456" pos:column="25">=<pos:position pos:line="456" pos:column="26"/></operator> <call><name pos:line="456" pos:column="27">atoi<pos:position pos:line="456" pos:column="31"/></name><argument_list pos:line="456" pos:column="31">(<argument><expr><name pos:line="456" pos:column="32">arg<pos:position pos:line="456" pos:column="35"/></name></expr></argument>)<pos:position pos:line="456" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="456" pos:column="37"/></expr_stmt>
    <return pos:line="457" pos:column="5">return <expr><name pos:line="457" pos:column="12">NULL<pos:position pos:line="457" pos:column="16"/></name></expr>;<pos:position pos:line="457" pos:column="17"/></return>
}<pos:position pos:line="458" pos:column="2"/></block></function>

<function><specifier pos:line="460" pos:column="1">static<pos:position pos:line="460" pos:column="7"/></specifier> <type><specifier pos:line="460" pos:column="8">const<pos:position pos:line="460" pos:column="13"/></specifier> <name pos:line="460" pos:column="14">char<pos:position pos:line="460" pos:column="18"/></name> <modifier pos:line="460" pos:column="19">*<pos:position pos:line="460" pos:column="20"/></modifier></type><name pos:line="460" pos:column="20">set_min_free_servers<pos:position pos:line="460" pos:column="40"/></name><parameter_list pos:line="460" pos:column="40">(<parameter><decl><type><name pos:line="460" pos:column="41">cmd_parms<pos:position pos:line="460" pos:column="50"/></name> <modifier pos:line="460" pos:column="51">*<pos:position pos:line="460" pos:column="52"/></modifier></type><name pos:line="460" pos:column="52">cmd<pos:position pos:line="460" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="460" pos:column="57">void<pos:position pos:line="460" pos:column="61"/></name> <modifier pos:line="460" pos:column="62">*<pos:position pos:line="460" pos:column="63"/></modifier></type><name pos:line="460" pos:column="63">dummy<pos:position pos:line="460" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="460" pos:column="70">const<pos:position pos:line="460" pos:column="75"/></specifier> <name pos:line="460" pos:column="76">char<pos:position pos:line="460" pos:column="80"/></name> <modifier pos:line="460" pos:column="81">*<pos:position pos:line="460" pos:column="82"/></modifier></type><name pos:line="460" pos:column="82">arg<pos:position pos:line="460" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="460" pos:column="86"/></parameter_list>
<block pos:line="461" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="462" pos:column="5">const<pos:position pos:line="462" pos:column="10"/></specifier> <name pos:line="462" pos:column="11">char<pos:position pos:line="462" pos:column="15"/></name> <modifier pos:line="462" pos:column="16">*<pos:position pos:line="462" pos:column="17"/></modifier></type><name pos:line="462" pos:column="17">err<pos:position pos:line="462" pos:column="20"/></name> <init pos:line="462" pos:column="21">= <expr><call><name pos:line="462" pos:column="23">ap_check_cmd_context<pos:position pos:line="462" pos:column="43"/></name><argument_list pos:line="462" pos:column="43">(<argument><expr><name pos:line="462" pos:column="44">cmd<pos:position pos:line="462" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="462" pos:column="49">GLOBAL_ONLY<pos:position pos:line="462" pos:column="60"/></name></expr></argument>)<pos:position pos:line="462" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="462" pos:column="62"/></decl_stmt>
    <if pos:line="463" pos:column="5">if <condition pos:line="463" pos:column="8">(<expr><name pos:line="463" pos:column="9">err<pos:position pos:line="463" pos:column="12"/></name> <operator pos:line="463" pos:column="13">!=<pos:position pos:line="463" pos:column="15"/></operator> <name pos:line="463" pos:column="16">NULL<pos:position pos:line="463" pos:column="20"/></name></expr>)<pos:position pos:line="463" pos:column="21"/></condition><then pos:line="463" pos:column="21"> <block pos:line="463" pos:column="22">{
        <return pos:line="464" pos:column="9">return <expr><name pos:line="464" pos:column="16">err<pos:position pos:line="464" pos:column="19"/></name></expr>;<pos:position pos:line="464" pos:column="20"/></return>
    }<pos:position pos:line="465" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="467" pos:column="5">ap_daemons_min_free<pos:position pos:line="467" pos:column="24"/></name> <operator pos:line="467" pos:column="25">=<pos:position pos:line="467" pos:column="26"/></operator> <call><name pos:line="467" pos:column="27">atoi<pos:position pos:line="467" pos:column="31"/></name><argument_list pos:line="467" pos:column="31">(<argument><expr><name pos:line="467" pos:column="32">arg<pos:position pos:line="467" pos:column="35"/></name></expr></argument>)<pos:position pos:line="467" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="467" pos:column="37"/></expr_stmt>
    <if pos:line="468" pos:column="5">if <condition pos:line="468" pos:column="8">(<expr><name pos:line="468" pos:column="9">ap_daemons_min_free<pos:position pos:line="468" pos:column="28"/></name> <operator pos:line="468" pos:column="29">&lt;=<pos:position pos:line="468" pos:column="34"/></operator> <literal type="number" pos:line="468" pos:column="32">0<pos:position pos:line="468" pos:column="33"/></literal></expr>)<pos:position pos:line="468" pos:column="34"/></condition><then pos:line="468" pos:column="34"> <block pos:line="468" pos:column="35">{
       <expr_stmt><expr><call><name pos:line="469" pos:column="8">ap_log_error<pos:position pos:line="469" pos:column="20"/></name><argument_list pos:line="469" pos:column="20">(<argument><expr><name pos:line="469" pos:column="21">APLOG_MARK<pos:position pos:line="469" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="469" pos:column="33">APLOG_STARTUP<pos:position pos:line="469" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="469" pos:column="48">0<pos:position pos:line="469" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="469" pos:column="51">NULL<pos:position pos:line="469" pos:column="55"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="470" pos:column="21">"WARNING: detected MinSpareServers set to non-positive."<pos:position pos:line="470" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="470" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="79"/></expr_stmt>
       <expr_stmt><expr><call><name pos:line="471" pos:column="8">ap_log_error<pos:position pos:line="471" pos:column="20"/></name><argument_list pos:line="471" pos:column="20">(<argument><expr><name pos:line="471" pos:column="21">APLOG_MARK<pos:position pos:line="471" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="471" pos:column="33">APLOG_STARTUP<pos:position pos:line="471" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="471" pos:column="48">0<pos:position pos:line="471" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="471" pos:column="51">NULL<pos:position pos:line="471" pos:column="55"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="472" pos:column="21">"Resetting to 1 to avoid almost certain Apache failure."<pos:position pos:line="472" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="472" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="472" pos:column="79"/></expr_stmt>
       <expr_stmt><expr><call><name pos:line="473" pos:column="8">ap_log_error<pos:position pos:line="473" pos:column="20"/></name><argument_list pos:line="473" pos:column="20">(<argument><expr><name pos:line="473" pos:column="21">APLOG_MARK<pos:position pos:line="473" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="473" pos:column="33">APLOG_STARTUP<pos:position pos:line="473" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="473" pos:column="48">0<pos:position pos:line="473" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="473" pos:column="51">NULL<pos:position pos:line="473" pos:column="55"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="474" pos:column="21">"Please read the documentation."<pos:position pos:line="474" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="474" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="474" pos:column="55"/></expr_stmt>
       <expr_stmt><expr><name pos:line="475" pos:column="8">ap_daemons_min_free<pos:position pos:line="475" pos:column="27"/></name> <operator pos:line="475" pos:column="28">=<pos:position pos:line="475" pos:column="29"/></operator> <literal type="number" pos:line="475" pos:column="30">1<pos:position pos:line="475" pos:column="31"/></literal></expr>;<pos:position pos:line="475" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="476" pos:column="6"/></block></then></if>

    <return pos:line="478" pos:column="5">return <expr><name pos:line="478" pos:column="12">NULL<pos:position pos:line="478" pos:column="16"/></name></expr>;<pos:position pos:line="478" pos:column="17"/></return>
}<pos:position pos:line="479" pos:column="2"/></block></function>

<function><specifier pos:line="481" pos:column="1">static<pos:position pos:line="481" pos:column="7"/></specifier> <type><specifier pos:line="481" pos:column="8">const<pos:position pos:line="481" pos:column="13"/></specifier> <name pos:line="481" pos:column="14">char<pos:position pos:line="481" pos:column="18"/></name> <modifier pos:line="481" pos:column="19">*<pos:position pos:line="481" pos:column="20"/></modifier></type><name pos:line="481" pos:column="20">set_max_free_servers<pos:position pos:line="481" pos:column="40"/></name><parameter_list pos:line="481" pos:column="40">(<parameter><decl><type><name pos:line="481" pos:column="41">cmd_parms<pos:position pos:line="481" pos:column="50"/></name> <modifier pos:line="481" pos:column="51">*<pos:position pos:line="481" pos:column="52"/></modifier></type><name pos:line="481" pos:column="52">cmd<pos:position pos:line="481" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="481" pos:column="57">void<pos:position pos:line="481" pos:column="61"/></name> <modifier pos:line="481" pos:column="62">*<pos:position pos:line="481" pos:column="63"/></modifier></type><name pos:line="481" pos:column="63">dummy<pos:position pos:line="481" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="481" pos:column="70">const<pos:position pos:line="481" pos:column="75"/></specifier> <name pos:line="481" pos:column="76">char<pos:position pos:line="481" pos:column="80"/></name> <modifier pos:line="481" pos:column="81">*<pos:position pos:line="481" pos:column="82"/></modifier></type><name pos:line="481" pos:column="82">arg<pos:position pos:line="481" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="481" pos:column="86"/></parameter_list>
<block pos:line="482" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="483" pos:column="5">const<pos:position pos:line="483" pos:column="10"/></specifier> <name pos:line="483" pos:column="11">char<pos:position pos:line="483" pos:column="15"/></name> <modifier pos:line="483" pos:column="16">*<pos:position pos:line="483" pos:column="17"/></modifier></type><name pos:line="483" pos:column="17">err<pos:position pos:line="483" pos:column="20"/></name> <init pos:line="483" pos:column="21">= <expr><call><name pos:line="483" pos:column="23">ap_check_cmd_context<pos:position pos:line="483" pos:column="43"/></name><argument_list pos:line="483" pos:column="43">(<argument><expr><name pos:line="483" pos:column="44">cmd<pos:position pos:line="483" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="483" pos:column="49">GLOBAL_ONLY<pos:position pos:line="483" pos:column="60"/></name></expr></argument>)<pos:position pos:line="483" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="483" pos:column="62"/></decl_stmt>
    <if pos:line="484" pos:column="5">if <condition pos:line="484" pos:column="8">(<expr><name pos:line="484" pos:column="9">err<pos:position pos:line="484" pos:column="12"/></name> <operator pos:line="484" pos:column="13">!=<pos:position pos:line="484" pos:column="15"/></operator> <name pos:line="484" pos:column="16">NULL<pos:position pos:line="484" pos:column="20"/></name></expr>)<pos:position pos:line="484" pos:column="21"/></condition><then pos:line="484" pos:column="21"> <block pos:line="484" pos:column="22">{
        <return pos:line="485" pos:column="9">return <expr><name pos:line="485" pos:column="16">err<pos:position pos:line="485" pos:column="19"/></name></expr>;<pos:position pos:line="485" pos:column="20"/></return>
    }<pos:position pos:line="486" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="488" pos:column="5">ap_daemons_max_free<pos:position pos:line="488" pos:column="24"/></name> <operator pos:line="488" pos:column="25">=<pos:position pos:line="488" pos:column="26"/></operator> <call><name pos:line="488" pos:column="27">atoi<pos:position pos:line="488" pos:column="31"/></name><argument_list pos:line="488" pos:column="31">(<argument><expr><name pos:line="488" pos:column="32">arg<pos:position pos:line="488" pos:column="35"/></name></expr></argument>)<pos:position pos:line="488" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="488" pos:column="37"/></expr_stmt>
    <return pos:line="489" pos:column="5">return <expr><name pos:line="489" pos:column="12">NULL<pos:position pos:line="489" pos:column="16"/></name></expr>;<pos:position pos:line="489" pos:column="17"/></return>
}<pos:position pos:line="490" pos:column="2"/></block></function>

<function><specifier pos:line="492" pos:column="1">static<pos:position pos:line="492" pos:column="7"/></specifier> <type><specifier pos:line="492" pos:column="8">const<pos:position pos:line="492" pos:column="13"/></specifier> <name pos:line="492" pos:column="14">char<pos:position pos:line="492" pos:column="18"/></name> <modifier pos:line="492" pos:column="19">*<pos:position pos:line="492" pos:column="20"/></modifier></type><name pos:line="492" pos:column="20">set_max_clients<pos:position pos:line="492" pos:column="35"/></name> <parameter_list pos:line="492" pos:column="36">(<parameter><decl><type><name pos:line="492" pos:column="37">cmd_parms<pos:position pos:line="492" pos:column="46"/></name> <modifier pos:line="492" pos:column="47">*<pos:position pos:line="492" pos:column="48"/></modifier></type><name pos:line="492" pos:column="48">cmd<pos:position pos:line="492" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="492" pos:column="53">void<pos:position pos:line="492" pos:column="57"/></name> <modifier pos:line="492" pos:column="58">*<pos:position pos:line="492" pos:column="59"/></modifier></type><name pos:line="492" pos:column="59">dummy<pos:position pos:line="492" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="492" pos:column="66">const<pos:position pos:line="492" pos:column="71"/></specifier> <name pos:line="492" pos:column="72">char<pos:position pos:line="492" pos:column="76"/></name> <modifier pos:line="492" pos:column="77">*<pos:position pos:line="492" pos:column="78"/></modifier></type><name pos:line="492" pos:column="78">arg<pos:position pos:line="492" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="492" pos:column="82"/></parameter_list>
<block pos:line="493" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="494" pos:column="5">const<pos:position pos:line="494" pos:column="10"/></specifier> <name pos:line="494" pos:column="11">char<pos:position pos:line="494" pos:column="15"/></name> <modifier pos:line="494" pos:column="16">*<pos:position pos:line="494" pos:column="17"/></modifier></type><name pos:line="494" pos:column="17">err<pos:position pos:line="494" pos:column="20"/></name> <init pos:line="494" pos:column="21">= <expr><call><name pos:line="494" pos:column="23">ap_check_cmd_context<pos:position pos:line="494" pos:column="43"/></name><argument_list pos:line="494" pos:column="43">(<argument><expr><name pos:line="494" pos:column="44">cmd<pos:position pos:line="494" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="494" pos:column="49">GLOBAL_ONLY<pos:position pos:line="494" pos:column="60"/></name></expr></argument>)<pos:position pos:line="494" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="494" pos:column="62"/></decl_stmt>
    <if pos:line="495" pos:column="5">if <condition pos:line="495" pos:column="8">(<expr><name pos:line="495" pos:column="9">err<pos:position pos:line="495" pos:column="12"/></name> <operator pos:line="495" pos:column="13">!=<pos:position pos:line="495" pos:column="15"/></operator> <name pos:line="495" pos:column="16">NULL<pos:position pos:line="495" pos:column="20"/></name></expr>)<pos:position pos:line="495" pos:column="21"/></condition><then pos:line="495" pos:column="21"> <block pos:line="495" pos:column="22">{
        <return pos:line="496" pos:column="9">return <expr><name pos:line="496" pos:column="16">err<pos:position pos:line="496" pos:column="19"/></name></expr>;<pos:position pos:line="496" pos:column="20"/></return>
    }<pos:position pos:line="497" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="499" pos:column="5">ap_daemons_limit<pos:position pos:line="499" pos:column="21"/></name> <operator pos:line="499" pos:column="22">=<pos:position pos:line="499" pos:column="23"/></operator> <call><name pos:line="499" pos:column="24">atoi<pos:position pos:line="499" pos:column="28"/></name><argument_list pos:line="499" pos:column="28">(<argument><expr><name pos:line="499" pos:column="29">arg<pos:position pos:line="499" pos:column="32"/></name></expr></argument>)<pos:position pos:line="499" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="499" pos:column="34"/></expr_stmt>
    <if pos:line="500" pos:column="5">if <condition pos:line="500" pos:column="8">(<expr><name pos:line="500" pos:column="9">ap_daemons_limit<pos:position pos:line="500" pos:column="25"/></name> <operator pos:line="500" pos:column="26">&gt;<pos:position pos:line="500" pos:column="30"/></operator> <name pos:line="500" pos:column="28">server_limit<pos:position pos:line="500" pos:column="40"/></name></expr>)<pos:position pos:line="500" pos:column="41"/></condition><then pos:line="500" pos:column="41"> <block pos:line="500" pos:column="42">{
       <expr_stmt><expr><call><name pos:line="501" pos:column="8">ap_log_error<pos:position pos:line="501" pos:column="20"/></name><argument_list pos:line="501" pos:column="20">(<argument><expr><name pos:line="501" pos:column="21">APLOG_MARK<pos:position pos:line="501" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="501" pos:column="33">APLOG_STARTUP<pos:position pos:line="501" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="501" pos:column="48">0<pos:position pos:line="501" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="501" pos:column="51">NULL<pos:position pos:line="501" pos:column="55"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="502" pos:column="21">"WARNING: MaxClients of %d exceeds ServerLimit value "<pos:position pos:line="502" pos:column="75"/></literal>
                    <literal type="string" pos:line="503" pos:column="21">"of %d servers,"<pos:position pos:line="503" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="503" pos:column="39">ap_daemons_limit<pos:position pos:line="503" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="503" pos:column="57">server_limit<pos:position pos:line="503" pos:column="69"/></name></expr></argument>)<pos:position pos:line="503" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="503" pos:column="71"/></expr_stmt>
       <expr_stmt><expr><call><name pos:line="504" pos:column="8">ap_log_error<pos:position pos:line="504" pos:column="20"/></name><argument_list pos:line="504" pos:column="20">(<argument><expr><name pos:line="504" pos:column="21">APLOG_MARK<pos:position pos:line="504" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="504" pos:column="33">APLOG_STARTUP<pos:position pos:line="504" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="504" pos:column="48">0<pos:position pos:line="504" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="504" pos:column="51">NULL<pos:position pos:line="504" pos:column="55"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="505" pos:column="21">" lowering MaxClients to %d.  To increase, please "<pos:position pos:line="505" pos:column="72"/></literal>
                    <literal type="string" pos:line="506" pos:column="21">"see the ServerLimit"<pos:position pos:line="506" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="506" pos:column="44">server_limit<pos:position pos:line="506" pos:column="56"/></name></expr></argument>)<pos:position pos:line="506" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="506" pos:column="58"/></expr_stmt>
       <expr_stmt><expr><call><name pos:line="507" pos:column="8">ap_log_error<pos:position pos:line="507" pos:column="20"/></name><argument_list pos:line="507" pos:column="20">(<argument><expr><name pos:line="507" pos:column="21">APLOG_MARK<pos:position pos:line="507" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="507" pos:column="33">APLOG_STARTUP<pos:position pos:line="507" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="507" pos:column="48">0<pos:position pos:line="507" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="507" pos:column="51">NULL<pos:position pos:line="507" pos:column="55"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="508" pos:column="21">" directive."<pos:position pos:line="508" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="508" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="508" pos:column="36"/></expr_stmt>
       <expr_stmt><expr><name pos:line="509" pos:column="8">ap_daemons_limit<pos:position pos:line="509" pos:column="24"/></name> <operator pos:line="509" pos:column="25">=<pos:position pos:line="509" pos:column="26"/></operator> <name pos:line="509" pos:column="27">server_limit<pos:position pos:line="509" pos:column="39"/></name></expr>;<pos:position pos:line="509" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="510" pos:column="6"/></block></then>
    <elseif pos:line="511" pos:column="5">else <if pos:line="511" pos:column="10">if <condition pos:line="511" pos:column="13">(<expr><name pos:line="511" pos:column="14">ap_daemons_limit<pos:position pos:line="511" pos:column="30"/></name> <operator pos:line="511" pos:column="31">&lt;<pos:position pos:line="511" pos:column="35"/></operator> <literal type="number" pos:line="511" pos:column="33">1<pos:position pos:line="511" pos:column="34"/></literal></expr>)<pos:position pos:line="511" pos:column="35"/></condition><then pos:line="511" pos:column="35"> <block pos:line="511" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="512" pos:column="9">ap_log_error<pos:position pos:line="512" pos:column="21"/></name><argument_list pos:line="512" pos:column="21">(<argument><expr><name pos:line="512" pos:column="22">APLOG_MARK<pos:position pos:line="512" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="512" pos:column="34">APLOG_STARTUP<pos:position pos:line="512" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="512" pos:column="49">0<pos:position pos:line="512" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="512" pos:column="52">NULL<pos:position pos:line="512" pos:column="56"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="513" pos:column="22">"WARNING: Require MaxClients &gt; 0, setting to 1"<pos:position pos:line="513" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="513" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="513" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><name pos:line="514" pos:column="9">ap_daemons_limit<pos:position pos:line="514" pos:column="25"/></name> <operator pos:line="514" pos:column="26">=<pos:position pos:line="514" pos:column="27"/></operator> <literal type="number" pos:line="514" pos:column="28">1<pos:position pos:line="514" pos:column="29"/></literal></expr>;<pos:position pos:line="514" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="515" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="516" pos:column="5">return <expr><name pos:line="516" pos:column="12">NULL<pos:position pos:line="516" pos:column="16"/></name></expr>;<pos:position pos:line="516" pos:column="17"/></return>
}<pos:position pos:line="517" pos:column="2"/></block></function>

<function><specifier pos:line="519" pos:column="1">static<pos:position pos:line="519" pos:column="7"/></specifier> <type><specifier pos:line="519" pos:column="8">const<pos:position pos:line="519" pos:column="13"/></specifier> <name pos:line="519" pos:column="14">char<pos:position pos:line="519" pos:column="18"/></name> <modifier pos:line="519" pos:column="19">*<pos:position pos:line="519" pos:column="20"/></modifier></type><name pos:line="519" pos:column="20">set_server_limit<pos:position pos:line="519" pos:column="36"/></name> <parameter_list pos:line="519" pos:column="37">(<parameter><decl><type><name pos:line="519" pos:column="38">cmd_parms<pos:position pos:line="519" pos:column="47"/></name> <modifier pos:line="519" pos:column="48">*<pos:position pos:line="519" pos:column="49"/></modifier></type><name pos:line="519" pos:column="49">cmd<pos:position pos:line="519" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="519" pos:column="54">void<pos:position pos:line="519" pos:column="58"/></name> <modifier pos:line="519" pos:column="59">*<pos:position pos:line="519" pos:column="60"/></modifier></type><name pos:line="519" pos:column="60">dummy<pos:position pos:line="519" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="519" pos:column="67">const<pos:position pos:line="519" pos:column="72"/></specifier> <name pos:line="519" pos:column="73">char<pos:position pos:line="519" pos:column="77"/></name> <modifier pos:line="519" pos:column="78">*<pos:position pos:line="519" pos:column="79"/></modifier></type><name pos:line="519" pos:column="79">arg<pos:position pos:line="519" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="519" pos:column="83"/></parameter_list>
<block pos:line="520" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="521" pos:column="5">int<pos:position pos:line="521" pos:column="8"/></name></type> <name pos:line="521" pos:column="9">tmp_server_limit<pos:position pos:line="521" pos:column="25"/></name></decl>;<pos:position pos:line="521" pos:column="26"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="523" pos:column="5">const<pos:position pos:line="523" pos:column="10"/></specifier> <name pos:line="523" pos:column="11">char<pos:position pos:line="523" pos:column="15"/></name> <modifier pos:line="523" pos:column="16">*<pos:position pos:line="523" pos:column="17"/></modifier></type><name pos:line="523" pos:column="17">err<pos:position pos:line="523" pos:column="20"/></name> <init pos:line="523" pos:column="21">= <expr><call><name pos:line="523" pos:column="23">ap_check_cmd_context<pos:position pos:line="523" pos:column="43"/></name><argument_list pos:line="523" pos:column="43">(<argument><expr><name pos:line="523" pos:column="44">cmd<pos:position pos:line="523" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="523" pos:column="49">GLOBAL_ONLY<pos:position pos:line="523" pos:column="60"/></name></expr></argument>)<pos:position pos:line="523" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="523" pos:column="62"/></decl_stmt>
    <if pos:line="524" pos:column="5">if <condition pos:line="524" pos:column="8">(<expr><name pos:line="524" pos:column="9">err<pos:position pos:line="524" pos:column="12"/></name> <operator pos:line="524" pos:column="13">!=<pos:position pos:line="524" pos:column="15"/></operator> <name pos:line="524" pos:column="16">NULL<pos:position pos:line="524" pos:column="20"/></name></expr>)<pos:position pos:line="524" pos:column="21"/></condition><then pos:line="524" pos:column="21"> <block pos:line="524" pos:column="22">{
        <return pos:line="525" pos:column="9">return <expr><name pos:line="525" pos:column="16">err<pos:position pos:line="525" pos:column="19"/></name></expr>;<pos:position pos:line="525" pos:column="20"/></return>
    }<pos:position pos:line="526" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="528" pos:column="5">tmp_server_limit<pos:position pos:line="528" pos:column="21"/></name> <operator pos:line="528" pos:column="22">=<pos:position pos:line="528" pos:column="23"/></operator> <call><name pos:line="528" pos:column="24">atoi<pos:position pos:line="528" pos:column="28"/></name><argument_list pos:line="528" pos:column="28">(<argument><expr><name pos:line="528" pos:column="29">arg<pos:position pos:line="528" pos:column="32"/></name></expr></argument>)<pos:position pos:line="528" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="528" pos:column="34"/></expr_stmt>
    <comment type="block" pos:line="529" pos:column="5">/* you cannot change ServerLimit across a restart; ignore
     * any such attempts
     */</comment>
    <if pos:line="532" pos:column="5">if <condition pos:line="532" pos:column="8">(<expr><name pos:line="532" pos:column="9">first_server_limit<pos:position pos:line="532" pos:column="27"/></name> <operator pos:line="532" pos:column="28">&amp;&amp;<pos:position pos:line="532" pos:column="38"/></operator>
        <name pos:line="533" pos:column="9">tmp_server_limit<pos:position pos:line="533" pos:column="25"/></name> <operator pos:line="533" pos:column="26">!=<pos:position pos:line="533" pos:column="28"/></operator> <name pos:line="533" pos:column="29">server_limit<pos:position pos:line="533" pos:column="41"/></name></expr>)<pos:position pos:line="533" pos:column="42"/></condition><then pos:line="533" pos:column="42"> <block pos:line="533" pos:column="43">{
        <comment type="block" pos:line="534" pos:column="9">/* how do we log a message?  the error log is a bit bucket at this
         * point; we'll just have to set a flag so that ap_mpm_run()
         * logs a warning later
         */</comment>
        <expr_stmt><expr><name pos:line="538" pos:column="9">changed_limit_at_restart<pos:position pos:line="538" pos:column="33"/></name> <operator pos:line="538" pos:column="34">=<pos:position pos:line="538" pos:column="35"/></operator> <literal type="number" pos:line="538" pos:column="36">1<pos:position pos:line="538" pos:column="37"/></literal></expr>;<pos:position pos:line="538" pos:column="38"/></expr_stmt>
        <return pos:line="539" pos:column="9">return <expr><name pos:line="539" pos:column="16">NULL<pos:position pos:line="539" pos:column="20"/></name></expr>;<pos:position pos:line="539" pos:column="21"/></return>
    }<pos:position pos:line="540" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="541" pos:column="5">server_limit<pos:position pos:line="541" pos:column="17"/></name> <operator pos:line="541" pos:column="18">=<pos:position pos:line="541" pos:column="19"/></operator> <name pos:line="541" pos:column="20">tmp_server_limit<pos:position pos:line="541" pos:column="36"/></name></expr>;<pos:position pos:line="541" pos:column="37"/></expr_stmt>

    <if pos:line="543" pos:column="5">if <condition pos:line="543" pos:column="8">(<expr><name pos:line="543" pos:column="9">server_limit<pos:position pos:line="543" pos:column="21"/></name> <operator pos:line="543" pos:column="22">&gt;<pos:position pos:line="543" pos:column="26"/></operator> <name pos:line="543" pos:column="24">MAX_SERVER_LIMIT<pos:position pos:line="543" pos:column="40"/></name></expr>)<pos:position pos:line="543" pos:column="41"/></condition><then pos:line="543" pos:column="41"> <block pos:line="543" pos:column="42">{
       <expr_stmt><expr><call><name pos:line="544" pos:column="8">ap_log_error<pos:position pos:line="544" pos:column="20"/></name><argument_list pos:line="544" pos:column="20">(<argument><expr><name pos:line="544" pos:column="21">APLOG_MARK<pos:position pos:line="544" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="544" pos:column="33">APLOG_STARTUP<pos:position pos:line="544" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="544" pos:column="48">0<pos:position pos:line="544" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="544" pos:column="51">NULL<pos:position pos:line="544" pos:column="55"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="545" pos:column="21">"WARNING: ServerLimit of %d exceeds compile time limit "<pos:position pos:line="545" pos:column="77"/></literal>
                    <literal type="string" pos:line="546" pos:column="21">"of %d servers,"<pos:position pos:line="546" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="546" pos:column="39">server_limit<pos:position pos:line="546" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="546" pos:column="53">MAX_SERVER_LIMIT<pos:position pos:line="546" pos:column="69"/></name></expr></argument>)<pos:position pos:line="546" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="546" pos:column="71"/></expr_stmt>
       <expr_stmt><expr><call><name pos:line="547" pos:column="8">ap_log_error<pos:position pos:line="547" pos:column="20"/></name><argument_list pos:line="547" pos:column="20">(<argument><expr><name pos:line="547" pos:column="21">APLOG_MARK<pos:position pos:line="547" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="547" pos:column="33">APLOG_STARTUP<pos:position pos:line="547" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="547" pos:column="48">0<pos:position pos:line="547" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="547" pos:column="51">NULL<pos:position pos:line="547" pos:column="55"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="548" pos:column="21">" lowering ServerLimit to %d."<pos:position pos:line="548" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="548" pos:column="53">MAX_SERVER_LIMIT<pos:position pos:line="548" pos:column="69"/></name></expr></argument>)<pos:position pos:line="548" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="548" pos:column="71"/></expr_stmt>
       <expr_stmt><expr><name pos:line="549" pos:column="8">server_limit<pos:position pos:line="549" pos:column="20"/></name> <operator pos:line="549" pos:column="21">=<pos:position pos:line="549" pos:column="22"/></operator> <name pos:line="549" pos:column="23">MAX_SERVER_LIMIT<pos:position pos:line="549" pos:column="39"/></name></expr>;<pos:position pos:line="549" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="550" pos:column="6"/></block></then>
    <elseif pos:line="551" pos:column="5">else <if pos:line="551" pos:column="10">if <condition pos:line="551" pos:column="13">(<expr><name pos:line="551" pos:column="14">server_limit<pos:position pos:line="551" pos:column="26"/></name> <operator pos:line="551" pos:column="27">&lt;<pos:position pos:line="551" pos:column="31"/></operator> <literal type="number" pos:line="551" pos:column="29">1<pos:position pos:line="551" pos:column="30"/></literal></expr>)<pos:position pos:line="551" pos:column="31"/></condition><then pos:line="551" pos:column="31"> <block pos:line="551" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="552" pos:column="9">ap_log_error<pos:position pos:line="552" pos:column="21"/></name><argument_list pos:line="552" pos:column="21">(<argument><expr><name pos:line="552" pos:column="22">APLOG_MARK<pos:position pos:line="552" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="552" pos:column="34">APLOG_STARTUP<pos:position pos:line="552" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="552" pos:column="49">0<pos:position pos:line="552" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="552" pos:column="52">NULL<pos:position pos:line="552" pos:column="56"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="553" pos:column="22">"WARNING: Require ServerLimit &gt; 0, setting to 1"<pos:position pos:line="553" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="553" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="553" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name pos:line="554" pos:column="9">server_limit<pos:position pos:line="554" pos:column="21"/></name> <operator pos:line="554" pos:column="22">=<pos:position pos:line="554" pos:column="23"/></operator> <literal type="number" pos:line="554" pos:column="24">1<pos:position pos:line="554" pos:column="25"/></literal></expr>;<pos:position pos:line="554" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="555" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="556" pos:column="5">return <expr><name pos:line="556" pos:column="12">NULL<pos:position pos:line="556" pos:column="16"/></name></expr>;<pos:position pos:line="556" pos:column="17"/></return>
}<pos:position pos:line="557" pos:column="2"/></block></function>

<decl_stmt><decl><specifier pos:line="559" pos:column="1">static<pos:position pos:line="559" pos:column="7"/></specifier> <type><specifier pos:line="559" pos:column="8">const<pos:position pos:line="559" pos:column="13"/></specifier> <name pos:line="559" pos:column="14">command_rec<pos:position pos:line="559" pos:column="25"/></name></type> <name><name pos:line="559" pos:column="26">prefork_cmds<pos:position pos:line="559" pos:column="38"/></name><index pos:line="559" pos:column="38">[]<pos:position pos:line="559" pos:column="40"/></index></name> <init pos:line="559" pos:column="41">= <expr><block pos:line="559" pos:column="43">{
<expr><name pos:line="560" pos:column="1">UNIX_DAEMON_COMMANDS<pos:position pos:line="560" pos:column="21"/></name></expr>,
<expr><name pos:line="561" pos:column="1">LISTEN_COMMANDS<pos:position pos:line="561" pos:column="16"/></name></expr>,
<expr><call><name pos:line="562" pos:column="1">AP_INIT_TAKE1<pos:position pos:line="562" pos:column="14"/></name><argument_list pos:line="562" pos:column="14">(<argument><expr><literal type="string" pos:line="562" pos:column="15">"StartServers"<pos:position pos:line="562" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="562" pos:column="31">set_daemons_to_start<pos:position pos:line="562" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="562" pos:column="53">NULL<pos:position pos:line="562" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="562" pos:column="59">RSRC_CONF<pos:position pos:line="562" pos:column="68"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="563" pos:column="15">"Number of child processes launched at server startup"<pos:position pos:line="563" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="563" pos:column="70"/></argument_list></call></expr>,
<expr><call><name pos:line="564" pos:column="1">AP_INIT_TAKE1<pos:position pos:line="564" pos:column="14"/></name><argument_list pos:line="564" pos:column="14">(<argument><expr><literal type="string" pos:line="564" pos:column="15">"MinSpareServers"<pos:position pos:line="564" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="564" pos:column="34">set_min_free_servers<pos:position pos:line="564" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="564" pos:column="56">NULL<pos:position pos:line="564" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="564" pos:column="62">RSRC_CONF<pos:position pos:line="564" pos:column="71"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="565" pos:column="15">"Minimum number of idle children, to handle request spikes"<pos:position pos:line="565" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="565" pos:column="75"/></argument_list></call></expr>,
<expr><call><name pos:line="566" pos:column="1">AP_INIT_TAKE1<pos:position pos:line="566" pos:column="14"/></name><argument_list pos:line="566" pos:column="14">(<argument><expr><literal type="string" pos:line="566" pos:column="15">"MaxSpareServers"<pos:position pos:line="566" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="566" pos:column="34">set_max_free_servers<pos:position pos:line="566" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="566" pos:column="56">NULL<pos:position pos:line="566" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="566" pos:column="62">RSRC_CONF<pos:position pos:line="566" pos:column="71"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="567" pos:column="15">"Maximum number of idle children"<pos:position pos:line="567" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="567" pos:column="49"/></argument_list></call></expr>,
<expr><call><name pos:line="568" pos:column="1">AP_INIT_TAKE1<pos:position pos:line="568" pos:column="14"/></name><argument_list pos:line="568" pos:column="14">(<argument><expr><literal type="string" pos:line="568" pos:column="15">"MaxClients"<pos:position pos:line="568" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="568" pos:column="29">set_max_clients<pos:position pos:line="568" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="568" pos:column="46">NULL<pos:position pos:line="568" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="568" pos:column="52">RSRC_CONF<pos:position pos:line="568" pos:column="61"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="569" pos:column="15">"Maximum number of children alive at the same time"<pos:position pos:line="569" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="569" pos:column="67"/></argument_list></call></expr>,
<expr><call><name pos:line="570" pos:column="1">AP_INIT_TAKE1<pos:position pos:line="570" pos:column="14"/></name><argument_list pos:line="570" pos:column="14">(<argument><expr><literal type="string" pos:line="570" pos:column="15">"ServerLimit"<pos:position pos:line="570" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="570" pos:column="30">set_server_limit<pos:position pos:line="570" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="570" pos:column="48">NULL<pos:position pos:line="570" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="570" pos:column="54">RSRC_CONF<pos:position pos:line="570" pos:column="63"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="571" pos:column="15">"Maximum value of MaxClients for this run of Apache"<pos:position pos:line="571" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="571" pos:column="68"/></argument_list></call></expr>,
<expr><name pos:line="572" pos:column="1">AP_GRACEFUL_SHUTDOWN_TIMEOUT_COMMAND<pos:position pos:line="572" pos:column="37"/></name></expr>,
<expr><block pos:line="573" pos:column="1">{ <expr><name pos:line="573" pos:column="3">NULL<pos:position pos:line="573" pos:column="7"/></name></expr> }<pos:position pos:line="573" pos:column="9"/></block></expr>
}<pos:position pos:line="574" pos:column="2"/></block></expr></init></decl>;<pos:position pos:line="574" pos:column="3"/></decl_stmt>

<decl_stmt><decl><type><name pos:line="576" pos:column="1">module<pos:position pos:line="576" pos:column="7"/></name> <name pos:line="576" pos:column="8">AP_MODULE_DECLARE_DATA<pos:position pos:line="576" pos:column="30"/></name></type> <name pos:line="576" pos:column="31">mpm_prefork_module<pos:position pos:line="576" pos:column="49"/></name> <init pos:line="576" pos:column="50">= <expr><block pos:line="576" pos:column="52">{
    <expr><name pos:line="577" pos:column="5">MPM20_MODULE_STUFF<pos:position pos:line="577" pos:column="23"/></name></expr>,
    <expr><name pos:line="578" pos:column="5">ap_mpm_rewrite_args<pos:position pos:line="578" pos:column="24"/></name></expr>,        <comment type="block" pos:line="578" pos:column="33">/* hook to run before apache parses args */</comment>
    <expr><name pos:line="579" pos:column="5">NULL<pos:position pos:line="579" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="579" pos:column="33">/* create per-directory config structure */</comment>
    <expr><name pos:line="580" pos:column="5">NULL<pos:position pos:line="580" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="580" pos:column="33">/* merge per-directory config structures */</comment>
    <expr><name pos:line="581" pos:column="5">NULL<pos:position pos:line="581" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="581" pos:column="33">/* create per-server config structure */</comment>
    <expr><name pos:line="582" pos:column="5">NULL<pos:position pos:line="582" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="582" pos:column="33">/* merge per-server config structures */</comment>
    <expr><name pos:line="583" pos:column="5">prefork_cmds<pos:position pos:line="583" pos:column="17"/></name></expr>,               <comment type="block" pos:line="583" pos:column="33">/* command apr_table_t */</comment>
    <expr><name pos:line="584" pos:column="5">prefork_hooks<pos:position pos:line="584" pos:column="18"/></name></expr>,              <comment type="block" pos:line="584" pos:column="33">/* register hooks */</comment>
}<pos:position pos:line="585" pos:column="2"/></block></expr></init></decl>;<pos:position pos:line="585" pos:column="3"/></decl_stmt></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1188.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier> <specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier></type> <name><name pos:line="1" pos:column="39">argv<pos:position pos:line="1" pos:column="43"/></name><index pos:line="1" pos:column="43">[]<pos:position pos:line="1" pos:column="45"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">r<pos:position pos:line="3" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="12">l<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">tmp<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><literal type="number" pos:line="4" pos:column="14">1024<pos:position pos:line="4" pos:column="18"/></literal></expr>]<pos:position pos:line="4" pos:column="19"/></index></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_getopt_t<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">opt<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">optarg<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">c<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* table defaults  */</comment>
    <expr_stmt><expr><name pos:line="11" pos:column="5">tablestring<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="string" pos:line="11" pos:column="19">""<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">trstring<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <literal type="string" pos:line="12" pos:column="16">""<pos:position pos:line="12" pos:column="18"/></literal></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">tdstring<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <literal type="string" pos:line="13" pos:column="16">"bgcolor=white"<pos:position pos:line="13" pos:column="31"/></literal></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">cookie<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="string" pos:line="14" pos:column="14">""<pos:position pos:line="14" pos:column="16"/></literal></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">auth<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <literal type="string" pos:line="15" pos:column="12">""<pos:position pos:line="15" pos:column="14"/></literal></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">proxyhost<pos:position pos:line="16" pos:column="14"/></name><index pos:line="16" pos:column="14">[<expr><literal type="number" pos:line="16" pos:column="15">0<pos:position pos:line="16" pos:column="16"/></literal></expr>]<pos:position pos:line="16" pos:column="17"/></index></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <literal type="char" pos:line="16" pos:column="20">'\0'<pos:position pos:line="16" pos:column="24"/></literal></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">hdrs<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <literal type="string" pos:line="17" pos:column="12">""<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">apr_app_initialize<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><operator pos:line="19" pos:column="24">&amp;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="25">argc<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="31">&amp;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="32">argv<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">NULL<pos:position pos:line="19" pos:column="42"/></name></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">atexit<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name pos:line="20" pos:column="12">apr_terminate<pos:position pos:line="20" pos:column="25"/></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">apr_pool_create<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><operator pos:line="21" pos:column="21">&amp;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="22">cntxt<pos:position pos:line="21" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="29">NULL<pos:position pos:line="21" pos:column="33"/></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>

<cpp:ifdef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">ifdef<pos:position pos:line="23" pos:column="7"/></cpp:directive> <name pos:line="23" pos:column="8">NOT_ASCII<pos:position pos:line="23" pos:column="17"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="24" pos:column="5">status<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">apr_xlate_open<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><operator pos:line="24" pos:column="29">&amp;<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="30">to_ascii<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="40">"ISO8859-1"<pos:position pos:line="24" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">APR_DEFAULT_CHARSET<pos:position pos:line="24" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="74">cntxt<pos:position pos:line="24" pos:column="79"/></name></expr></argument>)<pos:position pos:line="24" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="81"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">status<pos:position pos:line="25" pos:column="15"/></name></expr>)<pos:position pos:line="25" pos:column="16"/></condition><then pos:line="25" pos:column="16"> <block pos:line="25" pos:column="17">{
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">fprintf<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">stderr<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="25">"apr_xlate_open(to ASCII)-&gt;%d\n"<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="59">status<pos:position pos:line="26" pos:column="65"/></name></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">exit<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><literal type="number" pos:line="27" pos:column="14">1<pos:position pos:line="27" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="29" pos:column="5">status<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">apr_xlate_open<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><operator pos:line="29" pos:column="29">&amp;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="30">from_ascii<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">APR_DEFAULT_CHARSET<pos:position pos:line="29" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="63">"ISO8859-1"<pos:position pos:line="29" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="76">cntxt<pos:position pos:line="29" pos:column="81"/></name></expr></argument>)<pos:position pos:line="29" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="83"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">status<pos:position pos:line="30" pos:column="15"/></name></expr>)<pos:position pos:line="30" pos:column="16"/></condition><then pos:line="30" pos:column="16"> <block pos:line="30" pos:column="17">{
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">fprintf<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">stderr<pos:position pos:line="31" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="25">"apr_xlate_open(from ASCII)-&gt;%d\n"<pos:position pos:line="31" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="61">status<pos:position pos:line="31" pos:column="67"/></name></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">exit<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="34" pos:column="5">status<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <call><name pos:line="34" pos:column="14">apr_base64init_ebcdic<pos:position pos:line="34" pos:column="35"/></name><argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">to_ascii<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">from_ascii<pos:position pos:line="34" pos:column="56"/></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">status<pos:position pos:line="35" pos:column="15"/></name></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16"> <block pos:line="35" pos:column="17">{
	<expr_stmt><expr><call><name pos:line="36" pos:column="9">fprintf<pos:position pos:line="36" pos:column="16"/></name><argument_list pos:line="36" pos:column="16">(<argument><expr><name pos:line="36" pos:column="17">stderr<pos:position pos:line="36" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="25">"apr_base64init_ebcdic()-&gt;%d\n"<pos:position pos:line="36" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="58">status<pos:position pos:line="36" pos:column="64"/></name></expr></argument>)<pos:position pos:line="36" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">exit<pos:position pos:line="37" pos:column="13"/></name><argument_list pos:line="37" pos:column="13">(<argument><expr><literal type="number" pos:line="37" pos:column="14">1<pos:position pos:line="37" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">apr_getopt_init<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><operator pos:line="41" pos:column="21">&amp;<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="22">opt<pos:position pos:line="41" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="27">cntxt<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="34">argc<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="40">argv<pos:position pos:line="41" pos:column="44"/></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt>
    <while pos:line="42" pos:column="5">while <condition pos:line="42" pos:column="11">(<expr><operator pos:line="42" pos:column="12">(<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">status<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <call><name pos:line="42" pos:column="22">apr_getopt<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">opt<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="38">"n:c:t:T:p:v:kVhwix:y:z:C:H:P:A:g:X:de:Sq"<pos:position pos:line="42" pos:column="80"/></literal>
<cpp:ifdef pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">ifdef<pos:position pos:line="43" pos:column="7"/></cpp:directive> <name pos:line="43" pos:column="8">USE_SSL<pos:position pos:line="43" pos:column="15"/></name></cpp:ifdef>
				<literal type="string" pos:line="44" pos:column="33">"s"<pos:position pos:line="44" pos:column="36"/></literal></expr></argument>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
				,<argument><expr><operator pos:line="46" pos:column="34">&amp;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="35">c<pos:position pos:line="46" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="38">&amp;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="39">optarg<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call><operator pos:line="46" pos:column="46">)<pos:position pos:line="46" pos:column="47"/></operator> <operator pos:line="46" pos:column="48">==<pos:position pos:line="46" pos:column="50"/></operator> <name pos:line="46" pos:column="51">APR_SUCCESS<pos:position pos:line="46" pos:column="62"/></name></expr>)<pos:position pos:line="46" pos:column="63"/></condition> <block pos:line="46" pos:column="64">{
	<switch pos:line="47" pos:column="9">switch <condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">c<pos:position pos:line="47" pos:column="18"/></name></expr>)<pos:position pos:line="47" pos:column="19"/></condition> <block pos:line="47" pos:column="20">{
	<case pos:line="48" pos:column="9">case <expr><literal type="char" pos:line="48" pos:column="14">'s'<pos:position pos:line="48" pos:column="17"/></literal></expr>:<pos:position pos:line="48" pos:column="18"/></case>
<cpp:ifdef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifdef<pos:position pos:line="49" pos:column="7"/></cpp:directive> <name pos:line="49" pos:column="8">USE_SSL<pos:position pos:line="49" pos:column="15"/></name></cpp:ifdef>
        <expr_stmt><expr><name pos:line="50" pos:column="9">ssl<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <literal type="number" pos:line="50" pos:column="15">1<pos:position pos:line="50" pos:column="16"/></literal></expr>;<pos:position pos:line="50" pos:column="17"/></expr_stmt>
        <break pos:line="51" pos:column="9">break;<pos:position pos:line="51" pos:column="15"/></break>
<cpp:else pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">else<pos:position pos:line="52" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">fprintf<pos:position pos:line="53" pos:column="16"/></name><argument_list pos:line="53" pos:column="16">(<argument><expr><name pos:line="53" pos:column="17">stderr<pos:position pos:line="53" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="25">"SSL not compiled in; no https support\n"<pos:position pos:line="53" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">exit<pos:position pos:line="54" pos:column="13"/></name><argument_list pos:line="54" pos:column="13">(<argument><expr><literal type="number" pos:line="54" pos:column="14">1<pos:position pos:line="54" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="17"/></expr_stmt>
<cpp:endif pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">endif<pos:position pos:line="55" pos:column="7"/></cpp:directive></cpp:endif>
	<case pos:line="56" pos:column="9">case <expr><literal type="char" pos:line="56" pos:column="14">'n'<pos:position pos:line="56" pos:column="17"/></literal></expr>:<pos:position pos:line="56" pos:column="18"/></case>
	    <expr_stmt><expr><name pos:line="57" pos:column="13">requests<pos:position pos:line="57" pos:column="21"/></name> <operator pos:line="57" pos:column="22">=<pos:position pos:line="57" pos:column="23"/></operator> <call><name pos:line="57" pos:column="24">atoi<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><name pos:line="57" pos:column="29">optarg<pos:position pos:line="57" pos:column="35"/></name></expr></argument>)<pos:position pos:line="57" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="37"/></expr_stmt>
	    <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><operator pos:line="58" pos:column="17">!<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="18">requests<pos:position pos:line="58" pos:column="26"/></name></expr>)<pos:position pos:line="58" pos:column="27"/></condition><then pos:line="58" pos:column="27"> <block pos:line="58" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">err<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><literal type="string" pos:line="59" pos:column="21">"Invalid number of requests\n"<pos:position pos:line="59" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="53"/></expr_stmt>
	    }<pos:position pos:line="60" pos:column="14"/></block></then></if>
	    <break pos:line="61" pos:column="13">break;<pos:position pos:line="61" pos:column="19"/></break>
	<case pos:line="62" pos:column="9">case <expr><literal type="char" pos:line="62" pos:column="14">'k'<pos:position pos:line="62" pos:column="17"/></literal></expr>:<pos:position pos:line="62" pos:column="18"/></case>
	    <expr_stmt><expr><name pos:line="63" pos:column="13">keepalive<pos:position pos:line="63" pos:column="22"/></name> <operator pos:line="63" pos:column="23">=<pos:position pos:line="63" pos:column="24"/></operator> <literal type="number" pos:line="63" pos:column="25">1<pos:position pos:line="63" pos:column="26"/></literal></expr>;<pos:position pos:line="63" pos:column="27"/></expr_stmt>
	    <break pos:line="64" pos:column="13">break;<pos:position pos:line="64" pos:column="19"/></break>
	<case pos:line="65" pos:column="9">case <expr><literal type="char" pos:line="65" pos:column="14">'q'<pos:position pos:line="65" pos:column="17"/></literal></expr>:<pos:position pos:line="65" pos:column="18"/></case>
	    <expr_stmt><expr><name pos:line="66" pos:column="13">heartbeatres<pos:position pos:line="66" pos:column="25"/></name> <operator pos:line="66" pos:column="26">=<pos:position pos:line="66" pos:column="27"/></operator> <literal type="number" pos:line="66" pos:column="28">0<pos:position pos:line="66" pos:column="29"/></literal></expr>;<pos:position pos:line="66" pos:column="30"/></expr_stmt>
	    <break pos:line="67" pos:column="13">break;<pos:position pos:line="67" pos:column="19"/></break>
	<case pos:line="68" pos:column="9">case <expr><literal type="char" pos:line="68" pos:column="14">'c'<pos:position pos:line="68" pos:column="17"/></literal></expr>:<pos:position pos:line="68" pos:column="18"/></case>
	    <expr_stmt><expr><name pos:line="69" pos:column="13">concurrency<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">=<pos:position pos:line="69" pos:column="26"/></operator> <call><name pos:line="69" pos:column="27">atoi<pos:position pos:line="69" pos:column="31"/></name><argument_list pos:line="69" pos:column="31">(<argument><expr><name pos:line="69" pos:column="32">optarg<pos:position pos:line="69" pos:column="38"/></name></expr></argument>)<pos:position pos:line="69" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>
	    <break pos:line="70" pos:column="13">break;<pos:position pos:line="70" pos:column="19"/></break>
	<case pos:line="71" pos:column="9">case <expr><literal type="char" pos:line="71" pos:column="14">'i'<pos:position pos:line="71" pos:column="17"/></literal></expr>:<pos:position pos:line="71" pos:column="18"/></case>
	    <if pos:line="72" pos:column="13">if <condition pos:line="72" pos:column="16">(<expr><name pos:line="72" pos:column="17">posting<pos:position pos:line="72" pos:column="24"/></name> <operator pos:line="72" pos:column="25">==<pos:position pos:line="72" pos:column="27"/></operator> <literal type="number" pos:line="72" pos:column="28">1<pos:position pos:line="72" pos:column="29"/></literal></expr>)<pos:position pos:line="72" pos:column="30"/></condition><then pos:line="72" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="17">err<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><literal type="string" pos:line="73" pos:column="21">"Cannot mix POST and HEAD\n"<pos:position pos:line="73" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="51"/></expr_stmt></block></then></if>
	    <expr_stmt><expr><name pos:line="74" pos:column="13">posting<pos:position pos:line="74" pos:column="20"/></name> <operator pos:line="74" pos:column="21">=<pos:position pos:line="74" pos:column="22"/></operator> <operator pos:line="74" pos:column="23">-<pos:position pos:line="74" pos:column="24"/></operator><literal type="number" pos:line="74" pos:column="24">1<pos:position pos:line="74" pos:column="25"/></literal></expr>;<pos:position pos:line="74" pos:column="26"/></expr_stmt>
	    <break pos:line="75" pos:column="13">break;<pos:position pos:line="75" pos:column="19"/></break>
	<case pos:line="76" pos:column="9">case <expr><literal type="char" pos:line="76" pos:column="14">'g'<pos:position pos:line="76" pos:column="17"/></literal></expr>:<pos:position pos:line="76" pos:column="18"/></case>
	    <expr_stmt><expr><name pos:line="77" pos:column="13">gnuplot<pos:position pos:line="77" pos:column="20"/></name> <operator pos:line="77" pos:column="21">=<pos:position pos:line="77" pos:column="22"/></operator> <call><name pos:line="77" pos:column="23">strdup<pos:position pos:line="77" pos:column="29"/></name><argument_list pos:line="77" pos:column="29">(<argument><expr><name pos:line="77" pos:column="30">optarg<pos:position pos:line="77" pos:column="36"/></name></expr></argument>)<pos:position pos:line="77" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="38"/></expr_stmt>
	    <break pos:line="78" pos:column="13">break;<pos:position pos:line="78" pos:column="19"/></break>
	<case pos:line="79" pos:column="9">case <expr><literal type="char" pos:line="79" pos:column="14">'d'<pos:position pos:line="79" pos:column="17"/></literal></expr>:<pos:position pos:line="79" pos:column="18"/></case>
	    <expr_stmt><expr><name pos:line="80" pos:column="13">percentile<pos:position pos:line="80" pos:column="23"/></name> <operator pos:line="80" pos:column="24">=<pos:position pos:line="80" pos:column="25"/></operator> <literal type="number" pos:line="80" pos:column="26">0<pos:position pos:line="80" pos:column="27"/></literal></expr>;<pos:position pos:line="80" pos:column="28"/></expr_stmt>
	    <break pos:line="81" pos:column="13">break;<pos:position pos:line="81" pos:column="19"/></break>
	<case pos:line="82" pos:column="9">case <expr><literal type="char" pos:line="82" pos:column="14">'e'<pos:position pos:line="82" pos:column="17"/></literal></expr>:<pos:position pos:line="82" pos:column="18"/></case>
	    <expr_stmt><expr><name pos:line="83" pos:column="13">csvperc<pos:position pos:line="83" pos:column="20"/></name> <operator pos:line="83" pos:column="21">=<pos:position pos:line="83" pos:column="22"/></operator> <call><name pos:line="83" pos:column="23">strdup<pos:position pos:line="83" pos:column="29"/></name><argument_list pos:line="83" pos:column="29">(<argument><expr><name pos:line="83" pos:column="30">optarg<pos:position pos:line="83" pos:column="36"/></name></expr></argument>)<pos:position pos:line="83" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="38"/></expr_stmt>
	    <break pos:line="84" pos:column="13">break;<pos:position pos:line="84" pos:column="19"/></break>
	<case pos:line="85" pos:column="9">case <expr><literal type="char" pos:line="85" pos:column="14">'S'<pos:position pos:line="85" pos:column="17"/></literal></expr>:<pos:position pos:line="85" pos:column="18"/></case>
	    <expr_stmt><expr><name pos:line="86" pos:column="13">confidence<pos:position pos:line="86" pos:column="23"/></name> <operator pos:line="86" pos:column="24">=<pos:position pos:line="86" pos:column="25"/></operator> <literal type="number" pos:line="86" pos:column="26">0<pos:position pos:line="86" pos:column="27"/></literal></expr>;<pos:position pos:line="86" pos:column="28"/></expr_stmt>
	    <break pos:line="87" pos:column="13">break;<pos:position pos:line="87" pos:column="19"/></break>
	<case pos:line="88" pos:column="9">case <expr><literal type="char" pos:line="88" pos:column="14">'p'<pos:position pos:line="88" pos:column="17"/></literal></expr>:<pos:position pos:line="88" pos:column="18"/></case>
	    <if pos:line="89" pos:column="13">if <condition pos:line="89" pos:column="16">(<expr><name pos:line="89" pos:column="17">posting<pos:position pos:line="89" pos:column="24"/></name> <operator pos:line="89" pos:column="25">!=<pos:position pos:line="89" pos:column="27"/></operator> <literal type="number" pos:line="89" pos:column="28">0<pos:position pos:line="89" pos:column="29"/></literal></expr>)<pos:position pos:line="89" pos:column="30"/></condition><then pos:line="89" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="17">err<pos:position pos:line="90" pos:column="20"/></name><argument_list pos:line="90" pos:column="20">(<argument><expr><literal type="string" pos:line="90" pos:column="21">"Cannot mix POST and HEAD\n"<pos:position pos:line="90" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="51"/></expr_stmt></block></then></if>

	    <if pos:line="92" pos:column="13">if <condition pos:line="92" pos:column="16">(<expr><literal type="number" pos:line="92" pos:column="17">0<pos:position pos:line="92" pos:column="18"/></literal> <operator pos:line="92" pos:column="19">==<pos:position pos:line="92" pos:column="21"/></operator> <operator pos:line="92" pos:column="22">(<pos:position pos:line="92" pos:column="23"/></operator><name pos:line="92" pos:column="23">r<pos:position pos:line="92" pos:column="24"/></name> <operator pos:line="92" pos:column="25">=<pos:position pos:line="92" pos:column="26"/></operator> <call><name pos:line="92" pos:column="27">open_postfile<pos:position pos:line="92" pos:column="40"/></name><argument_list pos:line="92" pos:column="40">(<argument><expr><name pos:line="92" pos:column="41">optarg<pos:position pos:line="92" pos:column="47"/></name></expr></argument>)<pos:position pos:line="92" pos:column="48"/></argument_list></call><operator pos:line="92" pos:column="48">)<pos:position pos:line="92" pos:column="49"/></operator></expr>)<pos:position pos:line="92" pos:column="50"/></condition><then pos:line="92" pos:column="50"> <block pos:line="92" pos:column="51">{
		<expr_stmt><expr><name pos:line="93" pos:column="17">posting<pos:position pos:line="93" pos:column="24"/></name> <operator pos:line="93" pos:column="25">=<pos:position pos:line="93" pos:column="26"/></operator> <literal type="number" pos:line="93" pos:column="27">1<pos:position pos:line="93" pos:column="28"/></literal></expr>;<pos:position pos:line="93" pos:column="29"/></expr_stmt>
	    }<pos:position pos:line="94" pos:column="14"/></block></then>
	    <elseif pos:line="95" pos:column="13">else <if pos:line="95" pos:column="18">if <condition pos:line="95" pos:column="21">(<expr><name pos:line="95" pos:column="22">postdata<pos:position pos:line="95" pos:column="30"/></name></expr>)<pos:position pos:line="95" pos:column="31"/></condition><then pos:line="95" pos:column="31"> <block pos:line="95" pos:column="32">{
		<expr_stmt><expr><call><name pos:line="96" pos:column="17">exit<pos:position pos:line="96" pos:column="21"/></name><argument_list pos:line="96" pos:column="21">(<argument><expr><name pos:line="96" pos:column="22">r<pos:position pos:line="96" pos:column="23"/></name></expr></argument>)<pos:position pos:line="96" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="25"/></expr_stmt>
	    }<pos:position pos:line="97" pos:column="14"/></block></then></if></elseif></if>
	    <break pos:line="98" pos:column="13">break;<pos:position pos:line="98" pos:column="19"/></break>
	<case pos:line="99" pos:column="9">case <expr><literal type="char" pos:line="99" pos:column="14">'v'<pos:position pos:line="99" pos:column="17"/></literal></expr>:<pos:position pos:line="99" pos:column="18"/></case>
	    <expr_stmt><expr><name pos:line="100" pos:column="13">verbosity<pos:position pos:line="100" pos:column="22"/></name> <operator pos:line="100" pos:column="23">=<pos:position pos:line="100" pos:column="24"/></operator> <call><name pos:line="100" pos:column="25">atoi<pos:position pos:line="100" pos:column="29"/></name><argument_list pos:line="100" pos:column="29">(<argument><expr><name pos:line="100" pos:column="30">optarg<pos:position pos:line="100" pos:column="36"/></name></expr></argument>)<pos:position pos:line="100" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="38"/></expr_stmt>
	    <break pos:line="101" pos:column="13">break;<pos:position pos:line="101" pos:column="19"/></break>
	<case pos:line="102" pos:column="9">case <expr><literal type="char" pos:line="102" pos:column="14">'t'<pos:position pos:line="102" pos:column="17"/></literal></expr>:<pos:position pos:line="102" pos:column="18"/></case>
	    <expr_stmt><expr><name pos:line="103" pos:column="13">tlimit<pos:position pos:line="103" pos:column="19"/></name> <operator pos:line="103" pos:column="20">=<pos:position pos:line="103" pos:column="21"/></operator> <call><name pos:line="103" pos:column="22">atoi<pos:position pos:line="103" pos:column="26"/></name><argument_list pos:line="103" pos:column="26">(<argument><expr><name pos:line="103" pos:column="27">optarg<pos:position pos:line="103" pos:column="33"/></name></expr></argument>)<pos:position pos:line="103" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="35"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="104" pos:column="13">requests<pos:position pos:line="104" pos:column="21"/></name> <operator pos:line="104" pos:column="22">=<pos:position pos:line="104" pos:column="23"/></operator> <name pos:line="104" pos:column="24">MAX_REQUESTS<pos:position pos:line="104" pos:column="36"/></name></expr>;<pos:position pos:line="104" pos:column="37"/></expr_stmt>	<comment type="block" pos:line="104" pos:column="41">/* need to size data array on
					 * something */</comment>
	    <break pos:line="106" pos:column="13">break;<pos:position pos:line="106" pos:column="19"/></break>
	<case pos:line="107" pos:column="9">case <expr><literal type="char" pos:line="107" pos:column="14">'T'<pos:position pos:line="107" pos:column="17"/></literal></expr>:<pos:position pos:line="107" pos:column="18"/></case>
	    <expr_stmt><expr><call><name pos:line="108" pos:column="13">strcpy<pos:position pos:line="108" pos:column="19"/></name><argument_list pos:line="108" pos:column="19">(<argument><expr><name pos:line="108" pos:column="20">content_type<pos:position pos:line="108" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="34">optarg<pos:position pos:line="108" pos:column="40"/></name></expr></argument>)<pos:position pos:line="108" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="42"/></expr_stmt>
	    <break pos:line="109" pos:column="13">break;<pos:position pos:line="109" pos:column="19"/></break>
	<case pos:line="110" pos:column="9">case <expr><literal type="char" pos:line="110" pos:column="14">'C'<pos:position pos:line="110" pos:column="17"/></literal></expr>:<pos:position pos:line="110" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="111" pos:column="13">cookie<pos:position pos:line="111" pos:column="19"/></name> <operator pos:line="111" pos:column="20">=<pos:position pos:line="111" pos:column="21"/></operator> <call><name pos:line="111" pos:column="22">apr_pstrcat<pos:position pos:line="111" pos:column="33"/></name><argument_list pos:line="111" pos:column="33">(<argument><expr><name pos:line="111" pos:column="34">cntxt<pos:position pos:line="111" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="41">"Cookie: "<pos:position pos:line="111" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="53">optarg<pos:position pos:line="111" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="61">"\r\n"<pos:position pos:line="111" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="69">NULL<pos:position pos:line="111" pos:column="73"/></name></expr></argument>)<pos:position pos:line="111" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="75"/></expr_stmt>
	    <break pos:line="112" pos:column="13">break;<pos:position pos:line="112" pos:column="19"/></break>
	<case pos:line="113" pos:column="9">case <expr><literal type="char" pos:line="113" pos:column="14">'A'<pos:position pos:line="113" pos:column="17"/></literal></expr>:<pos:position pos:line="113" pos:column="18"/></case>
	    <comment type="block" pos:line="114" pos:column="13">/*
	     * assume username passwd already to be in colon separated form.
	     * Ready to be uu-encoded.
	     */</comment>
	    <while pos:line="118" pos:column="13">while <condition pos:line="118" pos:column="19">(<expr><call><name pos:line="118" pos:column="20">apr_isspace<pos:position pos:line="118" pos:column="31"/></name><argument_list pos:line="118" pos:column="31">(<argument><expr><operator pos:line="118" pos:column="32">*<pos:position pos:line="118" pos:column="33"/></operator><name pos:line="118" pos:column="33">optarg<pos:position pos:line="118" pos:column="39"/></name></expr></argument>)<pos:position pos:line="118" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="41"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="119" pos:column="17">optarg<pos:position pos:line="119" pos:column="23"/></name><operator pos:line="119" pos:column="23">++<pos:position pos:line="119" pos:column="25"/></operator></expr>;<pos:position pos:line="119" pos:column="26"/></expr_stmt></block></while>
            <if pos:line="120" pos:column="13">if <condition pos:line="120" pos:column="16">(<expr><call><name pos:line="120" pos:column="17">apr_base64_encode_len<pos:position pos:line="120" pos:column="38"/></name><argument_list pos:line="120" pos:column="38">(<argument><expr><call><name pos:line="120" pos:column="39">strlen<pos:position pos:line="120" pos:column="45"/></name><argument_list pos:line="120" pos:column="45">(<argument><expr><name pos:line="120" pos:column="46">optarg<pos:position pos:line="120" pos:column="52"/></name></expr></argument>)<pos:position pos:line="120" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="120" pos:column="54"/></argument_list></call> <operator pos:line="120" pos:column="55">&gt;<pos:position pos:line="120" pos:column="59"/></operator> <sizeof pos:line="120" pos:column="57">sizeof<argument_list pos:line="120" pos:column="63">(<argument><expr><name pos:line="120" pos:column="64">tmp<pos:position pos:line="120" pos:column="67"/></name></expr></argument>)<pos:position pos:line="120" pos:column="68"/></argument_list></sizeof></expr>)<pos:position pos:line="120" pos:column="69"/></condition><then pos:line="120" pos:column="69"> <block pos:line="120" pos:column="70">{
                <expr_stmt><expr><call><name pos:line="121" pos:column="17">err<pos:position pos:line="121" pos:column="20"/></name><argument_list pos:line="121" pos:column="20">(<argument><expr><literal type="string" pos:line="121" pos:column="21">"Authentication credentials too long\n"<pos:position pos:line="121" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="122" pos:column="14"/></block></then></if>
	    <expr_stmt><expr><name pos:line="123" pos:column="13">l<pos:position pos:line="123" pos:column="14"/></name> <operator pos:line="123" pos:column="15">=<pos:position pos:line="123" pos:column="16"/></operator> <call><name pos:line="123" pos:column="17">apr_base64_encode<pos:position pos:line="123" pos:column="34"/></name><argument_list pos:line="123" pos:column="34">(<argument><expr><name pos:line="123" pos:column="35">tmp<pos:position pos:line="123" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="40">optarg<pos:position pos:line="123" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="123" pos:column="48">strlen<pos:position pos:line="123" pos:column="54"/></name><argument_list pos:line="123" pos:column="54">(<argument><expr><name pos:line="123" pos:column="55">optarg<pos:position pos:line="123" pos:column="61"/></name></expr></argument>)<pos:position pos:line="123" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="123" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="64"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="124" pos:column="13">tmp<pos:position pos:line="124" pos:column="16"/></name><index pos:line="124" pos:column="16">[<expr><name pos:line="124" pos:column="17">l<pos:position pos:line="124" pos:column="18"/></name></expr>]<pos:position pos:line="124" pos:column="19"/></index></name> <operator pos:line="124" pos:column="20">=<pos:position pos:line="124" pos:column="21"/></operator> <literal type="char" pos:line="124" pos:column="22">'\0'<pos:position pos:line="124" pos:column="26"/></literal></expr>;<pos:position pos:line="124" pos:column="27"/></expr_stmt>

            <expr_stmt><expr><name pos:line="126" pos:column="13">auth<pos:position pos:line="126" pos:column="17"/></name> <operator pos:line="126" pos:column="18">=<pos:position pos:line="126" pos:column="19"/></operator> <call><name pos:line="126" pos:column="20">apr_pstrcat<pos:position pos:line="126" pos:column="31"/></name><argument_list pos:line="126" pos:column="31">(<argument><expr><name pos:line="126" pos:column="32">cntxt<pos:position pos:line="126" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="39">auth<pos:position pos:line="126" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="45">"Authorization: Basic "<pos:position pos:line="126" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="126" pos:column="70">tmp<pos:position pos:line="126" pos:column="73"/></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="127" pos:column="32">"\r\n"<pos:position pos:line="127" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="40">NULL<pos:position pos:line="127" pos:column="44"/></name></expr></argument>)<pos:position pos:line="127" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="46"/></expr_stmt>
	    <break pos:line="128" pos:column="13">break;<pos:position pos:line="128" pos:column="19"/></break>
	<case pos:line="129" pos:column="9">case <expr><literal type="char" pos:line="129" pos:column="14">'P'<pos:position pos:line="129" pos:column="17"/></literal></expr>:<pos:position pos:line="129" pos:column="18"/></case>
	    <comment type="block" pos:line="130" pos:column="13">/*
             * assume username passwd already to be in colon separated form.
             */</comment>
	    <while pos:line="133" pos:column="13">while <condition pos:line="133" pos:column="19">(<expr><call><name pos:line="133" pos:column="20">apr_isspace<pos:position pos:line="133" pos:column="31"/></name><argument_list pos:line="133" pos:column="31">(<argument><expr><operator pos:line="133" pos:column="32">*<pos:position pos:line="133" pos:column="33"/></operator><name pos:line="133" pos:column="33">optarg<pos:position pos:line="133" pos:column="39"/></name></expr></argument>)<pos:position pos:line="133" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="133" pos:column="41"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="134" pos:column="17">optarg<pos:position pos:line="134" pos:column="23"/></name><operator pos:line="134" pos:column="23">++<pos:position pos:line="134" pos:column="25"/></operator></expr>;<pos:position pos:line="134" pos:column="26"/></expr_stmt></block></while>
            <if pos:line="135" pos:column="13">if <condition pos:line="135" pos:column="16">(<expr><call><name pos:line="135" pos:column="17">apr_base64_encode_len<pos:position pos:line="135" pos:column="38"/></name><argument_list pos:line="135" pos:column="38">(<argument><expr><call><name pos:line="135" pos:column="39">strlen<pos:position pos:line="135" pos:column="45"/></name><argument_list pos:line="135" pos:column="45">(<argument><expr><name pos:line="135" pos:column="46">optarg<pos:position pos:line="135" pos:column="52"/></name></expr></argument>)<pos:position pos:line="135" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="135" pos:column="54"/></argument_list></call> <operator pos:line="135" pos:column="55">&gt;<pos:position pos:line="135" pos:column="59"/></operator> <sizeof pos:line="135" pos:column="57">sizeof<argument_list pos:line="135" pos:column="63">(<argument><expr><name pos:line="135" pos:column="64">tmp<pos:position pos:line="135" pos:column="67"/></name></expr></argument>)<pos:position pos:line="135" pos:column="68"/></argument_list></sizeof></expr>)<pos:position pos:line="135" pos:column="69"/></condition><then pos:line="135" pos:column="69"> <block pos:line="135" pos:column="70">{
                <expr_stmt><expr><call><name pos:line="136" pos:column="17">err<pos:position pos:line="136" pos:column="20"/></name><argument_list pos:line="136" pos:column="20">(<argument><expr><literal type="string" pos:line="136" pos:column="21">"Proxy credentials too long\n"<pos:position pos:line="136" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="137" pos:column="14"/></block></then></if>
	    <expr_stmt><expr><name pos:line="138" pos:column="13">l<pos:position pos:line="138" pos:column="14"/></name> <operator pos:line="138" pos:column="15">=<pos:position pos:line="138" pos:column="16"/></operator> <call><name pos:line="138" pos:column="17">apr_base64_encode<pos:position pos:line="138" pos:column="34"/></name><argument_list pos:line="138" pos:column="34">(<argument><expr><name pos:line="138" pos:column="35">tmp<pos:position pos:line="138" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="40">optarg<pos:position pos:line="138" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="138" pos:column="48">strlen<pos:position pos:line="138" pos:column="54"/></name><argument_list pos:line="138" pos:column="54">(<argument><expr><name pos:line="138" pos:column="55">optarg<pos:position pos:line="138" pos:column="61"/></name></expr></argument>)<pos:position pos:line="138" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="138" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="64"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="139" pos:column="13">tmp<pos:position pos:line="139" pos:column="16"/></name><index pos:line="139" pos:column="16">[<expr><name pos:line="139" pos:column="17">l<pos:position pos:line="139" pos:column="18"/></name></expr>]<pos:position pos:line="139" pos:column="19"/></index></name> <operator pos:line="139" pos:column="20">=<pos:position pos:line="139" pos:column="21"/></operator> <literal type="char" pos:line="139" pos:column="22">'\0'<pos:position pos:line="139" pos:column="26"/></literal></expr>;<pos:position pos:line="139" pos:column="27"/></expr_stmt>

            <expr_stmt><expr><name pos:line="141" pos:column="13">auth<pos:position pos:line="141" pos:column="17"/></name> <operator pos:line="141" pos:column="18">=<pos:position pos:line="141" pos:column="19"/></operator> <call><name pos:line="141" pos:column="20">apr_pstrcat<pos:position pos:line="141" pos:column="31"/></name><argument_list pos:line="141" pos:column="31">(<argument><expr><name pos:line="141" pos:column="32">cntxt<pos:position pos:line="141" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="39">auth<pos:position pos:line="141" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="45">"Proxy-Authorization: Basic "<pos:position pos:line="141" pos:column="74"/></literal></expr></argument>,
                               <argument><expr><name pos:line="142" pos:column="32">tmp<pos:position pos:line="142" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="37">"\r\n"<pos:position pos:line="142" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="142" pos:column="45">NULL<pos:position pos:line="142" pos:column="49"/></name></expr></argument>)<pos:position pos:line="142" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="51"/></expr_stmt>
	    <break pos:line="143" pos:column="13">break;<pos:position pos:line="143" pos:column="19"/></break>
	<case pos:line="144" pos:column="9">case <expr><literal type="char" pos:line="144" pos:column="14">'H'<pos:position pos:line="144" pos:column="17"/></literal></expr>:<pos:position pos:line="144" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="145" pos:column="13">hdrs<pos:position pos:line="145" pos:column="17"/></name> <operator pos:line="145" pos:column="18">=<pos:position pos:line="145" pos:column="19"/></operator> <call><name pos:line="145" pos:column="20">apr_pstrcat<pos:position pos:line="145" pos:column="31"/></name><argument_list pos:line="145" pos:column="31">(<argument><expr><name pos:line="145" pos:column="32">cntxt<pos:position pos:line="145" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="39">hdrs<pos:position pos:line="145" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="45">optarg<pos:position pos:line="145" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="53">"\r\n"<pos:position pos:line="145" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="145" pos:column="61">NULL<pos:position pos:line="145" pos:column="65"/></name></expr></argument>)<pos:position pos:line="145" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="67"/></expr_stmt>
	    <break pos:line="146" pos:column="13">break;<pos:position pos:line="146" pos:column="19"/></break>
	<case pos:line="147" pos:column="9">case <expr><literal type="char" pos:line="147" pos:column="14">'w'<pos:position pos:line="147" pos:column="17"/></literal></expr>:<pos:position pos:line="147" pos:column="18"/></case>
	    <expr_stmt><expr><name pos:line="148" pos:column="13">use_html<pos:position pos:line="148" pos:column="21"/></name> <operator pos:line="148" pos:column="22">=<pos:position pos:line="148" pos:column="23"/></operator> <literal type="number" pos:line="148" pos:column="24">1<pos:position pos:line="148" pos:column="25"/></literal></expr>;<pos:position pos:line="148" pos:column="26"/></expr_stmt>
	    <break pos:line="149" pos:column="13">break;<pos:position pos:line="149" pos:column="19"/></break>
	    <comment type="block" pos:line="150" pos:column="13">/*
	     * if any of the following three are used, turn on html output
	     * automatically
	     */</comment>
	<case pos:line="154" pos:column="9">case <expr><literal type="char" pos:line="154" pos:column="14">'x'<pos:position pos:line="154" pos:column="17"/></literal></expr>:<pos:position pos:line="154" pos:column="18"/></case>
	    <expr_stmt><expr><name pos:line="155" pos:column="13">use_html<pos:position pos:line="155" pos:column="21"/></name> <operator pos:line="155" pos:column="22">=<pos:position pos:line="155" pos:column="23"/></operator> <literal type="number" pos:line="155" pos:column="24">1<pos:position pos:line="155" pos:column="25"/></literal></expr>;<pos:position pos:line="155" pos:column="26"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="156" pos:column="13">tablestring<pos:position pos:line="156" pos:column="24"/></name> <operator pos:line="156" pos:column="25">=<pos:position pos:line="156" pos:column="26"/></operator> <name pos:line="156" pos:column="27">optarg<pos:position pos:line="156" pos:column="33"/></name></expr>;<pos:position pos:line="156" pos:column="34"/></expr_stmt>
	    <break pos:line="157" pos:column="13">break;<pos:position pos:line="157" pos:column="19"/></break>
	<case pos:line="158" pos:column="9">case <expr><literal type="char" pos:line="158" pos:column="14">'X'<pos:position pos:line="158" pos:column="17"/></literal></expr>:<pos:position pos:line="158" pos:column="18"/></case>
	    <block pos:line="159" pos:column="13">{
		<decl_stmt><decl><type><name pos:line="160" pos:column="17">char<pos:position pos:line="160" pos:column="21"/></name> <modifier pos:line="160" pos:column="22">*<pos:position pos:line="160" pos:column="23"/></modifier></type><name pos:line="160" pos:column="23">p<pos:position pos:line="160" pos:column="24"/></name></decl>;<pos:position pos:line="160" pos:column="25"/></decl_stmt>
		<comment type="block" pos:line="161" pos:column="17">/*
                 * assume proxy-name[:port]
                 */</comment>
		<if pos:line="164" pos:column="17">if <condition pos:line="164" pos:column="20">(<expr><operator pos:line="164" pos:column="21">(<pos:position pos:line="164" pos:column="22"/></operator><name pos:line="164" pos:column="22">p<pos:position pos:line="164" pos:column="23"/></name> <operator pos:line="164" pos:column="24">=<pos:position pos:line="164" pos:column="25"/></operator> <call><name pos:line="164" pos:column="26">strchr<pos:position pos:line="164" pos:column="32"/></name><argument_list pos:line="164" pos:column="32">(<argument><expr><name pos:line="164" pos:column="33">optarg<pos:position pos:line="164" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="164" pos:column="41">':'<pos:position pos:line="164" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="45"/></argument_list></call><operator pos:line="164" pos:column="45">)<pos:position pos:line="164" pos:column="46"/></operator></expr>)<pos:position pos:line="164" pos:column="47"/></condition><then pos:line="164" pos:column="47"> <block pos:line="164" pos:column="48">{
		    <expr_stmt><expr><operator pos:line="165" pos:column="21">*<pos:position pos:line="165" pos:column="22"/></operator><name pos:line="165" pos:column="22">p<pos:position pos:line="165" pos:column="23"/></name> <operator pos:line="165" pos:column="24">=<pos:position pos:line="165" pos:column="25"/></operator> <literal type="char" pos:line="165" pos:column="26">'\0'<pos:position pos:line="165" pos:column="30"/></literal></expr>;<pos:position pos:line="165" pos:column="31"/></expr_stmt>
		    <expr_stmt><expr><name pos:line="166" pos:column="21">p<pos:position pos:line="166" pos:column="22"/></name><operator pos:line="166" pos:column="22">++<pos:position pos:line="166" pos:column="24"/></operator></expr>;<pos:position pos:line="166" pos:column="25"/></expr_stmt>
		    <expr_stmt><expr><name pos:line="167" pos:column="21">proxyport<pos:position pos:line="167" pos:column="30"/></name> <operator pos:line="167" pos:column="31">=<pos:position pos:line="167" pos:column="32"/></operator> <call><name pos:line="167" pos:column="33">atoi<pos:position pos:line="167" pos:column="37"/></name><argument_list pos:line="167" pos:column="37">(<argument><expr><name pos:line="167" pos:column="38">p<pos:position pos:line="167" pos:column="39"/></name></expr></argument>)<pos:position pos:line="167" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="168" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="169" pos:column="17">strcpy<pos:position pos:line="169" pos:column="23"/></name><argument_list pos:line="169" pos:column="23">(<argument><expr><name pos:line="169" pos:column="24">proxyhost<pos:position pos:line="169" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="35">optarg<pos:position pos:line="169" pos:column="41"/></name></expr></argument>)<pos:position pos:line="169" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="170" pos:column="17">isproxy<pos:position pos:line="170" pos:column="24"/></name> <operator pos:line="170" pos:column="25">=<pos:position pos:line="170" pos:column="26"/></operator> <literal type="number" pos:line="170" pos:column="27">1<pos:position pos:line="170" pos:column="28"/></literal></expr>;<pos:position pos:line="170" pos:column="29"/></expr_stmt>
	    }<pos:position pos:line="171" pos:column="14"/></block>
	    <break pos:line="172" pos:column="13">break;<pos:position pos:line="172" pos:column="19"/></break>
	<case pos:line="173" pos:column="9">case <expr><literal type="char" pos:line="173" pos:column="14">'y'<pos:position pos:line="173" pos:column="17"/></literal></expr>:<pos:position pos:line="173" pos:column="18"/></case>
	    <expr_stmt><expr><name pos:line="174" pos:column="13">use_html<pos:position pos:line="174" pos:column="21"/></name> <operator pos:line="174" pos:column="22">=<pos:position pos:line="174" pos:column="23"/></operator> <literal type="number" pos:line="174" pos:column="24">1<pos:position pos:line="174" pos:column="25"/></literal></expr>;<pos:position pos:line="174" pos:column="26"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="175" pos:column="13">trstring<pos:position pos:line="175" pos:column="21"/></name> <operator pos:line="175" pos:column="22">=<pos:position pos:line="175" pos:column="23"/></operator> <name pos:line="175" pos:column="24">optarg<pos:position pos:line="175" pos:column="30"/></name></expr>;<pos:position pos:line="175" pos:column="31"/></expr_stmt>
	    <break pos:line="176" pos:column="13">break;<pos:position pos:line="176" pos:column="19"/></break>
	<case pos:line="177" pos:column="9">case <expr><literal type="char" pos:line="177" pos:column="14">'z'<pos:position pos:line="177" pos:column="17"/></literal></expr>:<pos:position pos:line="177" pos:column="18"/></case>
	    <expr_stmt><expr><name pos:line="178" pos:column="13">use_html<pos:position pos:line="178" pos:column="21"/></name> <operator pos:line="178" pos:column="22">=<pos:position pos:line="178" pos:column="23"/></operator> <literal type="number" pos:line="178" pos:column="24">1<pos:position pos:line="178" pos:column="25"/></literal></expr>;<pos:position pos:line="178" pos:column="26"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="179" pos:column="13">tdstring<pos:position pos:line="179" pos:column="21"/></name> <operator pos:line="179" pos:column="22">=<pos:position pos:line="179" pos:column="23"/></operator> <name pos:line="179" pos:column="24">optarg<pos:position pos:line="179" pos:column="30"/></name></expr>;<pos:position pos:line="179" pos:column="31"/></expr_stmt>
	    <break pos:line="180" pos:column="13">break;<pos:position pos:line="180" pos:column="19"/></break>
	<case pos:line="181" pos:column="9">case <expr><literal type="char" pos:line="181" pos:column="14">'h'<pos:position pos:line="181" pos:column="17"/></literal></expr>:<pos:position pos:line="181" pos:column="18"/></case>
	    <expr_stmt><expr><call><name pos:line="182" pos:column="13">usage<pos:position pos:line="182" pos:column="18"/></name><argument_list pos:line="182" pos:column="18">(<argument><expr><name><name pos:line="182" pos:column="19">argv<pos:position pos:line="182" pos:column="23"/></name><index pos:line="182" pos:column="23">[<expr><literal type="number" pos:line="182" pos:column="24">0<pos:position pos:line="182" pos:column="25"/></literal></expr>]<pos:position pos:line="182" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="182" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="28"/></expr_stmt>
	    <break pos:line="183" pos:column="13">break;<pos:position pos:line="183" pos:column="19"/></break>
	<case pos:line="184" pos:column="9">case <expr><literal type="char" pos:line="184" pos:column="14">'V'<pos:position pos:line="184" pos:column="17"/></literal></expr>:<pos:position pos:line="184" pos:column="18"/></case>
	    <expr_stmt><expr><call><name pos:line="185" pos:column="13">copyright<pos:position pos:line="185" pos:column="22"/></name><argument_list pos:line="185" pos:column="22">()<pos:position pos:line="185" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="25"/></expr_stmt>
	    <return pos:line="186" pos:column="13">return <expr><literal type="number" pos:line="186" pos:column="20">0<pos:position pos:line="186" pos:column="21"/></literal></expr>;<pos:position pos:line="186" pos:column="22"/></return>
	}<pos:position pos:line="187" pos:column="10"/></block></switch>
    }<pos:position pos:line="188" pos:column="6"/></block></while>

    <if pos:line="190" pos:column="5">if <condition pos:line="190" pos:column="8">(<expr><name><name pos:line="190" pos:column="9">opt<pos:position pos:line="190" pos:column="12"/></name><operator pos:line="190" pos:column="12">-&gt;<pos:position pos:line="190" pos:column="17"/></operator><name pos:line="190" pos:column="14">ind<pos:position pos:line="190" pos:column="17"/></name></name> <operator pos:line="190" pos:column="18">!=<pos:position pos:line="190" pos:column="20"/></operator> <name pos:line="190" pos:column="21">argc<pos:position pos:line="190" pos:column="25"/></name> <operator pos:line="190" pos:column="26">-<pos:position pos:line="190" pos:column="27"/></operator> <literal type="number" pos:line="190" pos:column="28">1<pos:position pos:line="190" pos:column="29"/></literal></expr>)<pos:position pos:line="190" pos:column="30"/></condition><then pos:line="190" pos:column="30"> <block pos:line="190" pos:column="31">{
	<expr_stmt><expr><call><name pos:line="191" pos:column="9">fprintf<pos:position pos:line="191" pos:column="16"/></name><argument_list pos:line="191" pos:column="16">(<argument><expr><name pos:line="191" pos:column="17">stderr<pos:position pos:line="191" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="25">"%s: wrong number of arguments\n"<pos:position pos:line="191" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="191" pos:column="60">argv<pos:position pos:line="191" pos:column="64"/></name><index pos:line="191" pos:column="64">[<expr><literal type="number" pos:line="191" pos:column="65">0<pos:position pos:line="191" pos:column="66"/></literal></expr>]<pos:position pos:line="191" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="191" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="192" pos:column="9">usage<pos:position pos:line="192" pos:column="14"/></name><argument_list pos:line="192" pos:column="14">(<argument><expr><name><name pos:line="192" pos:column="15">argv<pos:position pos:line="192" pos:column="19"/></name><index pos:line="192" pos:column="19">[<expr><literal type="number" pos:line="192" pos:column="20">0<pos:position pos:line="192" pos:column="21"/></literal></expr>]<pos:position pos:line="192" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="192" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="193" pos:column="6"/></block></then></if>

    <if pos:line="195" pos:column="5">if <condition pos:line="195" pos:column="8">(<expr><call><name pos:line="195" pos:column="9">parse_url<pos:position pos:line="195" pos:column="18"/></name><argument_list pos:line="195" pos:column="18">(<argument><expr><call><name pos:line="195" pos:column="19">apr_pstrdup<pos:position pos:line="195" pos:column="30"/></name><argument_list pos:line="195" pos:column="30">(<argument><expr><name pos:line="195" pos:column="31">cntxt<pos:position pos:line="195" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="195" pos:column="38">opt<pos:position pos:line="195" pos:column="41"/></name><operator pos:line="195" pos:column="41">-&gt;<pos:position pos:line="195" pos:column="46"/></operator><name pos:line="195" pos:column="43">argv<pos:position pos:line="195" pos:column="47"/></name><index pos:line="195" pos:column="47">[<expr><name><name pos:line="195" pos:column="48">opt<pos:position pos:line="195" pos:column="51"/></name><operator pos:line="195" pos:column="51">-&gt;<pos:position pos:line="195" pos:column="56"/></operator><name pos:line="195" pos:column="53">ind<pos:position pos:line="195" pos:column="56"/></name></name><operator pos:line="195" pos:column="56">++<pos:position pos:line="195" pos:column="58"/></operator></expr>]<pos:position pos:line="195" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="195" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="195" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="195" pos:column="62"/></condition><then pos:line="195" pos:column="62"> <block pos:line="195" pos:column="63">{
	<expr_stmt><expr><call><name pos:line="196" pos:column="9">fprintf<pos:position pos:line="196" pos:column="16"/></name><argument_list pos:line="196" pos:column="16">(<argument><expr><name pos:line="196" pos:column="17">stderr<pos:position pos:line="196" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="25">"%s: invalid URL\n"<pos:position pos:line="196" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="196" pos:column="46">argv<pos:position pos:line="196" pos:column="50"/></name><index pos:line="196" pos:column="50">[<expr><literal type="number" pos:line="196" pos:column="51">0<pos:position pos:line="196" pos:column="52"/></literal></expr>]<pos:position pos:line="196" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="196" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="197" pos:column="9">usage<pos:position pos:line="197" pos:column="14"/></name><argument_list pos:line="197" pos:column="14">(<argument><expr><name><name pos:line="197" pos:column="15">argv<pos:position pos:line="197" pos:column="19"/></name><index pos:line="197" pos:column="19">[<expr><literal type="number" pos:line="197" pos:column="20">0<pos:position pos:line="197" pos:column="21"/></literal></expr>]<pos:position pos:line="197" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="197" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="198" pos:column="6"/></block></then></if>

    <if pos:line="200" pos:column="5">if <condition pos:line="200" pos:column="8">(<expr><operator pos:line="200" pos:column="9">(<pos:position pos:line="200" pos:column="10"/></operator><name pos:line="200" pos:column="10">concurrency<pos:position pos:line="200" pos:column="21"/></name> <operator pos:line="200" pos:column="22">&lt;<pos:position pos:line="200" pos:column="26"/></operator> <literal type="number" pos:line="200" pos:column="24">0<pos:position pos:line="200" pos:column="25"/></literal><operator pos:line="200" pos:column="25">)<pos:position pos:line="200" pos:column="26"/></operator> <operator pos:line="200" pos:column="27">||<pos:position pos:line="200" pos:column="29"/></operator> <operator pos:line="200" pos:column="30">(<pos:position pos:line="200" pos:column="31"/></operator><name pos:line="200" pos:column="31">concurrency<pos:position pos:line="200" pos:column="42"/></name> <operator pos:line="200" pos:column="43">&gt;<pos:position pos:line="200" pos:column="47"/></operator> <name pos:line="200" pos:column="45">MAX_CONCURRENCY<pos:position pos:line="200" pos:column="60"/></name><operator pos:line="200" pos:column="60">)<pos:position pos:line="200" pos:column="61"/></operator></expr>)<pos:position pos:line="200" pos:column="62"/></condition><then pos:line="200" pos:column="62"> <block pos:line="200" pos:column="63">{
       <expr_stmt><expr><call><name pos:line="201" pos:column="8">fprintf<pos:position pos:line="201" pos:column="15"/></name><argument_list pos:line="201" pos:column="15">(<argument><expr><name pos:line="201" pos:column="16">stderr<pos:position pos:line="201" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="24">"%s: Invalid Concurrency [Range 0..%d]\n"<pos:position pos:line="201" pos:column="65"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="202" pos:column="17">argv<pos:position pos:line="202" pos:column="21"/></name><index pos:line="202" pos:column="21">[<expr><literal type="number" pos:line="202" pos:column="22">0<pos:position pos:line="202" pos:column="23"/></literal></expr>]<pos:position pos:line="202" pos:column="24"/></index></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="26">MAX_CONCURRENCY<pos:position pos:line="202" pos:column="41"/></name></expr></argument>)<pos:position pos:line="202" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="203" pos:column="9">usage<pos:position pos:line="203" pos:column="14"/></name><argument_list pos:line="203" pos:column="14">(<argument><expr><name><name pos:line="203" pos:column="15">argv<pos:position pos:line="203" pos:column="19"/></name><index pos:line="203" pos:column="19">[<expr><literal type="number" pos:line="203" pos:column="20">0<pos:position pos:line="203" pos:column="21"/></literal></expr>]<pos:position pos:line="203" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="203" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="204" pos:column="6"/></block></then></if>

    <if pos:line="206" pos:column="5">if <condition pos:line="206" pos:column="8">(<expr><operator pos:line="206" pos:column="9">(<pos:position pos:line="206" pos:column="10"/></operator><name pos:line="206" pos:column="10">heartbeatres<pos:position pos:line="206" pos:column="22"/></name><operator pos:line="206" pos:column="22">)<pos:position pos:line="206" pos:column="23"/></operator> <operator pos:line="206" pos:column="24">&amp;&amp;<pos:position pos:line="206" pos:column="34"/></operator> <operator pos:line="206" pos:column="27">(<pos:position pos:line="206" pos:column="28"/></operator><name pos:line="206" pos:column="28">requests<pos:position pos:line="206" pos:column="36"/></name> <operator pos:line="206" pos:column="37">&gt;<pos:position pos:line="206" pos:column="41"/></operator> <literal type="number" pos:line="206" pos:column="39">150<pos:position pos:line="206" pos:column="42"/></literal><operator pos:line="206" pos:column="42">)<pos:position pos:line="206" pos:column="43"/></operator></expr>)<pos:position pos:line="206" pos:column="44"/></condition><then pos:line="206" pos:column="44"> <block pos:line="206" pos:column="45">{
	<expr_stmt><expr><name pos:line="207" pos:column="9">heartbeatres<pos:position pos:line="207" pos:column="21"/></name> <operator pos:line="207" pos:column="22">=<pos:position pos:line="207" pos:column="23"/></operator> <name pos:line="207" pos:column="24">requests<pos:position pos:line="207" pos:column="32"/></name> <operator pos:line="207" pos:column="33">/<pos:position pos:line="207" pos:column="34"/></operator> <literal type="number" pos:line="207" pos:column="35">10<pos:position pos:line="207" pos:column="37"/></literal></expr>;<pos:position pos:line="207" pos:column="38"/></expr_stmt>	<comment type="block" pos:line="207" pos:column="41">/* Print line every 10% of requests */</comment>
	<if pos:line="208" pos:column="9">if <condition pos:line="208" pos:column="12">(<expr><name pos:line="208" pos:column="13">heartbeatres<pos:position pos:line="208" pos:column="25"/></name> <operator pos:line="208" pos:column="26">&lt;<pos:position pos:line="208" pos:column="30"/></operator> <literal type="number" pos:line="208" pos:column="28">100<pos:position pos:line="208" pos:column="31"/></literal></expr>)<pos:position pos:line="208" pos:column="32"/></condition><then pos:line="208" pos:column="32">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="209" pos:column="13">heartbeatres<pos:position pos:line="209" pos:column="25"/></name> <operator pos:line="209" pos:column="26">=<pos:position pos:line="209" pos:column="27"/></operator> <literal type="number" pos:line="209" pos:column="28">100<pos:position pos:line="209" pos:column="31"/></literal></expr>;<pos:position pos:line="209" pos:column="32"/></expr_stmt></block></then></if>	<comment type="block" pos:line="209" pos:column="33">/* but never more often than once every 100
				 * connections. */</comment>
    }<pos:position pos:line="211" pos:column="6"/></block></then>
    <else pos:line="212" pos:column="5">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="213" pos:column="9">heartbeatres<pos:position pos:line="213" pos:column="21"/></name> <operator pos:line="213" pos:column="22">=<pos:position pos:line="213" pos:column="23"/></operator> <literal type="number" pos:line="213" pos:column="24">0<pos:position pos:line="213" pos:column="25"/></literal></expr>;<pos:position pos:line="213" pos:column="26"/></expr_stmt></block></else></if>

<cpp:ifdef pos:line="215" pos:column="1">#<cpp:directive pos:line="215" pos:column="2">ifdef<pos:position pos:line="215" pos:column="7"/></cpp:directive> <name pos:line="215" pos:column="8">USE_SSL<pos:position pos:line="215" pos:column="15"/></name></cpp:ifdef>
<cpp:ifdef pos:line="216" pos:column="1">#<cpp:directive pos:line="216" pos:column="2">ifdef<pos:position pos:line="216" pos:column="7"/></cpp:directive> <name pos:line="216" pos:column="8">RSAREF<pos:position pos:line="216" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="217" pos:column="5">R_malloc_init<pos:position pos:line="217" pos:column="18"/></name><argument_list pos:line="217" pos:column="18">()<pos:position pos:line="217" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="21"/></expr_stmt>
<cpp:else pos:line="218" pos:column="1">#<cpp:directive pos:line="218" pos:column="2">else<pos:position pos:line="218" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="219" pos:column="5">CRYPTO_malloc_init<pos:position pos:line="219" pos:column="23"/></name><argument_list pos:line="219" pos:column="23">()<pos:position pos:line="219" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="220" pos:column="1">#<cpp:directive pos:line="220" pos:column="2">endif<pos:position pos:line="220" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="221" pos:column="5">SSL_load_error_strings<pos:position pos:line="221" pos:column="27"/></name><argument_list pos:line="221" pos:column="27">()<pos:position pos:line="221" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="222" pos:column="5">SSL_library_init<pos:position pos:line="222" pos:column="21"/></name><argument_list pos:line="222" pos:column="21">()<pos:position pos:line="222" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="223" pos:column="5">bio_out<pos:position pos:line="223" pos:column="12"/></name><operator pos:line="223" pos:column="12">=<pos:position pos:line="223" pos:column="13"/></operator><call><name pos:line="223" pos:column="13">BIO_new_fp<pos:position pos:line="223" pos:column="23"/></name><argument_list pos:line="223" pos:column="23">(<argument><expr><name pos:line="223" pos:column="24">stdout<pos:position pos:line="223" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="223" pos:column="31">BIO_NOCLOSE<pos:position pos:line="223" pos:column="42"/></name></expr></argument>)<pos:position pos:line="223" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="224" pos:column="5">bio_err<pos:position pos:line="224" pos:column="12"/></name><operator pos:line="224" pos:column="12">=<pos:position pos:line="224" pos:column="13"/></operator><call><name pos:line="224" pos:column="13">BIO_new_fp<pos:position pos:line="224" pos:column="23"/></name><argument_list pos:line="224" pos:column="23">(<argument><expr><name pos:line="224" pos:column="24">stderr<pos:position pos:line="224" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="224" pos:column="31">BIO_NOCLOSE<pos:position pos:line="224" pos:column="42"/></name></expr></argument>)<pos:position pos:line="224" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="44"/></expr_stmt>

    <comment type="block" pos:line="226" pos:column="5">/* TODO: Allow force SSLv2_client_method() (TLSv1?) */</comment>
    <if pos:line="227" pos:column="5">if <condition pos:line="227" pos:column="8">(<expr><operator pos:line="227" pos:column="9">!<pos:position pos:line="227" pos:column="10"/></operator><operator pos:line="227" pos:column="10">(<pos:position pos:line="227" pos:column="11"/></operator><name pos:line="227" pos:column="11">ctx<pos:position pos:line="227" pos:column="14"/></name> <operator pos:line="227" pos:column="15">=<pos:position pos:line="227" pos:column="16"/></operator> <call><name pos:line="227" pos:column="17">SSL_CTX_new<pos:position pos:line="227" pos:column="28"/></name><argument_list pos:line="227" pos:column="28">(<argument><expr><call><name pos:line="227" pos:column="29">SSLv23_client_method<pos:position pos:line="227" pos:column="49"/></name><argument_list pos:line="227" pos:column="49">()<pos:position pos:line="227" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="227" pos:column="52"/></argument_list></call><operator pos:line="227" pos:column="52">)<pos:position pos:line="227" pos:column="53"/></operator></expr>)<pos:position pos:line="227" pos:column="54"/></condition><then pos:line="227" pos:column="54"> <block pos:line="227" pos:column="55">{
	<expr_stmt><expr><call><name pos:line="228" pos:column="9">fprintf<pos:position pos:line="228" pos:column="16"/></name><argument_list pos:line="228" pos:column="16">(<argument><expr><name pos:line="228" pos:column="17">stderr<pos:position pos:line="228" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="228" pos:column="25">"Could not init SSL CTX"<pos:position pos:line="228" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="228" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="229" pos:column="9">ERR_print_errors_fp<pos:position pos:line="229" pos:column="28"/></name><argument_list pos:line="229" pos:column="28">(<argument><expr><name pos:line="229" pos:column="29">stderr<pos:position pos:line="229" pos:column="35"/></name></expr></argument>)<pos:position pos:line="229" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="230" pos:column="9">exit<pos:position pos:line="230" pos:column="13"/></name><argument_list pos:line="230" pos:column="13">(<argument><expr><literal type="number" pos:line="230" pos:column="14">1<pos:position pos:line="230" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="231" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="232" pos:column="5">SSL_CTX_set_options<pos:position pos:line="232" pos:column="24"/></name><argument_list pos:line="232" pos:column="24">(<argument><expr><name pos:line="232" pos:column="25">ctx<pos:position pos:line="232" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="232" pos:column="30">SSL_OP_ALL<pos:position pos:line="232" pos:column="40"/></name></expr></argument>)<pos:position pos:line="232" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="42"/></expr_stmt>
<cpp:ifdef pos:line="233" pos:column="1">#<cpp:directive pos:line="233" pos:column="2">ifdef<pos:position pos:line="233" pos:column="7"/></cpp:directive> <name pos:line="233" pos:column="8">USE_THREADS<pos:position pos:line="233" pos:column="19"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="234" pos:column="5">ssl_util_thread_setup<pos:position pos:line="234" pos:column="26"/></name><argument_list pos:line="234" pos:column="26">(<argument><expr><name pos:line="234" pos:column="27">cntxt<pos:position pos:line="234" pos:column="32"/></name></expr></argument>)<pos:position pos:line="234" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="235" pos:column="1">#<cpp:directive pos:line="235" pos:column="2">endif<pos:position pos:line="235" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="236" pos:column="1">#<cpp:directive pos:line="236" pos:column="2">endif<pos:position pos:line="236" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="237" pos:column="1">#<cpp:directive pos:line="237" pos:column="2">ifdef<pos:position pos:line="237" pos:column="7"/></cpp:directive> <name pos:line="237" pos:column="8">SIGPIPE<pos:position pos:line="237" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="238" pos:column="5">apr_signal<pos:position pos:line="238" pos:column="15"/></name><argument_list pos:line="238" pos:column="15">(<argument><expr><name pos:line="238" pos:column="16">SIGPIPE<pos:position pos:line="238" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="25">SIG_IGN<pos:position pos:line="238" pos:column="32"/></name></expr></argument>)<pos:position pos:line="238" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="34"/></expr_stmt>       <comment type="block" pos:line="238" pos:column="41">/* Ignore writes to connections that
					 * have been closed at the other end. */</comment>
<cpp:endif pos:line="240" pos:column="1">#<cpp:directive pos:line="240" pos:column="2">endif<pos:position pos:line="240" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="241" pos:column="5">copyright<pos:position pos:line="241" pos:column="14"/></name><argument_list pos:line="241" pos:column="14">()<pos:position pos:line="241" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="242" pos:column="5">test<pos:position pos:line="242" pos:column="9"/></name><argument_list pos:line="242" pos:column="9">()<pos:position pos:line="242" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="243" pos:column="5">apr_pool_destroy<pos:position pos:line="243" pos:column="21"/></name><argument_list pos:line="243" pos:column="21">(<argument><expr><name pos:line="243" pos:column="22">cntxt<pos:position pos:line="243" pos:column="27"/></name></expr></argument>)<pos:position pos:line="243" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="29"/></expr_stmt>

    <return pos:line="245" pos:column="5">return <expr><literal type="number" pos:line="245" pos:column="12">0<pos:position pos:line="245" pos:column="13"/></literal></expr>;<pos:position pos:line="245" pos:column="14"/></return>
}<pos:position pos:line="246" pos:column="2"/></block></function></unit>

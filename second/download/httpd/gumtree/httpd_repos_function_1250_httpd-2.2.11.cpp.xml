<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1250_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">emit_head<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">request_rec<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">r<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">header_fname<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">suppress_amble<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">emit_xhtml<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">title<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_table_t<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">hdrs<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name><name pos:line="4" pos:column="25">r<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">-&gt;<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="28">headers_in<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_file_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">f<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">request_rec<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">rr<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">NULL<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">emit_amble<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="number" pos:line="7" pos:column="22">1<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">emit_H1<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><literal type="number" pos:line="8" pos:column="19">1<pos:position pos:line="8" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">r_accept<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">r_accept_enc<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/*
     * If there's a header file, send a subrequest to look for it.  If it's
     * found and html do the subrequest, otherwise handle it
     */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">r_accept<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">apr_table_get<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">hdrs<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="36">"Accept"<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">r_accept_enc<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <call><name pos:line="17" pos:column="20">apr_table_get<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">hdrs<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="40">"Accept-Encoding"<pos:position pos:line="17" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">apr_table_setn<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">hdrs<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="26">"Accept"<pos:position pos:line="18" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="36">"text/html, text/plain"<pos:position pos:line="18" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">apr_table_unset<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">hdrs<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="27">"Accept-Encoding"<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt>


    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">header_fname<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">!=<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">NULL<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">)<pos:position pos:line="22" pos:column="31"/></operator> <operator pos:line="22" pos:column="32">&amp;&amp;<pos:position pos:line="22" pos:column="42"/></operator> <name><name pos:line="22" pos:column="35">r<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">args<pos:position pos:line="22" pos:column="42"/></name></name></expr>)<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43"> <block pos:line="22" pos:column="44">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">header_fname<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <call><name pos:line="23" pos:column="24">apr_pstrcat<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name><name pos:line="23" pos:column="36">r<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">pool<pos:position pos:line="23" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">header_fname<pos:position pos:line="23" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="59">"?"<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="64">r<pos:position pos:line="23" pos:column="65"/></name><operator pos:line="23" pos:column="65">-&gt;<pos:position pos:line="23" pos:column="70"/></operator><name pos:line="23" pos:column="67">args<pos:position pos:line="23" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="73">NULL<pos:position pos:line="23" pos:column="77"/></name></expr></argument>)<pos:position pos:line="23" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">header_fname<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">!=<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="26">NULL<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">)<pos:position pos:line="26" pos:column="31"/></operator>
        <operator pos:line="27" pos:column="9">&amp;&amp;<pos:position pos:line="27" pos:column="19"/></operator> <operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">rr<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <call><name pos:line="27" pos:column="18">ap_sub_req_lookup_uri<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><name pos:line="27" pos:column="40">header_fname<pos:position pos:line="27" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="54">r<pos:position pos:line="27" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="57">r<pos:position pos:line="27" pos:column="58"/></name><operator pos:line="27" pos:column="58">-&gt;<pos:position pos:line="27" pos:column="63"/></operator><name pos:line="27" pos:column="60">output_filters<pos:position pos:line="27" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="75"/></argument_list></call><operator pos:line="27" pos:column="75">)<pos:position pos:line="27" pos:column="76"/></operator>
        <operator pos:line="28" pos:column="9">&amp;&amp;<pos:position pos:line="28" pos:column="19"/></operator> <operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><name><name pos:line="28" pos:column="13">rr<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">status<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">==<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">HTTP_OK<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">)<pos:position pos:line="28" pos:column="35"/></operator>
        <operator pos:line="29" pos:column="9">&amp;&amp;<pos:position pos:line="29" pos:column="19"/></operator> <operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><name><name pos:line="29" pos:column="13">rr<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">filename<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">!=<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="29">NULL<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">)<pos:position pos:line="29" pos:column="34"/></operator>
        <operator pos:line="30" pos:column="9">&amp;&amp;<pos:position pos:line="30" pos:column="19"/></operator> <operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><name><name pos:line="30" pos:column="13">rr<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">finfo<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">.<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="23">filetype<pos:position pos:line="30" pos:column="31"/></name></name> <operator pos:line="30" pos:column="32">==<pos:position pos:line="30" pos:column="34"/></operator> <name pos:line="30" pos:column="35">APR_REG<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">)<pos:position pos:line="30" pos:column="43"/></operator></expr>)<pos:position pos:line="30" pos:column="44"/></condition><then pos:line="30" pos:column="44"> <block pos:line="30" pos:column="45">{
        <comment type="block" pos:line="31" pos:column="9">/*
         * Check for the two specific cases we allow: text/html and
         * text/anything-else.  The former is allowed to be processed for
         * SSIs.
         */</comment>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">rr<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">content_type<pos:position pos:line="36" pos:column="29"/></name></name> <operator pos:line="36" pos:column="30">!=<pos:position pos:line="36" pos:column="32"/></operator> <name pos:line="36" pos:column="33">NULL<pos:position pos:line="36" pos:column="37"/></name></expr>)<pos:position pos:line="36" pos:column="38"/></condition><then pos:line="36" pos:column="38"> <block pos:line="36" pos:column="39">{
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><operator pos:line="37" pos:column="17">!<pos:position pos:line="37" pos:column="18"/></operator><call><name pos:line="37" pos:column="18">strcasecmp<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><call><name pos:line="37" pos:column="29">ap_field_noparam<pos:position pos:line="37" pos:column="45"/></name><argument_list pos:line="37" pos:column="45">(<argument><expr><name><name pos:line="37" pos:column="46">r<pos:position pos:line="37" pos:column="47"/></name><operator pos:line="37" pos:column="47">-&gt;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="49">pool<pos:position pos:line="37" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="55">rr<pos:position pos:line="37" pos:column="57"/></name><operator pos:line="37" pos:column="57">-&gt;<pos:position pos:line="37" pos:column="62"/></operator><name pos:line="37" pos:column="59">content_type<pos:position pos:line="37" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="72"/></argument_list></call></expr></argument>,
                            <argument><expr><literal type="string" pos:line="38" pos:column="29">"text/html"<pos:position pos:line="38" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="42"/></condition><then pos:line="38" pos:column="42"> <block pos:line="38" pos:column="43">{
                <decl_stmt><decl><type><name pos:line="39" pos:column="17">ap_filter_t<pos:position pos:line="39" pos:column="28"/></name> <modifier pos:line="39" pos:column="29">*<pos:position pos:line="39" pos:column="30"/></modifier></type><name pos:line="39" pos:column="30">f<pos:position pos:line="39" pos:column="31"/></name></decl>;<pos:position pos:line="39" pos:column="32"/></decl_stmt>
               <comment type="block" pos:line="40" pos:column="16">/* Hope everything will work... */</comment>
                <expr_stmt><expr><name pos:line="41" pos:column="17">emit_amble<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">=<pos:position pos:line="41" pos:column="29"/></operator> <literal type="number" pos:line="41" pos:column="30">0<pos:position pos:line="41" pos:column="31"/></literal></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><name pos:line="42" pos:column="17">emit_H1<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <literal type="number" pos:line="42" pos:column="27">0<pos:position pos:line="42" pos:column="28"/></literal></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>

                <if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><operator pos:line="44" pos:column="21">!<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">suppress_amble<pos:position pos:line="44" pos:column="37"/></name></expr>)<pos:position pos:line="44" pos:column="38"/></condition><then pos:line="44" pos:column="38"> <block pos:line="44" pos:column="39">{
                    <expr_stmt><expr><call><name pos:line="45" pos:column="21">emit_preamble<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><name pos:line="45" pos:column="35">r<pos:position pos:line="45" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="38">emit_xhtml<pos:position pos:line="45" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="50">title<pos:position pos:line="45" pos:column="55"/></name></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="46" pos:column="18"/></block></then></if>
                <comment type="block" pos:line="47" pos:column="17">/* This is a hack, but I can't find any better way to do this.
                 * The problem is that we have already created the sub-request,
                 * but we just inserted the OLD_WRITE filter, and the
                 * sub-request needs to pass its data through the OLD_WRITE
                 * filter, or things go horribly wrong (missing data, data in
                 * the wrong order, etc).  To fix it, if you create a
                 * sub-request and then insert the OLD_WRITE filter before you
                 * run the request, you need to make sure that the sub-request
                 * data goes through the OLD_WRITE filter.  Just steal this
                 * code.  The long-term solution is to remove the ap_r*
                 * functions.
                 */</comment>
                <for pos:line="59" pos:column="17">for <control pos:line="59" pos:column="21">(<init><expr><name pos:line="59" pos:column="22">f<pos:position pos:line="59" pos:column="23"/></name><operator pos:line="59" pos:column="23">=<pos:position pos:line="59" pos:column="24"/></operator><name><name pos:line="59" pos:column="24">rr<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">-&gt;<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="28">output_filters<pos:position pos:line="59" pos:column="42"/></name></name></expr>;<pos:position pos:line="59" pos:column="43"/></init>
                     <condition><expr><name><name pos:line="60" pos:column="22">f<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">-&gt;<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="25">frec<pos:position pos:line="60" pos:column="29"/></name></name> <operator pos:line="60" pos:column="30">!=<pos:position pos:line="60" pos:column="32"/></operator> <name pos:line="60" pos:column="33">ap_subreq_core_filter_handle<pos:position pos:line="60" pos:column="61"/></name></expr>;<pos:position pos:line="60" pos:column="62"/></condition> <incr><expr><name pos:line="60" pos:column="63">f<pos:position pos:line="60" pos:column="64"/></name> <operator pos:line="60" pos:column="65">=<pos:position pos:line="60" pos:column="66"/></operator> <name><name pos:line="60" pos:column="67">f<pos:position pos:line="60" pos:column="68"/></name><operator pos:line="60" pos:column="68">-&gt;<pos:position pos:line="60" pos:column="73"/></operator><name pos:line="60" pos:column="70">next<pos:position pos:line="60" pos:column="74"/></name></name></expr></incr>)<pos:position pos:line="60" pos:column="75"/></control><block type="pseudo"><empty_stmt pos:line="60" pos:column="75">;<pos:position pos:line="60" pos:column="76"/></empty_stmt></block></for>
                <expr_stmt><expr><name><name pos:line="61" pos:column="17">f<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">-&gt;<pos:position pos:line="61" pos:column="23"/></operator><name pos:line="61" pos:column="20">next<pos:position pos:line="61" pos:column="24"/></name></name> <operator pos:line="61" pos:column="25">=<pos:position pos:line="61" pos:column="26"/></operator> <name><name pos:line="61" pos:column="27">r<pos:position pos:line="61" pos:column="28"/></name><operator pos:line="61" pos:column="28">-&gt;<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="30">output_filters<pos:position pos:line="61" pos:column="44"/></name></name></expr>;<pos:position pos:line="61" pos:column="45"/></expr_stmt>

                <comment type="block" pos:line="63" pos:column="17">/*
                 * If there's a problem running the subrequest, display the
                 * preamble if we didn't do it before -- the header file
                 * didn't get displayed.
                 */</comment>
                <if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><call><name pos:line="68" pos:column="21">ap_run_sub_req<pos:position pos:line="68" pos:column="35"/></name><argument_list pos:line="68" pos:column="35">(<argument><expr><name pos:line="68" pos:column="36">rr<pos:position pos:line="68" pos:column="38"/></name></expr></argument>)<pos:position pos:line="68" pos:column="39"/></argument_list></call> <operator pos:line="68" pos:column="40">!=<pos:position pos:line="68" pos:column="42"/></operator> <name pos:line="68" pos:column="43">OK<pos:position pos:line="68" pos:column="45"/></name></expr>)<pos:position pos:line="68" pos:column="46"/></condition><then pos:line="68" pos:column="46"> <block pos:line="68" pos:column="47">{
                    <comment type="block" pos:line="69" pos:column="21">/* It didn't work */</comment>
                    <expr_stmt><expr><name pos:line="70" pos:column="21">emit_amble<pos:position pos:line="70" pos:column="31"/></name> <operator pos:line="70" pos:column="32">=<pos:position pos:line="70" pos:column="33"/></operator> <name pos:line="70" pos:column="34">suppress_amble<pos:position pos:line="70" pos:column="48"/></name></expr>;<pos:position pos:line="70" pos:column="49"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="71" pos:column="21">emit_H1<pos:position pos:line="71" pos:column="28"/></name> <operator pos:line="71" pos:column="29">=<pos:position pos:line="71" pos:column="30"/></operator> <literal type="number" pos:line="71" pos:column="31">1<pos:position pos:line="71" pos:column="32"/></literal></expr>;<pos:position pos:line="71" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="72" pos:column="18"/></block></then></if>
            }<pos:position pos:line="73" pos:column="14"/></block></then>
            <elseif pos:line="74" pos:column="13">else <if pos:line="74" pos:column="18">if <condition pos:line="74" pos:column="21">(<expr><operator pos:line="74" pos:column="22">!<pos:position pos:line="74" pos:column="23"/></operator><call><name pos:line="74" pos:column="23">strncasecmp<pos:position pos:line="74" pos:column="34"/></name><argument_list pos:line="74" pos:column="34">(<argument><expr><literal type="string" pos:line="74" pos:column="35">"text/"<pos:position pos:line="74" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="44">rr<pos:position pos:line="74" pos:column="46"/></name><operator pos:line="74" pos:column="46">-&gt;<pos:position pos:line="74" pos:column="51"/></operator><name pos:line="74" pos:column="48">content_type<pos:position pos:line="74" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="62">5<pos:position pos:line="74" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="65"/></condition><then pos:line="74" pos:column="65"> <block pos:line="74" pos:column="66">{
                <comment type="block" pos:line="75" pos:column="17">/*
                 * If we can open the file, prefix it with the preamble
                 * regardless; since we'll be sending a &lt;pre&gt; block around
                 * the file's contents, any HTML header it had won't end up
                 * where it belongs.
                 */</comment>
                <if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><call><name pos:line="81" pos:column="21">apr_file_open<pos:position pos:line="81" pos:column="34"/></name><argument_list pos:line="81" pos:column="34">(<argument><expr><operator pos:line="81" pos:column="35">&amp;<pos:position pos:line="81" pos:column="40"/></operator><name pos:line="81" pos:column="36">f<pos:position pos:line="81" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="39">rr<pos:position pos:line="81" pos:column="41"/></name><operator pos:line="81" pos:column="41">-&gt;<pos:position pos:line="81" pos:column="46"/></operator><name pos:line="81" pos:column="43">filename<pos:position pos:line="81" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="53">APR_READ<pos:position pos:line="81" pos:column="61"/></name></expr></argument>,
                                  <argument><expr><name pos:line="82" pos:column="35">APR_OS_DEFAULT<pos:position pos:line="82" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="51">r<pos:position pos:line="82" pos:column="52"/></name><operator pos:line="82" pos:column="52">-&gt;<pos:position pos:line="82" pos:column="57"/></operator><name pos:line="82" pos:column="54">pool<pos:position pos:line="82" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="59"/></argument_list></call> <operator pos:line="82" pos:column="60">==<pos:position pos:line="82" pos:column="62"/></operator> <name pos:line="82" pos:column="63">APR_SUCCESS<pos:position pos:line="82" pos:column="74"/></name></expr>)<pos:position pos:line="82" pos:column="75"/></condition><then pos:line="82" pos:column="75"> <block pos:line="82" pos:column="76">{
                    <expr_stmt><expr><call><name pos:line="83" pos:column="21">emit_preamble<pos:position pos:line="83" pos:column="34"/></name><argument_list pos:line="83" pos:column="34">(<argument><expr><name pos:line="83" pos:column="35">r<pos:position pos:line="83" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="38">emit_xhtml<pos:position pos:line="83" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="50">title<pos:position pos:line="83" pos:column="55"/></name></expr></argument>)<pos:position pos:line="83" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="57"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="84" pos:column="21">emit_amble<pos:position pos:line="84" pos:column="31"/></name> <operator pos:line="84" pos:column="32">=<pos:position pos:line="84" pos:column="33"/></operator> <literal type="number" pos:line="84" pos:column="34">0<pos:position pos:line="84" pos:column="35"/></literal></expr>;<pos:position pos:line="84" pos:column="36"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="85" pos:column="21">do_emit_plain<pos:position pos:line="85" pos:column="34"/></name><argument_list pos:line="85" pos:column="34">(<argument><expr><name pos:line="85" pos:column="35">r<pos:position pos:line="85" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="38">f<pos:position pos:line="85" pos:column="39"/></name></expr></argument>)<pos:position pos:line="85" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="86" pos:column="21">apr_file_close<pos:position pos:line="86" pos:column="35"/></name><argument_list pos:line="86" pos:column="35">(<argument><expr><name pos:line="86" pos:column="36">f<pos:position pos:line="86" pos:column="37"/></name></expr></argument>)<pos:position pos:line="86" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="39"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="87" pos:column="21">emit_H1<pos:position pos:line="87" pos:column="28"/></name> <operator pos:line="87" pos:column="29">=<pos:position pos:line="87" pos:column="30"/></operator> <literal type="number" pos:line="87" pos:column="31">0<pos:position pos:line="87" pos:column="32"/></literal></expr>;<pos:position pos:line="87" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="88" pos:column="18"/></block></then></if>
            }<pos:position pos:line="89" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><name pos:line="93" pos:column="9">r_accept<pos:position pos:line="93" pos:column="17"/></name></expr>)<pos:position pos:line="93" pos:column="18"/></condition><then pos:line="93" pos:column="18"> <block pos:line="93" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="94" pos:column="9">apr_table_setn<pos:position pos:line="94" pos:column="23"/></name><argument_list pos:line="94" pos:column="23">(<argument><expr><name pos:line="94" pos:column="24">hdrs<pos:position pos:line="94" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="30">"Accept"<pos:position pos:line="94" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="40">r_accept<pos:position pos:line="94" pos:column="48"/></name></expr></argument>)<pos:position pos:line="94" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="95" pos:column="6"/></block></then>
    <else pos:line="96" pos:column="5">else <block pos:line="96" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">apr_table_unset<pos:position pos:line="97" pos:column="24"/></name><argument_list pos:line="97" pos:column="24">(<argument><expr><name pos:line="97" pos:column="25">hdrs<pos:position pos:line="97" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="31">"Accept"<pos:position pos:line="97" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="98" pos:column="6"/></block></else></if>

    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><name pos:line="100" pos:column="9">r_accept_enc<pos:position pos:line="100" pos:column="21"/></name></expr>)<pos:position pos:line="100" pos:column="22"/></condition><then pos:line="100" pos:column="22"> <block pos:line="100" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="101" pos:column="9">apr_table_setn<pos:position pos:line="101" pos:column="23"/></name><argument_list pos:line="101" pos:column="23">(<argument><expr><name pos:line="101" pos:column="24">hdrs<pos:position pos:line="101" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="30">"Accept-Encoding"<pos:position pos:line="101" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="49">r_accept_enc<pos:position pos:line="101" pos:column="61"/></name></expr></argument>)<pos:position pos:line="101" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="102" pos:column="6"/></block></then></if>

    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><name pos:line="104" pos:column="9">emit_amble<pos:position pos:line="104" pos:column="19"/></name></expr>)<pos:position pos:line="104" pos:column="20"/></condition><then pos:line="104" pos:column="20"> <block pos:line="104" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="105" pos:column="9">emit_preamble<pos:position pos:line="105" pos:column="22"/></name><argument_list pos:line="105" pos:column="22">(<argument><expr><name pos:line="105" pos:column="23">r<pos:position pos:line="105" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="26">emit_xhtml<pos:position pos:line="105" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="38">title<pos:position pos:line="105" pos:column="43"/></name></expr></argument>)<pos:position pos:line="105" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if>
    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><name pos:line="107" pos:column="9">emit_H1<pos:position pos:line="107" pos:column="16"/></name></expr>)<pos:position pos:line="107" pos:column="17"/></condition><then pos:line="107" pos:column="17"> <block pos:line="107" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="108" pos:column="9">ap_rvputs<pos:position pos:line="108" pos:column="18"/></name><argument_list pos:line="108" pos:column="18">(<argument><expr><name pos:line="108" pos:column="19">r<pos:position pos:line="108" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="22">"&lt;h1&gt;Index of "<pos:position pos:line="108" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="39">title<pos:position pos:line="108" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="46">"&lt;/h1&gt;\n"<pos:position pos:line="108" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="57">NULL<pos:position pos:line="108" pos:column="61"/></name></expr></argument>)<pos:position pos:line="108" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="109" pos:column="6"/></block></then></if>
    <if pos:line="110" pos:column="5">if <condition pos:line="110" pos:column="8">(<expr><name pos:line="110" pos:column="9">rr<pos:position pos:line="110" pos:column="11"/></name> <operator pos:line="110" pos:column="12">!=<pos:position pos:line="110" pos:column="14"/></operator> <name pos:line="110" pos:column="15">NULL<pos:position pos:line="110" pos:column="19"/></name></expr>)<pos:position pos:line="110" pos:column="20"/></condition><then pos:line="110" pos:column="20"> <block pos:line="110" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">ap_destroy_sub_req<pos:position pos:line="111" pos:column="27"/></name><argument_list pos:line="111" pos:column="27">(<argument><expr><name pos:line="111" pos:column="28">rr<pos:position pos:line="111" pos:column="30"/></name></expr></argument>)<pos:position pos:line="111" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if>
}<pos:position pos:line="113" pos:column="2"/></block></function></unit>

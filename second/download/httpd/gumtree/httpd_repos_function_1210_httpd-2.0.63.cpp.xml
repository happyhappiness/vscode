<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1210_httpd-2.0.63.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">make_allow<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">request_rec<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">r<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">list<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_int64_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">mask<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_array_header_t<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">allow<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><call><name pos:line="5" pos:column="33">apr_array_make<pos:position pos:line="5" pos:column="47"/></name><argument_list pos:line="5" pos:column="47">(<argument><expr><name><name pos:line="5" pos:column="48">r<pos:position pos:line="5" pos:column="49"/></name><operator pos:line="5" pos:column="49">-&gt;<pos:position pos:line="5" pos:column="54"/></operator><name pos:line="5" pos:column="51">pool<pos:position pos:line="5" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="57">10<pos:position pos:line="5" pos:column="59"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="61">sizeof<argument_list pos:line="5" pos:column="67">(<argument><expr><name pos:line="5" pos:column="68">char<pos:position pos:line="5" pos:column="72"/></name> <operator pos:line="5" pos:column="73">*<pos:position pos:line="5" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="77"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_hash_index_t<pos:position pos:line="6" pos:column="21"/></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">hi<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><call><name pos:line="6" pos:column="28">apr_hash_first<pos:position pos:line="6" pos:column="42"/></name><argument_list pos:line="6" pos:column="42">(<argument><expr><name><name pos:line="6" pos:column="43">r<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">pool<pos:position pos:line="6" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="52">methods_registry<pos:position pos:line="6" pos:column="68"/></name></expr></argument>)<pos:position pos:line="6" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="70"/></decl_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* For TRACE below */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">core_server_config<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">conf<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">=
        <expr><call><name pos:line="9" pos:column="9">ap_get_module_config<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name><name pos:line="9" pos:column="30">r<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">server<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">module_config<pos:position pos:line="9" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="56">&amp;<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="57">core_module<pos:position pos:line="9" pos:column="68"/></name></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="70"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">mask<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name><name pos:line="11" pos:column="12">r<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">allowed_methods<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">method_mask<pos:position pos:line="11" pos:column="43"/></name></name></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>

    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init pos:line="13" pos:column="10">;<pos:position pos:line="13" pos:column="11"/></init> <condition><expr><name pos:line="13" pos:column="12">hi<pos:position pos:line="13" pos:column="14"/></name></expr>;<pos:position pos:line="13" pos:column="15"/></condition> <incr><expr><name pos:line="13" pos:column="16">hi<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <call><name pos:line="13" pos:column="21">apr_hash_next<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">hi<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr></incr>)<pos:position pos:line="13" pos:column="39"/></control> <block pos:line="13" pos:column="40">{
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">void<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">key<pos:position pos:line="14" pos:column="24"/></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">void<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">val<pos:position pos:line="15" pos:column="18"/></name></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="17" pos:column="9">apr_hash_this<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">hi<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="27">&amp;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="28">key<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">NULL<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="39">&amp;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="40">val<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">mask<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">&amp;<pos:position pos:line="18" pos:column="24"/></operator> <operator pos:line="18" pos:column="21">(<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">AP_METHOD_BIT<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">&lt;&lt;<pos:position pos:line="18" pos:column="44"/></operator> <operator pos:line="18" pos:column="39">*<pos:position pos:line="18" pos:column="40"/></operator><operator pos:line="18" pos:column="40">(<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="41">int<pos:position pos:line="18" pos:column="44"/></name> <operator pos:line="18" pos:column="45">*<pos:position pos:line="18" pos:column="46"/></operator><operator pos:line="18" pos:column="46">)<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="47">val<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">)<pos:position pos:line="18" pos:column="51"/></operator><operator pos:line="18" pos:column="51">)<pos:position pos:line="18" pos:column="52"/></operator> <operator pos:line="18" pos:column="53">!=<pos:position pos:line="18" pos:column="55"/></operator> <literal type="number" pos:line="18" pos:column="56">0<pos:position pos:line="18" pos:column="57"/></literal></expr>)<pos:position pos:line="18" pos:column="58"/></condition><then pos:line="18" pos:column="58"> <block pos:line="18" pos:column="59">{
            <expr_stmt><expr><operator pos:line="19" pos:column="13">*<pos:position pos:line="19" pos:column="14"/></operator><operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><specifier pos:line="19" pos:column="15">const<pos:position pos:line="19" pos:column="20"/></specifier> <name pos:line="19" pos:column="21">char<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">*<pos:position pos:line="19" pos:column="27"/></operator><operator pos:line="19" pos:column="27">*<pos:position pos:line="19" pos:column="28"/></operator><operator pos:line="19" pos:column="28">)<pos:position pos:line="19" pos:column="29"/></operator><call><name pos:line="19" pos:column="29">apr_array_push<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">allow<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call> <operator pos:line="19" pos:column="51">=<pos:position pos:line="19" pos:column="52"/></operator> <name pos:line="19" pos:column="53">key<pos:position pos:line="19" pos:column="56"/></name></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>

            <comment type="block" pos:line="21" pos:column="13">/* the M_GET method actually refers to two methods */</comment>
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><operator pos:line="22" pos:column="18">(<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">int<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">*<pos:position pos:line="22" pos:column="24"/></operator><operator pos:line="22" pos:column="24">)<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">val<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">==<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">M_GET<pos:position pos:line="22" pos:column="37"/></name></expr>)<pos:position pos:line="22" pos:column="38"/></condition><then pos:line="22" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="23" pos:column="17">*<pos:position pos:line="23" pos:column="18"/></operator><operator pos:line="23" pos:column="18">(<pos:position pos:line="23" pos:column="19"/></operator><specifier pos:line="23" pos:column="19">const<pos:position pos:line="23" pos:column="24"/></specifier> <name pos:line="23" pos:column="25">char<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">*<pos:position pos:line="23" pos:column="31"/></operator><operator pos:line="23" pos:column="31">*<pos:position pos:line="23" pos:column="32"/></operator><operator pos:line="23" pos:column="32">)<pos:position pos:line="23" pos:column="33"/></operator><call><name pos:line="23" pos:column="33">apr_array_push<pos:position pos:line="23" pos:column="47"/></name><argument_list pos:line="23" pos:column="47">(<argument><expr><name pos:line="23" pos:column="48">allow<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call> <operator pos:line="23" pos:column="55">=<pos:position pos:line="23" pos:column="56"/></operator> <literal type="string" pos:line="23" pos:column="57">"HEAD"<pos:position pos:line="23" pos:column="63"/></literal></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt></block></then></if>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></for>

    <comment type="block" pos:line="27" pos:column="5">/* TRACE is tested on a per-server basis */</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">conf<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">trace_enable<pos:position pos:line="28" pos:column="27"/></name></name> <operator pos:line="28" pos:column="28">!=<pos:position pos:line="28" pos:column="30"/></operator> <name pos:line="28" pos:column="31">AP_TRACE_DISABLE<pos:position pos:line="28" pos:column="47"/></name></expr>)<pos:position pos:line="28" pos:column="48"/></condition><then pos:line="28" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="29" pos:column="9">*<pos:position pos:line="29" pos:column="10"/></operator><operator pos:line="29" pos:column="10">(<pos:position pos:line="29" pos:column="11"/></operator><specifier pos:line="29" pos:column="11">const<pos:position pos:line="29" pos:column="16"/></specifier> <name pos:line="29" pos:column="17">char<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">*<pos:position pos:line="29" pos:column="23"/></operator><operator pos:line="29" pos:column="23">*<pos:position pos:line="29" pos:column="24"/></operator><operator pos:line="29" pos:column="24">)<pos:position pos:line="29" pos:column="25"/></operator><call><name pos:line="29" pos:column="25">apr_array_push<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">(<argument><expr><name pos:line="29" pos:column="40">allow<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call> <operator pos:line="29" pos:column="47">=<pos:position pos:line="29" pos:column="48"/></operator> <literal type="string" pos:line="29" pos:column="49">"TRACE"<pos:position pos:line="29" pos:column="56"/></literal></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="31" pos:column="5">list<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <call><name pos:line="31" pos:column="12">apr_array_pstrcat<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name><name pos:line="31" pos:column="30">r<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">pool<pos:position pos:line="31" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="39">allow<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="31" pos:column="46">','<pos:position pos:line="31" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="33" pos:column="5">/* ### this is rather annoying. we should enforce registration of
       ### these methods */</comment>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">(<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">mask<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">&amp;<pos:position pos:line="35" pos:column="20"/></operator> <operator pos:line="35" pos:column="17">(<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">AP_METHOD_BIT<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">&lt;&lt;<pos:position pos:line="35" pos:column="40"/></operator> <name pos:line="35" pos:column="35">M_INVALID<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">)<pos:position pos:line="35" pos:column="45"/></operator><operator pos:line="35" pos:column="45">)<pos:position pos:line="35" pos:column="46"/></operator>
        <operator pos:line="36" pos:column="9">&amp;&amp;<pos:position pos:line="36" pos:column="19"/></operator> <operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><name><name pos:line="36" pos:column="13">r<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">allowed_methods<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">-&gt;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="33">method_list<pos:position pos:line="36" pos:column="44"/></name></name> <operator pos:line="36" pos:column="45">!=<pos:position pos:line="36" pos:column="47"/></operator> <name pos:line="36" pos:column="48">NULL<pos:position pos:line="36" pos:column="52"/></name><operator pos:line="36" pos:column="52">)<pos:position pos:line="36" pos:column="53"/></operator>
        <operator pos:line="37" pos:column="9">&amp;&amp;<pos:position pos:line="37" pos:column="19"/></operator> <operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><name><name pos:line="37" pos:column="13">r<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">allowed_methods<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">-&gt;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="33">method_list<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">-&gt;<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="46">nelts<pos:position pos:line="37" pos:column="51"/></name></name> <operator pos:line="37" pos:column="52">!=<pos:position pos:line="37" pos:column="54"/></operator> <literal type="number" pos:line="37" pos:column="55">0<pos:position pos:line="37" pos:column="56"/></literal><operator pos:line="37" pos:column="56">)<pos:position pos:line="37" pos:column="57"/></operator></expr>)<pos:position pos:line="37" pos:column="58"/></condition><then pos:line="37" pos:column="58"> <block pos:line="37" pos:column="59">{
        <decl_stmt><decl><type><name pos:line="38" pos:column="9">int<pos:position pos:line="38" pos:column="12"/></name></type> <name pos:line="38" pos:column="13">i<pos:position pos:line="38" pos:column="14"/></name></decl>;<pos:position pos:line="38" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="39" pos:column="9">char<pos:position pos:line="39" pos:column="13"/></name> <modifier pos:line="39" pos:column="14">*<pos:position pos:line="39" pos:column="15"/></modifier><modifier pos:line="39" pos:column="15">*<pos:position pos:line="39" pos:column="16"/></modifier></type><name pos:line="39" pos:column="16">xmethod<pos:position pos:line="39" pos:column="23"/></name> <init pos:line="39" pos:column="24">= <expr><operator pos:line="39" pos:column="26">(<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="27">char<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">*<pos:position pos:line="39" pos:column="33"/></operator><operator pos:line="39" pos:column="33">*<pos:position pos:line="39" pos:column="34"/></operator><operator pos:line="39" pos:column="34">)<pos:position pos:line="39" pos:column="35"/></operator> <name><name pos:line="39" pos:column="36">r<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">-&gt;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="39">allowed_methods<pos:position pos:line="39" pos:column="54"/></name><operator pos:line="39" pos:column="54">-&gt;<pos:position pos:line="39" pos:column="59"/></operator><name pos:line="39" pos:column="56">method_list<pos:position pos:line="39" pos:column="67"/></name><operator pos:line="39" pos:column="67">-&gt;<pos:position pos:line="39" pos:column="72"/></operator><name pos:line="39" pos:column="69">elts<pos:position pos:line="39" pos:column="73"/></name></name></expr></init></decl>;<pos:position pos:line="39" pos:column="74"/></decl_stmt>

        <comment type="block" pos:line="41" pos:column="9">/*
         * Append all of the elements of r-&gt;allowed_methods-&gt;method_list
         */</comment>
        <for pos:line="44" pos:column="9">for <control pos:line="44" pos:column="13">(<init><expr><name pos:line="44" pos:column="14">i<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr>;<pos:position pos:line="44" pos:column="20"/></init> <condition><expr><name pos:line="44" pos:column="21">i<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">&lt;<pos:position pos:line="44" pos:column="27"/></operator> <name><name pos:line="44" pos:column="25">r<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">allowed_methods<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">-&gt;<pos:position pos:line="44" pos:column="48"/></operator><name pos:line="44" pos:column="45">method_list<pos:position pos:line="44" pos:column="56"/></name><operator pos:line="44" pos:column="56">-&gt;<pos:position pos:line="44" pos:column="61"/></operator><name pos:line="44" pos:column="58">nelts<pos:position pos:line="44" pos:column="63"/></name></name></expr>;<pos:position pos:line="44" pos:column="64"/></condition> <incr><expr><operator pos:line="44" pos:column="65">++<pos:position pos:line="44" pos:column="67"/></operator><name pos:line="44" pos:column="67">i<pos:position pos:line="44" pos:column="68"/></name></expr></incr>)<pos:position pos:line="44" pos:column="69"/></control> <block pos:line="44" pos:column="70">{
            <expr_stmt><expr><name pos:line="45" pos:column="13">list<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <call><name pos:line="45" pos:column="20">apr_pstrcat<pos:position pos:line="45" pos:column="31"/></name><argument_list pos:line="45" pos:column="31">(<argument><expr><name><name pos:line="45" pos:column="32">r<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">-&gt;<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="35">pool<pos:position pos:line="45" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="41">list<pos:position pos:line="45" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="47">","<pos:position pos:line="45" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="52">xmethod<pos:position pos:line="45" pos:column="59"/></name><index pos:line="45" pos:column="59">[<expr><name pos:line="45" pos:column="60">i<pos:position pos:line="45" pos:column="61"/></name></expr>]<pos:position pos:line="45" pos:column="62"/></index></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="64">NULL<pos:position pos:line="45" pos:column="68"/></name></expr></argument>)<pos:position pos:line="45" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></for>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">list<pos:position pos:line="49" pos:column="16"/></name></expr>;<pos:position pos:line="49" pos:column="17"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

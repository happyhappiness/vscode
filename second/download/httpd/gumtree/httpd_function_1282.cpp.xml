<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1282.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">post_config<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">apr_pool_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">p<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="2" pos:column="24">apr_pool_t<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">plog<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="3" pos:column="24">apr_pool_t<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">ptemp<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="4" pos:column="24">server_rec<pos:position pos:line="4" pos:column="34"/></name> <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier></type><name pos:line="4" pos:column="36">s<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="38"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">void<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">data<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">first_time<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">userdata_key<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><literal type="string" pos:line="9" pos:column="32">"rewrite_init_module"<pos:position pos:line="9" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="54"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">apr_pool_userdata_get<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><operator pos:line="11" pos:column="27">&amp;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="28">data<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">userdata_key<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="48">s<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">-&gt;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="51">process<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">-&gt;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="60">pool<pos:position pos:line="11" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="66"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">data<pos:position pos:line="12" pos:column="14"/></name></expr>)<pos:position pos:line="12" pos:column="15"/></condition><then pos:line="12" pos:column="15"> <block pos:line="12" pos:column="16">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">first_time<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <literal type="number" pos:line="13" pos:column="22">1<pos:position pos:line="13" pos:column="23"/></literal></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">apr_pool_userdata_set<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><operator pos:line="14" pos:column="31">(<pos:position pos:line="14" pos:column="32"/></operator><specifier pos:line="14" pos:column="32">const<pos:position pos:line="14" pos:column="37"/></specifier> <name pos:line="14" pos:column="38">void<pos:position pos:line="14" pos:column="42"/></name> <operator pos:line="14" pos:column="43">*<pos:position pos:line="14" pos:column="44"/></operator><operator pos:line="14" pos:column="44">)<pos:position pos:line="14" pos:column="45"/></operator><literal type="number" pos:line="14" pos:column="45">1<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">userdata_key<pos:position pos:line="14" pos:column="60"/></name></expr></argument>,
                              <argument><expr><name pos:line="15" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="54">s<pos:position pos:line="15" pos:column="55"/></name><operator pos:line="15" pos:column="55">-&gt;<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="57">process<pos:position pos:line="15" pos:column="64"/></name><operator pos:line="15" pos:column="64">-&gt;<pos:position pos:line="15" pos:column="69"/></operator><name pos:line="15" pos:column="66">pool<pos:position pos:line="15" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/* check if proxy module is available */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">proxy_available<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <operator pos:line="19" pos:column="23">(<pos:position pos:line="19" pos:column="24"/></operator><call><name pos:line="19" pos:column="24">ap_find_linked_module<pos:position pos:line="19" pos:column="45"/></name><argument_list pos:line="19" pos:column="45">(<argument><expr><literal type="string" pos:line="19" pos:column="46">"mod_proxy.c"<pos:position pos:line="19" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call> <operator pos:line="19" pos:column="61">!=<pos:position pos:line="19" pos:column="63"/></operator> <name pos:line="19" pos:column="64">NULL<pos:position pos:line="19" pos:column="68"/></name><operator pos:line="19" pos:column="68">)<pos:position pos:line="19" pos:column="69"/></operator></expr>;<pos:position pos:line="19" pos:column="70"/></expr_stmt>

<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef<pos:position pos:line="21" pos:column="8"/></cpp:directive> <name pos:line="21" pos:column="9">REWRITELOG_DISABLED<pos:position pos:line="21" pos:column="28"/></name></cpp:ifndef>
    <comment type="block" pos:line="22" pos:column="5">/* create the rewriting lockfiles in the parent */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">rv<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">apr_global_mutex_create<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><operator pos:line="23" pos:column="39">&amp;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="40">rewrite_log_lock<pos:position pos:line="23" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="58">NULL<pos:position pos:line="23" pos:column="62"/></name></expr></argument>,
                                      <argument><expr><name pos:line="24" pos:column="39">APR_LOCK_DEFAULT<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="57">p<pos:position pos:line="24" pos:column="58"/></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call><operator pos:line="24" pos:column="59">)<pos:position pos:line="24" pos:column="60"/></operator> <operator pos:line="24" pos:column="61">!=<pos:position pos:line="24" pos:column="63"/></operator> <name pos:line="24" pos:column="64">APR_SUCCESS<pos:position pos:line="24" pos:column="75"/></name></expr>)<pos:position pos:line="24" pos:column="76"/></condition><then pos:line="24" pos:column="76"> <block pos:line="24" pos:column="77">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ap_log_error<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">APLOG_MARK<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">APLOG_CRIT<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="46">rv<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">s<pos:position pos:line="25" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="26" pos:column="22">"mod_rewrite: could not create rewrite_log_lock"<pos:position pos:line="26" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="72"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="27" pos:column="42"/></name></expr>;<pos:position pos:line="27" pos:column="43"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">ifdef<pos:position pos:line="30" pos:column="7"/></cpp:directive> <name pos:line="30" pos:column="8">AP_NEED_SET_MUTEX_PERMS<pos:position pos:line="30" pos:column="31"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="31" pos:column="5">rv<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <call><name pos:line="31" pos:column="10">unixd_set_global_mutex_perms<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">(<argument><expr><name pos:line="31" pos:column="39">rewrite_log_lock<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">rv<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">!=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">APR_SUCCESS<pos:position pos:line="32" pos:column="26"/></name></expr>)<pos:position pos:line="32" pos:column="27"/></condition><then pos:line="32" pos:column="27"> <block pos:line="32" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_log_error<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">APLOG_MARK<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="34">APLOG_CRIT<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="46">rv<pos:position pos:line="33" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="50">s<pos:position pos:line="33" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="34" pos:column="22">"mod_rewrite: Could not set permissions on "<pos:position pos:line="34" pos:column="66"/></literal>
                     <literal type="string" pos:line="35" pos:column="22">"rewrite_log_lock; check User and Group directives"<pos:position pos:line="35" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="75"/></expr_stmt>
        <return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="36" pos:column="42"/></name></expr>;<pos:position pos:line="36" pos:column="43"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="38" pos:column="8">/* perms */</comment>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="39" pos:column="8">/* rewritelog */</comment>

    <expr_stmt><expr><name pos:line="41" pos:column="5">rv<pos:position pos:line="41" pos:column="7"/></name> <operator pos:line="41" pos:column="8">=<pos:position pos:line="41" pos:column="9"/></operator> <call><name pos:line="41" pos:column="10">rewritelock_create<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">s<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="32">p<pos:position pos:line="41" pos:column="33"/></name></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">rv<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">!=<pos:position pos:line="42" pos:column="14"/></operator> <name pos:line="42" pos:column="15">APR_SUCCESS<pos:position pos:line="42" pos:column="26"/></name></expr>)<pos:position pos:line="42" pos:column="27"/></condition><then pos:line="42" pos:column="27"> <block pos:line="42" pos:column="28">{
        <return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="43" pos:column="42"/></name></expr>;<pos:position pos:line="43" pos:column="43"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><name pos:line="46" pos:column="31">p<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="34">(<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="35">void<pos:position pos:line="46" pos:column="39"/></name> <operator pos:line="46" pos:column="40">*<pos:position pos:line="46" pos:column="41"/></operator><operator pos:line="46" pos:column="41">)<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="42">s<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="45">rewritelock_remove<pos:position pos:line="46" pos:column="63"/></name></expr></argument>,
                              <argument><expr><name pos:line="47" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="47" pos:column="52"/></name></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="54"/></expr_stmt>

    <comment type="block" pos:line="49" pos:column="5">/* step through the servers and
     * - open each rewriting logfile
     * - open the RewriteMap prg:xxx programs
     */</comment>
    <for pos:line="53" pos:column="5">for <control pos:line="53" pos:column="9">(<init pos:line="53" pos:column="10">;<pos:position pos:line="53" pos:column="11"/></init> <condition><expr><name pos:line="53" pos:column="12">s<pos:position pos:line="53" pos:column="13"/></name></expr>;<pos:position pos:line="53" pos:column="14"/></condition> <incr><expr><name pos:line="53" pos:column="15">s<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <name><name pos:line="53" pos:column="19">s<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">-&gt;<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="22">next<pos:position pos:line="53" pos:column="26"/></name></name></expr></incr>)<pos:position pos:line="53" pos:column="27"/></control> <block pos:line="53" pos:column="28">{
<cpp:ifndef pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">ifndef<pos:position pos:line="54" pos:column="8"/></cpp:directive> <name pos:line="54" pos:column="9">REWRITELOG_DISABLED<pos:position pos:line="54" pos:column="28"/></name></cpp:ifndef>
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><operator pos:line="55" pos:column="13">!<pos:position pos:line="55" pos:column="14"/></operator><call><name pos:line="55" pos:column="14">open_rewritelog<pos:position pos:line="55" pos:column="29"/></name><argument_list pos:line="55" pos:column="29">(<argument><expr><name pos:line="55" pos:column="30">s<pos:position pos:line="55" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="33">p<pos:position pos:line="55" pos:column="34"/></name></expr></argument>)<pos:position pos:line="55" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="36"/></condition><then pos:line="55" pos:column="36"> <block pos:line="55" pos:column="37">{
            <return pos:line="56" pos:column="13">return <expr><name pos:line="56" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="56" pos:column="46"/></name></expr>;<pos:position pos:line="56" pos:column="47"/></return>
        }<pos:position pos:line="57" pos:column="10"/></block></then></if>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>

        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">!<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">first_time<pos:position pos:line="60" pos:column="24"/></name></expr>)<pos:position pos:line="60" pos:column="25"/></condition><then pos:line="60" pos:column="25"> <block pos:line="60" pos:column="26">{
            <if pos:line="61" pos:column="13">if <condition pos:line="61" pos:column="16">(<expr><call><name pos:line="61" pos:column="17">run_rewritemap_programs<pos:position pos:line="61" pos:column="40"/></name><argument_list pos:line="61" pos:column="40">(<argument><expr><name pos:line="61" pos:column="41">s<pos:position pos:line="61" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="44">p<pos:position pos:line="61" pos:column="45"/></name></expr></argument>)<pos:position pos:line="61" pos:column="46"/></argument_list></call> <operator pos:line="61" pos:column="47">!=<pos:position pos:line="61" pos:column="49"/></operator> <name pos:line="61" pos:column="50">APR_SUCCESS<pos:position pos:line="61" pos:column="61"/></name></expr>)<pos:position pos:line="61" pos:column="62"/></condition><then pos:line="61" pos:column="62"> <block pos:line="61" pos:column="63">{
                <return pos:line="62" pos:column="17">return <expr><name pos:line="62" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="62" pos:column="50"/></name></expr>;<pos:position pos:line="62" pos:column="51"/></return>
            }<pos:position pos:line="63" pos:column="14"/></block></then></if>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>
    }<pos:position pos:line="65" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="67" pos:column="5">rewrite_ssl_lookup<pos:position pos:line="67" pos:column="23"/></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <call><name pos:line="67" pos:column="26">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="67" pos:column="50"/></name><argument_list pos:line="67" pos:column="50">(<argument><expr><name pos:line="67" pos:column="51">ssl_var_lookup<pos:position pos:line="67" pos:column="65"/></name></expr></argument>)<pos:position pos:line="67" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name pos:line="68" pos:column="5">rewrite_is_https<pos:position pos:line="68" pos:column="21"/></name> <operator pos:line="68" pos:column="22">=<pos:position pos:line="68" pos:column="23"/></operator> <call><name pos:line="68" pos:column="24">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="68" pos:column="48"/></name><argument_list pos:line="68" pos:column="48">(<argument><expr><name pos:line="68" pos:column="49">ssl_is_https<pos:position pos:line="68" pos:column="61"/></name></expr></argument>)<pos:position pos:line="68" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="63"/></expr_stmt>

    <return pos:line="70" pos:column="5">return <expr><name pos:line="70" pos:column="12">OK<pos:position pos:line="70" pos:column="14"/></name></expr>;<pos:position pos:line="70" pos:column="15"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

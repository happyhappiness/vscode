<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2269.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">session_identity_encode<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">request_rec<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type> <name pos:line="1" pos:column="50">r<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">session_rec<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type> <name pos:line="1" pos:column="67">z<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{

    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">buffer<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name pos:line="4" pos:column="20">NULL<pos:position pos:line="4" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">length<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">z<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">expiry<pos:position pos:line="6" pos:column="18"/></name></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19"> <block pos:line="6" pos:column="20">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">expiry<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><call><name pos:line="7" pos:column="24">apr_psprintf<pos:position pos:line="7" pos:column="36"/></name><argument_list pos:line="7" pos:column="36">(<argument><expr><name><name pos:line="7" pos:column="37">r<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">-&gt;<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="40">pool<pos:position pos:line="7" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="46">"%"<pos:position pos:line="7" pos:column="49"/></literal> <name pos:line="7" pos:column="50">APR_INT64_T_FMT<pos:position pos:line="7" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="67">z<pos:position pos:line="7" pos:column="68"/></name><operator pos:line="7" pos:column="68">-&gt;<pos:position pos:line="7" pos:column="73"/></operator><name pos:line="7" pos:column="70">expiry<pos:position pos:line="7" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="78"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">apr_table_set<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name><name pos:line="8" pos:column="23">z<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">-&gt;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="26">entries<pos:position pos:line="8" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">SESSION_EXPIRY<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">expiry<pos:position pos:line="8" pos:column="57"/></name></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">apr_table_do<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><operator pos:line="10" pos:column="18">(<pos:position pos:line="10" pos:column="19"/></operator><call><call><name pos:line="10" pos:column="19">int<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><operator pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call> <argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">void<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">*<pos:position pos:line="10" pos:column="34"/></operator></expr></argument>, <argument><expr><specifier pos:line="10" pos:column="36">const<pos:position pos:line="10" pos:column="41"/></specifier> <name pos:line="10" pos:column="42">char<pos:position pos:line="10" pos:column="46"/></name> <operator pos:line="10" pos:column="47">*<pos:position pos:line="10" pos:column="48"/></operator></expr></argument>, <argument><expr><specifier pos:line="10" pos:column="50">const<pos:position pos:line="10" pos:column="55"/></specifier> <name pos:line="10" pos:column="56">char<pos:position pos:line="10" pos:column="60"/></name> <operator pos:line="10" pos:column="61">*<pos:position pos:line="10" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call><operator pos:line="10" pos:column="63">)<pos:position pos:line="10" pos:column="64"/></operator>
                 <name pos:line="11" pos:column="18">identity_count<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="34">&amp;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="35">length<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="43">z<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">-&gt;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="46">entries<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="55">NULL<pos:position pos:line="11" pos:column="59"/></name></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="61"/></expr_stmt><empty_stmt pos:line="11" pos:column="61">;<pos:position pos:line="11" pos:column="62"/></empty_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">buffer<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">apr_pcalloc<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name><name pos:line="12" pos:column="26">r<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">pool<pos:position pos:line="12" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">length<pos:position pos:line="12" pos:column="41"/></name> <operator pos:line="12" pos:column="42">+<pos:position pos:line="12" pos:column="43"/></operator> <literal type="number" pos:line="12" pos:column="44">1<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">apr_table_do<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><operator pos:line="13" pos:column="18">(<pos:position pos:line="13" pos:column="19"/></operator><call><call><name pos:line="13" pos:column="19">int<pos:position pos:line="13" pos:column="22"/></name> <argument_list pos:line="13" pos:column="23">(<argument><expr><operator pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call> <argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">void<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">*<pos:position pos:line="13" pos:column="34"/></operator></expr></argument>, <argument><expr><specifier pos:line="13" pos:column="36">const<pos:position pos:line="13" pos:column="41"/></specifier> <name pos:line="13" pos:column="42">char<pos:position pos:line="13" pos:column="46"/></name> <operator pos:line="13" pos:column="47">*<pos:position pos:line="13" pos:column="48"/></operator></expr></argument>, <argument><expr><specifier pos:line="13" pos:column="50">const<pos:position pos:line="13" pos:column="55"/></specifier> <name pos:line="13" pos:column="56">char<pos:position pos:line="13" pos:column="60"/></name> <operator pos:line="13" pos:column="61">*<pos:position pos:line="13" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call><operator pos:line="13" pos:column="63">)<pos:position pos:line="13" pos:column="64"/></operator>
                 <name pos:line="14" pos:column="18">identity_concat<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">buffer<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="43">z<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">-&gt;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="46">entries<pos:position pos:line="14" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="55">NULL<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">z<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">encoded<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">buffer<pos:position pos:line="15" pos:column="24"/></name></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">OK<pos:position pos:line="16" pos:column="14"/></name></expr>;<pos:position pos:line="16" pos:column="15"/></return>

}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

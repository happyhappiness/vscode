<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6392.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_mplx_dispatch_master_events<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">h2_mplx<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">m<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, 
                                            <parameter><decl><type><name pos:line="2" pos:column="45">stream_ev_callback<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">on_resume<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>, 
                                            <parameter><decl><type><name pos:line="3" pos:column="45">stream_ev_callback<pos:position pos:line="3" pos:column="63"/></name> <modifier pos:line="3" pos:column="64">*<pos:position pos:line="3" pos:column="65"/></modifier></type><name pos:line="3" pos:column="65">on_response<pos:position pos:line="3" pos:column="76"/></name></decl></parameter>, 
                                            <parameter><decl><type><name pos:line="4" pos:column="45">void<pos:position pos:line="4" pos:column="49"/></name> <modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier></type><name pos:line="4" pos:column="51">on_ctx<pos:position pos:line="4" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="58"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">status<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">acquired<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name><name pos:line="8" pos:column="9">streams<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><literal type="number" pos:line="8" pos:column="17">32<pos:position pos:line="8" pos:column="19"/></literal></expr>]<pos:position pos:line="8" pos:column="20"/></index></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">h2_stream<pos:position pos:line="9" pos:column="14"/></name> <modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier></type><name pos:line="9" pos:column="16">stream<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">h2_task<pos:position pos:line="10" pos:column="12"/></name> <modifier pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></modifier></type><name pos:line="10" pos:column="14">task<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">size_t<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">i<pos:position pos:line="11" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="15">n<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">m<pos:position pos:line="13" pos:column="22"/></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">status<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <call><name pos:line="14" pos:column="19">enter_mutex<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">m<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="34">&amp;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="35">acquired<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call><operator pos:line="14" pos:column="44">)<pos:position pos:line="14" pos:column="45"/></operator> <operator pos:line="14" pos:column="46">==<pos:position pos:line="14" pos:column="48"/></operator> <name pos:line="14" pos:column="49">APR_SUCCESS<pos:position pos:line="14" pos:column="60"/></name></expr>)<pos:position pos:line="14" pos:column="61"/></condition><then pos:line="14" pos:column="61"> <block pos:line="14" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ap_log_cerror<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">APLOG_MARK<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">APLOG_TRACE3<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="49">0<pos:position pos:line="15" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="52">m<pos:position pos:line="15" pos:column="53"/></name><operator pos:line="15" pos:column="53">-&gt;<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="55">c<pos:position pos:line="15" pos:column="56"/></name></name></expr></argument>, 
                      <argument><expr><literal type="string" pos:line="16" pos:column="23">"h2_mplx(%ld): dispatch events"<pos:position pos:line="16" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="56">m<pos:position pos:line="16" pos:column="57"/></name><operator pos:line="16" pos:column="57">-&gt;<pos:position pos:line="16" pos:column="62"/></operator><name pos:line="16" pos:column="59">id<pos:position pos:line="16" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt>
                      
        <comment type="block" pos:line="18" pos:column="9">/* update input windows for streams */</comment>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">h2_ihash_iter<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name><name pos:line="19" pos:column="23">m<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">-&gt;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="26">streams<pos:position pos:line="19" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">update_window<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">m<pos:position pos:line="19" pos:column="51"/></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>

        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">on_response<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">&amp;&amp;<pos:position pos:line="21" pos:column="35"/></operator> <operator pos:line="21" pos:column="28">!<pos:position pos:line="21" pos:column="29"/></operator><call><name pos:line="21" pos:column="29">h2_ihash_empty<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><name><name pos:line="21" pos:column="44">m<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">sready<pos:position pos:line="21" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="55"/></condition><then pos:line="21" pos:column="55"> <block pos:line="21" pos:column="56">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">n<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">h2_ihash_ishift<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name><name pos:line="22" pos:column="33">m<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">sready<pos:position pos:line="22" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="44">streams<pos:position pos:line="22" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="53">H2_ALEN<pos:position pos:line="22" pos:column="60"/></name><argument_list pos:line="22" pos:column="60">(<argument><expr><name pos:line="22" pos:column="61">streams<pos:position pos:line="22" pos:column="68"/></name></expr></argument>)<pos:position pos:line="22" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="71"/></expr_stmt>
            <for pos:line="23" pos:column="13">for <control pos:line="23" pos:column="17">(<init><expr><name pos:line="23" pos:column="18">i<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <literal type="number" pos:line="23" pos:column="22">0<pos:position pos:line="23" pos:column="23"/></literal></expr>;<pos:position pos:line="23" pos:column="24"/></init> <condition><expr><name pos:line="23" pos:column="25">i<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">&lt;<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="29">n<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></condition> <incr><expr><operator pos:line="23" pos:column="32">++<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="34">i<pos:position pos:line="23" pos:column="35"/></name></expr></incr>)<pos:position pos:line="23" pos:column="36"/></control> <block pos:line="23" pos:column="37">{
                <expr_stmt><expr><name pos:line="24" pos:column="17">stream<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <call><name pos:line="24" pos:column="26">h2_ihash_get<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><name><name pos:line="24" pos:column="39">m<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">-&gt;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="42">streams<pos:position pos:line="24" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="51">streams<pos:position pos:line="24" pos:column="58"/></name><index pos:line="24" pos:column="58">[<expr><name pos:line="24" pos:column="59">i<pos:position pos:line="24" pos:column="60"/></name></expr>]<pos:position pos:line="24" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>
                <if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">stream<pos:position pos:line="25" pos:column="28"/></name></expr>)<pos:position pos:line="25" pos:column="29"/></condition><then pos:line="25" pos:column="29"> <block pos:line="25" pos:column="30">{
                    <continue pos:line="26" pos:column="21">continue;<pos:position pos:line="26" pos:column="30"/></continue>
                }<pos:position pos:line="27" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">ap_log_cerror<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">APLOG_MARK<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="43">APLOG_TRACE3<pos:position pos:line="28" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="57">0<pos:position pos:line="28" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="60">m<pos:position pos:line="28" pos:column="61"/></name><operator pos:line="28" pos:column="61">-&gt;<pos:position pos:line="28" pos:column="66"/></operator><name pos:line="28" pos:column="63">c<pos:position pos:line="28" pos:column="64"/></name></name></expr></argument>, 
                              <argument><expr><literal type="string" pos:line="29" pos:column="31">"h2_mplx(%ld-%d): on_response"<pos:position pos:line="29" pos:column="61"/></literal></expr></argument>, 
                              <argument><expr><name><name pos:line="30" pos:column="31">m<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">-&gt;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="34">id<pos:position pos:line="30" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="38">stream<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">-&gt;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="46">id<pos:position pos:line="30" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><name pos:line="31" pos:column="17">task<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <call><name pos:line="31" pos:column="24">h2_ihash_get<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name><name pos:line="31" pos:column="37">m<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">-&gt;<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="40">tasks<pos:position pos:line="31" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="47">stream<pos:position pos:line="31" pos:column="53"/></name><operator pos:line="31" pos:column="53">-&gt;<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="55">id<pos:position pos:line="31" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
                <if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">task<pos:position pos:line="32" pos:column="25"/></name></expr>)<pos:position pos:line="32" pos:column="26"/></condition><then pos:line="32" pos:column="26"> <block pos:line="32" pos:column="27">{
                    <expr_stmt><expr><name><name pos:line="33" pos:column="21">task<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">-&gt;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="27">submitted<pos:position pos:line="33" pos:column="36"/></name></name> <operator pos:line="33" pos:column="37">=<pos:position pos:line="33" pos:column="38"/></operator> <literal type="number" pos:line="33" pos:column="39">1<pos:position pos:line="33" pos:column="40"/></literal></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>
                    <if pos:line="34" pos:column="21">if <condition pos:line="34" pos:column="24">(<expr><name><name pos:line="34" pos:column="25">task<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">rst_error<pos:position pos:line="34" pos:column="40"/></name></name></expr>)<pos:position pos:line="34" pos:column="41"/></condition><then pos:line="34" pos:column="41"> <block pos:line="34" pos:column="42">{
                        <expr_stmt><expr><call><name pos:line="35" pos:column="25">h2_stream_rst<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">stream<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="47">task<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">-&gt;<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="53">rst_error<pos:position pos:line="35" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="64"/></expr_stmt>
                    }<pos:position pos:line="36" pos:column="22"/></block></then>
                    <else pos:line="37" pos:column="21">else <block pos:line="37" pos:column="26">{
                        <expr_stmt><expr><call><name pos:line="38" pos:column="25">AP_DEBUG_ASSERT<pos:position pos:line="38" pos:column="40"/></name><argument_list pos:line="38" pos:column="40">(<argument><expr><name><name pos:line="38" pos:column="41">task<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">-&gt;<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="47">response<pos:position pos:line="38" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="39" pos:column="25">h2_stream_set_response<pos:position pos:line="39" pos:column="47"/></name><argument_list pos:line="39" pos:column="47">(<argument><expr><name pos:line="39" pos:column="48">stream<pos:position pos:line="39" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="56">task<pos:position pos:line="39" pos:column="60"/></name><operator pos:line="39" pos:column="60">-&gt;<pos:position pos:line="39" pos:column="65"/></operator><name pos:line="39" pos:column="62">response<pos:position pos:line="39" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="72">task<pos:position pos:line="39" pos:column="76"/></name><operator pos:line="39" pos:column="76">-&gt;<pos:position pos:line="39" pos:column="81"/></operator><name pos:line="39" pos:column="78">output<pos:position pos:line="39" pos:column="84"/></name><operator pos:line="39" pos:column="84">.<pos:position pos:line="39" pos:column="85"/></operator><name pos:line="39" pos:column="85">beam<pos:position pos:line="39" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="91"/></expr_stmt>
                    }<pos:position pos:line="40" pos:column="22"/></block></else></if>
                }<pos:position pos:line="41" pos:column="18"/></block></then>
                <else pos:line="42" pos:column="17">else <block pos:line="42" pos:column="22">{
                    <comment type="block" pos:line="43" pos:column="21">/* We have the stream ready without a task. This happens
                     * when we fail streams early. A response should already
                     * be present.  */</comment>
                    <expr_stmt><expr><call><name pos:line="46" pos:column="21">AP_DEBUG_ASSERT<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name><name pos:line="46" pos:column="37">stream<pos:position pos:line="46" pos:column="43"/></name><operator pos:line="46" pos:column="43">-&gt;<pos:position pos:line="46" pos:column="48"/></operator><name pos:line="46" pos:column="45">response<pos:position pos:line="46" pos:column="53"/></name></name> <operator pos:line="46" pos:column="54">||<pos:position pos:line="46" pos:column="56"/></operator> <name><name pos:line="46" pos:column="57">stream<pos:position pos:line="46" pos:column="63"/></name><operator pos:line="46" pos:column="63">-&gt;<pos:position pos:line="46" pos:column="68"/></operator><name pos:line="46" pos:column="65">rst_error<pos:position pos:line="46" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="76"/></expr_stmt>
                }<pos:position pos:line="47" pos:column="18"/></block></else></if>
                <expr_stmt><expr><name pos:line="48" pos:column="17">status<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">=<pos:position pos:line="48" pos:column="25"/></operator> <call><name pos:line="48" pos:column="26">on_response<pos:position pos:line="48" pos:column="37"/></name><argument_list pos:line="48" pos:column="37">(<argument><expr><name pos:line="48" pos:column="38">on_ctx<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="46">stream<pos:position pos:line="48" pos:column="52"/></name><operator pos:line="48" pos:column="52">-&gt;<pos:position pos:line="48" pos:column="57"/></operator><name pos:line="48" pos:column="54">id<pos:position pos:line="48" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="58"/></expr_stmt>
            }<pos:position pos:line="49" pos:column="14"/></block></for>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>

        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">on_resume<pos:position pos:line="52" pos:column="22"/></name> <operator pos:line="52" pos:column="23">&amp;&amp;<pos:position pos:line="52" pos:column="33"/></operator> <operator pos:line="52" pos:column="26">!<pos:position pos:line="52" pos:column="27"/></operator><call><name pos:line="52" pos:column="27">h2_ihash_empty<pos:position pos:line="52" pos:column="41"/></name><argument_list pos:line="52" pos:column="41">(<argument><expr><name><name pos:line="52" pos:column="42">m<pos:position pos:line="52" pos:column="43"/></name><operator pos:line="52" pos:column="43">-&gt;<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="45">sresume<pos:position pos:line="52" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="54"/></condition><then pos:line="52" pos:column="54"> <block pos:line="52" pos:column="55">{
            <expr_stmt><expr><name pos:line="53" pos:column="13">n<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">=<pos:position pos:line="53" pos:column="16"/></operator> <call><name pos:line="53" pos:column="17">h2_ihash_ishift<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name><name pos:line="53" pos:column="33">m<pos:position pos:line="53" pos:column="34"/></name><operator pos:line="53" pos:column="34">-&gt;<pos:position pos:line="53" pos:column="39"/></operator><name pos:line="53" pos:column="36">sresume<pos:position pos:line="53" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="45">streams<pos:position pos:line="53" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="54">H2_ALEN<pos:position pos:line="53" pos:column="61"/></name><argument_list pos:line="53" pos:column="61">(<argument><expr><name pos:line="53" pos:column="62">streams<pos:position pos:line="53" pos:column="69"/></name></expr></argument>)<pos:position pos:line="53" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="72"/></expr_stmt>
            <for pos:line="54" pos:column="13">for <control pos:line="54" pos:column="17">(<init><expr><name pos:line="54" pos:column="18">i<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <literal type="number" pos:line="54" pos:column="22">0<pos:position pos:line="54" pos:column="23"/></literal></expr>;<pos:position pos:line="54" pos:column="24"/></init> <condition><expr><name pos:line="54" pos:column="25">i<pos:position pos:line="54" pos:column="26"/></name> <operator pos:line="54" pos:column="27">&lt;<pos:position pos:line="54" pos:column="31"/></operator> <name pos:line="54" pos:column="29">n<pos:position pos:line="54" pos:column="30"/></name></expr>;<pos:position pos:line="54" pos:column="31"/></condition> <incr><expr><operator pos:line="54" pos:column="32">++<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="34">i<pos:position pos:line="54" pos:column="35"/></name></expr></incr>)<pos:position pos:line="54" pos:column="36"/></control> <block pos:line="54" pos:column="37">{
                <expr_stmt><expr><name pos:line="55" pos:column="17">stream<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <call><name pos:line="55" pos:column="26">h2_ihash_get<pos:position pos:line="55" pos:column="38"/></name><argument_list pos:line="55" pos:column="38">(<argument><expr><name><name pos:line="55" pos:column="39">m<pos:position pos:line="55" pos:column="40"/></name><operator pos:line="55" pos:column="40">-&gt;<pos:position pos:line="55" pos:column="45"/></operator><name pos:line="55" pos:column="42">streams<pos:position pos:line="55" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="51">streams<pos:position pos:line="55" pos:column="58"/></name><index pos:line="55" pos:column="58">[<expr><name pos:line="55" pos:column="59">i<pos:position pos:line="55" pos:column="60"/></name></expr>]<pos:position pos:line="55" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="55" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="63"/></expr_stmt>
                <if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><operator pos:line="56" pos:column="21">!<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="22">stream<pos:position pos:line="56" pos:column="28"/></name></expr>)<pos:position pos:line="56" pos:column="29"/></condition><then pos:line="56" pos:column="29"> <block pos:line="56" pos:column="30">{
                    <continue pos:line="57" pos:column="21">continue;<pos:position pos:line="57" pos:column="30"/></continue>
                }<pos:position pos:line="58" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="59" pos:column="17">ap_log_cerror<pos:position pos:line="59" pos:column="30"/></name><argument_list pos:line="59" pos:column="30">(<argument><expr><name pos:line="59" pos:column="31">APLOG_MARK<pos:position pos:line="59" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="43">APLOG_TRACE3<pos:position pos:line="59" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="57">0<pos:position pos:line="59" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="60">m<pos:position pos:line="59" pos:column="61"/></name><operator pos:line="59" pos:column="61">-&gt;<pos:position pos:line="59" pos:column="66"/></operator><name pos:line="59" pos:column="63">c<pos:position pos:line="59" pos:column="64"/></name></name></expr></argument>, 
                              <argument><expr><literal type="string" pos:line="60" pos:column="31">"h2_mplx(%ld-%d): on_resume"<pos:position pos:line="60" pos:column="59"/></literal></expr></argument>, 
                              <argument><expr><name><name pos:line="61" pos:column="31">m<pos:position pos:line="61" pos:column="32"/></name><operator pos:line="61" pos:column="32">-&gt;<pos:position pos:line="61" pos:column="37"/></operator><name pos:line="61" pos:column="34">id<pos:position pos:line="61" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="38">stream<pos:position pos:line="61" pos:column="44"/></name><operator pos:line="61" pos:column="44">-&gt;<pos:position pos:line="61" pos:column="49"/></operator><name pos:line="61" pos:column="46">id<pos:position pos:line="61" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">h2_stream_set_suspended<pos:position pos:line="62" pos:column="40"/></name><argument_list pos:line="62" pos:column="40">(<argument><expr><name pos:line="62" pos:column="41">stream<pos:position pos:line="62" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="49">0<pos:position pos:line="62" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><name pos:line="63" pos:column="17">status<pos:position pos:line="63" pos:column="23"/></name> <operator pos:line="63" pos:column="24">=<pos:position pos:line="63" pos:column="25"/></operator> <call><name pos:line="63" pos:column="26">on_resume<pos:position pos:line="63" pos:column="35"/></name><argument_list pos:line="63" pos:column="35">(<argument><expr><name pos:line="63" pos:column="36">on_ctx<pos:position pos:line="63" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="44">stream<pos:position pos:line="63" pos:column="50"/></name><operator pos:line="63" pos:column="50">-&gt;<pos:position pos:line="63" pos:column="55"/></operator><name pos:line="63" pos:column="52">id<pos:position pos:line="63" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="64" pos:column="14"/></block></for>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>
        
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">leave_mutex<pos:position pos:line="67" pos:column="20"/></name><argument_list pos:line="67" pos:column="20">(<argument><expr><name pos:line="67" pos:column="21">m<pos:position pos:line="67" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="24">acquired<pos:position pos:line="67" pos:column="32"/></name></expr></argument>)<pos:position pos:line="67" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>
    <return pos:line="69" pos:column="5">return <expr><name pos:line="69" pos:column="12">status<pos:position pos:line="69" pos:column="18"/></name></expr>;<pos:position pos:line="69" pos:column="19"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

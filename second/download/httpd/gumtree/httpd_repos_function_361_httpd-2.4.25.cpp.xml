<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_361_httpd-2.4.25.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_method_propfind<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">request_rec<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">r<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_resource<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">resource<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">depth<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dav_error<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">err<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">result<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_xml_doc<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">doc<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">dav_walker_ctx<pos:position pos:line="8" pos:column="19"/></name></type> <name pos:line="8" pos:column="20">ctx<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><block pos:line="8" pos:column="26">{ <expr><block pos:line="8" pos:column="28">{ <expr><literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal></expr> }<pos:position pos:line="8" pos:column="33"/></block></expr> }<pos:position pos:line="8" pos:column="35"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">dav_response<pos:position pos:line="9" pos:column="17"/></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type><name pos:line="9" pos:column="19">multi_status<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* Ask repository module to resolve the resource */</comment>
    <expr_stmt><expr><name pos:line="12" pos:column="5">err<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <call><name pos:line="12" pos:column="11">dav_get_resource<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">r<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="31">1<pos:position pos:line="12" pos:column="32"/></literal></expr></argument> <comment type="block" pos:line="12" pos:column="33">/* label_allowed */</comment>, <argument><expr><literal type="number" pos:line="12" pos:column="54">0<pos:position pos:line="12" pos:column="55"/></literal></expr></argument> <comment type="block" pos:line="12" pos:column="56">/* use_checked_in */</comment>,
                           <argument><expr><operator pos:line="13" pos:column="28">&amp;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="29">resource<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">err<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">!=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21">
        <block type="pseudo"><return pos:line="15" pos:column="9">return <expr><call><name pos:line="15" pos:column="16">dav_handle_err<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">r<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">err<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">NULL<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></return></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">dav_get_resource_state<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">r<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">resource<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call> <operator pos:line="17" pos:column="45">==<pos:position pos:line="17" pos:column="47"/></operator> <name pos:line="17" pos:column="48">DAV_RESOURCE_NULL<pos:position pos:line="17" pos:column="65"/></name></expr>)<pos:position pos:line="17" pos:column="66"/></condition><then pos:line="17" pos:column="66"> <block pos:line="17" pos:column="67">{
        <comment type="block" pos:line="18" pos:column="9">/* Apache will supply a default error for this. */</comment>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">HTTP_NOT_FOUND<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">depth<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">dav_get_depth<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">r<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="35">DAV_INFINITY<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call><operator pos:line="22" pos:column="48">)<pos:position pos:line="22" pos:column="49"/></operator> <operator pos:line="22" pos:column="50">&lt;<pos:position pos:line="22" pos:column="54"/></operator> <literal type="number" pos:line="22" pos:column="52">0<pos:position pos:line="22" pos:column="53"/></literal></expr>)<pos:position pos:line="22" pos:column="54"/></condition><then pos:line="22" pos:column="54"> <block pos:line="22" pos:column="55">{
        <comment type="block" pos:line="23" pos:column="9">/* dav_get_depth() supplies additional information for the
         * default message. */</comment>
        <return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="25" pos:column="32"/></name></expr>;<pos:position pos:line="25" pos:column="33"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">depth<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">==<pos:position pos:line="28" pos:column="17"/></operator> <name pos:line="28" pos:column="18">DAV_INFINITY<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">&amp;&amp;<pos:position pos:line="28" pos:column="41"/></operator> <name><name pos:line="28" pos:column="34">resource<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">-&gt;<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="44">collection<pos:position pos:line="28" pos:column="54"/></name></name></expr>)<pos:position pos:line="28" pos:column="55"/></condition><then pos:line="28" pos:column="55"> <block pos:line="28" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="29" pos:column="9">dav_dir_conf<pos:position pos:line="29" pos:column="21"/></name> <modifier pos:line="29" pos:column="22">*<pos:position pos:line="29" pos:column="23"/></modifier></type><name pos:line="29" pos:column="23">conf<pos:position pos:line="29" pos:column="27"/></name></decl>;<pos:position pos:line="29" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><name pos:line="30" pos:column="9">conf<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">dav_dir_conf<pos:position pos:line="30" pos:column="29"/></name> <operator pos:line="30" pos:column="30">*<pos:position pos:line="30" pos:column="31"/></operator><operator pos:line="30" pos:column="31">)<pos:position pos:line="30" pos:column="32"/></operator><call><name pos:line="30" pos:column="32">ap_get_module_config<pos:position pos:line="30" pos:column="52"/></name><argument_list pos:line="30" pos:column="52">(<argument><expr><name><name pos:line="30" pos:column="53">r<pos:position pos:line="30" pos:column="54"/></name><operator pos:line="30" pos:column="54">-&gt;<pos:position pos:line="30" pos:column="59"/></operator><name pos:line="30" pos:column="56">per_dir_config<pos:position pos:line="30" pos:column="70"/></name></name></expr></argument>,
                                                    <argument><expr><operator pos:line="31" pos:column="53">&amp;<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="54">dav_module<pos:position pos:line="31" pos:column="64"/></name></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="66"/></expr_stmt>
        <comment type="block" pos:line="32" pos:column="9">/* default is to DISALLOW these requests */</comment>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">conf<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">allow_depthinfinity<pos:position pos:line="33" pos:column="38"/></name></name> <operator pos:line="33" pos:column="39">!=<pos:position pos:line="33" pos:column="41"/></operator> <name pos:line="33" pos:column="42">DAV_ENABLED_ON<pos:position pos:line="33" pos:column="56"/></name></expr>)<pos:position pos:line="33" pos:column="57"/></condition><then pos:line="33" pos:column="57"> <block pos:line="33" pos:column="58">{
            <return pos:line="34" pos:column="13">return <expr><call><name pos:line="34" pos:column="20">dav_error_response<pos:position pos:line="34" pos:column="38"/></name><argument_list pos:line="34" pos:column="38">(<argument><expr><name pos:line="34" pos:column="39">r<pos:position pos:line="34" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="42">HTTP_FORBIDDEN<pos:position pos:line="34" pos:column="56"/></name></expr></argument>,
                                      <argument><expr><call><name pos:line="35" pos:column="39">apr_psprintf<pos:position pos:line="35" pos:column="51"/></name><argument_list pos:line="35" pos:column="51">(<argument><expr><name><name pos:line="35" pos:column="52">r<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">-&gt;<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="55">pool<pos:position pos:line="35" pos:column="59"/></name></name></expr></argument>,
                                                   <argument><expr><literal type="string" pos:line="36" pos:column="52">"PROPFIND requests with a "<pos:position pos:line="36" pos:column="79"/></literal>
                                                   <literal type="string" pos:line="37" pos:column="52">"Depth of \"infinity\" are "<pos:position pos:line="37" pos:column="80"/></literal>
                                                   <literal type="string" pos:line="38" pos:column="52">"not allowed for %s."<pos:position pos:line="38" pos:column="73"/></literal></expr></argument>,
                                                   <argument><expr><call><name pos:line="39" pos:column="52">ap_escape_html<pos:position pos:line="39" pos:column="66"/></name><argument_list pos:line="39" pos:column="66">(<argument><expr><name><name pos:line="39" pos:column="67">r<pos:position pos:line="39" pos:column="68"/></name><operator pos:line="39" pos:column="68">-&gt;<pos:position pos:line="39" pos:column="73"/></operator><name pos:line="39" pos:column="70">pool<pos:position pos:line="39" pos:column="74"/></name></name></expr></argument>,
                                                                  <argument><expr><name><name pos:line="40" pos:column="67">r<pos:position pos:line="40" pos:column="68"/></name><operator pos:line="40" pos:column="68">-&gt;<pos:position pos:line="40" pos:column="73"/></operator><name pos:line="40" pos:column="70">uri<pos:position pos:line="40" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="77"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">result<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <call><name pos:line="44" pos:column="19">ap_xml_parse_input<pos:position pos:line="44" pos:column="37"/></name><argument_list pos:line="44" pos:column="37">(<argument><expr><name pos:line="44" pos:column="38">r<pos:position pos:line="44" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="41">&amp;<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="42">doc<pos:position pos:line="44" pos:column="45"/></name></expr></argument>)<pos:position pos:line="44" pos:column="46"/></argument_list></call><operator pos:line="44" pos:column="46">)<pos:position pos:line="44" pos:column="47"/></operator> <operator pos:line="44" pos:column="48">!=<pos:position pos:line="44" pos:column="50"/></operator> <name pos:line="44" pos:column="51">OK<pos:position pos:line="44" pos:column="53"/></name></expr>)<pos:position pos:line="44" pos:column="54"/></condition><then pos:line="44" pos:column="54"> <block pos:line="44" pos:column="55">{
        <return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">result<pos:position pos:line="45" pos:column="22"/></name></expr>;<pos:position pos:line="45" pos:column="23"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="47" pos:column="5">/* note: doc == NULL if no request body */</comment>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">doc<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">&amp;&amp;<pos:position pos:line="49" pos:column="23"/></operator> <operator pos:line="49" pos:column="16">!<pos:position pos:line="49" pos:column="17"/></operator><call><name pos:line="49" pos:column="17">dav_validate_root<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><name pos:line="49" pos:column="35">doc<pos:position pos:line="49" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="40">"propfind"<pos:position pos:line="49" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="52"/></condition><then pos:line="49" pos:column="52"> <block pos:line="49" pos:column="53">{
        <comment type="block" pos:line="50" pos:column="9">/* This supplies additional information for the default message. */</comment>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">ap_log_rerror<pos:position pos:line="51" pos:column="22"/></name><argument_list pos:line="51" pos:column="22">(<argument><expr><name pos:line="51" pos:column="23">APLOG_MARK<pos:position pos:line="51" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="35">APLOG_ERR<pos:position pos:line="51" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="46">0<pos:position pos:line="51" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="49">r<pos:position pos:line="51" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="52">APLOGNO<pos:position pos:line="51" pos:column="59"/></name><argument_list pos:line="51" pos:column="59">(<argument><expr><literal type="number" pos:line="51" pos:column="60">00585<pos:position pos:line="51" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="52" pos:column="23">"The \"propfind\" element was not found."<pos:position pos:line="52" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="66"/></expr_stmt>
        <return pos:line="53" pos:column="9">return <expr><name pos:line="53" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="53" pos:column="32"/></name></expr>;<pos:position pos:line="53" pos:column="33"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="56" pos:column="5">/* ### validate that only one of these three elements is present */</comment>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">doc<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">==<pos:position pos:line="58" pos:column="15"/></operator> <name pos:line="58" pos:column="16">NULL<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">||<pos:position pos:line="58" pos:column="23"/></operator> <call><name pos:line="58" pos:column="24">dav_find_child<pos:position pos:line="58" pos:column="38"/></name><argument_list pos:line="58" pos:column="38">(<argument><expr><name><name pos:line="58" pos:column="39">doc<pos:position pos:line="58" pos:column="42"/></name><operator pos:line="58" pos:column="42">-&gt;<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="44">root<pos:position pos:line="58" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="50">"allprop"<pos:position pos:line="58" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="60"/></argument_list></call> <operator pos:line="58" pos:column="61">!=<pos:position pos:line="58" pos:column="63"/></operator> <name pos:line="58" pos:column="64">NULL<pos:position pos:line="58" pos:column="68"/></name></expr>)<pos:position pos:line="58" pos:column="69"/></condition><then pos:line="58" pos:column="69"> <block pos:line="58" pos:column="70">{
        <comment type="block" pos:line="59" pos:column="9">/* note: no request body implies allprop */</comment>
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">ctx<pos:position pos:line="60" pos:column="12"/></name><operator pos:line="60" pos:column="12">.<pos:position pos:line="60" pos:column="13"/></operator><name pos:line="60" pos:column="13">propfind_type<pos:position pos:line="60" pos:column="26"/></name></name> <operator pos:line="60" pos:column="27">=<pos:position pos:line="60" pos:column="28"/></operator> <name pos:line="60" pos:column="29">DAV_PROPFIND_IS_ALLPROP<pos:position pos:line="60" pos:column="52"/></name></expr>;<pos:position pos:line="60" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then>
    <elseif pos:line="62" pos:column="5">else <if pos:line="62" pos:column="10">if <condition pos:line="62" pos:column="13">(<expr><call><name pos:line="62" pos:column="14">dav_find_child<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><name><name pos:line="62" pos:column="29">doc<pos:position pos:line="62" pos:column="32"/></name><operator pos:line="62" pos:column="32">-&gt;<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="34">root<pos:position pos:line="62" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="40">"propname"<pos:position pos:line="62" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="51"/></argument_list></call> <operator pos:line="62" pos:column="52">!=<pos:position pos:line="62" pos:column="54"/></operator> <name pos:line="62" pos:column="55">NULL<pos:position pos:line="62" pos:column="59"/></name></expr>)<pos:position pos:line="62" pos:column="60"/></condition><then pos:line="62" pos:column="60"> <block pos:line="62" pos:column="61">{
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">ctx<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">.<pos:position pos:line="63" pos:column="13"/></operator><name pos:line="63" pos:column="13">propfind_type<pos:position pos:line="63" pos:column="26"/></name></name> <operator pos:line="63" pos:column="27">=<pos:position pos:line="63" pos:column="28"/></operator> <name pos:line="63" pos:column="29">DAV_PROPFIND_IS_PROPNAME<pos:position pos:line="63" pos:column="53"/></name></expr>;<pos:position pos:line="63" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="65" pos:column="5">else <if pos:line="65" pos:column="10">if <condition pos:line="65" pos:column="13">(<expr><call><name pos:line="65" pos:column="14">dav_find_child<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><name><name pos:line="65" pos:column="29">doc<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">-&gt;<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="34">root<pos:position pos:line="65" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="40">"prop"<pos:position pos:line="65" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="47"/></argument_list></call> <operator pos:line="65" pos:column="48">!=<pos:position pos:line="65" pos:column="50"/></operator> <name pos:line="65" pos:column="51">NULL<pos:position pos:line="65" pos:column="55"/></name></expr>)<pos:position pos:line="65" pos:column="56"/></condition><then pos:line="65" pos:column="56"> <block pos:line="65" pos:column="57">{
        <expr_stmt><expr><name><name pos:line="66" pos:column="9">ctx<pos:position pos:line="66" pos:column="12"/></name><operator pos:line="66" pos:column="12">.<pos:position pos:line="66" pos:column="13"/></operator><name pos:line="66" pos:column="13">propfind_type<pos:position pos:line="66" pos:column="26"/></name></name> <operator pos:line="66" pos:column="27">=<pos:position pos:line="66" pos:column="28"/></operator> <name pos:line="66" pos:column="29">DAV_PROPFIND_IS_PROP<pos:position pos:line="66" pos:column="49"/></name></expr>;<pos:position pos:line="66" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if></elseif>
    <else pos:line="68" pos:column="5">else <block pos:line="68" pos:column="10">{
        <comment type="block" pos:line="69" pos:column="9">/* "propfind" element must have one of the above three children */</comment>

        <comment type="block" pos:line="71" pos:column="9">/* This supplies additional information for the default message. */</comment>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">ap_log_rerror<pos:position pos:line="72" pos:column="22"/></name><argument_list pos:line="72" pos:column="22">(<argument><expr><name pos:line="72" pos:column="23">APLOG_MARK<pos:position pos:line="72" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="35">APLOG_ERR<pos:position pos:line="72" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="46">0<pos:position pos:line="72" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="49">r<pos:position pos:line="72" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="72" pos:column="52">APLOGNO<pos:position pos:line="72" pos:column="59"/></name><argument_list pos:line="72" pos:column="59">(<argument><expr><literal type="number" pos:line="72" pos:column="60">00586<pos:position pos:line="72" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="73" pos:column="23">"The \"propfind\" element does not contain one of "<pos:position pos:line="73" pos:column="74"/></literal>
                      <literal type="string" pos:line="74" pos:column="23">"the required child elements (the specific command)."<pos:position pos:line="74" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="78"/></expr_stmt>
        <return pos:line="75" pos:column="9">return <expr><name pos:line="75" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="75" pos:column="32"/></name></expr>;<pos:position pos:line="75" pos:column="33"/></return>
    }<pos:position pos:line="76" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="78" pos:column="5">ctx<pos:position pos:line="78" pos:column="8"/></name><operator pos:line="78" pos:column="8">.<pos:position pos:line="78" pos:column="9"/></operator><name pos:line="78" pos:column="9">w<pos:position pos:line="78" pos:column="10"/></name><operator pos:line="78" pos:column="10">.<pos:position pos:line="78" pos:column="11"/></operator><name pos:line="78" pos:column="11">walk_type<pos:position pos:line="78" pos:column="20"/></name></name> <operator pos:line="78" pos:column="21">=<pos:position pos:line="78" pos:column="22"/></operator> <name pos:line="78" pos:column="23">DAV_WALKTYPE_NORMAL<pos:position pos:line="78" pos:column="42"/></name> <operator pos:line="78" pos:column="43">|<pos:position pos:line="78" pos:column="44"/></operator> <name pos:line="78" pos:column="45">DAV_WALKTYPE_AUTH<pos:position pos:line="78" pos:column="62"/></name></expr>;<pos:position pos:line="78" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="79" pos:column="5">ctx<pos:position pos:line="79" pos:column="8"/></name><operator pos:line="79" pos:column="8">.<pos:position pos:line="79" pos:column="9"/></operator><name pos:line="79" pos:column="9">w<pos:position pos:line="79" pos:column="10"/></name><operator pos:line="79" pos:column="10">.<pos:position pos:line="79" pos:column="11"/></operator><name pos:line="79" pos:column="11">func<pos:position pos:line="79" pos:column="15"/></name></name> <operator pos:line="79" pos:column="16">=<pos:position pos:line="79" pos:column="17"/></operator> <name pos:line="79" pos:column="18">dav_propfind_walker<pos:position pos:line="79" pos:column="37"/></name></expr>;<pos:position pos:line="79" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="80" pos:column="5">ctx<pos:position pos:line="80" pos:column="8"/></name><operator pos:line="80" pos:column="8">.<pos:position pos:line="80" pos:column="9"/></operator><name pos:line="80" pos:column="9">w<pos:position pos:line="80" pos:column="10"/></name><operator pos:line="80" pos:column="10">.<pos:position pos:line="80" pos:column="11"/></operator><name pos:line="80" pos:column="11">walk_ctx<pos:position pos:line="80" pos:column="19"/></name></name> <operator pos:line="80" pos:column="20">=<pos:position pos:line="80" pos:column="21"/></operator> <operator pos:line="80" pos:column="22">&amp;<pos:position pos:line="80" pos:column="27"/></operator><name pos:line="80" pos:column="23">ctx<pos:position pos:line="80" pos:column="26"/></name></expr>;<pos:position pos:line="80" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">ctx<pos:position pos:line="81" pos:column="8"/></name><operator pos:line="81" pos:column="8">.<pos:position pos:line="81" pos:column="9"/></operator><name pos:line="81" pos:column="9">w<pos:position pos:line="81" pos:column="10"/></name><operator pos:line="81" pos:column="10">.<pos:position pos:line="81" pos:column="11"/></operator><name pos:line="81" pos:column="11">pool<pos:position pos:line="81" pos:column="15"/></name></name> <operator pos:line="81" pos:column="16">=<pos:position pos:line="81" pos:column="17"/></operator> <name><name pos:line="81" pos:column="18">r<pos:position pos:line="81" pos:column="19"/></name><operator pos:line="81" pos:column="19">-&gt;<pos:position pos:line="81" pos:column="24"/></operator><name pos:line="81" pos:column="21">pool<pos:position pos:line="81" pos:column="25"/></name></name></expr>;<pos:position pos:line="81" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="82" pos:column="5">ctx<pos:position pos:line="82" pos:column="8"/></name><operator pos:line="82" pos:column="8">.<pos:position pos:line="82" pos:column="9"/></operator><name pos:line="82" pos:column="9">w<pos:position pos:line="82" pos:column="10"/></name><operator pos:line="82" pos:column="10">.<pos:position pos:line="82" pos:column="11"/></operator><name pos:line="82" pos:column="11">root<pos:position pos:line="82" pos:column="15"/></name></name> <operator pos:line="82" pos:column="16">=<pos:position pos:line="82" pos:column="17"/></operator> <name pos:line="82" pos:column="18">resource<pos:position pos:line="82" pos:column="26"/></name></expr>;<pos:position pos:line="82" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="84" pos:column="5">ctx<pos:position pos:line="84" pos:column="8"/></name><operator pos:line="84" pos:column="8">.<pos:position pos:line="84" pos:column="9"/></operator><name pos:line="84" pos:column="9">doc<pos:position pos:line="84" pos:column="12"/></name></name> <operator pos:line="84" pos:column="13">=<pos:position pos:line="84" pos:column="14"/></operator> <name pos:line="84" pos:column="15">doc<pos:position pos:line="84" pos:column="18"/></name></expr>;<pos:position pos:line="84" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="85" pos:column="5">ctx<pos:position pos:line="85" pos:column="8"/></name><operator pos:line="85" pos:column="8">.<pos:position pos:line="85" pos:column="9"/></operator><name pos:line="85" pos:column="9">r<pos:position pos:line="85" pos:column="10"/></name></name> <operator pos:line="85" pos:column="11">=<pos:position pos:line="85" pos:column="12"/></operator> <name pos:line="85" pos:column="13">r<pos:position pos:line="85" pos:column="14"/></name></expr>;<pos:position pos:line="85" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="86" pos:column="5">ctx<pos:position pos:line="86" pos:column="8"/></name><operator pos:line="86" pos:column="8">.<pos:position pos:line="86" pos:column="9"/></operator><name pos:line="86" pos:column="9">bb<pos:position pos:line="86" pos:column="11"/></name></name> <operator pos:line="86" pos:column="12">=<pos:position pos:line="86" pos:column="13"/></operator> <call><name pos:line="86" pos:column="14">apr_brigade_create<pos:position pos:line="86" pos:column="32"/></name><argument_list pos:line="86" pos:column="32">(<argument><expr><name><name pos:line="86" pos:column="33">r<pos:position pos:line="86" pos:column="34"/></name><operator pos:line="86" pos:column="34">-&gt;<pos:position pos:line="86" pos:column="39"/></operator><name pos:line="86" pos:column="36">pool<pos:position pos:line="86" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="42">r<pos:position pos:line="86" pos:column="43"/></name><operator pos:line="86" pos:column="43">-&gt;<pos:position pos:line="86" pos:column="48"/></operator><name pos:line="86" pos:column="45">connection<pos:position pos:line="86" pos:column="55"/></name><operator pos:line="86" pos:column="55">-&gt;<pos:position pos:line="86" pos:column="60"/></operator><name pos:line="86" pos:column="57">bucket_alloc<pos:position pos:line="86" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">apr_pool_create<pos:position pos:line="87" pos:column="20"/></name><argument_list pos:line="87" pos:column="20">(<argument><expr><operator pos:line="87" pos:column="21">&amp;<pos:position pos:line="87" pos:column="26"/></operator><name><name pos:line="87" pos:column="22">ctx<pos:position pos:line="87" pos:column="25"/></name><operator pos:line="87" pos:column="25">.<pos:position pos:line="87" pos:column="26"/></operator><name pos:line="87" pos:column="26">scratchpool<pos:position pos:line="87" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="39">r<pos:position pos:line="87" pos:column="40"/></name><operator pos:line="87" pos:column="40">-&gt;<pos:position pos:line="87" pos:column="45"/></operator><name pos:line="87" pos:column="42">pool<pos:position pos:line="87" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="89" pos:column="5">/* ### should open read-only */</comment>
    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><operator pos:line="90" pos:column="9">(<pos:position pos:line="90" pos:column="10"/></operator><name pos:line="90" pos:column="10">err<pos:position pos:line="90" pos:column="13"/></name> <operator pos:line="90" pos:column="14">=<pos:position pos:line="90" pos:column="15"/></operator> <call><name pos:line="90" pos:column="16">dav_open_lockdb<pos:position pos:line="90" pos:column="31"/></name><argument_list pos:line="90" pos:column="31">(<argument><expr><name pos:line="90" pos:column="32">r<pos:position pos:line="90" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="35">0<pos:position pos:line="90" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="90" pos:column="38">&amp;<pos:position pos:line="90" pos:column="43"/></operator><name><name pos:line="90" pos:column="39">ctx<pos:position pos:line="90" pos:column="42"/></name><operator pos:line="90" pos:column="42">.<pos:position pos:line="90" pos:column="43"/></operator><name pos:line="90" pos:column="43">w<pos:position pos:line="90" pos:column="44"/></name><operator pos:line="90" pos:column="44">.<pos:position pos:line="90" pos:column="45"/></operator><name pos:line="90" pos:column="45">lockdb<pos:position pos:line="90" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="52"/></argument_list></call><operator pos:line="90" pos:column="52">)<pos:position pos:line="90" pos:column="53"/></operator> <operator pos:line="90" pos:column="54">!=<pos:position pos:line="90" pos:column="56"/></operator> <name pos:line="90" pos:column="57">NULL<pos:position pos:line="90" pos:column="61"/></name></expr>)<pos:position pos:line="90" pos:column="62"/></condition><then pos:line="90" pos:column="62"> <block pos:line="90" pos:column="63">{
        <expr_stmt><expr><name pos:line="91" pos:column="9">err<pos:position pos:line="91" pos:column="12"/></name> <operator pos:line="91" pos:column="13">=<pos:position pos:line="91" pos:column="14"/></operator> <call><name pos:line="91" pos:column="15">dav_push_error<pos:position pos:line="91" pos:column="29"/></name><argument_list pos:line="91" pos:column="29">(<argument><expr><name><name pos:line="91" pos:column="30">r<pos:position pos:line="91" pos:column="31"/></name><operator pos:line="91" pos:column="31">-&gt;<pos:position pos:line="91" pos:column="36"/></operator><name pos:line="91" pos:column="33">pool<pos:position pos:line="91" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="39">err<pos:position pos:line="91" pos:column="42"/></name><operator pos:line="91" pos:column="42">-&gt;<pos:position pos:line="91" pos:column="47"/></operator><name pos:line="91" pos:column="44">status<pos:position pos:line="91" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="52">0<pos:position pos:line="91" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="92" pos:column="30">"The lock database could not be opened, "<pos:position pos:line="92" pos:column="71"/></literal>
                             <literal type="string" pos:line="93" pos:column="30">"preventing access to the various lock "<pos:position pos:line="93" pos:column="70"/></literal>
                             <literal type="string" pos:line="94" pos:column="30">"properties for the PROPFIND."<pos:position pos:line="94" pos:column="60"/></literal></expr></argument>,
                             <argument><expr><name pos:line="95" pos:column="30">err<pos:position pos:line="95" pos:column="33"/></name></expr></argument>)<pos:position pos:line="95" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="35"/></expr_stmt>
        <return pos:line="96" pos:column="9">return <expr><call><name pos:line="96" pos:column="16">dav_handle_err<pos:position pos:line="96" pos:column="30"/></name><argument_list pos:line="96" pos:column="30">(<argument><expr><name pos:line="96" pos:column="31">r<pos:position pos:line="96" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="34">err<pos:position pos:line="96" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="39">NULL<pos:position pos:line="96" pos:column="43"/></name></expr></argument>)<pos:position pos:line="96" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="45"/></return>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if>
    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><name><name pos:line="98" pos:column="9">ctx<pos:position pos:line="98" pos:column="12"/></name><operator pos:line="98" pos:column="12">.<pos:position pos:line="98" pos:column="13"/></operator><name pos:line="98" pos:column="13">w<pos:position pos:line="98" pos:column="14"/></name><operator pos:line="98" pos:column="14">.<pos:position pos:line="98" pos:column="15"/></operator><name pos:line="98" pos:column="15">lockdb<pos:position pos:line="98" pos:column="21"/></name></name> <operator pos:line="98" pos:column="22">!=<pos:position pos:line="98" pos:column="24"/></operator> <name pos:line="98" pos:column="25">NULL<pos:position pos:line="98" pos:column="29"/></name></expr>)<pos:position pos:line="98" pos:column="30"/></condition><then pos:line="98" pos:column="30"> <block pos:line="98" pos:column="31">{
        <comment type="block" pos:line="99" pos:column="9">/* if we have a lock database, then we can walk locknull resources */</comment>
        <expr_stmt><expr><name><name pos:line="100" pos:column="9">ctx<pos:position pos:line="100" pos:column="12"/></name><operator pos:line="100" pos:column="12">.<pos:position pos:line="100" pos:column="13"/></operator><name pos:line="100" pos:column="13">w<pos:position pos:line="100" pos:column="14"/></name><operator pos:line="100" pos:column="14">.<pos:position pos:line="100" pos:column="15"/></operator><name pos:line="100" pos:column="15">walk_type<pos:position pos:line="100" pos:column="24"/></name></name> <operator pos:line="100" pos:column="25">|=<pos:position pos:line="100" pos:column="27"/></operator> <name pos:line="100" pos:column="28">DAV_WALKTYPE_LOCKNULL<pos:position pos:line="100" pos:column="49"/></name></expr>;<pos:position pos:line="100" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="103" pos:column="5">/* send &lt;multistatus&gt; tag, with all doc-&gt;namespaces attached.  */</comment>

    <comment type="block" pos:line="105" pos:column="5">/* NOTE: we *cannot* leave out the doc's namespaces from the
       initial &lt;multistatus&gt; tag.  if a 404 was generated for an HREF,
       then we need to spit out the doc's namespaces for use by the
       404. Note that &lt;response&gt; elements will override these ns0,
       ns1, etc, but NOT within the &lt;response&gt; scope for the
       badprops. */</comment>
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">dav_begin_multistatus<pos:position pos:line="111" pos:column="26"/></name><argument_list pos:line="111" pos:column="26">(<argument><expr><name><name pos:line="111" pos:column="27">ctx<pos:position pos:line="111" pos:column="30"/></name><operator pos:line="111" pos:column="30">.<pos:position pos:line="111" pos:column="31"/></operator><name pos:line="111" pos:column="31">bb<pos:position pos:line="111" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="35">r<pos:position pos:line="111" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="38">HTTP_MULTI_STATUS<pos:position pos:line="111" pos:column="55"/></name></expr></argument>,
                          <argument><expr><ternary><condition><expr><name pos:line="112" pos:column="27">doc<pos:position pos:line="112" pos:column="30"/></name></expr> ?<pos:position pos:line="112" pos:column="32"/></condition><then pos:line="112" pos:column="32"> <expr><name><name pos:line="112" pos:column="33">doc<pos:position pos:line="112" pos:column="36"/></name><operator pos:line="112" pos:column="36">-&gt;<pos:position pos:line="112" pos:column="41"/></operator><name pos:line="112" pos:column="38">namespaces<pos:position pos:line="112" pos:column="48"/></name></name></expr> <pos:position pos:line="112" pos:column="49"/></then><else pos:line="112" pos:column="49">: <expr><name pos:line="112" pos:column="51">NULL<pos:position pos:line="112" pos:column="55"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="112" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="114" pos:column="5">/* Have the provider walk the resource. */</comment>
    <expr_stmt><expr><name pos:line="115" pos:column="5">err<pos:position pos:line="115" pos:column="8"/></name> <operator pos:line="115" pos:column="9">=<pos:position pos:line="115" pos:column="10"/></operator> <call pos:line="115" pos:column="11">(<modifier pos:line="115" pos:column="12">*<pos:position pos:line="115" pos:column="13"/></modifier><name><name pos:line="115" pos:column="13">resource<pos:position pos:line="115" pos:column="21"/></name><operator pos:line="115" pos:column="21">-&gt;<pos:position pos:line="115" pos:column="26"/></operator><name pos:line="115" pos:column="23">hooks<pos:position pos:line="115" pos:column="28"/></name><operator pos:line="115" pos:column="28">-&gt;<pos:position pos:line="115" pos:column="33"/></operator><name pos:line="115" pos:column="30">walk<pos:position pos:line="115" pos:column="34"/></name></name>)<argument_list pos:line="115" pos:column="35">(<argument><expr><operator pos:line="115" pos:column="36">&amp;<pos:position pos:line="115" pos:column="41"/></operator><name><name pos:line="115" pos:column="37">ctx<pos:position pos:line="115" pos:column="40"/></name><operator pos:line="115" pos:column="40">.<pos:position pos:line="115" pos:column="41"/></operator><name pos:line="115" pos:column="41">w<pos:position pos:line="115" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="44">depth<pos:position pos:line="115" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="115" pos:column="51">&amp;<pos:position pos:line="115" pos:column="56"/></operator><name pos:line="115" pos:column="52">multi_status<pos:position pos:line="115" pos:column="64"/></name></expr></argument>)<pos:position pos:line="115" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="66"/></expr_stmt>

    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">(<expr><name><name pos:line="117" pos:column="9">ctx<pos:position pos:line="117" pos:column="12"/></name><operator pos:line="117" pos:column="12">.<pos:position pos:line="117" pos:column="13"/></operator><name pos:line="117" pos:column="13">w<pos:position pos:line="117" pos:column="14"/></name><operator pos:line="117" pos:column="14">.<pos:position pos:line="117" pos:column="15"/></operator><name pos:line="117" pos:column="15">lockdb<pos:position pos:line="117" pos:column="21"/></name></name> <operator pos:line="117" pos:column="22">!=<pos:position pos:line="117" pos:column="24"/></operator> <name pos:line="117" pos:column="25">NULL<pos:position pos:line="117" pos:column="29"/></name></expr>)<pos:position pos:line="117" pos:column="30"/></condition><then pos:line="117" pos:column="30"> <block pos:line="117" pos:column="31">{
        <expr_stmt><expr><call pos:line="118" pos:column="9">(<modifier pos:line="118" pos:column="10">*<pos:position pos:line="118" pos:column="11"/></modifier><name><name pos:line="118" pos:column="11">ctx<pos:position pos:line="118" pos:column="14"/></name><operator pos:line="118" pos:column="14">.<pos:position pos:line="118" pos:column="15"/></operator><name pos:line="118" pos:column="15">w<pos:position pos:line="118" pos:column="16"/></name><operator pos:line="118" pos:column="16">.<pos:position pos:line="118" pos:column="17"/></operator><name pos:line="118" pos:column="17">lockdb<pos:position pos:line="118" pos:column="23"/></name><operator pos:line="118" pos:column="23">-&gt;<pos:position pos:line="118" pos:column="28"/></operator><name pos:line="118" pos:column="25">hooks<pos:position pos:line="118" pos:column="30"/></name><operator pos:line="118" pos:column="30">-&gt;<pos:position pos:line="118" pos:column="35"/></operator><name pos:line="118" pos:column="32">close_lockdb<pos:position pos:line="118" pos:column="44"/></name></name>)<argument_list pos:line="118" pos:column="45">(<argument><expr><name><name pos:line="118" pos:column="46">ctx<pos:position pos:line="118" pos:column="49"/></name><operator pos:line="118" pos:column="49">.<pos:position pos:line="118" pos:column="50"/></operator><name pos:line="118" pos:column="50">w<pos:position pos:line="118" pos:column="51"/></name><operator pos:line="118" pos:column="51">.<pos:position pos:line="118" pos:column="52"/></operator><name pos:line="118" pos:column="52">lockdb<pos:position pos:line="118" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="119" pos:column="6"/></block></then></if>

    <if pos:line="121" pos:column="5">if <condition pos:line="121" pos:column="8">(<expr><name pos:line="121" pos:column="9">err<pos:position pos:line="121" pos:column="12"/></name> <operator pos:line="121" pos:column="13">!=<pos:position pos:line="121" pos:column="15"/></operator> <name pos:line="121" pos:column="16">NULL<pos:position pos:line="121" pos:column="20"/></name></expr>)<pos:position pos:line="121" pos:column="21"/></condition><then pos:line="121" pos:column="21"> <block pos:line="121" pos:column="22">{
        <comment type="block" pos:line="122" pos:column="9">/* If an error occurred during the resource walk, there's
           basically nothing we can do but abort the connection and
           log an error.  This is one of the limitations of HTTP; it
           needs to "know" the entire status of the response before
           generating it, which is just impossible in these streamy
           response situations. */</comment>
        <expr_stmt><expr><name pos:line="128" pos:column="9">err<pos:position pos:line="128" pos:column="12"/></name> <operator pos:line="128" pos:column="13">=<pos:position pos:line="128" pos:column="14"/></operator> <call><name pos:line="128" pos:column="15">dav_push_error<pos:position pos:line="128" pos:column="29"/></name><argument_list pos:line="128" pos:column="29">(<argument><expr><name><name pos:line="128" pos:column="30">r<pos:position pos:line="128" pos:column="31"/></name><operator pos:line="128" pos:column="31">-&gt;<pos:position pos:line="128" pos:column="36"/></operator><name pos:line="128" pos:column="33">pool<pos:position pos:line="128" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="39">err<pos:position pos:line="128" pos:column="42"/></name><operator pos:line="128" pos:column="42">-&gt;<pos:position pos:line="128" pos:column="47"/></operator><name pos:line="128" pos:column="44">status<pos:position pos:line="128" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="128" pos:column="52">0<pos:position pos:line="128" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="129" pos:column="30">"Provider encountered an error while streaming"<pos:position pos:line="129" pos:column="77"/></literal>
                             <literal type="string" pos:line="130" pos:column="30">" a multistatus PROPFIND response."<pos:position pos:line="130" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="67">err<pos:position pos:line="130" pos:column="70"/></name></expr></argument>)<pos:position pos:line="130" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="131" pos:column="9">dav_log_err<pos:position pos:line="131" pos:column="20"/></name><argument_list pos:line="131" pos:column="20">(<argument><expr><name pos:line="131" pos:column="21">r<pos:position pos:line="131" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="24">err<pos:position pos:line="131" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="29">APLOG_ERR<pos:position pos:line="131" pos:column="38"/></name></expr></argument>)<pos:position pos:line="131" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="132" pos:column="9">r<pos:position pos:line="132" pos:column="10"/></name><operator pos:line="132" pos:column="10">-&gt;<pos:position pos:line="132" pos:column="15"/></operator><name pos:line="132" pos:column="12">connection<pos:position pos:line="132" pos:column="22"/></name><operator pos:line="132" pos:column="22">-&gt;<pos:position pos:line="132" pos:column="27"/></operator><name pos:line="132" pos:column="24">aborted<pos:position pos:line="132" pos:column="31"/></name></name> <operator pos:line="132" pos:column="32">=<pos:position pos:line="132" pos:column="33"/></operator> <literal type="number" pos:line="132" pos:column="34">1<pos:position pos:line="132" pos:column="35"/></literal></expr>;<pos:position pos:line="132" pos:column="36"/></expr_stmt>
        <return pos:line="133" pos:column="9">return <expr><name pos:line="133" pos:column="16">DONE<pos:position pos:line="133" pos:column="20"/></name></expr>;<pos:position pos:line="133" pos:column="21"/></return>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="136" pos:column="5">dav_finish_multistatus<pos:position pos:line="136" pos:column="27"/></name><argument_list pos:line="136" pos:column="27">(<argument><expr><name pos:line="136" pos:column="28">r<pos:position pos:line="136" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="31">ctx<pos:position pos:line="136" pos:column="34"/></name><operator pos:line="136" pos:column="34">.<pos:position pos:line="136" pos:column="35"/></operator><name pos:line="136" pos:column="35">bb<pos:position pos:line="136" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="138" pos:column="5">/* the response has been sent. */</comment>
    <return pos:line="139" pos:column="5">return <expr><name pos:line="139" pos:column="12">DONE<pos:position pos:line="139" pos:column="16"/></name></expr>;<pos:position pos:line="139" pos:column="17"/></return>
}<pos:position pos:line="140" pos:column="2"/></block></function></unit>

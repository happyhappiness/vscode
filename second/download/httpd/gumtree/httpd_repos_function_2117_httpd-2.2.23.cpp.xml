<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2117_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ap_conf_vector_t<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">create_empty_config<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">apr_pool_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">p<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">void<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">conf_vector<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><call><name pos:line="3" pos:column="25">apr_pcalloc<pos:position pos:line="3" pos:column="36"/></name><argument_list pos:line="3" pos:column="36">(<argument><expr><name pos:line="3" pos:column="37">p<pos:position pos:line="3" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="40">sizeof<argument_list pos:line="3" pos:column="46">(<argument><expr><name pos:line="3" pos:column="47">void<pos:position pos:line="3" pos:column="51"/></name> <operator pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="3" pos:column="54"/></argument_list></sizeof> <operator pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></operator>
                                    <operator pos:line="4" pos:column="37">(<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="38">total_modules<pos:position pos:line="4" pos:column="51"/></name> <operator pos:line="4" pos:column="52">+<pos:position pos:line="4" pos:column="53"/></operator> <name pos:line="4" pos:column="54">DYNAMIC_MODULE_LIMIT<pos:position pos:line="4" pos:column="74"/></name><operator pos:line="4" pos:column="74">)<pos:position pos:line="4" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="4" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="77"/></decl_stmt>
    <return pos:line="5" pos:column="5">return <expr><name pos:line="5" pos:column="12">conf_vector<pos:position pos:line="5" pos:column="23"/></name></expr>;<pos:position pos:line="5" pos:column="24"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

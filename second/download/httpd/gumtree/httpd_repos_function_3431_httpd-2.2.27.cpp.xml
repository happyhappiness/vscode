<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3431_httpd-2.2.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name><name pos:line="1" pos:column="26">argv<pos:position pos:line="1" pos:column="30"/></name><index pos:line="1" pos:column="30">[]<pos:position pos:line="1" pos:column="32"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_pool_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">p<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">SIGPIPE<pos:position pos:line="6" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">signal<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">SIGPIPE<pos:position pos:line="7" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="21">SIG_IGN<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="10" pos:column="5">rv<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">apr_initialize<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">()<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">rv<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">!=<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">APR_SUCCESS<pos:position pos:line="11" pos:column="26"/></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27"> <block pos:line="11" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">aprerr<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="string" pos:line="12" pos:column="16">"apr_initialize()"<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">rv<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">atexit<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">apr_terminate<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">rv<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">apr_pool_create<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><operator pos:line="17" pos:column="26">&amp;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="27">p<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">NULL<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">rv<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">!=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">APR_SUCCESS<pos:position pos:line="18" pos:column="26"/></name></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27"> <block pos:line="18" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">aprerr<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="string" pos:line="19" pos:column="16">"apr_pool_create()"<pos:position pos:line="19" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="37">rv<pos:position pos:line="19" pos:column="39"/></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">argc<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">&gt;=<pos:position pos:line="22" pos:column="19"/></operator> <literal type="number" pos:line="22" pos:column="17">2<pos:position pos:line="22" pos:column="18"/></literal> <operator pos:line="22" pos:column="19">&amp;&amp;<pos:position pos:line="22" pos:column="29"/></operator> <operator pos:line="22" pos:column="22">!<pos:position pos:line="22" pos:column="23"/></operator><call><name pos:line="22" pos:column="23">strcmp<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name><name pos:line="22" pos:column="30">argv<pos:position pos:line="22" pos:column="34"/></name><index pos:line="22" pos:column="34">[<expr><literal type="number" pos:line="22" pos:column="35">1<pos:position pos:line="22" pos:column="36"/></literal></expr>]<pos:position pos:line="22" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="39">"client"<pos:position pos:line="22" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="49"/></condition><then pos:line="22" pos:column="49"> <block pos:line="22" pos:column="50">{
        <decl_stmt><decl><type><specifier pos:line="23" pos:column="9">const<pos:position pos:line="23" pos:column="14"/></specifier> <name pos:line="23" pos:column="15">char<pos:position pos:line="23" pos:column="19"/></name> <modifier pos:line="23" pos:column="20">*<pos:position pos:line="23" pos:column="21"/></modifier></type><name pos:line="23" pos:column="21">host<pos:position pos:line="23" pos:column="25"/></name> <init pos:line="23" pos:column="26">= <expr><name pos:line="23" pos:column="28">NULL<pos:position pos:line="23" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">int<pos:position pos:line="24" pos:column="12"/></name></type> <name pos:line="24" pos:column="13">mode<pos:position pos:line="24" pos:column="17"/></name> <init pos:line="24" pos:column="18">= <expr><name pos:line="24" pos:column="20">BLK<pos:position pos:line="24" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">int<pos:position pos:line="25" pos:column="12"/></name></type> <name pos:line="25" pos:column="13">start_server<pos:position pos:line="25" pos:column="25"/></name> <init pos:line="25" pos:column="26">= <expr><literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">int<pos:position pos:line="26" pos:column="12"/></name></type> <name pos:line="26" pos:column="13">i<pos:position pos:line="26" pos:column="14"/></name></decl>;<pos:position pos:line="26" pos:column="15"/></decl_stmt>

        <for pos:line="28" pos:column="9">for <control pos:line="28" pos:column="13">(<init><expr><name pos:line="28" pos:column="14">i<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <literal type="number" pos:line="28" pos:column="18">2<pos:position pos:line="28" pos:column="19"/></literal></expr>;<pos:position pos:line="28" pos:column="20"/></init> <condition><expr><name pos:line="28" pos:column="21">i<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">&lt;<pos:position pos:line="28" pos:column="27"/></operator> <name pos:line="28" pos:column="25">argc<pos:position pos:line="28" pos:column="29"/></name></expr>;<pos:position pos:line="28" pos:column="30"/></condition> <incr><expr><name pos:line="28" pos:column="31">i<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">++<pos:position pos:line="28" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="35"/></control> <block pos:line="28" pos:column="36">{
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><operator pos:line="29" pos:column="17">!<pos:position pos:line="29" pos:column="18"/></operator><call><name pos:line="29" pos:column="18">strcmp<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name><name pos:line="29" pos:column="25">argv<pos:position pos:line="29" pos:column="29"/></name><index pos:line="29" pos:column="29">[<expr><name pos:line="29" pos:column="30">i<pos:position pos:line="29" pos:column="31"/></name></expr>]<pos:position pos:line="29" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="34">"blocking"<pos:position pos:line="29" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="46"/></condition><then pos:line="29" pos:column="46"> <block pos:line="29" pos:column="47">{
                <expr_stmt><expr><name pos:line="30" pos:column="17">mode<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">BLK<pos:position pos:line="30" pos:column="27"/></name></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="31" pos:column="14"/></block></then>
            <elseif pos:line="32" pos:column="13">else <if pos:line="32" pos:column="18">if <condition pos:line="32" pos:column="21">(<expr><operator pos:line="32" pos:column="22">!<pos:position pos:line="32" pos:column="23"/></operator><call><name pos:line="32" pos:column="23">strcmp<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name><name pos:line="32" pos:column="30">argv<pos:position pos:line="32" pos:column="34"/></name><index pos:line="32" pos:column="34">[<expr><name pos:line="32" pos:column="35">i<pos:position pos:line="32" pos:column="36"/></name></expr>]<pos:position pos:line="32" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="39">"timeout"<pos:position pos:line="32" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="50"/></condition><then pos:line="32" pos:column="50"> <block pos:line="32" pos:column="51">{
                <expr_stmt><expr><name pos:line="33" pos:column="17">mode<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">TIMEOUT<pos:position pos:line="33" pos:column="31"/></name></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="35" pos:column="13">else <if pos:line="35" pos:column="18">if <condition pos:line="35" pos:column="21">(<expr><operator pos:line="35" pos:column="22">!<pos:position pos:line="35" pos:column="23"/></operator><call><name pos:line="35" pos:column="23">strcmp<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name><name pos:line="35" pos:column="30">argv<pos:position pos:line="35" pos:column="34"/></name><index pos:line="35" pos:column="34">[<expr><name pos:line="35" pos:column="35">i<pos:position pos:line="35" pos:column="36"/></name></expr>]<pos:position pos:line="35" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="39">"nonblocking"<pos:position pos:line="35" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="54"/></condition><then pos:line="35" pos:column="54"> <block pos:line="35" pos:column="55">{
                <expr_stmt><expr><name pos:line="36" pos:column="17">mode<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="24">NONBLK<pos:position pos:line="36" pos:column="30"/></name></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="38" pos:column="13">else <if pos:line="38" pos:column="18">if <condition pos:line="38" pos:column="21">(<expr><operator pos:line="38" pos:column="22">!<pos:position pos:line="38" pos:column="23"/></operator><call><name pos:line="38" pos:column="23">strcmp<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name><name pos:line="38" pos:column="30">argv<pos:position pos:line="38" pos:column="34"/></name><index pos:line="38" pos:column="34">[<expr><name pos:line="38" pos:column="35">i<pos:position pos:line="38" pos:column="36"/></name></expr>]<pos:position pos:line="38" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="39">"startserver"<pos:position pos:line="38" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="54"/></condition><then pos:line="38" pos:column="54"> <block pos:line="38" pos:column="55">{
                <expr_stmt><expr><name pos:line="39" pos:column="17">start_server<pos:position pos:line="39" pos:column="29"/></name> <operator pos:line="39" pos:column="30">=<pos:position pos:line="39" pos:column="31"/></operator> <literal type="number" pos:line="39" pos:column="32">1<pos:position pos:line="39" pos:column="33"/></literal></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="40" pos:column="14"/></block></then></if></elseif>
            <else pos:line="41" pos:column="13">else <block pos:line="41" pos:column="18">{
                <expr_stmt><expr><name pos:line="42" pos:column="17">host<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <name><name pos:line="42" pos:column="24">argv<pos:position pos:line="42" pos:column="28"/></name><index pos:line="42" pos:column="28">[<expr><name pos:line="42" pos:column="29">i<pos:position pos:line="42" pos:column="30"/></name></expr>]<pos:position pos:line="42" pos:column="31"/></index></name></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="43" pos:column="14"/></block></else></if>	
        }<pos:position pos:line="44" pos:column="10"/></block></for>
        <return pos:line="45" pos:column="9">return <expr><call><name pos:line="45" pos:column="16">client<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">p<pos:position pos:line="45" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="26">mode<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="32">host<pos:position pos:line="45" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="38">start_server<pos:position pos:line="45" pos:column="50"/></name></expr></argument>)<pos:position pos:line="45" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="52"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then>
    <elseif pos:line="47" pos:column="5">else <if pos:line="47" pos:column="10">if <condition pos:line="47" pos:column="13">(<expr><name pos:line="47" pos:column="14">argc<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">==<pos:position pos:line="47" pos:column="21"/></operator> <literal type="number" pos:line="47" pos:column="22">2<pos:position pos:line="47" pos:column="23"/></literal> <operator pos:line="47" pos:column="24">&amp;&amp;<pos:position pos:line="47" pos:column="34"/></operator> <operator pos:line="47" pos:column="27">!<pos:position pos:line="47" pos:column="28"/></operator><call><name pos:line="47" pos:column="28">strcmp<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name><name pos:line="47" pos:column="35">argv<pos:position pos:line="47" pos:column="39"/></name><index pos:line="47" pos:column="39">[<expr><literal type="number" pos:line="47" pos:column="40">1<pos:position pos:line="47" pos:column="41"/></literal></expr>]<pos:position pos:line="47" pos:column="42"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="44">"server"<pos:position pos:line="47" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="54"/></condition><then pos:line="47" pos:column="54"> <block pos:line="47" pos:column="55">{
        <return pos:line="48" pos:column="9">return <expr><call><name pos:line="48" pos:column="16">server<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">p<pos:position pos:line="48" pos:column="24"/></name></expr></argument>)<pos:position pos:line="48" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="26"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="51" pos:column="5">fprintf<pos:position pos:line="51" pos:column="12"/></name><argument_list pos:line="51" pos:column="12">(<argument><expr><name pos:line="51" pos:column="13">stderr<pos:position pos:line="51" pos:column="19"/></name></expr></argument>, 
            <argument><expr><literal type="string" pos:line="52" pos:column="13">"Usage: %s client {blocking|nonblocking|timeout} [startserver] [server-host]\n"<pos:position pos:line="52" pos:column="92"/></literal>
            <literal type="string" pos:line="53" pos:column="13">"       %s server\n"<pos:position pos:line="53" pos:column="33"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="54" pos:column="13">argv<pos:position pos:line="54" pos:column="17"/></name><index pos:line="54" pos:column="17">[<expr><literal type="number" pos:line="54" pos:column="18">0<pos:position pos:line="54" pos:column="19"/></literal></expr>]<pos:position pos:line="54" pos:column="20"/></index></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="22">argv<pos:position pos:line="54" pos:column="26"/></name><index pos:line="54" pos:column="26">[<expr><literal type="number" pos:line="54" pos:column="27">0<pos:position pos:line="54" pos:column="28"/></literal></expr>]<pos:position pos:line="54" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="54" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>
    <return pos:line="55" pos:column="5">return <expr><operator pos:line="55" pos:column="12">-<pos:position pos:line="55" pos:column="13"/></operator><literal type="number" pos:line="55" pos:column="13">1<pos:position pos:line="55" pos:column="14"/></literal></expr>;<pos:position pos:line="55" pos:column="15"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3293.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">authz_status<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ip_check_authorization<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">request_rec<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">r<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">require_line<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">t<pos:position pos:line="3" pos:column="18"/></name></decl>, <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="21">w<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="5" pos:column="5">/* The 'ip' provider will allow the configuration to specify a list of
        ip addresses to check rather than a single address.  This is different
        from the previous host based syntax. */</comment>
    <expr_stmt><expr><name pos:line="8" pos:column="5">t<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <name pos:line="8" pos:column="9">require_line<pos:position pos:line="8" pos:column="21"/></name></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">w<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name pos:line="9" pos:column="17">ap_getword_conf<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name><name pos:line="9" pos:column="33">r<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">pool<pos:position pos:line="9" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="42">&amp;<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="43">t<pos:position pos:line="9" pos:column="44"/></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call><operator pos:line="9" pos:column="45">)<pos:position pos:line="9" pos:column="46"/></operator> <operator pos:line="9" pos:column="47">&amp;&amp;<pos:position pos:line="9" pos:column="57"/></operator> <name><name pos:line="9" pos:column="50">w<pos:position pos:line="9" pos:column="51"/></name><index pos:line="9" pos:column="51">[<expr><literal type="number" pos:line="9" pos:column="52">0<pos:position pos:line="9" pos:column="53"/></literal></expr>]<pos:position pos:line="9" pos:column="54"/></index></name></expr>)<pos:position pos:line="9" pos:column="55"/></condition> <block pos:line="9" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">where<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><call><name pos:line="10" pos:column="23">apr_pstrdup<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name><name pos:line="10" pos:column="35">r<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">pool<pos:position pos:line="10" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">w<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">s<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name></type> <name><name pos:line="12" pos:column="14">msgbuf<pos:position pos:line="12" pos:column="20"/></name><index pos:line="12" pos:column="20">[<expr><literal type="number" pos:line="12" pos:column="21">120<pos:position pos:line="12" pos:column="24"/></literal></expr>]<pos:position pos:line="12" pos:column="25"/></index></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">apr_ipsubnet_t<pos:position pos:line="13" pos:column="23"/></name> <modifier pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></modifier></type><name pos:line="13" pos:column="25">ip<pos:position pos:line="13" pos:column="27"/></name></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">apr_status_t<pos:position pos:line="14" pos:column="21"/></name></type> <name pos:line="14" pos:column="22">rv<pos:position pos:line="14" pos:column="24"/></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">got_ip<pos:position pos:line="15" pos:column="19"/></name> <init pos:line="15" pos:column="20">= <expr><literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="24"/></decl_stmt>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">s<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">ap_strchr<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">where<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="35">'/'<pos:position pos:line="17" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call><operator pos:line="17" pos:column="39">)<pos:position pos:line="17" pos:column="40"/></operator></expr>)<pos:position pos:line="17" pos:column="41"/></condition><then pos:line="17" pos:column="41"> <block pos:line="17" pos:column="42">{
            <expr_stmt><expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">s<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">++<pos:position pos:line="18" pos:column="17"/></operator> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <literal type="char" pos:line="18" pos:column="20">'\0'<pos:position pos:line="18" pos:column="24"/></literal></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="19" pos:column="13">rv<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">apr_ipsubnet_create<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><operator pos:line="19" pos:column="38">&amp;<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="39">ip<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">where<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">s<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="53">r<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">-&gt;<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="56">pool<pos:position pos:line="19" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
            <if pos:line="20" pos:column="13">if<condition pos:line="20" pos:column="15">(<expr><call><name pos:line="20" pos:column="16">APR_STATUS_IS_EINVAL<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name pos:line="20" pos:column="37">rv<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
                <comment type="block" pos:line="21" pos:column="17">/* looked nothing like an IP address */</comment>
                <expr_stmt><expr><call><name pos:line="22" pos:column="17">ap_log_rerror<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">APLOG_MARK<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="43">APLOG_ERR<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="54">0<pos:position pos:line="22" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="57">r<pos:position pos:line="22" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="23" pos:column="31">"an ip address 'require' list appears to be invalid "<pos:position pos:line="23" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="86"/></expr_stmt>
            }<pos:position pos:line="24" pos:column="14"/></block></then>
            <elseif pos:line="25" pos:column="13">else <if pos:line="25" pos:column="18">if <condition pos:line="25" pos:column="21">(<expr><name pos:line="25" pos:column="22">rv<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">!=<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">APR_SUCCESS<pos:position pos:line="25" pos:column="39"/></name></expr>)<pos:position pos:line="25" pos:column="40"/></condition><then pos:line="25" pos:column="40"> <block pos:line="25" pos:column="41">{
                <expr_stmt><expr><call><name pos:line="26" pos:column="17">apr_strerror<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">rv<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">msgbuf<pos:position pos:line="26" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="42">sizeof <name pos:line="26" pos:column="49">msgbuf<pos:position pos:line="26" pos:column="55"/></name></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">ap_log_rerror<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">APLOG_MARK<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="43">APLOG_ERR<pos:position pos:line="27" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="54">0<pos:position pos:line="27" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="57">r<pos:position pos:line="27" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="28" pos:column="31">"an ip address 'require' list appears to be invalid; %s "<pos:position pos:line="28" pos:column="88"/></literal></expr></argument>,
                              <argument><expr><name pos:line="29" pos:column="31">msgbuf<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if></elseif>
            <else pos:line="31" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="17">got_ip<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <literal type="number" pos:line="32" pos:column="26">1<pos:position pos:line="32" pos:column="27"/></literal></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt></block></else></if>
        }<pos:position pos:line="33" pos:column="10"/></block></then>
        <elseif pos:line="34" pos:column="9">else <if pos:line="34" pos:column="14">if <condition pos:line="34" pos:column="17">(<expr><operator pos:line="34" pos:column="18">!<pos:position pos:line="34" pos:column="19"/></operator><call><name pos:line="34" pos:column="19">APR_STATUS_IS_EINVAL<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">rv<pos:position pos:line="34" pos:column="42"/></name> <operator pos:line="34" pos:column="43">=<pos:position pos:line="34" pos:column="44"/></operator> <call><name pos:line="34" pos:column="45">apr_ipsubnet_create<pos:position pos:line="34" pos:column="64"/></name><argument_list pos:line="34" pos:column="64">(<argument><expr><operator pos:line="34" pos:column="65">&amp;<pos:position pos:line="34" pos:column="70"/></operator><name pos:line="34" pos:column="66">ip<pos:position pos:line="34" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="70">where<pos:position pos:line="34" pos:column="75"/></name></expr></argument>,
                                                                <argument><expr><name pos:line="35" pos:column="65">NULL<pos:position pos:line="35" pos:column="69"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="71">r<pos:position pos:line="35" pos:column="72"/></name><operator pos:line="35" pos:column="72">-&gt;<pos:position pos:line="35" pos:column="77"/></operator><name pos:line="35" pos:column="74">pool<pos:position pos:line="35" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="81"/></condition><then pos:line="35" pos:column="81"> <block pos:line="35" pos:column="82">{
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">rv<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">!=<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">APR_SUCCESS<pos:position pos:line="36" pos:column="34"/></name></expr>)<pos:position pos:line="36" pos:column="35"/></condition><then pos:line="36" pos:column="35"> <block pos:line="36" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="37" pos:column="17">apr_strerror<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">rv<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">msgbuf<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="42">sizeof <name pos:line="37" pos:column="49">msgbuf<pos:position pos:line="37" pos:column="55"/></name></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="38" pos:column="17">ap_log_rerror<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">APLOG_MARK<pos:position pos:line="38" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="43">APLOG_ERR<pos:position pos:line="38" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="54">0<pos:position pos:line="38" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="57">r<pos:position pos:line="38" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="39" pos:column="31">"an ip address 'require' list appears to be invalid; %s "<pos:position pos:line="39" pos:column="88"/></literal></expr></argument>,
                              <argument><expr><name pos:line="40" pos:column="31">msgbuf<pos:position pos:line="40" pos:column="37"/></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="41" pos:column="14"/></block></then>
            <else pos:line="42" pos:column="13">else 
                <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="17">got_ip<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">=<pos:position pos:line="43" pos:column="25"/></operator> <literal type="number" pos:line="43" pos:column="26">1<pos:position pos:line="43" pos:column="27"/></literal></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt></block></else></if>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">got_ip<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">&amp;&amp;<pos:position pos:line="46" pos:column="30"/></operator> <call><name pos:line="46" pos:column="23">apr_ipsubnet_test<pos:position pos:line="46" pos:column="40"/></name><argument_list pos:line="46" pos:column="40">(<argument><expr><name pos:line="46" pos:column="41">ip<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="45">r<pos:position pos:line="46" pos:column="46"/></name><operator pos:line="46" pos:column="46">-&gt;<pos:position pos:line="46" pos:column="51"/></operator><name pos:line="46" pos:column="48">connection<pos:position pos:line="46" pos:column="58"/></name><operator pos:line="46" pos:column="58">-&gt;<pos:position pos:line="46" pos:column="63"/></operator><name pos:line="46" pos:column="60">remote_addr<pos:position pos:line="46" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="73"/></condition><then pos:line="46" pos:column="73"> <block pos:line="46" pos:column="74">{
            <return pos:line="47" pos:column="13">return <expr><name pos:line="47" pos:column="20">AUTHZ_GRANTED<pos:position pos:line="47" pos:column="33"/></name></expr>;<pos:position pos:line="47" pos:column="34"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
    }<pos:position pos:line="49" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="51" pos:column="5">ap_log_rerror<pos:position pos:line="51" pos:column="18"/></name><argument_list pos:line="51" pos:column="18">(<argument><expr><name pos:line="51" pos:column="19">APLOG_MARK<pos:position pos:line="51" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="31">APLOG_DEBUG<pos:position pos:line="51" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="44">0<pos:position pos:line="51" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="47">r<pos:position pos:line="51" pos:column="48"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="52" pos:column="19">"access to %s failed, reason: ip address list does not meet "<pos:position pos:line="52" pos:column="80"/></literal>
                  <literal type="string" pos:line="53" pos:column="19">"'require'ments for user '%s' to be allowed access"<pos:position pos:line="53" pos:column="70"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="54" pos:column="19">r<pos:position pos:line="54" pos:column="20"/></name><operator pos:line="54" pos:column="20">-&gt;<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="22">uri<pos:position pos:line="54" pos:column="25"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="27">r<pos:position pos:line="54" pos:column="28"/></name><operator pos:line="54" pos:column="28">-&gt;<pos:position pos:line="54" pos:column="33"/></operator><name pos:line="54" pos:column="30">user<pos:position pos:line="54" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt>

    <return pos:line="56" pos:column="5">return <expr><name pos:line="56" pos:column="12">AUTHZ_DENIED<pos:position pos:line="56" pos:column="24"/></name></expr>;<pos:position pos:line="56" pos:column="25"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1405_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lookup_builtin_method<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">method<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">apr_size_t<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">len<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* Note: the following code was generated by the "shilka" tool from
       the "cocom" parsing/compilation toolkit. It is an optimized lookup
       based on analysis of the input keywords. Postprocessing was done
       on the shilka output, but the basic structure and analysis is
       from there. Should new HTTP methods be added, then manual insertion
       into this code is fine, or simply re-running the shilka tool on
       the appropriate input. */</comment>

    <comment type="block" pos:line="11" pos:column="5">/* Note: it is also quite reasonable to just use our method_registry,
       but I'm assuming (probably incorrectly) we want more speed here
       (based on the optimizations the previous code was doing). */</comment>

    <switch pos:line="15" pos:column="5">switch <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">len<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition>
    <block pos:line="16" pos:column="5">{
    <case pos:line="17" pos:column="5">case <expr><literal type="number" pos:line="17" pos:column="10">3<pos:position pos:line="17" pos:column="11"/></literal></expr>:<pos:position pos:line="17" pos:column="12"/></case>
        <switch pos:line="18" pos:column="9">switch <condition pos:line="18" pos:column="16">(<expr><name><name pos:line="18" pos:column="17">method<pos:position pos:line="18" pos:column="23"/></name><index pos:line="18" pos:column="23">[<expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>]<pos:position pos:line="18" pos:column="26"/></index></name></expr>)<pos:position pos:line="18" pos:column="27"/></condition>
        <block pos:line="19" pos:column="9">{
        <case pos:line="20" pos:column="9">case <expr><literal type="char" pos:line="20" pos:column="14">'P'<pos:position pos:line="20" pos:column="17"/></literal></expr>:<pos:position pos:line="20" pos:column="18"/></case>
            <return pos:line="21" pos:column="13">return <expr><operator pos:line="21" pos:column="20">(<pos:position pos:line="21" pos:column="21"/></operator><ternary><condition><expr><name><name pos:line="21" pos:column="21">method<pos:position pos:line="21" pos:column="27"/></name><index pos:line="21" pos:column="27">[<expr><literal type="number" pos:line="21" pos:column="28">1<pos:position pos:line="21" pos:column="29"/></literal></expr>]<pos:position pos:line="21" pos:column="30"/></index></name> <operator pos:line="21" pos:column="31">==<pos:position pos:line="21" pos:column="33"/></operator> <literal type="char" pos:line="21" pos:column="34">'U'<pos:position pos:line="21" pos:column="37"/></literal>
                    <operator pos:line="22" pos:column="21">&amp;&amp;<pos:position pos:line="22" pos:column="31"/></operator> <name><name pos:line="22" pos:column="24">method<pos:position pos:line="22" pos:column="30"/></name><index pos:line="22" pos:column="30">[<expr><literal type="number" pos:line="22" pos:column="31">2<pos:position pos:line="22" pos:column="32"/></literal></expr>]<pos:position pos:line="22" pos:column="33"/></index></name> <operator pos:line="22" pos:column="34">==<pos:position pos:line="22" pos:column="36"/></operator> <literal type="char" pos:line="22" pos:column="37">'T'<pos:position pos:line="22" pos:column="40"/></literal></expr>
                    ?<pos:position pos:line="23" pos:column="22"/></condition><then pos:line="23" pos:column="22"> <expr><name pos:line="23" pos:column="23">M_PUT<pos:position pos:line="23" pos:column="28"/></name></expr> <pos:position pos:line="23" pos:column="29"/></then><else pos:line="23" pos:column="29">: <expr><name pos:line="23" pos:column="31">UNKNOWN_METHOD<pos:position pos:line="23" pos:column="45"/></name></expr></else></ternary><operator pos:line="23" pos:column="45">)<pos:position pos:line="23" pos:column="46"/></operator></expr>;<pos:position pos:line="23" pos:column="47"/></return>
        <case pos:line="24" pos:column="9">case <expr><literal type="char" pos:line="24" pos:column="14">'G'<pos:position pos:line="24" pos:column="17"/></literal></expr>:<pos:position pos:line="24" pos:column="18"/></case>
            <return pos:line="25" pos:column="13">return <expr><operator pos:line="25" pos:column="20">(<pos:position pos:line="25" pos:column="21"/></operator><ternary><condition><expr><name><name pos:line="25" pos:column="21">method<pos:position pos:line="25" pos:column="27"/></name><index pos:line="25" pos:column="27">[<expr><literal type="number" pos:line="25" pos:column="28">1<pos:position pos:line="25" pos:column="29"/></literal></expr>]<pos:position pos:line="25" pos:column="30"/></index></name> <operator pos:line="25" pos:column="31">==<pos:position pos:line="25" pos:column="33"/></operator> <literal type="char" pos:line="25" pos:column="34">'E'<pos:position pos:line="25" pos:column="37"/></literal>
                    <operator pos:line="26" pos:column="21">&amp;&amp;<pos:position pos:line="26" pos:column="31"/></operator> <name><name pos:line="26" pos:column="24">method<pos:position pos:line="26" pos:column="30"/></name><index pos:line="26" pos:column="30">[<expr><literal type="number" pos:line="26" pos:column="31">2<pos:position pos:line="26" pos:column="32"/></literal></expr>]<pos:position pos:line="26" pos:column="33"/></index></name> <operator pos:line="26" pos:column="34">==<pos:position pos:line="26" pos:column="36"/></operator> <literal type="char" pos:line="26" pos:column="37">'T'<pos:position pos:line="26" pos:column="40"/></literal></expr>
                    ?<pos:position pos:line="27" pos:column="22"/></condition><then pos:line="27" pos:column="22"> <expr><name pos:line="27" pos:column="23">M_GET<pos:position pos:line="27" pos:column="28"/></name></expr> <pos:position pos:line="27" pos:column="29"/></then><else pos:line="27" pos:column="29">: <expr><name pos:line="27" pos:column="31">UNKNOWN_METHOD<pos:position pos:line="27" pos:column="45"/></name></expr></else></ternary><operator pos:line="27" pos:column="45">)<pos:position pos:line="27" pos:column="46"/></operator></expr>;<pos:position pos:line="27" pos:column="47"/></return>
        <default pos:line="28" pos:column="9">default:<pos:position pos:line="28" pos:column="17"/></default>
            <return pos:line="29" pos:column="13">return <expr><name pos:line="29" pos:column="20">UNKNOWN_METHOD<pos:position pos:line="29" pos:column="34"/></name></expr>;<pos:position pos:line="29" pos:column="35"/></return>
        }<pos:position pos:line="30" pos:column="10"/></block></switch>

    <case pos:line="32" pos:column="5">case <expr><literal type="number" pos:line="32" pos:column="10">4<pos:position pos:line="32" pos:column="11"/></literal></expr>:<pos:position pos:line="32" pos:column="12"/></case>
        <switch pos:line="33" pos:column="9">switch <condition pos:line="33" pos:column="16">(<expr><name><name pos:line="33" pos:column="17">method<pos:position pos:line="33" pos:column="23"/></name><index pos:line="33" pos:column="23">[<expr><literal type="number" pos:line="33" pos:column="24">0<pos:position pos:line="33" pos:column="25"/></literal></expr>]<pos:position pos:line="33" pos:column="26"/></index></name></expr>)<pos:position pos:line="33" pos:column="27"/></condition>
        <block pos:line="34" pos:column="9">{
        <case pos:line="35" pos:column="9">case <expr><literal type="char" pos:line="35" pos:column="14">'H'<pos:position pos:line="35" pos:column="17"/></literal></expr>:<pos:position pos:line="35" pos:column="18"/></case>
            <return pos:line="36" pos:column="13">return <expr><operator pos:line="36" pos:column="20">(<pos:position pos:line="36" pos:column="21"/></operator><ternary><condition><expr><name><name pos:line="36" pos:column="21">method<pos:position pos:line="36" pos:column="27"/></name><index pos:line="36" pos:column="27">[<expr><literal type="number" pos:line="36" pos:column="28">1<pos:position pos:line="36" pos:column="29"/></literal></expr>]<pos:position pos:line="36" pos:column="30"/></index></name> <operator pos:line="36" pos:column="31">==<pos:position pos:line="36" pos:column="33"/></operator> <literal type="char" pos:line="36" pos:column="34">'E'<pos:position pos:line="36" pos:column="37"/></literal>
                    <operator pos:line="37" pos:column="21">&amp;&amp;<pos:position pos:line="37" pos:column="31"/></operator> <name><name pos:line="37" pos:column="24">method<pos:position pos:line="37" pos:column="30"/></name><index pos:line="37" pos:column="30">[<expr><literal type="number" pos:line="37" pos:column="31">2<pos:position pos:line="37" pos:column="32"/></literal></expr>]<pos:position pos:line="37" pos:column="33"/></index></name> <operator pos:line="37" pos:column="34">==<pos:position pos:line="37" pos:column="36"/></operator> <literal type="char" pos:line="37" pos:column="37">'A'<pos:position pos:line="37" pos:column="40"/></literal>
                    <operator pos:line="38" pos:column="21">&amp;&amp;<pos:position pos:line="38" pos:column="31"/></operator> <name><name pos:line="38" pos:column="24">method<pos:position pos:line="38" pos:column="30"/></name><index pos:line="38" pos:column="30">[<expr><literal type="number" pos:line="38" pos:column="31">3<pos:position pos:line="38" pos:column="32"/></literal></expr>]<pos:position pos:line="38" pos:column="33"/></index></name> <operator pos:line="38" pos:column="34">==<pos:position pos:line="38" pos:column="36"/></operator> <literal type="char" pos:line="38" pos:column="37">'D'<pos:position pos:line="38" pos:column="40"/></literal></expr>
                    ?<pos:position pos:line="39" pos:column="22"/></condition><then pos:line="39" pos:column="22"> <expr><name pos:line="39" pos:column="23">M_GET<pos:position pos:line="39" pos:column="28"/></name></expr> <pos:position pos:line="39" pos:column="29"/></then><else pos:line="39" pos:column="29">: <expr><name pos:line="39" pos:column="31">UNKNOWN_METHOD<pos:position pos:line="39" pos:column="45"/></name></expr></else></ternary><operator pos:line="39" pos:column="45">)<pos:position pos:line="39" pos:column="46"/></operator></expr>;<pos:position pos:line="39" pos:column="47"/></return>
        <case pos:line="40" pos:column="9">case <expr><literal type="char" pos:line="40" pos:column="14">'P'<pos:position pos:line="40" pos:column="17"/></literal></expr>:<pos:position pos:line="40" pos:column="18"/></case>
            <return pos:line="41" pos:column="13">return <expr><operator pos:line="41" pos:column="20">(<pos:position pos:line="41" pos:column="21"/></operator><ternary><condition><expr><name><name pos:line="41" pos:column="21">method<pos:position pos:line="41" pos:column="27"/></name><index pos:line="41" pos:column="27">[<expr><literal type="number" pos:line="41" pos:column="28">1<pos:position pos:line="41" pos:column="29"/></literal></expr>]<pos:position pos:line="41" pos:column="30"/></index></name> <operator pos:line="41" pos:column="31">==<pos:position pos:line="41" pos:column="33"/></operator> <literal type="char" pos:line="41" pos:column="34">'O'<pos:position pos:line="41" pos:column="37"/></literal>
                    <operator pos:line="42" pos:column="21">&amp;&amp;<pos:position pos:line="42" pos:column="31"/></operator> <name><name pos:line="42" pos:column="24">method<pos:position pos:line="42" pos:column="30"/></name><index pos:line="42" pos:column="30">[<expr><literal type="number" pos:line="42" pos:column="31">2<pos:position pos:line="42" pos:column="32"/></literal></expr>]<pos:position pos:line="42" pos:column="33"/></index></name> <operator pos:line="42" pos:column="34">==<pos:position pos:line="42" pos:column="36"/></operator> <literal type="char" pos:line="42" pos:column="37">'S'<pos:position pos:line="42" pos:column="40"/></literal>
                    <operator pos:line="43" pos:column="21">&amp;&amp;<pos:position pos:line="43" pos:column="31"/></operator> <name><name pos:line="43" pos:column="24">method<pos:position pos:line="43" pos:column="30"/></name><index pos:line="43" pos:column="30">[<expr><literal type="number" pos:line="43" pos:column="31">3<pos:position pos:line="43" pos:column="32"/></literal></expr>]<pos:position pos:line="43" pos:column="33"/></index></name> <operator pos:line="43" pos:column="34">==<pos:position pos:line="43" pos:column="36"/></operator> <literal type="char" pos:line="43" pos:column="37">'T'<pos:position pos:line="43" pos:column="40"/></literal></expr>
                    ?<pos:position pos:line="44" pos:column="22"/></condition><then pos:line="44" pos:column="22"> <expr><name pos:line="44" pos:column="23">M_POST<pos:position pos:line="44" pos:column="29"/></name></expr> <pos:position pos:line="44" pos:column="30"/></then><else pos:line="44" pos:column="30">: <expr><name pos:line="44" pos:column="32">UNKNOWN_METHOD<pos:position pos:line="44" pos:column="46"/></name></expr></else></ternary><operator pos:line="44" pos:column="46">)<pos:position pos:line="44" pos:column="47"/></operator></expr>;<pos:position pos:line="44" pos:column="48"/></return>
        <case pos:line="45" pos:column="9">case <expr><literal type="char" pos:line="45" pos:column="14">'M'<pos:position pos:line="45" pos:column="17"/></literal></expr>:<pos:position pos:line="45" pos:column="18"/></case>
            <return pos:line="46" pos:column="13">return <expr><operator pos:line="46" pos:column="20">(<pos:position pos:line="46" pos:column="21"/></operator><ternary><condition><expr><name><name pos:line="46" pos:column="21">method<pos:position pos:line="46" pos:column="27"/></name><index pos:line="46" pos:column="27">[<expr><literal type="number" pos:line="46" pos:column="28">1<pos:position pos:line="46" pos:column="29"/></literal></expr>]<pos:position pos:line="46" pos:column="30"/></index></name> <operator pos:line="46" pos:column="31">==<pos:position pos:line="46" pos:column="33"/></operator> <literal type="char" pos:line="46" pos:column="34">'O'<pos:position pos:line="46" pos:column="37"/></literal>
                    <operator pos:line="47" pos:column="21">&amp;&amp;<pos:position pos:line="47" pos:column="31"/></operator> <name><name pos:line="47" pos:column="24">method<pos:position pos:line="47" pos:column="30"/></name><index pos:line="47" pos:column="30">[<expr><literal type="number" pos:line="47" pos:column="31">2<pos:position pos:line="47" pos:column="32"/></literal></expr>]<pos:position pos:line="47" pos:column="33"/></index></name> <operator pos:line="47" pos:column="34">==<pos:position pos:line="47" pos:column="36"/></operator> <literal type="char" pos:line="47" pos:column="37">'V'<pos:position pos:line="47" pos:column="40"/></literal>
                    <operator pos:line="48" pos:column="21">&amp;&amp;<pos:position pos:line="48" pos:column="31"/></operator> <name><name pos:line="48" pos:column="24">method<pos:position pos:line="48" pos:column="30"/></name><index pos:line="48" pos:column="30">[<expr><literal type="number" pos:line="48" pos:column="31">3<pos:position pos:line="48" pos:column="32"/></literal></expr>]<pos:position pos:line="48" pos:column="33"/></index></name> <operator pos:line="48" pos:column="34">==<pos:position pos:line="48" pos:column="36"/></operator> <literal type="char" pos:line="48" pos:column="37">'E'<pos:position pos:line="48" pos:column="40"/></literal></expr>
                    ?<pos:position pos:line="49" pos:column="22"/></condition><then pos:line="49" pos:column="22"> <expr><name pos:line="49" pos:column="23">M_MOVE<pos:position pos:line="49" pos:column="29"/></name></expr> <pos:position pos:line="49" pos:column="30"/></then><else pos:line="49" pos:column="30">: <expr><name pos:line="49" pos:column="32">UNKNOWN_METHOD<pos:position pos:line="49" pos:column="46"/></name></expr></else></ternary><operator pos:line="49" pos:column="46">)<pos:position pos:line="49" pos:column="47"/></operator></expr>;<pos:position pos:line="49" pos:column="48"/></return>
        <case pos:line="50" pos:column="9">case <expr><literal type="char" pos:line="50" pos:column="14">'L'<pos:position pos:line="50" pos:column="17"/></literal></expr>:<pos:position pos:line="50" pos:column="18"/></case>
            <return pos:line="51" pos:column="13">return <expr><operator pos:line="51" pos:column="20">(<pos:position pos:line="51" pos:column="21"/></operator><ternary><condition><expr><name><name pos:line="51" pos:column="21">method<pos:position pos:line="51" pos:column="27"/></name><index pos:line="51" pos:column="27">[<expr><literal type="number" pos:line="51" pos:column="28">1<pos:position pos:line="51" pos:column="29"/></literal></expr>]<pos:position pos:line="51" pos:column="30"/></index></name> <operator pos:line="51" pos:column="31">==<pos:position pos:line="51" pos:column="33"/></operator> <literal type="char" pos:line="51" pos:column="34">'O'<pos:position pos:line="51" pos:column="37"/></literal>
                    <operator pos:line="52" pos:column="21">&amp;&amp;<pos:position pos:line="52" pos:column="31"/></operator> <name><name pos:line="52" pos:column="24">method<pos:position pos:line="52" pos:column="30"/></name><index pos:line="52" pos:column="30">[<expr><literal type="number" pos:line="52" pos:column="31">2<pos:position pos:line="52" pos:column="32"/></literal></expr>]<pos:position pos:line="52" pos:column="33"/></index></name> <operator pos:line="52" pos:column="34">==<pos:position pos:line="52" pos:column="36"/></operator> <literal type="char" pos:line="52" pos:column="37">'C'<pos:position pos:line="52" pos:column="40"/></literal>
                    <operator pos:line="53" pos:column="21">&amp;&amp;<pos:position pos:line="53" pos:column="31"/></operator> <name><name pos:line="53" pos:column="24">method<pos:position pos:line="53" pos:column="30"/></name><index pos:line="53" pos:column="30">[<expr><literal type="number" pos:line="53" pos:column="31">3<pos:position pos:line="53" pos:column="32"/></literal></expr>]<pos:position pos:line="53" pos:column="33"/></index></name> <operator pos:line="53" pos:column="34">==<pos:position pos:line="53" pos:column="36"/></operator> <literal type="char" pos:line="53" pos:column="37">'K'<pos:position pos:line="53" pos:column="40"/></literal></expr>
                    ?<pos:position pos:line="54" pos:column="22"/></condition><then pos:line="54" pos:column="22"> <expr><name pos:line="54" pos:column="23">M_LOCK<pos:position pos:line="54" pos:column="29"/></name></expr> <pos:position pos:line="54" pos:column="30"/></then><else pos:line="54" pos:column="30">: <expr><name pos:line="54" pos:column="32">UNKNOWN_METHOD<pos:position pos:line="54" pos:column="46"/></name></expr></else></ternary><operator pos:line="54" pos:column="46">)<pos:position pos:line="54" pos:column="47"/></operator></expr>;<pos:position pos:line="54" pos:column="48"/></return>
        <case pos:line="55" pos:column="9">case <expr><literal type="char" pos:line="55" pos:column="14">'C'<pos:position pos:line="55" pos:column="17"/></literal></expr>:<pos:position pos:line="55" pos:column="18"/></case>
            <return pos:line="56" pos:column="13">return <expr><operator pos:line="56" pos:column="20">(<pos:position pos:line="56" pos:column="21"/></operator><ternary><condition><expr><name><name pos:line="56" pos:column="21">method<pos:position pos:line="56" pos:column="27"/></name><index pos:line="56" pos:column="27">[<expr><literal type="number" pos:line="56" pos:column="28">1<pos:position pos:line="56" pos:column="29"/></literal></expr>]<pos:position pos:line="56" pos:column="30"/></index></name> <operator pos:line="56" pos:column="31">==<pos:position pos:line="56" pos:column="33"/></operator> <literal type="char" pos:line="56" pos:column="34">'O'<pos:position pos:line="56" pos:column="37"/></literal>
                    <operator pos:line="57" pos:column="21">&amp;&amp;<pos:position pos:line="57" pos:column="31"/></operator> <name><name pos:line="57" pos:column="24">method<pos:position pos:line="57" pos:column="30"/></name><index pos:line="57" pos:column="30">[<expr><literal type="number" pos:line="57" pos:column="31">2<pos:position pos:line="57" pos:column="32"/></literal></expr>]<pos:position pos:line="57" pos:column="33"/></index></name> <operator pos:line="57" pos:column="34">==<pos:position pos:line="57" pos:column="36"/></operator> <literal type="char" pos:line="57" pos:column="37">'P'<pos:position pos:line="57" pos:column="40"/></literal>
                    <operator pos:line="58" pos:column="21">&amp;&amp;<pos:position pos:line="58" pos:column="31"/></operator> <name><name pos:line="58" pos:column="24">method<pos:position pos:line="58" pos:column="30"/></name><index pos:line="58" pos:column="30">[<expr><literal type="number" pos:line="58" pos:column="31">3<pos:position pos:line="58" pos:column="32"/></literal></expr>]<pos:position pos:line="58" pos:column="33"/></index></name> <operator pos:line="58" pos:column="34">==<pos:position pos:line="58" pos:column="36"/></operator> <literal type="char" pos:line="58" pos:column="37">'Y'<pos:position pos:line="58" pos:column="40"/></literal></expr>
                    ?<pos:position pos:line="59" pos:column="22"/></condition><then pos:line="59" pos:column="22"> <expr><name pos:line="59" pos:column="23">M_COPY<pos:position pos:line="59" pos:column="29"/></name></expr> <pos:position pos:line="59" pos:column="30"/></then><else pos:line="59" pos:column="30">: <expr><name pos:line="59" pos:column="32">UNKNOWN_METHOD<pos:position pos:line="59" pos:column="46"/></name></expr></else></ternary><operator pos:line="59" pos:column="46">)<pos:position pos:line="59" pos:column="47"/></operator></expr>;<pos:position pos:line="59" pos:column="48"/></return>
        <default pos:line="60" pos:column="9">default:<pos:position pos:line="60" pos:column="17"/></default>
            <return pos:line="61" pos:column="13">return <expr><name pos:line="61" pos:column="20">UNKNOWN_METHOD<pos:position pos:line="61" pos:column="34"/></name></expr>;<pos:position pos:line="61" pos:column="35"/></return>
        }<pos:position pos:line="62" pos:column="10"/></block></switch>

    <case pos:line="64" pos:column="5">case <expr><literal type="number" pos:line="64" pos:column="10">5<pos:position pos:line="64" pos:column="11"/></literal></expr>:<pos:position pos:line="64" pos:column="12"/></case>
        <switch pos:line="65" pos:column="9">switch <condition pos:line="65" pos:column="16">(<expr><name><name pos:line="65" pos:column="17">method<pos:position pos:line="65" pos:column="23"/></name><index pos:line="65" pos:column="23">[<expr><literal type="number" pos:line="65" pos:column="24">2<pos:position pos:line="65" pos:column="25"/></literal></expr>]<pos:position pos:line="65" pos:column="26"/></index></name></expr>)<pos:position pos:line="65" pos:column="27"/></condition>
        <block pos:line="66" pos:column="9">{
        <case pos:line="67" pos:column="9">case <expr><literal type="char" pos:line="67" pos:column="14">'T'<pos:position pos:line="67" pos:column="17"/></literal></expr>:<pos:position pos:line="67" pos:column="18"/></case>
            <return pos:line="68" pos:column="13">return <expr><operator pos:line="68" pos:column="20">(<pos:position pos:line="68" pos:column="21"/></operator><ternary><condition><expr><call><name pos:line="68" pos:column="21">memcmp<pos:position pos:line="68" pos:column="27"/></name><argument_list pos:line="68" pos:column="27">(<argument><expr><name pos:line="68" pos:column="28">method<pos:position pos:line="68" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="36">"PATCH"<pos:position pos:line="68" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="45">5<pos:position pos:line="68" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="47"/></argument_list></call> <operator pos:line="68" pos:column="48">==<pos:position pos:line="68" pos:column="50"/></operator> <literal type="number" pos:line="68" pos:column="51">0<pos:position pos:line="68" pos:column="52"/></literal></expr>
                    ?<pos:position pos:line="69" pos:column="22"/></condition><then pos:line="69" pos:column="22"> <expr><name pos:line="69" pos:column="23">M_PATCH<pos:position pos:line="69" pos:column="30"/></name></expr> <pos:position pos:line="69" pos:column="31"/></then><else pos:line="69" pos:column="31">: <expr><name pos:line="69" pos:column="33">UNKNOWN_METHOD<pos:position pos:line="69" pos:column="47"/></name></expr></else></ternary><operator pos:line="69" pos:column="47">)<pos:position pos:line="69" pos:column="48"/></operator></expr>;<pos:position pos:line="69" pos:column="49"/></return>
        <case pos:line="70" pos:column="9">case <expr><literal type="char" pos:line="70" pos:column="14">'R'<pos:position pos:line="70" pos:column="17"/></literal></expr>:<pos:position pos:line="70" pos:column="18"/></case>
            <return pos:line="71" pos:column="13">return <expr><operator pos:line="71" pos:column="20">(<pos:position pos:line="71" pos:column="21"/></operator><ternary><condition><expr><call><name pos:line="71" pos:column="21">memcmp<pos:position pos:line="71" pos:column="27"/></name><argument_list pos:line="71" pos:column="27">(<argument><expr><name pos:line="71" pos:column="28">method<pos:position pos:line="71" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="36">"MERGE"<pos:position pos:line="71" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="45">5<pos:position pos:line="71" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="47"/></argument_list></call> <operator pos:line="71" pos:column="48">==<pos:position pos:line="71" pos:column="50"/></operator> <literal type="number" pos:line="71" pos:column="51">0<pos:position pos:line="71" pos:column="52"/></literal></expr>
                    ?<pos:position pos:line="72" pos:column="22"/></condition><then pos:line="72" pos:column="22"> <expr><name pos:line="72" pos:column="23">M_MERGE<pos:position pos:line="72" pos:column="30"/></name></expr> <pos:position pos:line="72" pos:column="31"/></then><else pos:line="72" pos:column="31">: <expr><name pos:line="72" pos:column="33">UNKNOWN_METHOD<pos:position pos:line="72" pos:column="47"/></name></expr></else></ternary><operator pos:line="72" pos:column="47">)<pos:position pos:line="72" pos:column="48"/></operator></expr>;<pos:position pos:line="72" pos:column="49"/></return>
        <case pos:line="73" pos:column="9">case <expr><literal type="char" pos:line="73" pos:column="14">'C'<pos:position pos:line="73" pos:column="17"/></literal></expr>:<pos:position pos:line="73" pos:column="18"/></case>
            <return pos:line="74" pos:column="13">return <expr><operator pos:line="74" pos:column="20">(<pos:position pos:line="74" pos:column="21"/></operator><ternary><condition><expr><call><name pos:line="74" pos:column="21">memcmp<pos:position pos:line="74" pos:column="27"/></name><argument_list pos:line="74" pos:column="27">(<argument><expr><name pos:line="74" pos:column="28">method<pos:position pos:line="74" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="36">"MKCOL"<pos:position pos:line="74" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="45">5<pos:position pos:line="74" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="47"/></argument_list></call> <operator pos:line="74" pos:column="48">==<pos:position pos:line="74" pos:column="50"/></operator> <literal type="number" pos:line="74" pos:column="51">0<pos:position pos:line="74" pos:column="52"/></literal></expr>
                    ?<pos:position pos:line="75" pos:column="22"/></condition><then pos:line="75" pos:column="22"> <expr><name pos:line="75" pos:column="23">M_MKCOL<pos:position pos:line="75" pos:column="30"/></name></expr> <pos:position pos:line="75" pos:column="31"/></then><else pos:line="75" pos:column="31">: <expr><name pos:line="75" pos:column="33">UNKNOWN_METHOD<pos:position pos:line="75" pos:column="47"/></name></expr></else></ternary><operator pos:line="75" pos:column="47">)<pos:position pos:line="75" pos:column="48"/></operator></expr>;<pos:position pos:line="75" pos:column="49"/></return>
        <case pos:line="76" pos:column="9">case <expr><literal type="char" pos:line="76" pos:column="14">'B'<pos:position pos:line="76" pos:column="17"/></literal></expr>:<pos:position pos:line="76" pos:column="18"/></case>
            <return pos:line="77" pos:column="13">return <expr><operator pos:line="77" pos:column="20">(<pos:position pos:line="77" pos:column="21"/></operator><ternary><condition><expr><call><name pos:line="77" pos:column="21">memcmp<pos:position pos:line="77" pos:column="27"/></name><argument_list pos:line="77" pos:column="27">(<argument><expr><name pos:line="77" pos:column="28">method<pos:position pos:line="77" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="36">"LABEL"<pos:position pos:line="77" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="45">5<pos:position pos:line="77" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="47"/></argument_list></call> <operator pos:line="77" pos:column="48">==<pos:position pos:line="77" pos:column="50"/></operator> <literal type="number" pos:line="77" pos:column="51">0<pos:position pos:line="77" pos:column="52"/></literal></expr>
                    ?<pos:position pos:line="78" pos:column="22"/></condition><then pos:line="78" pos:column="22"> <expr><name pos:line="78" pos:column="23">M_LABEL<pos:position pos:line="78" pos:column="30"/></name></expr> <pos:position pos:line="78" pos:column="31"/></then><else pos:line="78" pos:column="31">: <expr><name pos:line="78" pos:column="33">UNKNOWN_METHOD<pos:position pos:line="78" pos:column="47"/></name></expr></else></ternary><operator pos:line="78" pos:column="47">)<pos:position pos:line="78" pos:column="48"/></operator></expr>;<pos:position pos:line="78" pos:column="49"/></return>
        <case pos:line="79" pos:column="9">case <expr><literal type="char" pos:line="79" pos:column="14">'A'<pos:position pos:line="79" pos:column="17"/></literal></expr>:<pos:position pos:line="79" pos:column="18"/></case>
            <return pos:line="80" pos:column="13">return <expr><operator pos:line="80" pos:column="20">(<pos:position pos:line="80" pos:column="21"/></operator><ternary><condition><expr><call><name pos:line="80" pos:column="21">memcmp<pos:position pos:line="80" pos:column="27"/></name><argument_list pos:line="80" pos:column="27">(<argument><expr><name pos:line="80" pos:column="28">method<pos:position pos:line="80" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="36">"TRACE"<pos:position pos:line="80" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="45">5<pos:position pos:line="80" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="47"/></argument_list></call> <operator pos:line="80" pos:column="48">==<pos:position pos:line="80" pos:column="50"/></operator> <literal type="number" pos:line="80" pos:column="51">0<pos:position pos:line="80" pos:column="52"/></literal></expr>
                    ?<pos:position pos:line="81" pos:column="22"/></condition><then pos:line="81" pos:column="22"> <expr><name pos:line="81" pos:column="23">M_TRACE<pos:position pos:line="81" pos:column="30"/></name></expr> <pos:position pos:line="81" pos:column="31"/></then><else pos:line="81" pos:column="31">: <expr><name pos:line="81" pos:column="33">UNKNOWN_METHOD<pos:position pos:line="81" pos:column="47"/></name></expr></else></ternary><operator pos:line="81" pos:column="47">)<pos:position pos:line="81" pos:column="48"/></operator></expr>;<pos:position pos:line="81" pos:column="49"/></return>
        <default pos:line="82" pos:column="9">default:<pos:position pos:line="82" pos:column="17"/></default>
            <return pos:line="83" pos:column="13">return <expr><name pos:line="83" pos:column="20">UNKNOWN_METHOD<pos:position pos:line="83" pos:column="34"/></name></expr>;<pos:position pos:line="83" pos:column="35"/></return>
        }<pos:position pos:line="84" pos:column="10"/></block></switch>

    <case pos:line="86" pos:column="5">case <expr><literal type="number" pos:line="86" pos:column="10">6<pos:position pos:line="86" pos:column="11"/></literal></expr>:<pos:position pos:line="86" pos:column="12"/></case>
        <switch pos:line="87" pos:column="9">switch <condition pos:line="87" pos:column="16">(<expr><name><name pos:line="87" pos:column="17">method<pos:position pos:line="87" pos:column="23"/></name><index pos:line="87" pos:column="23">[<expr><literal type="number" pos:line="87" pos:column="24">0<pos:position pos:line="87" pos:column="25"/></literal></expr>]<pos:position pos:line="87" pos:column="26"/></index></name></expr>)<pos:position pos:line="87" pos:column="27"/></condition>
        <block pos:line="88" pos:column="9">{
        <case pos:line="89" pos:column="9">case <expr><literal type="char" pos:line="89" pos:column="14">'U'<pos:position pos:line="89" pos:column="17"/></literal></expr>:<pos:position pos:line="89" pos:column="18"/></case>
            <switch pos:line="90" pos:column="13">switch <condition pos:line="90" pos:column="20">(<expr><name><name pos:line="90" pos:column="21">method<pos:position pos:line="90" pos:column="27"/></name><index pos:line="90" pos:column="27">[<expr><literal type="number" pos:line="90" pos:column="28">5<pos:position pos:line="90" pos:column="29"/></literal></expr>]<pos:position pos:line="90" pos:column="30"/></index></name></expr>)<pos:position pos:line="90" pos:column="31"/></condition>
            <block pos:line="91" pos:column="13">{
            <case pos:line="92" pos:column="13">case <expr><literal type="char" pos:line="92" pos:column="18">'K'<pos:position pos:line="92" pos:column="21"/></literal></expr>:<pos:position pos:line="92" pos:column="22"/></case>
                <return pos:line="93" pos:column="17">return <expr><operator pos:line="93" pos:column="24">(<pos:position pos:line="93" pos:column="25"/></operator><ternary><condition><expr><call><name pos:line="93" pos:column="25">memcmp<pos:position pos:line="93" pos:column="31"/></name><argument_list pos:line="93" pos:column="31">(<argument><expr><name pos:line="93" pos:column="32">method<pos:position pos:line="93" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="40">"UNLOCK"<pos:position pos:line="93" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="50">6<pos:position pos:line="93" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="52"/></argument_list></call> <operator pos:line="93" pos:column="53">==<pos:position pos:line="93" pos:column="55"/></operator> <literal type="number" pos:line="93" pos:column="56">0<pos:position pos:line="93" pos:column="57"/></literal></expr>
                        ?<pos:position pos:line="94" pos:column="26"/></condition><then pos:line="94" pos:column="26"> <expr><name pos:line="94" pos:column="27">M_UNLOCK<pos:position pos:line="94" pos:column="35"/></name></expr> <pos:position pos:line="94" pos:column="36"/></then><else pos:line="94" pos:column="36">: <expr><name pos:line="94" pos:column="38">UNKNOWN_METHOD<pos:position pos:line="94" pos:column="52"/></name></expr></else></ternary><operator pos:line="94" pos:column="52">)<pos:position pos:line="94" pos:column="53"/></operator></expr>;<pos:position pos:line="94" pos:column="54"/></return>
            <case pos:line="95" pos:column="13">case <expr><literal type="char" pos:line="95" pos:column="18">'E'<pos:position pos:line="95" pos:column="21"/></literal></expr>:<pos:position pos:line="95" pos:column="22"/></case>
                <return pos:line="96" pos:column="17">return <expr><operator pos:line="96" pos:column="24">(<pos:position pos:line="96" pos:column="25"/></operator><ternary><condition><expr><call><name pos:line="96" pos:column="25">memcmp<pos:position pos:line="96" pos:column="31"/></name><argument_list pos:line="96" pos:column="31">(<argument><expr><name pos:line="96" pos:column="32">method<pos:position pos:line="96" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="40">"UPDATE"<pos:position pos:line="96" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="96" pos:column="50">6<pos:position pos:line="96" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="52"/></argument_list></call> <operator pos:line="96" pos:column="53">==<pos:position pos:line="96" pos:column="55"/></operator> <literal type="number" pos:line="96" pos:column="56">0<pos:position pos:line="96" pos:column="57"/></literal></expr>
                        ?<pos:position pos:line="97" pos:column="26"/></condition><then pos:line="97" pos:column="26"> <expr><name pos:line="97" pos:column="27">M_UPDATE<pos:position pos:line="97" pos:column="35"/></name></expr> <pos:position pos:line="97" pos:column="36"/></then><else pos:line="97" pos:column="36">: <expr><name pos:line="97" pos:column="38">UNKNOWN_METHOD<pos:position pos:line="97" pos:column="52"/></name></expr></else></ternary><operator pos:line="97" pos:column="52">)<pos:position pos:line="97" pos:column="53"/></operator></expr>;<pos:position pos:line="97" pos:column="54"/></return>
            <default pos:line="98" pos:column="13">default:<pos:position pos:line="98" pos:column="21"/></default>
                <return pos:line="99" pos:column="17">return <expr><name pos:line="99" pos:column="24">UNKNOWN_METHOD<pos:position pos:line="99" pos:column="38"/></name></expr>;<pos:position pos:line="99" pos:column="39"/></return>
            }<pos:position pos:line="100" pos:column="14"/></block></switch>
        <case pos:line="101" pos:column="9">case <expr><literal type="char" pos:line="101" pos:column="14">'R'<pos:position pos:line="101" pos:column="17"/></literal></expr>:<pos:position pos:line="101" pos:column="18"/></case>
            <return pos:line="102" pos:column="13">return <expr><operator pos:line="102" pos:column="20">(<pos:position pos:line="102" pos:column="21"/></operator><ternary><condition><expr><call><name pos:line="102" pos:column="21">memcmp<pos:position pos:line="102" pos:column="27"/></name><argument_list pos:line="102" pos:column="27">(<argument><expr><name pos:line="102" pos:column="28">method<pos:position pos:line="102" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="36">"REPORT"<pos:position pos:line="102" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="46">6<pos:position pos:line="102" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="48"/></argument_list></call> <operator pos:line="102" pos:column="49">==<pos:position pos:line="102" pos:column="51"/></operator> <literal type="number" pos:line="102" pos:column="52">0<pos:position pos:line="102" pos:column="53"/></literal></expr>
                    ?<pos:position pos:line="103" pos:column="22"/></condition><then pos:line="103" pos:column="22"> <expr><name pos:line="103" pos:column="23">M_REPORT<pos:position pos:line="103" pos:column="31"/></name></expr> <pos:position pos:line="103" pos:column="32"/></then><else pos:line="103" pos:column="32">: <expr><name pos:line="103" pos:column="34">UNKNOWN_METHOD<pos:position pos:line="103" pos:column="48"/></name></expr></else></ternary><operator pos:line="103" pos:column="48">)<pos:position pos:line="103" pos:column="49"/></operator></expr>;<pos:position pos:line="103" pos:column="50"/></return>
        <case pos:line="104" pos:column="9">case <expr><literal type="char" pos:line="104" pos:column="14">'D'<pos:position pos:line="104" pos:column="17"/></literal></expr>:<pos:position pos:line="104" pos:column="18"/></case>
            <return pos:line="105" pos:column="13">return <expr><operator pos:line="105" pos:column="20">(<pos:position pos:line="105" pos:column="21"/></operator><ternary><condition><expr><call><name pos:line="105" pos:column="21">memcmp<pos:position pos:line="105" pos:column="27"/></name><argument_list pos:line="105" pos:column="27">(<argument><expr><name pos:line="105" pos:column="28">method<pos:position pos:line="105" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="36">"DELETE"<pos:position pos:line="105" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="105" pos:column="46">6<pos:position pos:line="105" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="48"/></argument_list></call> <operator pos:line="105" pos:column="49">==<pos:position pos:line="105" pos:column="51"/></operator> <literal type="number" pos:line="105" pos:column="52">0<pos:position pos:line="105" pos:column="53"/></literal></expr>
                    ?<pos:position pos:line="106" pos:column="22"/></condition><then pos:line="106" pos:column="22"> <expr><name pos:line="106" pos:column="23">M_DELETE<pos:position pos:line="106" pos:column="31"/></name></expr> <pos:position pos:line="106" pos:column="32"/></then><else pos:line="106" pos:column="32">: <expr><name pos:line="106" pos:column="34">UNKNOWN_METHOD<pos:position pos:line="106" pos:column="48"/></name></expr></else></ternary><operator pos:line="106" pos:column="48">)<pos:position pos:line="106" pos:column="49"/></operator></expr>;<pos:position pos:line="106" pos:column="50"/></return>
        <default pos:line="107" pos:column="9">default:<pos:position pos:line="107" pos:column="17"/></default>
            <return pos:line="108" pos:column="13">return <expr><name pos:line="108" pos:column="20">UNKNOWN_METHOD<pos:position pos:line="108" pos:column="34"/></name></expr>;<pos:position pos:line="108" pos:column="35"/></return>
        }<pos:position pos:line="109" pos:column="10"/></block></switch>

    <case pos:line="111" pos:column="5">case <expr><literal type="number" pos:line="111" pos:column="10">7<pos:position pos:line="111" pos:column="11"/></literal></expr>:<pos:position pos:line="111" pos:column="12"/></case>
        <switch pos:line="112" pos:column="9">switch <condition pos:line="112" pos:column="16">(<expr><name><name pos:line="112" pos:column="17">method<pos:position pos:line="112" pos:column="23"/></name><index pos:line="112" pos:column="23">[<expr><literal type="number" pos:line="112" pos:column="24">1<pos:position pos:line="112" pos:column="25"/></literal></expr>]<pos:position pos:line="112" pos:column="26"/></index></name></expr>)<pos:position pos:line="112" pos:column="27"/></condition>
        <block pos:line="113" pos:column="9">{
        <case pos:line="114" pos:column="9">case <expr><literal type="char" pos:line="114" pos:column="14">'P'<pos:position pos:line="114" pos:column="17"/></literal></expr>:<pos:position pos:line="114" pos:column="18"/></case>
            <return pos:line="115" pos:column="13">return <expr><operator pos:line="115" pos:column="20">(<pos:position pos:line="115" pos:column="21"/></operator><ternary><condition><expr><call><name pos:line="115" pos:column="21">memcmp<pos:position pos:line="115" pos:column="27"/></name><argument_list pos:line="115" pos:column="27">(<argument><expr><name pos:line="115" pos:column="28">method<pos:position pos:line="115" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="36">"OPTIONS"<pos:position pos:line="115" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="115" pos:column="47">7<pos:position pos:line="115" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="49"/></argument_list></call> <operator pos:line="115" pos:column="50">==<pos:position pos:line="115" pos:column="52"/></operator> <literal type="number" pos:line="115" pos:column="53">0<pos:position pos:line="115" pos:column="54"/></literal></expr>
                    ?<pos:position pos:line="116" pos:column="22"/></condition><then pos:line="116" pos:column="22"> <expr><name pos:line="116" pos:column="23">M_OPTIONS<pos:position pos:line="116" pos:column="32"/></name></expr> <pos:position pos:line="116" pos:column="33"/></then><else pos:line="116" pos:column="33">: <expr><name pos:line="116" pos:column="35">UNKNOWN_METHOD<pos:position pos:line="116" pos:column="49"/></name></expr></else></ternary><operator pos:line="116" pos:column="49">)<pos:position pos:line="116" pos:column="50"/></operator></expr>;<pos:position pos:line="116" pos:column="51"/></return>
        <case pos:line="117" pos:column="9">case <expr><literal type="char" pos:line="117" pos:column="14">'O'<pos:position pos:line="117" pos:column="17"/></literal></expr>:<pos:position pos:line="117" pos:column="18"/></case>
            <return pos:line="118" pos:column="13">return <expr><operator pos:line="118" pos:column="20">(<pos:position pos:line="118" pos:column="21"/></operator><ternary><condition><expr><call><name pos:line="118" pos:column="21">memcmp<pos:position pos:line="118" pos:column="27"/></name><argument_list pos:line="118" pos:column="27">(<argument><expr><name pos:line="118" pos:column="28">method<pos:position pos:line="118" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="36">"CONNECT"<pos:position pos:line="118" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="47">7<pos:position pos:line="118" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="49"/></argument_list></call> <operator pos:line="118" pos:column="50">==<pos:position pos:line="118" pos:column="52"/></operator> <literal type="number" pos:line="118" pos:column="53">0<pos:position pos:line="118" pos:column="54"/></literal></expr>
                    ?<pos:position pos:line="119" pos:column="22"/></condition><then pos:line="119" pos:column="22"> <expr><name pos:line="119" pos:column="23">M_CONNECT<pos:position pos:line="119" pos:column="32"/></name></expr> <pos:position pos:line="119" pos:column="33"/></then><else pos:line="119" pos:column="33">: <expr><name pos:line="119" pos:column="35">UNKNOWN_METHOD<pos:position pos:line="119" pos:column="49"/></name></expr></else></ternary><operator pos:line="119" pos:column="49">)<pos:position pos:line="119" pos:column="50"/></operator></expr>;<pos:position pos:line="119" pos:column="51"/></return>
        <case pos:line="120" pos:column="9">case <expr><literal type="char" pos:line="120" pos:column="14">'H'<pos:position pos:line="120" pos:column="17"/></literal></expr>:<pos:position pos:line="120" pos:column="18"/></case>
            <return pos:line="121" pos:column="13">return <expr><operator pos:line="121" pos:column="20">(<pos:position pos:line="121" pos:column="21"/></operator><ternary><condition><expr><call><name pos:line="121" pos:column="21">memcmp<pos:position pos:line="121" pos:column="27"/></name><argument_list pos:line="121" pos:column="27">(<argument><expr><name pos:line="121" pos:column="28">method<pos:position pos:line="121" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="36">"CHECKIN"<pos:position pos:line="121" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="47">7<pos:position pos:line="121" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="49"/></argument_list></call> <operator pos:line="121" pos:column="50">==<pos:position pos:line="121" pos:column="52"/></operator> <literal type="number" pos:line="121" pos:column="53">0<pos:position pos:line="121" pos:column="54"/></literal></expr>
                    ?<pos:position pos:line="122" pos:column="22"/></condition><then pos:line="122" pos:column="22"> <expr><name pos:line="122" pos:column="23">M_CHECKIN<pos:position pos:line="122" pos:column="32"/></name></expr> <pos:position pos:line="122" pos:column="33"/></then><else pos:line="122" pos:column="33">: <expr><name pos:line="122" pos:column="35">UNKNOWN_METHOD<pos:position pos:line="122" pos:column="49"/></name></expr></else></ternary><operator pos:line="122" pos:column="49">)<pos:position pos:line="122" pos:column="50"/></operator></expr>;<pos:position pos:line="122" pos:column="51"/></return>
        <default pos:line="123" pos:column="9">default:<pos:position pos:line="123" pos:column="17"/></default></block></switch></block></switch></block></function>
</unit>

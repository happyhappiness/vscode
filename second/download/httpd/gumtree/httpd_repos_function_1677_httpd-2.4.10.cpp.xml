<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1677_httpd-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">find_item<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">content_type<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">content_encoding<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">path<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">apr_array_header_t<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">list<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">int<pos:position pos:line="2" pos:column="65"/></name></type> <name pos:line="2" pos:column="66">path_only<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">item<pos:position pos:line="4" pos:column="16"/></name></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">items<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator>struct <name pos:line="4" pos:column="34">item<pos:position pos:line="4" pos:column="38"/></name> <operator pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></operator><operator pos:line="4" pos:column="40">)<pos:position pos:line="4" pos:column="41"/></operator> <name><name pos:line="4" pos:column="42">list<pos:position pos:line="4" pos:column="46"/></name><operator pos:line="4" pos:column="46">-&gt;<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="48">elts<pos:position pos:line="4" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">i<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr>;<pos:position pos:line="7" pos:column="16"/></init> <condition><expr><name pos:line="7" pos:column="17">i<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&lt;<pos:position pos:line="7" pos:column="23"/></operator> <name><name pos:line="7" pos:column="21">list<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">nelts<pos:position pos:line="7" pos:column="32"/></name></name></expr>;<pos:position pos:line="7" pos:column="33"/></condition> <incr><expr><operator pos:line="7" pos:column="34">++<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="36">i<pos:position pos:line="7" pos:column="37"/></name></expr></incr>)<pos:position pos:line="7" pos:column="38"/></control> <block pos:line="7" pos:column="39">{
        <decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">item<pos:position pos:line="8" pos:column="20"/></name></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">p<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><operator pos:line="8" pos:column="26">&amp;<pos:position pos:line="8" pos:column="31"/></operator><name><name pos:line="8" pos:column="27">items<pos:position pos:line="8" pos:column="32"/></name><index pos:line="8" pos:column="32">[<expr><name pos:line="8" pos:column="33">i<pos:position pos:line="8" pos:column="34"/></name></expr>]<pos:position pos:line="8" pos:column="35"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>

        <comment type="block" pos:line="10" pos:column="9">/* Special cased for ^^DIRECTORY^^ and ^^BLANKICON^^ */</comment>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="14">path<pos:position pos:line="11" pos:column="18"/></name><index pos:line="11" pos:column="18">[<expr><literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>]<pos:position pos:line="11" pos:column="21"/></index></name> <operator pos:line="11" pos:column="22">==<pos:position pos:line="11" pos:column="24"/></operator> <literal type="char" pos:line="11" pos:column="25">'^'<pos:position pos:line="11" pos:column="28"/></literal><operator pos:line="11" pos:column="28">)<pos:position pos:line="11" pos:column="29"/></operator> <operator pos:line="11" pos:column="30">||<pos:position pos:line="11" pos:column="32"/></operator> <operator pos:line="11" pos:column="33">(<pos:position pos:line="11" pos:column="34"/></operator><operator pos:line="11" pos:column="34">!<pos:position pos:line="11" pos:column="35"/></operator><call><name pos:line="11" pos:column="35">ap_strcmp_match<pos:position pos:line="11" pos:column="50"/></name><argument_list pos:line="11" pos:column="50">(<argument><expr><name pos:line="11" pos:column="51">path<pos:position pos:line="11" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="57">p<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">-&gt;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="60">apply_path<pos:position pos:line="11" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call><operator pos:line="11" pos:column="71">)<pos:position pos:line="11" pos:column="72"/></operator></expr>)<pos:position pos:line="11" pos:column="73"/></condition><then pos:line="11" pos:column="73"> <block pos:line="11" pos:column="74">{
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><operator pos:line="12" pos:column="17">!<pos:position pos:line="12" pos:column="18"/></operator><operator pos:line="12" pos:column="18">*<pos:position pos:line="12" pos:column="19"/></operator><operator pos:line="12" pos:column="19">(<pos:position pos:line="12" pos:column="20"/></operator><name><name pos:line="12" pos:column="20">p<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">apply_to<pos:position pos:line="12" pos:column="31"/></name></name><operator pos:line="12" pos:column="31">)<pos:position pos:line="12" pos:column="32"/></operator></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33"> <block pos:line="12" pos:column="34">{
                <return pos:line="13" pos:column="17">return <expr><name><name pos:line="13" pos:column="24">p<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">data<pos:position pos:line="13" pos:column="31"/></name></name></expr>;<pos:position pos:line="13" pos:column="32"/></return>
            }<pos:position pos:line="14" pos:column="14"/></block></then>
            <elseif pos:line="15" pos:column="13">else <if pos:line="15" pos:column="18">if <condition pos:line="15" pos:column="21">(<expr><name><name pos:line="15" pos:column="22">p<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">type<pos:position pos:line="15" pos:column="29"/></name></name> <operator pos:line="15" pos:column="30">==<pos:position pos:line="15" pos:column="32"/></operator> <name pos:line="15" pos:column="33">BY_PATH<pos:position pos:line="15" pos:column="40"/></name> <operator pos:line="15" pos:column="41">||<pos:position pos:line="15" pos:column="43"/></operator> <name><name pos:line="15" pos:column="44">path<pos:position pos:line="15" pos:column="48"/></name><index pos:line="15" pos:column="48">[<expr><literal type="number" pos:line="15" pos:column="49">0<pos:position pos:line="15" pos:column="50"/></literal></expr>]<pos:position pos:line="15" pos:column="51"/></index></name> <operator pos:line="15" pos:column="52">==<pos:position pos:line="15" pos:column="54"/></operator> <literal type="char" pos:line="15" pos:column="55">'^'<pos:position pos:line="15" pos:column="58"/></literal></expr>)<pos:position pos:line="15" pos:column="59"/></condition><then pos:line="15" pos:column="59"> <block pos:line="15" pos:column="60">{
                <if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><call><name pos:line="16" pos:column="22">ap_strcmp_match<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><name pos:line="16" pos:column="38">path<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="44">p<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">apply_to<pos:position pos:line="16" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="57"/></condition><then pos:line="16" pos:column="57"> <block pos:line="16" pos:column="58">{
                    <return pos:line="17" pos:column="21">return <expr><name><name pos:line="17" pos:column="28">p<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">data<pos:position pos:line="17" pos:column="35"/></name></name></expr>;<pos:position pos:line="17" pos:column="36"/></return>
                }<pos:position pos:line="18" pos:column="18"/></block></then></if>
            }<pos:position pos:line="19" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="20" pos:column="13">else <if pos:line="20" pos:column="18">if <condition pos:line="20" pos:column="21">(<expr><operator pos:line="20" pos:column="22">!<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">path_only<pos:position pos:line="20" pos:column="32"/></name></expr>)<pos:position pos:line="20" pos:column="33"/></condition><then pos:line="20" pos:column="33"> <block pos:line="20" pos:column="34">{
                <if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">!<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">content_encoding<pos:position pos:line="21" pos:column="38"/></name></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39"> <block pos:line="21" pos:column="40">{
                    <if pos:line="22" pos:column="21">if <condition pos:line="22" pos:column="24">(<expr><name><name pos:line="22" pos:column="25">p<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">-&gt;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="28">type<pos:position pos:line="22" pos:column="32"/></name></name> <operator pos:line="22" pos:column="33">==<pos:position pos:line="22" pos:column="35"/></operator> <name pos:line="22" pos:column="36">BY_TYPE<pos:position pos:line="22" pos:column="43"/></name></expr>)<pos:position pos:line="22" pos:column="44"/></condition><then pos:line="22" pos:column="44"> <block pos:line="22" pos:column="45">{
                        <if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><name pos:line="23" pos:column="29">content_type<pos:position pos:line="23" pos:column="41"/></name>
                            <operator pos:line="24" pos:column="29">&amp;&amp;<pos:position pos:line="24" pos:column="39"/></operator> <operator pos:line="24" pos:column="32">!<pos:position pos:line="24" pos:column="33"/></operator><call><name pos:line="24" pos:column="33">ap_strcasecmp_match<pos:position pos:line="24" pos:column="52"/></name><argument_list pos:line="24" pos:column="52">(<argument><expr><name pos:line="24" pos:column="53">content_type<pos:position pos:line="24" pos:column="65"/></name></expr></argument>,
                                                    <argument><expr><name><name pos:line="25" pos:column="53">p<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">-&gt;<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="56">apply_to<pos:position pos:line="25" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="66"/></condition><then pos:line="25" pos:column="66"> <block pos:line="25" pos:column="67">{
                            <return pos:line="26" pos:column="29">return <expr><name><name pos:line="26" pos:column="36">p<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">data<pos:position pos:line="26" pos:column="43"/></name></name></expr>;<pos:position pos:line="26" pos:column="44"/></return>
                        }<pos:position pos:line="27" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="28" pos:column="22"/></block></then></if>
                }<pos:position pos:line="29" pos:column="18"/></block></then>
                <else pos:line="30" pos:column="17">else <block pos:line="30" pos:column="22">{
                    <if pos:line="31" pos:column="21">if <condition pos:line="31" pos:column="24">(<expr><name><name pos:line="31" pos:column="25">p<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">-&gt;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="28">type<pos:position pos:line="31" pos:column="32"/></name></name> <operator pos:line="31" pos:column="33">==<pos:position pos:line="31" pos:column="35"/></operator> <name pos:line="31" pos:column="36">BY_ENCODING<pos:position pos:line="31" pos:column="47"/></name></expr>)<pos:position pos:line="31" pos:column="48"/></condition><then pos:line="31" pos:column="48"> <block pos:line="31" pos:column="49">{
                        <if pos:line="32" pos:column="25">if <condition pos:line="32" pos:column="28">(<expr><operator pos:line="32" pos:column="29">!<pos:position pos:line="32" pos:column="30"/></operator><call><name pos:line="32" pos:column="30">ap_strcasecmp_match<pos:position pos:line="32" pos:column="49"/></name><argument_list pos:line="32" pos:column="49">(<argument><expr><name pos:line="32" pos:column="50">content_encoding<pos:position pos:line="32" pos:column="66"/></name></expr></argument>,
                                                 <argument><expr><name><name pos:line="33" pos:column="50">p<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">-&gt;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="53">apply_to<pos:position pos:line="33" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="63"/></condition><then pos:line="33" pos:column="63"> <block pos:line="33" pos:column="64">{
                            <return pos:line="34" pos:column="29">return <expr><name><name pos:line="34" pos:column="36">p<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">-&gt;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="39">data<pos:position pos:line="34" pos:column="43"/></name></name></expr>;<pos:position pos:line="34" pos:column="44"/></return>
                        }<pos:position pos:line="35" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="36" pos:column="22"/></block></then></if>
                }<pos:position pos:line="37" pos:column="18"/></block></else></if>
            }<pos:position pos:line="38" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></for>
    <return pos:line="41" pos:column="5">return <expr><name pos:line="41" pos:column="12">NULL<pos:position pos:line="41" pos:column="16"/></name></expr>;<pos:position pos:line="41" pos:column="17"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_610_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dumpit<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">ap_filter_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">f<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">apr_bucket<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">b<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">dumpio_conf_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">ptr<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">conn_rec<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">c<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name><name pos:line="3" pos:column="19">f<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">-&gt;<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="22">c<pos:position pos:line="3" pos:column="23"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">ap_log_error<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">APLOG_MARK<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="30">APLOG_TRACE7<pos:position pos:line="5" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="44">0<pos:position pos:line="5" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="47">c<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">-&gt;<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="50">base_server<pos:position pos:line="5" pos:column="61"/></name></name></expr></argument>,
        <argument><expr><literal type="string" pos:line="6" pos:column="9">"mod_dumpio:  %s (%s-%s): %"<pos:position pos:line="6" pos:column="37"/></literal> <name pos:line="6" pos:column="38">APR_SIZE_T_FMT<pos:position pos:line="6" pos:column="52"/></name> <literal type="string" pos:line="6" pos:column="53">" bytes"<pos:position pos:line="6" pos:column="61"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="7" pos:column="17">f<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">frec<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">name<pos:position pos:line="7" pos:column="30"/></name></name></expr></argument>,
                <argument><expr><ternary><condition><expr><operator pos:line="8" pos:column="17">(<pos:position pos:line="8" pos:column="18"/></operator><call><name pos:line="8" pos:column="18">APR_BUCKET_IS_METADATA<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">(<argument><expr><name pos:line="8" pos:column="41">b<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call><operator pos:line="8" pos:column="43">)<pos:position pos:line="8" pos:column="44"/></operator></expr> ?<pos:position pos:line="8" pos:column="46"/></condition><then pos:line="8" pos:column="46"> <expr><literal type="string" pos:line="8" pos:column="47">"metadata"<pos:position pos:line="8" pos:column="57"/></literal></expr> <pos:position pos:line="8" pos:column="58"/></then><else pos:line="8" pos:column="58">: <expr><literal type="string" pos:line="8" pos:column="60">"data"<pos:position pos:line="8" pos:column="66"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><name><name pos:line="9" pos:column="17">b<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">type<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">name<pos:position pos:line="9" pos:column="30"/></name></name></expr></argument>,
                <argument><expr><name><name pos:line="10" pos:column="17">b<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">length<pos:position pos:line="10" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr> ;<pos:position pos:line="10" pos:column="29"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><call><name pos:line="12" pos:column="11">APR_BUCKET_IS_METADATA<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">b<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call><operator pos:line="12" pos:column="36">)<pos:position pos:line="12" pos:column="37"/></operator></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38">
    <block pos:line="13" pos:column="5">{
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="14" pos:column="23"/></name></expr></cpp:if>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name></type> <name><name pos:line="15" pos:column="14">xlatebuf<pos:position pos:line="15" pos:column="22"/></name><index pos:line="15" pos:column="22">[<expr><name pos:line="15" pos:column="23">dumpio_MAX_STRING_LEN<pos:position pos:line="15" pos:column="44"/></name> <operator pos:line="15" pos:column="45">+<pos:position pos:line="15" pos:column="46"/></operator> <literal type="number" pos:line="15" pos:column="47">1<pos:position pos:line="15" pos:column="48"/></literal></expr>]<pos:position pos:line="15" pos:column="49"/></index></name></decl>;<pos:position pos:line="15" pos:column="50"/></decl_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">char<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">buf<pos:position pos:line="17" pos:column="24"/></name></decl>;<pos:position pos:line="17" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">apr_size_t<pos:position pos:line="18" pos:column="19"/></name></type> <name pos:line="18" pos:column="20">nbytes<pos:position pos:line="18" pos:column="26"/></name></decl>;<pos:position pos:line="18" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">apr_size_t<pos:position pos:line="19" pos:column="19"/></name></type> <name pos:line="19" pos:column="20">logbytes<pos:position pos:line="19" pos:column="28"/></name></decl>;<pos:position pos:line="19" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">apr_status_t<pos:position pos:line="20" pos:column="21"/></name></type> <name pos:line="20" pos:column="22">rv<pos:position pos:line="20" pos:column="24"/></name> <init pos:line="20" pos:column="25">= <expr><call><name pos:line="20" pos:column="27">apr_bucket_read<pos:position pos:line="20" pos:column="42"/></name><argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">b<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="46">&amp;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="47">buf<pos:position pos:line="20" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="52">&amp;<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="53">nbytes<pos:position pos:line="20" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="61">APR_BLOCK_READ<pos:position pos:line="20" pos:column="75"/></name></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="77"/></decl_stmt>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">rv<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">==<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">APR_SUCCESS<pos:position pos:line="22" pos:column="30"/></name></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31">
        <block pos:line="23" pos:column="9">{
            <while pos:line="24" pos:column="13">while <condition pos:line="24" pos:column="19">(<expr><name pos:line="24" pos:column="20">nbytes<pos:position pos:line="24" pos:column="26"/></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition>
            <block pos:line="25" pos:column="13">{
                <expr_stmt><expr><name pos:line="26" pos:column="17">logbytes<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="28">nbytes<pos:position pos:line="26" pos:column="34"/></name></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
                <if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">logbytes<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">&gt;<pos:position pos:line="27" pos:column="34"/></operator> <name pos:line="27" pos:column="32">dumpio_MAX_STRING_LEN<pos:position pos:line="27" pos:column="53"/></name></expr>)<pos:position pos:line="27" pos:column="54"/></condition><then pos:line="27" pos:column="54">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="21">logbytes<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">=<pos:position pos:line="28" pos:column="31"/></operator> <name pos:line="28" pos:column="32">dumpio_MAX_STRING_LEN<pos:position pos:line="28" pos:column="53"/></name></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="29" pos:column="17">nbytes<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">-=<pos:position pos:line="29" pos:column="26"/></operator> <name pos:line="29" pos:column="27">logbytes<pos:position pos:line="29" pos:column="35"/></name></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>

<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><name pos:line="31" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="31" pos:column="23"/></name></expr></cpp:if>
                <expr_stmt><expr><call><name pos:line="32" pos:column="17">memcpy<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name pos:line="32" pos:column="24">xlatebuf<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">buf<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="39">logbytes<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="33" pos:column="17">ap_xlate_proto_from_ascii<pos:position pos:line="33" pos:column="42"/></name><argument_list pos:line="33" pos:column="42">(<argument><expr><name pos:line="33" pos:column="43">xlatebuf<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="53">logbytes<pos:position pos:line="33" pos:column="61"/></name></expr></argument>)<pos:position pos:line="33" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="34" pos:column="17">xlatebuf<pos:position pos:line="34" pos:column="25"/></name><index pos:line="34" pos:column="25">[<expr><name pos:line="34" pos:column="26">logbytes<pos:position pos:line="34" pos:column="34"/></name></expr>]<pos:position pos:line="34" pos:column="35"/></index></name> <operator pos:line="34" pos:column="36">=<pos:position pos:line="34" pos:column="37"/></operator> <literal type="char" pos:line="34" pos:column="38">'\0'<pos:position pos:line="34" pos:column="42"/></literal></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="35" pos:column="17">ap_log_error<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">APLOG_MARK<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">APLOG_TRACE7<pos:position pos:line="35" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="56">0<pos:position pos:line="35" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="59">c<pos:position pos:line="35" pos:column="60"/></name><operator pos:line="35" pos:column="60">-&gt;<pos:position pos:line="35" pos:column="65"/></operator><name pos:line="35" pos:column="62">base_server<pos:position pos:line="35" pos:column="73"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="36" pos:column="30">"mod_dumpio:  %s (%s-%s): %s"<pos:position pos:line="36" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="61">f<pos:position pos:line="36" pos:column="62"/></name><operator pos:line="36" pos:column="62">-&gt;<pos:position pos:line="36" pos:column="67"/></operator><name pos:line="36" pos:column="64">frec<pos:position pos:line="36" pos:column="68"/></name><operator pos:line="36" pos:column="68">-&gt;<pos:position pos:line="36" pos:column="73"/></operator><name pos:line="36" pos:column="70">name<pos:position pos:line="36" pos:column="74"/></name></name></expr></argument>,
                             <argument><expr><ternary><condition><expr><operator pos:line="37" pos:column="30">(<pos:position pos:line="37" pos:column="31"/></operator><call><name pos:line="37" pos:column="31">APR_BUCKET_IS_METADATA<pos:position pos:line="37" pos:column="53"/></name><argument_list pos:line="37" pos:column="53">(<argument><expr><name pos:line="37" pos:column="54">b<pos:position pos:line="37" pos:column="55"/></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call><operator pos:line="37" pos:column="56">)<pos:position pos:line="37" pos:column="57"/></operator></expr> ?<pos:position pos:line="37" pos:column="59"/></condition><then pos:line="37" pos:column="59"> <expr><literal type="string" pos:line="37" pos:column="60">"metadata"<pos:position pos:line="37" pos:column="70"/></literal></expr> <pos:position pos:line="37" pos:column="71"/></then><else pos:line="37" pos:column="71">: <expr><literal type="string" pos:line="37" pos:column="73">"data"<pos:position pos:line="37" pos:column="79"/></literal></expr></else></ternary></expr></argument>,
                             <argument><expr><name><name pos:line="38" pos:column="30">b<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">-&gt;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="33">type<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">-&gt;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="39">name<pos:position pos:line="38" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="45">xlatebuf<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>
<cpp:else pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">else<pos:position pos:line="39" pos:column="6"/></cpp:directive></cpp:else>
                <comment type="block" pos:line="40" pos:column="17">/* XXX: Seriously flawed; we do not pay attention to embedded
                 * \0's in the request body, these should be escaped; however,
                 * the logging function already performs a significant amount
                 * of escaping, and so any escaping would be double-escaped.
                 * The coding solution is to throw away the current logic
                 * within ap_log_error, and introduce new vformatter %-escapes
                 * for escaping text, and for binary text (fixed len strings).
                 */</comment>
                <expr_stmt><expr><call><name pos:line="48" pos:column="17">ap_log_error<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">APLOG_MARK<pos:position pos:line="48" pos:column="40"/></name> <operator pos:line="48" pos:column="41">|<pos:position pos:line="48" pos:column="42"/></operator> <name pos:line="48" pos:column="43">APLOG_NOERRNO<pos:position pos:line="48" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="58">APLOG_TRACE7<pos:position pos:line="48" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="72">0<pos:position pos:line="48" pos:column="73"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="75">c<pos:position pos:line="48" pos:column="76"/></name><operator pos:line="48" pos:column="76">-&gt;<pos:position pos:line="48" pos:column="81"/></operator><name pos:line="48" pos:column="78">base_server<pos:position pos:line="48" pos:column="89"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="49" pos:column="30">"mod_dumpio:  %s (%s-%s): %.*s"<pos:position pos:line="49" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="63">f<pos:position pos:line="49" pos:column="64"/></name><operator pos:line="49" pos:column="64">-&gt;<pos:position pos:line="49" pos:column="69"/></operator><name pos:line="49" pos:column="66">frec<pos:position pos:line="49" pos:column="70"/></name><operator pos:line="49" pos:column="70">-&gt;<pos:position pos:line="49" pos:column="75"/></operator><name pos:line="49" pos:column="72">name<pos:position pos:line="49" pos:column="76"/></name></name></expr></argument>,
                             <argument><expr><ternary><condition><expr><operator pos:line="50" pos:column="30">(<pos:position pos:line="50" pos:column="31"/></operator><call><name pos:line="50" pos:column="31">APR_BUCKET_IS_METADATA<pos:position pos:line="50" pos:column="53"/></name><argument_list pos:line="50" pos:column="53">(<argument><expr><name pos:line="50" pos:column="54">b<pos:position pos:line="50" pos:column="55"/></name></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></call><operator pos:line="50" pos:column="56">)<pos:position pos:line="50" pos:column="57"/></operator></expr> ?<pos:position pos:line="50" pos:column="59"/></condition><then pos:line="50" pos:column="59"> <expr><literal type="string" pos:line="50" pos:column="60">"metadata"<pos:position pos:line="50" pos:column="70"/></literal></expr> <pos:position pos:line="50" pos:column="71"/></then><else pos:line="50" pos:column="71">: <expr><literal type="string" pos:line="50" pos:column="73">"data"<pos:position pos:line="50" pos:column="79"/></literal></expr></else></ternary></expr></argument>,
                             <argument><expr><name><name pos:line="51" pos:column="30">b<pos:position pos:line="51" pos:column="31"/></name><operator pos:line="51" pos:column="31">-&gt;<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="33">type<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">-&gt;<pos:position pos:line="51" pos:column="42"/></operator><name pos:line="51" pos:column="39">name<pos:position pos:line="51" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="45">(<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="46">int<pos:position pos:line="51" pos:column="49"/></name><operator pos:line="51" pos:column="49">)<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="50">logbytes<pos:position pos:line="51" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="60">buf<pos:position pos:line="51" pos:column="63"/></name></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="65"/></expr_stmt>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="53" pos:column="14"/></block></while>
        }<pos:position pos:line="54" pos:column="10"/></block></then> <else pos:line="54" pos:column="11">else <block pos:line="54" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">ap_log_error<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name pos:line="55" pos:column="26">APLOG_MARK<pos:position pos:line="55" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="38">APLOG_TRACE7<pos:position pos:line="55" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="52">rv<pos:position pos:line="55" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="56">c<pos:position pos:line="55" pos:column="57"/></name><operator pos:line="55" pos:column="57">-&gt;<pos:position pos:line="55" pos:column="62"/></operator><name pos:line="55" pos:column="59">base_server<pos:position pos:line="55" pos:column="70"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="56" pos:column="26">"mod_dumpio:  %s (%s-%s): %s"<pos:position pos:line="56" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="57">f<pos:position pos:line="56" pos:column="58"/></name><operator pos:line="56" pos:column="58">-&gt;<pos:position pos:line="56" pos:column="63"/></operator><name pos:line="56" pos:column="60">frec<pos:position pos:line="56" pos:column="64"/></name><operator pos:line="56" pos:column="64">-&gt;<pos:position pos:line="56" pos:column="69"/></operator><name pos:line="56" pos:column="66">name<pos:position pos:line="56" pos:column="70"/></name></name></expr></argument>,
                         <argument><expr><ternary><condition><expr><operator pos:line="57" pos:column="26">(<pos:position pos:line="57" pos:column="27"/></operator><call><name pos:line="57" pos:column="27">APR_BUCKET_IS_METADATA<pos:position pos:line="57" pos:column="49"/></name><argument_list pos:line="57" pos:column="49">(<argument><expr><name pos:line="57" pos:column="50">b<pos:position pos:line="57" pos:column="51"/></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call><operator pos:line="57" pos:column="52">)<pos:position pos:line="57" pos:column="53"/></operator></expr> ?<pos:position pos:line="57" pos:column="55"/></condition><then pos:line="57" pos:column="55"> <expr><literal type="string" pos:line="57" pos:column="56">"metadata"<pos:position pos:line="57" pos:column="66"/></literal></expr> <pos:position pos:line="57" pos:column="67"/></then><else pos:line="57" pos:column="67">: <expr><literal type="string" pos:line="57" pos:column="69">"data"<pos:position pos:line="57" pos:column="75"/></literal></expr></else></ternary></expr></argument>,
                         <argument><expr><name><name pos:line="58" pos:column="26">b<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">-&gt;<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="29">type<pos:position pos:line="58" pos:column="33"/></name><operator pos:line="58" pos:column="33">-&gt;<pos:position pos:line="58" pos:column="38"/></operator><name pos:line="58" pos:column="35">name<pos:position pos:line="58" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="41">"error reading data"<pos:position pos:line="58" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></else></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

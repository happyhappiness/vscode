<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2656_httpd-2.2.19.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">seepair<pos:position pos:line="2" pos:column="8"/></name><argument_list pos:line="2" pos:column="8">(<argument><expr><name pos:line="2" pos:column="9">pag<pos:position pos:line="2" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="14">n<pos:position pos:line="2" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="17">key<pos:position pos:line="2" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="22">siz<pos:position pos:line="2" pos:column="25"/></name></expr></argument>)<pos:position pos:line="2" pos:column="26"/></argument_list>
<name pos:line="3" pos:column="1">char<pos:position pos:line="3" pos:column="5"/></name> <modifier pos:line="3" pos:column="6">*<pos:position pos:line="3" pos:column="7"/></modifier><name pos:line="3" pos:column="7">pag<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="4" pos:column="1">register<pos:position pos:line="4" pos:column="9"/></specifier> <name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">n<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="5" pos:column="1">register<pos:position pos:line="5" pos:column="9"/></specifier> <name pos:line="5" pos:column="10">char<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">key<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="6" pos:column="1">register<pos:position pos:line="6" pos:column="9"/></specifier> <name pos:line="6" pos:column="10">int<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">siz<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
<block pos:line="7" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">register<pos:position pos:line="8" pos:column="17"/></specifier> <name pos:line="8" pos:column="18">int<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">i<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">register<pos:position pos:line="9" pos:column="17"/></specifier> <name pos:line="9" pos:column="18">int<pos:position pos:line="9" pos:column="21"/></name></type> <name pos:line="9" pos:column="22">off<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name pos:line="9" pos:column="28">PBLKSIZ<pos:position pos:line="9" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">register<pos:position pos:line="10" pos:column="17"/></specifier> <name pos:line="10" pos:column="18">short<pos:position pos:line="10" pos:column="23"/></name> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">ino<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><operator pos:line="10" pos:column="31">(<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">short<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">*<pos:position pos:line="10" pos:column="39"/></operator><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator> <name pos:line="10" pos:column="41">pag<pos:position pos:line="10" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="45"/></decl_stmt>

	<for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">i<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="18">1<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></init> <condition><expr><name pos:line="12" pos:column="21">i<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&lt;<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="25">n<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></condition> <incr><expr><name pos:line="12" pos:column="28">i<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">+=<pos:position pos:line="12" pos:column="32"/></operator> <literal type="number" pos:line="12" pos:column="33">2<pos:position pos:line="12" pos:column="34"/></literal></expr></incr>)<pos:position pos:line="12" pos:column="35"/></control> <block pos:line="12" pos:column="36">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">siz<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">==<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="28">off<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">-<pos:position pos:line="13" pos:column="33"/></operator> <name><name pos:line="13" pos:column="34">ino<pos:position pos:line="13" pos:column="37"/></name><index pos:line="13" pos:column="37">[<expr><name pos:line="13" pos:column="38">i<pos:position pos:line="13" pos:column="39"/></name></expr>]<pos:position pos:line="13" pos:column="40"/></index></name> <operator pos:line="13" pos:column="41">&amp;&amp;<pos:position pos:line="13" pos:column="51"/></operator>
		    <call><name pos:line="14" pos:column="21">memcmp<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">key<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">pag<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">+<pos:position pos:line="14" pos:column="38"/></operator> <name><name pos:line="14" pos:column="39">ino<pos:position pos:line="14" pos:column="42"/></name><index pos:line="14" pos:column="42">[<expr><name pos:line="14" pos:column="43">i<pos:position pos:line="14" pos:column="44"/></name></expr>]<pos:position pos:line="14" pos:column="45"/></index></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">siz<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call> <operator pos:line="14" pos:column="52">==<pos:position pos:line="14" pos:column="54"/></operator> <literal type="number" pos:line="14" pos:column="55">0<pos:position pos:line="14" pos:column="56"/></literal></expr>)<pos:position pos:line="14" pos:column="57"/></condition><then pos:line="14" pos:column="57">
			<block type="pseudo"><return pos:line="15" pos:column="25">return <expr><name pos:line="15" pos:column="32">i<pos:position pos:line="15" pos:column="33"/></name></expr>;<pos:position pos:line="15" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="16" pos:column="17">off<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <name><name pos:line="16" pos:column="23">ino<pos:position pos:line="16" pos:column="26"/></name><index pos:line="16" pos:column="26">[<expr><name pos:line="16" pos:column="27">i<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">+<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="31">1<pos:position pos:line="16" pos:column="32"/></literal></expr>]<pos:position pos:line="16" pos:column="33"/></index></name></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></for>
	<return pos:line="18" pos:column="9">return <expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></unit>

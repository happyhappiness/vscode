<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2897_httpd-2.0.59.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_hash_entry_t<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">find_entry<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">apr_hash_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ht<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
                                     <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">void<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">key<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">apr_ssize_t<pos:position pos:line="3" pos:column="49"/></name></type> <name pos:line="3" pos:column="50">klen<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>,
                                     <parameter><decl><type><specifier pos:line="4" pos:column="38">const<pos:position pos:line="4" pos:column="43"/></specifier> <name pos:line="4" pos:column="44">void<pos:position pos:line="4" pos:column="48"/></name> <modifier pos:line="4" pos:column="49">*<pos:position pos:line="4" pos:column="50"/></modifier></type><name pos:line="4" pos:column="50">val<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="54"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_hash_entry_t<pos:position pos:line="6" pos:column="21"/></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier><modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">hep<pos:position pos:line="6" pos:column="27"/></name></decl>, <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="30">he<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">unsigned<pos:position pos:line="7" pos:column="19"/></name> <name pos:line="7" pos:column="20">char<pos:position pos:line="7" pos:column="24"/></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">p<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">hash<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_ssize_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">i<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/*
     * This is the popular `times 33' hash algorithm which is used by
     * perl and also appears in Berkeley DB. This is one of the best
     * known hash functions for strings because it is both computed
     * very fast and distributes very well.
     *
     * The originator may be Dan Bernstein but the code in Berkeley DB
     * cites Chris Torek as the source. The best citation I have found
     * is "Chris Torek, Hash function for text in C, Usenet message
     * &lt;27038@mimsy.umd.edu&gt; in comp.lang.c , October, 1990." in Rich
     * Salz's USENIX 1992 paper about INN which can be found at
     * &lt;http://citeseer.nj.nec.com/salz92internetnews.html&gt;.
     *
     * The magic of number 33, i.e. why it works better than many other
     * constants, prime or not, has never been adequately explained by
     * anyone. So I try an explanation: if one experimentally tests all
     * multipliers between 1 and 256 (as I did while writing a low-level
     * data structure library some time ago) one detects that even
     * numbers are not useable at all. The remaining 128 odd numbers
     * (except for the number 1) work more or less all equally well.
     * They all distribute in an acceptable way and this way fill a hash
     * table with an average percent of approx. 86%.
     *
     * If one compares the chi^2 values of the variants (see
     * Bob Jenkins ``Hashing Frequently Asked Questions'' at
     * http://burtleburtle.net/bob/hash/hashfaq.html for a description
     * of chi^2), the number 33 not even has the best value. But the
     * number 33 and a few other equally good numbers like 17, 31, 63,
     * 127 and 129 have nevertheless a great advantage to the remaining
     * numbers in the large set of possible multipliers: their multiply
     * operation can be replaced by a faster operation based on just one
     * shift plus either a single addition or subtraction operation. And
     * because a hash function has to both distribute good _and_ has to
     * be very fast to compute, those few numbers should be preferred.
     *
     *                  -- Ralf S. Engelschall &lt;rse@engelschall.com&gt;
     */</comment>
    <expr_stmt><expr><name pos:line="48" pos:column="5">hash<pos:position pos:line="48" pos:column="9"/></name> <operator pos:line="48" pos:column="10">=<pos:position pos:line="48" pos:column="11"/></operator> <literal type="number" pos:line="48" pos:column="12">0<pos:position pos:line="48" pos:column="13"/></literal></expr>;<pos:position pos:line="48" pos:column="14"/></expr_stmt>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">klen<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">==<pos:position pos:line="49" pos:column="16"/></operator> <name pos:line="49" pos:column="17">APR_HASH_KEY_STRING<pos:position pos:line="49" pos:column="36"/></name></expr>)<pos:position pos:line="49" pos:column="37"/></condition><then pos:line="49" pos:column="37"> <block pos:line="49" pos:column="38">{
        <for pos:line="50" pos:column="9">for <control pos:line="50" pos:column="13">(<init><expr><name pos:line="50" pos:column="14">p<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <name pos:line="50" pos:column="18">key<pos:position pos:line="50" pos:column="21"/></name></expr>;<pos:position pos:line="50" pos:column="22"/></init> <condition><expr><operator pos:line="50" pos:column="23">*<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="24">p<pos:position pos:line="50" pos:column="25"/></name></expr>;<pos:position pos:line="50" pos:column="26"/></condition> <incr><expr><name pos:line="50" pos:column="27">p<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">++<pos:position pos:line="50" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="50" pos:column="31"/></control> <block pos:line="50" pos:column="32">{
            <expr_stmt><expr><name pos:line="51" pos:column="13">hash<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <name pos:line="51" pos:column="20">hash<pos:position pos:line="51" pos:column="24"/></name> <operator pos:line="51" pos:column="25">*<pos:position pos:line="51" pos:column="26"/></operator> <literal type="number" pos:line="51" pos:column="27">33<pos:position pos:line="51" pos:column="29"/></literal> <operator pos:line="51" pos:column="30">+<pos:position pos:line="51" pos:column="31"/></operator> <operator pos:line="51" pos:column="32">*<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="33">p<pos:position pos:line="51" pos:column="34"/></name></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="53" pos:column="9">klen<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <name pos:line="53" pos:column="16">p<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">-<pos:position pos:line="53" pos:column="19"/></operator> <operator pos:line="53" pos:column="20">(<pos:position pos:line="53" pos:column="21"/></operator><specifier pos:line="53" pos:column="21">const<pos:position pos:line="53" pos:column="26"/></specifier> <name pos:line="53" pos:column="27">unsigned<pos:position pos:line="53" pos:column="35"/></name> <name pos:line="53" pos:column="36">char<pos:position pos:line="53" pos:column="40"/></name> <operator pos:line="53" pos:column="41">*<pos:position pos:line="53" pos:column="42"/></operator><operator pos:line="53" pos:column="42">)<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="43">key<pos:position pos:line="53" pos:column="46"/></name></expr>;<pos:position pos:line="53" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then>
    <else pos:line="55" pos:column="5">else <block pos:line="55" pos:column="10">{
        <for pos:line="56" pos:column="9">for <control pos:line="56" pos:column="13">(<init><expr><name pos:line="56" pos:column="14">p<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <name pos:line="56" pos:column="18">key<pos:position pos:line="56" pos:column="21"/></name></expr><operator pos:line="56" pos:column="21">,<pos:position pos:line="56" pos:column="22"/></operator> <expr><name pos:line="56" pos:column="23">i<pos:position pos:line="56" pos:column="24"/></name> <operator pos:line="56" pos:column="25">=<pos:position pos:line="56" pos:column="26"/></operator> <name pos:line="56" pos:column="27">klen<pos:position pos:line="56" pos:column="31"/></name></expr>;<pos:position pos:line="56" pos:column="32"/></init> <condition><expr><name pos:line="56" pos:column="33">i<pos:position pos:line="56" pos:column="34"/></name></expr>;<pos:position pos:line="56" pos:column="35"/></condition> <incr><expr><name pos:line="56" pos:column="36">i<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">--<pos:position pos:line="56" pos:column="39"/></operator></expr><operator pos:line="56" pos:column="39">,<pos:position pos:line="56" pos:column="40"/></operator> <expr><name pos:line="56" pos:column="41">p<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">++<pos:position pos:line="56" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="45"/></control> <block pos:line="56" pos:column="46">{
            <expr_stmt><expr><name pos:line="57" pos:column="13">hash<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">=<pos:position pos:line="57" pos:column="19"/></operator> <name pos:line="57" pos:column="20">hash<pos:position pos:line="57" pos:column="24"/></name> <operator pos:line="57" pos:column="25">*<pos:position pos:line="57" pos:column="26"/></operator> <literal type="number" pos:line="57" pos:column="27">33<pos:position pos:line="57" pos:column="29"/></literal> <operator pos:line="57" pos:column="30">+<pos:position pos:line="57" pos:column="31"/></operator> <operator pos:line="57" pos:column="32">*<pos:position pos:line="57" pos:column="33"/></operator><name pos:line="57" pos:column="33">p<pos:position pos:line="57" pos:column="34"/></name></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></for>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="61" pos:column="5">/* scan linked list */</comment>
    <for pos:line="62" pos:column="5">for <control pos:line="62" pos:column="9">(<init><expr><name pos:line="62" pos:column="10">hep<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <operator pos:line="62" pos:column="16">&amp;<pos:position pos:line="62" pos:column="21"/></operator><name><name pos:line="62" pos:column="17">ht<pos:position pos:line="62" pos:column="19"/></name><operator pos:line="62" pos:column="19">-&gt;<pos:position pos:line="62" pos:column="24"/></operator><name pos:line="62" pos:column="21">array<pos:position pos:line="62" pos:column="26"/></name><index pos:line="62" pos:column="26">[<expr><name pos:line="62" pos:column="27">hash<pos:position pos:line="62" pos:column="31"/></name> <operator pos:line="62" pos:column="32">&amp;<pos:position pos:line="62" pos:column="37"/></operator> <name><name pos:line="62" pos:column="34">ht<pos:position pos:line="62" pos:column="36"/></name><operator pos:line="62" pos:column="36">-&gt;<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="38">max<pos:position pos:line="62" pos:column="41"/></name></name></expr>]<pos:position pos:line="62" pos:column="42"/></index></name></expr><operator pos:line="62" pos:column="42">,<pos:position pos:line="62" pos:column="43"/></operator> <expr><name pos:line="62" pos:column="44">he<pos:position pos:line="62" pos:column="46"/></name> <operator pos:line="62" pos:column="47">=<pos:position pos:line="62" pos:column="48"/></operator> <operator pos:line="62" pos:column="49">*<pos:position pos:line="62" pos:column="50"/></operator><name pos:line="62" pos:column="50">hep<pos:position pos:line="62" pos:column="53"/></name></expr>;<pos:position pos:line="62" pos:column="54"/></init>
         <condition><expr><name pos:line="63" pos:column="10">he<pos:position pos:line="63" pos:column="12"/></name></expr>;<pos:position pos:line="63" pos:column="13"/></condition> <incr><expr><name pos:line="63" pos:column="14">hep<pos:position pos:line="63" pos:column="17"/></name> <operator pos:line="63" pos:column="18">=<pos:position pos:line="63" pos:column="19"/></operator> <operator pos:line="63" pos:column="20">&amp;<pos:position pos:line="63" pos:column="25"/></operator><name><name pos:line="63" pos:column="21">he<pos:position pos:line="63" pos:column="23"/></name><operator pos:line="63" pos:column="23">-&gt;<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="25">next<pos:position pos:line="63" pos:column="29"/></name></name></expr><operator pos:line="63" pos:column="29">,<pos:position pos:line="63" pos:column="30"/></operator> <expr><name pos:line="63" pos:column="31">he<pos:position pos:line="63" pos:column="33"/></name> <operator pos:line="63" pos:column="34">=<pos:position pos:line="63" pos:column="35"/></operator> <operator pos:line="63" pos:column="36">*<pos:position pos:line="63" pos:column="37"/></operator><name pos:line="63" pos:column="37">hep<pos:position pos:line="63" pos:column="40"/></name></expr></incr>)<pos:position pos:line="63" pos:column="41"/></control> <block pos:line="63" pos:column="42">{
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name><name pos:line="64" pos:column="13">he<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">-&gt;<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="17">hash<pos:position pos:line="64" pos:column="21"/></name></name> <operator pos:line="64" pos:column="22">==<pos:position pos:line="64" pos:column="24"/></operator> <name pos:line="64" pos:column="25">hash<pos:position pos:line="64" pos:column="29"/></name>
            <operator pos:line="65" pos:column="13">&amp;&amp;<pos:position pos:line="65" pos:column="23"/></operator> <name><name pos:line="65" pos:column="16">he<pos:position pos:line="65" pos:column="18"/></name><operator pos:line="65" pos:column="18">-&gt;<pos:position pos:line="65" pos:column="23"/></operator><name pos:line="65" pos:column="20">klen<pos:position pos:line="65" pos:column="24"/></name></name> <operator pos:line="65" pos:column="25">==<pos:position pos:line="65" pos:column="27"/></operator> <name pos:line="65" pos:column="28">klen<pos:position pos:line="65" pos:column="32"/></name>
            <operator pos:line="66" pos:column="13">&amp;&amp;<pos:position pos:line="66" pos:column="23"/></operator> <call><name pos:line="66" pos:column="16">memcmp<pos:position pos:line="66" pos:column="22"/></name><argument_list pos:line="66" pos:column="22">(<argument><expr><name><name pos:line="66" pos:column="23">he<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">-&gt;<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="27">key<pos:position pos:line="66" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="32">key<pos:position pos:line="66" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="37">klen<pos:position pos:line="66" pos:column="41"/></name></expr></argument>)<pos:position pos:line="66" pos:column="42"/></argument_list></call> <operator pos:line="66" pos:column="43">==<pos:position pos:line="66" pos:column="45"/></operator> <literal type="number" pos:line="66" pos:column="46">0<pos:position pos:line="66" pos:column="47"/></literal></expr>)<pos:position pos:line="66" pos:column="48"/></condition><then pos:line="66" pos:column="48">
            <block type="pseudo"><break pos:line="67" pos:column="13">break;<pos:position pos:line="67" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="68" pos:column="6"/></block></for>
    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><name pos:line="69" pos:column="9">he<pos:position pos:line="69" pos:column="11"/></name> <operator pos:line="69" pos:column="12">||<pos:position pos:line="69" pos:column="14"/></operator> <operator pos:line="69" pos:column="15">!<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="16">val<pos:position pos:line="69" pos:column="19"/></name></expr>)<pos:position pos:line="69" pos:column="20"/></condition><then pos:line="69" pos:column="20">
        <block type="pseudo"><return pos:line="70" pos:column="9">return <expr><name pos:line="70" pos:column="16">hep<pos:position pos:line="70" pos:column="19"/></name></expr>;<pos:position pos:line="70" pos:column="20"/></return></block></then></if>

    <comment type="block" pos:line="72" pos:column="5">/* add a new entry for non-NULL values */</comment>
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><operator pos:line="73" pos:column="9">(<pos:position pos:line="73" pos:column="10"/></operator><name pos:line="73" pos:column="10">he<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">=<pos:position pos:line="73" pos:column="14"/></operator> <name><name pos:line="73" pos:column="15">ht<pos:position pos:line="73" pos:column="17"/></name><operator pos:line="73" pos:column="17">-&gt;<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="19">free<pos:position pos:line="73" pos:column="23"/></name></name><operator pos:line="73" pos:column="23">)<pos:position pos:line="73" pos:column="24"/></operator> <operator pos:line="73" pos:column="25">!=<pos:position pos:line="73" pos:column="27"/></operator> <name pos:line="73" pos:column="28">NULL<pos:position pos:line="73" pos:column="32"/></name></expr>)<pos:position pos:line="73" pos:column="33"/></condition><then pos:line="73" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="74" pos:column="9">ht<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">-&gt;<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="13">free<pos:position pos:line="74" pos:column="17"/></name></name> <operator pos:line="74" pos:column="18">=<pos:position pos:line="74" pos:column="19"/></operator> <name><name pos:line="74" pos:column="20">he<pos:position pos:line="74" pos:column="22"/></name><operator pos:line="74" pos:column="22">-&gt;<pos:position pos:line="74" pos:column="27"/></operator><name pos:line="74" pos:column="24">next<pos:position pos:line="74" pos:column="28"/></name></name></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt></block></then>
    <else pos:line="75" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="9">he<pos:position pos:line="76" pos:column="11"/></name> <operator pos:line="76" pos:column="12">=<pos:position pos:line="76" pos:column="13"/></operator> <call><name pos:line="76" pos:column="14">apr_palloc<pos:position pos:line="76" pos:column="24"/></name><argument_list pos:line="76" pos:column="24">(<argument><expr><name><name pos:line="76" pos:column="25">ht<pos:position pos:line="76" pos:column="27"/></name><operator pos:line="76" pos:column="27">-&gt;<pos:position pos:line="76" pos:column="32"/></operator><name pos:line="76" pos:column="29">pool<pos:position pos:line="76" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="35">sizeof<argument_list pos:line="76" pos:column="41">(<argument><expr><operator pos:line="76" pos:column="42">*<pos:position pos:line="76" pos:column="43"/></operator><name pos:line="76" pos:column="43">he<pos:position pos:line="76" pos:column="45"/></name></expr></argument>)<pos:position pos:line="76" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="76" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="48"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">he<pos:position pos:line="77" pos:column="7"/></name><operator pos:line="77" pos:column="7">-&gt;<pos:position pos:line="77" pos:column="12"/></operator><name pos:line="77" pos:column="9">next<pos:position pos:line="77" pos:column="13"/></name></name> <operator pos:line="77" pos:column="14">=<pos:position pos:line="77" pos:column="15"/></operator> <name pos:line="77" pos:column="16">NULL<pos:position pos:line="77" pos:column="20"/></name></expr>;<pos:position pos:line="77" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="78" pos:column="5">he<pos:position pos:line="78" pos:column="7"/></name><operator pos:line="78" pos:column="7">-&gt;<pos:position pos:line="78" pos:column="12"/></operator><name pos:line="78" pos:column="9">hash<pos:position pos:line="78" pos:column="13"/></name></name> <operator pos:line="78" pos:column="14">=<pos:position pos:line="78" pos:column="15"/></operator> <name pos:line="78" pos:column="16">hash<pos:position pos:line="78" pos:column="20"/></name></expr>;<pos:position pos:line="78" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="79" pos:column="5">he<pos:position pos:line="79" pos:column="7"/></name><operator pos:line="79" pos:column="7">-&gt;<pos:position pos:line="79" pos:column="12"/></operator><name pos:line="79" pos:column="9">key<pos:position pos:line="79" pos:column="12"/></name></name>  <operator pos:line="79" pos:column="14">=<pos:position pos:line="79" pos:column="15"/></operator> <name pos:line="79" pos:column="16">key<pos:position pos:line="79" pos:column="19"/></name></expr>;<pos:position pos:line="79" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="80" pos:column="5">he<pos:position pos:line="80" pos:column="7"/></name><operator pos:line="80" pos:column="7">-&gt;<pos:position pos:line="80" pos:column="12"/></operator><name pos:line="80" pos:column="9">klen<pos:position pos:line="80" pos:column="13"/></name></name> <operator pos:line="80" pos:column="14">=<pos:position pos:line="80" pos:column="15"/></operator> <name pos:line="80" pos:column="16">klen<pos:position pos:line="80" pos:column="20"/></name></expr>;<pos:position pos:line="80" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">he<pos:position pos:line="81" pos:column="7"/></name><operator pos:line="81" pos:column="7">-&gt;<pos:position pos:line="81" pos:column="12"/></operator><name pos:line="81" pos:column="9">val<pos:position pos:line="81" pos:column="12"/></name></name>  <operator pos:line="81" pos:column="14">=<pos:position pos:line="81" pos:column="15"/></operator> <name pos:line="81" pos:column="16">val<pos:position pos:line="81" pos:column="19"/></name></expr>;<pos:position pos:line="81" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="82" pos:column="5">*<pos:position pos:line="82" pos:column="6"/></operator><name pos:line="82" pos:column="6">hep<pos:position pos:line="82" pos:column="9"/></name> <operator pos:line="82" pos:column="10">=<pos:position pos:line="82" pos:column="11"/></operator> <name pos:line="82" pos:column="12">he<pos:position pos:line="82" pos:column="14"/></name></expr>;<pos:position pos:line="82" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="83" pos:column="5">ht<pos:position pos:line="83" pos:column="7"/></name><operator pos:line="83" pos:column="7">-&gt;<pos:position pos:line="83" pos:column="12"/></operator><name pos:line="83" pos:column="9">count<pos:position pos:line="83" pos:column="14"/></name></name><operator pos:line="83" pos:column="14">++<pos:position pos:line="83" pos:column="16"/></operator></expr>;<pos:position pos:line="83" pos:column="17"/></expr_stmt>
    <return pos:line="84" pos:column="5">return <expr><name pos:line="84" pos:column="12">hep<pos:position pos:line="84" pos:column="15"/></name></expr>;<pos:position pos:line="84" pos:column="16"/></return>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

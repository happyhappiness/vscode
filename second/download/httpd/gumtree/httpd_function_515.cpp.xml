<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_515.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">apr_status_t<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">ap_proxy_http_process_response<pos:position pos:line="2" pos:column="44"/></name><parameter_list pos:line="2" pos:column="44">(<parameter><decl><type><name pos:line="2" pos:column="45">apr_pool_t<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type> <name pos:line="2" pos:column="58">p<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">request_rec<pos:position pos:line="2" pos:column="72"/></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="74">r<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="3" pos:column="45">proxy_http_conn_t<pos:position pos:line="3" pos:column="62"/></name> <modifier pos:line="3" pos:column="63">*<pos:position pos:line="3" pos:column="64"/></modifier></type><name pos:line="3" pos:column="64">p_conn<pos:position pos:line="3" pos:column="70"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="4" pos:column="45">conn_rec<pos:position pos:line="4" pos:column="53"/></name> <modifier pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></modifier></type><name pos:line="4" pos:column="55">origin<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="5" pos:column="45">proxy_conn_rec<pos:position pos:line="5" pos:column="59"/></name> <modifier pos:line="5" pos:column="60">*<pos:position pos:line="5" pos:column="61"/></modifier></type><name pos:line="5" pos:column="61">backend<pos:position pos:line="5" pos:column="68"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="6" pos:column="45">proxy_server_conf<pos:position pos:line="6" pos:column="62"/></name> <modifier pos:line="6" pos:column="63">*<pos:position pos:line="6" pos:column="64"/></modifier></type><name pos:line="6" pos:column="64">conf<pos:position pos:line="6" pos:column="68"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="7" pos:column="45">apr_bucket_brigade<pos:position pos:line="7" pos:column="63"/></name> <modifier pos:line="7" pos:column="64">*<pos:position pos:line="7" pos:column="65"/></modifier></type><name pos:line="7" pos:column="65">bb<pos:position pos:line="7" pos:column="67"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="8" pos:column="45">char<pos:position pos:line="8" pos:column="49"/></name> <modifier pos:line="8" pos:column="50">*<pos:position pos:line="8" pos:column="51"/></modifier></type><name pos:line="8" pos:column="51">server_portstr<pos:position pos:line="8" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="8" pos:column="66"/></parameter_list> <block pos:line="8" pos:column="67">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">conn_rec<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">c<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><name><name pos:line="9" pos:column="19">r<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">connection<pos:position pos:line="9" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name><name pos:line="10" pos:column="10">buffer<pos:position pos:line="10" pos:column="16"/></name><index pos:line="10" pos:column="16">[<expr><name pos:line="10" pos:column="17">HUGE_STRING_LEN<pos:position pos:line="10" pos:column="32"/></name></expr>]<pos:position pos:line="10" pos:column="33"/></index></name></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">buf<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">keepchar<pos:position pos:line="12" pos:column="18"/></name></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">request_rec<pos:position pos:line="13" pos:column="16"/></name> <modifier pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></modifier></type><name pos:line="13" pos:column="18">rp<pos:position pos:line="13" pos:column="20"/></name></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_bucket<pos:position pos:line="14" pos:column="15"/></name> <modifier pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></modifier></type><name pos:line="14" pos:column="17">e<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">len<pos:position pos:line="15" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="14">backasswards<pos:position pos:line="15" pos:column="26"/></name></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">received_continue<pos:position pos:line="16" pos:column="26"/></name> <init pos:line="16" pos:column="27">= <expr><literal type="number" pos:line="16" pos:column="29">1<pos:position pos:line="16" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="31"/></decl_stmt> <comment type="block" pos:line="16" pos:column="32">/* flag to indicate if we should
                                * loop over response parsing logic
                                * in the case that the origin told us
                                * to HTTP_CONTINUE
                                */</comment>

    <comment type="block" pos:line="22" pos:column="5">/* Get response from the remote server, and pass it up the
     * filter chain
     */</comment>

    <expr_stmt><expr><name pos:line="26" pos:column="5">rp<pos:position pos:line="26" pos:column="7"/></name> <operator pos:line="26" pos:column="8">=<pos:position pos:line="26" pos:column="9"/></operator> <call><name pos:line="26" pos:column="10">ap_proxy_make_fake_req<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">origin<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">r<pos:position pos:line="26" pos:column="42"/></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
    <comment type="block" pos:line="27" pos:column="5">/* In case anyone needs to know, this is a fake request that is really a
     * response.
     */</comment>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">rp<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">proxyreq<pos:position pos:line="30" pos:column="17"/></name></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="20">PROXYREQ_RESPONSE<pos:position pos:line="30" pos:column="37"/></name></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>

    <while pos:line="32" pos:column="5">while <condition pos:line="32" pos:column="11">(<expr><name pos:line="32" pos:column="12">received_continue<pos:position pos:line="32" pos:column="29"/></name></expr>)<pos:position pos:line="32" pos:column="30"/></condition> <block pos:line="32" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">apr_brigade_cleanup<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">bb<pos:position pos:line="33" pos:column="31"/></name></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>

        <expr_stmt><expr><name pos:line="35" pos:column="9">len<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">ap_getline<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">buffer<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="34">sizeof<argument_list pos:line="35" pos:column="40">(<argument><expr><name pos:line="35" pos:column="41">buffer<pos:position pos:line="35" pos:column="47"/></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">rp<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="54">0<pos:position pos:line="35" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="57"/></expr_stmt>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">len<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">==<pos:position pos:line="36" pos:column="19"/></operator> <literal type="number" pos:line="36" pos:column="20">0<pos:position pos:line="36" pos:column="21"/></literal></expr>)<pos:position pos:line="36" pos:column="22"/></condition><then pos:line="36" pos:column="22"> <block pos:line="36" pos:column="23">{
            <comment type="block" pos:line="37" pos:column="13">/* handle one potential stray CRLF */</comment>
            <expr_stmt><expr><name pos:line="38" pos:column="13">len<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <call><name pos:line="38" pos:column="19">ap_getline<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">buffer<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="38">sizeof<argument_list pos:line="38" pos:column="44">(<argument><expr><name pos:line="38" pos:column="45">buffer<pos:position pos:line="38" pos:column="51"/></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="38" pos:column="54">rp<pos:position pos:line="38" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="58">0<pos:position pos:line="38" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">len<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">&lt;=<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="20">0<pos:position pos:line="40" pos:column="21"/></literal></expr>)<pos:position pos:line="40" pos:column="22"/></condition><then pos:line="40" pos:column="22"> <block pos:line="40" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">apr_socket_close<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name><name pos:line="41" pos:column="30">p_conn<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">-&gt;<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="38">sock<pos:position pos:line="41" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="42" pos:column="13">backend<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">connection<pos:position pos:line="42" pos:column="32"/></name></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <name pos:line="42" pos:column="35">NULL<pos:position pos:line="42" pos:column="39"/></name></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">ap_log_rerror<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">APLOG_MARK<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="39">APLOG_ERR<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="50">0<pos:position pos:line="43" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="53">r<pos:position pos:line="43" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="44" pos:column="27">"proxy: error reading status line from remote "<pos:position pos:line="44" pos:column="74"/></literal>
                          <literal type="string" pos:line="45" pos:column="27">"server %s"<pos:position pos:line="45" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="40">p_conn<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">-&gt;<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="48">name<pos:position pos:line="45" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="54"/></expr_stmt>
            <return pos:line="46" pos:column="13">return <expr><call><name pos:line="46" pos:column="20">ap_proxyerror<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">r<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="37">HTTP_BAD_GATEWAY<pos:position pos:line="46" pos:column="53"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="47" pos:column="34">"Error reading from remote server"<pos:position pos:line="47" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="70"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="50" pos:column="9">/* Is it an HTTP/1 response?
         * This is buggy if we ever see an HTTP/1.10
         */</comment>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><call><name pos:line="53" pos:column="13">apr_date_checkmask<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><name pos:line="53" pos:column="32">buffer<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="40">"HTTP/#.# ###*"<pos:position pos:line="53" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="57"/></condition><then pos:line="53" pos:column="57"> <block pos:line="53" pos:column="58">{
            <decl_stmt><decl><type><name pos:line="54" pos:column="13">int<pos:position pos:line="54" pos:column="16"/></name></type> <name pos:line="54" pos:column="17">major<pos:position pos:line="54" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="54" pos:column="24">minor<pos:position pos:line="54" pos:column="29"/></name></decl>;<pos:position pos:line="54" pos:column="30"/></decl_stmt>

            <if pos:line="56" pos:column="13">if <condition pos:line="56" pos:column="16">(<expr><literal type="number" pos:line="56" pos:column="17">2<pos:position pos:line="56" pos:column="18"/></literal> <operator pos:line="56" pos:column="19">!=<pos:position pos:line="56" pos:column="21"/></operator> <call><name pos:line="56" pos:column="22">sscanf<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name pos:line="56" pos:column="29">buffer<pos:position pos:line="56" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="37">"HTTP/%u.%u"<pos:position pos:line="56" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="56" pos:column="51">&amp;<pos:position pos:line="56" pos:column="56"/></operator><name pos:line="56" pos:column="52">major<pos:position pos:line="56" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="59">&amp;<pos:position pos:line="56" pos:column="64"/></operator><name pos:line="56" pos:column="60">minor<pos:position pos:line="56" pos:column="65"/></name></expr></argument>)<pos:position pos:line="56" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="67"/></condition><then pos:line="56" pos:column="67"> <block pos:line="56" pos:column="68">{
                <expr_stmt><expr><name pos:line="57" pos:column="17">major<pos:position pos:line="57" pos:column="22"/></name> <operator pos:line="57" pos:column="23">=<pos:position pos:line="57" pos:column="24"/></operator> <literal type="number" pos:line="57" pos:column="25">1<pos:position pos:line="57" pos:column="26"/></literal></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
                <expr_stmt><expr><name pos:line="58" pos:column="17">minor<pos:position pos:line="58" pos:column="22"/></name> <operator pos:line="58" pos:column="23">=<pos:position pos:line="58" pos:column="24"/></operator> <literal type="number" pos:line="58" pos:column="25">1<pos:position pos:line="58" pos:column="26"/></literal></expr>;<pos:position pos:line="58" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="59" pos:column="14"/></block></then>
            <comment type="block" pos:line="60" pos:column="13">/* If not an HTTP/1 message or
             * if the status line was &gt; 8192 bytes
             */</comment>
            <elseif pos:line="63" pos:column="13">else <if pos:line="63" pos:column="18">if <condition pos:line="63" pos:column="21">(<expr><operator pos:line="63" pos:column="22">(<pos:position pos:line="63" pos:column="23"/></operator><name><name pos:line="63" pos:column="23">buffer<pos:position pos:line="63" pos:column="29"/></name><index pos:line="63" pos:column="29">[<expr><literal type="number" pos:line="63" pos:column="30">5<pos:position pos:line="63" pos:column="31"/></literal></expr>]<pos:position pos:line="63" pos:column="32"/></index></name> <operator pos:line="63" pos:column="33">!=<pos:position pos:line="63" pos:column="35"/></operator> <literal type="char" pos:line="63" pos:column="36">'1'<pos:position pos:line="63" pos:column="39"/></literal><operator pos:line="63" pos:column="39">)<pos:position pos:line="63" pos:column="40"/></operator> <operator pos:line="63" pos:column="41">||<pos:position pos:line="63" pos:column="43"/></operator> <operator pos:line="63" pos:column="44">(<pos:position pos:line="63" pos:column="45"/></operator><name pos:line="63" pos:column="45">len<pos:position pos:line="63" pos:column="48"/></name> <operator pos:line="63" pos:column="49">&gt;=<pos:position pos:line="63" pos:column="54"/></operator> <sizeof pos:line="63" pos:column="52">sizeof<argument_list pos:line="63" pos:column="58">(<argument><expr><name pos:line="63" pos:column="59">buffer<pos:position pos:line="63" pos:column="65"/></name></expr></argument>)<pos:position pos:line="63" pos:column="66"/></argument_list></sizeof><operator pos:line="63" pos:column="66">-<pos:position pos:line="63" pos:column="67"/></operator><literal type="number" pos:line="63" pos:column="67">1<pos:position pos:line="63" pos:column="68"/></literal><operator pos:line="63" pos:column="68">)<pos:position pos:line="63" pos:column="69"/></operator></expr>)<pos:position pos:line="63" pos:column="70"/></condition><then pos:line="63" pos:column="70"> <block pos:line="63" pos:column="71">{
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">apr_socket_close<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><name><name pos:line="64" pos:column="34">p_conn<pos:position pos:line="64" pos:column="40"/></name><operator pos:line="64" pos:column="40">-&gt;<pos:position pos:line="64" pos:column="45"/></operator><name pos:line="64" pos:column="42">sock<pos:position pos:line="64" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="65" pos:column="17">backend<pos:position pos:line="65" pos:column="24"/></name><operator pos:line="65" pos:column="24">-&gt;<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="26">connection<pos:position pos:line="65" pos:column="36"/></name></name> <operator pos:line="65" pos:column="37">=<pos:position pos:line="65" pos:column="38"/></operator> <name pos:line="65" pos:column="39">NULL<pos:position pos:line="65" pos:column="43"/></name></expr>;<pos:position pos:line="65" pos:column="44"/></expr_stmt>
                <return pos:line="66" pos:column="17">return <expr><call><name pos:line="66" pos:column="24">ap_proxyerror<pos:position pos:line="66" pos:column="37"/></name><argument_list pos:line="66" pos:column="37">(<argument><expr><name pos:line="66" pos:column="38">r<pos:position pos:line="66" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="41">HTTP_BAD_GATEWAY<pos:position pos:line="66" pos:column="57"/></name></expr></argument>,
                <argument><expr><call><name pos:line="67" pos:column="17">apr_pstrcat<pos:position pos:line="67" pos:column="28"/></name><argument_list pos:line="67" pos:column="28">(<argument><expr><name pos:line="67" pos:column="29">p<pos:position pos:line="67" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="32">"Corrupt status line returned by remote "<pos:position pos:line="67" pos:column="73"/></literal>
                            <literal type="string" pos:line="68" pos:column="29">"server: "<pos:position pos:line="68" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="41">buffer<pos:position pos:line="68" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="49">NULL<pos:position pos:line="68" pos:column="53"/></name></expr></argument>)<pos:position pos:line="68" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="56"/></return>
            }<pos:position pos:line="69" pos:column="14"/></block></then></if></elseif></if>
            <expr_stmt><expr><name pos:line="70" pos:column="13">backasswards<pos:position pos:line="70" pos:column="25"/></name> <operator pos:line="70" pos:column="26">=<pos:position pos:line="70" pos:column="27"/></operator> <literal type="number" pos:line="70" pos:column="28">0<pos:position pos:line="70" pos:column="29"/></literal></expr>;<pos:position pos:line="70" pos:column="30"/></expr_stmt>

            <expr_stmt><expr><name pos:line="72" pos:column="13">keepchar<pos:position pos:line="72" pos:column="21"/></name> <operator pos:line="72" pos:column="22">=<pos:position pos:line="72" pos:column="23"/></operator> <name><name pos:line="72" pos:column="24">buffer<pos:position pos:line="72" pos:column="30"/></name><index pos:line="72" pos:column="30">[<expr><literal type="number" pos:line="72" pos:column="31">12<pos:position pos:line="72" pos:column="33"/></literal></expr>]<pos:position pos:line="72" pos:column="34"/></index></name></expr>;<pos:position pos:line="72" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="73" pos:column="13">buffer<pos:position pos:line="73" pos:column="19"/></name><index pos:line="73" pos:column="19">[<expr><literal type="number" pos:line="73" pos:column="20">12<pos:position pos:line="73" pos:column="22"/></literal></expr>]<pos:position pos:line="73" pos:column="23"/></index></name> <operator pos:line="73" pos:column="24">=<pos:position pos:line="73" pos:column="25"/></operator> <literal type="char" pos:line="73" pos:column="26">'\0'<pos:position pos:line="73" pos:column="30"/></literal></expr>;<pos:position pos:line="73" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="74" pos:column="13">r<pos:position pos:line="74" pos:column="14"/></name><operator pos:line="74" pos:column="14">-&gt;<pos:position pos:line="74" pos:column="19"/></operator><name pos:line="74" pos:column="16">status<pos:position pos:line="74" pos:column="22"/></name></name> <operator pos:line="74" pos:column="23">=<pos:position pos:line="74" pos:column="24"/></operator> <call><name pos:line="74" pos:column="25">atoi<pos:position pos:line="74" pos:column="29"/></name><argument_list pos:line="74" pos:column="29">(<argument><expr><operator pos:line="74" pos:column="30">&amp;<pos:position pos:line="74" pos:column="35"/></operator><name><name pos:line="74" pos:column="31">buffer<pos:position pos:line="74" pos:column="37"/></name><index pos:line="74" pos:column="37">[<expr><literal type="number" pos:line="74" pos:column="38">9<pos:position pos:line="74" pos:column="39"/></literal></expr>]<pos:position pos:line="74" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="74" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="42"/></expr_stmt>

            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><name pos:line="76" pos:column="17">keepchar<pos:position pos:line="76" pos:column="25"/></name> <operator pos:line="76" pos:column="26">!=<pos:position pos:line="76" pos:column="28"/></operator> <literal type="char" pos:line="76" pos:column="29">'\0'<pos:position pos:line="76" pos:column="33"/></literal></expr>)<pos:position pos:line="76" pos:column="34"/></condition><then pos:line="76" pos:column="34"> <block pos:line="76" pos:column="35">{
                <expr_stmt><expr><name><name pos:line="77" pos:column="17">buffer<pos:position pos:line="77" pos:column="23"/></name><index pos:line="77" pos:column="23">[<expr><literal type="number" pos:line="77" pos:column="24">12<pos:position pos:line="77" pos:column="26"/></literal></expr>]<pos:position pos:line="77" pos:column="27"/></index></name> <operator pos:line="77" pos:column="28">=<pos:position pos:line="77" pos:column="29"/></operator> <name pos:line="77" pos:column="30">keepchar<pos:position pos:line="77" pos:column="38"/></name></expr>;<pos:position pos:line="77" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="78" pos:column="14"/></block></then> <else pos:line="78" pos:column="15">else <block pos:line="78" pos:column="20">{
                <comment type="block" pos:line="79" pos:column="17">/* 2616 requires the space in Status-Line; the origin
                 * server may have sent one but ap_rgetline_core will
                 * have stripped it. */</comment>
                <expr_stmt><expr><name><name pos:line="82" pos:column="17">buffer<pos:position pos:line="82" pos:column="23"/></name><index pos:line="82" pos:column="23">[<expr><literal type="number" pos:line="82" pos:column="24">12<pos:position pos:line="82" pos:column="26"/></literal></expr>]<pos:position pos:line="82" pos:column="27"/></index></name> <operator pos:line="82" pos:column="28">=<pos:position pos:line="82" pos:column="29"/></operator> <literal type="char" pos:line="82" pos:column="30">' '<pos:position pos:line="82" pos:column="33"/></literal></expr>;<pos:position pos:line="82" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="83" pos:column="17">buffer<pos:position pos:line="83" pos:column="23"/></name><index pos:line="83" pos:column="23">[<expr><literal type="number" pos:line="83" pos:column="24">13<pos:position pos:line="83" pos:column="26"/></literal></expr>]<pos:position pos:line="83" pos:column="27"/></index></name> <operator pos:line="83" pos:column="28">=<pos:position pos:line="83" pos:column="29"/></operator> <literal type="char" pos:line="83" pos:column="30">'\0'<pos:position pos:line="83" pos:column="34"/></literal></expr>;<pos:position pos:line="83" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="84" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name><name pos:line="85" pos:column="13">r<pos:position pos:line="85" pos:column="14"/></name><operator pos:line="85" pos:column="14">-&gt;<pos:position pos:line="85" pos:column="19"/></operator><name pos:line="85" pos:column="16">status_line<pos:position pos:line="85" pos:column="27"/></name></name> <operator pos:line="85" pos:column="28">=<pos:position pos:line="85" pos:column="29"/></operator> <call><name pos:line="85" pos:column="30">apr_pstrdup<pos:position pos:line="85" pos:column="41"/></name><argument_list pos:line="85" pos:column="41">(<argument><expr><name pos:line="85" pos:column="42">p<pos:position pos:line="85" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="45">&amp;<pos:position pos:line="85" pos:column="50"/></operator><name><name pos:line="85" pos:column="46">buffer<pos:position pos:line="85" pos:column="52"/></name><index pos:line="85" pos:column="52">[<expr><literal type="number" pos:line="85" pos:column="53">9<pos:position pos:line="85" pos:column="54"/></literal></expr>]<pos:position pos:line="85" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="85" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="57"/></expr_stmt>
            
            <comment type="block" pos:line="87" pos:column="13">/* read the headers. */</comment>
            <comment type="block" pos:line="88" pos:column="13">/* N.B. for HTTP/1.0 clients, we have to fold line-wrapped headers*/</comment>
            <comment type="block" pos:line="89" pos:column="13">/* Also, take care with headers with multiple occurences. */</comment>

            <expr_stmt><expr><name><name pos:line="91" pos:column="13">r<pos:position pos:line="91" pos:column="14"/></name><operator pos:line="91" pos:column="14">-&gt;<pos:position pos:line="91" pos:column="19"/></operator><name pos:line="91" pos:column="16">headers_out<pos:position pos:line="91" pos:column="27"/></name></name> <operator pos:line="91" pos:column="28">=<pos:position pos:line="91" pos:column="29"/></operator> <call><name pos:line="91" pos:column="30">ap_proxy_read_headers<pos:position pos:line="91" pos:column="51"/></name><argument_list pos:line="91" pos:column="51">(<argument><expr><name pos:line="91" pos:column="52">r<pos:position pos:line="91" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="55">rp<pos:position pos:line="91" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="59">buffer<pos:position pos:line="91" pos:column="65"/></name></expr></argument>,
                                                   <argument><expr><sizeof pos:line="92" pos:column="52">sizeof<argument_list pos:line="92" pos:column="58">(<argument><expr><name pos:line="92" pos:column="59">buffer<pos:position pos:line="92" pos:column="65"/></name></expr></argument>)<pos:position pos:line="92" pos:column="66"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="92" pos:column="68">origin<pos:position pos:line="92" pos:column="74"/></name></expr></argument>)<pos:position pos:line="92" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="76"/></expr_stmt>
            <if pos:line="93" pos:column="13">if <condition pos:line="93" pos:column="16">(<expr><name><name pos:line="93" pos:column="17">r<pos:position pos:line="93" pos:column="18"/></name><operator pos:line="93" pos:column="18">-&gt;<pos:position pos:line="93" pos:column="23"/></operator><name pos:line="93" pos:column="20">headers_out<pos:position pos:line="93" pos:column="31"/></name></name> <operator pos:line="93" pos:column="32">==<pos:position pos:line="93" pos:column="34"/></operator> <name pos:line="93" pos:column="35">NULL<pos:position pos:line="93" pos:column="39"/></name></expr>)<pos:position pos:line="93" pos:column="40"/></condition><then pos:line="93" pos:column="40"> <block pos:line="93" pos:column="41">{
                <expr_stmt><expr><call><name pos:line="94" pos:column="17">ap_log_error<pos:position pos:line="94" pos:column="29"/></name><argument_list pos:line="94" pos:column="29">(<argument><expr><name pos:line="94" pos:column="30">APLOG_MARK<pos:position pos:line="94" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="42">APLOG_WARNING<pos:position pos:line="94" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="57">0<pos:position pos:line="94" pos:column="58"/></literal></expr></argument>,
                             <argument><expr><name><name pos:line="95" pos:column="30">r<pos:position pos:line="95" pos:column="31"/></name><operator pos:line="95" pos:column="31">-&gt;<pos:position pos:line="95" pos:column="36"/></operator><name pos:line="95" pos:column="33">server<pos:position pos:line="95" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="41">"proxy: bad HTTP/%d.%d header "<pos:position pos:line="95" pos:column="72"/></literal>
                             <literal type="string" pos:line="96" pos:column="30">"returned by %s (%s)"<pos:position pos:line="96" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="53">major<pos:position pos:line="96" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="60">minor<pos:position pos:line="96" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="67">r<pos:position pos:line="96" pos:column="68"/></name><operator pos:line="96" pos:column="68">-&gt;<pos:position pos:line="96" pos:column="73"/></operator><name pos:line="96" pos:column="70">uri<pos:position pos:line="96" pos:column="73"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="97" pos:column="30">r<pos:position pos:line="97" pos:column="31"/></name><operator pos:line="97" pos:column="31">-&gt;<pos:position pos:line="97" pos:column="36"/></operator><name pos:line="97" pos:column="33">method<pos:position pos:line="97" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="98" pos:column="17">p_conn<pos:position pos:line="98" pos:column="23"/></name><operator pos:line="98" pos:column="23">-&gt;<pos:position pos:line="98" pos:column="28"/></operator><name pos:line="98" pos:column="25">close<pos:position pos:line="98" pos:column="30"/></name></name> <operator pos:line="98" pos:column="31">+=<pos:position pos:line="98" pos:column="33"/></operator> <literal type="number" pos:line="98" pos:column="34">1<pos:position pos:line="98" pos:column="35"/></literal></expr>;<pos:position pos:line="98" pos:column="36"/></expr_stmt>
                <comment type="block" pos:line="99" pos:column="17">/*
                 * ap_send_error relies on a headers_out to be present. we
                 * are in a bad position here.. so force everything we send out
                 * to have nothing to do with the incoming packet
                 */</comment>
                <expr_stmt><expr><name><name pos:line="104" pos:column="17">r<pos:position pos:line="104" pos:column="18"/></name><operator pos:line="104" pos:column="18">-&gt;<pos:position pos:line="104" pos:column="23"/></operator><name pos:line="104" pos:column="20">headers_out<pos:position pos:line="104" pos:column="31"/></name></name> <operator pos:line="104" pos:column="32">=<pos:position pos:line="104" pos:column="33"/></operator> <call><name pos:line="104" pos:column="34">apr_table_make<pos:position pos:line="104" pos:column="48"/></name><argument_list pos:line="104" pos:column="48">(<argument><expr><name><name pos:line="104" pos:column="49">r<pos:position pos:line="104" pos:column="50"/></name><operator pos:line="104" pos:column="50">-&gt;<pos:position pos:line="104" pos:column="55"/></operator><name pos:line="104" pos:column="52">pool<pos:position pos:line="104" pos:column="56"/></name></name></expr></argument>,<argument><expr><literal type="number" pos:line="104" pos:column="57">1<pos:position pos:line="104" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="105" pos:column="17">r<pos:position pos:line="105" pos:column="18"/></name><operator pos:line="105" pos:column="18">-&gt;<pos:position pos:line="105" pos:column="23"/></operator><name pos:line="105" pos:column="20">status<pos:position pos:line="105" pos:column="26"/></name></name> <operator pos:line="105" pos:column="27">=<pos:position pos:line="105" pos:column="28"/></operator> <name pos:line="105" pos:column="29">HTTP_BAD_GATEWAY<pos:position pos:line="105" pos:column="45"/></name></expr>;<pos:position pos:line="105" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="106" pos:column="17">r<pos:position pos:line="106" pos:column="18"/></name><operator pos:line="106" pos:column="18">-&gt;<pos:position pos:line="106" pos:column="23"/></operator><name pos:line="106" pos:column="20">status_line<pos:position pos:line="106" pos:column="31"/></name></name> <operator pos:line="106" pos:column="32">=<pos:position pos:line="106" pos:column="33"/></operator> <literal type="string" pos:line="106" pos:column="34">"bad gateway"<pos:position pos:line="106" pos:column="47"/></literal></expr>;<pos:position pos:line="106" pos:column="48"/></expr_stmt>
                <return pos:line="107" pos:column="17">return <expr><name><name pos:line="107" pos:column="24">r<pos:position pos:line="107" pos:column="25"/></name><operator pos:line="107" pos:column="25">-&gt;<pos:position pos:line="107" pos:column="30"/></operator><name pos:line="107" pos:column="27">status<pos:position pos:line="107" pos:column="33"/></name></name></expr>;<pos:position pos:line="107" pos:column="34"/></return>
            }<pos:position pos:line="108" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="110" pos:column="13">/* can't have both Content-Length and Transfer-Encoding */</comment>
            <if pos:line="111" pos:column="13">if <condition pos:line="111" pos:column="16">(<expr><call><name pos:line="111" pos:column="17">apr_table_get<pos:position pos:line="111" pos:column="30"/></name><argument_list pos:line="111" pos:column="30">(<argument><expr><name><name pos:line="111" pos:column="31">r<pos:position pos:line="111" pos:column="32"/></name><operator pos:line="111" pos:column="32">-&gt;<pos:position pos:line="111" pos:column="37"/></operator><name pos:line="111" pos:column="34">headers_out<pos:position pos:line="111" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="47">"Transfer-Encoding"<pos:position pos:line="111" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="67"/></argument_list></call>
                <operator pos:line="112" pos:column="17">&amp;&amp;<pos:position pos:line="112" pos:column="27"/></operator> <call><name pos:line="112" pos:column="20">apr_table_get<pos:position pos:line="112" pos:column="33"/></name><argument_list pos:line="112" pos:column="33">(<argument><expr><name><name pos:line="112" pos:column="34">r<pos:position pos:line="112" pos:column="35"/></name><operator pos:line="112" pos:column="35">-&gt;<pos:position pos:line="112" pos:column="40"/></operator><name pos:line="112" pos:column="37">headers_out<pos:position pos:line="112" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="50">"Content-Length"<pos:position pos:line="112" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="112" pos:column="68"/></condition><then pos:line="112" pos:column="68"> <block pos:line="112" pos:column="69">{
                <comment type="block" pos:line="113" pos:column="17">/* 2616 section 4.4, point 3: "if both Transfer-Encoding
                 * and Content-Length are received, the latter MUST be
                 * ignored"; so unset it here to prevent any confusion
                 * later. */</comment>
                <expr_stmt><expr><call><name pos:line="117" pos:column="17">apr_table_unset<pos:position pos:line="117" pos:column="32"/></name><argument_list pos:line="117" pos:column="32">(<argument><expr><name><name pos:line="117" pos:column="33">r<pos:position pos:line="117" pos:column="34"/></name><operator pos:line="117" pos:column="34">-&gt;<pos:position pos:line="117" pos:column="39"/></operator><name pos:line="117" pos:column="36">headers_out<pos:position pos:line="117" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="49">"Content-Length"<pos:position pos:line="117" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="118" pos:column="17">ap_log_error<pos:position pos:line="118" pos:column="29"/></name><argument_list pos:line="118" pos:column="29">(<argument><expr><name pos:line="118" pos:column="30">APLOG_MARK<pos:position pos:line="118" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="42">APLOG_DEBUG<pos:position pos:line="118" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="55">0<pos:position pos:line="118" pos:column="56"/></literal></expr></argument>,
                             <argument><expr><name><name pos:line="119" pos:column="30">r<pos:position pos:line="119" pos:column="31"/></name><operator pos:line="119" pos:column="31">-&gt;<pos:position pos:line="119" pos:column="36"/></operator><name pos:line="119" pos:column="33">server<pos:position pos:line="119" pos:column="39"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="120" pos:column="30">"proxy: server %s returned Transfer-Encoding and Content-Length"<pos:position pos:line="120" pos:column="94"/></literal></expr></argument>,
                             <argument><expr><name><name pos:line="121" pos:column="30">p_conn<pos:position pos:line="121" pos:column="36"/></name><operator pos:line="121" pos:column="36">-&gt;<pos:position pos:line="121" pos:column="41"/></operator><name pos:line="121" pos:column="38">name<pos:position pos:line="121" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="122" pos:column="17">p_conn<pos:position pos:line="122" pos:column="23"/></name><operator pos:line="122" pos:column="23">-&gt;<pos:position pos:line="122" pos:column="28"/></operator><name pos:line="122" pos:column="25">close<pos:position pos:line="122" pos:column="30"/></name></name> <operator pos:line="122" pos:column="31">+=<pos:position pos:line="122" pos:column="33"/></operator> <literal type="number" pos:line="122" pos:column="34">1<pos:position pos:line="122" pos:column="35"/></literal></expr>;<pos:position pos:line="122" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="123" pos:column="14"/></block></then></if>
            
            <comment type="block" pos:line="125" pos:column="13">/* strip connection listed hop-by-hop headers from response */</comment>
            <expr_stmt><expr><name><name pos:line="126" pos:column="13">p_conn<pos:position pos:line="126" pos:column="19"/></name><operator pos:line="126" pos:column="19">-&gt;<pos:position pos:line="126" pos:column="24"/></operator><name pos:line="126" pos:column="21">close<pos:position pos:line="126" pos:column="26"/></name></name> <operator pos:line="126" pos:column="27">+=<pos:position pos:line="126" pos:column="29"/></operator> <call><name pos:line="126" pos:column="30">ap_proxy_liststr<pos:position pos:line="126" pos:column="46"/></name><argument_list pos:line="126" pos:column="46">(<argument><expr><call><name pos:line="126" pos:column="47">apr_table_get<pos:position pos:line="126" pos:column="60"/></name><argument_list pos:line="126" pos:column="60">(<argument><expr><name><name pos:line="126" pos:column="61">r<pos:position pos:line="126" pos:column="62"/></name><operator pos:line="126" pos:column="62">-&gt;<pos:position pos:line="126" pos:column="67"/></operator><name pos:line="126" pos:column="64">headers_out<pos:position pos:line="126" pos:column="75"/></name></name></expr></argument>,
                                                            <argument><expr><literal type="string" pos:line="127" pos:column="61">"Connection"<pos:position pos:line="127" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="74"/></argument_list></call></expr></argument>,
                                              <argument><expr><literal type="string" pos:line="128" pos:column="47">"close"<pos:position pos:line="128" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="129" pos:column="13">ap_proxy_clear_connection<pos:position pos:line="129" pos:column="38"/></name><argument_list pos:line="129" pos:column="38">(<argument><expr><name pos:line="129" pos:column="39">p<pos:position pos:line="129" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="42">r<pos:position pos:line="129" pos:column="43"/></name><operator pos:line="129" pos:column="43">-&gt;<pos:position pos:line="129" pos:column="48"/></operator><name pos:line="129" pos:column="45">headers_out<pos:position pos:line="129" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="58"/></expr_stmt>
            <if pos:line="130" pos:column="13">if <condition pos:line="130" pos:column="16">(<expr><operator pos:line="130" pos:column="17">(<pos:position pos:line="130" pos:column="18"/></operator><name pos:line="130" pos:column="18">buf<pos:position pos:line="130" pos:column="21"/></name> <operator pos:line="130" pos:column="22">=<pos:position pos:line="130" pos:column="23"/></operator> <call><name pos:line="130" pos:column="24">apr_table_get<pos:position pos:line="130" pos:column="37"/></name><argument_list pos:line="130" pos:column="37">(<argument><expr><name><name pos:line="130" pos:column="38">r<pos:position pos:line="130" pos:column="39"/></name><operator pos:line="130" pos:column="39">-&gt;<pos:position pos:line="130" pos:column="44"/></operator><name pos:line="130" pos:column="41">headers_out<pos:position pos:line="130" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="54">"Content-Type"<pos:position pos:line="130" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="69"/></argument_list></call><operator pos:line="130" pos:column="69">)<pos:position pos:line="130" pos:column="70"/></operator></expr>)<pos:position pos:line="130" pos:column="71"/></condition><then pos:line="130" pos:column="71"> <block pos:line="130" pos:column="72">{
                <expr_stmt><expr><call><name pos:line="131" pos:column="17">ap_set_content_type<pos:position pos:line="131" pos:column="36"/></name><argument_list pos:line="131" pos:column="36">(<argument><expr><name pos:line="131" pos:column="37">r<pos:position pos:line="131" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="131" pos:column="40">apr_pstrdup<pos:position pos:line="131" pos:column="51"/></name><argument_list pos:line="131" pos:column="51">(<argument><expr><name pos:line="131" pos:column="52">p<pos:position pos:line="131" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="55">buf<pos:position pos:line="131" pos:column="58"/></name></expr></argument>)<pos:position pos:line="131" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="131" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="61"/></expr_stmt>
            }<pos:position pos:line="132" pos:column="14"/></block></then></if>            
            <expr_stmt><expr><call><name pos:line="133" pos:column="13">ap_proxy_pre_http_request<pos:position pos:line="133" pos:column="38"/></name><argument_list pos:line="133" pos:column="38">(<argument><expr><name pos:line="133" pos:column="39">origin<pos:position pos:line="133" pos:column="45"/></name></expr></argument>,<argument><expr><name pos:line="133" pos:column="46">rp<pos:position pos:line="133" pos:column="48"/></name></expr></argument>)<pos:position pos:line="133" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="50"/></expr_stmt>

            <comment type="block" pos:line="135" pos:column="13">/* handle Via header in response */</comment>
            <if pos:line="136" pos:column="13">if <condition pos:line="136" pos:column="16">(<expr><name><name pos:line="136" pos:column="17">conf<pos:position pos:line="136" pos:column="21"/></name><operator pos:line="136" pos:column="21">-&gt;<pos:position pos:line="136" pos:column="26"/></operator><name pos:line="136" pos:column="23">viaopt<pos:position pos:line="136" pos:column="29"/></name></name> <operator pos:line="136" pos:column="30">!=<pos:position pos:line="136" pos:column="32"/></operator> <name pos:line="136" pos:column="33">via_off<pos:position pos:line="136" pos:column="40"/></name> <operator pos:line="136" pos:column="41">&amp;&amp;<pos:position pos:line="136" pos:column="51"/></operator> <name><name pos:line="136" pos:column="44">conf<pos:position pos:line="136" pos:column="48"/></name><operator pos:line="136" pos:column="48">-&gt;<pos:position pos:line="136" pos:column="53"/></operator><name pos:line="136" pos:column="50">viaopt<pos:position pos:line="136" pos:column="56"/></name></name> <operator pos:line="136" pos:column="57">!=<pos:position pos:line="136" pos:column="59"/></operator> <name pos:line="136" pos:column="60">via_block<pos:position pos:line="136" pos:column="69"/></name></expr>)<pos:position pos:line="136" pos:column="70"/></condition><then pos:line="136" pos:column="70"> <block pos:line="136" pos:column="71">{
                <comment type="block" pos:line="137" pos:column="17">/* create a "Via:" response header entry and merge it */</comment>
                <expr_stmt><expr><call><name pos:line="138" pos:column="17">apr_table_mergen<pos:position pos:line="138" pos:column="33"/></name><argument_list pos:line="138" pos:column="33">(<argument><expr><name><name pos:line="138" pos:column="34">r<pos:position pos:line="138" pos:column="35"/></name><operator pos:line="138" pos:column="35">-&gt;<pos:position pos:line="138" pos:column="40"/></operator><name pos:line="138" pos:column="37">headers_out<pos:position pos:line="138" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="50">"Via"<pos:position pos:line="138" pos:column="55"/></literal></expr></argument>,
                                 <argument><expr><ternary><condition><expr><operator pos:line="139" pos:column="34">(<pos:position pos:line="139" pos:column="35"/></operator><name><name pos:line="139" pos:column="35">conf<pos:position pos:line="139" pos:column="39"/></name><operator pos:line="139" pos:column="39">-&gt;<pos:position pos:line="139" pos:column="44"/></operator><name pos:line="139" pos:column="41">viaopt<pos:position pos:line="139" pos:column="47"/></name></name> <operator pos:line="139" pos:column="48">==<pos:position pos:line="139" pos:column="50"/></operator> <name pos:line="139" pos:column="51">via_full<pos:position pos:line="139" pos:column="59"/></name><operator pos:line="139" pos:column="59">)<pos:position pos:line="139" pos:column="60"/></operator></expr>
                                     ?<pos:position pos:line="140" pos:column="39"/></condition><then pos:line="140" pos:column="39"> <expr><call><name pos:line="140" pos:column="40">apr_psprintf<pos:position pos:line="140" pos:column="52"/></name><argument_list pos:line="140" pos:column="52">(<argument><expr><name pos:line="140" pos:column="53">p<pos:position pos:line="140" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="56">"%d.%d %s%s (%s)"<pos:position pos:line="140" pos:column="73"/></literal></expr></argument>,
                                           <argument><expr><call><name pos:line="141" pos:column="44">HTTP_VERSION_MAJOR<pos:position pos:line="141" pos:column="62"/></name><argument_list pos:line="141" pos:column="62">(<argument><expr><name><name pos:line="141" pos:column="63">r<pos:position pos:line="141" pos:column="64"/></name><operator pos:line="141" pos:column="64">-&gt;<pos:position pos:line="141" pos:column="69"/></operator><name pos:line="141" pos:column="66">proto_num<pos:position pos:line="141" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="141" pos:column="76"/></argument_list></call></expr></argument>,
                                           <argument><expr><call><name pos:line="142" pos:column="44">HTTP_VERSION_MINOR<pos:position pos:line="142" pos:column="62"/></name><argument_list pos:line="142" pos:column="62">(<argument><expr><name><name pos:line="142" pos:column="63">r<pos:position pos:line="142" pos:column="64"/></name><operator pos:line="142" pos:column="64">-&gt;<pos:position pos:line="142" pos:column="69"/></operator><name pos:line="142" pos:column="66">proto_num<pos:position pos:line="142" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="76"/></argument_list></call></expr></argument>,
                                           <argument><expr><call><name pos:line="143" pos:column="44">ap_get_server_name<pos:position pos:line="143" pos:column="62"/></name><argument_list pos:line="143" pos:column="62">(<argument><expr><name pos:line="143" pos:column="63">r<pos:position pos:line="143" pos:column="64"/></name></expr></argument>)<pos:position pos:line="143" pos:column="65"/></argument_list></call></expr></argument>,
                                           <argument><expr><name pos:line="144" pos:column="44">server_portstr<pos:position pos:line="144" pos:column="58"/></name></expr></argument>,
                                           <argument><expr><name pos:line="145" pos:column="44">AP_SERVER_BASEVERSION<pos:position pos:line="145" pos:column="65"/></name></expr></argument>)<pos:position pos:line="145" pos:column="66"/></argument_list></call></expr>
                                     <pos:position pos:line="146" pos:column="38"/></then><else pos:line="146" pos:column="38">: <expr><call><name pos:line="146" pos:column="40">apr_psprintf<pos:position pos:line="146" pos:column="52"/></name><argument_list pos:line="146" pos:column="52">(<argument><expr><name pos:line="146" pos:column="53">p<pos:position pos:line="146" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="56">"%d.%d %s%s"<pos:position pos:line="146" pos:column="68"/></literal></expr></argument>,
                                           <argument><expr><call><name pos:line="147" pos:column="44">HTTP_VERSION_MAJOR<pos:position pos:line="147" pos:column="62"/></name><argument_list pos:line="147" pos:column="62">(<argument><expr><name><name pos:line="147" pos:column="63">r<pos:position pos:line="147" pos:column="64"/></name><operator pos:line="147" pos:column="64">-&gt;<pos:position pos:line="147" pos:column="69"/></operator><name pos:line="147" pos:column="66">proto_num<pos:position pos:line="147" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="76"/></argument_list></call></expr></argument>,
                                           <argument><expr><call><name pos:line="148" pos:column="44">HTTP_VERSION_MINOR<pos:position pos:line="148" pos:column="62"/></name><argument_list pos:line="148" pos:column="62">(<argument><expr><name><name pos:line="148" pos:column="63">r<pos:position pos:line="148" pos:column="64"/></name><operator pos:line="148" pos:column="64">-&gt;<pos:position pos:line="148" pos:column="69"/></operator><name pos:line="148" pos:column="66">proto_num<pos:position pos:line="148" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="76"/></argument_list></call></expr></argument>,
                                           <argument><expr><call><name pos:line="149" pos:column="44">ap_get_server_name<pos:position pos:line="149" pos:column="62"/></name><argument_list pos:line="149" pos:column="62">(<argument><expr><name pos:line="149" pos:column="63">r<pos:position pos:line="149" pos:column="64"/></name></expr></argument>)<pos:position pos:line="149" pos:column="65"/></argument_list></call></expr></argument>,
                                           <argument><expr><name pos:line="150" pos:column="44">server_portstr<pos:position pos:line="150" pos:column="58"/></name></expr></argument>)<pos:position pos:line="150" pos:column="59"/></argument_list></call></expr></else></ternary></expr></argument>
                )<pos:position pos:line="151" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="19"/></expr_stmt>
            }<pos:position pos:line="152" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="154" pos:column="13">/* cancel keepalive if HTTP/1.0 or less */</comment>
            <if pos:line="155" pos:column="13">if <condition pos:line="155" pos:column="16">(<expr><operator pos:line="155" pos:column="17">(<pos:position pos:line="155" pos:column="18"/></operator><name pos:line="155" pos:column="18">major<pos:position pos:line="155" pos:column="23"/></name> <operator pos:line="155" pos:column="24">&lt;<pos:position pos:line="155" pos:column="28"/></operator> <literal type="number" pos:line="155" pos:column="26">1<pos:position pos:line="155" pos:column="27"/></literal><operator pos:line="155" pos:column="27">)<pos:position pos:line="155" pos:column="28"/></operator> <operator pos:line="155" pos:column="29">||<pos:position pos:line="155" pos:column="31"/></operator> <operator pos:line="155" pos:column="32">(<pos:position pos:line="155" pos:column="33"/></operator><name pos:line="155" pos:column="33">minor<pos:position pos:line="155" pos:column="38"/></name> <operator pos:line="155" pos:column="39">&lt;<pos:position pos:line="155" pos:column="43"/></operator> <literal type="number" pos:line="155" pos:column="41">1<pos:position pos:line="155" pos:column="42"/></literal><operator pos:line="155" pos:column="42">)<pos:position pos:line="155" pos:column="43"/></operator></expr>)<pos:position pos:line="155" pos:column="44"/></condition><then pos:line="155" pos:column="44"> <block pos:line="155" pos:column="45">{
                <expr_stmt><expr><name><name pos:line="156" pos:column="17">p_conn<pos:position pos:line="156" pos:column="23"/></name><operator pos:line="156" pos:column="23">-&gt;<pos:position pos:line="156" pos:column="28"/></operator><name pos:line="156" pos:column="25">close<pos:position pos:line="156" pos:column="30"/></name></name> <operator pos:line="156" pos:column="31">+=<pos:position pos:line="156" pos:column="33"/></operator> <literal type="number" pos:line="156" pos:column="34">1<pos:position pos:line="156" pos:column="35"/></literal></expr>;<pos:position pos:line="156" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="157" pos:column="17">origin<pos:position pos:line="157" pos:column="23"/></name><operator pos:line="157" pos:column="23">-&gt;<pos:position pos:line="157" pos:column="28"/></operator><name pos:line="157" pos:column="25">keepalive<pos:position pos:line="157" pos:column="34"/></name></name> <operator pos:line="157" pos:column="35">=<pos:position pos:line="157" pos:column="36"/></operator> <name pos:line="157" pos:column="37">AP_CONN_CLOSE<pos:position pos:line="157" pos:column="50"/></name></expr>;<pos:position pos:line="157" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="158" pos:column="14"/></block></then></if>
        }<pos:position pos:line="159" pos:column="10"/></block></then> <else pos:line="159" pos:column="11">else <block pos:line="159" pos:column="16">{
            <comment type="block" pos:line="160" pos:column="13">/* an http/0.9 response */</comment>
            <expr_stmt><expr><name pos:line="161" pos:column="13">backasswards<pos:position pos:line="161" pos:column="25"/></name> <operator pos:line="161" pos:column="26">=<pos:position pos:line="161" pos:column="27"/></operator> <literal type="number" pos:line="161" pos:column="28">1<pos:position pos:line="161" pos:column="29"/></literal></expr>;<pos:position pos:line="161" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="162" pos:column="13">r<pos:position pos:line="162" pos:column="14"/></name><operator pos:line="162" pos:column="14">-&gt;<pos:position pos:line="162" pos:column="19"/></operator><name pos:line="162" pos:column="16">status<pos:position pos:line="162" pos:column="22"/></name></name> <operator pos:line="162" pos:column="23">=<pos:position pos:line="162" pos:column="24"/></operator> <literal type="number" pos:line="162" pos:column="25">200<pos:position pos:line="162" pos:column="28"/></literal></expr>;<pos:position pos:line="162" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="163" pos:column="13">r<pos:position pos:line="163" pos:column="14"/></name><operator pos:line="163" pos:column="14">-&gt;<pos:position pos:line="163" pos:column="19"/></operator><name pos:line="163" pos:column="16">status_line<pos:position pos:line="163" pos:column="27"/></name></name> <operator pos:line="163" pos:column="28">=<pos:position pos:line="163" pos:column="29"/></operator> <literal type="string" pos:line="163" pos:column="30">"200 OK"<pos:position pos:line="163" pos:column="38"/></literal></expr>;<pos:position pos:line="163" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="164" pos:column="13">p_conn<pos:position pos:line="164" pos:column="19"/></name><operator pos:line="164" pos:column="19">-&gt;<pos:position pos:line="164" pos:column="24"/></operator><name pos:line="164" pos:column="21">close<pos:position pos:line="164" pos:column="26"/></name></name> <operator pos:line="164" pos:column="27">+=<pos:position pos:line="164" pos:column="29"/></operator> <literal type="number" pos:line="164" pos:column="30">1<pos:position pos:line="164" pos:column="31"/></literal></expr>;<pos:position pos:line="164" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="165" pos:column="10"/></block></else></if>

        <if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">( <expr><name><name pos:line="167" pos:column="14">r<pos:position pos:line="167" pos:column="15"/></name><operator pos:line="167" pos:column="15">-&gt;<pos:position pos:line="167" pos:column="20"/></operator><name pos:line="167" pos:column="17">status<pos:position pos:line="167" pos:column="23"/></name></name> <operator pos:line="167" pos:column="24">!=<pos:position pos:line="167" pos:column="26"/></operator> <name pos:line="167" pos:column="27">HTTP_CONTINUE<pos:position pos:line="167" pos:column="40"/></name></expr> )<pos:position pos:line="167" pos:column="42"/></condition><then pos:line="167" pos:column="42"> <block pos:line="167" pos:column="43">{
            <expr_stmt><expr><name pos:line="168" pos:column="13">received_continue<pos:position pos:line="168" pos:column="30"/></name> <operator pos:line="168" pos:column="31">=<pos:position pos:line="168" pos:column="32"/></operator> <literal type="number" pos:line="168" pos:column="33">0<pos:position pos:line="168" pos:column="34"/></literal></expr>;<pos:position pos:line="168" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="169" pos:column="10"/></block></then> <else pos:line="169" pos:column="11">else <block pos:line="169" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="170" pos:column="13">ap_log_error<pos:position pos:line="170" pos:column="25"/></name><argument_list pos:line="170" pos:column="25">(<argument><expr><name pos:line="170" pos:column="26">APLOG_MARK<pos:position pos:line="170" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="38">APLOG_DEBUG<pos:position pos:line="170" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="170" pos:column="51">0<pos:position pos:line="170" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="54">NULL<pos:position pos:line="170" pos:column="58"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="171" pos:column="26">"proxy: HTTP: received 100 CONTINUE"<pos:position pos:line="171" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="172" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="174" pos:column="9">/* we must accept 3 kinds of date, but generate only 1 kind of date */</comment>
        <if pos:line="175" pos:column="9">if <condition pos:line="175" pos:column="12">(<expr><operator pos:line="175" pos:column="13">(<pos:position pos:line="175" pos:column="14"/></operator><name pos:line="175" pos:column="14">buf<pos:position pos:line="175" pos:column="17"/></name> <operator pos:line="175" pos:column="18">=<pos:position pos:line="175" pos:column="19"/></operator> <call><name pos:line="175" pos:column="20">apr_table_get<pos:position pos:line="175" pos:column="33"/></name><argument_list pos:line="175" pos:column="33">(<argument><expr><name><name pos:line="175" pos:column="34">r<pos:position pos:line="175" pos:column="35"/></name><operator pos:line="175" pos:column="35">-&gt;<pos:position pos:line="175" pos:column="40"/></operator><name pos:line="175" pos:column="37">headers_out<pos:position pos:line="175" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="50">"Date"<pos:position pos:line="175" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="57"/></argument_list></call><operator pos:line="175" pos:column="57">)<pos:position pos:line="175" pos:column="58"/></operator> <operator pos:line="175" pos:column="59">!=<pos:position pos:line="175" pos:column="61"/></operator> <name pos:line="175" pos:column="62">NULL<pos:position pos:line="175" pos:column="66"/></name></expr>)<pos:position pos:line="175" pos:column="67"/></condition><then pos:line="175" pos:column="67"> <block pos:line="175" pos:column="68">{
            <expr_stmt><expr><call><name pos:line="176" pos:column="13">apr_table_set<pos:position pos:line="176" pos:column="26"/></name><argument_list pos:line="176" pos:column="26">(<argument><expr><name><name pos:line="176" pos:column="27">r<pos:position pos:line="176" pos:column="28"/></name><operator pos:line="176" pos:column="28">-&gt;<pos:position pos:line="176" pos:column="33"/></operator><name pos:line="176" pos:column="30">headers_out<pos:position pos:line="176" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="43">"Date"<pos:position pos:line="176" pos:column="49"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="177" pos:column="27">ap_proxy_date_canon<pos:position pos:line="177" pos:column="46"/></name><argument_list pos:line="177" pos:column="46">(<argument><expr><name pos:line="177" pos:column="47">p<pos:position pos:line="177" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="50">buf<pos:position pos:line="177" pos:column="53"/></name></expr></argument>)<pos:position pos:line="177" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="177" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="178" pos:column="10"/></block></then></if>
        <if pos:line="179" pos:column="9">if <condition pos:line="179" pos:column="12">(<expr><operator pos:line="179" pos:column="13">(<pos:position pos:line="179" pos:column="14"/></operator><name pos:line="179" pos:column="14">buf<pos:position pos:line="179" pos:column="17"/></name> <operator pos:line="179" pos:column="18">=<pos:position pos:line="179" pos:column="19"/></operator> <call><name pos:line="179" pos:column="20">apr_table_get<pos:position pos:line="179" pos:column="33"/></name><argument_list pos:line="179" pos:column="33">(<argument><expr><name><name pos:line="179" pos:column="34">r<pos:position pos:line="179" pos:column="35"/></name><operator pos:line="179" pos:column="35">-&gt;<pos:position pos:line="179" pos:column="40"/></operator><name pos:line="179" pos:column="37">headers_out<pos:position pos:line="179" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="179" pos:column="50">"Expires"<pos:position pos:line="179" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="60"/></argument_list></call><operator pos:line="179" pos:column="60">)<pos:position pos:line="179" pos:column="61"/></operator> <operator pos:line="179" pos:column="62">!=<pos:position pos:line="179" pos:column="64"/></operator> <name pos:line="179" pos:column="65">NULL<pos:position pos:line="179" pos:column="69"/></name></expr>)<pos:position pos:line="179" pos:column="70"/></condition><then pos:line="179" pos:column="70"> <block pos:line="179" pos:column="71">{
            <expr_stmt><expr><call><name pos:line="180" pos:column="13">apr_table_set<pos:position pos:line="180" pos:column="26"/></name><argument_list pos:line="180" pos:column="26">(<argument><expr><name><name pos:line="180" pos:column="27">r<pos:position pos:line="180" pos:column="28"/></name><operator pos:line="180" pos:column="28">-&gt;<pos:position pos:line="180" pos:column="33"/></operator><name pos:line="180" pos:column="30">headers_out<pos:position pos:line="180" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="43">"Expires"<pos:position pos:line="180" pos:column="52"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="181" pos:column="27">ap_proxy_date_canon<pos:position pos:line="181" pos:column="46"/></name><argument_list pos:line="181" pos:column="46">(<argument><expr><name pos:line="181" pos:column="47">p<pos:position pos:line="181" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="50">buf<pos:position pos:line="181" pos:column="53"/></name></expr></argument>)<pos:position pos:line="181" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="181" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="182" pos:column="10"/></block></then></if>
        <if pos:line="183" pos:column="9">if <condition pos:line="183" pos:column="12">(<expr><operator pos:line="183" pos:column="13">(<pos:position pos:line="183" pos:column="14"/></operator><name pos:line="183" pos:column="14">buf<pos:position pos:line="183" pos:column="17"/></name> <operator pos:line="183" pos:column="18">=<pos:position pos:line="183" pos:column="19"/></operator> <call><name pos:line="183" pos:column="20">apr_table_get<pos:position pos:line="183" pos:column="33"/></name><argument_list pos:line="183" pos:column="33">(<argument><expr><name><name pos:line="183" pos:column="34">r<pos:position pos:line="183" pos:column="35"/></name><operator pos:line="183" pos:column="35">-&gt;<pos:position pos:line="183" pos:column="40"/></operator><name pos:line="183" pos:column="37">headers_out<pos:position pos:line="183" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="183" pos:column="50">"Last-Modified"<pos:position pos:line="183" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="66"/></argument_list></call><operator pos:line="183" pos:column="66">)<pos:position pos:line="183" pos:column="67"/></operator> <operator pos:line="183" pos:column="68">!=<pos:position pos:line="183" pos:column="70"/></operator> <name pos:line="183" pos:column="71">NULL<pos:position pos:line="183" pos:column="75"/></name></expr>)<pos:position pos:line="183" pos:column="76"/></condition><then pos:line="183" pos:column="76"> <block pos:line="183" pos:column="77">{
            <expr_stmt><expr><call><name pos:line="184" pos:column="13">apr_table_set<pos:position pos:line="184" pos:column="26"/></name><argument_list pos:line="184" pos:column="26">(<argument><expr><name><name pos:line="184" pos:column="27">r<pos:position pos:line="184" pos:column="28"/></name><operator pos:line="184" pos:column="28">-&gt;<pos:position pos:line="184" pos:column="33"/></operator><name pos:line="184" pos:column="30">headers_out<pos:position pos:line="184" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="43">"Last-Modified"<pos:position pos:line="184" pos:column="58"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="185" pos:column="27">ap_proxy_date_canon<pos:position pos:line="185" pos:column="46"/></name><argument_list pos:line="185" pos:column="46">(<argument><expr><name pos:line="185" pos:column="47">p<pos:position pos:line="185" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="50">buf<pos:position pos:line="185" pos:column="53"/></name></expr></argument>)<pos:position pos:line="185" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="185" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="186" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="188" pos:column="9">/* munge the Location and URI response headers according to
         * ProxyPassReverse
         */</comment>
        <if pos:line="191" pos:column="9">if <condition pos:line="191" pos:column="12">(<expr><operator pos:line="191" pos:column="13">(<pos:position pos:line="191" pos:column="14"/></operator><name pos:line="191" pos:column="14">buf<pos:position pos:line="191" pos:column="17"/></name> <operator pos:line="191" pos:column="18">=<pos:position pos:line="191" pos:column="19"/></operator> <call><name pos:line="191" pos:column="20">apr_table_get<pos:position pos:line="191" pos:column="33"/></name><argument_list pos:line="191" pos:column="33">(<argument><expr><name><name pos:line="191" pos:column="34">r<pos:position pos:line="191" pos:column="35"/></name><operator pos:line="191" pos:column="35">-&gt;<pos:position pos:line="191" pos:column="40"/></operator><name pos:line="191" pos:column="37">headers_out<pos:position pos:line="191" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="50">"Location"<pos:position pos:line="191" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="61"/></argument_list></call><operator pos:line="191" pos:column="61">)<pos:position pos:line="191" pos:column="62"/></operator> <operator pos:line="191" pos:column="63">!=<pos:position pos:line="191" pos:column="65"/></operator> <name pos:line="191" pos:column="66">NULL<pos:position pos:line="191" pos:column="70"/></name></expr>)<pos:position pos:line="191" pos:column="71"/></condition><then pos:line="191" pos:column="71"> <block pos:line="191" pos:column="72">{
            <expr_stmt><expr><call><name pos:line="192" pos:column="13">apr_table_set<pos:position pos:line="192" pos:column="26"/></name><argument_list pos:line="192" pos:column="26">(<argument><expr><name><name pos:line="192" pos:column="27">r<pos:position pos:line="192" pos:column="28"/></name><operator pos:line="192" pos:column="28">-&gt;<pos:position pos:line="192" pos:column="33"/></operator><name pos:line="192" pos:column="30">headers_out<pos:position pos:line="192" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="43">"Location"<pos:position pos:line="192" pos:column="53"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="193" pos:column="27">ap_proxy_location_reverse_map<pos:position pos:line="193" pos:column="56"/></name><argument_list pos:line="193" pos:column="56">(<argument><expr><name pos:line="193" pos:column="57">r<pos:position pos:line="193" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="60">conf<pos:position pos:line="193" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="66">buf<pos:position pos:line="193" pos:column="69"/></name></expr></argument>)<pos:position pos:line="193" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="193" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="194" pos:column="10"/></block></then></if>
        <if pos:line="195" pos:column="9">if <condition pos:line="195" pos:column="12">(<expr><operator pos:line="195" pos:column="13">(<pos:position pos:line="195" pos:column="14"/></operator><name pos:line="195" pos:column="14">buf<pos:position pos:line="195" pos:column="17"/></name> <operator pos:line="195" pos:column="18">=<pos:position pos:line="195" pos:column="19"/></operator> <call><name pos:line="195" pos:column="20">apr_table_get<pos:position pos:line="195" pos:column="33"/></name><argument_list pos:line="195" pos:column="33">(<argument><expr><name><name pos:line="195" pos:column="34">r<pos:position pos:line="195" pos:column="35"/></name><operator pos:line="195" pos:column="35">-&gt;<pos:position pos:line="195" pos:column="40"/></operator><name pos:line="195" pos:column="37">headers_out<pos:position pos:line="195" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="195" pos:column="50">"Content-Location"<pos:position pos:line="195" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="195" pos:column="69"/></argument_list></call><operator pos:line="195" pos:column="69">)<pos:position pos:line="195" pos:column="70"/></operator> <operator pos:line="195" pos:column="71">!=<pos:position pos:line="195" pos:column="73"/></operator> <name pos:line="195" pos:column="74">NULL<pos:position pos:line="195" pos:column="78"/></name></expr>)<pos:position pos:line="195" pos:column="79"/></condition><then pos:line="195" pos:column="79"> <block pos:line="195" pos:column="80">{
            <expr_stmt><expr><call><name pos:line="196" pos:column="13">apr_table_set<pos:position pos:line="196" pos:column="26"/></name><argument_list pos:line="196" pos:column="26">(<argument><expr><name><name pos:line="196" pos:column="27">r<pos:position pos:line="196" pos:column="28"/></name><operator pos:line="196" pos:column="28">-&gt;<pos:position pos:line="196" pos:column="33"/></operator><name pos:line="196" pos:column="30">headers_out<pos:position pos:line="196" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="43">"Content-Location"<pos:position pos:line="196" pos:column="61"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="197" pos:column="27">ap_proxy_location_reverse_map<pos:position pos:line="197" pos:column="56"/></name><argument_list pos:line="197" pos:column="56">(<argument><expr><name pos:line="197" pos:column="57">r<pos:position pos:line="197" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="60">conf<pos:position pos:line="197" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="66">buf<pos:position pos:line="197" pos:column="69"/></name></expr></argument>)<pos:position pos:line="197" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="197" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="198" pos:column="10"/></block></then></if>
        <if pos:line="199" pos:column="9">if <condition pos:line="199" pos:column="12">(<expr><operator pos:line="199" pos:column="13">(<pos:position pos:line="199" pos:column="14"/></operator><name pos:line="199" pos:column="14">buf<pos:position pos:line="199" pos:column="17"/></name> <operator pos:line="199" pos:column="18">=<pos:position pos:line="199" pos:column="19"/></operator> <call><name pos:line="199" pos:column="20">apr_table_get<pos:position pos:line="199" pos:column="33"/></name><argument_list pos:line="199" pos:column="33">(<argument><expr><name><name pos:line="199" pos:column="34">r<pos:position pos:line="199" pos:column="35"/></name><operator pos:line="199" pos:column="35">-&gt;<pos:position pos:line="199" pos:column="40"/></operator><name pos:line="199" pos:column="37">headers_out<pos:position pos:line="199" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="199" pos:column="50">"URI"<pos:position pos:line="199" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="56"/></argument_list></call><operator pos:line="199" pos:column="56">)<pos:position pos:line="199" pos:column="57"/></operator> <operator pos:line="199" pos:column="58">!=<pos:position pos:line="199" pos:column="60"/></operator> <name pos:line="199" pos:column="61">NULL<pos:position pos:line="199" pos:column="65"/></name></expr>)<pos:position pos:line="199" pos:column="66"/></condition><then pos:line="199" pos:column="66"> <block pos:line="199" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="200" pos:column="13">apr_table_set<pos:position pos:line="200" pos:column="26"/></name><argument_list pos:line="200" pos:column="26">(<argument><expr><name><name pos:line="200" pos:column="27">r<pos:position pos:line="200" pos:column="28"/></name><operator pos:line="200" pos:column="28">-&gt;<pos:position pos:line="200" pos:column="33"/></operator><name pos:line="200" pos:column="30">headers_out<pos:position pos:line="200" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="200" pos:column="43">"URI"<pos:position pos:line="200" pos:column="48"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="201" pos:column="27">ap_proxy_location_reverse_map<pos:position pos:line="201" pos:column="56"/></name><argument_list pos:line="201" pos:column="56">(<argument><expr><name pos:line="201" pos:column="57">r<pos:position pos:line="201" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="60">conf<pos:position pos:line="201" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="66">buf<pos:position pos:line="201" pos:column="69"/></name></expr></argument>)<pos:position pos:line="201" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="201" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="202" pos:column="10"/></block></then></if>

        <if pos:line="204" pos:column="9">if <condition pos:line="204" pos:column="12">(<expr><operator pos:line="204" pos:column="13">(<pos:position pos:line="204" pos:column="14"/></operator><name><name pos:line="204" pos:column="14">r<pos:position pos:line="204" pos:column="15"/></name><operator pos:line="204" pos:column="15">-&gt;<pos:position pos:line="204" pos:column="20"/></operator><name pos:line="204" pos:column="17">status<pos:position pos:line="204" pos:column="23"/></name></name> <operator pos:line="204" pos:column="24">==<pos:position pos:line="204" pos:column="26"/></operator> <literal type="number" pos:line="204" pos:column="27">401<pos:position pos:line="204" pos:column="30"/></literal><operator pos:line="204" pos:column="30">)<pos:position pos:line="204" pos:column="31"/></operator> <operator pos:line="204" pos:column="32">&amp;&amp;<pos:position pos:line="204" pos:column="42"/></operator> <operator pos:line="204" pos:column="35">(<pos:position pos:line="204" pos:column="36"/></operator><name><name pos:line="204" pos:column="36">conf<pos:position pos:line="204" pos:column="40"/></name><operator pos:line="204" pos:column="40">-&gt;<pos:position pos:line="204" pos:column="45"/></operator><name pos:line="204" pos:column="42">error_override<pos:position pos:line="204" pos:column="56"/></name></name> <operator pos:line="204" pos:column="57">!=<pos:position pos:line="204" pos:column="59"/></operator> <literal type="number" pos:line="204" pos:column="60">0<pos:position pos:line="204" pos:column="61"/></literal><operator pos:line="204" pos:column="61">)<pos:position pos:line="204" pos:column="62"/></operator></expr>)<pos:position pos:line="204" pos:column="63"/></condition><then pos:line="204" pos:column="63"> <block pos:line="204" pos:column="64">{
            <decl_stmt><decl><type><specifier pos:line="205" pos:column="13">const<pos:position pos:line="205" pos:column="18"/></specifier> <name pos:line="205" pos:column="19">char<pos:position pos:line="205" pos:column="23"/></name> <modifier pos:line="205" pos:column="24">*<pos:position pos:line="205" pos:column="25"/></modifier></type><name pos:line="205" pos:column="25">wa<pos:position pos:line="205" pos:column="27"/></name> <init pos:line="205" pos:column="28">= <expr><literal type="string" pos:line="205" pos:column="30">"WWW-Authenticate"<pos:position pos:line="205" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="205" pos:column="49"/></decl_stmt>
            <if pos:line="206" pos:column="13">if <condition pos:line="206" pos:column="16">(<expr><operator pos:line="206" pos:column="17">(<pos:position pos:line="206" pos:column="18"/></operator><name pos:line="206" pos:column="18">buf<pos:position pos:line="206" pos:column="21"/></name> <operator pos:line="206" pos:column="22">=<pos:position pos:line="206" pos:column="23"/></operator> <call><name pos:line="206" pos:column="24">apr_table_get<pos:position pos:line="206" pos:column="37"/></name><argument_list pos:line="206" pos:column="37">(<argument><expr><name><name pos:line="206" pos:column="38">r<pos:position pos:line="206" pos:column="39"/></name><operator pos:line="206" pos:column="39">-&gt;<pos:position pos:line="206" pos:column="44"/></operator><name pos:line="206" pos:column="41">headers_out<pos:position pos:line="206" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="54">wa<pos:position pos:line="206" pos:column="56"/></name></expr></argument>)<pos:position pos:line="206" pos:column="57"/></argument_list></call><operator pos:line="206" pos:column="57">)<pos:position pos:line="206" pos:column="58"/></operator></expr>)<pos:position pos:line="206" pos:column="59"/></condition><then pos:line="206" pos:column="59"> <block pos:line="206" pos:column="60">{
                <expr_stmt><expr><call><name pos:line="207" pos:column="17">apr_table_set<pos:position pos:line="207" pos:column="30"/></name><argument_list pos:line="207" pos:column="30">(<argument><expr><name><name pos:line="207" pos:column="31">r<pos:position pos:line="207" pos:column="32"/></name><operator pos:line="207" pos:column="32">-&gt;<pos:position pos:line="207" pos:column="37"/></operator><name pos:line="207" pos:column="34">err_headers_out<pos:position pos:line="207" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="51">wa<pos:position pos:line="207" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="55">buf<pos:position pos:line="207" pos:column="58"/></name></expr></argument>)<pos:position pos:line="207" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="208" pos:column="14"/></block></then> <else pos:line="208" pos:column="15">else <block pos:line="208" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="209" pos:column="17">ap_log_error<pos:position pos:line="209" pos:column="29"/></name><argument_list pos:line="209" pos:column="29">(<argument><expr><name pos:line="209" pos:column="30">APLOG_MARK<pos:position pos:line="209" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="42">APLOG_DEBUG<pos:position pos:line="209" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="209" pos:column="55">0<pos:position pos:line="209" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="209" pos:column="58">r<pos:position pos:line="209" pos:column="59"/></name><operator pos:line="209" pos:column="59">-&gt;<pos:position pos:line="209" pos:column="64"/></operator><name pos:line="209" pos:column="61">server<pos:position pos:line="209" pos:column="67"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="210" pos:column="30">"proxy: origin server sent 401 without WWW-Authenticate header"<pos:position pos:line="210" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="210" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="95"/></expr_stmt>
            }<pos:position pos:line="211" pos:column="14"/></block></else></if>
        }<pos:position pos:line="212" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="214" pos:column="9">r<pos:position pos:line="214" pos:column="10"/></name><operator pos:line="214" pos:column="10">-&gt;<pos:position pos:line="214" pos:column="15"/></operator><name pos:line="214" pos:column="12">sent_bodyct<pos:position pos:line="214" pos:column="23"/></name></name> <operator pos:line="214" pos:column="24">=<pos:position pos:line="214" pos:column="25"/></operator> <literal type="number" pos:line="214" pos:column="26">1<pos:position pos:line="214" pos:column="27"/></literal></expr>;<pos:position pos:line="214" pos:column="28"/></expr_stmt>
        <comment type="block" pos:line="215" pos:column="9">/* Is it an HTTP/0.9 response? If so, send the extra data */</comment>
        <if pos:line="216" pos:column="9">if <condition pos:line="216" pos:column="12">(<expr><name pos:line="216" pos:column="13">backasswards<pos:position pos:line="216" pos:column="25"/></name></expr>)<pos:position pos:line="216" pos:column="26"/></condition><then pos:line="216" pos:column="26"> <block pos:line="216" pos:column="27">{
            <decl_stmt><decl><type><name pos:line="217" pos:column="13">apr_ssize_t<pos:position pos:line="217" pos:column="24"/></name></type> <name pos:line="217" pos:column="25">cntr<pos:position pos:line="217" pos:column="29"/></name> <init pos:line="217" pos:column="30">= <expr><name pos:line="217" pos:column="32">len<pos:position pos:line="217" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="217" pos:column="36"/></decl_stmt>
            <expr_stmt><expr><name pos:line="218" pos:column="13">e<pos:position pos:line="218" pos:column="14"/></name> <operator pos:line="218" pos:column="15">=<pos:position pos:line="218" pos:column="16"/></operator> <call><name pos:line="218" pos:column="17">apr_bucket_heap_create<pos:position pos:line="218" pos:column="39"/></name><argument_list pos:line="218" pos:column="39">(<argument><expr><name pos:line="218" pos:column="40">buffer<pos:position pos:line="218" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="48">cntr<pos:position pos:line="218" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="54">NULL<pos:position pos:line="218" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="218" pos:column="60">c<pos:position pos:line="218" pos:column="61"/></name><operator pos:line="218" pos:column="61">-&gt;<pos:position pos:line="218" pos:column="66"/></operator><name pos:line="218" pos:column="63">bucket_alloc<pos:position pos:line="218" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="218" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="219" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="219" pos:column="36"/></name><argument_list pos:line="219" pos:column="36">(<argument><expr><name pos:line="219" pos:column="37">bb<pos:position pos:line="219" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="41">e<pos:position pos:line="219" pos:column="42"/></name></expr></argument>)<pos:position pos:line="219" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="220" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="222" pos:column="9">/* send body - but only if a body is expected */</comment>
        <if pos:line="223" pos:column="9">if <condition pos:line="223" pos:column="12">(<expr><operator pos:line="223" pos:column="13">(<pos:position pos:line="223" pos:column="14"/></operator><operator pos:line="223" pos:column="14">!<pos:position pos:line="223" pos:column="15"/></operator><name><name pos:line="223" pos:column="15">r<pos:position pos:line="223" pos:column="16"/></name><operator pos:line="223" pos:column="16">-&gt;<pos:position pos:line="223" pos:column="21"/></operator><name pos:line="223" pos:column="18">header_only<pos:position pos:line="223" pos:column="29"/></name></name><operator pos:line="223" pos:column="29">)<pos:position pos:line="223" pos:column="30"/></operator> <operator pos:line="223" pos:column="31">&amp;&amp;<pos:position pos:line="223" pos:column="41"/></operator>                   <comment type="block" pos:line="223" pos:column="52">/* not HEAD request */</comment>
            <operator pos:line="224" pos:column="13">(<pos:position pos:line="224" pos:column="14"/></operator><name><name pos:line="224" pos:column="14">r<pos:position pos:line="224" pos:column="15"/></name><operator pos:line="224" pos:column="15">-&gt;<pos:position pos:line="224" pos:column="20"/></operator><name pos:line="224" pos:column="17">status<pos:position pos:line="224" pos:column="23"/></name></name> <operator pos:line="224" pos:column="24">&gt;<pos:position pos:line="224" pos:column="28"/></operator> <literal type="number" pos:line="224" pos:column="26">199<pos:position pos:line="224" pos:column="29"/></literal><operator pos:line="224" pos:column="29">)<pos:position pos:line="224" pos:column="30"/></operator> <operator pos:line="224" pos:column="31">&amp;&amp;<pos:position pos:line="224" pos:column="41"/></operator>                   <comment type="block" pos:line="224" pos:column="52">/* not any 1xx response */</comment>
            <operator pos:line="225" pos:column="13">(<pos:position pos:line="225" pos:column="14"/></operator><name><name pos:line="225" pos:column="14">r<pos:position pos:line="225" pos:column="15"/></name><operator pos:line="225" pos:column="15">-&gt;<pos:position pos:line="225" pos:column="20"/></operator><name pos:line="225" pos:column="17">status<pos:position pos:line="225" pos:column="23"/></name></name> <operator pos:line="225" pos:column="24">!=<pos:position pos:line="225" pos:column="26"/></operator> <name pos:line="225" pos:column="27">HTTP_NO_CONTENT<pos:position pos:line="225" pos:column="42"/></name><operator pos:line="225" pos:column="42">)<pos:position pos:line="225" pos:column="43"/></operator> <operator pos:line="225" pos:column="44">&amp;&amp;<pos:position pos:line="225" pos:column="54"/></operator>      <comment type="block" pos:line="225" pos:column="52">/* not 204 */</comment>
            <operator pos:line="226" pos:column="13">(<pos:position pos:line="226" pos:column="14"/></operator><name><name pos:line="226" pos:column="14">r<pos:position pos:line="226" pos:column="15"/></name><operator pos:line="226" pos:column="15">-&gt;<pos:position pos:line="226" pos:column="20"/></operator><name pos:line="226" pos:column="17">status<pos:position pos:line="226" pos:column="23"/></name></name> <operator pos:line="226" pos:column="24">!=<pos:position pos:line="226" pos:column="26"/></operator> <name pos:line="226" pos:column="27">HTTP_RESET_CONTENT<pos:position pos:line="226" pos:column="45"/></name><operator pos:line="226" pos:column="45">)<pos:position pos:line="226" pos:column="46"/></operator> <operator pos:line="226" pos:column="47">&amp;&amp;<pos:position pos:line="226" pos:column="57"/></operator>   <comment type="block" pos:line="226" pos:column="52">/* not 205 */</comment>
            <operator pos:line="227" pos:column="13">(<pos:position pos:line="227" pos:column="14"/></operator><name><name pos:line="227" pos:column="14">r<pos:position pos:line="227" pos:column="15"/></name><operator pos:line="227" pos:column="15">-&gt;<pos:position pos:line="227" pos:column="20"/></operator><name pos:line="227" pos:column="17">status<pos:position pos:line="227" pos:column="23"/></name></name> <operator pos:line="227" pos:column="24">!=<pos:position pos:line="227" pos:column="26"/></operator> <name pos:line="227" pos:column="27">HTTP_NOT_MODIFIED<pos:position pos:line="227" pos:column="44"/></name><operator pos:line="227" pos:column="44">)<pos:position pos:line="227" pos:column="45"/></operator></expr>)<pos:position pos:line="227" pos:column="46"/></condition><then pos:line="227" pos:column="46"> <block pos:line="227" pos:column="47">{    <comment type="block" pos:line="227" pos:column="52">/* not 304 */</comment>

            <comment type="block" pos:line="229" pos:column="13">/* We need to copy the output headers and treat them as input
             * headers as well.  BUT, we need to do this before we remove
             * TE, so that they are preserved accordingly for
             * ap_http_filter to know where to end.
             */</comment>
            <expr_stmt><expr><name><name pos:line="234" pos:column="13">rp<pos:position pos:line="234" pos:column="15"/></name><operator pos:line="234" pos:column="15">-&gt;<pos:position pos:line="234" pos:column="20"/></operator><name pos:line="234" pos:column="17">headers_in<pos:position pos:line="234" pos:column="27"/></name></name> <operator pos:line="234" pos:column="28">=<pos:position pos:line="234" pos:column="29"/></operator> <call><name pos:line="234" pos:column="30">apr_table_copy<pos:position pos:line="234" pos:column="44"/></name><argument_list pos:line="234" pos:column="44">(<argument><expr><name><name pos:line="234" pos:column="45">r<pos:position pos:line="234" pos:column="46"/></name><operator pos:line="234" pos:column="46">-&gt;<pos:position pos:line="234" pos:column="51"/></operator><name pos:line="234" pos:column="48">pool<pos:position pos:line="234" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="234" pos:column="54">r<pos:position pos:line="234" pos:column="55"/></name><operator pos:line="234" pos:column="55">-&gt;<pos:position pos:line="234" pos:column="60"/></operator><name pos:line="234" pos:column="57">headers_out<pos:position pos:line="234" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="234" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="70"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="236" pos:column="13">apr_table_unset<pos:position pos:line="236" pos:column="28"/></name><argument_list pos:line="236" pos:column="28">(<argument><expr><name><name pos:line="236" pos:column="29">r<pos:position pos:line="236" pos:column="30"/></name><operator pos:line="236" pos:column="30">-&gt;<pos:position pos:line="236" pos:column="35"/></operator><name pos:line="236" pos:column="32">headers_out<pos:position pos:line="236" pos:column="43"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="236" pos:column="44">"Transfer-Encoding"<pos:position pos:line="236" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="236" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="65"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="238" pos:column="13">ap_log_error<pos:position pos:line="238" pos:column="25"/></name><argument_list pos:line="238" pos:column="25">(<argument><expr><name pos:line="238" pos:column="26">APLOG_MARK<pos:position pos:line="238" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="38">APLOG_DEBUG<pos:position pos:line="238" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="238" pos:column="51">0<pos:position pos:line="238" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="238" pos:column="54">r<pos:position pos:line="238" pos:column="55"/></name><operator pos:line="238" pos:column="55">-&gt;<pos:position pos:line="238" pos:column="60"/></operator><name pos:line="238" pos:column="57">server<pos:position pos:line="238" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="239" pos:column="26">"proxy: start body send"<pos:position pos:line="239" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="239" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="52"/></expr_stmt>
             
            <comment type="block" pos:line="241" pos:column="13">/*
             * if we are overriding the errors, we can't put the content
             * of the page into the brigade
             */</comment>
            <if pos:line="245" pos:column="13">if <condition pos:line="245" pos:column="16">( <expr><operator pos:line="245" pos:column="18">(<pos:position pos:line="245" pos:column="19"/></operator><name><name pos:line="245" pos:column="19">conf<pos:position pos:line="245" pos:column="23"/></name><operator pos:line="245" pos:column="23">-&gt;<pos:position pos:line="245" pos:column="28"/></operator><name pos:line="245" pos:column="25">error_override<pos:position pos:line="245" pos:column="39"/></name></name> <operator pos:line="245" pos:column="40">==<pos:position pos:line="245" pos:column="42"/></operator><literal type="number" pos:line="245" pos:column="42">0<pos:position pos:line="245" pos:column="43"/></literal><operator pos:line="245" pos:column="43">)<pos:position pos:line="245" pos:column="44"/></operator> <operator pos:line="245" pos:column="45">||<pos:position pos:line="245" pos:column="47"/></operator> <name><name pos:line="245" pos:column="48">r<pos:position pos:line="245" pos:column="49"/></name><operator pos:line="245" pos:column="49">-&gt;<pos:position pos:line="245" pos:column="54"/></operator><name pos:line="245" pos:column="51">status<pos:position pos:line="245" pos:column="57"/></name></name> <operator pos:line="245" pos:column="58">&lt;<pos:position pos:line="245" pos:column="62"/></operator> <literal type="number" pos:line="245" pos:column="60">400<pos:position pos:line="245" pos:column="63"/></literal></expr> )<pos:position pos:line="245" pos:column="65"/></condition><then pos:line="245" pos:column="65"> <block pos:line="245" pos:column="66">{

                <comment type="block" pos:line="247" pos:column="17">/* read the body, pass it to the output filters */</comment>
                <decl_stmt><decl><type><name pos:line="248" pos:column="17">int<pos:position pos:line="248" pos:column="20"/></name></type> <name pos:line="248" pos:column="21">finish<pos:position pos:line="248" pos:column="27"/></name> <init pos:line="248" pos:column="28">= <expr><name pos:line="248" pos:column="30">FALSE<pos:position pos:line="248" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="248" pos:column="36"/></decl_stmt>
                <while pos:line="249" pos:column="17">while <condition pos:line="249" pos:column="23">(<expr><call><name pos:line="249" pos:column="24">ap_get_brigade<pos:position pos:line="249" pos:column="38"/></name><argument_list pos:line="249" pos:column="38">(<argument><expr><name><name pos:line="249" pos:column="39">rp<pos:position pos:line="249" pos:column="41"/></name><operator pos:line="249" pos:column="41">-&gt;<pos:position pos:line="249" pos:column="46"/></operator><name pos:line="249" pos:column="43">input_filters<pos:position pos:line="249" pos:column="56"/></name></name></expr></argument>, 
                                      <argument><expr><name pos:line="250" pos:column="39">bb<pos:position pos:line="250" pos:column="41"/></name></expr></argument>, 
                                      <argument><expr><name pos:line="251" pos:column="39">AP_MODE_READBYTES<pos:position pos:line="251" pos:column="56"/></name></expr></argument>, 
                                      <argument><expr><name pos:line="252" pos:column="39">APR_BLOCK_READ<pos:position pos:line="252" pos:column="53"/></name></expr></argument>, 
                                      <argument><expr><name><name pos:line="253" pos:column="39">conf<pos:position pos:line="253" pos:column="43"/></name><operator pos:line="253" pos:column="43">-&gt;<pos:position pos:line="253" pos:column="48"/></operator><name pos:line="253" pos:column="45">io_buffer_size<pos:position pos:line="253" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="253" pos:column="60"/></argument_list></call> <operator pos:line="253" pos:column="61">==<pos:position pos:line="253" pos:column="63"/></operator> <name pos:line="253" pos:column="64">APR_SUCCESS<pos:position pos:line="253" pos:column="75"/></name></expr>)<pos:position pos:line="253" pos:column="76"/></condition> <block pos:line="253" pos:column="77">{
<cpp:if pos:line="254" pos:column="1">#<cpp:directive pos:line="254" pos:column="2">if<pos:position pos:line="254" pos:column="4"/></cpp:directive> <expr><name pos:line="254" pos:column="5">DEBUGGING<pos:position pos:line="254" pos:column="14"/></name></expr></cpp:if>
                    <block pos:line="255" pos:column="21">{
                    <decl_stmt><decl><type><name pos:line="256" pos:column="21">apr_off_t<pos:position pos:line="256" pos:column="30"/></name></type> <name pos:line="256" pos:column="31">readbytes<pos:position pos:line="256" pos:column="40"/></name></decl>;<pos:position pos:line="256" pos:column="41"/></decl_stmt>
                    <expr_stmt><expr><call><name pos:line="257" pos:column="21">apr_brigade_length<pos:position pos:line="257" pos:column="39"/></name><argument_list pos:line="257" pos:column="39">(<argument><expr><name pos:line="257" pos:column="40">bb<pos:position pos:line="257" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="257" pos:column="44">0<pos:position pos:line="257" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="257" pos:column="47">&amp;<pos:position pos:line="257" pos:column="52"/></operator><name pos:line="257" pos:column="48">readbytes<pos:position pos:line="257" pos:column="57"/></name></expr></argument>)<pos:position pos:line="257" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="59"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="258" pos:column="21">ap_log_error<pos:position pos:line="258" pos:column="33"/></name><argument_list pos:line="258" pos:column="33">(<argument><expr><name pos:line="258" pos:column="34">APLOG_MARK<pos:position pos:line="258" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="258" pos:column="46">APLOG_DEBUG<pos:position pos:line="258" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="258" pos:column="59">0<pos:position pos:line="258" pos:column="60"/></literal></expr></argument>,
                                 <argument><expr><name><name pos:line="259" pos:column="34">r<pos:position pos:line="259" pos:column="35"/></name><operator pos:line="259" pos:column="35">-&gt;<pos:position pos:line="259" pos:column="40"/></operator><name pos:line="259" pos:column="37">server<pos:position pos:line="259" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="259" pos:column="45">"proxy (PID %d): readbytes: %#x"<pos:position pos:line="259" pos:column="77"/></literal></expr></argument>,
                                 <argument><expr><call><name pos:line="260" pos:column="34">getpid<pos:position pos:line="260" pos:column="40"/></name><argument_list pos:line="260" pos:column="40">()<pos:position pos:line="260" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="260" pos:column="44">readbytes<pos:position pos:line="260" pos:column="53"/></name></expr></argument>)<pos:position pos:line="260" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="55"/></expr_stmt>
                    }<pos:position pos:line="261" pos:column="22"/></block>
<cpp:endif pos:line="262" pos:column="1">#<cpp:directive pos:line="262" pos:column="2">endif<pos:position pos:line="262" pos:column="7"/></cpp:directive></cpp:endif>
                    <comment type="block" pos:line="263" pos:column="21">/* sanity check */</comment>
                    <if pos:line="264" pos:column="21">if <condition pos:line="264" pos:column="24">(<expr><call><name pos:line="264" pos:column="25">APR_BRIGADE_EMPTY<pos:position pos:line="264" pos:column="42"/></name><argument_list pos:line="264" pos:column="42">(<argument><expr><name pos:line="264" pos:column="43">bb<pos:position pos:line="264" pos:column="45"/></name></expr></argument>)<pos:position pos:line="264" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="264" pos:column="47"/></condition><then pos:line="264" pos:column="47"> <block pos:line="264" pos:column="48">{
                        <expr_stmt><expr><call><name pos:line="265" pos:column="25">apr_brigade_cleanup<pos:position pos:line="265" pos:column="44"/></name><argument_list pos:line="265" pos:column="44">(<argument><expr><name pos:line="265" pos:column="45">bb<pos:position pos:line="265" pos:column="47"/></name></expr></argument>)<pos:position pos:line="265" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="49"/></expr_stmt>
                        <break pos:line="266" pos:column="25">break;<pos:position pos:line="266" pos:column="31"/></break>
                    }<pos:position pos:line="267" pos:column="22"/></block></then></if>

                    <comment type="block" pos:line="269" pos:column="21">/* found the last brigade? */</comment>
                    <if pos:line="270" pos:column="21">if <condition pos:line="270" pos:column="24">(<expr><call><name pos:line="270" pos:column="25">APR_BUCKET_IS_EOS<pos:position pos:line="270" pos:column="42"/></name><argument_list pos:line="270" pos:column="42">(<argument><expr><call><name pos:line="270" pos:column="43">APR_BRIGADE_LAST<pos:position pos:line="270" pos:column="59"/></name><argument_list pos:line="270" pos:column="59">(<argument><expr><name pos:line="270" pos:column="60">bb<pos:position pos:line="270" pos:column="62"/></name></expr></argument>)<pos:position pos:line="270" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="270" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="270" pos:column="65"/></condition><then pos:line="270" pos:column="65"> <block pos:line="270" pos:column="66">{
                        <comment type="block" pos:line="271" pos:column="25">/* if this is the last brigade, cleanup the
                         * backend connection first to prevent the
                         * backend server from hanging around waiting
                         * for a slow client to eat these bytes
                         */</comment>
                        <expr_stmt><expr><call><name pos:line="276" pos:column="25">ap_proxy_http_cleanup<pos:position pos:line="276" pos:column="46"/></name><argument_list pos:line="276" pos:column="46">(<argument><expr><name pos:line="276" pos:column="47">r<pos:position pos:line="276" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="276" pos:column="50">p_conn<pos:position pos:line="276" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="276" pos:column="58">backend<pos:position pos:line="276" pos:column="65"/></name></expr></argument>)<pos:position pos:line="276" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="67"/></expr_stmt>
                        <comment type="block" pos:line="277" pos:column="25">/* signal that we must leave */</comment>
                        <expr_stmt><expr><name pos:line="278" pos:column="25">finish<pos:position pos:line="278" pos:column="31"/></name> <operator pos:line="278" pos:column="32">=<pos:position pos:line="278" pos:column="33"/></operator> <name pos:line="278" pos:column="34">TRUE<pos:position pos:line="278" pos:column="38"/></name></expr>;<pos:position pos:line="278" pos:column="39"/></expr_stmt>
                    }<pos:position pos:line="279" pos:column="22"/></block></then></if>

                    <comment type="block" pos:line="281" pos:column="21">/* try send what we read */</comment>
                    <if pos:line="282" pos:column="21">if <condition pos:line="282" pos:column="24">(<expr><call><name pos:line="282" pos:column="25">ap_pass_brigade<pos:position pos:line="282" pos:column="40"/></name><argument_list pos:line="282" pos:column="40">(<argument><expr><name><name pos:line="282" pos:column="41">r<pos:position pos:line="282" pos:column="42"/></name><operator pos:line="282" pos:column="42">-&gt;<pos:position pos:line="282" pos:column="47"/></operator><name pos:line="282" pos:column="44">output_filters<pos:position pos:line="282" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="282" pos:column="60">bb<pos:position pos:line="282" pos:column="62"/></name></expr></argument>)<pos:position pos:line="282" pos:column="63"/></argument_list></call> <operator pos:line="282" pos:column="64">!=<pos:position pos:line="282" pos:column="66"/></operator> <name pos:line="282" pos:column="67">APR_SUCCESS<pos:position pos:line="282" pos:column="78"/></name>
                        <operator pos:line="283" pos:column="25">||<pos:position pos:line="283" pos:column="27"/></operator> <name><name pos:line="283" pos:column="28">c<pos:position pos:line="283" pos:column="29"/></name><operator pos:line="283" pos:column="29">-&gt;<pos:position pos:line="283" pos:column="34"/></operator><name pos:line="283" pos:column="31">aborted<pos:position pos:line="283" pos:column="38"/></name></name></expr>)<pos:position pos:line="283" pos:column="39"/></condition><then pos:line="283" pos:column="39"> <block pos:line="283" pos:column="40">{
                        <comment type="block" pos:line="284" pos:column="25">/* Ack! Phbtt! Die! User aborted! */</comment>
                        <expr_stmt><expr><name><name pos:line="285" pos:column="25">p_conn<pos:position pos:line="285" pos:column="31"/></name><operator pos:line="285" pos:column="31">-&gt;<pos:position pos:line="285" pos:column="36"/></operator><name pos:line="285" pos:column="33">close<pos:position pos:line="285" pos:column="38"/></name></name> <operator pos:line="285" pos:column="39">=<pos:position pos:line="285" pos:column="40"/></operator> <literal type="number" pos:line="285" pos:column="41">1<pos:position pos:line="285" pos:column="42"/></literal></expr>;<pos:position pos:line="285" pos:column="43"/></expr_stmt>  <comment type="block" pos:line="285" pos:column="45">/* this causes socket close below */</comment>
                        <expr_stmt><expr><name pos:line="286" pos:column="25">finish<pos:position pos:line="286" pos:column="31"/></name> <operator pos:line="286" pos:column="32">=<pos:position pos:line="286" pos:column="33"/></operator> <name pos:line="286" pos:column="34">TRUE<pos:position pos:line="286" pos:column="38"/></name></expr>;<pos:position pos:line="286" pos:column="39"/></expr_stmt>
                    }<pos:position pos:line="287" pos:column="22"/></block></then></if>

                    <comment type="block" pos:line="289" pos:column="21">/* make sure we always clean up after ourselves */</comment>
                    <expr_stmt><expr><call><name pos:line="290" pos:column="21">apr_brigade_cleanup<pos:position pos:line="290" pos:column="40"/></name><argument_list pos:line="290" pos:column="40">(<argument><expr><name pos:line="290" pos:column="41">bb<pos:position pos:line="290" pos:column="43"/></name></expr></argument>)<pos:position pos:line="290" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="45"/></expr_stmt>

                    <comment type="block" pos:line="292" pos:column="21">/* if we are done, leave */</comment>
                    <if pos:line="293" pos:column="21">if <condition pos:line="293" pos:column="24">(<expr><name pos:line="293" pos:column="25">TRUE<pos:position pos:line="293" pos:column="29"/></name> <operator pos:line="293" pos:column="30">==<pos:position pos:line="293" pos:column="32"/></operator> <name pos:line="293" pos:column="33">finish<pos:position pos:line="293" pos:column="39"/></name></expr>)<pos:position pos:line="293" pos:column="40"/></condition><then pos:line="293" pos:column="40"> <block pos:line="293" pos:column="41">{
                        <break pos:line="294" pos:column="25">break;<pos:position pos:line="294" pos:column="31"/></break>
                    }<pos:position pos:line="295" pos:column="22"/></block></then></if>
                }<pos:position pos:line="296" pos:column="18"/></block></while>
            }<pos:position pos:line="297" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="298" pos:column="13">ap_log_error<pos:position pos:line="298" pos:column="25"/></name><argument_list pos:line="298" pos:column="25">(<argument><expr><name pos:line="298" pos:column="26">APLOG_MARK<pos:position pos:line="298" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="38">APLOG_DEBUG<pos:position pos:line="298" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="298" pos:column="51">0<pos:position pos:line="298" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="298" pos:column="54">r<pos:position pos:line="298" pos:column="55"/></name><operator pos:line="298" pos:column="55">-&gt;<pos:position pos:line="298" pos:column="60"/></operator><name pos:line="298" pos:column="57">server<pos:position pos:line="298" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="299" pos:column="26">"proxy: end body send"<pos:position pos:line="299" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="299" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="300" pos:column="10"/></block></then> <else pos:line="300" pos:column="11">else <block pos:line="300" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="301" pos:column="13">ap_log_error<pos:position pos:line="301" pos:column="25"/></name><argument_list pos:line="301" pos:column="25">(<argument><expr><name pos:line="301" pos:column="26">APLOG_MARK<pos:position pos:line="301" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="301" pos:column="38">APLOG_DEBUG<pos:position pos:line="301" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="301" pos:column="51">0<pos:position pos:line="301" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="301" pos:column="54">r<pos:position pos:line="301" pos:column="55"/></name><operator pos:line="301" pos:column="55">-&gt;<pos:position pos:line="301" pos:column="60"/></operator><name pos:line="301" pos:column="57">server<pos:position pos:line="301" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="302" pos:column="26">"proxy: header only"<pos:position pos:line="302" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="302" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="303" pos:column="10"/></block></else></if>
    }<pos:position pos:line="304" pos:column="6"/></block></while>

    <if pos:line="306" pos:column="5">if <condition pos:line="306" pos:column="8">( <expr><name><name pos:line="306" pos:column="10">conf<pos:position pos:line="306" pos:column="14"/></name><operator pos:line="306" pos:column="14">-&gt;<pos:position pos:line="306" pos:column="19"/></operator><name pos:line="306" pos:column="16">error_override<pos:position pos:line="306" pos:column="30"/></name></name></expr> )<pos:position pos:line="306" pos:column="32"/></condition><then pos:line="306" pos:column="32"> <block pos:line="306" pos:column="33">{
        <comment type="block" pos:line="307" pos:column="9">/* the code above this checks for 'OK' which is what the hook expects */</comment>
        <if pos:line="308" pos:column="9">if <condition pos:line="308" pos:column="12">( <expr><name><name pos:line="308" pos:column="14">r<pos:position pos:line="308" pos:column="15"/></name><operator pos:line="308" pos:column="15">-&gt;<pos:position pos:line="308" pos:column="20"/></operator><name pos:line="308" pos:column="17">status<pos:position pos:line="308" pos:column="23"/></name></name> <operator pos:line="308" pos:column="24">==<pos:position pos:line="308" pos:column="26"/></operator> <name pos:line="308" pos:column="27">HTTP_OK<pos:position pos:line="308" pos:column="34"/></name></expr> )<pos:position pos:line="308" pos:column="36"/></condition><then pos:line="308" pos:column="36">
            <block type="pseudo"><return pos:line="309" pos:column="13">return <expr><name pos:line="309" pos:column="20">OK<pos:position pos:line="309" pos:column="22"/></name></expr>;<pos:position pos:line="309" pos:column="23"/></return></block></then>
        <else pos:line="310" pos:column="9">else  <block pos:line="310" pos:column="15">{
            <comment type="block" pos:line="311" pos:column="13">/* clear r-&gt;status for override error, otherwise ErrorDocument
             * thinks that this is a recursive error, and doesn't find the
             * custom error page
             */</comment>
            <decl_stmt><decl><type><name pos:line="315" pos:column="13">int<pos:position pos:line="315" pos:column="16"/></name></type> <name pos:line="315" pos:column="17">status<pos:position pos:line="315" pos:column="23"/></name> <init pos:line="315" pos:column="24">= <expr><name><name pos:line="315" pos:column="26">r<pos:position pos:line="315" pos:column="27"/></name><operator pos:line="315" pos:column="27">-&gt;<pos:position pos:line="315" pos:column="32"/></operator><name pos:line="315" pos:column="29">status<pos:position pos:line="315" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="315" pos:column="36"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="316" pos:column="13">r<pos:position pos:line="316" pos:column="14"/></name><operator pos:line="316" pos:column="14">-&gt;<pos:position pos:line="316" pos:column="19"/></operator><name pos:line="316" pos:column="16">status<pos:position pos:line="316" pos:column="22"/></name></name> <operator pos:line="316" pos:column="23">=<pos:position pos:line="316" pos:column="24"/></operator> <name pos:line="316" pos:column="25">HTTP_OK<pos:position pos:line="316" pos:column="32"/></name></expr>;<pos:position pos:line="316" pos:column="33"/></expr_stmt>
            <comment type="block" pos:line="317" pos:column="13">/* Discard body, if one is expected */</comment>
            <if pos:line="318" pos:column="13">if <condition pos:line="318" pos:column="16">(<expr><operator pos:line="318" pos:column="17">(<pos:position pos:line="318" pos:column="18"/></operator><name pos:line="318" pos:column="18">status<pos:position pos:line="318" pos:column="24"/></name> <operator pos:line="318" pos:column="25">&gt;<pos:position pos:line="318" pos:column="29"/></operator> <literal type="number" pos:line="318" pos:column="27">199<pos:position pos:line="318" pos:column="30"/></literal><operator pos:line="318" pos:column="30">)<pos:position pos:line="318" pos:column="31"/></operator> <operator pos:line="318" pos:column="32">&amp;&amp;<pos:position pos:line="318" pos:column="42"/></operator> <comment type="block" pos:line="318" pos:column="35">/* not any 1xx response */</comment>
                <operator pos:line="319" pos:column="17">(<pos:position pos:line="319" pos:column="18"/></operator><name pos:line="319" pos:column="18">status<pos:position pos:line="319" pos:column="24"/></name> <operator pos:line="319" pos:column="25">!=<pos:position pos:line="319" pos:column="27"/></operator> <name pos:line="319" pos:column="28">HTTP_NO_CONTENT<pos:position pos:line="319" pos:column="43"/></name><operator pos:line="319" pos:column="43">)<pos:position pos:line="319" pos:column="44"/></operator> <operator pos:line="319" pos:column="45">&amp;&amp;<pos:position pos:line="319" pos:column="55"/></operator> <comment type="block" pos:line="319" pos:column="48">/* not 204 */</comment>
                <operator pos:line="320" pos:column="17">(<pos:position pos:line="320" pos:column="18"/></operator><name pos:line="320" pos:column="18">status<pos:position pos:line="320" pos:column="24"/></name> <operator pos:line="320" pos:column="25">!=<pos:position pos:line="320" pos:column="27"/></operator> <name pos:line="320" pos:column="28">HTTP_RESET_CONTENT<pos:position pos:line="320" pos:column="46"/></name><operator pos:line="320" pos:column="46">)<pos:position pos:line="320" pos:column="47"/></operator> <operator pos:line="320" pos:column="48">&amp;&amp;<pos:position pos:line="320" pos:column="58"/></operator> <comment type="block" pos:line="320" pos:column="51">/* not 205 */</comment>
                <operator pos:line="321" pos:column="17">(<pos:position pos:line="321" pos:column="18"/></operator><name pos:line="321" pos:column="18">status<pos:position pos:line="321" pos:column="24"/></name> <operator pos:line="321" pos:column="25">!=<pos:position pos:line="321" pos:column="27"/></operator> <name pos:line="321" pos:column="28">HTTP_NOT_MODIFIED<pos:position pos:line="321" pos:column="45"/></name><operator pos:line="321" pos:column="45">)<pos:position pos:line="321" pos:column="46"/></operator></expr>)<pos:position pos:line="321" pos:column="47"/></condition><then pos:line="321" pos:column="47"> <block pos:line="321" pos:column="48">{ <comment type="block" pos:line="321" pos:column="50">/* not 304 */</comment>
               <expr_stmt><expr><call><name pos:line="322" pos:column="16">ap_discard_request_body<pos:position pos:line="322" pos:column="39"/></name><argument_list pos:line="322" pos:column="39">(<argument><expr><name pos:line="322" pos:column="40">rp<pos:position pos:line="322" pos:column="42"/></name></expr></argument>)<pos:position pos:line="322" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="44"/></expr_stmt>
           }<pos:position pos:line="323" pos:column="13"/></block></then></if>
            <return pos:line="324" pos:column="13">return <expr><name pos:line="324" pos:column="20">status<pos:position pos:line="324" pos:column="26"/></name></expr>;<pos:position pos:line="324" pos:column="27"/></return>
        }<pos:position pos:line="325" pos:column="10"/></block></else></if>
    }<pos:position pos:line="326" pos:column="6"/></block></then> <else pos:line="326" pos:column="7">else 
        <block type="pseudo"><return pos:line="327" pos:column="9">return <expr><name pos:line="327" pos:column="16">OK<pos:position pos:line="327" pos:column="18"/></name></expr>;<pos:position pos:line="327" pos:column="19"/></return></block></else></if>
}<pos:position pos:line="328" pos:column="2"/></block></function></unit>

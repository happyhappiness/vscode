<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1980_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">append_to_linebuf<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">sed_eval_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">eval<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name><modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type> <name pos:line="1" pos:column="61">sz<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">len<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><call><name pos:line="3" pos:column="15">strlen<pos:position pos:line="3" pos:column="21"/></name><argument_list pos:line="3" pos:column="21">(<argument><expr><name pos:line="3" pos:column="22">sz<pos:position pos:line="3" pos:column="24"/></name></expr></argument>)<pos:position pos:line="3" pos:column="25"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
    <comment type="block" pos:line="4" pos:column="5">/* Copy string including null character */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">appendmem_to_linebuf<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">eval<pos:position pos:line="5" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="32">sz<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="36">len<pos:position pos:line="5" pos:column="39"/></name> <operator pos:line="5" pos:column="40">+<pos:position pos:line="5" pos:column="41"/></operator> <literal type="number" pos:line="5" pos:column="42">1<pos:position pos:line="5" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="6" pos:column="5">--<pos:position pos:line="6" pos:column="7"/></operator><name><name pos:line="6" pos:column="7">eval<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">lspend<pos:position pos:line="6" pos:column="19"/></name></name></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt> <comment type="block" pos:line="6" pos:column="21">/* lspend will now point to NULL character */</comment>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

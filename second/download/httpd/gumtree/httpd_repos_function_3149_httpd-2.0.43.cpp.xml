<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3149_httpd-2.0.43.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">pcre_exec<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><specifier pos:line="2" pos:column="11">const<pos:position pos:line="2" pos:column="16"/></specifier> <name pos:line="2" pos:column="17">pcre<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">external_re<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">pcre_extra<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">external_extra<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
  <parameter><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">subject<pos:position pos:line="3" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="24">int<pos:position pos:line="3" pos:column="27"/></name></type> <name pos:line="3" pos:column="28">length<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="36">int<pos:position pos:line="3" pos:column="39"/></name></type> <name pos:line="3" pos:column="40">start_offset<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="54">int<pos:position pos:line="3" pos:column="57"/></name></type> <name pos:line="3" pos:column="58">options<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="67">int<pos:position pos:line="3" pos:column="70"/></name> <modifier pos:line="3" pos:column="71">*<pos:position pos:line="3" pos:column="72"/></modifier></type><name pos:line="3" pos:column="72">offsets<pos:position pos:line="3" pos:column="79"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">offsetcount<pos:position pos:line="4" pos:column="18"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="19"/></parameter_list>
<block pos:line="5" pos:column="1">{
<decl_stmt><decl><type><name pos:line="6" pos:column="1">int<pos:position pos:line="6" pos:column="4"/></name></type> <name pos:line="6" pos:column="5">resetcount<pos:position pos:line="6" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="17">ocount<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="7" pos:column="1">int<pos:position pos:line="7" pos:column="4"/></name></type> <name pos:line="7" pos:column="5">first_char<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><operator pos:line="7" pos:column="18">-<pos:position pos:line="7" pos:column="19"/></operator><literal type="number" pos:line="7" pos:column="19">1<pos:position pos:line="7" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="8" pos:column="1">int<pos:position pos:line="8" pos:column="4"/></name></type> <name pos:line="8" pos:column="5">req_char<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><operator pos:line="8" pos:column="16">-<pos:position pos:line="8" pos:column="17"/></operator><literal type="number" pos:line="8" pos:column="17">1<pos:position pos:line="8" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="9" pos:column="1">int<pos:position pos:line="9" pos:column="4"/></name></type> <name pos:line="9" pos:column="5">req_char2<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><operator pos:line="9" pos:column="17">-<pos:position pos:line="9" pos:column="18"/></operator><literal type="number" pos:line="9" pos:column="18">1<pos:position pos:line="9" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="10" pos:column="1">unsigned<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">long<pos:position pos:line="10" pos:column="14"/></name> <name pos:line="10" pos:column="15">int<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">ims<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><literal type="number" pos:line="10" pos:column="25">0<pos:position pos:line="10" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="11" pos:column="1">match_data<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">match_block<pos:position pos:line="11" pos:column="23"/></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="12" pos:column="1">const<pos:position pos:line="12" pos:column="6"/></specifier> <name pos:line="12" pos:column="7">uschar<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">start_bits<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><name pos:line="12" pos:column="28">NULL<pos:position pos:line="12" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="13" pos:column="1">const<pos:position pos:line="13" pos:column="6"/></specifier> <name pos:line="13" pos:column="7">uschar<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">start_match<pos:position pos:line="13" pos:column="26"/></name> <init pos:line="13" pos:column="27">= <expr><operator pos:line="13" pos:column="29">(<pos:position pos:line="13" pos:column="30"/></operator><specifier pos:line="13" pos:column="30">const<pos:position pos:line="13" pos:column="35"/></specifier> <name pos:line="13" pos:column="36">uschar<pos:position pos:line="13" pos:column="42"/></name> <operator pos:line="13" pos:column="43">*<pos:position pos:line="13" pos:column="44"/></operator><operator pos:line="13" pos:column="44">)<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="45">subject<pos:position pos:line="13" pos:column="52"/></name> <operator pos:line="13" pos:column="53">+<pos:position pos:line="13" pos:column="54"/></operator> <name pos:line="13" pos:column="55">start_offset<pos:position pos:line="13" pos:column="67"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="68"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="14" pos:column="1">const<pos:position pos:line="14" pos:column="6"/></specifier> <name pos:line="14" pos:column="7">uschar<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">end_subject<pos:position pos:line="14" pos:column="26"/></name></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="15" pos:column="1">const<pos:position pos:line="15" pos:column="6"/></specifier> <name pos:line="15" pos:column="7">uschar<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">req_char_ptr<pos:position pos:line="15" pos:column="27"/></name> <init pos:line="15" pos:column="28">= <expr><name pos:line="15" pos:column="30">start_match<pos:position pos:line="15" pos:column="41"/></name> <operator pos:line="15" pos:column="42">-<pos:position pos:line="15" pos:column="43"/></operator> <literal type="number" pos:line="15" pos:column="44">1<pos:position pos:line="15" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="46"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="16" pos:column="1">const<pos:position pos:line="16" pos:column="6"/></specifier> <name pos:line="16" pos:column="7">real_pcre<pos:position pos:line="16" pos:column="16"/></name> <modifier pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></modifier></type><name pos:line="16" pos:column="18">re<pos:position pos:line="16" pos:column="20"/></name> <init pos:line="16" pos:column="21">= <expr><operator pos:line="16" pos:column="23">(<pos:position pos:line="16" pos:column="24"/></operator><specifier pos:line="16" pos:column="24">const<pos:position pos:line="16" pos:column="29"/></specifier> <name pos:line="16" pos:column="30">real_pcre<pos:position pos:line="16" pos:column="39"/></name> <operator pos:line="16" pos:column="40">*<pos:position pos:line="16" pos:column="41"/></operator><operator pos:line="16" pos:column="41">)<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="42">external_re<pos:position pos:line="16" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="54"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="17" pos:column="1">const<pos:position pos:line="17" pos:column="6"/></specifier> <name pos:line="17" pos:column="7">real_pcre_extra<pos:position pos:line="17" pos:column="22"/></name> <modifier pos:line="17" pos:column="23">*<pos:position pos:line="17" pos:column="24"/></modifier></type><name pos:line="17" pos:column="24">extra<pos:position pos:line="17" pos:column="29"/></name> <init pos:line="17" pos:column="30">= <expr><operator pos:line="17" pos:column="32">(<pos:position pos:line="17" pos:column="33"/></operator><specifier pos:line="17" pos:column="33">const<pos:position pos:line="17" pos:column="38"/></specifier> <name pos:line="17" pos:column="39">real_pcre_extra<pos:position pos:line="17" pos:column="54"/></name> <operator pos:line="17" pos:column="55">*<pos:position pos:line="17" pos:column="56"/></operator><operator pos:line="17" pos:column="56">)<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="57">external_extra<pos:position pos:line="17" pos:column="71"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="72"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="18" pos:column="1">BOOL<pos:position pos:line="18" pos:column="5"/></name></type> <name pos:line="18" pos:column="6">using_temporary_offsets<pos:position pos:line="18" pos:column="29"/></name> <init pos:line="18" pos:column="30">= <expr><name pos:line="18" pos:column="32">FALSE<pos:position pos:line="18" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="38"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="19" pos:column="1">BOOL<pos:position pos:line="19" pos:column="5"/></name></type> <name pos:line="19" pos:column="6">anchored<pos:position pos:line="19" pos:column="14"/></name></decl>;<pos:position pos:line="19" pos:column="15"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="20" pos:column="1">BOOL<pos:position pos:line="20" pos:column="5"/></name></type> <name pos:line="20" pos:column="6">startline<pos:position pos:line="20" pos:column="15"/></name></decl>;<pos:position pos:line="20" pos:column="16"/></decl_stmt>

<if pos:line="22" pos:column="1">if <condition pos:line="22" pos:column="4">(<expr><operator pos:line="22" pos:column="5">(<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">options<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">&amp;<pos:position pos:line="22" pos:column="19"/></operator> <operator pos:line="22" pos:column="16">~<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">PUBLIC_EXEC_OPTIONS<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">)<pos:position pos:line="22" pos:column="37"/></operator> <operator pos:line="22" pos:column="38">!=<pos:position pos:line="22" pos:column="40"/></operator> <literal type="number" pos:line="22" pos:column="41">0<pos:position pos:line="22" pos:column="42"/></literal></expr>)<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43"> <block type="pseudo"><return pos:line="22" pos:column="44">return <expr><name pos:line="22" pos:column="51">PCRE_ERROR_BADOPTION<pos:position pos:line="22" pos:column="71"/></name></expr>;<pos:position pos:line="22" pos:column="72"/></return></block></then></if>

<if pos:line="24" pos:column="1">if <condition pos:line="24" pos:column="4">(<expr><name pos:line="24" pos:column="5">re<pos:position pos:line="24" pos:column="7"/></name> <operator pos:line="24" pos:column="8">==<pos:position pos:line="24" pos:column="10"/></operator> <name pos:line="24" pos:column="11">NULL<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">||<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">subject<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">==<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="30">NULL<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">||<pos:position pos:line="24" pos:column="37"/></operator>
   <operator pos:line="25" pos:column="4">(<pos:position pos:line="25" pos:column="5"/></operator><name pos:line="25" pos:column="5">offsets<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">==<pos:position pos:line="25" pos:column="15"/></operator> <name pos:line="25" pos:column="16">NULL<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">&amp;&amp;<pos:position pos:line="25" pos:column="31"/></operator> <name pos:line="25" pos:column="24">offsetcount<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">&gt;<pos:position pos:line="25" pos:column="40"/></operator> <literal type="number" pos:line="25" pos:column="38">0<pos:position pos:line="25" pos:column="39"/></literal><operator pos:line="25" pos:column="39">)<pos:position pos:line="25" pos:column="40"/></operator></expr>)<pos:position pos:line="25" pos:column="41"/></condition><then pos:line="25" pos:column="41"> <block type="pseudo"><return pos:line="25" pos:column="42">return <expr><name pos:line="25" pos:column="49">PCRE_ERROR_NULL<pos:position pos:line="25" pos:column="64"/></name></expr>;<pos:position pos:line="25" pos:column="65"/></return></block></then></if>
<if pos:line="26" pos:column="1">if <condition pos:line="26" pos:column="4">(<expr><name><name pos:line="26" pos:column="5">re<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">magic_number<pos:position pos:line="26" pos:column="21"/></name></name> <operator pos:line="26" pos:column="22">!=<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">MAGIC_NUMBER<pos:position pos:line="26" pos:column="37"/></name></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38"> <block type="pseudo"><return pos:line="26" pos:column="39">return <expr><name pos:line="26" pos:column="46">PCRE_ERROR_BADMAGIC<pos:position pos:line="26" pos:column="65"/></name></expr>;<pos:position pos:line="26" pos:column="66"/></return></block></then></if>

<expr_stmt><expr><name pos:line="28" pos:column="1">anchored<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name><name pos:line="28" pos:column="14">re<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">options<pos:position pos:line="28" pos:column="25"/></name></name> <operator pos:line="28" pos:column="26">|<pos:position pos:line="28" pos:column="27"/></operator> <name pos:line="28" pos:column="28">options<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">)<pos:position pos:line="28" pos:column="36"/></operator> <operator pos:line="28" pos:column="37">&amp;<pos:position pos:line="28" pos:column="42"/></operator> <name pos:line="28" pos:column="39">PCRE_ANCHORED<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">)<pos:position pos:line="28" pos:column="53"/></operator> <operator pos:line="28" pos:column="54">!=<pos:position pos:line="28" pos:column="56"/></operator> <literal type="number" pos:line="28" pos:column="57">0<pos:position pos:line="28" pos:column="58"/></literal></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt>
<expr_stmt><expr><name pos:line="29" pos:column="1">startline<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <operator pos:line="29" pos:column="13">(<pos:position pos:line="29" pos:column="14"/></operator><name><name pos:line="29" pos:column="14">re<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">options<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">&amp;<pos:position pos:line="29" pos:column="31"/></operator> <name pos:line="29" pos:column="28">PCRE_STARTLINE<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">)<pos:position pos:line="29" pos:column="43"/></operator> <operator pos:line="29" pos:column="44">!=<pos:position pos:line="29" pos:column="46"/></operator> <literal type="number" pos:line="29" pos:column="47">0<pos:position pos:line="29" pos:column="48"/></literal></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>

<expr_stmt><expr><name><name pos:line="31" pos:column="1">match_block<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">.<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">start_pattern<pos:position pos:line="31" pos:column="26"/></name></name> <operator pos:line="31" pos:column="27">=<pos:position pos:line="31" pos:column="28"/></operator> <name><name pos:line="31" pos:column="29">re<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">code<pos:position pos:line="31" pos:column="37"/></name></name></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="32" pos:column="1">match_block<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">.<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">start_subject<pos:position pos:line="32" pos:column="26"/></name></name> <operator pos:line="32" pos:column="27">=<pos:position pos:line="32" pos:column="28"/></operator> <operator pos:line="32" pos:column="29">(<pos:position pos:line="32" pos:column="30"/></operator><specifier pos:line="32" pos:column="30">const<pos:position pos:line="32" pos:column="35"/></specifier> <name pos:line="32" pos:column="36">uschar<pos:position pos:line="32" pos:column="42"/></name> <operator pos:line="32" pos:column="43">*<pos:position pos:line="32" pos:column="44"/></operator><operator pos:line="32" pos:column="44">)<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="45">subject<pos:position pos:line="32" pos:column="52"/></name></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="33" pos:column="1">match_block<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">.<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">end_subject<pos:position pos:line="33" pos:column="24"/></name></name> <operator pos:line="33" pos:column="25">=<pos:position pos:line="33" pos:column="26"/></operator> <name><name pos:line="33" pos:column="27">match_block<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">.<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="39">start_subject<pos:position pos:line="33" pos:column="52"/></name></name> <operator pos:line="33" pos:column="53">+<pos:position pos:line="33" pos:column="54"/></operator> <name pos:line="33" pos:column="55">length<pos:position pos:line="33" pos:column="61"/></name></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt>
<expr_stmt><expr><name pos:line="34" pos:column="1">end_subject<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <name><name pos:line="34" pos:column="15">match_block<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">.<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="27">end_subject<pos:position pos:line="34" pos:column="38"/></name></name></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>

<expr_stmt><expr><name><name pos:line="36" pos:column="1">match_block<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">.<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">endonly<pos:position pos:line="36" pos:column="20"/></name></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <operator pos:line="36" pos:column="23">(<pos:position pos:line="36" pos:column="24"/></operator><name><name pos:line="36" pos:column="24">re<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">options<pos:position pos:line="36" pos:column="35"/></name></name> <operator pos:line="36" pos:column="36">&amp;<pos:position pos:line="36" pos:column="41"/></operator> <name pos:line="36" pos:column="38">PCRE_DOLLAR_ENDONLY<pos:position pos:line="36" pos:column="57"/></name><operator pos:line="36" pos:column="57">)<pos:position pos:line="36" pos:column="58"/></operator> <operator pos:line="36" pos:column="59">!=<pos:position pos:line="36" pos:column="61"/></operator> <literal type="number" pos:line="36" pos:column="62">0<pos:position pos:line="36" pos:column="63"/></literal></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="37" pos:column="1">match_block<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">.<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="13">utf8<pos:position pos:line="37" pos:column="17"/></name></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <operator pos:line="37" pos:column="20">(<pos:position pos:line="37" pos:column="21"/></operator><name><name pos:line="37" pos:column="21">re<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">-&gt;<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="25">options<pos:position pos:line="37" pos:column="32"/></name></name> <operator pos:line="37" pos:column="33">&amp;<pos:position pos:line="37" pos:column="38"/></operator> <name pos:line="37" pos:column="35">PCRE_UTF8<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">)<pos:position pos:line="37" pos:column="45"/></operator> <operator pos:line="37" pos:column="46">!=<pos:position pos:line="37" pos:column="48"/></operator> <literal type="number" pos:line="37" pos:column="49">0<pos:position pos:line="37" pos:column="50"/></literal></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>

<expr_stmt><expr><name><name pos:line="39" pos:column="1">match_block<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">.<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">notbol<pos:position pos:line="39" pos:column="19"/></name></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <operator pos:line="39" pos:column="22">(<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">options<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">&amp;<pos:position pos:line="39" pos:column="36"/></operator> <name pos:line="39" pos:column="33">PCRE_NOTBOL<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">)<pos:position pos:line="39" pos:column="45"/></operator> <operator pos:line="39" pos:column="46">!=<pos:position pos:line="39" pos:column="48"/></operator> <literal type="number" pos:line="39" pos:column="49">0<pos:position pos:line="39" pos:column="50"/></literal></expr>;<pos:position pos:line="39" pos:column="51"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="40" pos:column="1">match_block<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">.<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">noteol<pos:position pos:line="40" pos:column="19"/></name></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <operator pos:line="40" pos:column="22">(<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="23">options<pos:position pos:line="40" pos:column="30"/></name> <operator pos:line="40" pos:column="31">&amp;<pos:position pos:line="40" pos:column="36"/></operator> <name pos:line="40" pos:column="33">PCRE_NOTEOL<pos:position pos:line="40" pos:column="44"/></name><operator pos:line="40" pos:column="44">)<pos:position pos:line="40" pos:column="45"/></operator> <operator pos:line="40" pos:column="46">!=<pos:position pos:line="40" pos:column="48"/></operator> <literal type="number" pos:line="40" pos:column="49">0<pos:position pos:line="40" pos:column="50"/></literal></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="41" pos:column="1">match_block<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">.<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="13">notempty<pos:position pos:line="41" pos:column="21"/></name></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <operator pos:line="41" pos:column="24">(<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">options<pos:position pos:line="41" pos:column="32"/></name> <operator pos:line="41" pos:column="33">&amp;<pos:position pos:line="41" pos:column="38"/></operator> <name pos:line="41" pos:column="35">PCRE_NOTEMPTY<pos:position pos:line="41" pos:column="48"/></name><operator pos:line="41" pos:column="48">)<pos:position pos:line="41" pos:column="49"/></operator> <operator pos:line="41" pos:column="50">!=<pos:position pos:line="41" pos:column="52"/></operator> <literal type="number" pos:line="41" pos:column="53">0<pos:position pos:line="41" pos:column="54"/></literal></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt>

<expr_stmt><expr><name><name pos:line="43" pos:column="1">match_block<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">.<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="13">errorcode<pos:position pos:line="43" pos:column="22"/></name></name> <operator pos:line="43" pos:column="23">=<pos:position pos:line="43" pos:column="24"/></operator> <name pos:line="43" pos:column="25">PCRE_ERROR_NOMATCH<pos:position pos:line="43" pos:column="43"/></name></expr>;<pos:position pos:line="43" pos:column="44"/></expr_stmt>     <comment type="block" pos:line="43" pos:column="49">/* Default error */</comment>

<expr_stmt><expr><name><name pos:line="45" pos:column="1">match_block<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">.<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="13">lcc<pos:position pos:line="45" pos:column="16"/></name></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <name><name pos:line="45" pos:column="19">re<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">tables<pos:position pos:line="45" pos:column="29"/></name></name> <operator pos:line="45" pos:column="30">+<pos:position pos:line="45" pos:column="31"/></operator> <name pos:line="45" pos:column="32">lcc_offset<pos:position pos:line="45" pos:column="42"/></name></expr>;<pos:position pos:line="45" pos:column="43"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="46" pos:column="1">match_block<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">.<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="13">ctypes<pos:position pos:line="46" pos:column="19"/></name></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <name><name pos:line="46" pos:column="22">re<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">tables<pos:position pos:line="46" pos:column="32"/></name></name> <operator pos:line="46" pos:column="33">+<pos:position pos:line="46" pos:column="34"/></operator> <name pos:line="46" pos:column="35">ctypes_offset<pos:position pos:line="46" pos:column="48"/></name></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>

<comment type="block" pos:line="48" pos:column="1">/* The ims options can vary during the matching as a result of the presence
of (?ims) items in the pattern. They are kept in a local variable so that
restoring at the exit of a group is easy. */</comment>

<expr_stmt><expr><name pos:line="52" pos:column="1">ims<pos:position pos:line="52" pos:column="4"/></name> <operator pos:line="52" pos:column="5">=<pos:position pos:line="52" pos:column="6"/></operator> <name><name pos:line="52" pos:column="7">re<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">-&gt;<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="11">options<pos:position pos:line="52" pos:column="18"/></name></name> <operator pos:line="52" pos:column="19">&amp;<pos:position pos:line="52" pos:column="24"/></operator> <operator pos:line="52" pos:column="21">(<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="22">PCRE_CASELESS<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">|<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="36">PCRE_MULTILINE<pos:position pos:line="52" pos:column="50"/></name><operator pos:line="52" pos:column="50">|<pos:position pos:line="52" pos:column="51"/></operator><name pos:line="52" pos:column="51">PCRE_DOTALL<pos:position pos:line="52" pos:column="62"/></name><operator pos:line="52" pos:column="62">)<pos:position pos:line="52" pos:column="63"/></operator></expr>;<pos:position pos:line="52" pos:column="64"/></expr_stmt>

<comment type="block" pos:line="54" pos:column="1">/* If the expression has got more back references than the offsets supplied can
hold, we get a temporary bit of working store to use during the matching.
Otherwise, we can use the vector supplied, rounding down its size to a multiple
of 3. */</comment>

<expr_stmt><expr><name pos:line="59" pos:column="1">ocount<pos:position pos:line="59" pos:column="7"/></name> <operator pos:line="59" pos:column="8">=<pos:position pos:line="59" pos:column="9"/></operator> <name pos:line="59" pos:column="10">offsetcount<pos:position pos:line="59" pos:column="21"/></name> <operator pos:line="59" pos:column="22">-<pos:position pos:line="59" pos:column="23"/></operator> <operator pos:line="59" pos:column="24">(<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="25">offsetcount<pos:position pos:line="59" pos:column="36"/></name> <operator pos:line="59" pos:column="37">%<pos:position pos:line="59" pos:column="38"/></operator> <literal type="number" pos:line="59" pos:column="39">3<pos:position pos:line="59" pos:column="40"/></literal><operator pos:line="59" pos:column="40">)<pos:position pos:line="59" pos:column="41"/></operator></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt>

<if pos:line="61" pos:column="1">if <condition pos:line="61" pos:column="4">(<expr><name><name pos:line="61" pos:column="5">re<pos:position pos:line="61" pos:column="7"/></name><operator pos:line="61" pos:column="7">-&gt;<pos:position pos:line="61" pos:column="12"/></operator><name pos:line="61" pos:column="9">top_backref<pos:position pos:line="61" pos:column="20"/></name></name> <operator pos:line="61" pos:column="21">&gt;<pos:position pos:line="61" pos:column="25"/></operator> <literal type="number" pos:line="61" pos:column="23">0<pos:position pos:line="61" pos:column="24"/></literal> <operator pos:line="61" pos:column="25">&amp;&amp;<pos:position pos:line="61" pos:column="35"/></operator> <name><name pos:line="61" pos:column="28">re<pos:position pos:line="61" pos:column="30"/></name><operator pos:line="61" pos:column="30">-&gt;<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="32">top_backref<pos:position pos:line="61" pos:column="43"/></name></name> <operator pos:line="61" pos:column="44">&gt;=<pos:position pos:line="61" pos:column="49"/></operator> <name pos:line="61" pos:column="47">ocount<pos:position pos:line="61" pos:column="53"/></name><operator pos:line="61" pos:column="53">/<pos:position pos:line="61" pos:column="54"/></operator><literal type="number" pos:line="61" pos:column="54">3<pos:position pos:line="61" pos:column="55"/></literal></expr>)<pos:position pos:line="61" pos:column="56"/></condition><then pos:line="61" pos:column="56">
  <block pos:line="62" pos:column="3">{
  <expr_stmt><expr><name pos:line="63" pos:column="3">ocount<pos:position pos:line="63" pos:column="9"/></name> <operator pos:line="63" pos:column="10">=<pos:position pos:line="63" pos:column="11"/></operator> <name><name pos:line="63" pos:column="12">re<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">-&gt;<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="16">top_backref<pos:position pos:line="63" pos:column="27"/></name></name> <operator pos:line="63" pos:column="28">*<pos:position pos:line="63" pos:column="29"/></operator> <literal type="number" pos:line="63" pos:column="30">3<pos:position pos:line="63" pos:column="31"/></literal> <operator pos:line="63" pos:column="32">+<pos:position pos:line="63" pos:column="33"/></operator> <literal type="number" pos:line="63" pos:column="34">3<pos:position pos:line="63" pos:column="35"/></literal></expr>;<pos:position pos:line="63" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="64" pos:column="3">match_block<pos:position pos:line="64" pos:column="14"/></name><operator pos:line="64" pos:column="14">.<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="15">offset_vector<pos:position pos:line="64" pos:column="28"/></name></name> <operator pos:line="64" pos:column="29">=<pos:position pos:line="64" pos:column="30"/></operator> <operator pos:line="64" pos:column="31">(<pos:position pos:line="64" pos:column="32"/></operator><name pos:line="64" pos:column="32">int<pos:position pos:line="64" pos:column="35"/></name> <operator pos:line="64" pos:column="36">*<pos:position pos:line="64" pos:column="37"/></operator><operator pos:line="64" pos:column="37">)<pos:position pos:line="64" pos:column="38"/></operator><call pos:line="64" pos:column="38">(<name pos:line="64" pos:column="39">pcre_malloc<pos:position pos:line="64" pos:column="50"/></name>)<argument_list pos:line="64" pos:column="51">(<argument><expr><name pos:line="64" pos:column="52">ocount<pos:position pos:line="64" pos:column="58"/></name> <operator pos:line="64" pos:column="59">*<pos:position pos:line="64" pos:column="60"/></operator> <sizeof pos:line="64" pos:column="61">sizeof<argument_list pos:line="64" pos:column="67">(<argument><expr><name pos:line="64" pos:column="68">int<pos:position pos:line="64" pos:column="71"/></name></expr></argument>)<pos:position pos:line="64" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="74"/></expr_stmt>
  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><name><name pos:line="65" pos:column="7">match_block<pos:position pos:line="65" pos:column="18"/></name><operator pos:line="65" pos:column="18">.<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="19">offset_vector<pos:position pos:line="65" pos:column="32"/></name></name> <operator pos:line="65" pos:column="33">==<pos:position pos:line="65" pos:column="35"/></operator> <name pos:line="65" pos:column="36">NULL<pos:position pos:line="65" pos:column="40"/></name></expr>)<pos:position pos:line="65" pos:column="41"/></condition><then pos:line="65" pos:column="41"> <block type="pseudo"><return pos:line="65" pos:column="42">return <expr><name pos:line="65" pos:column="49">PCRE_ERROR_NOMEMORY<pos:position pos:line="65" pos:column="68"/></name></expr>;<pos:position pos:line="65" pos:column="69"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="66" pos:column="3">using_temporary_offsets<pos:position pos:line="66" pos:column="26"/></name> <operator pos:line="66" pos:column="27">=<pos:position pos:line="66" pos:column="28"/></operator> <name pos:line="66" pos:column="29">TRUE<pos:position pos:line="66" pos:column="33"/></name></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="67" pos:column="3">DPRINTF<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><operator pos:line="67" pos:column="11">(<pos:position pos:line="67" pos:column="12"/></operator><literal type="string" pos:line="67" pos:column="12">"Got memory to hold back references\n"<pos:position pos:line="67" pos:column="50"/></literal><operator pos:line="67" pos:column="50">)<pos:position pos:line="67" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="68" pos:column="4"/></block></then>
<else pos:line="69" pos:column="1">else <block type="pseudo"><expr_stmt><expr><name><name pos:line="69" pos:column="6">match_block<pos:position pos:line="69" pos:column="17"/></name><operator pos:line="69" pos:column="17">.<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="18">offset_vector<pos:position pos:line="69" pos:column="31"/></name></name> <operator pos:line="69" pos:column="32">=<pos:position pos:line="69" pos:column="33"/></operator> <name pos:line="69" pos:column="34">offsets<pos:position pos:line="69" pos:column="41"/></name></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt></block></else></if>

<expr_stmt><expr><name><name pos:line="71" pos:column="1">match_block<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">.<pos:position pos:line="71" pos:column="13"/></operator><name pos:line="71" pos:column="13">offset_end<pos:position pos:line="71" pos:column="23"/></name></name> <operator pos:line="71" pos:column="24">=<pos:position pos:line="71" pos:column="25"/></operator> <name pos:line="71" pos:column="26">ocount<pos:position pos:line="71" pos:column="32"/></name></expr>;<pos:position pos:line="71" pos:column="33"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="72" pos:column="1">match_block<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">.<pos:position pos:line="72" pos:column="13"/></operator><name pos:line="72" pos:column="13">offset_max<pos:position pos:line="72" pos:column="23"/></name></name> <operator pos:line="72" pos:column="24">=<pos:position pos:line="72" pos:column="25"/></operator> <operator pos:line="72" pos:column="26">(<pos:position pos:line="72" pos:column="27"/></operator><literal type="number" pos:line="72" pos:column="27">2<pos:position pos:line="72" pos:column="28"/></literal><operator pos:line="72" pos:column="28">*<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="29">ocount<pos:position pos:line="72" pos:column="35"/></name><operator pos:line="72" pos:column="35">)<pos:position pos:line="72" pos:column="36"/></operator><operator pos:line="72" pos:column="36">/<pos:position pos:line="72" pos:column="37"/></operator><literal type="number" pos:line="72" pos:column="37">3<pos:position pos:line="72" pos:column="38"/></literal></expr>;<pos:position pos:line="72" pos:column="39"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="73" pos:column="1">match_block<pos:position pos:line="73" pos:column="12"/></name><operator pos:line="73" pos:column="12">.<pos:position pos:line="73" pos:column="13"/></operator><name pos:line="73" pos:column="13">offset_overflow<pos:position pos:line="73" pos:column="28"/></name></name> <operator pos:line="73" pos:column="29">=<pos:position pos:line="73" pos:column="30"/></operator> <name pos:line="73" pos:column="31">FALSE<pos:position pos:line="73" pos:column="36"/></name></expr>;<pos:position pos:line="73" pos:column="37"/></expr_stmt>

<comment type="block" pos:line="75" pos:column="1">/* Compute the minimum number of offsets that we need to reset each time. Doing
this makes a huge difference to execution time when there aren't many brackets
in the pattern. */</comment>

<expr_stmt><expr><name pos:line="79" pos:column="1">resetcount<pos:position pos:line="79" pos:column="11"/></name> <operator pos:line="79" pos:column="12">=<pos:position pos:line="79" pos:column="13"/></operator> <literal type="number" pos:line="79" pos:column="14">2<pos:position pos:line="79" pos:column="15"/></literal> <operator pos:line="79" pos:column="16">+<pos:position pos:line="79" pos:column="17"/></operator> <name><name pos:line="79" pos:column="18">re<pos:position pos:line="79" pos:column="20"/></name><operator pos:line="79" pos:column="20">-&gt;<pos:position pos:line="79" pos:column="25"/></operator><name pos:line="79" pos:column="22">top_bracket<pos:position pos:line="79" pos:column="33"/></name></name> <operator pos:line="79" pos:column="34">*<pos:position pos:line="79" pos:column="35"/></operator> <literal type="number" pos:line="79" pos:column="36">2<pos:position pos:line="79" pos:column="37"/></literal></expr>;<pos:position pos:line="79" pos:column="38"/></expr_stmt>
<if pos:line="80" pos:column="1">if <condition pos:line="80" pos:column="4">(<expr><name pos:line="80" pos:column="5">resetcount<pos:position pos:line="80" pos:column="15"/></name> <operator pos:line="80" pos:column="16">&gt;<pos:position pos:line="80" pos:column="20"/></operator> <name pos:line="80" pos:column="18">offsetcount<pos:position pos:line="80" pos:column="29"/></name></expr>)<pos:position pos:line="80" pos:column="30"/></condition><then pos:line="80" pos:column="30"> <block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="31">resetcount<pos:position pos:line="80" pos:column="41"/></name> <operator pos:line="80" pos:column="42">=<pos:position pos:line="80" pos:column="43"/></operator> <name pos:line="80" pos:column="44">ocount<pos:position pos:line="80" pos:column="50"/></name></expr>;<pos:position pos:line="80" pos:column="51"/></expr_stmt></block></then></if>

<comment type="block" pos:line="82" pos:column="1">/* Reset the working variable associated with each extraction. These should
never be used unless previously set, but they get saved and restored, and so we
initialize them to avoid reading uninitialized locations. */</comment>

<if pos:line="86" pos:column="1">if <condition pos:line="86" pos:column="4">(<expr><name><name pos:line="86" pos:column="5">match_block<pos:position pos:line="86" pos:column="16"/></name><operator pos:line="86" pos:column="16">.<pos:position pos:line="86" pos:column="17"/></operator><name pos:line="86" pos:column="17">offset_vector<pos:position pos:line="86" pos:column="30"/></name></name> <operator pos:line="86" pos:column="31">!=<pos:position pos:line="86" pos:column="33"/></operator> <name pos:line="86" pos:column="34">NULL<pos:position pos:line="86" pos:column="38"/></name></expr>)<pos:position pos:line="86" pos:column="39"/></condition><then pos:line="86" pos:column="39">
  <block pos:line="87" pos:column="3">{
  <decl_stmt><decl><type><specifier pos:line="88" pos:column="3">register<pos:position pos:line="88" pos:column="11"/></specifier> <name pos:line="88" pos:column="12">int<pos:position pos:line="88" pos:column="15"/></name> <modifier pos:line="88" pos:column="16">*<pos:position pos:line="88" pos:column="17"/></modifier></type><name pos:line="88" pos:column="17">iptr<pos:position pos:line="88" pos:column="21"/></name> <init pos:line="88" pos:column="22">= <expr><name><name pos:line="88" pos:column="24">match_block<pos:position pos:line="88" pos:column="35"/></name><operator pos:line="88" pos:column="35">.<pos:position pos:line="88" pos:column="36"/></operator><name pos:line="88" pos:column="36">offset_vector<pos:position pos:line="88" pos:column="49"/></name></name> <operator pos:line="88" pos:column="50">+<pos:position pos:line="88" pos:column="51"/></operator> <name pos:line="88" pos:column="52">ocount<pos:position pos:line="88" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="88" pos:column="59"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="89" pos:column="3">register<pos:position pos:line="89" pos:column="11"/></specifier> <name pos:line="89" pos:column="12">int<pos:position pos:line="89" pos:column="15"/></name> <modifier pos:line="89" pos:column="16">*<pos:position pos:line="89" pos:column="17"/></modifier></type><name pos:line="89" pos:column="17">iend<pos:position pos:line="89" pos:column="21"/></name> <init pos:line="89" pos:column="22">= <expr><name pos:line="89" pos:column="24">iptr<pos:position pos:line="89" pos:column="28"/></name> <operator pos:line="89" pos:column="29">-<pos:position pos:line="89" pos:column="30"/></operator> <name pos:line="89" pos:column="31">resetcount<pos:position pos:line="89" pos:column="41"/></name><operator pos:line="89" pos:column="41">/<pos:position pos:line="89" pos:column="42"/></operator><literal type="number" pos:line="89" pos:column="42">2<pos:position pos:line="89" pos:column="43"/></literal> <operator pos:line="89" pos:column="44">+<pos:position pos:line="89" pos:column="45"/></operator> <literal type="number" pos:line="89" pos:column="46">1<pos:position pos:line="89" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="89" pos:column="48"/></decl_stmt>
  <while pos:line="90" pos:column="3">while <condition pos:line="90" pos:column="9">(<expr><operator pos:line="90" pos:column="10">--<pos:position pos:line="90" pos:column="12"/></operator><name pos:line="90" pos:column="12">iptr<pos:position pos:line="90" pos:column="16"/></name> <operator pos:line="90" pos:column="17">&gt;=<pos:position pos:line="90" pos:column="22"/></operator> <name pos:line="90" pos:column="20">iend<pos:position pos:line="90" pos:column="24"/></name></expr>)<pos:position pos:line="90" pos:column="25"/></condition> <block type="pseudo"><expr_stmt><expr><operator pos:line="90" pos:column="26">*<pos:position pos:line="90" pos:column="27"/></operator><name pos:line="90" pos:column="27">iptr<pos:position pos:line="90" pos:column="31"/></name> <operator pos:line="90" pos:column="32">=<pos:position pos:line="90" pos:column="33"/></operator> <operator pos:line="90" pos:column="34">-<pos:position pos:line="90" pos:column="35"/></operator><literal type="number" pos:line="90" pos:column="35">1<pos:position pos:line="90" pos:column="36"/></literal></expr>;<pos:position pos:line="90" pos:column="37"/></expr_stmt></block></while>
  }<pos:position pos:line="91" pos:column="4"/></block></then></if>

<comment type="block" pos:line="93" pos:column="1">/* Set up the first character to match, if available. The first_char value is
never set for an anchored regular expression, but the anchoring may be forced
at run time, so we have to test for anchoring. The first char may be unset for
an unanchored pattern, of course. If there's no first char and the pattern was
studied, there may be a bitmap of possible first characters. */</comment>

<if pos:line="99" pos:column="1">if <condition pos:line="99" pos:column="4">(<expr><operator pos:line="99" pos:column="5">!<pos:position pos:line="99" pos:column="6"/></operator><name pos:line="99" pos:column="6">anchored<pos:position pos:line="99" pos:column="14"/></name></expr>)<pos:position pos:line="99" pos:column="15"/></condition><then pos:line="99" pos:column="15">
  <block pos:line="100" pos:column="3">{
  <if pos:line="101" pos:column="3">if <condition pos:line="101" pos:column="6">(<expr><operator pos:line="101" pos:column="7">(<pos:position pos:line="101" pos:column="8"/></operator><name><name pos:line="101" pos:column="8">re<pos:position pos:line="101" pos:column="10"/></name><operator pos:line="101" pos:column="10">-&gt;<pos:position pos:line="101" pos:column="15"/></operator><name pos:line="101" pos:column="12">options<pos:position pos:line="101" pos:column="19"/></name></name> <operator pos:line="101" pos:column="20">&amp;<pos:position pos:line="101" pos:column="25"/></operator> <name pos:line="101" pos:column="22">PCRE_FIRSTSET<pos:position pos:line="101" pos:column="35"/></name><operator pos:line="101" pos:column="35">)<pos:position pos:line="101" pos:column="36"/></operator> <operator pos:line="101" pos:column="37">!=<pos:position pos:line="101" pos:column="39"/></operator> <literal type="number" pos:line="101" pos:column="40">0<pos:position pos:line="101" pos:column="41"/></literal></expr>)<pos:position pos:line="101" pos:column="42"/></condition><then pos:line="101" pos:column="42">
    <block pos:line="102" pos:column="5">{
    <expr_stmt><expr><name pos:line="103" pos:column="5">first_char<pos:position pos:line="103" pos:column="15"/></name> <operator pos:line="103" pos:column="16">=<pos:position pos:line="103" pos:column="17"/></operator> <name><name pos:line="103" pos:column="18">re<pos:position pos:line="103" pos:column="20"/></name><operator pos:line="103" pos:column="20">-&gt;<pos:position pos:line="103" pos:column="25"/></operator><name pos:line="103" pos:column="22">first_char<pos:position pos:line="103" pos:column="32"/></name></name></expr>;<pos:position pos:line="103" pos:column="33"/></expr_stmt>
    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><operator pos:line="104" pos:column="9">(<pos:position pos:line="104" pos:column="10"/></operator><name pos:line="104" pos:column="10">ims<pos:position pos:line="104" pos:column="13"/></name> <operator pos:line="104" pos:column="14">&amp;<pos:position pos:line="104" pos:column="19"/></operator> <name pos:line="104" pos:column="16">PCRE_CASELESS<pos:position pos:line="104" pos:column="29"/></name><operator pos:line="104" pos:column="29">)<pos:position pos:line="104" pos:column="30"/></operator> <operator pos:line="104" pos:column="31">!=<pos:position pos:line="104" pos:column="33"/></operator> <literal type="number" pos:line="104" pos:column="34">0<pos:position pos:line="104" pos:column="35"/></literal></expr>)<pos:position pos:line="104" pos:column="36"/></condition><then pos:line="104" pos:column="36"> <block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="37">first_char<pos:position pos:line="104" pos:column="47"/></name> <operator pos:line="104" pos:column="48">=<pos:position pos:line="104" pos:column="49"/></operator> <name><name pos:line="104" pos:column="50">match_block<pos:position pos:line="104" pos:column="61"/></name><operator pos:line="104" pos:column="61">.<pos:position pos:line="104" pos:column="62"/></operator><name pos:line="104" pos:column="62">lcc<pos:position pos:line="104" pos:column="65"/></name><index pos:line="104" pos:column="65">[<expr><name pos:line="104" pos:column="66">first_char<pos:position pos:line="104" pos:column="76"/></name></expr>]<pos:position pos:line="104" pos:column="77"/></index></name></expr>;<pos:position pos:line="104" pos:column="78"/></expr_stmt></block></then></if>
    }<pos:position pos:line="105" pos:column="6"/></block></then>
  <elseif pos:line="106" pos:column="3">else
    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><operator pos:line="107" pos:column="9">!<pos:position pos:line="107" pos:column="10"/></operator><name pos:line="107" pos:column="10">startline<pos:position pos:line="107" pos:column="19"/></name> <operator pos:line="107" pos:column="20">&amp;&amp;<pos:position pos:line="107" pos:column="30"/></operator> <name pos:line="107" pos:column="23">extra<pos:position pos:line="107" pos:column="28"/></name> <operator pos:line="107" pos:column="29">!=<pos:position pos:line="107" pos:column="31"/></operator> <name pos:line="107" pos:column="32">NULL<pos:position pos:line="107" pos:column="36"/></name> <operator pos:line="107" pos:column="37">&amp;&amp;<pos:position pos:line="107" pos:column="47"/></operator>
      <operator pos:line="108" pos:column="7">(<pos:position pos:line="108" pos:column="8"/></operator><name><name pos:line="108" pos:column="8">extra<pos:position pos:line="108" pos:column="13"/></name><operator pos:line="108" pos:column="13">-&gt;<pos:position pos:line="108" pos:column="18"/></operator><name pos:line="108" pos:column="15">options<pos:position pos:line="108" pos:column="22"/></name></name> <operator pos:line="108" pos:column="23">&amp;<pos:position pos:line="108" pos:column="28"/></operator> <name pos:line="108" pos:column="25">PCRE_STUDY_MAPPED<pos:position pos:line="108" pos:column="42"/></name><operator pos:line="108" pos:column="42">)<pos:position pos:line="108" pos:column="43"/></operator> <operator pos:line="108" pos:column="44">!=<pos:position pos:line="108" pos:column="46"/></operator> <literal type="number" pos:line="108" pos:column="47">0<pos:position pos:line="108" pos:column="48"/></literal></expr>)<pos:position pos:line="108" pos:column="49"/></condition><then pos:line="108" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><name pos:line="109" pos:column="9">start_bits<pos:position pos:line="109" pos:column="19"/></name> <operator pos:line="109" pos:column="20">=<pos:position pos:line="109" pos:column="21"/></operator> <name><name pos:line="109" pos:column="22">extra<pos:position pos:line="109" pos:column="27"/></name><operator pos:line="109" pos:column="27">-&gt;<pos:position pos:line="109" pos:column="32"/></operator><name pos:line="109" pos:column="29">start_bits<pos:position pos:line="109" pos:column="39"/></name></name></expr>;<pos:position pos:line="109" pos:column="40"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="110" pos:column="4"/></block></then></if>

<comment type="block" pos:line="112" pos:column="1">/* For anchored or unanchored matches, there may be a "last known required
character" set. If the PCRE_CASELESS is set, implying that the match starts
caselessly, or if there are any changes of this flag within the regex, set up
both cases of the character. Otherwise set the two values the same, which will
avoid duplicate testing (which takes significant time). This covers the vast
majority of cases. It will be suboptimal when the case flag changes in a regex
and the required character in fact is caseful. */</comment>

<if pos:line="120" pos:column="1">if <condition pos:line="120" pos:column="4">(<expr><operator pos:line="120" pos:column="5">(<pos:position pos:line="120" pos:column="6"/></operator><name><name pos:line="120" pos:column="6">re<pos:position pos:line="120" pos:column="8"/></name><operator pos:line="120" pos:column="8">-&gt;<pos:position pos:line="120" pos:column="13"/></operator><name pos:line="120" pos:column="10">options<pos:position pos:line="120" pos:column="17"/></name></name> <operator pos:line="120" pos:column="18">&amp;<pos:position pos:line="120" pos:column="23"/></operator> <name pos:line="120" pos:column="20">PCRE_REQCHSET<pos:position pos:line="120" pos:column="33"/></name><operator pos:line="120" pos:column="33">)<pos:position pos:line="120" pos:column="34"/></operator> <operator pos:line="120" pos:column="35">!=<pos:position pos:line="120" pos:column="37"/></operator> <literal type="number" pos:line="120" pos:column="38">0<pos:position pos:line="120" pos:column="39"/></literal></expr>)<pos:position pos:line="120" pos:column="40"/></condition><then pos:line="120" pos:column="40">
  <block pos:line="121" pos:column="3">{
  <expr_stmt><expr><name pos:line="122" pos:column="3">req_char<pos:position pos:line="122" pos:column="11"/></name> <operator pos:line="122" pos:column="12">=<pos:position pos:line="122" pos:column="13"/></operator> <name><name pos:line="122" pos:column="14">re<pos:position pos:line="122" pos:column="16"/></name><operator pos:line="122" pos:column="16">-&gt;<pos:position pos:line="122" pos:column="21"/></operator><name pos:line="122" pos:column="18">req_char<pos:position pos:line="122" pos:column="26"/></name></name></expr>;<pos:position pos:line="122" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="123" pos:column="3">req_char2<pos:position pos:line="123" pos:column="12"/></name> <operator pos:line="123" pos:column="13">=<pos:position pos:line="123" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="123" pos:column="15">(<pos:position pos:line="123" pos:column="16"/></operator><operator pos:line="123" pos:column="16">(<pos:position pos:line="123" pos:column="17"/></operator><name><name pos:line="123" pos:column="17">re<pos:position pos:line="123" pos:column="19"/></name><operator pos:line="123" pos:column="19">-&gt;<pos:position pos:line="123" pos:column="24"/></operator><name pos:line="123" pos:column="21">options<pos:position pos:line="123" pos:column="28"/></name></name> <operator pos:line="123" pos:column="29">&amp;<pos:position pos:line="123" pos:column="34"/></operator> <operator pos:line="123" pos:column="31">(<pos:position pos:line="123" pos:column="32"/></operator><name pos:line="123" pos:column="32">PCRE_CASELESS<pos:position pos:line="123" pos:column="45"/></name> <operator pos:line="123" pos:column="46">|<pos:position pos:line="123" pos:column="47"/></operator> <name pos:line="123" pos:column="48">PCRE_ICHANGED<pos:position pos:line="123" pos:column="61"/></name><operator pos:line="123" pos:column="61">)<pos:position pos:line="123" pos:column="62"/></operator><operator pos:line="123" pos:column="62">)<pos:position pos:line="123" pos:column="63"/></operator> <operator pos:line="123" pos:column="64">!=<pos:position pos:line="123" pos:column="66"/></operator> <literal type="number" pos:line="123" pos:column="67">0<pos:position pos:line="123" pos:column="68"/></literal><operator pos:line="123" pos:column="68">)<pos:position pos:line="123" pos:column="69"/></operator></expr>?<pos:position pos:line="123" pos:column="70"/></condition><then pos:line="123" pos:column="70">
    <expr><operator pos:line="124" pos:column="5">(<pos:position pos:line="124" pos:column="6"/></operator><name><name pos:line="124" pos:column="6">re<pos:position pos:line="124" pos:column="8"/></name><operator pos:line="124" pos:column="8">-&gt;<pos:position pos:line="124" pos:column="13"/></operator><name pos:line="124" pos:column="10">tables<pos:position pos:line="124" pos:column="16"/></name></name> <operator pos:line="124" pos:column="17">+<pos:position pos:line="124" pos:column="18"/></operator> <name pos:line="124" pos:column="19">fcc_offset<pos:position pos:line="124" pos:column="29"/></name><operator pos:line="124" pos:column="29">)<pos:position pos:line="124" pos:column="30"/></operator><index pos:line="124" pos:column="30">[<expr><name pos:line="124" pos:column="31">req_char<pos:position pos:line="124" pos:column="39"/></name></expr>]<pos:position pos:line="124" pos:column="40"/></index></expr> <pos:position pos:line="124" pos:column="41"/></then><else pos:line="124" pos:column="41">: <expr><name pos:line="124" pos:column="43">req_char<pos:position pos:line="124" pos:column="51"/></name></expr></else></ternary></expr>;<pos:position pos:line="124" pos:column="52"/></expr_stmt>
  }<pos:position pos:line="125" pos:column="4"/></block></then></if>

<comment type="block" pos:line="127" pos:column="1">/* Loop for handling unanchored repeated matching attempts; for anchored regexs
the loop runs just once. */</comment>

<do pos:line="130" pos:column="1">do
  <block pos:line="131" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="132" pos:column="3">int<pos:position pos:line="132" pos:column="6"/></name></type> <name pos:line="132" pos:column="7">rc<pos:position pos:line="132" pos:column="9"/></name></decl>;<pos:position pos:line="132" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="133" pos:column="3">register<pos:position pos:line="133" pos:column="11"/></specifier> <name pos:line="133" pos:column="12">int<pos:position pos:line="133" pos:column="15"/></name> <modifier pos:line="133" pos:column="16">*<pos:position pos:line="133" pos:column="17"/></modifier></type><name pos:line="133" pos:column="17">iptr<pos:position pos:line="133" pos:column="21"/></name> <init pos:line="133" pos:column="22">= <expr><name><name pos:line="133" pos:column="24">match_block<pos:position pos:line="133" pos:column="35"/></name><operator pos:line="133" pos:column="35">.<pos:position pos:line="133" pos:column="36"/></operator><name pos:line="133" pos:column="36">offset_vector<pos:position pos:line="133" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="133" pos:column="50"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="134" pos:column="3">register<pos:position pos:line="134" pos:column="11"/></specifier> <name pos:line="134" pos:column="12">int<pos:position pos:line="134" pos:column="15"/></name> <modifier pos:line="134" pos:column="16">*<pos:position pos:line="134" pos:column="17"/></modifier></type><name pos:line="134" pos:column="17">iend<pos:position pos:line="134" pos:column="21"/></name> <init pos:line="134" pos:column="22">= <expr><name pos:line="134" pos:column="24">iptr<pos:position pos:line="134" pos:column="28"/></name> <operator pos:line="134" pos:column="29">+<pos:position pos:line="134" pos:column="30"/></operator> <name pos:line="134" pos:column="31">resetcount<pos:position pos:line="134" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="134" pos:column="42"/></decl_stmt>

  <comment type="block" pos:line="136" pos:column="3">/* Reset the maximum number of extractions we might see. */</comment>

  <while pos:line="138" pos:column="3">while <condition pos:line="138" pos:column="9">(<expr><name pos:line="138" pos:column="10">iptr<pos:position pos:line="138" pos:column="14"/></name> <operator pos:line="138" pos:column="15">&lt;<pos:position pos:line="138" pos:column="19"/></operator> <name pos:line="138" pos:column="17">iend<pos:position pos:line="138" pos:column="21"/></name></expr>)<pos:position pos:line="138" pos:column="22"/></condition> <block type="pseudo"><expr_stmt><expr><operator pos:line="138" pos:column="23">*<pos:position pos:line="138" pos:column="24"/></operator><name pos:line="138" pos:column="24">iptr<pos:position pos:line="138" pos:column="28"/></name><operator pos:line="138" pos:column="28">++<pos:position pos:line="138" pos:column="30"/></operator> <operator pos:line="138" pos:column="31">=<pos:position pos:line="138" pos:column="32"/></operator> <operator pos:line="138" pos:column="33">-<pos:position pos:line="138" pos:column="34"/></operator><literal type="number" pos:line="138" pos:column="34">1<pos:position pos:line="138" pos:column="35"/></literal></expr>;<pos:position pos:line="138" pos:column="36"/></expr_stmt></block></while>

  <comment type="block" pos:line="140" pos:column="3">/* Advance to a unique first char if possible */</comment>

  <if pos:line="142" pos:column="3">if <condition pos:line="142" pos:column="6">(<expr><name pos:line="142" pos:column="7">first_char<pos:position pos:line="142" pos:column="17"/></name> <operator pos:line="142" pos:column="18">&gt;=<pos:position pos:line="142" pos:column="23"/></operator> <literal type="number" pos:line="142" pos:column="21">0<pos:position pos:line="142" pos:column="22"/></literal></expr>)<pos:position pos:line="142" pos:column="23"/></condition><then pos:line="142" pos:column="23">
    <block pos:line="143" pos:column="5">{
    <if pos:line="144" pos:column="5">if <condition pos:line="144" pos:column="8">(<expr><operator pos:line="144" pos:column="9">(<pos:position pos:line="144" pos:column="10"/></operator><name pos:line="144" pos:column="10">ims<pos:position pos:line="144" pos:column="13"/></name> <operator pos:line="144" pos:column="14">&amp;<pos:position pos:line="144" pos:column="19"/></operator> <name pos:line="144" pos:column="16">PCRE_CASELESS<pos:position pos:line="144" pos:column="29"/></name><operator pos:line="144" pos:column="29">)<pos:position pos:line="144" pos:column="30"/></operator> <operator pos:line="144" pos:column="31">!=<pos:position pos:line="144" pos:column="33"/></operator> <literal type="number" pos:line="144" pos:column="34">0<pos:position pos:line="144" pos:column="35"/></literal></expr>)<pos:position pos:line="144" pos:column="36"/></condition><then pos:line="144" pos:column="36">
      <block type="pseudo"><while pos:line="145" pos:column="7">while <condition pos:line="145" pos:column="13">(<expr><name pos:line="145" pos:column="14">start_match<pos:position pos:line="145" pos:column="25"/></name> <operator pos:line="145" pos:column="26">&lt;<pos:position pos:line="145" pos:column="30"/></operator> <name pos:line="145" pos:column="28">end_subject<pos:position pos:line="145" pos:column="39"/></name> <operator pos:line="145" pos:column="40">&amp;&amp;<pos:position pos:line="145" pos:column="50"/></operator>
             <name><name pos:line="146" pos:column="14">match_block<pos:position pos:line="146" pos:column="25"/></name><operator pos:line="146" pos:column="25">.<pos:position pos:line="146" pos:column="26"/></operator><name pos:line="146" pos:column="26">lcc<pos:position pos:line="146" pos:column="29"/></name><index pos:line="146" pos:column="29">[<expr><operator pos:line="146" pos:column="30">*<pos:position pos:line="146" pos:column="31"/></operator><name pos:line="146" pos:column="31">start_match<pos:position pos:line="146" pos:column="42"/></name></expr>]<pos:position pos:line="146" pos:column="43"/></index></name> <operator pos:line="146" pos:column="44">!=<pos:position pos:line="146" pos:column="46"/></operator> <name pos:line="146" pos:column="47">first_char<pos:position pos:line="146" pos:column="57"/></name></expr>)<pos:position pos:line="146" pos:column="58"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="147" pos:column="9">start_match<pos:position pos:line="147" pos:column="20"/></name><operator pos:line="147" pos:column="20">++<pos:position pos:line="147" pos:column="22"/></operator></expr>;<pos:position pos:line="147" pos:column="23"/></expr_stmt></block></while></block></then>
    <else pos:line="148" pos:column="5">else
      <block type="pseudo"><while pos:line="149" pos:column="7">while <condition pos:line="149" pos:column="13">(<expr><name pos:line="149" pos:column="14">start_match<pos:position pos:line="149" pos:column="25"/></name> <operator pos:line="149" pos:column="26">&lt;<pos:position pos:line="149" pos:column="30"/></operator> <name pos:line="149" pos:column="28">end_subject<pos:position pos:line="149" pos:column="39"/></name> <operator pos:line="149" pos:column="40">&amp;&amp;<pos:position pos:line="149" pos:column="50"/></operator> <operator pos:line="149" pos:column="43">*<pos:position pos:line="149" pos:column="44"/></operator><name pos:line="149" pos:column="44">start_match<pos:position pos:line="149" pos:column="55"/></name> <operator pos:line="149" pos:column="56">!=<pos:position pos:line="149" pos:column="58"/></operator> <name pos:line="149" pos:column="59">first_char<pos:position pos:line="149" pos:column="69"/></name></expr>)<pos:position pos:line="149" pos:column="70"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="150" pos:column="9">start_match<pos:position pos:line="150" pos:column="20"/></name><operator pos:line="150" pos:column="20">++<pos:position pos:line="150" pos:column="22"/></operator></expr>;<pos:position pos:line="150" pos:column="23"/></expr_stmt></block></while></block></else></if>
    }<pos:position pos:line="151" pos:column="6"/></block></then>

  <comment type="block" pos:line="153" pos:column="3">/* Or to just after \n for a multiline match if possible */</comment>

  <elseif pos:line="155" pos:column="3">else <if pos:line="155" pos:column="8">if <condition pos:line="155" pos:column="11">(<expr><name pos:line="155" pos:column="12">startline<pos:position pos:line="155" pos:column="21"/></name></expr>)<pos:position pos:line="155" pos:column="22"/></condition><then pos:line="155" pos:column="22">
    <block pos:line="156" pos:column="5">{
    <if pos:line="157" pos:column="5">if <condition pos:line="157" pos:column="8">(<expr><name pos:line="157" pos:column="9">start_match<pos:position pos:line="157" pos:column="20"/></name> <operator pos:line="157" pos:column="21">&gt;<pos:position pos:line="157" pos:column="25"/></operator> <name><name pos:line="157" pos:column="23">match_block<pos:position pos:line="157" pos:column="34"/></name><operator pos:line="157" pos:column="34">.<pos:position pos:line="157" pos:column="35"/></operator><name pos:line="157" pos:column="35">start_subject<pos:position pos:line="157" pos:column="48"/></name></name> <operator pos:line="157" pos:column="49">+<pos:position pos:line="157" pos:column="50"/></operator> <name pos:line="157" pos:column="51">start_offset<pos:position pos:line="157" pos:column="63"/></name></expr>)<pos:position pos:line="157" pos:column="64"/></condition><then pos:line="157" pos:column="64">
      <block pos:line="158" pos:column="7">{
      <while pos:line="159" pos:column="7">while <condition pos:line="159" pos:column="13">(<expr><name pos:line="159" pos:column="14">start_match<pos:position pos:line="159" pos:column="25"/></name> <operator pos:line="159" pos:column="26">&lt;<pos:position pos:line="159" pos:column="30"/></operator> <name pos:line="159" pos:column="28">end_subject<pos:position pos:line="159" pos:column="39"/></name> <operator pos:line="159" pos:column="40">&amp;&amp;<pos:position pos:line="159" pos:column="50"/></operator> <name><name pos:line="159" pos:column="43">start_match<pos:position pos:line="159" pos:column="54"/></name><index pos:line="159" pos:column="54">[<expr><operator pos:line="159" pos:column="55">-<pos:position pos:line="159" pos:column="56"/></operator><literal type="number" pos:line="159" pos:column="56">1<pos:position pos:line="159" pos:column="57"/></literal></expr>]<pos:position pos:line="159" pos:column="58"/></index></name> <operator pos:line="159" pos:column="59">!=<pos:position pos:line="159" pos:column="61"/></operator> <name pos:line="159" pos:column="62">NEWLINE<pos:position pos:line="159" pos:column="69"/></name></expr>)<pos:position pos:line="159" pos:column="70"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="160" pos:column="9">start_match<pos:position pos:line="160" pos:column="20"/></name><operator pos:line="160" pos:column="20">++<pos:position pos:line="160" pos:column="22"/></operator></expr>;<pos:position pos:line="160" pos:column="23"/></expr_stmt></block></while>
      }<pos:position pos:line="161" pos:column="8"/></block></then></if>
    }<pos:position pos:line="162" pos:column="6"/></block></then></if></elseif>

  <comment type="block" pos:line="164" pos:column="3">/* Or to a non-unique first char after study */</comment>

  <elseif pos:line="166" pos:column="3">else <if pos:line="166" pos:column="8">if <condition pos:line="166" pos:column="11">(<expr><name pos:line="166" pos:column="12">start_bits<pos:position pos:line="166" pos:column="22"/></name> <operator pos:line="166" pos:column="23">!=<pos:position pos:line="166" pos:column="25"/></operator> <name pos:line="166" pos:column="26">NULL<pos:position pos:line="166" pos:column="30"/></name></expr>)<pos:position pos:line="166" pos:column="31"/></condition><then pos:line="166" pos:column="31">
    <block pos:line="167" pos:column="5">{
    <while pos:line="168" pos:column="5">while <condition pos:line="168" pos:column="11">(<expr><name pos:line="168" pos:column="12">start_match<pos:position pos:line="168" pos:column="23"/></name> <operator pos:line="168" pos:column="24">&lt;<pos:position pos:line="168" pos:column="28"/></operator> <name pos:line="168" pos:column="26">end_subject<pos:position pos:line="168" pos:column="37"/></name></expr>)<pos:position pos:line="168" pos:column="38"/></condition>
      <block pos:line="169" pos:column="7">{
      <decl_stmt><decl><type><specifier pos:line="170" pos:column="7">register<pos:position pos:line="170" pos:column="15"/></specifier> <name pos:line="170" pos:column="16">int<pos:position pos:line="170" pos:column="19"/></name></type> <name pos:line="170" pos:column="20">c<pos:position pos:line="170" pos:column="21"/></name> <init pos:line="170" pos:column="22">= <expr><operator pos:line="170" pos:column="24">*<pos:position pos:line="170" pos:column="25"/></operator><name pos:line="170" pos:column="25">start_match<pos:position pos:line="170" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="170" pos:column="37"/></decl_stmt>
      <if pos:line="171" pos:column="7">if <condition pos:line="171" pos:column="10">(<expr><operator pos:line="171" pos:column="11">(<pos:position pos:line="171" pos:column="12"/></operator><name><name pos:line="171" pos:column="12">start_bits<pos:position pos:line="171" pos:column="22"/></name><index pos:line="171" pos:column="22">[<expr><name pos:line="171" pos:column="23">c<pos:position pos:line="171" pos:column="24"/></name><operator pos:line="171" pos:column="24">/<pos:position pos:line="171" pos:column="25"/></operator><literal type="number" pos:line="171" pos:column="25">8<pos:position pos:line="171" pos:column="26"/></literal></expr>]<pos:position pos:line="171" pos:column="27"/></index></name> <operator pos:line="171" pos:column="28">&amp;<pos:position pos:line="171" pos:column="33"/></operator> <operator pos:line="171" pos:column="30">(<pos:position pos:line="171" pos:column="31"/></operator><literal type="number" pos:line="171" pos:column="31">1<pos:position pos:line="171" pos:column="32"/></literal> <operator pos:line="171" pos:column="33">&lt;&lt;<pos:position pos:line="171" pos:column="41"/></operator> <operator pos:line="171" pos:column="36">(<pos:position pos:line="171" pos:column="37"/></operator><name pos:line="171" pos:column="37">c<pos:position pos:line="171" pos:column="38"/></name><operator pos:line="171" pos:column="38">&amp;<pos:position pos:line="171" pos:column="43"/></operator><literal type="number" pos:line="171" pos:column="39">7<pos:position pos:line="171" pos:column="40"/></literal><operator pos:line="171" pos:column="40">)<pos:position pos:line="171" pos:column="41"/></operator><operator pos:line="171" pos:column="41">)<pos:position pos:line="171" pos:column="42"/></operator><operator pos:line="171" pos:column="42">)<pos:position pos:line="171" pos:column="43"/></operator> <operator pos:line="171" pos:column="44">==<pos:position pos:line="171" pos:column="46"/></operator> <literal type="number" pos:line="171" pos:column="47">0<pos:position pos:line="171" pos:column="48"/></literal></expr>)<pos:position pos:line="171" pos:column="49"/></condition><then pos:line="171" pos:column="49"> <block type="pseudo"><expr_stmt><expr><name pos:line="171" pos:column="50">start_match<pos:position pos:line="171" pos:column="61"/></name><operator pos:line="171" pos:column="61">++<pos:position pos:line="171" pos:column="63"/></operator></expr>;<pos:position pos:line="171" pos:column="64"/></expr_stmt></block></then> <else pos:line="171" pos:column="65">else <block type="pseudo"><break pos:line="171" pos:column="70">break;<pos:position pos:line="171" pos:column="76"/></break></block></else></if>
      }<pos:position pos:line="172" pos:column="8"/></block></while>
    }<pos:position pos:line="173" pos:column="6"/></block></then></if></elseif></if>

<cpp:ifdef pos:line="175" pos:column="1">#<cpp:directive pos:line="175" pos:column="2">ifdef<pos:position pos:line="175" pos:column="7"/></cpp:directive> <name pos:line="175" pos:column="8">DEBUG<pos:position pos:line="175" pos:column="13"/></name></cpp:ifdef>  <comment type="block" pos:line="175" pos:column="15">/* Sigh. Some compilers never learn. */</comment>
  <expr_stmt><expr><call><name pos:line="176" pos:column="3">printf<pos:position pos:line="176" pos:column="9"/></name><argument_list pos:line="176" pos:column="9">(<argument><expr><literal type="string" pos:line="176" pos:column="10">"&gt;&gt;&gt;&gt; Match against: "<pos:position pos:line="176" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="177" pos:column="3">pchars<pos:position pos:line="177" pos:column="9"/></name><argument_list pos:line="177" pos:column="9">(<argument><expr><name pos:line="177" pos:column="10">start_match<pos:position pos:line="177" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="23">end_subject<pos:position pos:line="177" pos:column="34"/></name> <operator pos:line="177" pos:column="35">-<pos:position pos:line="177" pos:column="36"/></operator> <name pos:line="177" pos:column="37">start_match<pos:position pos:line="177" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="50">TRUE<pos:position pos:line="177" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="177" pos:column="56">&amp;<pos:position pos:line="177" pos:column="61"/></operator><name pos:line="177" pos:column="57">match_block<pos:position pos:line="177" pos:column="68"/></name></expr></argument>)<pos:position pos:line="177" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="178" pos:column="3">printf<pos:position pos:line="178" pos:column="9"/></name><argument_list pos:line="178" pos:column="9">(<argument><expr><literal type="string" pos:line="178" pos:column="10">"\n"<pos:position pos:line="178" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="16"/></expr_stmt>
<cpp:endif pos:line="179" pos:column="1">#<cpp:directive pos:line="179" pos:column="2">endif<pos:position pos:line="179" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="181" pos:column="3">/* If req_char is set, we know that that character must appear in the subject
  for the match to succeed. If the first character is set, req_char must be
  later in the subject; otherwise the test starts at the match point. This
  optimization can save a huge amount of backtracking in patterns with nested
  unlimited repeats that aren't going to match. We don't know what the state of
  case matching may be when this character is hit, so test for it in both its
  cases if necessary. However, the different cased versions will not be set up
  unless PCRE_CASELESS was given or the casing state changes within the regex.
  Writing separate code makes it go faster, as does using an autoincrement and
  backing off on a match. */</comment>

  <if pos:line="192" pos:column="3">if <condition pos:line="192" pos:column="6">(<expr><name pos:line="192" pos:column="7">req_char<pos:position pos:line="192" pos:column="15"/></name> <operator pos:line="192" pos:column="16">&gt;=<pos:position pos:line="192" pos:column="21"/></operator> <literal type="number" pos:line="192" pos:column="19">0<pos:position pos:line="192" pos:column="20"/></literal></expr>)<pos:position pos:line="192" pos:column="21"/></condition><then pos:line="192" pos:column="21">
    <block pos:line="193" pos:column="5">{
    <decl_stmt><decl><type><specifier pos:line="194" pos:column="5">register<pos:position pos:line="194" pos:column="13"/></specifier> <specifier pos:line="194" pos:column="14">const<pos:position pos:line="194" pos:column="19"/></specifier> <name pos:line="194" pos:column="20">uschar<pos:position pos:line="194" pos:column="26"/></name> <modifier pos:line="194" pos:column="27">*<pos:position pos:line="194" pos:column="28"/></modifier></type><name pos:line="194" pos:column="28">p<pos:position pos:line="194" pos:column="29"/></name> <init pos:line="194" pos:column="30">= <expr><name pos:line="194" pos:column="32">start_match<pos:position pos:line="194" pos:column="43"/></name> <operator pos:line="194" pos:column="44">+<pos:position pos:line="194" pos:column="45"/></operator> <operator pos:line="194" pos:column="46">(<pos:position pos:line="194" pos:column="47"/></operator><ternary><condition><expr><operator pos:line="194" pos:column="47">(<pos:position pos:line="194" pos:column="48"/></operator><name pos:line="194" pos:column="48">first_char<pos:position pos:line="194" pos:column="58"/></name> <operator pos:line="194" pos:column="59">&gt;=<pos:position pos:line="194" pos:column="64"/></operator> <literal type="number" pos:line="194" pos:column="62">0<pos:position pos:line="194" pos:column="63"/></literal><operator pos:line="194" pos:column="63">)<pos:position pos:line="194" pos:column="64"/></operator></expr>?<pos:position pos:line="194" pos:column="65"/></condition><then pos:line="194" pos:column="65"> <expr><literal type="number" pos:line="194" pos:column="66">1<pos:position pos:line="194" pos:column="67"/></literal></expr> <pos:position pos:line="194" pos:column="68"/></then><else pos:line="194" pos:column="68">: <expr><literal type="number" pos:line="194" pos:column="70">0<pos:position pos:line="194" pos:column="71"/></literal></expr></else></ternary><operator pos:line="194" pos:column="71">)<pos:position pos:line="194" pos:column="72"/></operator></expr></init></decl>;<pos:position pos:line="194" pos:column="73"/></decl_stmt>

    <comment type="block" pos:line="196" pos:column="5">/* We don't need to repeat the search if we haven't yet reached the
    place we found it at last time. */</comment>

    <if pos:line="199" pos:column="5">if <condition pos:line="199" pos:column="8">(<expr><name pos:line="199" pos:column="9">p<pos:position pos:line="199" pos:column="10"/></name> <operator pos:line="199" pos:column="11">&gt;<pos:position pos:line="199" pos:column="15"/></operator> <name pos:line="199" pos:column="13">req_char_ptr<pos:position pos:line="199" pos:column="25"/></name></expr>)<pos:position pos:line="199" pos:column="26"/></condition><then pos:line="199" pos:column="26">
      <block pos:line="200" pos:column="7">{
      <comment type="block" pos:line="201" pos:column="7">/* Do a single test if no case difference is set up */</comment>

      <if pos:line="203" pos:column="7">if <condition pos:line="203" pos:column="10">(<expr><name pos:line="203" pos:column="11">req_char<pos:position pos:line="203" pos:column="19"/></name> <operator pos:line="203" pos:column="20">==<pos:position pos:line="203" pos:column="22"/></operator> <name pos:line="203" pos:column="23">req_char2<pos:position pos:line="203" pos:column="32"/></name></expr>)<pos:position pos:line="203" pos:column="33"/></condition><then pos:line="203" pos:column="33">
        <block pos:line="204" pos:column="9">{
        <while pos:line="205" pos:column="9">while <condition pos:line="205" pos:column="15">(<expr><name pos:line="205" pos:column="16">p<pos:position pos:line="205" pos:column="17"/></name> <operator pos:line="205" pos:column="18">&lt;<pos:position pos:line="205" pos:column="22"/></operator> <name pos:line="205" pos:column="20">end_subject<pos:position pos:line="205" pos:column="31"/></name></expr>)<pos:position pos:line="205" pos:column="32"/></condition>
          <block pos:line="206" pos:column="11">{
          <if pos:line="207" pos:column="11">if <condition pos:line="207" pos:column="14">(<expr><operator pos:line="207" pos:column="15">*<pos:position pos:line="207" pos:column="16"/></operator><name pos:line="207" pos:column="16">p<pos:position pos:line="207" pos:column="17"/></name><operator pos:line="207" pos:column="17">++<pos:position pos:line="207" pos:column="19"/></operator> <operator pos:line="207" pos:column="20">==<pos:position pos:line="207" pos:column="22"/></operator> <name pos:line="207" pos:column="23">req_char<pos:position pos:line="207" pos:column="31"/></name></expr>)<pos:position pos:line="207" pos:column="32"/></condition><then pos:line="207" pos:column="32"> <block pos:line="207" pos:column="33">{ <expr_stmt><expr><name pos:line="207" pos:column="35">p<pos:position pos:line="207" pos:column="36"/></name><operator pos:line="207" pos:column="36">--<pos:position pos:line="207" pos:column="38"/></operator></expr>;<pos:position pos:line="207" pos:column="39"/></expr_stmt> <break pos:line="207" pos:column="40">break;<pos:position pos:line="207" pos:column="46"/></break> }<pos:position pos:line="207" pos:column="48"/></block></then></if>
          }<pos:position pos:line="208" pos:column="12"/></block></while>
        }<pos:position pos:line="209" pos:column="10"/></block></then>

      <comment type="block" pos:line="211" pos:column="7">/* Otherwise test for either case */</comment>

      <else pos:line="213" pos:column="7">else
        <block pos:line="214" pos:column="9">{
        <while pos:line="215" pos:column="9">while <condition pos:line="215" pos:column="15">(<expr><name pos:line="215" pos:column="16">p<pos:position pos:line="215" pos:column="17"/></name> <operator pos:line="215" pos:column="18">&lt;<pos:position pos:line="215" pos:column="22"/></operator> <name pos:line="215" pos:column="20">end_subject<pos:position pos:line="215" pos:column="31"/></name></expr>)<pos:position pos:line="215" pos:column="32"/></condition>
          <block pos:line="216" pos:column="11">{
          <decl_stmt><decl><type><specifier pos:line="217" pos:column="11">register<pos:position pos:line="217" pos:column="19"/></specifier> <name pos:line="217" pos:column="20">int<pos:position pos:line="217" pos:column="23"/></name></type> <name pos:line="217" pos:column="24">pp<pos:position pos:line="217" pos:column="26"/></name> <init pos:line="217" pos:column="27">= <expr><operator pos:line="217" pos:column="29">*<pos:position pos:line="217" pos:column="30"/></operator><name pos:line="217" pos:column="30">p<pos:position pos:line="217" pos:column="31"/></name><operator pos:line="217" pos:column="31">++<pos:position pos:line="217" pos:column="33"/></operator></expr></init></decl>;<pos:position pos:line="217" pos:column="34"/></decl_stmt>
          <if pos:line="218" pos:column="11">if <condition pos:line="218" pos:column="14">(<expr><name pos:line="218" pos:column="15">pp<pos:position pos:line="218" pos:column="17"/></name> <operator pos:line="218" pos:column="18">==<pos:position pos:line="218" pos:column="20"/></operator> <name pos:line="218" pos:column="21">req_char<pos:position pos:line="218" pos:column="29"/></name> <operator pos:line="218" pos:column="30">||<pos:position pos:line="218" pos:column="32"/></operator> <name pos:line="218" pos:column="33">pp<pos:position pos:line="218" pos:column="35"/></name> <operator pos:line="218" pos:column="36">==<pos:position pos:line="218" pos:column="38"/></operator> <name pos:line="218" pos:column="39">req_char2<pos:position pos:line="218" pos:column="48"/></name></expr>)<pos:position pos:line="218" pos:column="49"/></condition><then pos:line="218" pos:column="49"> <block pos:line="218" pos:column="50">{ <expr_stmt><expr><name pos:line="218" pos:column="52">p<pos:position pos:line="218" pos:column="53"/></name><operator pos:line="218" pos:column="53">--<pos:position pos:line="218" pos:column="55"/></operator></expr>;<pos:position pos:line="218" pos:column="56"/></expr_stmt> <break pos:line="218" pos:column="57">break;<pos:position pos:line="218" pos:column="63"/></break> }<pos:position pos:line="218" pos:column="65"/></block></then></if>
          }<pos:position pos:line="219" pos:column="12"/></block></while>
        }<pos:position pos:line="220" pos:column="10"/></block></else></if>

      <comment type="block" pos:line="222" pos:column="7">/* If we can't find the required character, break the matching loop */</comment>

      <if pos:line="224" pos:column="7">if <condition pos:line="224" pos:column="10">(<expr><name pos:line="224" pos:column="11">p<pos:position pos:line="224" pos:column="12"/></name> <operator pos:line="224" pos:column="13">&gt;=<pos:position pos:line="224" pos:column="18"/></operator> <name pos:line="224" pos:column="16">end_subject<pos:position pos:line="224" pos:column="27"/></name></expr>)<pos:position pos:line="224" pos:column="28"/></condition><then pos:line="224" pos:column="28"> <block type="pseudo"><break pos:line="224" pos:column="29">break;<pos:position pos:line="224" pos:column="35"/></break></block></then></if>

      <comment type="block" pos:line="226" pos:column="7">/* If we have found the required character, save the point where we
      found it, so that we don't search again next time round the loop if
      the start hasn't passed this character yet. */</comment>

      <expr_stmt><expr><name pos:line="230" pos:column="7">req_char_ptr<pos:position pos:line="230" pos:column="19"/></name> <operator pos:line="230" pos:column="20">=<pos:position pos:line="230" pos:column="21"/></operator> <name pos:line="230" pos:column="22">p<pos:position pos:line="230" pos:column="23"/></name></expr>;<pos:position pos:line="230" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="231" pos:column="8"/></block></then></if>
    }<pos:position pos:line="232" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="234" pos:column="3">/* When a match occurs, substrings will be set for all internal extractions;
  we just need to set up the whole thing as substring 0 before returning. If
  there were too many extractions, set the return code to zero. In the case
  where we had to get some local store to hold offsets for backreferences, copy
  those back references that we can. In this case there need not be overflow
  if certain parts of the pattern were not used. */</comment>

  <expr_stmt><expr><name><name pos:line="241" pos:column="3">match_block<pos:position pos:line="241" pos:column="14"/></name><operator pos:line="241" pos:column="14">.<pos:position pos:line="241" pos:column="15"/></operator><name pos:line="241" pos:column="15">start_match<pos:position pos:line="241" pos:column="26"/></name></name> <operator pos:line="241" pos:column="27">=<pos:position pos:line="241" pos:column="28"/></operator> <name pos:line="241" pos:column="29">start_match<pos:position pos:line="241" pos:column="40"/></name></expr>;<pos:position pos:line="241" pos:column="41"/></expr_stmt>
  <if pos:line="242" pos:column="3">if <condition pos:line="242" pos:column="6">(<expr><operator pos:line="242" pos:column="7">!<pos:position pos:line="242" pos:column="8"/></operator><call><name pos:line="242" pos:column="8">match<pos:position pos:line="242" pos:column="13"/></name><argument_list pos:line="242" pos:column="13">(<argument><expr><name pos:line="242" pos:column="14">start_match<pos:position pos:line="242" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="242" pos:column="27">re<pos:position pos:line="242" pos:column="29"/></name><operator pos:line="242" pos:column="29">-&gt;<pos:position pos:line="242" pos:column="34"/></operator><name pos:line="242" pos:column="31">code<pos:position pos:line="242" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="242" pos:column="37">2<pos:position pos:line="242" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="242" pos:column="40">&amp;<pos:position pos:line="242" pos:column="45"/></operator><name pos:line="242" pos:column="41">match_block<pos:position pos:line="242" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="54">ims<pos:position pos:line="242" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="59">NULL<pos:position pos:line="242" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="65">match_isgroup<pos:position pos:line="242" pos:column="78"/></name></expr></argument>)<pos:position pos:line="242" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="242" pos:column="80"/></condition><then pos:line="242" pos:column="80">
    <block type="pseudo"><continue pos:line="243" pos:column="5">continue;<pos:position pos:line="243" pos:column="14"/></continue></block></then></if>

  <comment type="block" pos:line="245" pos:column="3">/* Copy the offset information from temporary store if necessary */</comment>

  <if pos:line="247" pos:column="3">if <condition pos:line="247" pos:column="6">(<expr><name pos:line="247" pos:column="7">using_temporary_offsets<pos:position pos:line="247" pos:column="30"/></name></expr>)<pos:position pos:line="247" pos:column="31"/></condition><then pos:line="247" pos:column="31">
    <block pos:line="248" pos:column="5">{
    <if pos:line="249" pos:column="5">if <condition pos:line="249" pos:column="8">(<expr><name pos:line="249" pos:column="9">offsetcount<pos:position pos:line="249" pos:column="20"/></name> <operator pos:line="249" pos:column="21">&gt;=<pos:position pos:line="249" pos:column="26"/></operator> <literal type="number" pos:line="249" pos:column="24">4<pos:position pos:line="249" pos:column="25"/></literal></expr>)<pos:position pos:line="249" pos:column="26"/></condition><then pos:line="249" pos:column="26">
      <block pos:line="250" pos:column="7">{
      <expr_stmt><expr><call><name pos:line="251" pos:column="7">memcpy<pos:position pos:line="251" pos:column="13"/></name><argument_list pos:line="251" pos:column="13">(<argument><expr><name pos:line="251" pos:column="14">offsets<pos:position pos:line="251" pos:column="21"/></name> <operator pos:line="251" pos:column="22">+<pos:position pos:line="251" pos:column="23"/></operator> <literal type="number" pos:line="251" pos:column="24">2<pos:position pos:line="251" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="251" pos:column="27">match_block<pos:position pos:line="251" pos:column="38"/></name><operator pos:line="251" pos:column="38">.<pos:position pos:line="251" pos:column="39"/></operator><name pos:line="251" pos:column="39">offset_vector<pos:position pos:line="251" pos:column="52"/></name></name> <operator pos:line="251" pos:column="53">+<pos:position pos:line="251" pos:column="54"/></operator> <literal type="number" pos:line="251" pos:column="55">2<pos:position pos:line="251" pos:column="56"/></literal></expr></argument>,
        <argument><expr><operator pos:line="252" pos:column="9">(<pos:position pos:line="252" pos:column="10"/></operator><name pos:line="252" pos:column="10">offsetcount<pos:position pos:line="252" pos:column="21"/></name> <operator pos:line="252" pos:column="22">-<pos:position pos:line="252" pos:column="23"/></operator> <literal type="number" pos:line="252" pos:column="24">2<pos:position pos:line="252" pos:column="25"/></literal><operator pos:line="252" pos:column="25">)<pos:position pos:line="252" pos:column="26"/></operator> <operator pos:line="252" pos:column="27">*<pos:position pos:line="252" pos:column="28"/></operator> <sizeof pos:line="252" pos:column="29">sizeof<argument_list pos:line="252" pos:column="35">(<argument><expr><name pos:line="252" pos:column="36">int<pos:position pos:line="252" pos:column="39"/></name></expr></argument>)<pos:position pos:line="252" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="252" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="253" pos:column="7">DPRINTF<pos:position pos:line="253" pos:column="14"/></name><argument_list pos:line="253" pos:column="14">(<argument><expr><operator pos:line="253" pos:column="15">(<pos:position pos:line="253" pos:column="16"/></operator><literal type="string" pos:line="253" pos:column="16">"Copied offsets from temporary memory\n"<pos:position pos:line="253" pos:column="56"/></literal><operator pos:line="253" pos:column="56">)<pos:position pos:line="253" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="253" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="59"/></expr_stmt>
      }<pos:position pos:line="254" pos:column="8"/></block></then></if>
    <if pos:line="255" pos:column="5">if <condition pos:line="255" pos:column="8">(<expr><name><name pos:line="255" pos:column="9">match_block<pos:position pos:line="255" pos:column="20"/></name><operator pos:line="255" pos:column="20">.<pos:position pos:line="255" pos:column="21"/></operator><name pos:line="255" pos:column="21">end_offset_top<pos:position pos:line="255" pos:column="35"/></name></name> <operator pos:line="255" pos:column="36">&gt;<pos:position pos:line="255" pos:column="40"/></operator> <name pos:line="255" pos:column="38">offsetcount<pos:position pos:line="255" pos:column="49"/></name></expr>)<pos:position pos:line="255" pos:column="50"/></condition><then pos:line="255" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="256" pos:column="7">match_block<pos:position pos:line="256" pos:column="18"/></name><operator pos:line="256" pos:column="18">.<pos:position pos:line="256" pos:column="19"/></operator><name pos:line="256" pos:column="19">offset_overflow<pos:position pos:line="256" pos:column="34"/></name></name> <operator pos:line="256" pos:column="35">=<pos:position pos:line="256" pos:column="36"/></operator> <name pos:line="256" pos:column="37">TRUE<pos:position pos:line="256" pos:column="41"/></name></expr>;<pos:position pos:line="256" pos:column="42"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="258" pos:column="5">DPRINTF<pos:position pos:line="258" pos:column="12"/></name><argument_list pos:line="258" pos:column="12">(<argument><expr><operator pos:line="258" pos:column="13">(<pos:position pos:line="258" pos:column="14"/></operator><literal type="string" pos:line="258" pos:column="14">"Freeing temporary memory\n"<pos:position pos:line="258" pos:column="42"/></literal><operator pos:line="258" pos:column="42">)<pos:position pos:line="258" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="258" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call pos:line="259" pos:column="5">(<name pos:line="259" pos:column="6">pcre_free<pos:position pos:line="259" pos:column="15"/></name>)<argument_list pos:line="259" pos:column="16">(<argument><expr><name><name pos:line="259" pos:column="17">match_block<pos:position pos:line="259" pos:column="28"/></name><operator pos:line="259" pos:column="28">.<pos:position pos:line="259" pos:column="29"/></operator><name pos:line="259" pos:column="29">offset_vector<pos:position pos:line="259" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="259" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="260" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name pos:line="262" pos:column="3">rc<pos:position pos:line="262" pos:column="5"/></name> <operator pos:line="262" pos:column="6">=<pos:position pos:line="262" pos:column="7"/></operator> <ternary><condition><expr><name><name pos:line="262" pos:column="8">match_block<pos:position pos:line="262" pos:column="19"/></name><operator pos:line="262" pos:column="19">.<pos:position pos:line="262" pos:column="20"/></operator><name pos:line="262" pos:column="20">offset_overflow<pos:position pos:line="262" pos:column="35"/></name></name></expr>?<pos:position pos:line="262" pos:column="36"/></condition><then pos:line="262" pos:column="36"> <expr><literal type="number" pos:line="262" pos:column="37">0<pos:position pos:line="262" pos:column="38"/></literal></expr> <pos:position pos:line="262" pos:column="39"/></then><else pos:line="262" pos:column="39">: <expr><name><name pos:line="262" pos:column="41">match_block<pos:position pos:line="262" pos:column="52"/></name><operator pos:line="262" pos:column="52">.<pos:position pos:line="262" pos:column="53"/></operator><name pos:line="262" pos:column="53">end_offset_top<pos:position pos:line="262" pos:column="67"/></name></name><operator pos:line="262" pos:column="67">/<pos:position pos:line="262" pos:column="68"/></operator><literal type="number" pos:line="262" pos:column="68">2<pos:position pos:line="262" pos:column="69"/></literal></expr></else></ternary></expr>;<pos:position pos:line="262" pos:column="70"/></expr_stmt>

  <if pos:line="264" pos:column="3">if <condition pos:line="264" pos:column="6">(<expr><name pos:line="264" pos:column="7">offsetcount<pos:position pos:line="264" pos:column="18"/></name> <operator pos:line="264" pos:column="19">&lt;<pos:position pos:line="264" pos:column="23"/></operator> <literal type="number" pos:line="264" pos:column="21">2<pos:position pos:line="264" pos:column="22"/></literal></expr>)<pos:position pos:line="264" pos:column="23"/></condition><then pos:line="264" pos:column="23"> <block type="pseudo"><expr_stmt><expr><name pos:line="264" pos:column="24">rc<pos:position pos:line="264" pos:column="26"/></name> <operator pos:line="264" pos:column="27">=<pos:position pos:line="264" pos:column="28"/></operator> <literal type="number" pos:line="264" pos:column="29">0<pos:position pos:line="264" pos:column="30"/></literal></expr>;<pos:position pos:line="264" pos:column="31"/></expr_stmt></block></then> <else pos:line="264" pos:column="32">else
    <block pos:line="265" pos:column="5">{
    <expr_stmt><expr><name><name pos:line="266" pos:column="5">offsets<pos:position pos:line="266" pos:column="12"/></name><index pos:line="266" pos:column="12">[<expr><literal type="number" pos:line="266" pos:column="13">0<pos:position pos:line="266" pos:column="14"/></literal></expr>]<pos:position pos:line="266" pos:column="15"/></index></name> <operator pos:line="266" pos:column="16">=<pos:position pos:line="266" pos:column="17"/></operator> <name pos:line="266" pos:column="18">start_match<pos:position pos:line="266" pos:column="29"/></name> <operator pos:line="266" pos:column="30">-<pos:position pos:line="266" pos:column="31"/></operator> <name><name pos:line="266" pos:column="32">match_block<pos:position pos:line="266" pos:column="43"/></name><operator pos:line="266" pos:column="43">.<pos:position pos:line="266" pos:column="44"/></operator><name pos:line="266" pos:column="44">start_subject<pos:position pos:line="266" pos:column="57"/></name></name></expr>;<pos:position pos:line="266" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="267" pos:column="5">offsets<pos:position pos:line="267" pos:column="12"/></name><index pos:line="267" pos:column="12">[<expr><literal type="number" pos:line="267" pos:column="13">1<pos:position pos:line="267" pos:column="14"/></literal></expr>]<pos:position pos:line="267" pos:column="15"/></index></name> <operator pos:line="267" pos:column="16">=<pos:position pos:line="267" pos:column="17"/></operator> <name><name pos:line="267" pos:column="18">match_block<pos:position pos:line="267" pos:column="29"/></name><operator pos:line="267" pos:column="29">.<pos:position pos:line="267" pos:column="30"/></operator><name pos:line="267" pos:column="30">end_match_ptr<pos:position pos:line="267" pos:column="43"/></name></name> <operator pos:line="267" pos:column="44">-<pos:position pos:line="267" pos:column="45"/></operator> <name><name pos:line="267" pos:column="46">match_block<pos:position pos:line="267" pos:column="57"/></name><operator pos:line="267" pos:column="57">.<pos:position pos:line="267" pos:column="58"/></operator><name pos:line="267" pos:column="58">start_subject<pos:position pos:line="267" pos:column="71"/></name></name></expr>;<pos:position pos:line="267" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="268" pos:column="6"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="270" pos:column="3">DPRINTF<pos:position pos:line="270" pos:column="10"/></name><argument_list pos:line="270" pos:column="10">(<argument><expr><operator pos:line="270" pos:column="11">(<pos:position pos:line="270" pos:column="12"/></operator><literal type="string" pos:line="270" pos:column="12">"&gt;&gt;&gt;&gt; returning %d\n"<pos:position pos:line="270" pos:column="45"/></literal><operator pos:line="270" pos:column="33">,<pos:position pos:line="270" pos:column="34"/></operator> <name pos:line="270" pos:column="35">rc<pos:position pos:line="270" pos:column="37"/></name><operator pos:line="270" pos:column="37">)<pos:position pos:line="270" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="270" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="40"/></expr_stmt>
  <return pos:line="271" pos:column="3">return <expr><name pos:line="271" pos:column="10">rc<pos:position pos:line="271" pos:column="12"/></name></expr>;<pos:position pos:line="271" pos:column="13"/></return>
  }<pos:position pos:line="272" pos:column="4"/></block>

<comment type="block" pos:line="274" pos:column="1">/* This "while" is the end of the "do" above */</comment>

while <condition pos:line="276" pos:column="7">(<expr><operator pos:line="276" pos:column="8">!<pos:position pos:line="276" pos:column="9"/></operator><name pos:line="276" pos:column="9">anchored<pos:position pos:line="276" pos:column="17"/></name> <operator pos:line="276" pos:column="18">&amp;&amp;<pos:position pos:line="276" pos:column="28"/></operator>
       <name><name pos:line="277" pos:column="8">match_block<pos:position pos:line="277" pos:column="19"/></name><operator pos:line="277" pos:column="19">.<pos:position pos:line="277" pos:column="20"/></operator><name pos:line="277" pos:column="20">errorcode<pos:position pos:line="277" pos:column="29"/></name></name> <operator pos:line="277" pos:column="30">==<pos:position pos:line="277" pos:column="32"/></operator> <name pos:line="277" pos:column="33">PCRE_ERROR_NOMATCH<pos:position pos:line="277" pos:column="51"/></name> <operator pos:line="277" pos:column="52">&amp;&amp;<pos:position pos:line="277" pos:column="62"/></operator>
       <name pos:line="278" pos:column="8">start_match<pos:position pos:line="278" pos:column="19"/></name><operator pos:line="278" pos:column="19">++<pos:position pos:line="278" pos:column="21"/></operator> <operator pos:line="278" pos:column="22">&lt;<pos:position pos:line="278" pos:column="26"/></operator> <name pos:line="278" pos:column="24">end_subject<pos:position pos:line="278" pos:column="35"/></name></expr>)<pos:position pos:line="278" pos:column="36"/></condition>;<pos:position pos:line="278" pos:column="37"/></do>

<if pos:line="280" pos:column="1">if <condition pos:line="280" pos:column="4">(<expr><name pos:line="280" pos:column="5">using_temporary_offsets<pos:position pos:line="280" pos:column="28"/></name></expr>)<pos:position pos:line="280" pos:column="29"/></condition><then pos:line="280" pos:column="29">
  <block pos:line="281" pos:column="3">{
  <expr_stmt><expr><call><name pos:line="282" pos:column="3">DPRINTF<pos:position pos:line="282" pos:column="10"/></name><argument_list pos:line="282" pos:column="10">(<argument><expr><operator pos:line="282" pos:column="11">(<pos:position pos:line="282" pos:column="12"/></operator><literal type="string" pos:line="282" pos:column="12">"Freeing temporary memory\n"<pos:position pos:line="282" pos:column="40"/></literal><operator pos:line="282" pos:column="40">)<pos:position pos:line="282" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="282" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call pos:line="283" pos:column="3">(<name pos:line="283" pos:column="4">pcre_free<pos:position pos:line="283" pos:column="13"/></name>)<argument_list pos:line="283" pos:column="14">(<argument><expr><name><name pos:line="283" pos:column="15">match_block<pos:position pos:line="283" pos:column="26"/></name><operator pos:line="283" pos:column="26">.<pos:position pos:line="283" pos:column="27"/></operator><name pos:line="283" pos:column="27">offset_vector<pos:position pos:line="283" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="283" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="284" pos:column="4"/></block></then></if>

<expr_stmt><expr><call><name pos:line="286" pos:column="1">DPRINTF<pos:position pos:line="286" pos:column="8"/></name><argument_list pos:line="286" pos:column="8">(<argument><expr><operator pos:line="286" pos:column="9">(<pos:position pos:line="286" pos:column="10"/></operator><literal type="string" pos:line="286" pos:column="10">"&gt;&gt;&gt;&gt; returning %d\n"<pos:position pos:line="286" pos:column="43"/></literal><operator pos:line="286" pos:column="31">,<pos:position pos:line="286" pos:column="32"/></operator> <name><name pos:line="286" pos:column="33">match_block<pos:position pos:line="286" pos:column="44"/></name><operator pos:line="286" pos:column="44">.<pos:position pos:line="286" pos:column="45"/></operator><name pos:line="286" pos:column="45">errorcode<pos:position pos:line="286" pos:column="54"/></name></name><operator pos:line="286" pos:column="54">)<pos:position pos:line="286" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="286" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="57"/></expr_stmt>

<return pos:line="288" pos:column="1">return <expr><name><name pos:line="288" pos:column="8">match_block<pos:position pos:line="288" pos:column="19"/></name><operator pos:line="288" pos:column="19">.<pos:position pos:line="288" pos:column="20"/></operator><name pos:line="288" pos:column="20">errorcode<pos:position pos:line="288" pos:column="29"/></name></name></expr>;<pos:position pos:line="288" pos:column="30"/></return>
}<pos:position pos:line="289" pos:column="2"/></block></function></unit>

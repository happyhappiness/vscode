<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2747_httpd-2.0.55.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ldap_url_parse_ext<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">url_in<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, 
                              <parameter><decl><type><name pos:line="2" pos:column="31">apr_ldap_url_desc_t<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier><modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">ludpp<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
<comment type="block" pos:line="4" pos:column="1">/*
 *  Pick apart the pieces of an LDAP URL.
 */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_ldap_url_desc_t<pos:position pos:line="7" pos:column="24"/></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">ludp<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name>        <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">p<pos:position pos:line="8" pos:column="19"/></name></decl>, <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="22">q<pos:position pos:line="8" pos:column="23"/></name></decl>, <modifier pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="26">r<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type>         <name pos:line="9" pos:column="17">i<pos:position pos:line="9" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="20">enclosed<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name>  <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">scheme<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><name pos:line="10" pos:column="27">NULL<pos:position pos:line="10" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name>  <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">url_tmp<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name>        <modifier pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></modifier></type><name pos:line="12" pos:column="18">url<pos:position pos:line="12" pos:column="21"/></name></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>

    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">( <expr><name pos:line="14" pos:column="9">url_in<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">==<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">NULL<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">||<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">ludpp<pos:position pos:line="14" pos:column="32"/></name> <operator pos:line="14" pos:column="33">==<pos:position pos:line="14" pos:column="35"/></operator> <name pos:line="14" pos:column="36">NULL<pos:position pos:line="14" pos:column="40"/></name></expr> )<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42"> <block pos:line="14" pos:column="43">{
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">LDAP_URL_ERR_PARAM<pos:position pos:line="15" pos:column="34"/></name></expr>;<pos:position pos:line="15" pos:column="35"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="18" pos:column="5">*<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">ludpp<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">NULL<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>  <comment type="block" pos:line="18" pos:column="21">/* pessimistic */</comment>

    <expr_stmt><expr><name pos:line="20" pos:column="5">url_tmp<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">skip_url_prefix<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">( <argument><expr><name pos:line="20" pos:column="32">url_in<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="40">&amp;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="41">enclosed<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="51">&amp;<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="52">scheme<pos:position pos:line="20" pos:column="58"/></name></expr></argument> )<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">( <expr><name pos:line="22" pos:column="10">url_tmp<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">==<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">NULL<pos:position pos:line="22" pos:column="25"/></name></expr> )<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27"> <block pos:line="22" pos:column="28">{
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">LDAP_URL_ERR_BADSCHEME<pos:position pos:line="23" pos:column="38"/></name></expr>;<pos:position pos:line="23" pos:column="39"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/* make working copy of the remainder of the URL */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">url<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">=<pos:position pos:line="27" pos:column="10"/></operator> <call><name pos:line="27" pos:column="11">LDAP_STRDUP<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">( <argument><expr><name pos:line="27" pos:column="24">url_tmp<pos:position pos:line="27" pos:column="31"/></name></expr></argument> )<pos:position pos:line="27" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">( <expr><name pos:line="28" pos:column="10">url<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">==<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">NULL<pos:position pos:line="28" pos:column="21"/></name></expr> )<pos:position pos:line="28" pos:column="23"/></condition><then pos:line="28" pos:column="23"> <block pos:line="28" pos:column="24">{
        <return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">LDAP_URL_ERR_MEM<pos:position pos:line="29" pos:column="32"/></name></expr>;<pos:position pos:line="29" pos:column="33"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">( <expr><name pos:line="32" pos:column="10">enclosed<pos:position pos:line="32" pos:column="18"/></name></expr> )<pos:position pos:line="32" pos:column="20"/></condition><then pos:line="32" pos:column="20"> <block pos:line="32" pos:column="21">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">p<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <operator pos:line="33" pos:column="13">&amp;<pos:position pos:line="33" pos:column="18"/></operator><name><name pos:line="33" pos:column="14">url<pos:position pos:line="33" pos:column="17"/></name><index pos:line="33" pos:column="17">[<expr><call><name pos:line="33" pos:column="18">strlen<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">url<pos:position pos:line="33" pos:column="28"/></name></expr></argument>)<pos:position pos:line="33" pos:column="29"/></argument_list></call><operator pos:line="33" pos:column="29">-<pos:position pos:line="33" pos:column="30"/></operator><literal type="number" pos:line="33" pos:column="30">1<pos:position pos:line="33" pos:column="31"/></literal></expr>]<pos:position pos:line="33" pos:column="32"/></index></name></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>

        <if pos:line="35" pos:column="9">if<condition pos:line="35" pos:column="11">( <expr><operator pos:line="35" pos:column="13">*<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">p<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">!=<pos:position pos:line="35" pos:column="18"/></operator> <literal type="char" pos:line="35" pos:column="19">'&gt;'<pos:position pos:line="35" pos:column="25"/></literal></expr> )<pos:position pos:line="35" pos:column="24"/></condition><then pos:line="35" pos:column="24"> <block pos:line="35" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">LDAP_FREE<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">( <argument><expr><name pos:line="36" pos:column="24">url<pos:position pos:line="36" pos:column="27"/></name></expr></argument> )<pos:position pos:line="36" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="30"/></expr_stmt>
            <return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">LDAP_URL_ERR_BADENCLOSURE<pos:position pos:line="37" pos:column="45"/></name></expr>;<pos:position pos:line="37" pos:column="46"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>

        <expr_stmt><expr><operator pos:line="40" pos:column="9">*<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">p<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <literal type="char" pos:line="40" pos:column="14">'\0'<pos:position pos:line="40" pos:column="18"/></literal></expr>;<pos:position pos:line="40" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="43" pos:column="5">/* allocate return struct */</comment>
    <expr_stmt><expr><name pos:line="44" pos:column="5">ludp<pos:position pos:line="44" pos:column="9"/></name> <operator pos:line="44" pos:column="10">=<pos:position pos:line="44" pos:column="11"/></operator> <operator pos:line="44" pos:column="12">(<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="13">apr_ldap_url_desc_t<pos:position pos:line="44" pos:column="32"/></name> <operator pos:line="44" pos:column="33">*<pos:position pos:line="44" pos:column="34"/></operator><operator pos:line="44" pos:column="34">)<pos:position pos:line="44" pos:column="35"/></operator><call><name pos:line="44" pos:column="35">LDAP_CALLOC<pos:position pos:line="44" pos:column="46"/></name><argument_list pos:line="44" pos:column="46">( <argument><expr><literal type="number" pos:line="44" pos:column="48">1<pos:position pos:line="44" pos:column="49"/></literal></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="51">sizeof<argument_list pos:line="44" pos:column="57">( <argument><expr><name pos:line="44" pos:column="59">apr_ldap_url_desc_t<pos:position pos:line="44" pos:column="78"/></name></expr></argument> )<pos:position pos:line="44" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="82"/></expr_stmt>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">( <expr><name pos:line="46" pos:column="10">ludp<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">==<pos:position pos:line="46" pos:column="17"/></operator> <name pos:line="46" pos:column="18">NULL<pos:position pos:line="46" pos:column="22"/></name></expr> )<pos:position pos:line="46" pos:column="24"/></condition><then pos:line="46" pos:column="24"> <block pos:line="46" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">LDAP_FREE<pos:position pos:line="47" pos:column="18"/></name><argument_list pos:line="47" pos:column="18">( <argument><expr><name pos:line="47" pos:column="20">url<pos:position pos:line="47" pos:column="23"/></name></expr></argument> )<pos:position pos:line="47" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">LDAP_URL_ERR_MEM<pos:position pos:line="48" pos:column="32"/></name></expr>;<pos:position pos:line="48" pos:column="33"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="51" pos:column="5">ludp<pos:position pos:line="51" pos:column="9"/></name><operator pos:line="51" pos:column="9">-&gt;<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="11">lud_next<pos:position pos:line="51" pos:column="19"/></name></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <name pos:line="51" pos:column="22">NULL<pos:position pos:line="51" pos:column="26"/></name></expr>;<pos:position pos:line="51" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">ludp<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">-&gt;<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="11">lud_host<pos:position pos:line="52" pos:column="19"/></name></name> <operator pos:line="52" pos:column="20">=<pos:position pos:line="52" pos:column="21"/></operator> <name pos:line="52" pos:column="22">NULL<pos:position pos:line="52" pos:column="26"/></name></expr>;<pos:position pos:line="52" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">ludp<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">-&gt;<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="11">lud_port<pos:position pos:line="53" pos:column="19"/></name></name> <operator pos:line="53" pos:column="20">=<pos:position pos:line="53" pos:column="21"/></operator> <name pos:line="53" pos:column="22">LDAP_PORT<pos:position pos:line="53" pos:column="31"/></name></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">ludp<pos:position pos:line="54" pos:column="9"/></name><operator pos:line="54" pos:column="9">-&gt;<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="11">lud_dn<pos:position pos:line="54" pos:column="17"/></name></name> <operator pos:line="54" pos:column="18">=<pos:position pos:line="54" pos:column="19"/></operator> <name pos:line="54" pos:column="20">NULL<pos:position pos:line="54" pos:column="24"/></name></expr>;<pos:position pos:line="54" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">ludp<pos:position pos:line="55" pos:column="9"/></name><operator pos:line="55" pos:column="9">-&gt;<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="11">lud_attrs<pos:position pos:line="55" pos:column="20"/></name></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <name pos:line="55" pos:column="23">NULL<pos:position pos:line="55" pos:column="27"/></name></expr>;<pos:position pos:line="55" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">ludp<pos:position pos:line="56" pos:column="9"/></name><operator pos:line="56" pos:column="9">-&gt;<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="11">lud_filter<pos:position pos:line="56" pos:column="21"/></name></name> <operator pos:line="56" pos:column="22">=<pos:position pos:line="56" pos:column="23"/></operator> <name pos:line="56" pos:column="24">NULL<pos:position pos:line="56" pos:column="28"/></name></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">ludp<pos:position pos:line="57" pos:column="9"/></name><operator pos:line="57" pos:column="9">-&gt;<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="11">lud_scope<pos:position pos:line="57" pos:column="20"/></name></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <operator pos:line="57" pos:column="23">-<pos:position pos:line="57" pos:column="24"/></operator><literal type="number" pos:line="57" pos:column="24">1<pos:position pos:line="57" pos:column="25"/></literal></expr>;<pos:position pos:line="57" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">ludp<pos:position pos:line="58" pos:column="9"/></name><operator pos:line="58" pos:column="9">-&gt;<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="11">lud_filter<pos:position pos:line="58" pos:column="21"/></name></name> <operator pos:line="58" pos:column="22">=<pos:position pos:line="58" pos:column="23"/></operator> <name pos:line="58" pos:column="24">NULL<pos:position pos:line="58" pos:column="28"/></name></expr>;<pos:position pos:line="58" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">ludp<pos:position pos:line="59" pos:column="9"/></name><operator pos:line="59" pos:column="9">-&gt;<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="11">lud_exts<pos:position pos:line="59" pos:column="19"/></name></name> <operator pos:line="59" pos:column="20">=<pos:position pos:line="59" pos:column="21"/></operator> <name pos:line="59" pos:column="22">NULL<pos:position pos:line="59" pos:column="26"/></name></expr>;<pos:position pos:line="59" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="61" pos:column="5">ludp<pos:position pos:line="61" pos:column="9"/></name><operator pos:line="61" pos:column="9">-&gt;<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="11">lud_scheme<pos:position pos:line="61" pos:column="21"/></name></name> <operator pos:line="61" pos:column="22">=<pos:position pos:line="61" pos:column="23"/></operator> <call><name pos:line="61" pos:column="24">LDAP_STRDUP<pos:position pos:line="61" pos:column="35"/></name><argument_list pos:line="61" pos:column="35">( <argument><expr><name pos:line="61" pos:column="37">scheme<pos:position pos:line="61" pos:column="43"/></name></expr></argument> )<pos:position pos:line="61" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="46"/></expr_stmt>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">( <expr><name><name pos:line="63" pos:column="10">ludp<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">-&gt;<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="16">lud_scheme<pos:position pos:line="63" pos:column="26"/></name></name> <operator pos:line="63" pos:column="27">==<pos:position pos:line="63" pos:column="29"/></operator> <name pos:line="63" pos:column="30">NULL<pos:position pos:line="63" pos:column="34"/></name></expr> )<pos:position pos:line="63" pos:column="36"/></condition><then pos:line="63" pos:column="36"> <block pos:line="63" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">LDAP_FREE<pos:position pos:line="64" pos:column="18"/></name><argument_list pos:line="64" pos:column="18">( <argument><expr><name pos:line="64" pos:column="20">url<pos:position pos:line="64" pos:column="23"/></name></expr></argument> )<pos:position pos:line="64" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">apr_ldap_free_urldesc<pos:position pos:line="65" pos:column="30"/></name><argument_list pos:line="65" pos:column="30">( <argument><expr><name pos:line="65" pos:column="32">ludp<pos:position pos:line="65" pos:column="36"/></name></expr></argument> )<pos:position pos:line="65" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="39"/></expr_stmt>
        <return pos:line="66" pos:column="9">return <expr><name pos:line="66" pos:column="16">LDAP_URL_ERR_MEM<pos:position pos:line="66" pos:column="32"/></name></expr>;<pos:position pos:line="66" pos:column="33"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <if pos:line="69" pos:column="5">if<condition pos:line="69" pos:column="7">( <expr><call><name pos:line="69" pos:column="9">strcasecmp<pos:position pos:line="69" pos:column="19"/></name><argument_list pos:line="69" pos:column="19">( <argument><expr><name><name pos:line="69" pos:column="21">ludp<pos:position pos:line="69" pos:column="25"/></name><operator pos:line="69" pos:column="25">-&gt;<pos:position pos:line="69" pos:column="30"/></operator><name pos:line="69" pos:column="27">lud_scheme<pos:position pos:line="69" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="39">"ldaps"<pos:position pos:line="69" pos:column="46"/></literal></expr></argument> )<pos:position pos:line="69" pos:column="48"/></argument_list></call> <operator pos:line="69" pos:column="49">==<pos:position pos:line="69" pos:column="51"/></operator> <literal type="number" pos:line="69" pos:column="52">0<pos:position pos:line="69" pos:column="53"/></literal></expr> )<pos:position pos:line="69" pos:column="55"/></condition><then pos:line="69" pos:column="55"> <block pos:line="69" pos:column="56">{
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">ludp<pos:position pos:line="70" pos:column="13"/></name><operator pos:line="70" pos:column="13">-&gt;<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="15">lud_port<pos:position pos:line="70" pos:column="23"/></name></name> <operator pos:line="70" pos:column="24">=<pos:position pos:line="70" pos:column="25"/></operator> <name pos:line="70" pos:column="26">LDAPS_PORT<pos:position pos:line="70" pos:column="36"/></name></expr>;<pos:position pos:line="70" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="73" pos:column="5">/* scan forward for '/' that marks end of hostport and begin. of dn */</comment>
    <expr_stmt><expr><name pos:line="74" pos:column="5">p<pos:position pos:line="74" pos:column="6"/></name> <operator pos:line="74" pos:column="7">=<pos:position pos:line="74" pos:column="8"/></operator> <call><name pos:line="74" pos:column="9">strchr<pos:position pos:line="74" pos:column="15"/></name><argument_list pos:line="74" pos:column="15">( <argument><expr><name pos:line="74" pos:column="17">url<pos:position pos:line="74" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="74" pos:column="22">'/'<pos:position pos:line="74" pos:column="25"/></literal></expr></argument> )<pos:position pos:line="74" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="28"/></expr_stmt>

    <if pos:line="76" pos:column="5">if<condition pos:line="76" pos:column="7">( <expr><name pos:line="76" pos:column="9">p<pos:position pos:line="76" pos:column="10"/></name> <operator pos:line="76" pos:column="11">!=<pos:position pos:line="76" pos:column="13"/></operator> <name pos:line="76" pos:column="14">NULL<pos:position pos:line="76" pos:column="18"/></name></expr> )<pos:position pos:line="76" pos:column="20"/></condition><then pos:line="76" pos:column="20"> <block pos:line="76" pos:column="21">{
        <comment type="block" pos:line="77" pos:column="9">/* terminate hostport; point to start of dn */</comment>
        <expr_stmt><expr><operator pos:line="78" pos:column="9">*<pos:position pos:line="78" pos:column="10"/></operator><name pos:line="78" pos:column="10">p<pos:position pos:line="78" pos:column="11"/></name><operator pos:line="78" pos:column="11">++<pos:position pos:line="78" pos:column="13"/></operator> <operator pos:line="78" pos:column="14">=<pos:position pos:line="78" pos:column="15"/></operator> <literal type="char" pos:line="78" pos:column="16">'\0'<pos:position pos:line="78" pos:column="20"/></literal></expr>;<pos:position pos:line="78" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="81" pos:column="5">/* IPv6 syntax with [ip address]:port */</comment>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">( <expr><operator pos:line="82" pos:column="10">*<pos:position pos:line="82" pos:column="11"/></operator><name pos:line="82" pos:column="11">url<pos:position pos:line="82" pos:column="14"/></name> <operator pos:line="82" pos:column="15">==<pos:position pos:line="82" pos:column="17"/></operator> <literal type="char" pos:line="82" pos:column="18">'['<pos:position pos:line="82" pos:column="21"/></literal></expr> )<pos:position pos:line="82" pos:column="23"/></condition><then pos:line="82" pos:column="23"> <block pos:line="82" pos:column="24">{
        <expr_stmt><expr><name pos:line="83" pos:column="9">r<pos:position pos:line="83" pos:column="10"/></name> <operator pos:line="83" pos:column="11">=<pos:position pos:line="83" pos:column="12"/></operator> <call><name pos:line="83" pos:column="13">strchr<pos:position pos:line="83" pos:column="19"/></name><argument_list pos:line="83" pos:column="19">( <argument><expr><name pos:line="83" pos:column="21">url<pos:position pos:line="83" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="83" pos:column="26">']'<pos:position pos:line="83" pos:column="29"/></literal></expr></argument> )<pos:position pos:line="83" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="32"/></expr_stmt>
        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">( <expr><name pos:line="84" pos:column="14">r<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">==<pos:position pos:line="84" pos:column="18"/></operator> <name pos:line="84" pos:column="19">NULL<pos:position pos:line="84" pos:column="23"/></name></expr> )<pos:position pos:line="84" pos:column="25"/></condition><then pos:line="84" pos:column="25"> <block pos:line="84" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">LDAP_FREE<pos:position pos:line="85" pos:column="22"/></name><argument_list pos:line="85" pos:column="22">( <argument><expr><name pos:line="85" pos:column="24">url<pos:position pos:line="85" pos:column="27"/></name></expr></argument> )<pos:position pos:line="85" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">apr_ldap_free_urldesc<pos:position pos:line="86" pos:column="34"/></name><argument_list pos:line="86" pos:column="34">( <argument><expr><name pos:line="86" pos:column="36">ludp<pos:position pos:line="86" pos:column="40"/></name></expr></argument> )<pos:position pos:line="86" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="43"/></expr_stmt>
            <return pos:line="87" pos:column="13">return <expr><name pos:line="87" pos:column="20">LDAP_URL_ERR_BADURL<pos:position pos:line="87" pos:column="39"/></name></expr>;<pos:position pos:line="87" pos:column="40"/></return>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="89" pos:column="9">*<pos:position pos:line="89" pos:column="10"/></operator><name pos:line="89" pos:column="10">r<pos:position pos:line="89" pos:column="11"/></name><operator pos:line="89" pos:column="11">++<pos:position pos:line="89" pos:column="13"/></operator> <operator pos:line="89" pos:column="14">=<pos:position pos:line="89" pos:column="15"/></operator> <literal type="char" pos:line="89" pos:column="16">'\0'<pos:position pos:line="89" pos:column="20"/></literal></expr>;<pos:position pos:line="89" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="90" pos:column="9">q<pos:position pos:line="90" pos:column="10"/></name> <operator pos:line="90" pos:column="11">=<pos:position pos:line="90" pos:column="12"/></operator> <call><name pos:line="90" pos:column="13">strchr<pos:position pos:line="90" pos:column="19"/></name><argument_list pos:line="90" pos:column="19">( <argument><expr><name pos:line="90" pos:column="21">r<pos:position pos:line="90" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="90" pos:column="24">':'<pos:position pos:line="90" pos:column="27"/></literal></expr></argument> )<pos:position pos:line="90" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="91" pos:column="6"/></block></then> <else pos:line="91" pos:column="7">else <block pos:line="91" pos:column="12">{
        <expr_stmt><expr><name pos:line="92" pos:column="9">q<pos:position pos:line="92" pos:column="10"/></name> <operator pos:line="92" pos:column="11">=<pos:position pos:line="92" pos:column="12"/></operator> <call><name pos:line="92" pos:column="13">strchr<pos:position pos:line="92" pos:column="19"/></name><argument_list pos:line="92" pos:column="19">( <argument><expr><name pos:line="92" pos:column="21">url<pos:position pos:line="92" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="92" pos:column="26">':'<pos:position pos:line="92" pos:column="29"/></literal></expr></argument> )<pos:position pos:line="92" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="93" pos:column="6"/></block></else></if>

    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">( <expr><name pos:line="95" pos:column="10">q<pos:position pos:line="95" pos:column="11"/></name> <operator pos:line="95" pos:column="12">!=<pos:position pos:line="95" pos:column="14"/></operator> <name pos:line="95" pos:column="15">NULL<pos:position pos:line="95" pos:column="19"/></name></expr> )<pos:position pos:line="95" pos:column="21"/></condition><then pos:line="95" pos:column="21"> <block pos:line="95" pos:column="22">{
        <expr_stmt><expr><operator pos:line="96" pos:column="9">*<pos:position pos:line="96" pos:column="10"/></operator><name pos:line="96" pos:column="10">q<pos:position pos:line="96" pos:column="11"/></name><operator pos:line="96" pos:column="11">++<pos:position pos:line="96" pos:column="13"/></operator> <operator pos:line="96" pos:column="14">=<pos:position pos:line="96" pos:column="15"/></operator> <literal type="char" pos:line="96" pos:column="16">'\0'<pos:position pos:line="96" pos:column="20"/></literal></expr>;<pos:position pos:line="96" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">ldap_pvt_hex_unescape<pos:position pos:line="97" pos:column="30"/></name><argument_list pos:line="97" pos:column="30">( <argument><expr><name pos:line="97" pos:column="32">q<pos:position pos:line="97" pos:column="33"/></name></expr></argument> )<pos:position pos:line="97" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="36"/></expr_stmt>

        <if pos:line="99" pos:column="9">if<condition pos:line="99" pos:column="11">( <expr><operator pos:line="99" pos:column="13">*<pos:position pos:line="99" pos:column="14"/></operator><name pos:line="99" pos:column="14">q<pos:position pos:line="99" pos:column="15"/></name> <operator pos:line="99" pos:column="16">==<pos:position pos:line="99" pos:column="18"/></operator> <literal type="char" pos:line="99" pos:column="19">'\0'<pos:position pos:line="99" pos:column="23"/></literal></expr> )<pos:position pos:line="99" pos:column="25"/></condition><then pos:line="99" pos:column="25"> <block pos:line="99" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="100" pos:column="13">LDAP_FREE<pos:position pos:line="100" pos:column="22"/></name><argument_list pos:line="100" pos:column="22">( <argument><expr><name pos:line="100" pos:column="24">url<pos:position pos:line="100" pos:column="27"/></name></expr></argument> )<pos:position pos:line="100" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">apr_ldap_free_urldesc<pos:position pos:line="101" pos:column="34"/></name><argument_list pos:line="101" pos:column="34">( <argument><expr><name pos:line="101" pos:column="36">ludp<pos:position pos:line="101" pos:column="40"/></name></expr></argument> )<pos:position pos:line="101" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="43"/></expr_stmt>
            <return pos:line="102" pos:column="13">return <expr><name pos:line="102" pos:column="20">LDAP_URL_ERR_BADURL<pos:position pos:line="102" pos:column="39"/></name></expr>;<pos:position pos:line="102" pos:column="40"/></return>
        }<pos:position pos:line="103" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="105" pos:column="9">ludp<pos:position pos:line="105" pos:column="13"/></name><operator pos:line="105" pos:column="13">-&gt;<pos:position pos:line="105" pos:column="18"/></operator><name pos:line="105" pos:column="15">lud_port<pos:position pos:line="105" pos:column="23"/></name></name> <operator pos:line="105" pos:column="24">=<pos:position pos:line="105" pos:column="25"/></operator> <call><name pos:line="105" pos:column="26">atoi<pos:position pos:line="105" pos:column="30"/></name><argument_list pos:line="105" pos:column="30">( <argument><expr><name pos:line="105" pos:column="32">q<pos:position pos:line="105" pos:column="33"/></name></expr></argument> )<pos:position pos:line="105" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="108" pos:column="5">ldap_pvt_hex_unescape<pos:position pos:line="108" pos:column="26"/></name><argument_list pos:line="108" pos:column="26">( <argument><expr><name pos:line="108" pos:column="28">url<pos:position pos:line="108" pos:column="31"/></name></expr></argument> )<pos:position pos:line="108" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="110" pos:column="5">/* If [ip address]:port syntax, url is [ip and we skip the [ */</comment>
    <expr_stmt><expr><name><name pos:line="111" pos:column="5">ludp<pos:position pos:line="111" pos:column="9"/></name><operator pos:line="111" pos:column="9">-&gt;<pos:position pos:line="111" pos:column="14"/></operator><name pos:line="111" pos:column="11">lud_host<pos:position pos:line="111" pos:column="19"/></name></name> <operator pos:line="111" pos:column="20">=<pos:position pos:line="111" pos:column="21"/></operator> <call><name pos:line="111" pos:column="22">LDAP_STRDUP<pos:position pos:line="111" pos:column="33"/></name><argument_list pos:line="111" pos:column="33">( <argument><expr><name pos:line="111" pos:column="35">url<pos:position pos:line="111" pos:column="38"/></name> <operator pos:line="111" pos:column="39">+<pos:position pos:line="111" pos:column="40"/></operator> <operator pos:line="111" pos:column="41">(<pos:position pos:line="111" pos:column="42"/></operator> <operator pos:line="111" pos:column="43">*<pos:position pos:line="111" pos:column="44"/></operator><name pos:line="111" pos:column="44">url<pos:position pos:line="111" pos:column="47"/></name> <operator pos:line="111" pos:column="48">==<pos:position pos:line="111" pos:column="50"/></operator> <literal type="char" pos:line="111" pos:column="51">'['<pos:position pos:line="111" pos:column="54"/></literal> <operator pos:line="111" pos:column="55">)<pos:position pos:line="111" pos:column="56"/></operator></expr></argument> )<pos:position pos:line="111" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="59"/></expr_stmt>

    <if pos:line="113" pos:column="5">if<condition pos:line="113" pos:column="7">( <expr><name><name pos:line="113" pos:column="9">ludp<pos:position pos:line="113" pos:column="13"/></name><operator pos:line="113" pos:column="13">-&gt;<pos:position pos:line="113" pos:column="18"/></operator><name pos:line="113" pos:column="15">lud_host<pos:position pos:line="113" pos:column="23"/></name></name> <operator pos:line="113" pos:column="24">==<pos:position pos:line="113" pos:column="26"/></operator> <name pos:line="113" pos:column="27">NULL<pos:position pos:line="113" pos:column="31"/></name></expr> )<pos:position pos:line="113" pos:column="33"/></condition><then pos:line="113" pos:column="33"> <block pos:line="113" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="114" pos:column="9">LDAP_FREE<pos:position pos:line="114" pos:column="18"/></name><argument_list pos:line="114" pos:column="18">( <argument><expr><name pos:line="114" pos:column="20">url<pos:position pos:line="114" pos:column="23"/></name></expr></argument> )<pos:position pos:line="114" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="115" pos:column="9">apr_ldap_free_urldesc<pos:position pos:line="115" pos:column="30"/></name><argument_list pos:line="115" pos:column="30">( <argument><expr><name pos:line="115" pos:column="32">ludp<pos:position pos:line="115" pos:column="36"/></name></expr></argument> )<pos:position pos:line="115" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="39"/></expr_stmt>
        <return pos:line="116" pos:column="9">return <expr><name pos:line="116" pos:column="16">LDAP_URL_ERR_MEM<pos:position pos:line="116" pos:column="32"/></name></expr>;<pos:position pos:line="116" pos:column="33"/></return>
    }<pos:position pos:line="117" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="119" pos:column="5">/*
     * Kludge.  ldap://111.222.333.444:389??cn=abc,o=company
     *
     * On early Novell releases, search references/referrals were returned
     * in this format, i.e., the dn was kind of in the scope position,
     * but the required slash is missing. The whole thing is illegal syntax,
     * but we need to account for it. Fortunately it can't be confused with
     * anything real.
     */</comment>
    <if pos:line="128" pos:column="5">if<condition pos:line="128" pos:column="7">( <expr><operator pos:line="128" pos:column="9">(<pos:position pos:line="128" pos:column="10"/></operator><name pos:line="128" pos:column="10">p<pos:position pos:line="128" pos:column="11"/></name> <operator pos:line="128" pos:column="12">==<pos:position pos:line="128" pos:column="14"/></operator> <name pos:line="128" pos:column="15">NULL<pos:position pos:line="128" pos:column="19"/></name><operator pos:line="128" pos:column="19">)<pos:position pos:line="128" pos:column="20"/></operator> <operator pos:line="128" pos:column="21">&amp;&amp;<pos:position pos:line="128" pos:column="31"/></operator> <operator pos:line="128" pos:column="24">(<pos:position pos:line="128" pos:column="25"/></operator><name pos:line="128" pos:column="25">q<pos:position pos:line="128" pos:column="26"/></name> <operator pos:line="128" pos:column="27">!=<pos:position pos:line="128" pos:column="29"/></operator> <name pos:line="128" pos:column="30">NULL<pos:position pos:line="128" pos:column="34"/></name><operator pos:line="128" pos:column="34">)<pos:position pos:line="128" pos:column="35"/></operator> <operator pos:line="128" pos:column="36">&amp;&amp;<pos:position pos:line="128" pos:column="46"/></operator> <operator pos:line="128" pos:column="39">(<pos:position pos:line="128" pos:column="40"/></operator><operator pos:line="128" pos:column="40">(<pos:position pos:line="128" pos:column="41"/></operator><name pos:line="128" pos:column="41">q<pos:position pos:line="128" pos:column="42"/></name> <operator pos:line="128" pos:column="43">=<pos:position pos:line="128" pos:column="44"/></operator> <call><name pos:line="128" pos:column="45">strchr<pos:position pos:line="128" pos:column="51"/></name><argument_list pos:line="128" pos:column="51">( <argument><expr><name pos:line="128" pos:column="53">q<pos:position pos:line="128" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="128" pos:column="56">'?'<pos:position pos:line="128" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="60"/></argument_list></call><operator pos:line="128" pos:column="60">)<pos:position pos:line="128" pos:column="61"/></operator> <operator pos:line="128" pos:column="62">!=<pos:position pos:line="128" pos:column="64"/></operator> <name pos:line="128" pos:column="65">NULL<pos:position pos:line="128" pos:column="69"/></name><operator pos:line="128" pos:column="69">)<pos:position pos:line="128" pos:column="70"/></operator></expr>)<pos:position pos:line="128" pos:column="71"/></condition><then pos:line="128" pos:column="71"> <block pos:line="128" pos:column="72">{
        <expr_stmt><expr><name pos:line="129" pos:column="9">q<pos:position pos:line="129" pos:column="10"/></name><operator pos:line="129" pos:column="10">++<pos:position pos:line="129" pos:column="12"/></operator></expr>;<pos:position pos:line="129" pos:column="13"/></expr_stmt>
        <comment type="block" pos:line="130" pos:column="9">/* ? immediately followed by question */</comment>
        <if pos:line="131" pos:column="9">if<condition pos:line="131" pos:column="11">( <expr><operator pos:line="131" pos:column="13">*<pos:position pos:line="131" pos:column="14"/></operator><name pos:line="131" pos:column="14">q<pos:position pos:line="131" pos:column="15"/></name> <operator pos:line="131" pos:column="16">==<pos:position pos:line="131" pos:column="18"/></operator> <literal type="char" pos:line="131" pos:column="19">'?'<pos:position pos:line="131" pos:column="22"/></literal></expr>)<pos:position pos:line="131" pos:column="23"/></condition><then pos:line="131" pos:column="23"> <block pos:line="131" pos:column="24">{
            <expr_stmt><expr><name pos:line="132" pos:column="13">q<pos:position pos:line="132" pos:column="14"/></name><operator pos:line="132" pos:column="14">++<pos:position pos:line="132" pos:column="16"/></operator></expr>;<pos:position pos:line="132" pos:column="17"/></expr_stmt>
            <if pos:line="133" pos:column="13">if<condition pos:line="133" pos:column="15">( <expr><operator pos:line="133" pos:column="17">*<pos:position pos:line="133" pos:column="18"/></operator><name pos:line="133" pos:column="18">q<pos:position pos:line="133" pos:column="19"/></name> <operator pos:line="133" pos:column="20">!=<pos:position pos:line="133" pos:column="22"/></operator> <literal type="char" pos:line="133" pos:column="23">'\0'<pos:position pos:line="133" pos:column="27"/></literal></expr> )<pos:position pos:line="133" pos:column="29"/></condition><then pos:line="133" pos:column="29"> <block pos:line="133" pos:column="30">{
                <comment type="block" pos:line="134" pos:column="17">/* parse dn part */</comment>
                <expr_stmt><expr><call><name pos:line="135" pos:column="17">ldap_pvt_hex_unescape<pos:position pos:line="135" pos:column="38"/></name><argument_list pos:line="135" pos:column="38">( <argument><expr><name pos:line="135" pos:column="40">q<pos:position pos:line="135" pos:column="41"/></name></expr></argument> )<pos:position pos:line="135" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="136" pos:column="17">ludp<pos:position pos:line="136" pos:column="21"/></name><operator pos:line="136" pos:column="21">-&gt;<pos:position pos:line="136" pos:column="26"/></operator><name pos:line="136" pos:column="23">lud_dn<pos:position pos:line="136" pos:column="29"/></name></name> <operator pos:line="136" pos:column="30">=<pos:position pos:line="136" pos:column="31"/></operator> <call><name pos:line="136" pos:column="32">LDAP_STRDUP<pos:position pos:line="136" pos:column="43"/></name><argument_list pos:line="136" pos:column="43">( <argument><expr><name pos:line="136" pos:column="45">q<pos:position pos:line="136" pos:column="46"/></name></expr></argument> )<pos:position pos:line="136" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="137" pos:column="14"/></block></then> <else pos:line="137" pos:column="15">else <block pos:line="137" pos:column="20">{
                <expr_stmt><expr><name><name pos:line="138" pos:column="17">ludp<pos:position pos:line="138" pos:column="21"/></name><operator pos:line="138" pos:column="21">-&gt;<pos:position pos:line="138" pos:column="26"/></operator><name pos:line="138" pos:column="23">lud_dn<pos:position pos:line="138" pos:column="29"/></name></name> <operator pos:line="138" pos:column="30">=<pos:position pos:line="138" pos:column="31"/></operator> <call><name pos:line="138" pos:column="32">LDAP_STRDUP<pos:position pos:line="138" pos:column="43"/></name><argument_list pos:line="138" pos:column="43">( <argument><expr><literal type="string" pos:line="138" pos:column="45">""<pos:position pos:line="138" pos:column="47"/></literal></expr></argument> )<pos:position pos:line="138" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="50"/></expr_stmt>
            }<pos:position pos:line="139" pos:column="14"/></block></else></if>

            <if pos:line="141" pos:column="13">if<condition pos:line="141" pos:column="15">( <expr><name><name pos:line="141" pos:column="17">ludp<pos:position pos:line="141" pos:column="21"/></name><operator pos:line="141" pos:column="21">-&gt;<pos:position pos:line="141" pos:column="26"/></operator><name pos:line="141" pos:column="23">lud_dn<pos:position pos:line="141" pos:column="29"/></name></name> <operator pos:line="141" pos:column="30">==<pos:position pos:line="141" pos:column="32"/></operator> <name pos:line="141" pos:column="33">NULL<pos:position pos:line="141" pos:column="37"/></name></expr> )<pos:position pos:line="141" pos:column="39"/></condition><then pos:line="141" pos:column="39"> <block pos:line="141" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="142" pos:column="17">LDAP_FREE<pos:position pos:line="142" pos:column="26"/></name><argument_list pos:line="142" pos:column="26">( <argument><expr><name pos:line="142" pos:column="28">url<pos:position pos:line="142" pos:column="31"/></name></expr></argument> )<pos:position pos:line="142" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="143" pos:column="17">apr_ldap_free_urldesc<pos:position pos:line="143" pos:column="38"/></name><argument_list pos:line="143" pos:column="38">( <argument><expr><name pos:line="143" pos:column="40">ludp<pos:position pos:line="143" pos:column="44"/></name></expr></argument> )<pos:position pos:line="143" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="47"/></expr_stmt>
                <return pos:line="144" pos:column="17">return <expr><name pos:line="144" pos:column="24">LDAP_URL_ERR_MEM<pos:position pos:line="144" pos:column="40"/></name></expr>;<pos:position pos:line="144" pos:column="41"/></return>
            }<pos:position pos:line="145" pos:column="14"/></block></then></if>
        }<pos:position pos:line="146" pos:column="10"/></block></then></if>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if>

    <if pos:line="149" pos:column="5">if<condition pos:line="149" pos:column="7">( <expr><name pos:line="149" pos:column="9">p<pos:position pos:line="149" pos:column="10"/></name> <operator pos:line="149" pos:column="11">==<pos:position pos:line="149" pos:column="13"/></operator> <name pos:line="149" pos:column="14">NULL<pos:position pos:line="149" pos:column="18"/></name></expr> )<pos:position pos:line="149" pos:column="20"/></condition><then pos:line="149" pos:column="20"> <block pos:line="149" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="150" pos:column="9">LDAP_FREE<pos:position pos:line="150" pos:column="18"/></name><argument_list pos:line="150" pos:column="18">( <argument><expr><name pos:line="150" pos:column="20">url<pos:position pos:line="150" pos:column="23"/></name></expr></argument> )<pos:position pos:line="150" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="151" pos:column="9">*<pos:position pos:line="151" pos:column="10"/></operator><name pos:line="151" pos:column="10">ludpp<pos:position pos:line="151" pos:column="15"/></name> <operator pos:line="151" pos:column="16">=<pos:position pos:line="151" pos:column="17"/></operator> <name pos:line="151" pos:column="18">ludp<pos:position pos:line="151" pos:column="22"/></name></expr>;<pos:position pos:line="151" pos:column="23"/></expr_stmt>
        <return pos:line="152" pos:column="9">return <expr><name pos:line="152" pos:column="16">LDAP_URL_SUCCESS<pos:position pos:line="152" pos:column="32"/></name></expr>;<pos:position pos:line="152" pos:column="33"/></return>
    }<pos:position pos:line="153" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="155" pos:column="5">/* scan forward for '?' that may marks end of dn */</comment>
    <expr_stmt><expr><name pos:line="156" pos:column="5">q<pos:position pos:line="156" pos:column="6"/></name> <operator pos:line="156" pos:column="7">=<pos:position pos:line="156" pos:column="8"/></operator> <call><name pos:line="156" pos:column="9">strchr<pos:position pos:line="156" pos:column="15"/></name><argument_list pos:line="156" pos:column="15">( <argument><expr><name pos:line="156" pos:column="17">p<pos:position pos:line="156" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="156" pos:column="20">'?'<pos:position pos:line="156" pos:column="23"/></literal></expr></argument> )<pos:position pos:line="156" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="26"/></expr_stmt>

    <if pos:line="158" pos:column="5">if<condition pos:line="158" pos:column="7">( <expr><name pos:line="158" pos:column="9">q<pos:position pos:line="158" pos:column="10"/></name> <operator pos:line="158" pos:column="11">!=<pos:position pos:line="158" pos:column="13"/></operator> <name pos:line="158" pos:column="14">NULL<pos:position pos:line="158" pos:column="18"/></name></expr> )<pos:position pos:line="158" pos:column="20"/></condition><then pos:line="158" pos:column="20"> <block pos:line="158" pos:column="21">{
        <comment type="block" pos:line="159" pos:column="9">/* terminate dn part */</comment>
        <expr_stmt><expr><operator pos:line="160" pos:column="9">*<pos:position pos:line="160" pos:column="10"/></operator><name pos:line="160" pos:column="10">q<pos:position pos:line="160" pos:column="11"/></name><operator pos:line="160" pos:column="11">++<pos:position pos:line="160" pos:column="13"/></operator> <operator pos:line="160" pos:column="14">=<pos:position pos:line="160" pos:column="15"/></operator> <literal type="char" pos:line="160" pos:column="16">'\0'<pos:position pos:line="160" pos:column="20"/></literal></expr>;<pos:position pos:line="160" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="161" pos:column="6"/></block></then></if>

    <if pos:line="163" pos:column="5">if<condition pos:line="163" pos:column="7">( <expr><operator pos:line="163" pos:column="9">*<pos:position pos:line="163" pos:column="10"/></operator><name pos:line="163" pos:column="10">p<pos:position pos:line="163" pos:column="11"/></name> <operator pos:line="163" pos:column="12">!=<pos:position pos:line="163" pos:column="14"/></operator> <literal type="char" pos:line="163" pos:column="15">'\0'<pos:position pos:line="163" pos:column="19"/></literal></expr> )<pos:position pos:line="163" pos:column="21"/></condition><then pos:line="163" pos:column="21"> <block pos:line="163" pos:column="22">{
        <comment type="block" pos:line="164" pos:column="9">/* parse dn part */</comment>
        <expr_stmt><expr><call><name pos:line="165" pos:column="9">ldap_pvt_hex_unescape<pos:position pos:line="165" pos:column="30"/></name><argument_list pos:line="165" pos:column="30">( <argument><expr><name pos:line="165" pos:column="32">p<pos:position pos:line="165" pos:column="33"/></name></expr></argument> )<pos:position pos:line="165" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="166" pos:column="9">ludp<pos:position pos:line="166" pos:column="13"/></name><operator pos:line="166" pos:column="13">-&gt;<pos:position pos:line="166" pos:column="18"/></operator><name pos:line="166" pos:column="15">lud_dn<pos:position pos:line="166" pos:column="21"/></name></name> <operator pos:line="166" pos:column="22">=<pos:position pos:line="166" pos:column="23"/></operator> <call><name pos:line="166" pos:column="24">LDAP_STRDUP<pos:position pos:line="166" pos:column="35"/></name><argument_list pos:line="166" pos:column="35">( <argument><expr><name pos:line="166" pos:column="37">p<pos:position pos:line="166" pos:column="38"/></name></expr></argument> )<pos:position pos:line="166" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="167" pos:column="6"/></block></then> <else pos:line="167" pos:column="7">else <block pos:line="167" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="168" pos:column="9">ludp<pos:position pos:line="168" pos:column="13"/></name><operator pos:line="168" pos:column="13">-&gt;<pos:position pos:line="168" pos:column="18"/></operator><name pos:line="168" pos:column="15">lud_dn<pos:position pos:line="168" pos:column="21"/></name></name> <operator pos:line="168" pos:column="22">=<pos:position pos:line="168" pos:column="23"/></operator> <call><name pos:line="168" pos:column="24">LDAP_STRDUP<pos:position pos:line="168" pos:column="35"/></name><argument_list pos:line="168" pos:column="35">( <argument><expr><literal type="string" pos:line="168" pos:column="37">""<pos:position pos:line="168" pos:column="39"/></literal></expr></argument> )<pos:position pos:line="168" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="169" pos:column="6"/></block></else></if>

    <if pos:line="171" pos:column="5">if<condition pos:line="171" pos:column="7">( <expr><name><name pos:line="171" pos:column="9">ludp<pos:position pos:line="171" pos:column="13"/></name><operator pos:line="171" pos:column="13">-&gt;<pos:position pos:line="171" pos:column="18"/></operator><name pos:line="171" pos:column="15">lud_dn<pos:position pos:line="171" pos:column="21"/></name></name> <operator pos:line="171" pos:column="22">==<pos:position pos:line="171" pos:column="24"/></operator> <name pos:line="171" pos:column="25">NULL<pos:position pos:line="171" pos:column="29"/></name></expr> )<pos:position pos:line="171" pos:column="31"/></condition><then pos:line="171" pos:column="31"> <block pos:line="171" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="172" pos:column="9">LDAP_FREE<pos:position pos:line="172" pos:column="18"/></name><argument_list pos:line="172" pos:column="18">( <argument><expr><name pos:line="172" pos:column="20">url<pos:position pos:line="172" pos:column="23"/></name></expr></argument> )<pos:position pos:line="172" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="173" pos:column="9">apr_ldap_free_urldesc<pos:position pos:line="173" pos:column="30"/></name><argument_list pos:line="173" pos:column="30">( <argument><expr><name pos:line="173" pos:column="32">ludp<pos:position pos:line="173" pos:column="36"/></name></expr></argument> )<pos:position pos:line="173" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="39"/></expr_stmt>
        <return pos:line="174" pos:column="9">return <expr><name pos:line="174" pos:column="16">LDAP_URL_ERR_MEM<pos:position pos:line="174" pos:column="32"/></name></expr>;<pos:position pos:line="174" pos:column="33"/></return>
    }<pos:position pos:line="175" pos:column="6"/></block></then></if>

    <if pos:line="177" pos:column="5">if<condition pos:line="177" pos:column="7">( <expr><name pos:line="177" pos:column="9">q<pos:position pos:line="177" pos:column="10"/></name> <operator pos:line="177" pos:column="11">==<pos:position pos:line="177" pos:column="13"/></operator> <name pos:line="177" pos:column="14">NULL<pos:position pos:line="177" pos:column="18"/></name></expr> )<pos:position pos:line="177" pos:column="20"/></condition><then pos:line="177" pos:column="20"> <block pos:line="177" pos:column="21">{
        <comment type="block" pos:line="178" pos:column="9">/* no more */</comment>
        <expr_stmt><expr><call><name pos:line="179" pos:column="9">LDAP_FREE<pos:position pos:line="179" pos:column="18"/></name><argument_list pos:line="179" pos:column="18">( <argument><expr><name pos:line="179" pos:column="20">url<pos:position pos:line="179" pos:column="23"/></name></expr></argument> )<pos:position pos:line="179" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="180" pos:column="9">*<pos:position pos:line="180" pos:column="10"/></operator><name pos:line="180" pos:column="10">ludpp<pos:position pos:line="180" pos:column="15"/></name> <operator pos:line="180" pos:column="16">=<pos:position pos:line="180" pos:column="17"/></operator> <name pos:line="180" pos:column="18">ludp<pos:position pos:line="180" pos:column="22"/></name></expr>;<pos:position pos:line="180" pos:column="23"/></expr_stmt>
        <return pos:line="181" pos:column="9">return <expr><name pos:line="181" pos:column="16">LDAP_URL_SUCCESS<pos:position pos:line="181" pos:column="32"/></name></expr>;<pos:position pos:line="181" pos:column="33"/></return>
    }<pos:position pos:line="182" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="184" pos:column="5">/* scan forward for '?' that may marks end of attributes */</comment>
    <expr_stmt><expr><name pos:line="185" pos:column="5">p<pos:position pos:line="185" pos:column="6"/></name> <operator pos:line="185" pos:column="7">=<pos:position pos:line="185" pos:column="8"/></operator> <name pos:line="185" pos:column="9">q<pos:position pos:line="185" pos:column="10"/></name></expr>;<pos:position pos:line="185" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><name pos:line="186" pos:column="5">q<pos:position pos:line="186" pos:column="6"/></name> <operator pos:line="186" pos:column="7">=<pos:position pos:line="186" pos:column="8"/></operator> <call><name pos:line="186" pos:column="9">strchr<pos:position pos:line="186" pos:column="15"/></name><argument_list pos:line="186" pos:column="15">( <argument><expr><name pos:line="186" pos:column="17">p<pos:position pos:line="186" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="186" pos:column="20">'?'<pos:position pos:line="186" pos:column="23"/></literal></expr></argument> )<pos:position pos:line="186" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="26"/></expr_stmt>

    <if pos:line="188" pos:column="5">if<condition pos:line="188" pos:column="7">( <expr><name pos:line="188" pos:column="9">q<pos:position pos:line="188" pos:column="10"/></name> <operator pos:line="188" pos:column="11">!=<pos:position pos:line="188" pos:column="13"/></operator> <name pos:line="188" pos:column="14">NULL<pos:position pos:line="188" pos:column="18"/></name></expr> )<pos:position pos:line="188" pos:column="20"/></condition><then pos:line="188" pos:column="20"> <block pos:line="188" pos:column="21">{
        <comment type="block" pos:line="189" pos:column="9">/* terminate attributes part */</comment>
        <expr_stmt><expr><operator pos:line="190" pos:column="9">*<pos:position pos:line="190" pos:column="10"/></operator><name pos:line="190" pos:column="10">q<pos:position pos:line="190" pos:column="11"/></name><operator pos:line="190" pos:column="11">++<pos:position pos:line="190" pos:column="13"/></operator> <operator pos:line="190" pos:column="14">=<pos:position pos:line="190" pos:column="15"/></operator> <literal type="char" pos:line="190" pos:column="16">'\0'<pos:position pos:line="190" pos:column="20"/></literal></expr>;<pos:position pos:line="190" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="191" pos:column="6"/></block></then></if>

    <if pos:line="193" pos:column="5">if<condition pos:line="193" pos:column="7">( <expr><operator pos:line="193" pos:column="9">*<pos:position pos:line="193" pos:column="10"/></operator><name pos:line="193" pos:column="10">p<pos:position pos:line="193" pos:column="11"/></name> <operator pos:line="193" pos:column="12">!=<pos:position pos:line="193" pos:column="14"/></operator> <literal type="char" pos:line="193" pos:column="15">'\0'<pos:position pos:line="193" pos:column="19"/></literal></expr> )<pos:position pos:line="193" pos:column="21"/></condition><then pos:line="193" pos:column="21"> <block pos:line="193" pos:column="22">{
        <comment type="block" pos:line="194" pos:column="9">/* parse attributes */</comment>
        <expr_stmt><expr><call><name pos:line="195" pos:column="9">ldap_pvt_hex_unescape<pos:position pos:line="195" pos:column="30"/></name><argument_list pos:line="195" pos:column="30">( <argument><expr><name pos:line="195" pos:column="32">p<pos:position pos:line="195" pos:column="33"/></name></expr></argument> )<pos:position pos:line="195" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="196" pos:column="9">ludp<pos:position pos:line="196" pos:column="13"/></name><operator pos:line="196" pos:column="13">-&gt;<pos:position pos:line="196" pos:column="18"/></operator><name pos:line="196" pos:column="15">lud_attrs<pos:position pos:line="196" pos:column="24"/></name></name> <operator pos:line="196" pos:column="25">=<pos:position pos:line="196" pos:column="26"/></operator> <call><name pos:line="196" pos:column="27">ldap_str2charray<pos:position pos:line="196" pos:column="43"/></name><argument_list pos:line="196" pos:column="43">( <argument><expr><name pos:line="196" pos:column="45">p<pos:position pos:line="196" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="48">","<pos:position pos:line="196" pos:column="51"/></literal></expr></argument> )<pos:position pos:line="196" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="54"/></expr_stmt>

        <if pos:line="198" pos:column="9">if<condition pos:line="198" pos:column="11">( <expr><name><name pos:line="198" pos:column="13">ludp<pos:position pos:line="198" pos:column="17"/></name><operator pos:line="198" pos:column="17">-&gt;<pos:position pos:line="198" pos:column="22"/></operator><name pos:line="198" pos:column="19">lud_attrs<pos:position pos:line="198" pos:column="28"/></name></name> <operator pos:line="198" pos:column="29">==<pos:position pos:line="198" pos:column="31"/></operator> <name pos:line="198" pos:column="32">NULL<pos:position pos:line="198" pos:column="36"/></name></expr> )<pos:position pos:line="198" pos:column="38"/></condition><then pos:line="198" pos:column="38"> <block pos:line="198" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="199" pos:column="13">LDAP_FREE<pos:position pos:line="199" pos:column="22"/></name><argument_list pos:line="199" pos:column="22">( <argument><expr><name pos:line="199" pos:column="24">url<pos:position pos:line="199" pos:column="27"/></name></expr></argument> )<pos:position pos:line="199" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="200" pos:column="13">apr_ldap_free_urldesc<pos:position pos:line="200" pos:column="34"/></name><argument_list pos:line="200" pos:column="34">( <argument><expr><name pos:line="200" pos:column="36">ludp<pos:position pos:line="200" pos:column="40"/></name></expr></argument> )<pos:position pos:line="200" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="43"/></expr_stmt>
            <return pos:line="201" pos:column="13">return <expr><name pos:line="201" pos:column="20">LDAP_URL_ERR_BADATTRS<pos:position pos:line="201" pos:column="41"/></name></expr>;<pos:position pos:line="201" pos:column="42"/></return>
        }<pos:position pos:line="202" pos:column="10"/></block></then></if>
    }<pos:position pos:line="203" pos:column="6"/></block></then></if>

    <if pos:line="205" pos:column="5">if <condition pos:line="205" pos:column="8">( <expr><name pos:line="205" pos:column="10">q<pos:position pos:line="205" pos:column="11"/></name> <operator pos:line="205" pos:column="12">==<pos:position pos:line="205" pos:column="14"/></operator> <name pos:line="205" pos:column="15">NULL<pos:position pos:line="205" pos:column="19"/></name></expr> )<pos:position pos:line="205" pos:column="21"/></condition><then pos:line="205" pos:column="21"> <block pos:line="205" pos:column="22">{
        <comment type="block" pos:line="206" pos:column="9">/* no more */</comment>
        <expr_stmt><expr><call><name pos:line="207" pos:column="9">LDAP_FREE<pos:position pos:line="207" pos:column="18"/></name><argument_list pos:line="207" pos:column="18">( <argument><expr><name pos:line="207" pos:column="20">url<pos:position pos:line="207" pos:column="23"/></name></expr></argument> )<pos:position pos:line="207" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="208" pos:column="9">*<pos:position pos:line="208" pos:column="10"/></operator><name pos:line="208" pos:column="10">ludpp<pos:position pos:line="208" pos:column="15"/></name> <operator pos:line="208" pos:column="16">=<pos:position pos:line="208" pos:column="17"/></operator> <name pos:line="208" pos:column="18">ludp<pos:position pos:line="208" pos:column="22"/></name></expr>;<pos:position pos:line="208" pos:column="23"/></expr_stmt>
        <return pos:line="209" pos:column="9">return <expr><name pos:line="209" pos:column="16">LDAP_URL_SUCCESS<pos:position pos:line="209" pos:column="32"/></name></expr>;<pos:position pos:line="209" pos:column="33"/></return>
    }<pos:position pos:line="210" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="212" pos:column="5">/* scan forward for '?' that may marks end of scope */</comment>
    <expr_stmt><expr><name pos:line="213" pos:column="5">p<pos:position pos:line="213" pos:column="6"/></name> <operator pos:line="213" pos:column="7">=<pos:position pos:line="213" pos:column="8"/></operator> <name pos:line="213" pos:column="9">q<pos:position pos:line="213" pos:column="10"/></name></expr>;<pos:position pos:line="213" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><name pos:line="214" pos:column="5">q<pos:position pos:line="214" pos:column="6"/></name> <operator pos:line="214" pos:column="7">=<pos:position pos:line="214" pos:column="8"/></operator> <call><name pos:line="214" pos:column="9">strchr<pos:position pos:line="214" pos:column="15"/></name><argument_list pos:line="214" pos:column="15">( <argument><expr><name pos:line="214" pos:column="17">p<pos:position pos:line="214" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="214" pos:column="20">'?'<pos:position pos:line="214" pos:column="23"/></literal></expr></argument> )<pos:position pos:line="214" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="26"/></expr_stmt>

    <if pos:line="216" pos:column="5">if<condition pos:line="216" pos:column="7">( <expr><name pos:line="216" pos:column="9">q<pos:position pos:line="216" pos:column="10"/></name> <operator pos:line="216" pos:column="11">!=<pos:position pos:line="216" pos:column="13"/></operator> <name pos:line="216" pos:column="14">NULL<pos:position pos:line="216" pos:column="18"/></name></expr> )<pos:position pos:line="216" pos:column="20"/></condition><then pos:line="216" pos:column="20"> <block pos:line="216" pos:column="21">{
        <comment type="block" pos:line="217" pos:column="9">/* terminate the scope part */</comment>
        <expr_stmt><expr><operator pos:line="218" pos:column="9">*<pos:position pos:line="218" pos:column="10"/></operator><name pos:line="218" pos:column="10">q<pos:position pos:line="218" pos:column="11"/></name><operator pos:line="218" pos:column="11">++<pos:position pos:line="218" pos:column="13"/></operator> <operator pos:line="218" pos:column="14">=<pos:position pos:line="218" pos:column="15"/></operator> <literal type="char" pos:line="218" pos:column="16">'\0'<pos:position pos:line="218" pos:column="20"/></literal></expr>;<pos:position pos:line="218" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="219" pos:column="6"/></block></then></if>

    <if pos:line="221" pos:column="5">if<condition pos:line="221" pos:column="7">( <expr><operator pos:line="221" pos:column="9">*<pos:position pos:line="221" pos:column="10"/></operator><name pos:line="221" pos:column="10">p<pos:position pos:line="221" pos:column="11"/></name> <operator pos:line="221" pos:column="12">!=<pos:position pos:line="221" pos:column="14"/></operator> <literal type="char" pos:line="221" pos:column="15">'\0'<pos:position pos:line="221" pos:column="19"/></literal></expr> )<pos:position pos:line="221" pos:column="21"/></condition><then pos:line="221" pos:column="21"> <block pos:line="221" pos:column="22">{
        <comment type="block" pos:line="222" pos:column="9">/* parse the scope */</comment>
        <expr_stmt><expr><call><name pos:line="223" pos:column="9">ldap_pvt_hex_unescape<pos:position pos:line="223" pos:column="30"/></name><argument_list pos:line="223" pos:column="30">( <argument><expr><name pos:line="223" pos:column="32">p<pos:position pos:line="223" pos:column="33"/></name></expr></argument> )<pos:position pos:line="223" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="224" pos:column="9">ludp<pos:position pos:line="224" pos:column="13"/></name><operator pos:line="224" pos:column="13">-&gt;<pos:position pos:line="224" pos:column="18"/></operator><name pos:line="224" pos:column="15">lud_scope<pos:position pos:line="224" pos:column="24"/></name></name> <operator pos:line="224" pos:column="25">=<pos:position pos:line="224" pos:column="26"/></operator> <call><name pos:line="224" pos:column="27">str2scope<pos:position pos:line="224" pos:column="36"/></name><argument_list pos:line="224" pos:column="36">( <argument><expr><name pos:line="224" pos:column="38">p<pos:position pos:line="224" pos:column="39"/></name></expr></argument> )<pos:position pos:line="224" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="42"/></expr_stmt>

        <if pos:line="226" pos:column="9">if<condition pos:line="226" pos:column="11">( <expr><name><name pos:line="226" pos:column="13">ludp<pos:position pos:line="226" pos:column="17"/></name><operator pos:line="226" pos:column="17">-&gt;<pos:position pos:line="226" pos:column="22"/></operator><name pos:line="226" pos:column="19">lud_scope<pos:position pos:line="226" pos:column="28"/></name></name> <operator pos:line="226" pos:column="29">==<pos:position pos:line="226" pos:column="31"/></operator> <operator pos:line="226" pos:column="32">-<pos:position pos:line="226" pos:column="33"/></operator><literal type="number" pos:line="226" pos:column="33">1<pos:position pos:line="226" pos:column="34"/></literal></expr> )<pos:position pos:line="226" pos:column="36"/></condition><then pos:line="226" pos:column="36"> <block pos:line="226" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="227" pos:column="13">LDAP_FREE<pos:position pos:line="227" pos:column="22"/></name><argument_list pos:line="227" pos:column="22">( <argument><expr><name pos:line="227" pos:column="24">url<pos:position pos:line="227" pos:column="27"/></name></expr></argument> )<pos:position pos:line="227" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="228" pos:column="13">apr_ldap_free_urldesc<pos:position pos:line="228" pos:column="34"/></name><argument_list pos:line="228" pos:column="34">( <argument><expr><name pos:line="228" pos:column="36">ludp<pos:position pos:line="228" pos:column="40"/></name></expr></argument> )<pos:position pos:line="228" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="43"/></expr_stmt>
            <return pos:line="229" pos:column="13">return <expr><name pos:line="229" pos:column="20">LDAP_URL_ERR_BADSCOPE<pos:position pos:line="229" pos:column="41"/></name></expr>;<pos:position pos:line="229" pos:column="42"/></return>
        }<pos:position pos:line="230" pos:column="10"/></block></then></if>
    }<pos:position pos:line="231" pos:column="6"/></block></then></if>

    <if pos:line="233" pos:column="5">if <condition pos:line="233" pos:column="8">( <expr><name pos:line="233" pos:column="10">q<pos:position pos:line="233" pos:column="11"/></name> <operator pos:line="233" pos:column="12">==<pos:position pos:line="233" pos:column="14"/></operator> <name pos:line="233" pos:column="15">NULL<pos:position pos:line="233" pos:column="19"/></name></expr> )<pos:position pos:line="233" pos:column="21"/></condition><then pos:line="233" pos:column="21"> <block pos:line="233" pos:column="22">{
        <comment type="block" pos:line="234" pos:column="9">/* no more */</comment>
        <expr_stmt><expr><call><name pos:line="235" pos:column="9">LDAP_FREE<pos:position pos:line="235" pos:column="18"/></name><argument_list pos:line="235" pos:column="18">( <argument><expr><name pos:line="235" pos:column="20">url<pos:position pos:line="235" pos:column="23"/></name></expr></argument> )<pos:position pos:line="235" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="236" pos:column="9">*<pos:position pos:line="236" pos:column="10"/></operator><name pos:line="236" pos:column="10">ludpp<pos:position pos:line="236" pos:column="15"/></name> <operator pos:line="236" pos:column="16">=<pos:position pos:line="236" pos:column="17"/></operator> <name pos:line="236" pos:column="18">ludp<pos:position pos:line="236" pos:column="22"/></name></expr>;<pos:position pos:line="236" pos:column="23"/></expr_stmt>
        <return pos:line="237" pos:column="9">return <expr><name pos:line="237" pos:column="16">LDAP_URL_SUCCESS<pos:position pos:line="237" pos:column="32"/></name></expr>;<pos:position pos:line="237" pos:column="33"/></return>
    }<pos:position pos:line="238" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="240" pos:column="5">/* scan forward for '?' that may marks end of filter */</comment>
    <expr_stmt><expr><name pos:line="241" pos:column="5">p<pos:position pos:line="241" pos:column="6"/></name> <operator pos:line="241" pos:column="7">=<pos:position pos:line="241" pos:column="8"/></operator> <name pos:line="241" pos:column="9">q<pos:position pos:line="241" pos:column="10"/></name></expr>;<pos:position pos:line="241" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><name pos:line="242" pos:column="5">q<pos:position pos:line="242" pos:column="6"/></name> <operator pos:line="242" pos:column="7">=<pos:position pos:line="242" pos:column="8"/></operator> <call><name pos:line="242" pos:column="9">strchr<pos:position pos:line="242" pos:column="15"/></name><argument_list pos:line="242" pos:column="15">( <argument><expr><name pos:line="242" pos:column="17">p<pos:position pos:line="242" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="242" pos:column="20">'?'<pos:position pos:line="242" pos:column="23"/></literal></expr></argument> )<pos:position pos:line="242" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="26"/></expr_stmt>

    <if pos:line="244" pos:column="5">if<condition pos:line="244" pos:column="7">( <expr><name pos:line="244" pos:column="9">q<pos:position pos:line="244" pos:column="10"/></name> <operator pos:line="244" pos:column="11">!=<pos:position pos:line="244" pos:column="13"/></operator> <name pos:line="244" pos:column="14">NULL<pos:position pos:line="244" pos:column="18"/></name></expr> )<pos:position pos:line="244" pos:column="20"/></condition><then pos:line="244" pos:column="20"> <block pos:line="244" pos:column="21">{
        <comment type="block" pos:line="245" pos:column="9">/* terminate the filter part */</comment>
        <expr_stmt><expr><operator pos:line="246" pos:column="9">*<pos:position pos:line="246" pos:column="10"/></operator><name pos:line="246" pos:column="10">q<pos:position pos:line="246" pos:column="11"/></name><operator pos:line="246" pos:column="11">++<pos:position pos:line="246" pos:column="13"/></operator> <operator pos:line="246" pos:column="14">=<pos:position pos:line="246" pos:column="15"/></operator> <literal type="char" pos:line="246" pos:column="16">'\0'<pos:position pos:line="246" pos:column="20"/></literal></expr>;<pos:position pos:line="246" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="247" pos:column="6"/></block></then></if>

    <if pos:line="249" pos:column="5">if<condition pos:line="249" pos:column="7">( <expr><operator pos:line="249" pos:column="9">*<pos:position pos:line="249" pos:column="10"/></operator><name pos:line="249" pos:column="10">p<pos:position pos:line="249" pos:column="11"/></name> <operator pos:line="249" pos:column="12">!=<pos:position pos:line="249" pos:column="14"/></operator> <literal type="char" pos:line="249" pos:column="15">'\0'<pos:position pos:line="249" pos:column="19"/></literal></expr> )<pos:position pos:line="249" pos:column="21"/></condition><then pos:line="249" pos:column="21"> <block pos:line="249" pos:column="22">{
        <comment type="block" pos:line="250" pos:column="9">/* parse the filter */</comment>
        <expr_stmt><expr><call><name pos:line="251" pos:column="9">ldap_pvt_hex_unescape<pos:position pos:line="251" pos:column="30"/></name><argument_list pos:line="251" pos:column="30">( <argument><expr><name pos:line="251" pos:column="32">p<pos:position pos:line="251" pos:column="33"/></name></expr></argument> )<pos:position pos:line="251" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="36"/></expr_stmt>

        <if pos:line="253" pos:column="9">if<condition pos:line="253" pos:column="11">( <expr><operator pos:line="253" pos:column="13">!<pos:position pos:line="253" pos:column="14"/></operator> <operator pos:line="253" pos:column="15">*<pos:position pos:line="253" pos:column="16"/></operator><name pos:line="253" pos:column="16">p<pos:position pos:line="253" pos:column="17"/></name></expr> )<pos:position pos:line="253" pos:column="19"/></condition><then pos:line="253" pos:column="19"> <block pos:line="253" pos:column="20">{
            <comment type="block" pos:line="254" pos:column="13">/* missing filter */</comment>
            <expr_stmt><expr><call><name pos:line="255" pos:column="13">LDAP_FREE<pos:position pos:line="255" pos:column="22"/></name><argument_list pos:line="255" pos:column="22">( <argument><expr><name pos:line="255" pos:column="24">url<pos:position pos:line="255" pos:column="27"/></name></expr></argument> )<pos:position pos:line="255" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="256" pos:column="13">apr_ldap_free_urldesc<pos:position pos:line="256" pos:column="34"/></name><argument_list pos:line="256" pos:column="34">( <argument><expr><name pos:line="256" pos:column="36">ludp<pos:position pos:line="256" pos:column="40"/></name></expr></argument> )<pos:position pos:line="256" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="43"/></expr_stmt>
            <return pos:line="257" pos:column="13">return <expr><name pos:line="257" pos:column="20">LDAP_URL_ERR_BADFILTER<pos:position pos:line="257" pos:column="42"/></name></expr>;<pos:position pos:line="257" pos:column="43"/></return>
        }<pos:position pos:line="258" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="260" pos:column="9">LDAP_FREE<pos:position pos:line="260" pos:column="18"/></name><argument_list pos:line="260" pos:column="18">( <argument><expr><name><name pos:line="260" pos:column="20">ludp<pos:position pos:line="260" pos:column="24"/></name><operator pos:line="260" pos:column="24">-&gt;<pos:position pos:line="260" pos:column="29"/></operator><name pos:line="260" pos:column="26">lud_filter<pos:position pos:line="260" pos:column="36"/></name></name></expr></argument> )<pos:position pos:line="260" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="261" pos:column="9">ludp<pos:position pos:line="261" pos:column="13"/></name><operator pos:line="261" pos:column="13">-&gt;<pos:position pos:line="261" pos:column="18"/></operator><name pos:line="261" pos:column="15">lud_filter<pos:position pos:line="261" pos:column="25"/></name></name> <operator pos:line="261" pos:column="26">=<pos:position pos:line="261" pos:column="27"/></operator> <call><name pos:line="261" pos:column="28">LDAP_STRDUP<pos:position pos:line="261" pos:column="39"/></name><argument_list pos:line="261" pos:column="39">( <argument><expr><name pos:line="261" pos:column="41">p<pos:position pos:line="261" pos:column="42"/></name></expr></argument> )<pos:position pos:line="261" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="45"/></expr_stmt>

        <if pos:line="263" pos:column="9">if<condition pos:line="263" pos:column="11">( <expr><name><name pos:line="263" pos:column="13">ludp<pos:position pos:line="263" pos:column="17"/></name><operator pos:line="263" pos:column="17">-&gt;<pos:position pos:line="263" pos:column="22"/></operator><name pos:line="263" pos:column="19">lud_filter<pos:position pos:line="263" pos:column="29"/></name></name> <operator pos:line="263" pos:column="30">==<pos:position pos:line="263" pos:column="32"/></operator> <name pos:line="263" pos:column="33">NULL<pos:position pos:line="263" pos:column="37"/></name></expr> )<pos:position pos:line="263" pos:column="39"/></condition><then pos:line="263" pos:column="39"> <block pos:line="263" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="264" pos:column="13">LDAP_FREE<pos:position pos:line="264" pos:column="22"/></name><argument_list pos:line="264" pos:column="22">( <argument><expr><name pos:line="264" pos:column="24">url<pos:position pos:line="264" pos:column="27"/></name></expr></argument> )<pos:position pos:line="264" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="265" pos:column="13">apr_ldap_free_urldesc<pos:position pos:line="265" pos:column="34"/></name><argument_list pos:line="265" pos:column="34">( <argument><expr><name pos:line="265" pos:column="36">ludp<pos:position pos:line="265" pos:column="40"/></name></expr></argument> )<pos:position pos:line="265" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="43"/></expr_stmt>
            <return pos:line="266" pos:column="13">return <expr><name pos:line="266" pos:column="20">LDAP_URL_ERR_MEM<pos:position pos:line="266" pos:column="36"/></name></expr>;<pos:position pos:line="266" pos:column="37"/></return>
        }<pos:position pos:line="267" pos:column="10"/></block></then></if>
    }<pos:position pos:line="268" pos:column="6"/></block></then></if>

    <if pos:line="270" pos:column="5">if <condition pos:line="270" pos:column="8">( <expr><name pos:line="270" pos:column="10">q<pos:position pos:line="270" pos:column="11"/></name> <operator pos:line="270" pos:column="12">==<pos:position pos:line="270" pos:column="14"/></operator> <name pos:line="270" pos:column="15">NULL<pos:position pos:line="270" pos:column="19"/></name></expr> )<pos:position pos:line="270" pos:column="21"/></condition><then pos:line="270" pos:column="21"> <block pos:line="270" pos:column="22">{
        <comment type="block" pos:line="271" pos:column="9">/* no more */</comment>
        <expr_stmt><expr><call><name pos:line="272" pos:column="9">LDAP_FREE<pos:position pos:line="272" pos:column="18"/></name><argument_list pos:line="272" pos:column="18">( <argument><expr><name pos:line="272" pos:column="20">url<pos:position pos:line="272" pos:column="23"/></name></expr></argument> )<pos:position pos:line="272" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="273" pos:column="9">*<pos:position pos:line="273" pos:column="10"/></operator><name pos:line="273" pos:column="10">ludpp<pos:position pos:line="273" pos:column="15"/></name> <operator pos:line="273" pos:column="16">=<pos:position pos:line="273" pos:column="17"/></operator> <name pos:line="273" pos:column="18">ludp<pos:position pos:line="273" pos:column="22"/></name></expr>;<pos:position pos:line="273" pos:column="23"/></expr_stmt>
        <return pos:line="274" pos:column="9">return <expr><name pos:line="274" pos:column="16">LDAP_URL_SUCCESS<pos:position pos:line="274" pos:column="32"/></name></expr>;<pos:position pos:line="274" pos:column="33"/></return>
    }<pos:position pos:line="275" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="277" pos:column="5">/* scan forward for '?' that may marks end of extensions */</comment>
    <expr_stmt><expr><name pos:line="278" pos:column="5">p<pos:position pos:line="278" pos:column="6"/></name> <operator pos:line="278" pos:column="7">=<pos:position pos:line="278" pos:column="8"/></operator> <name pos:line="278" pos:column="9">q<pos:position pos:line="278" pos:column="10"/></name></expr>;<pos:position pos:line="278" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><name pos:line="279" pos:column="5">q<pos:position pos:line="279" pos:column="6"/></name> <operator pos:line="279" pos:column="7">=<pos:position pos:line="279" pos:column="8"/></operator> <call><name pos:line="279" pos:column="9">strchr<pos:position pos:line="279" pos:column="15"/></name><argument_list pos:line="279" pos:column="15">( <argument><expr><name pos:line="279" pos:column="17">p<pos:position pos:line="279" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="279" pos:column="20">'?'<pos:position pos:line="279" pos:column="23"/></literal></expr></argument> )<pos:position pos:line="279" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="26"/></expr_stmt>

    <if pos:line="281" pos:column="5">if<condition pos:line="281" pos:column="7">( <expr><name pos:line="281" pos:column="9">q<pos:position pos:line="281" pos:column="10"/></name> <operator pos:line="281" pos:column="11">!=<pos:position pos:line="281" pos:column="13"/></operator> <name pos:line="281" pos:column="14">NULL<pos:position pos:line="281" pos:column="18"/></name></expr> )<pos:position pos:line="281" pos:column="20"/></condition><then pos:line="281" pos:column="20"> <block pos:line="281" pos:column="21">{
        <comment type="block" pos:line="282" pos:column="9">/* extra '?' */</comment>
        <expr_stmt><expr><call><name pos:line="283" pos:column="9">LDAP_FREE<pos:position pos:line="283" pos:column="18"/></name><argument_list pos:line="283" pos:column="18">( <argument><expr><name pos:line="283" pos:column="20">url<pos:position pos:line="283" pos:column="23"/></name></expr></argument> )<pos:position pos:line="283" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="284" pos:column="9">apr_ldap_free_urldesc<pos:position pos:line="284" pos:column="30"/></name><argument_list pos:line="284" pos:column="30">( <argument><expr><name pos:line="284" pos:column="32">ludp<pos:position pos:line="284" pos:column="36"/></name></expr></argument> )<pos:position pos:line="284" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="39"/></expr_stmt>
        <return pos:line="285" pos:column="9">return <expr><name pos:line="285" pos:column="16">LDAP_URL_ERR_BADURL<pos:position pos:line="285" pos:column="35"/></name></expr>;<pos:position pos:line="285" pos:column="36"/></return>
    }<pos:position pos:line="286" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="288" pos:column="5">/* parse the extensions */</comment>
    <expr_stmt><expr><name><name pos:line="289" pos:column="5">ludp<pos:position pos:line="289" pos:column="9"/></name><operator pos:line="289" pos:column="9">-&gt;<pos:position pos:line="289" pos:column="14"/></operator><name pos:line="289" pos:column="11">lud_exts<pos:position pos:line="289" pos:column="19"/></name></name> <operator pos:line="289" pos:column="20">=<pos:position pos:line="289" pos:column="21"/></operator> <call><name pos:line="289" pos:column="22">ldap_str2charray<pos:position pos:line="289" pos:column="38"/></name><argument_list pos:line="289" pos:column="38">( <argument><expr><name pos:line="289" pos:column="40">p<pos:position pos:line="289" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="289" pos:column="43">","<pos:position pos:line="289" pos:column="46"/></literal></expr></argument> )<pos:position pos:line="289" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="49"/></expr_stmt>

    <if pos:line="291" pos:column="5">if<condition pos:line="291" pos:column="7">( <expr><name><name pos:line="291" pos:column="9">ludp<pos:position pos:line="291" pos:column="13"/></name><operator pos:line="291" pos:column="13">-&gt;<pos:position pos:line="291" pos:column="18"/></operator><name pos:line="291" pos:column="15">lud_exts<pos:position pos:line="291" pos:column="23"/></name></name> <operator pos:line="291" pos:column="24">==<pos:position pos:line="291" pos:column="26"/></operator> <name pos:line="291" pos:column="27">NULL<pos:position pos:line="291" pos:column="31"/></name></expr> )<pos:position pos:line="291" pos:column="33"/></condition><then pos:line="291" pos:column="33"> <block pos:line="291" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="292" pos:column="9">LDAP_FREE<pos:position pos:line="292" pos:column="18"/></name><argument_list pos:line="292" pos:column="18">( <argument><expr><name pos:line="292" pos:column="20">url<pos:position pos:line="292" pos:column="23"/></name></expr></argument> )<pos:position pos:line="292" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="293" pos:column="9">apr_ldap_free_urldesc<pos:position pos:line="293" pos:column="30"/></name><argument_list pos:line="293" pos:column="30">( <argument><expr><name pos:line="293" pos:column="32">ludp<pos:position pos:line="293" pos:column="36"/></name></expr></argument> )<pos:position pos:line="293" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="39"/></expr_stmt>
        <return pos:line="294" pos:column="9">return <expr><name pos:line="294" pos:column="16">LDAP_URL_ERR_BADEXTS<pos:position pos:line="294" pos:column="36"/></name></expr>;<pos:position pos:line="294" pos:column="37"/></return>
    }<pos:position pos:line="295" pos:column="6"/></block></then></if>

    <for pos:line="297" pos:column="5">for<control pos:line="297" pos:column="8">( <init><expr><name pos:line="297" pos:column="10">i<pos:position pos:line="297" pos:column="11"/></name><operator pos:line="297" pos:column="11">=<pos:position pos:line="297" pos:column="12"/></operator><literal type="number" pos:line="297" pos:column="12">0<pos:position pos:line="297" pos:column="13"/></literal></expr>;<pos:position pos:line="297" pos:column="14"/></init> <condition><expr><name><name pos:line="297" pos:column="15">ludp<pos:position pos:line="297" pos:column="19"/></name><operator pos:line="297" pos:column="19">-&gt;<pos:position pos:line="297" pos:column="24"/></operator><name pos:line="297" pos:column="21">lud_exts<pos:position pos:line="297" pos:column="29"/></name><index pos:line="297" pos:column="29">[<expr><name pos:line="297" pos:column="30">i<pos:position pos:line="297" pos:column="31"/></name></expr>]<pos:position pos:line="297" pos:column="32"/></index></name> <operator pos:line="297" pos:column="33">!=<pos:position pos:line="297" pos:column="35"/></operator> <name pos:line="297" pos:column="36">NULL<pos:position pos:line="297" pos:column="40"/></name></expr>;<pos:position pos:line="297" pos:column="41"/></condition> <incr><expr><name pos:line="297" pos:column="42">i<pos:position pos:line="297" pos:column="43"/></name><operator pos:line="297" pos:column="43">++<pos:position pos:line="297" pos:column="45"/></operator></expr></incr> )<pos:position pos:line="297" pos:column="47"/></control> <block pos:line="297" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="298" pos:column="9">ldap_pvt_hex_unescape<pos:position pos:line="298" pos:column="30"/></name><argument_list pos:line="298" pos:column="30">( <argument><expr><name><name pos:line="298" pos:column="32">ludp<pos:position pos:line="298" pos:column="36"/></name><operator pos:line="298" pos:column="36">-&gt;<pos:position pos:line="298" pos:column="41"/></operator><name pos:line="298" pos:column="38">lud_exts<pos:position pos:line="298" pos:column="46"/></name><index pos:line="298" pos:column="46">[<expr><name pos:line="298" pos:column="47">i<pos:position pos:line="298" pos:column="48"/></name></expr>]<pos:position pos:line="298" pos:column="49"/></index></name></expr></argument> )<pos:position pos:line="298" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="52"/></expr_stmt>

        <if pos:line="300" pos:column="9">if<condition pos:line="300" pos:column="11">( <expr><operator pos:line="300" pos:column="13">*<pos:position pos:line="300" pos:column="14"/></operator><name><name pos:line="300" pos:column="14">ludp<pos:position pos:line="300" pos:column="18"/></name><operator pos:line="300" pos:column="18">-&gt;<pos:position pos:line="300" pos:column="23"/></operator><name pos:line="300" pos:column="20">lud_exts<pos:position pos:line="300" pos:column="28"/></name><index pos:line="300" pos:column="28">[<expr><name pos:line="300" pos:column="29">i<pos:position pos:line="300" pos:column="30"/></name></expr>]<pos:position pos:line="300" pos:column="31"/></index></name> <operator pos:line="300" pos:column="32">==<pos:position pos:line="300" pos:column="34"/></operator> <literal type="char" pos:line="300" pos:column="35">'!'<pos:position pos:line="300" pos:column="38"/></literal></expr> )<pos:position pos:line="300" pos:column="40"/></condition><then pos:line="300" pos:column="40"> <block pos:line="300" pos:column="41">{
            <comment type="block" pos:line="301" pos:column="13">/* count the number of critical extensions */</comment>
            <expr_stmt><expr><name><name pos:line="302" pos:column="13">ludp<pos:position pos:line="302" pos:column="17"/></name><operator pos:line="302" pos:column="17">-&gt;<pos:position pos:line="302" pos:column="22"/></operator><name pos:line="302" pos:column="19">lud_crit_exts<pos:position pos:line="302" pos:column="32"/></name></name><operator pos:line="302" pos:column="32">++<pos:position pos:line="302" pos:column="34"/></operator></expr>;<pos:position pos:line="302" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="303" pos:column="10"/></block></then></if>
    }<pos:position pos:line="304" pos:column="6"/></block></for>

    <if pos:line="306" pos:column="5">if<condition pos:line="306" pos:column="7">( <expr><name pos:line="306" pos:column="9">i<pos:position pos:line="306" pos:column="10"/></name> <operator pos:line="306" pos:column="11">==<pos:position pos:line="306" pos:column="13"/></operator> <literal type="number" pos:line="306" pos:column="14">0<pos:position pos:line="306" pos:column="15"/></literal></expr> )<pos:position pos:line="306" pos:column="17"/></condition><then pos:line="306" pos:column="17"> <block pos:line="306" pos:column="18">{
        <comment type="block" pos:line="307" pos:column="9">/* must have 1 or more */</comment>
        <expr_stmt><expr><call><name pos:line="308" pos:column="9">LDAP_FREE<pos:position pos:line="308" pos:column="18"/></name><argument_list pos:line="308" pos:column="18">( <argument><expr><name pos:line="308" pos:column="20">url<pos:position pos:line="308" pos:column="23"/></name></expr></argument> )<pos:position pos:line="308" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="309" pos:column="9">apr_ldap_free_urldesc<pos:position pos:line="309" pos:column="30"/></name><argument_list pos:line="309" pos:column="30">( <argument><expr><name pos:line="309" pos:column="32">ludp<pos:position pos:line="309" pos:column="36"/></name></expr></argument> )<pos:position pos:line="309" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="39"/></expr_stmt>
        <return pos:line="310" pos:column="9">return <expr><name pos:line="310" pos:column="16">LDAP_URL_ERR_BADEXTS<pos:position pos:line="310" pos:column="36"/></name></expr>;<pos:position pos:line="310" pos:column="37"/></return>
    }<pos:position pos:line="311" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="313" pos:column="5">/* no more */</comment>
    <expr_stmt><expr><operator pos:line="314" pos:column="5">*<pos:position pos:line="314" pos:column="6"/></operator><name pos:line="314" pos:column="6">ludpp<pos:position pos:line="314" pos:column="11"/></name> <operator pos:line="314" pos:column="12">=<pos:position pos:line="314" pos:column="13"/></operator> <name pos:line="314" pos:column="14">ludp<pos:position pos:line="314" pos:column="18"/></name></expr>;<pos:position pos:line="314" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="315" pos:column="5">LDAP_FREE<pos:position pos:line="315" pos:column="14"/></name><argument_list pos:line="315" pos:column="14">( <argument><expr><name pos:line="315" pos:column="16">url<pos:position pos:line="315" pos:column="19"/></name></expr></argument> )<pos:position pos:line="315" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="22"/></expr_stmt>
    <return pos:line="316" pos:column="5">return <expr><name pos:line="316" pos:column="12">LDAP_URL_SUCCESS<pos:position pos:line="316" pos:column="28"/></name></expr>;<pos:position pos:line="316" pos:column="29"/></return>
}<pos:position pos:line="317" pos:column="2"/></block></function></unit>

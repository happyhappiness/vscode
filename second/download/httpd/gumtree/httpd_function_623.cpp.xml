<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_623.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_expr<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">request_rec<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">r<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">include_ctx_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">ctx<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">expr<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">was_error<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">was_unmatched<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">char<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">debug<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <struct pos:line="4" pos:column="5">struct <name pos:line="4" pos:column="12">parse_node<pos:position pos:line="4" pos:column="22"/></name> <block pos:line="4" pos:column="23">{<public type="default" pos:line="4" pos:column="24">
        <decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">parse_node<pos:position pos:line="5" pos:column="26"/></name></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name pos:line="5" pos:column="28">left<pos:position pos:line="5" pos:column="32"/></name></decl>, <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="35">right<pos:position pos:line="5" pos:column="40"/></name></decl>, <modifier pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="43">parent<pos:position pos:line="5" pos:column="49"/></name></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">token<pos:position pos:line="6" pos:column="21"/></name></name></type> <name pos:line="6" pos:column="22">token<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">value<pos:position pos:line="7" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="20">done<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
    <pos:position pos:line="8" pos:column="5"/></public>}<pos:position pos:line="8" pos:column="6"/></block> <decl><modifier pos:line="8" pos:column="7">*<pos:position pos:line="8" pos:column="8"/></modifier><name pos:line="8" pos:column="8">root<pos:position pos:line="8" pos:column="12"/></name></decl>, <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="15">current<pos:position pos:line="8" pos:column="22"/></name></decl>, <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier>new;<pos:position pos:line="8" pos:column="29"/></struct>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">parse<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name><modifier pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></modifier></type> <name pos:line="10" pos:column="11">buffer<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">retval<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_size_t<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">debug_pos<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="14" pos:column="5">debug<pos:position pos:line="14" pos:column="10"/></name><index pos:line="14" pos:column="10">[<expr><name pos:line="14" pos:column="11">debug_pos<pos:position pos:line="14" pos:column="20"/></name></expr>]<pos:position pos:line="14" pos:column="21"/></index></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <literal type="char" pos:line="14" pos:column="24">'\0'<pos:position pos:line="14" pos:column="28"/></literal></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="15" pos:column="5">*<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">was_error<pos:position pos:line="15" pos:column="15"/></name>       <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="16" pos:column="5">*<pos:position pos:line="16" pos:column="6"/></operator><name pos:line="16" pos:column="6">was_unmatched<pos:position pos:line="16" pos:column="19"/></name>   <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">parse<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">expr<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">)<pos:position pos:line="17" pos:column="23"/></operator> <operator pos:line="17" pos:column="24">==<pos:position pos:line="17" pos:column="26"/></operator> <operator pos:line="17" pos:column="27">(<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">char<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">*<pos:position pos:line="17" pos:column="34"/></operator><operator pos:line="17" pos:column="34">)<pos:position pos:line="17" pos:column="35"/></operator> <name pos:line="17" pos:column="36">NULL<pos:position pos:line="17" pos:column="40"/></name></expr>)<pos:position pos:line="17" pos:column="41"/></condition><then pos:line="17" pos:column="41"> <block pos:line="17" pos:column="42">{
        <return pos:line="18" pos:column="9">return <expr><operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal><operator pos:line="18" pos:column="18">)<pos:position pos:line="18" pos:column="19"/></operator></expr>;<pos:position pos:line="18" pos:column="20"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="20" pos:column="5">root<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <name pos:line="20" pos:column="12">current<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <operator pos:line="20" pos:column="22">(<pos:position pos:line="20" pos:column="23"/></operator>struct <name pos:line="20" pos:column="30">parse_node<pos:position pos:line="20" pos:column="40"/></name> <operator pos:line="20" pos:column="41">*<pos:position pos:line="20" pos:column="42"/></operator><operator pos:line="20" pos:column="42">)<pos:position pos:line="20" pos:column="43"/></operator> <name pos:line="20" pos:column="44">NULL<pos:position pos:line="20" pos:column="48"/></name></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* Create Parse Tree */</comment>
    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><literal type="number" pos:line="23" pos:column="12">1<pos:position pos:line="23" pos:column="13"/></literal></expr>)<pos:position pos:line="23" pos:column="14"/></condition> <block pos:line="23" pos:column="15">{
        <expr_stmt><expr><operator pos:line="24" pos:column="9">new<pos:position pos:line="24" pos:column="12"/></operator> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <operator pos:line="24" pos:column="15">(<pos:position pos:line="24" pos:column="16"/></operator>struct <name pos:line="24" pos:column="23">parse_node<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">*<pos:position pos:line="24" pos:column="35"/></operator><operator pos:line="24" pos:column="35">)<pos:position pos:line="24" pos:column="36"/></operator> <call><name pos:line="24" pos:column="37">apr_palloc<pos:position pos:line="24" pos:column="47"/></name><argument_list pos:line="24" pos:column="47">(<argument><expr><name><name pos:line="24" pos:column="48">r<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">-&gt;<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="51">pool<pos:position pos:line="24" pos:column="55"/></name></name></expr></argument>,
                                           <argument><expr><sizeof pos:line="25" pos:column="44">sizeof<argument_list pos:line="25" pos:column="50">(<argument><expr pos:line="25" pos:column="51">struct <name pos:line="25" pos:column="58">parse_node<pos:position pos:line="25" pos:column="68"/></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="26" pos:column="9">new<pos:position pos:line="26" pos:column="12"/></operator><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">parent<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <operator pos:line="26" pos:column="23">new<pos:position pos:line="26" pos:column="26"/></operator><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">left<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">=<pos:position pos:line="26" pos:column="34"/></operator> <operator pos:line="26" pos:column="35">new<pos:position pos:line="26" pos:column="38"/></operator><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">right<pos:position pos:line="26" pos:column="45"/></name> <operator pos:line="26" pos:column="46">=<pos:position pos:line="26" pos:column="47"/></operator> <operator pos:line="26" pos:column="48">(<pos:position pos:line="26" pos:column="49"/></operator>struct <name pos:line="26" pos:column="56">parse_node<pos:position pos:line="26" pos:column="66"/></name> <operator pos:line="26" pos:column="67">*<pos:position pos:line="26" pos:column="68"/></operator><operator pos:line="26" pos:column="68">)<pos:position pos:line="26" pos:column="69"/></operator> <name pos:line="26" pos:column="70">NULL<pos:position pos:line="26" pos:column="74"/></name></expr>;<pos:position pos:line="26" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="27" pos:column="9">new<pos:position pos:line="27" pos:column="12"/></operator><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">done<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <literal type="number" pos:line="27" pos:column="21">0<pos:position pos:line="27" pos:column="22"/></literal></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">parse<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <call><name pos:line="28" pos:column="22">get_ptoken<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">r<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="36">parse<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="43">&amp;<pos:position pos:line="28" pos:column="48"/></operator><operator pos:line="28" pos:column="44">new<pos:position pos:line="28" pos:column="47"/></operator><operator pos:line="28" pos:column="47">-&gt;<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="49">token<pos:position pos:line="28" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="56">was_unmatched<pos:position pos:line="28" pos:column="69"/></name></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call><operator pos:line="28" pos:column="70">)<pos:position pos:line="28" pos:column="71"/></operator> <operator pos:line="28" pos:column="72">==<pos:position pos:line="28" pos:column="74"/></operator> 
            <operator pos:line="29" pos:column="13">(<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">char<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">*<pos:position pos:line="29" pos:column="20"/></operator><operator pos:line="29" pos:column="20">)<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">NULL<pos:position pos:line="29" pos:column="26"/></name></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27"> <block pos:line="29" pos:column="28">{
            <break pos:line="30" pos:column="13">break;<pos:position pos:line="30" pos:column="19"/></break>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
        <switch pos:line="32" pos:column="9">switch <condition pos:line="32" pos:column="16">(<expr><operator pos:line="32" pos:column="17">new<pos:position pos:line="32" pos:column="20"/></operator><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name><name pos:line="32" pos:column="22">token<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">.<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="28">type<pos:position pos:line="32" pos:column="32"/></name></name></expr>)<pos:position pos:line="32" pos:column="33"/></condition> <block pos:line="32" pos:column="34">{

        <case pos:line="34" pos:column="9">case <expr><name pos:line="34" pos:column="14">token_string<pos:position pos:line="34" pos:column="26"/></name></expr>:<pos:position pos:line="34" pos:column="27"/></case>
<cpp:ifdef pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">ifdef<pos:position pos:line="35" pos:column="7"/></cpp:directive> <name pos:line="35" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="35" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><name pos:line="36" pos:column="13">debug_pos<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">+=<pos:position pos:line="36" pos:column="25"/></operator> <call><name pos:line="36" pos:column="26">sprintf<pos:position pos:line="36" pos:column="33"/></name> <argument_list pos:line="36" pos:column="34">(<argument><expr><operator pos:line="36" pos:column="35">&amp;<pos:position pos:line="36" pos:column="40"/></operator><name><name pos:line="36" pos:column="36">debug<pos:position pos:line="36" pos:column="41"/></name><index pos:line="36" pos:column="41">[<expr><name pos:line="36" pos:column="42">debug_pos<pos:position pos:line="36" pos:column="51"/></name></expr>]<pos:position pos:line="36" pos:column="52"/></index></name></expr></argument>, 
                                  <argument><expr><literal type="string" pos:line="37" pos:column="35">"     Token: string (%s)\n"<pos:position pos:line="37" pos:column="62"/></literal></expr></argument>, 
                                  <argument><expr><operator pos:line="38" pos:column="35">new<pos:position pos:line="38" pos:column="38"/></operator><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name><name pos:line="38" pos:column="40">token<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">.<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="46">value<pos:position pos:line="38" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><name pos:line="40" pos:column="17">current<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">==<pos:position pos:line="40" pos:column="27"/></operator> <operator pos:line="40" pos:column="28">(<pos:position pos:line="40" pos:column="29"/></operator>struct <name pos:line="40" pos:column="36">parse_node<pos:position pos:line="40" pos:column="46"/></name> <operator pos:line="40" pos:column="47">*<pos:position pos:line="40" pos:column="48"/></operator><operator pos:line="40" pos:column="48">)<pos:position pos:line="40" pos:column="49"/></operator> <name pos:line="40" pos:column="50">NULL<pos:position pos:line="40" pos:column="54"/></name></expr>)<pos:position pos:line="40" pos:column="55"/></condition><then pos:line="40" pos:column="55"> <block pos:line="40" pos:column="56">{
                <expr_stmt><expr><name pos:line="41" pos:column="17">root<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="24">current<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">=<pos:position pos:line="41" pos:column="33"/></operator> <operator pos:line="41" pos:column="34">new<pos:position pos:line="41" pos:column="37"/></operator></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>
                <break pos:line="42" pos:column="17">break;<pos:position pos:line="42" pos:column="23"/></break>
            }<pos:position pos:line="43" pos:column="14"/></block></then></if>
            <switch pos:line="44" pos:column="13">switch <condition pos:line="44" pos:column="20">(<expr><name><name pos:line="44" pos:column="21">current<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">-&gt;<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="30">token<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">.<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="36">type<pos:position pos:line="44" pos:column="40"/></name></name></expr>)<pos:position pos:line="44" pos:column="41"/></condition> <block pos:line="44" pos:column="42">{
            <case pos:line="45" pos:column="13">case <expr><name pos:line="45" pos:column="18">token_string<pos:position pos:line="45" pos:column="30"/></name></expr>:<pos:position pos:line="45" pos:column="31"/></case>
                <expr_stmt><expr><name><name pos:line="46" pos:column="17">current<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">token<pos:position pos:line="46" pos:column="31"/></name><operator pos:line="46" pos:column="31">.<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="32">value<pos:position pos:line="46" pos:column="37"/></name></name> <operator pos:line="46" pos:column="38">=<pos:position pos:line="46" pos:column="39"/></operator> <call><name pos:line="46" pos:column="40">apr_pstrcat<pos:position pos:line="46" pos:column="51"/></name><argument_list pos:line="46" pos:column="51">(<argument><expr><name><name pos:line="46" pos:column="52">r<pos:position pos:line="46" pos:column="53"/></name><operator pos:line="46" pos:column="53">-&gt;<pos:position pos:line="46" pos:column="58"/></operator><name pos:line="46" pos:column="55">pool<pos:position pos:line="46" pos:column="59"/></name></name></expr></argument>,
                                                   <argument><expr><name><name pos:line="47" pos:column="52">current<pos:position pos:line="47" pos:column="59"/></name><operator pos:line="47" pos:column="59">-&gt;<pos:position pos:line="47" pos:column="64"/></operator><name pos:line="47" pos:column="61">token<pos:position pos:line="47" pos:column="66"/></name><operator pos:line="47" pos:column="66">.<pos:position pos:line="47" pos:column="67"/></operator><name pos:line="47" pos:column="67">value<pos:position pos:line="47" pos:column="72"/></name></name></expr></argument>,
                                                   <argument><expr><ternary><condition><expr><name><name pos:line="48" pos:column="52">current<pos:position pos:line="48" pos:column="59"/></name><operator pos:line="48" pos:column="59">-&gt;<pos:position pos:line="48" pos:column="64"/></operator><name pos:line="48" pos:column="61">token<pos:position pos:line="48" pos:column="66"/></name><operator pos:line="48" pos:column="66">.<pos:position pos:line="48" pos:column="67"/></operator><name pos:line="48" pos:column="67">value<pos:position pos:line="48" pos:column="72"/></name><index pos:line="48" pos:column="72">[<expr><literal type="number" pos:line="48" pos:column="73">0<pos:position pos:line="48" pos:column="74"/></literal></expr>]<pos:position pos:line="48" pos:column="75"/></index></name></expr> ?<pos:position pos:line="48" pos:column="77"/></condition><then pos:line="48" pos:column="77"> <expr><literal type="string" pos:line="48" pos:column="78">" "<pos:position pos:line="48" pos:column="81"/></literal></expr> <pos:position pos:line="48" pos:column="82"/></then><else pos:line="48" pos:column="82">: <expr><literal type="string" pos:line="48" pos:column="84">""<pos:position pos:line="48" pos:column="86"/></literal></expr></else></ternary></expr></argument>,
                                                   <argument><expr><operator pos:line="49" pos:column="52">new<pos:position pos:line="49" pos:column="55"/></operator><operator pos:line="49" pos:column="55">-&gt;<pos:position pos:line="49" pos:column="60"/></operator><name><name pos:line="49" pos:column="57">token<pos:position pos:line="49" pos:column="62"/></name><operator pos:line="49" pos:column="62">.<pos:position pos:line="49" pos:column="63"/></operator><name pos:line="49" pos:column="63">value<pos:position pos:line="49" pos:column="68"/></name></name></expr></argument>,
                                                   <argument><expr><name pos:line="50" pos:column="52">NULL<pos:position pos:line="50" pos:column="56"/></name></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt>
                                                   
                <break pos:line="52" pos:column="17">break;<pos:position pos:line="52" pos:column="23"/></break>
            <case pos:line="53" pos:column="13">case <expr><name pos:line="53" pos:column="18">token_eq<pos:position pos:line="53" pos:column="26"/></name></expr>:<pos:position pos:line="53" pos:column="27"/></case>
            <case pos:line="54" pos:column="13">case <expr><name pos:line="54" pos:column="18">token_ne<pos:position pos:line="54" pos:column="26"/></name></expr>:<pos:position pos:line="54" pos:column="27"/></case>
            <case pos:line="55" pos:column="13">case <expr><name pos:line="55" pos:column="18">token_and<pos:position pos:line="55" pos:column="27"/></name></expr>:<pos:position pos:line="55" pos:column="28"/></case>
            <case pos:line="56" pos:column="13">case <expr><name pos:line="56" pos:column="18">token_or<pos:position pos:line="56" pos:column="26"/></name></expr>:<pos:position pos:line="56" pos:column="27"/></case>
            <case pos:line="57" pos:column="13">case <expr><name pos:line="57" pos:column="18">token_lbrace<pos:position pos:line="57" pos:column="30"/></name></expr>:<pos:position pos:line="57" pos:column="31"/></case>
            <case pos:line="58" pos:column="13">case <expr><name pos:line="58" pos:column="18">token_not<pos:position pos:line="58" pos:column="27"/></name></expr>:<pos:position pos:line="58" pos:column="28"/></case>
            <case pos:line="59" pos:column="13">case <expr><name pos:line="59" pos:column="18">token_ge<pos:position pos:line="59" pos:column="26"/></name></expr>:<pos:position pos:line="59" pos:column="27"/></case>
            <case pos:line="60" pos:column="13">case <expr><name pos:line="60" pos:column="18">token_gt<pos:position pos:line="60" pos:column="26"/></name></expr>:<pos:position pos:line="60" pos:column="27"/></case>
            <case pos:line="61" pos:column="13">case <expr><name pos:line="61" pos:column="18">token_le<pos:position pos:line="61" pos:column="26"/></name></expr>:<pos:position pos:line="61" pos:column="27"/></case>
            <case pos:line="62" pos:column="13">case <expr><name pos:line="62" pos:column="18">token_lt<pos:position pos:line="62" pos:column="26"/></name></expr>:<pos:position pos:line="62" pos:column="27"/></case>
                <expr_stmt><expr><operator pos:line="63" pos:column="17">new<pos:position pos:line="63" pos:column="20"/></operator><operator pos:line="63" pos:column="20">-&gt;<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="22">parent<pos:position pos:line="63" pos:column="28"/></name> <operator pos:line="63" pos:column="29">=<pos:position pos:line="63" pos:column="30"/></operator> <name pos:line="63" pos:column="31">current<pos:position pos:line="63" pos:column="38"/></name></expr>;<pos:position pos:line="63" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name pos:line="64" pos:column="17">current<pos:position pos:line="64" pos:column="24"/></name> <operator pos:line="64" pos:column="25">=<pos:position pos:line="64" pos:column="26"/></operator> <name><name pos:line="64" pos:column="27">current<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">-&gt;<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="36">right<pos:position pos:line="64" pos:column="41"/></name></name> <operator pos:line="64" pos:column="42">=<pos:position pos:line="64" pos:column="43"/></operator> <operator pos:line="64" pos:column="44">new<pos:position pos:line="64" pos:column="47"/></operator></expr>;<pos:position pos:line="64" pos:column="48"/></expr_stmt>
                <break pos:line="65" pos:column="17">break;<pos:position pos:line="65" pos:column="23"/></break>
            <default pos:line="66" pos:column="13">default:<pos:position pos:line="66" pos:column="21"/></default>
                <expr_stmt><expr><call><name pos:line="67" pos:column="17">ap_log_rerror<pos:position pos:line="67" pos:column="30"/></name><argument_list pos:line="67" pos:column="30">(<argument><expr><name pos:line="67" pos:column="31">APLOG_MARK<pos:position pos:line="67" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="43">APLOG_ERR<pos:position pos:line="67" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="54">0<pos:position pos:line="67" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="57">r<pos:position pos:line="67" pos:column="58"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="68" pos:column="29">"Invalid expression \"%s\" in file %s"<pos:position pos:line="68" pos:column="67"/></literal></expr></argument>,
                            <argument><expr><name pos:line="69" pos:column="29">expr<pos:position pos:line="69" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="35">r<pos:position pos:line="69" pos:column="36"/></name><operator pos:line="69" pos:column="36">-&gt;<pos:position pos:line="69" pos:column="41"/></operator><name pos:line="69" pos:column="38">filename<pos:position pos:line="69" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="70" pos:column="17">*<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="18">was_error<pos:position pos:line="70" pos:column="27"/></name> <operator pos:line="70" pos:column="28">=<pos:position pos:line="70" pos:column="29"/></operator> <literal type="number" pos:line="70" pos:column="30">1<pos:position pos:line="70" pos:column="31"/></literal></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt>
                <return pos:line="71" pos:column="17">return <expr><name pos:line="71" pos:column="24">retval<pos:position pos:line="71" pos:column="30"/></name></expr>;<pos:position pos:line="71" pos:column="31"/></return>
            }<pos:position pos:line="72" pos:column="14"/></block></switch>
            <break pos:line="73" pos:column="13">break;<pos:position pos:line="73" pos:column="19"/></break>

        <case pos:line="75" pos:column="9">case <expr><name pos:line="75" pos:column="14">token_re<pos:position pos:line="75" pos:column="22"/></name></expr>:<pos:position pos:line="75" pos:column="23"/></case>
<cpp:ifdef pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">ifdef<pos:position pos:line="76" pos:column="7"/></cpp:directive> <name pos:line="76" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="76" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><name pos:line="77" pos:column="13">debug_pos<pos:position pos:line="77" pos:column="22"/></name> <operator pos:line="77" pos:column="23">+=<pos:position pos:line="77" pos:column="25"/></operator> <call><name pos:line="77" pos:column="26">sprintf<pos:position pos:line="77" pos:column="33"/></name> <argument_list pos:line="77" pos:column="34">(<argument><expr><operator pos:line="77" pos:column="35">&amp;<pos:position pos:line="77" pos:column="40"/></operator><name><name pos:line="77" pos:column="36">debug<pos:position pos:line="77" pos:column="41"/></name><index pos:line="77" pos:column="41">[<expr><name pos:line="77" pos:column="42">debug_pos<pos:position pos:line="77" pos:column="51"/></name></expr>]<pos:position pos:line="77" pos:column="52"/></index></name></expr></argument>, 
                                  <argument><expr><literal type="string" pos:line="78" pos:column="35">"     Token: regex (%s)\n"<pos:position pos:line="78" pos:column="61"/></literal></expr></argument>, 
                                  <argument><expr><operator pos:line="79" pos:column="35">new<pos:position pos:line="79" pos:column="38"/></operator><operator pos:line="79" pos:column="38">-&gt;<pos:position pos:line="79" pos:column="43"/></operator><name><name pos:line="79" pos:column="40">token<pos:position pos:line="79" pos:column="45"/></name><operator pos:line="79" pos:column="45">.<pos:position pos:line="79" pos:column="46"/></operator><name pos:line="79" pos:column="46">value<pos:position pos:line="79" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="53"/></expr_stmt>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif<pos:position pos:line="80" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="81" pos:column="13">if <condition pos:line="81" pos:column="16">(<expr><name pos:line="81" pos:column="17">current<pos:position pos:line="81" pos:column="24"/></name> <operator pos:line="81" pos:column="25">==<pos:position pos:line="81" pos:column="27"/></operator> <operator pos:line="81" pos:column="28">(<pos:position pos:line="81" pos:column="29"/></operator>struct <name pos:line="81" pos:column="36">parse_node<pos:position pos:line="81" pos:column="46"/></name> <operator pos:line="81" pos:column="47">*<pos:position pos:line="81" pos:column="48"/></operator><operator pos:line="81" pos:column="48">)<pos:position pos:line="81" pos:column="49"/></operator> <name pos:line="81" pos:column="50">NULL<pos:position pos:line="81" pos:column="54"/></name></expr>)<pos:position pos:line="81" pos:column="55"/></condition><then pos:line="81" pos:column="55"> <block pos:line="81" pos:column="56">{
                <expr_stmt><expr><name pos:line="82" pos:column="17">root<pos:position pos:line="82" pos:column="21"/></name> <operator pos:line="82" pos:column="22">=<pos:position pos:line="82" pos:column="23"/></operator> <name pos:line="82" pos:column="24">current<pos:position pos:line="82" pos:column="31"/></name> <operator pos:line="82" pos:column="32">=<pos:position pos:line="82" pos:column="33"/></operator> <operator pos:line="82" pos:column="34">new<pos:position pos:line="82" pos:column="37"/></operator></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt>
                <break pos:line="83" pos:column="17">break;<pos:position pos:line="83" pos:column="23"/></break>
            }<pos:position pos:line="84" pos:column="14"/></block></then></if>
            <switch pos:line="85" pos:column="13">switch <condition pos:line="85" pos:column="20">(<expr><name><name pos:line="85" pos:column="21">current<pos:position pos:line="85" pos:column="28"/></name><operator pos:line="85" pos:column="28">-&gt;<pos:position pos:line="85" pos:column="33"/></operator><name pos:line="85" pos:column="30">token<pos:position pos:line="85" pos:column="35"/></name><operator pos:line="85" pos:column="35">.<pos:position pos:line="85" pos:column="36"/></operator><name pos:line="85" pos:column="36">type<pos:position pos:line="85" pos:column="40"/></name></name></expr>)<pos:position pos:line="85" pos:column="41"/></condition> <block pos:line="85" pos:column="42">{
            <case pos:line="86" pos:column="13">case <expr><name pos:line="86" pos:column="18">token_eq<pos:position pos:line="86" pos:column="26"/></name></expr>:<pos:position pos:line="86" pos:column="27"/></case>
            <case pos:line="87" pos:column="13">case <expr><name pos:line="87" pos:column="18">token_ne<pos:position pos:line="87" pos:column="26"/></name></expr>:<pos:position pos:line="87" pos:column="27"/></case>
            <case pos:line="88" pos:column="13">case <expr><name pos:line="88" pos:column="18">token_and<pos:position pos:line="88" pos:column="27"/></name></expr>:<pos:position pos:line="88" pos:column="28"/></case>
            <case pos:line="89" pos:column="13">case <expr><name pos:line="89" pos:column="18">token_or<pos:position pos:line="89" pos:column="26"/></name></expr>:<pos:position pos:line="89" pos:column="27"/></case>
            <case pos:line="90" pos:column="13">case <expr><name pos:line="90" pos:column="18">token_lbrace<pos:position pos:line="90" pos:column="30"/></name></expr>:<pos:position pos:line="90" pos:column="31"/></case>
            <case pos:line="91" pos:column="13">case <expr><name pos:line="91" pos:column="18">token_not<pos:position pos:line="91" pos:column="27"/></name></expr>:<pos:position pos:line="91" pos:column="28"/></case>
                <expr_stmt><expr><operator pos:line="92" pos:column="17">new<pos:position pos:line="92" pos:column="20"/></operator><operator pos:line="92" pos:column="20">-&gt;<pos:position pos:line="92" pos:column="25"/></operator><name pos:line="92" pos:column="22">parent<pos:position pos:line="92" pos:column="28"/></name> <operator pos:line="92" pos:column="29">=<pos:position pos:line="92" pos:column="30"/></operator> <name pos:line="92" pos:column="31">current<pos:position pos:line="92" pos:column="38"/></name></expr>;<pos:position pos:line="92" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name pos:line="93" pos:column="17">current<pos:position pos:line="93" pos:column="24"/></name> <operator pos:line="93" pos:column="25">=<pos:position pos:line="93" pos:column="26"/></operator> <name><name pos:line="93" pos:column="27">current<pos:position pos:line="93" pos:column="34"/></name><operator pos:line="93" pos:column="34">-&gt;<pos:position pos:line="93" pos:column="39"/></operator><name pos:line="93" pos:column="36">right<pos:position pos:line="93" pos:column="41"/></name></name> <operator pos:line="93" pos:column="42">=<pos:position pos:line="93" pos:column="43"/></operator> <operator pos:line="93" pos:column="44">new<pos:position pos:line="93" pos:column="47"/></operator></expr>;<pos:position pos:line="93" pos:column="48"/></expr_stmt>
                <break pos:line="94" pos:column="17">break;<pos:position pos:line="94" pos:column="23"/></break>
            <default pos:line="95" pos:column="13">default:<pos:position pos:line="95" pos:column="21"/></default>
                <expr_stmt><expr><call><name pos:line="96" pos:column="17">ap_log_rerror<pos:position pos:line="96" pos:column="30"/></name><argument_list pos:line="96" pos:column="30">(<argument><expr><name pos:line="96" pos:column="31">APLOG_MARK<pos:position pos:line="96" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="43">APLOG_ERR<pos:position pos:line="96" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="96" pos:column="54">0<pos:position pos:line="96" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="57">r<pos:position pos:line="96" pos:column="58"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="97" pos:column="29">"Invalid expression \"%s\" in file %s"<pos:position pos:line="97" pos:column="67"/></literal></expr></argument>,
                            <argument><expr><name pos:line="98" pos:column="29">expr<pos:position pos:line="98" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="35">r<pos:position pos:line="98" pos:column="36"/></name><operator pos:line="98" pos:column="36">-&gt;<pos:position pos:line="98" pos:column="41"/></operator><name pos:line="98" pos:column="38">filename<pos:position pos:line="98" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="99" pos:column="17">*<pos:position pos:line="99" pos:column="18"/></operator><name pos:line="99" pos:column="18">was_error<pos:position pos:line="99" pos:column="27"/></name> <operator pos:line="99" pos:column="28">=<pos:position pos:line="99" pos:column="29"/></operator> <literal type="number" pos:line="99" pos:column="30">1<pos:position pos:line="99" pos:column="31"/></literal></expr>;<pos:position pos:line="99" pos:column="32"/></expr_stmt>
                <return pos:line="100" pos:column="17">return <expr><name pos:line="100" pos:column="24">retval<pos:position pos:line="100" pos:column="30"/></name></expr>;<pos:position pos:line="100" pos:column="31"/></return>
            }<pos:position pos:line="101" pos:column="14"/></block></switch>
            <break pos:line="102" pos:column="13">break;<pos:position pos:line="102" pos:column="19"/></break>

        <case pos:line="104" pos:column="9">case <expr><name pos:line="104" pos:column="14">token_and<pos:position pos:line="104" pos:column="23"/></name></expr>:<pos:position pos:line="104" pos:column="24"/></case>
        <case pos:line="105" pos:column="9">case <expr><name pos:line="105" pos:column="14">token_or<pos:position pos:line="105" pos:column="22"/></name></expr>:<pos:position pos:line="105" pos:column="23"/></case>
<cpp:ifdef pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">ifdef<pos:position pos:line="106" pos:column="7"/></cpp:directive> <name pos:line="106" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="106" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="107" pos:column="13">memcpy<pos:position pos:line="107" pos:column="19"/></name> <argument_list pos:line="107" pos:column="20">(<argument><expr><operator pos:line="107" pos:column="21">&amp;<pos:position pos:line="107" pos:column="26"/></operator><name><name pos:line="107" pos:column="22">debug<pos:position pos:line="107" pos:column="27"/></name><index pos:line="107" pos:column="27">[<expr><name pos:line="107" pos:column="28">debug_pos<pos:position pos:line="107" pos:column="37"/></name></expr>]<pos:position pos:line="107" pos:column="38"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="40">"     Token: and/or\n"<pos:position pos:line="107" pos:column="62"/></literal></expr></argument>,
                    <argument><expr><sizeof pos:line="108" pos:column="21">sizeof <argument_list pos:line="108" pos:column="28">(<argument><expr><literal type="string" pos:line="108" pos:column="29">"     Token: and/or\n"<pos:position pos:line="108" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="108" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="109" pos:column="13">debug_pos<pos:position pos:line="109" pos:column="22"/></name> <operator pos:line="109" pos:column="23">+=<pos:position pos:line="109" pos:column="25"/></operator> <sizeof pos:line="109" pos:column="26">sizeof <argument_list pos:line="109" pos:column="33">(<argument><expr><literal type="string" pos:line="109" pos:column="34">"     Token: and/or\n"<pos:position pos:line="109" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="57"/></argument_list></sizeof></expr>;<pos:position pos:line="109" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">endif<pos:position pos:line="110" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="111" pos:column="13">if <condition pos:line="111" pos:column="16">(<expr><name pos:line="111" pos:column="17">current<pos:position pos:line="111" pos:column="24"/></name> <operator pos:line="111" pos:column="25">==<pos:position pos:line="111" pos:column="27"/></operator> <operator pos:line="111" pos:column="28">(<pos:position pos:line="111" pos:column="29"/></operator>struct <name pos:line="111" pos:column="36">parse_node<pos:position pos:line="111" pos:column="46"/></name> <operator pos:line="111" pos:column="47">*<pos:position pos:line="111" pos:column="48"/></operator><operator pos:line="111" pos:column="48">)<pos:position pos:line="111" pos:column="49"/></operator> <name pos:line="111" pos:column="50">NULL<pos:position pos:line="111" pos:column="54"/></name></expr>)<pos:position pos:line="111" pos:column="55"/></condition><then pos:line="111" pos:column="55"> <block pos:line="111" pos:column="56">{
                <expr_stmt><expr><call><name pos:line="112" pos:column="17">ap_log_rerror<pos:position pos:line="112" pos:column="30"/></name><argument_list pos:line="112" pos:column="30">(<argument><expr><name pos:line="112" pos:column="31">APLOG_MARK<pos:position pos:line="112" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="43">APLOG_ERR<pos:position pos:line="112" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="54">0<pos:position pos:line="112" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="57">r<pos:position pos:line="112" pos:column="58"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="113" pos:column="29">"Invalid expression \"%s\" in file %s"<pos:position pos:line="113" pos:column="67"/></literal></expr></argument>,
                            <argument><expr><name pos:line="114" pos:column="29">expr<pos:position pos:line="114" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="35">r<pos:position pos:line="114" pos:column="36"/></name><operator pos:line="114" pos:column="36">-&gt;<pos:position pos:line="114" pos:column="41"/></operator><name pos:line="114" pos:column="38">filename<pos:position pos:line="114" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="115" pos:column="17">*<pos:position pos:line="115" pos:column="18"/></operator><name pos:line="115" pos:column="18">was_error<pos:position pos:line="115" pos:column="27"/></name> <operator pos:line="115" pos:column="28">=<pos:position pos:line="115" pos:column="29"/></operator> <literal type="number" pos:line="115" pos:column="30">1<pos:position pos:line="115" pos:column="31"/></literal></expr>;<pos:position pos:line="115" pos:column="32"/></expr_stmt>
                <return pos:line="116" pos:column="17">return <expr><name pos:line="116" pos:column="24">retval<pos:position pos:line="116" pos:column="30"/></name></expr>;<pos:position pos:line="116" pos:column="31"/></return>
            }<pos:position pos:line="117" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="118" pos:column="13">/* Percolate upwards */</comment>
            <while pos:line="119" pos:column="13">while <condition pos:line="119" pos:column="19">(<expr><name pos:line="119" pos:column="20">current<pos:position pos:line="119" pos:column="27"/></name> <operator pos:line="119" pos:column="28">!=<pos:position pos:line="119" pos:column="30"/></operator> <operator pos:line="119" pos:column="31">(<pos:position pos:line="119" pos:column="32"/></operator>struct <name pos:line="119" pos:column="39">parse_node<pos:position pos:line="119" pos:column="49"/></name> <operator pos:line="119" pos:column="50">*<pos:position pos:line="119" pos:column="51"/></operator><operator pos:line="119" pos:column="51">)<pos:position pos:line="119" pos:column="52"/></operator> <name pos:line="119" pos:column="53">NULL<pos:position pos:line="119" pos:column="57"/></name></expr>)<pos:position pos:line="119" pos:column="58"/></condition> <block pos:line="119" pos:column="59">{
                <switch pos:line="120" pos:column="17">switch <condition pos:line="120" pos:column="24">(<expr><name><name pos:line="120" pos:column="25">current<pos:position pos:line="120" pos:column="32"/></name><operator pos:line="120" pos:column="32">-&gt;<pos:position pos:line="120" pos:column="37"/></operator><name pos:line="120" pos:column="34">token<pos:position pos:line="120" pos:column="39"/></name><operator pos:line="120" pos:column="39">.<pos:position pos:line="120" pos:column="40"/></operator><name pos:line="120" pos:column="40">type<pos:position pos:line="120" pos:column="44"/></name></name></expr>)<pos:position pos:line="120" pos:column="45"/></condition> <block pos:line="120" pos:column="46">{
                <case pos:line="121" pos:column="17">case <expr><name pos:line="121" pos:column="22">token_string<pos:position pos:line="121" pos:column="34"/></name></expr>:<pos:position pos:line="121" pos:column="35"/></case>
                <case pos:line="122" pos:column="17">case <expr><name pos:line="122" pos:column="22">token_re<pos:position pos:line="122" pos:column="30"/></name></expr>:<pos:position pos:line="122" pos:column="31"/></case>
                <case pos:line="123" pos:column="17">case <expr><name pos:line="123" pos:column="22">token_group<pos:position pos:line="123" pos:column="33"/></name></expr>:<pos:position pos:line="123" pos:column="34"/></case>
                <case pos:line="124" pos:column="17">case <expr><name pos:line="124" pos:column="22">token_not<pos:position pos:line="124" pos:column="31"/></name></expr>:<pos:position pos:line="124" pos:column="32"/></case>
                <case pos:line="125" pos:column="17">case <expr><name pos:line="125" pos:column="22">token_eq<pos:position pos:line="125" pos:column="30"/></name></expr>:<pos:position pos:line="125" pos:column="31"/></case>
                <case pos:line="126" pos:column="17">case <expr><name pos:line="126" pos:column="22">token_ne<pos:position pos:line="126" pos:column="30"/></name></expr>:<pos:position pos:line="126" pos:column="31"/></case>
                <case pos:line="127" pos:column="17">case <expr><name pos:line="127" pos:column="22">token_and<pos:position pos:line="127" pos:column="31"/></name></expr>:<pos:position pos:line="127" pos:column="32"/></case>
                <case pos:line="128" pos:column="17">case <expr><name pos:line="128" pos:column="22">token_or<pos:position pos:line="128" pos:column="30"/></name></expr>:<pos:position pos:line="128" pos:column="31"/></case>
                <case pos:line="129" pos:column="17">case <expr><name pos:line="129" pos:column="22">token_ge<pos:position pos:line="129" pos:column="30"/></name></expr>:<pos:position pos:line="129" pos:column="31"/></case>
                <case pos:line="130" pos:column="17">case <expr><name pos:line="130" pos:column="22">token_gt<pos:position pos:line="130" pos:column="30"/></name></expr>:<pos:position pos:line="130" pos:column="31"/></case>
                <case pos:line="131" pos:column="17">case <expr><name pos:line="131" pos:column="22">token_le<pos:position pos:line="131" pos:column="30"/></name></expr>:<pos:position pos:line="131" pos:column="31"/></case>
                <case pos:line="132" pos:column="17">case <expr><name pos:line="132" pos:column="22">token_lt<pos:position pos:line="132" pos:column="30"/></name></expr>:<pos:position pos:line="132" pos:column="31"/></case>
                    <expr_stmt><expr><name pos:line="133" pos:column="21">current<pos:position pos:line="133" pos:column="28"/></name> <operator pos:line="133" pos:column="29">=<pos:position pos:line="133" pos:column="30"/></operator> <name><name pos:line="133" pos:column="31">current<pos:position pos:line="133" pos:column="38"/></name><operator pos:line="133" pos:column="38">-&gt;<pos:position pos:line="133" pos:column="43"/></operator><name pos:line="133" pos:column="40">parent<pos:position pos:line="133" pos:column="46"/></name></name></expr>;<pos:position pos:line="133" pos:column="47"/></expr_stmt>
                    <continue pos:line="134" pos:column="21">continue;<pos:position pos:line="134" pos:column="30"/></continue>
                <case pos:line="135" pos:column="17">case <expr><name pos:line="135" pos:column="22">token_lbrace<pos:position pos:line="135" pos:column="34"/></name></expr>:<pos:position pos:line="135" pos:column="35"/></case>
                    <break pos:line="136" pos:column="21">break;<pos:position pos:line="136" pos:column="27"/></break>
                <default pos:line="137" pos:column="17">default:<pos:position pos:line="137" pos:column="25"/></default>
                    <expr_stmt><expr><call><name pos:line="138" pos:column="21">ap_log_rerror<pos:position pos:line="138" pos:column="34"/></name><argument_list pos:line="138" pos:column="34">(<argument><expr><name pos:line="138" pos:column="35">APLOG_MARK<pos:position pos:line="138" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="47">APLOG_ERR<pos:position pos:line="138" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="138" pos:column="58">0<pos:position pos:line="138" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="138" pos:column="61">r<pos:position pos:line="138" pos:column="62"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="139" pos:column="33">"Invalid expression \"%s\" in file %s"<pos:position pos:line="139" pos:column="71"/></literal></expr></argument>,
                                <argument><expr><name pos:line="140" pos:column="33">expr<pos:position pos:line="140" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="39">r<pos:position pos:line="140" pos:column="40"/></name><operator pos:line="140" pos:column="40">-&gt;<pos:position pos:line="140" pos:column="45"/></operator><name pos:line="140" pos:column="42">filename<pos:position pos:line="140" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="52"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="141" pos:column="21">*<pos:position pos:line="141" pos:column="22"/></operator><name pos:line="141" pos:column="22">was_error<pos:position pos:line="141" pos:column="31"/></name> <operator pos:line="141" pos:column="32">=<pos:position pos:line="141" pos:column="33"/></operator> <literal type="number" pos:line="141" pos:column="34">1<pos:position pos:line="141" pos:column="35"/></literal></expr>;<pos:position pos:line="141" pos:column="36"/></expr_stmt>
                    <return pos:line="142" pos:column="21">return <expr><name pos:line="142" pos:column="28">retval<pos:position pos:line="142" pos:column="34"/></name></expr>;<pos:position pos:line="142" pos:column="35"/></return>
                }<pos:position pos:line="143" pos:column="18"/></block></switch>
                <break pos:line="144" pos:column="17">break;<pos:position pos:line="144" pos:column="23"/></break>
            }<pos:position pos:line="145" pos:column="14"/></block></while>
            <if pos:line="146" pos:column="13">if <condition pos:line="146" pos:column="16">(<expr><name pos:line="146" pos:column="17">current<pos:position pos:line="146" pos:column="24"/></name> <operator pos:line="146" pos:column="25">==<pos:position pos:line="146" pos:column="27"/></operator> <operator pos:line="146" pos:column="28">(<pos:position pos:line="146" pos:column="29"/></operator>struct <name pos:line="146" pos:column="36">parse_node<pos:position pos:line="146" pos:column="46"/></name> <operator pos:line="146" pos:column="47">*<pos:position pos:line="146" pos:column="48"/></operator><operator pos:line="146" pos:column="48">)<pos:position pos:line="146" pos:column="49"/></operator> <name pos:line="146" pos:column="50">NULL<pos:position pos:line="146" pos:column="54"/></name></expr>)<pos:position pos:line="146" pos:column="55"/></condition><then pos:line="146" pos:column="55"> <block pos:line="146" pos:column="56">{
                <expr_stmt><expr><operator pos:line="147" pos:column="17">new<pos:position pos:line="147" pos:column="20"/></operator><operator pos:line="147" pos:column="20">-&gt;<pos:position pos:line="147" pos:column="25"/></operator><name pos:line="147" pos:column="22">left<pos:position pos:line="147" pos:column="26"/></name> <operator pos:line="147" pos:column="27">=<pos:position pos:line="147" pos:column="28"/></operator> <name pos:line="147" pos:column="29">root<pos:position pos:line="147" pos:column="33"/></name></expr>;<pos:position pos:line="147" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="148" pos:column="17">new<pos:position pos:line="148" pos:column="20"/></operator><operator pos:line="148" pos:column="20">-&gt;<pos:position pos:line="148" pos:column="25"/></operator><name><name pos:line="148" pos:column="22">left<pos:position pos:line="148" pos:column="26"/></name><operator pos:line="148" pos:column="26">-&gt;<pos:position pos:line="148" pos:column="31"/></operator><name pos:line="148" pos:column="28">parent<pos:position pos:line="148" pos:column="34"/></name></name> <operator pos:line="148" pos:column="35">=<pos:position pos:line="148" pos:column="36"/></operator> <operator pos:line="148" pos:column="37">new<pos:position pos:line="148" pos:column="40"/></operator></expr>;<pos:position pos:line="148" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="149" pos:column="17">new<pos:position pos:line="149" pos:column="20"/></operator><operator pos:line="149" pos:column="20">-&gt;<pos:position pos:line="149" pos:column="25"/></operator><name pos:line="149" pos:column="22">parent<pos:position pos:line="149" pos:column="28"/></name> <operator pos:line="149" pos:column="29">=<pos:position pos:line="149" pos:column="30"/></operator> <operator pos:line="149" pos:column="31">(<pos:position pos:line="149" pos:column="32"/></operator>struct <name pos:line="149" pos:column="39">parse_node<pos:position pos:line="149" pos:column="49"/></name> <operator pos:line="149" pos:column="50">*<pos:position pos:line="149" pos:column="51"/></operator><operator pos:line="149" pos:column="51">)<pos:position pos:line="149" pos:column="52"/></operator> <name pos:line="149" pos:column="53">NULL<pos:position pos:line="149" pos:column="57"/></name></expr>;<pos:position pos:line="149" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name pos:line="150" pos:column="17">root<pos:position pos:line="150" pos:column="21"/></name> <operator pos:line="150" pos:column="22">=<pos:position pos:line="150" pos:column="23"/></operator> <operator pos:line="150" pos:column="24">new<pos:position pos:line="150" pos:column="27"/></operator></expr>;<pos:position pos:line="150" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="151" pos:column="14"/></block></then>
            <else pos:line="152" pos:column="13">else <block pos:line="152" pos:column="18">{
                <expr_stmt><expr><operator pos:line="153" pos:column="17">new<pos:position pos:line="153" pos:column="20"/></operator><operator pos:line="153" pos:column="20">-&gt;<pos:position pos:line="153" pos:column="25"/></operator><name pos:line="153" pos:column="22">left<pos:position pos:line="153" pos:column="26"/></name> <operator pos:line="153" pos:column="27">=<pos:position pos:line="153" pos:column="28"/></operator> <name><name pos:line="153" pos:column="29">current<pos:position pos:line="153" pos:column="36"/></name><operator pos:line="153" pos:column="36">-&gt;<pos:position pos:line="153" pos:column="41"/></operator><name pos:line="153" pos:column="38">right<pos:position pos:line="153" pos:column="43"/></name></name></expr>;<pos:position pos:line="153" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="154" pos:column="17">new<pos:position pos:line="154" pos:column="20"/></operator><operator pos:line="154" pos:column="20">-&gt;<pos:position pos:line="154" pos:column="25"/></operator><name><name pos:line="154" pos:column="22">left<pos:position pos:line="154" pos:column="26"/></name><operator pos:line="154" pos:column="26">-&gt;<pos:position pos:line="154" pos:column="31"/></operator><name pos:line="154" pos:column="28">parent<pos:position pos:line="154" pos:column="34"/></name></name> <operator pos:line="154" pos:column="35">=<pos:position pos:line="154" pos:column="36"/></operator> <operator pos:line="154" pos:column="37">new<pos:position pos:line="154" pos:column="40"/></operator></expr>;<pos:position pos:line="154" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="155" pos:column="17">current<pos:position pos:line="155" pos:column="24"/></name><operator pos:line="155" pos:column="24">-&gt;<pos:position pos:line="155" pos:column="29"/></operator><name pos:line="155" pos:column="26">right<pos:position pos:line="155" pos:column="31"/></name></name> <operator pos:line="155" pos:column="32">=<pos:position pos:line="155" pos:column="33"/></operator> <operator pos:line="155" pos:column="34">new<pos:position pos:line="155" pos:column="37"/></operator></expr>;<pos:position pos:line="155" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="156" pos:column="17">new<pos:position pos:line="156" pos:column="20"/></operator><operator pos:line="156" pos:column="20">-&gt;<pos:position pos:line="156" pos:column="25"/></operator><name pos:line="156" pos:column="22">parent<pos:position pos:line="156" pos:column="28"/></name> <operator pos:line="156" pos:column="29">=<pos:position pos:line="156" pos:column="30"/></operator> <name pos:line="156" pos:column="31">current<pos:position pos:line="156" pos:column="38"/></name></expr>;<pos:position pos:line="156" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="157" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="158" pos:column="13">current<pos:position pos:line="158" pos:column="20"/></name> <operator pos:line="158" pos:column="21">=<pos:position pos:line="158" pos:column="22"/></operator> <operator pos:line="158" pos:column="23">new<pos:position pos:line="158" pos:column="26"/></operator></expr>;<pos:position pos:line="158" pos:column="27"/></expr_stmt>
            <break pos:line="159" pos:column="13">break;<pos:position pos:line="159" pos:column="19"/></break>

        <case pos:line="161" pos:column="9">case <expr><name pos:line="161" pos:column="14">token_not<pos:position pos:line="161" pos:column="23"/></name></expr>:<pos:position pos:line="161" pos:column="24"/></case>
<cpp:ifdef pos:line="162" pos:column="1">#<cpp:directive pos:line="162" pos:column="2">ifdef<pos:position pos:line="162" pos:column="7"/></cpp:directive> <name pos:line="162" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="162" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="163" pos:column="13">memcpy<pos:position pos:line="163" pos:column="19"/></name><argument_list pos:line="163" pos:column="19">(<argument><expr><operator pos:line="163" pos:column="20">&amp;<pos:position pos:line="163" pos:column="25"/></operator><name><name pos:line="163" pos:column="21">debug<pos:position pos:line="163" pos:column="26"/></name><index pos:line="163" pos:column="26">[<expr><name pos:line="163" pos:column="27">debug_pos<pos:position pos:line="163" pos:column="36"/></name></expr>]<pos:position pos:line="163" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="39">"     Token: not\n"<pos:position pos:line="163" pos:column="58"/></literal></expr></argument>,
                    <argument><expr><sizeof pos:line="164" pos:column="21">sizeof<argument_list pos:line="164" pos:column="27">(<argument><expr><literal type="string" pos:line="164" pos:column="28">"     Token: not\n"<pos:position pos:line="164" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="164" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name pos:line="165" pos:column="13">debug_pos<pos:position pos:line="165" pos:column="22"/></name> <operator pos:line="165" pos:column="23">+=<pos:position pos:line="165" pos:column="25"/></operator> <sizeof pos:line="165" pos:column="26">sizeof<argument_list pos:line="165" pos:column="32">(<argument><expr><literal type="string" pos:line="165" pos:column="33">"     Token: not\n"<pos:position pos:line="165" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="53"/></argument_list></sizeof></expr>;<pos:position pos:line="165" pos:column="54"/></expr_stmt>
<cpp:endif pos:line="166" pos:column="1">#<cpp:directive pos:line="166" pos:column="2">endif<pos:position pos:line="166" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="167" pos:column="13">if <condition pos:line="167" pos:column="16">(<expr><name pos:line="167" pos:column="17">current<pos:position pos:line="167" pos:column="24"/></name> <operator pos:line="167" pos:column="25">==<pos:position pos:line="167" pos:column="27"/></operator> <operator pos:line="167" pos:column="28">(<pos:position pos:line="167" pos:column="29"/></operator>struct <name pos:line="167" pos:column="36">parse_node<pos:position pos:line="167" pos:column="46"/></name> <operator pos:line="167" pos:column="47">*<pos:position pos:line="167" pos:column="48"/></operator><operator pos:line="167" pos:column="48">)<pos:position pos:line="167" pos:column="49"/></operator> <name pos:line="167" pos:column="50">NULL<pos:position pos:line="167" pos:column="54"/></name></expr>)<pos:position pos:line="167" pos:column="55"/></condition><then pos:line="167" pos:column="55"> <block pos:line="167" pos:column="56">{
                <expr_stmt><expr><name pos:line="168" pos:column="17">root<pos:position pos:line="168" pos:column="21"/></name> <operator pos:line="168" pos:column="22">=<pos:position pos:line="168" pos:column="23"/></operator> <name pos:line="168" pos:column="24">current<pos:position pos:line="168" pos:column="31"/></name> <operator pos:line="168" pos:column="32">=<pos:position pos:line="168" pos:column="33"/></operator> <operator pos:line="168" pos:column="34">new<pos:position pos:line="168" pos:column="37"/></operator></expr>;<pos:position pos:line="168" pos:column="38"/></expr_stmt>
                <break pos:line="169" pos:column="17">break;<pos:position pos:line="169" pos:column="23"/></break>
            }<pos:position pos:line="170" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="171" pos:column="13">/* Percolate upwards */</comment>
            <if pos:line="172" pos:column="13">if <condition pos:line="172" pos:column="16">(<expr><name pos:line="172" pos:column="17">current<pos:position pos:line="172" pos:column="24"/></name> <operator pos:line="172" pos:column="25">!=<pos:position pos:line="172" pos:column="27"/></operator> <operator pos:line="172" pos:column="28">(<pos:position pos:line="172" pos:column="29"/></operator>struct <name pos:line="172" pos:column="36">parse_node<pos:position pos:line="172" pos:column="46"/></name> <operator pos:line="172" pos:column="47">*<pos:position pos:line="172" pos:column="48"/></operator><operator pos:line="172" pos:column="48">)<pos:position pos:line="172" pos:column="49"/></operator> <name pos:line="172" pos:column="50">NULL<pos:position pos:line="172" pos:column="54"/></name></expr>)<pos:position pos:line="172" pos:column="55"/></condition><then pos:line="172" pos:column="55"> <block pos:line="172" pos:column="56">{
                <switch pos:line="173" pos:column="17">switch <condition pos:line="173" pos:column="24">(<expr><name><name pos:line="173" pos:column="25">current<pos:position pos:line="173" pos:column="32"/></name><operator pos:line="173" pos:column="32">-&gt;<pos:position pos:line="173" pos:column="37"/></operator><name pos:line="173" pos:column="34">token<pos:position pos:line="173" pos:column="39"/></name><operator pos:line="173" pos:column="39">.<pos:position pos:line="173" pos:column="40"/></operator><name pos:line="173" pos:column="40">type<pos:position pos:line="173" pos:column="44"/></name></name></expr>)<pos:position pos:line="173" pos:column="45"/></condition> <block pos:line="173" pos:column="46">{
                <case pos:line="174" pos:column="17">case <expr><name pos:line="174" pos:column="22">token_not<pos:position pos:line="174" pos:column="31"/></name></expr>:<pos:position pos:line="174" pos:column="32"/></case>
                <case pos:line="175" pos:column="17">case <expr><name pos:line="175" pos:column="22">token_eq<pos:position pos:line="175" pos:column="30"/></name></expr>:<pos:position pos:line="175" pos:column="31"/></case>
                <case pos:line="176" pos:column="17">case <expr><name pos:line="176" pos:column="22">token_ne<pos:position pos:line="176" pos:column="30"/></name></expr>:<pos:position pos:line="176" pos:column="31"/></case>
                <case pos:line="177" pos:column="17">case <expr><name pos:line="177" pos:column="22">token_and<pos:position pos:line="177" pos:column="31"/></name></expr>:<pos:position pos:line="177" pos:column="32"/></case>
                <case pos:line="178" pos:column="17">case <expr><name pos:line="178" pos:column="22">token_or<pos:position pos:line="178" pos:column="30"/></name></expr>:<pos:position pos:line="178" pos:column="31"/></case>
                <case pos:line="179" pos:column="17">case <expr><name pos:line="179" pos:column="22">token_lbrace<pos:position pos:line="179" pos:column="34"/></name></expr>:<pos:position pos:line="179" pos:column="35"/></case>
                <case pos:line="180" pos:column="17">case <expr><name pos:line="180" pos:column="22">token_ge<pos:position pos:line="180" pos:column="30"/></name></expr>:<pos:position pos:line="180" pos:column="31"/></case>
                <case pos:line="181" pos:column="17">case <expr><name pos:line="181" pos:column="22">token_gt<pos:position pos:line="181" pos:column="30"/></name></expr>:<pos:position pos:line="181" pos:column="31"/></case>
                <case pos:line="182" pos:column="17">case <expr><name pos:line="182" pos:column="22">token_le<pos:position pos:line="182" pos:column="30"/></name></expr>:<pos:position pos:line="182" pos:column="31"/></case>
                <case pos:line="183" pos:column="17">case <expr><name pos:line="183" pos:column="22">token_lt<pos:position pos:line="183" pos:column="30"/></name></expr>:<pos:position pos:line="183" pos:column="31"/></case>
                    <break pos:line="184" pos:column="21">break;<pos:position pos:line="184" pos:column="27"/></break>
                <default pos:line="185" pos:column="17">default:<pos:position pos:line="185" pos:column="25"/></default>
                    <expr_stmt><expr><call><name pos:line="186" pos:column="21">ap_log_rerror<pos:position pos:line="186" pos:column="34"/></name><argument_list pos:line="186" pos:column="34">(<argument><expr><name pos:line="186" pos:column="35">APLOG_MARK<pos:position pos:line="186" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="47">APLOG_ERR<pos:position pos:line="186" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="186" pos:column="58">0<pos:position pos:line="186" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="186" pos:column="61">r<pos:position pos:line="186" pos:column="62"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="187" pos:column="35">"Invalid expression \"%s\" in file %s"<pos:position pos:line="187" pos:column="73"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="188" pos:column="35">expr<pos:position pos:line="188" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="188" pos:column="41">r<pos:position pos:line="188" pos:column="42"/></name><operator pos:line="188" pos:column="42">-&gt;<pos:position pos:line="188" pos:column="47"/></operator><name pos:line="188" pos:column="44">filename<pos:position pos:line="188" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="188" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="54"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="189" pos:column="21">*<pos:position pos:line="189" pos:column="22"/></operator><name pos:line="189" pos:column="22">was_error<pos:position pos:line="189" pos:column="31"/></name> <operator pos:line="189" pos:column="32">=<pos:position pos:line="189" pos:column="33"/></operator> <literal type="number" pos:line="189" pos:column="34">1<pos:position pos:line="189" pos:column="35"/></literal></expr>;<pos:position pos:line="189" pos:column="36"/></expr_stmt>
                    <return pos:line="190" pos:column="21">return <expr><name pos:line="190" pos:column="28">retval<pos:position pos:line="190" pos:column="34"/></name></expr>;<pos:position pos:line="190" pos:column="35"/></return>
                }<pos:position pos:line="191" pos:column="18"/></block></switch>
            }<pos:position pos:line="192" pos:column="14"/></block></then></if>
            <if pos:line="193" pos:column="13">if <condition pos:line="193" pos:column="16">(<expr><name pos:line="193" pos:column="17">current<pos:position pos:line="193" pos:column="24"/></name> <operator pos:line="193" pos:column="25">==<pos:position pos:line="193" pos:column="27"/></operator> <operator pos:line="193" pos:column="28">(<pos:position pos:line="193" pos:column="29"/></operator>struct <name pos:line="193" pos:column="36">parse_node<pos:position pos:line="193" pos:column="46"/></name> <operator pos:line="193" pos:column="47">*<pos:position pos:line="193" pos:column="48"/></operator><operator pos:line="193" pos:column="48">)<pos:position pos:line="193" pos:column="49"/></operator> <name pos:line="193" pos:column="50">NULL<pos:position pos:line="193" pos:column="54"/></name></expr>)<pos:position pos:line="193" pos:column="55"/></condition><then pos:line="193" pos:column="55"> <block pos:line="193" pos:column="56">{
                <expr_stmt><expr><operator pos:line="194" pos:column="17">new<pos:position pos:line="194" pos:column="20"/></operator><operator pos:line="194" pos:column="20">-&gt;<pos:position pos:line="194" pos:column="25"/></operator><name pos:line="194" pos:column="22">left<pos:position pos:line="194" pos:column="26"/></name> <operator pos:line="194" pos:column="27">=<pos:position pos:line="194" pos:column="28"/></operator> <name pos:line="194" pos:column="29">root<pos:position pos:line="194" pos:column="33"/></name></expr>;<pos:position pos:line="194" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="195" pos:column="17">new<pos:position pos:line="195" pos:column="20"/></operator><operator pos:line="195" pos:column="20">-&gt;<pos:position pos:line="195" pos:column="25"/></operator><name><name pos:line="195" pos:column="22">left<pos:position pos:line="195" pos:column="26"/></name><operator pos:line="195" pos:column="26">-&gt;<pos:position pos:line="195" pos:column="31"/></operator><name pos:line="195" pos:column="28">parent<pos:position pos:line="195" pos:column="34"/></name></name> <operator pos:line="195" pos:column="35">=<pos:position pos:line="195" pos:column="36"/></operator> <operator pos:line="195" pos:column="37">new<pos:position pos:line="195" pos:column="40"/></operator></expr>;<pos:position pos:line="195" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="196" pos:column="17">new<pos:position pos:line="196" pos:column="20"/></operator><operator pos:line="196" pos:column="20">-&gt;<pos:position pos:line="196" pos:column="25"/></operator><name pos:line="196" pos:column="22">parent<pos:position pos:line="196" pos:column="28"/></name> <operator pos:line="196" pos:column="29">=<pos:position pos:line="196" pos:column="30"/></operator> <operator pos:line="196" pos:column="31">(<pos:position pos:line="196" pos:column="32"/></operator>struct <name pos:line="196" pos:column="39">parse_node<pos:position pos:line="196" pos:column="49"/></name> <operator pos:line="196" pos:column="50">*<pos:position pos:line="196" pos:column="51"/></operator><operator pos:line="196" pos:column="51">)<pos:position pos:line="196" pos:column="52"/></operator> <name pos:line="196" pos:column="53">NULL<pos:position pos:line="196" pos:column="57"/></name></expr>;<pos:position pos:line="196" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name pos:line="197" pos:column="17">root<pos:position pos:line="197" pos:column="21"/></name> <operator pos:line="197" pos:column="22">=<pos:position pos:line="197" pos:column="23"/></operator> <operator pos:line="197" pos:column="24">new<pos:position pos:line="197" pos:column="27"/></operator></expr>;<pos:position pos:line="197" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="198" pos:column="14"/></block></then>
            <else pos:line="199" pos:column="13">else <block pos:line="199" pos:column="18">{
                <expr_stmt><expr><operator pos:line="200" pos:column="17">new<pos:position pos:line="200" pos:column="20"/></operator><operator pos:line="200" pos:column="20">-&gt;<pos:position pos:line="200" pos:column="25"/></operator><name pos:line="200" pos:column="22">left<pos:position pos:line="200" pos:column="26"/></name> <operator pos:line="200" pos:column="27">=<pos:position pos:line="200" pos:column="28"/></operator> <name><name pos:line="200" pos:column="29">current<pos:position pos:line="200" pos:column="36"/></name><operator pos:line="200" pos:column="36">-&gt;<pos:position pos:line="200" pos:column="41"/></operator><name pos:line="200" pos:column="38">right<pos:position pos:line="200" pos:column="43"/></name></name></expr>;<pos:position pos:line="200" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="201" pos:column="17">current<pos:position pos:line="201" pos:column="24"/></name><operator pos:line="201" pos:column="24">-&gt;<pos:position pos:line="201" pos:column="29"/></operator><name pos:line="201" pos:column="26">right<pos:position pos:line="201" pos:column="31"/></name></name> <operator pos:line="201" pos:column="32">=<pos:position pos:line="201" pos:column="33"/></operator> <operator pos:line="201" pos:column="34">new<pos:position pos:line="201" pos:column="37"/></operator></expr>;<pos:position pos:line="201" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="202" pos:column="17">new<pos:position pos:line="202" pos:column="20"/></operator><operator pos:line="202" pos:column="20">-&gt;<pos:position pos:line="202" pos:column="25"/></operator><name pos:line="202" pos:column="22">parent<pos:position pos:line="202" pos:column="28"/></name> <operator pos:line="202" pos:column="29">=<pos:position pos:line="202" pos:column="30"/></operator> <name pos:line="202" pos:column="31">current<pos:position pos:line="202" pos:column="38"/></name></expr>;<pos:position pos:line="202" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="203" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="204" pos:column="13">current<pos:position pos:line="204" pos:column="20"/></name> <operator pos:line="204" pos:column="21">=<pos:position pos:line="204" pos:column="22"/></operator> <operator pos:line="204" pos:column="23">new<pos:position pos:line="204" pos:column="26"/></operator></expr>;<pos:position pos:line="204" pos:column="27"/></expr_stmt>
            <break pos:line="205" pos:column="13">break;<pos:position pos:line="205" pos:column="19"/></break>

        <case pos:line="207" pos:column="9">case <expr><name pos:line="207" pos:column="14">token_eq<pos:position pos:line="207" pos:column="22"/></name></expr>:<pos:position pos:line="207" pos:column="23"/></case>
        <case pos:line="208" pos:column="9">case <expr><name pos:line="208" pos:column="14">token_ne<pos:position pos:line="208" pos:column="22"/></name></expr>:<pos:position pos:line="208" pos:column="23"/></case>
        <case pos:line="209" pos:column="9">case <expr><name pos:line="209" pos:column="14">token_ge<pos:position pos:line="209" pos:column="22"/></name></expr>:<pos:position pos:line="209" pos:column="23"/></case>
        <case pos:line="210" pos:column="9">case <expr><name pos:line="210" pos:column="14">token_gt<pos:position pos:line="210" pos:column="22"/></name></expr>:<pos:position pos:line="210" pos:column="23"/></case>
        <case pos:line="211" pos:column="9">case <expr><name pos:line="211" pos:column="14">token_le<pos:position pos:line="211" pos:column="22"/></name></expr>:<pos:position pos:line="211" pos:column="23"/></case>
        <case pos:line="212" pos:column="9">case <expr><name pos:line="212" pos:column="14">token_lt<pos:position pos:line="212" pos:column="22"/></name></expr>:<pos:position pos:line="212" pos:column="23"/></case>
<cpp:ifdef pos:line="213" pos:column="1">#<cpp:directive pos:line="213" pos:column="2">ifdef<pos:position pos:line="213" pos:column="7"/></cpp:directive> <name pos:line="213" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="213" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="214" pos:column="13">memcpy<pos:position pos:line="214" pos:column="19"/></name><argument_list pos:line="214" pos:column="19">(<argument><expr><operator pos:line="214" pos:column="20">&amp;<pos:position pos:line="214" pos:column="25"/></operator><name><name pos:line="214" pos:column="21">debug<pos:position pos:line="214" pos:column="26"/></name><index pos:line="214" pos:column="26">[<expr><name pos:line="214" pos:column="27">debug_pos<pos:position pos:line="214" pos:column="36"/></name></expr>]<pos:position pos:line="214" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="39">"     Token: eq/ne/ge/gt/le/lt\n"<pos:position pos:line="214" pos:column="72"/></literal></expr></argument>,
                    <argument><expr><sizeof pos:line="215" pos:column="21">sizeof<argument_list pos:line="215" pos:column="27">(<argument><expr><literal type="string" pos:line="215" pos:column="28">"     Token: eq/ne/ge/gt/le/lt\n"<pos:position pos:line="215" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="215" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><name pos:line="216" pos:column="13">debug_pos<pos:position pos:line="216" pos:column="22"/></name> <operator pos:line="216" pos:column="23">+=<pos:position pos:line="216" pos:column="25"/></operator> <sizeof pos:line="216" pos:column="26">sizeof<argument_list pos:line="216" pos:column="32">(<argument><expr><literal type="string" pos:line="216" pos:column="33">"     Token: eq/ne/ge/gt/le/lt\n"<pos:position pos:line="216" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="67"/></argument_list></sizeof></expr>;<pos:position pos:line="216" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="217" pos:column="1">#<cpp:directive pos:line="217" pos:column="2">endif<pos:position pos:line="217" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="218" pos:column="13">if <condition pos:line="218" pos:column="16">(<expr><name pos:line="218" pos:column="17">current<pos:position pos:line="218" pos:column="24"/></name> <operator pos:line="218" pos:column="25">==<pos:position pos:line="218" pos:column="27"/></operator> <operator pos:line="218" pos:column="28">(<pos:position pos:line="218" pos:column="29"/></operator>struct <name pos:line="218" pos:column="36">parse_node<pos:position pos:line="218" pos:column="46"/></name> <operator pos:line="218" pos:column="47">*<pos:position pos:line="218" pos:column="48"/></operator><operator pos:line="218" pos:column="48">)<pos:position pos:line="218" pos:column="49"/></operator> <name pos:line="218" pos:column="50">NULL<pos:position pos:line="218" pos:column="54"/></name></expr>)<pos:position pos:line="218" pos:column="55"/></condition><then pos:line="218" pos:column="55"> <block pos:line="218" pos:column="56">{
                <expr_stmt><expr><call><name pos:line="219" pos:column="17">ap_log_rerror<pos:position pos:line="219" pos:column="30"/></name><argument_list pos:line="219" pos:column="30">(<argument><expr><name pos:line="219" pos:column="31">APLOG_MARK<pos:position pos:line="219" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="43">APLOG_ERR<pos:position pos:line="219" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="219" pos:column="54">0<pos:position pos:line="219" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="219" pos:column="57">r<pos:position pos:line="219" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="220" pos:column="31">"Invalid expression \"%s\" in file %s"<pos:position pos:line="220" pos:column="69"/></literal></expr></argument>,
                              <argument><expr><name pos:line="221" pos:column="31">expr<pos:position pos:line="221" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="221" pos:column="37">r<pos:position pos:line="221" pos:column="38"/></name><operator pos:line="221" pos:column="38">-&gt;<pos:position pos:line="221" pos:column="43"/></operator><name pos:line="221" pos:column="40">filename<pos:position pos:line="221" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="221" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="222" pos:column="17">*<pos:position pos:line="222" pos:column="18"/></operator><name pos:line="222" pos:column="18">was_error<pos:position pos:line="222" pos:column="27"/></name> <operator pos:line="222" pos:column="28">=<pos:position pos:line="222" pos:column="29"/></operator> <literal type="number" pos:line="222" pos:column="30">1<pos:position pos:line="222" pos:column="31"/></literal></expr>;<pos:position pos:line="222" pos:column="32"/></expr_stmt>
                <return pos:line="223" pos:column="17">return <expr><name pos:line="223" pos:column="24">retval<pos:position pos:line="223" pos:column="30"/></name></expr>;<pos:position pos:line="223" pos:column="31"/></return>
            }<pos:position pos:line="224" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="225" pos:column="13">/* Percolate upwards */</comment>
            <while pos:line="226" pos:column="13">while <condition pos:line="226" pos:column="19">(<expr><name pos:line="226" pos:column="20">current<pos:position pos:line="226" pos:column="27"/></name> <operator pos:line="226" pos:column="28">!=<pos:position pos:line="226" pos:column="30"/></operator> <operator pos:line="226" pos:column="31">(<pos:position pos:line="226" pos:column="32"/></operator>struct <name pos:line="226" pos:column="39">parse_node<pos:position pos:line="226" pos:column="49"/></name> <operator pos:line="226" pos:column="50">*<pos:position pos:line="226" pos:column="51"/></operator><operator pos:line="226" pos:column="51">)<pos:position pos:line="226" pos:column="52"/></operator> <name pos:line="226" pos:column="53">NULL<pos:position pos:line="226" pos:column="57"/></name></expr>)<pos:position pos:line="226" pos:column="58"/></condition> <block pos:line="226" pos:column="59">{
                <switch pos:line="227" pos:column="17">switch <condition pos:line="227" pos:column="24">(<expr><name><name pos:line="227" pos:column="25">current<pos:position pos:line="227" pos:column="32"/></name><operator pos:line="227" pos:column="32">-&gt;<pos:position pos:line="227" pos:column="37"/></operator><name pos:line="227" pos:column="34">token<pos:position pos:line="227" pos:column="39"/></name><operator pos:line="227" pos:column="39">.<pos:position pos:line="227" pos:column="40"/></operator><name pos:line="227" pos:column="40">type<pos:position pos:line="227" pos:column="44"/></name></name></expr>)<pos:position pos:line="227" pos:column="45"/></condition> <block pos:line="227" pos:column="46">{
                <case pos:line="228" pos:column="17">case <expr><name pos:line="228" pos:column="22">token_string<pos:position pos:line="228" pos:column="34"/></name></expr>:<pos:position pos:line="228" pos:column="35"/></case>
                <case pos:line="229" pos:column="17">case <expr><name pos:line="229" pos:column="22">token_re<pos:position pos:line="229" pos:column="30"/></name></expr>:<pos:position pos:line="229" pos:column="31"/></case>
                <case pos:line="230" pos:column="17">case <expr><name pos:line="230" pos:column="22">token_group<pos:position pos:line="230" pos:column="33"/></name></expr>:<pos:position pos:line="230" pos:column="34"/></case>
                    <expr_stmt><expr><name pos:line="231" pos:column="21">current<pos:position pos:line="231" pos:column="28"/></name> <operator pos:line="231" pos:column="29">=<pos:position pos:line="231" pos:column="30"/></operator> <name><name pos:line="231" pos:column="31">current<pos:position pos:line="231" pos:column="38"/></name><operator pos:line="231" pos:column="38">-&gt;<pos:position pos:line="231" pos:column="43"/></operator><name pos:line="231" pos:column="40">parent<pos:position pos:line="231" pos:column="46"/></name></name></expr>;<pos:position pos:line="231" pos:column="47"/></expr_stmt>
                    <continue pos:line="232" pos:column="21">continue;<pos:position pos:line="232" pos:column="30"/></continue>
                <case pos:line="233" pos:column="17">case <expr><name pos:line="233" pos:column="22">token_lbrace<pos:position pos:line="233" pos:column="34"/></name></expr>:<pos:position pos:line="233" pos:column="35"/></case>
                <case pos:line="234" pos:column="17">case <expr><name pos:line="234" pos:column="22">token_and<pos:position pos:line="234" pos:column="31"/></name></expr>:<pos:position pos:line="234" pos:column="32"/></case>
                <case pos:line="235" pos:column="17">case <expr><name pos:line="235" pos:column="22">token_or<pos:position pos:line="235" pos:column="30"/></name></expr>:<pos:position pos:line="235" pos:column="31"/></case>
                    <break pos:line="236" pos:column="21">break;<pos:position pos:line="236" pos:column="27"/></break>
                <case pos:line="237" pos:column="17">case <expr><name pos:line="237" pos:column="22">token_not<pos:position pos:line="237" pos:column="31"/></name></expr>:<pos:position pos:line="237" pos:column="32"/></case>
                <case pos:line="238" pos:column="17">case <expr><name pos:line="238" pos:column="22">token_eq<pos:position pos:line="238" pos:column="30"/></name></expr>:<pos:position pos:line="238" pos:column="31"/></case>
                <case pos:line="239" pos:column="17">case <expr><name pos:line="239" pos:column="22">token_ne<pos:position pos:line="239" pos:column="30"/></name></expr>:<pos:position pos:line="239" pos:column="31"/></case>
                <case pos:line="240" pos:column="17">case <expr><name pos:line="240" pos:column="22">token_ge<pos:position pos:line="240" pos:column="30"/></name></expr>:<pos:position pos:line="240" pos:column="31"/></case>
                <case pos:line="241" pos:column="17">case <expr><name pos:line="241" pos:column="22">token_gt<pos:position pos:line="241" pos:column="30"/></name></expr>:<pos:position pos:line="241" pos:column="31"/></case>
                <case pos:line="242" pos:column="17">case <expr><name pos:line="242" pos:column="22">token_le<pos:position pos:line="242" pos:column="30"/></name></expr>:<pos:position pos:line="242" pos:column="31"/></case>
                <case pos:line="243" pos:column="17">case <expr><name pos:line="243" pos:column="22">token_lt<pos:position pos:line="243" pos:column="30"/></name></expr>:<pos:position pos:line="243" pos:column="31"/></case>
                <default pos:line="244" pos:column="17">default:<pos:position pos:line="244" pos:column="25"/></default>
                    <expr_stmt><expr><call><name pos:line="245" pos:column="21">ap_log_rerror<pos:position pos:line="245" pos:column="34"/></name><argument_list pos:line="245" pos:column="34">(<argument><expr><name pos:line="245" pos:column="35">APLOG_MARK<pos:position pos:line="245" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="47">APLOG_ERR<pos:position pos:line="245" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="245" pos:column="58">0<pos:position pos:line="245" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="245" pos:column="61">r<pos:position pos:line="245" pos:column="62"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="246" pos:column="33">"Invalid expression \"%s\" in file %s"<pos:position pos:line="246" pos:column="71"/></literal></expr></argument>,
                                <argument><expr><name pos:line="247" pos:column="33">expr<pos:position pos:line="247" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="247" pos:column="39">r<pos:position pos:line="247" pos:column="40"/></name><operator pos:line="247" pos:column="40">-&gt;<pos:position pos:line="247" pos:column="45"/></operator><name pos:line="247" pos:column="42">filename<pos:position pos:line="247" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="247" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="52"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="248" pos:column="21">*<pos:position pos:line="248" pos:column="22"/></operator><name pos:line="248" pos:column="22">was_error<pos:position pos:line="248" pos:column="31"/></name> <operator pos:line="248" pos:column="32">=<pos:position pos:line="248" pos:column="33"/></operator> <literal type="number" pos:line="248" pos:column="34">1<pos:position pos:line="248" pos:column="35"/></literal></expr>;<pos:position pos:line="248" pos:column="36"/></expr_stmt>
                    <return pos:line="249" pos:column="21">return <expr><name pos:line="249" pos:column="28">retval<pos:position pos:line="249" pos:column="34"/></name></expr>;<pos:position pos:line="249" pos:column="35"/></return>
                }<pos:position pos:line="250" pos:column="18"/></block></switch>
                <break pos:line="251" pos:column="17">break;<pos:position pos:line="251" pos:column="23"/></break>
            }<pos:position pos:line="252" pos:column="14"/></block></while>
            <if pos:line="253" pos:column="13">if <condition pos:line="253" pos:column="16">(<expr><name pos:line="253" pos:column="17">current<pos:position pos:line="253" pos:column="24"/></name> <operator pos:line="253" pos:column="25">==<pos:position pos:line="253" pos:column="27"/></operator> <operator pos:line="253" pos:column="28">(<pos:position pos:line="253" pos:column="29"/></operator>struct <name pos:line="253" pos:column="36">parse_node<pos:position pos:line="253" pos:column="46"/></name> <operator pos:line="253" pos:column="47">*<pos:position pos:line="253" pos:column="48"/></operator><operator pos:line="253" pos:column="48">)<pos:position pos:line="253" pos:column="49"/></operator> <name pos:line="253" pos:column="50">NULL<pos:position pos:line="253" pos:column="54"/></name></expr>)<pos:position pos:line="253" pos:column="55"/></condition><then pos:line="253" pos:column="55"> <block pos:line="253" pos:column="56">{
                <expr_stmt><expr><operator pos:line="254" pos:column="17">new<pos:position pos:line="254" pos:column="20"/></operator><operator pos:line="254" pos:column="20">-&gt;<pos:position pos:line="254" pos:column="25"/></operator><name pos:line="254" pos:column="22">left<pos:position pos:line="254" pos:column="26"/></name> <operator pos:line="254" pos:column="27">=<pos:position pos:line="254" pos:column="28"/></operator> <name pos:line="254" pos:column="29">root<pos:position pos:line="254" pos:column="33"/></name></expr>;<pos:position pos:line="254" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="255" pos:column="17">new<pos:position pos:line="255" pos:column="20"/></operator><operator pos:line="255" pos:column="20">-&gt;<pos:position pos:line="255" pos:column="25"/></operator><name><name pos:line="255" pos:column="22">left<pos:position pos:line="255" pos:column="26"/></name><operator pos:line="255" pos:column="26">-&gt;<pos:position pos:line="255" pos:column="31"/></operator><name pos:line="255" pos:column="28">parent<pos:position pos:line="255" pos:column="34"/></name></name> <operator pos:line="255" pos:column="35">=<pos:position pos:line="255" pos:column="36"/></operator> <operator pos:line="255" pos:column="37">new<pos:position pos:line="255" pos:column="40"/></operator></expr>;<pos:position pos:line="255" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="256" pos:column="17">new<pos:position pos:line="256" pos:column="20"/></operator><operator pos:line="256" pos:column="20">-&gt;<pos:position pos:line="256" pos:column="25"/></operator><name pos:line="256" pos:column="22">parent<pos:position pos:line="256" pos:column="28"/></name> <operator pos:line="256" pos:column="29">=<pos:position pos:line="256" pos:column="30"/></operator> <operator pos:line="256" pos:column="31">(<pos:position pos:line="256" pos:column="32"/></operator>struct <name pos:line="256" pos:column="39">parse_node<pos:position pos:line="256" pos:column="49"/></name> <operator pos:line="256" pos:column="50">*<pos:position pos:line="256" pos:column="51"/></operator><operator pos:line="256" pos:column="51">)<pos:position pos:line="256" pos:column="52"/></operator> <name pos:line="256" pos:column="53">NULL<pos:position pos:line="256" pos:column="57"/></name></expr>;<pos:position pos:line="256" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name pos:line="257" pos:column="17">root<pos:position pos:line="257" pos:column="21"/></name> <operator pos:line="257" pos:column="22">=<pos:position pos:line="257" pos:column="23"/></operator> <operator pos:line="257" pos:column="24">new<pos:position pos:line="257" pos:column="27"/></operator></expr>;<pos:position pos:line="257" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="258" pos:column="14"/></block></then>
            <else pos:line="259" pos:column="13">else <block pos:line="259" pos:column="18">{
                <expr_stmt><expr><operator pos:line="260" pos:column="17">new<pos:position pos:line="260" pos:column="20"/></operator><operator pos:line="260" pos:column="20">-&gt;<pos:position pos:line="260" pos:column="25"/></operator><name pos:line="260" pos:column="22">left<pos:position pos:line="260" pos:column="26"/></name> <operator pos:line="260" pos:column="27">=<pos:position pos:line="260" pos:column="28"/></operator> <name><name pos:line="260" pos:column="29">current<pos:position pos:line="260" pos:column="36"/></name><operator pos:line="260" pos:column="36">-&gt;<pos:position pos:line="260" pos:column="41"/></operator><name pos:line="260" pos:column="38">right<pos:position pos:line="260" pos:column="43"/></name></name></expr>;<pos:position pos:line="260" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="261" pos:column="17">new<pos:position pos:line="261" pos:column="20"/></operator><operator pos:line="261" pos:column="20">-&gt;<pos:position pos:line="261" pos:column="25"/></operator><name><name pos:line="261" pos:column="22">left<pos:position pos:line="261" pos:column="26"/></name><operator pos:line="261" pos:column="26">-&gt;<pos:position pos:line="261" pos:column="31"/></operator><name pos:line="261" pos:column="28">parent<pos:position pos:line="261" pos:column="34"/></name></name> <operator pos:line="261" pos:column="35">=<pos:position pos:line="261" pos:column="36"/></operator> <operator pos:line="261" pos:column="37">new<pos:position pos:line="261" pos:column="40"/></operator></expr>;<pos:position pos:line="261" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="262" pos:column="17">current<pos:position pos:line="262" pos:column="24"/></name><operator pos:line="262" pos:column="24">-&gt;<pos:position pos:line="262" pos:column="29"/></operator><name pos:line="262" pos:column="26">right<pos:position pos:line="262" pos:column="31"/></name></name> <operator pos:line="262" pos:column="32">=<pos:position pos:line="262" pos:column="33"/></operator> <operator pos:line="262" pos:column="34">new<pos:position pos:line="262" pos:column="37"/></operator></expr>;<pos:position pos:line="262" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="263" pos:column="17">new<pos:position pos:line="263" pos:column="20"/></operator><operator pos:line="263" pos:column="20">-&gt;<pos:position pos:line="263" pos:column="25"/></operator><name pos:line="263" pos:column="22">parent<pos:position pos:line="263" pos:column="28"/></name> <operator pos:line="263" pos:column="29">=<pos:position pos:line="263" pos:column="30"/></operator> <name pos:line="263" pos:column="31">current<pos:position pos:line="263" pos:column="38"/></name></expr>;<pos:position pos:line="263" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="264" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="265" pos:column="13">current<pos:position pos:line="265" pos:column="20"/></name> <operator pos:line="265" pos:column="21">=<pos:position pos:line="265" pos:column="22"/></operator> <operator pos:line="265" pos:column="23">new<pos:position pos:line="265" pos:column="26"/></operator></expr>;<pos:position pos:line="265" pos:column="27"/></expr_stmt>
            <break pos:line="266" pos:column="13">break;<pos:position pos:line="266" pos:column="19"/></break>

        <case pos:line="268" pos:column="9">case <expr><name pos:line="268" pos:column="14">token_rbrace<pos:position pos:line="268" pos:column="26"/></name></expr>:<pos:position pos:line="268" pos:column="27"/></case>
<cpp:ifdef pos:line="269" pos:column="1">#<cpp:directive pos:line="269" pos:column="2">ifdef<pos:position pos:line="269" pos:column="7"/></cpp:directive> <name pos:line="269" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="269" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="270" pos:column="13">memcpy<pos:position pos:line="270" pos:column="19"/></name> <argument_list pos:line="270" pos:column="20">(<argument><expr><operator pos:line="270" pos:column="21">&amp;<pos:position pos:line="270" pos:column="26"/></operator><name><name pos:line="270" pos:column="22">debug<pos:position pos:line="270" pos:column="27"/></name><index pos:line="270" pos:column="27">[<expr><name pos:line="270" pos:column="28">debug_pos<pos:position pos:line="270" pos:column="37"/></name></expr>]<pos:position pos:line="270" pos:column="38"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="270" pos:column="40">"     Token: rbrace\n"<pos:position pos:line="270" pos:column="62"/></literal></expr></argument>,
                    <argument><expr><sizeof pos:line="271" pos:column="21">sizeof <argument_list pos:line="271" pos:column="28">(<argument><expr><literal type="string" pos:line="271" pos:column="29">"     Token: rbrace\n"<pos:position pos:line="271" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="271" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="271" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="272" pos:column="13">debug_pos<pos:position pos:line="272" pos:column="22"/></name> <operator pos:line="272" pos:column="23">+=<pos:position pos:line="272" pos:column="25"/></operator> <sizeof pos:line="272" pos:column="26">sizeof <argument_list pos:line="272" pos:column="33">(<argument><expr><literal type="string" pos:line="272" pos:column="34">"     Token: rbrace\n"<pos:position pos:line="272" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="272" pos:column="57"/></argument_list></sizeof></expr>;<pos:position pos:line="272" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="273" pos:column="1">#<cpp:directive pos:line="273" pos:column="2">endif<pos:position pos:line="273" pos:column="7"/></cpp:directive></cpp:endif>
            <while pos:line="274" pos:column="13">while <condition pos:line="274" pos:column="19">(<expr><name pos:line="274" pos:column="20">current<pos:position pos:line="274" pos:column="27"/></name> <operator pos:line="274" pos:column="28">!=<pos:position pos:line="274" pos:column="30"/></operator> <operator pos:line="274" pos:column="31">(<pos:position pos:line="274" pos:column="32"/></operator>struct <name pos:line="274" pos:column="39">parse_node<pos:position pos:line="274" pos:column="49"/></name> <operator pos:line="274" pos:column="50">*<pos:position pos:line="274" pos:column="51"/></operator><operator pos:line="274" pos:column="51">)<pos:position pos:line="274" pos:column="52"/></operator> <name pos:line="274" pos:column="53">NULL<pos:position pos:line="274" pos:column="57"/></name></expr>)<pos:position pos:line="274" pos:column="58"/></condition> <block pos:line="274" pos:column="59">{
                <if pos:line="275" pos:column="17">if <condition pos:line="275" pos:column="20">(<expr><name><name pos:line="275" pos:column="21">current<pos:position pos:line="275" pos:column="28"/></name><operator pos:line="275" pos:column="28">-&gt;<pos:position pos:line="275" pos:column="33"/></operator><name pos:line="275" pos:column="30">token<pos:position pos:line="275" pos:column="35"/></name><operator pos:line="275" pos:column="35">.<pos:position pos:line="275" pos:column="36"/></operator><name pos:line="275" pos:column="36">type<pos:position pos:line="275" pos:column="40"/></name></name> <operator pos:line="275" pos:column="41">==<pos:position pos:line="275" pos:column="43"/></operator> <name pos:line="275" pos:column="44">token_lbrace<pos:position pos:line="275" pos:column="56"/></name></expr>)<pos:position pos:line="275" pos:column="57"/></condition><then pos:line="275" pos:column="57"> <block pos:line="275" pos:column="58">{
                    <expr_stmt><expr><name><name pos:line="276" pos:column="21">current<pos:position pos:line="276" pos:column="28"/></name><operator pos:line="276" pos:column="28">-&gt;<pos:position pos:line="276" pos:column="33"/></operator><name pos:line="276" pos:column="30">token<pos:position pos:line="276" pos:column="35"/></name><operator pos:line="276" pos:column="35">.<pos:position pos:line="276" pos:column="36"/></operator><name pos:line="276" pos:column="36">type<pos:position pos:line="276" pos:column="40"/></name></name> <operator pos:line="276" pos:column="41">=<pos:position pos:line="276" pos:column="42"/></operator> <name pos:line="276" pos:column="43">token_group<pos:position pos:line="276" pos:column="54"/></name></expr>;<pos:position pos:line="276" pos:column="55"/></expr_stmt>
                    <break pos:line="277" pos:column="21">break;<pos:position pos:line="277" pos:column="27"/></break>
                }<pos:position pos:line="278" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="279" pos:column="17">current<pos:position pos:line="279" pos:column="24"/></name> <operator pos:line="279" pos:column="25">=<pos:position pos:line="279" pos:column="26"/></operator> <name><name pos:line="279" pos:column="27">current<pos:position pos:line="279" pos:column="34"/></name><operator pos:line="279" pos:column="34">-&gt;<pos:position pos:line="279" pos:column="39"/></operator><name pos:line="279" pos:column="36">parent<pos:position pos:line="279" pos:column="42"/></name></name></expr>;<pos:position pos:line="279" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="280" pos:column="14"/></block></while>
            <if pos:line="281" pos:column="13">if <condition pos:line="281" pos:column="16">(<expr><name pos:line="281" pos:column="17">current<pos:position pos:line="281" pos:column="24"/></name> <operator pos:line="281" pos:column="25">==<pos:position pos:line="281" pos:column="27"/></operator> <operator pos:line="281" pos:column="28">(<pos:position pos:line="281" pos:column="29"/></operator>struct <name pos:line="281" pos:column="36">parse_node<pos:position pos:line="281" pos:column="46"/></name> <operator pos:line="281" pos:column="47">*<pos:position pos:line="281" pos:column="48"/></operator><operator pos:line="281" pos:column="48">)<pos:position pos:line="281" pos:column="49"/></operator> <name pos:line="281" pos:column="50">NULL<pos:position pos:line="281" pos:column="54"/></name></expr>)<pos:position pos:line="281" pos:column="55"/></condition><then pos:line="281" pos:column="55"> <block pos:line="281" pos:column="56">{
                <expr_stmt><expr><call><name pos:line="282" pos:column="17">ap_log_rerror<pos:position pos:line="282" pos:column="30"/></name><argument_list pos:line="282" pos:column="30">(<argument><expr><name pos:line="282" pos:column="31">APLOG_MARK<pos:position pos:line="282" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="282" pos:column="43">APLOG_ERR<pos:position pos:line="282" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="282" pos:column="54">0<pos:position pos:line="282" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="282" pos:column="57">r<pos:position pos:line="282" pos:column="58"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="283" pos:column="29">"Unmatched ')' in \"%s\" in file %s"<pos:position pos:line="283" pos:column="65"/></literal></expr></argument>,
                            <argument><expr><name pos:line="284" pos:column="29">expr<pos:position pos:line="284" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="284" pos:column="35">r<pos:position pos:line="284" pos:column="36"/></name><operator pos:line="284" pos:column="36">-&gt;<pos:position pos:line="284" pos:column="41"/></operator><name pos:line="284" pos:column="38">filename<pos:position pos:line="284" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="284" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="285" pos:column="17">*<pos:position pos:line="285" pos:column="18"/></operator><name pos:line="285" pos:column="18">was_error<pos:position pos:line="285" pos:column="27"/></name> <operator pos:line="285" pos:column="28">=<pos:position pos:line="285" pos:column="29"/></operator> <literal type="number" pos:line="285" pos:column="30">1<pos:position pos:line="285" pos:column="31"/></literal></expr>;<pos:position pos:line="285" pos:column="32"/></expr_stmt>
                <return pos:line="286" pos:column="17">return <expr><name pos:line="286" pos:column="24">retval<pos:position pos:line="286" pos:column="30"/></name></expr>;<pos:position pos:line="286" pos:column="31"/></return>
            }<pos:position pos:line="287" pos:column="14"/></block></then></if>
            <break pos:line="288" pos:column="13">break;<pos:position pos:line="288" pos:column="19"/></break>

        <case pos:line="290" pos:column="9">case <expr><name pos:line="290" pos:column="14">token_lbrace<pos:position pos:line="290" pos:column="26"/></name></expr>:<pos:position pos:line="290" pos:column="27"/></case>
<cpp:ifdef pos:line="291" pos:column="1">#<cpp:directive pos:line="291" pos:column="2">ifdef<pos:position pos:line="291" pos:column="7"/></cpp:directive> <name pos:line="291" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="291" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="292" pos:column="13">memcpy<pos:position pos:line="292" pos:column="19"/></name> <argument_list pos:line="292" pos:column="20">(<argument><expr><operator pos:line="292" pos:column="21">&amp;<pos:position pos:line="292" pos:column="26"/></operator><name><name pos:line="292" pos:column="22">debug<pos:position pos:line="292" pos:column="27"/></name><index pos:line="292" pos:column="27">[<expr><name pos:line="292" pos:column="28">debug_pos<pos:position pos:line="292" pos:column="37"/></name></expr>]<pos:position pos:line="292" pos:column="38"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="40">"     Token: lbrace\n"<pos:position pos:line="292" pos:column="62"/></literal></expr></argument>,
                    <argument><expr><sizeof pos:line="293" pos:column="21">sizeof <argument_list pos:line="293" pos:column="28">(<argument><expr><literal type="string" pos:line="293" pos:column="29">"     Token: lbrace\n"<pos:position pos:line="293" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="293" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="293" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="294" pos:column="13">debug_pos<pos:position pos:line="294" pos:column="22"/></name> <operator pos:line="294" pos:column="23">+=<pos:position pos:line="294" pos:column="25"/></operator> <sizeof pos:line="294" pos:column="26">sizeof <argument_list pos:line="294" pos:column="33">(<argument><expr><literal type="string" pos:line="294" pos:column="34">"     Token: lbrace\n"<pos:position pos:line="294" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="294" pos:column="57"/></argument_list></sizeof></expr>;<pos:position pos:line="294" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="295" pos:column="1">#<cpp:directive pos:line="295" pos:column="2">endif<pos:position pos:line="295" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="296" pos:column="13">if <condition pos:line="296" pos:column="16">(<expr><name pos:line="296" pos:column="17">current<pos:position pos:line="296" pos:column="24"/></name> <operator pos:line="296" pos:column="25">==<pos:position pos:line="296" pos:column="27"/></operator> <operator pos:line="296" pos:column="28">(<pos:position pos:line="296" pos:column="29"/></operator>struct <name pos:line="296" pos:column="36">parse_node<pos:position pos:line="296" pos:column="46"/></name> <operator pos:line="296" pos:column="47">*<pos:position pos:line="296" pos:column="48"/></operator><operator pos:line="296" pos:column="48">)<pos:position pos:line="296" pos:column="49"/></operator> <name pos:line="296" pos:column="50">NULL<pos:position pos:line="296" pos:column="54"/></name></expr>)<pos:position pos:line="296" pos:column="55"/></condition><then pos:line="296" pos:column="55"> <block pos:line="296" pos:column="56">{
                <expr_stmt><expr><name pos:line="297" pos:column="17">root<pos:position pos:line="297" pos:column="21"/></name> <operator pos:line="297" pos:column="22">=<pos:position pos:line="297" pos:column="23"/></operator> <name pos:line="297" pos:column="24">current<pos:position pos:line="297" pos:column="31"/></name> <operator pos:line="297" pos:column="32">=<pos:position pos:line="297" pos:column="33"/></operator> <operator pos:line="297" pos:column="34">new<pos:position pos:line="297" pos:column="37"/></operator></expr>;<pos:position pos:line="297" pos:column="38"/></expr_stmt>
                <break pos:line="298" pos:column="17">break;<pos:position pos:line="298" pos:column="23"/></break>
            }<pos:position pos:line="299" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="300" pos:column="13">/* Percolate upwards */</comment>
            <if pos:line="301" pos:column="13">if <condition pos:line="301" pos:column="16">(<expr><name pos:line="301" pos:column="17">current<pos:position pos:line="301" pos:column="24"/></name> <operator pos:line="301" pos:column="25">!=<pos:position pos:line="301" pos:column="27"/></operator> <operator pos:line="301" pos:column="28">(<pos:position pos:line="301" pos:column="29"/></operator>struct <name pos:line="301" pos:column="36">parse_node<pos:position pos:line="301" pos:column="46"/></name> <operator pos:line="301" pos:column="47">*<pos:position pos:line="301" pos:column="48"/></operator><operator pos:line="301" pos:column="48">)<pos:position pos:line="301" pos:column="49"/></operator> <name pos:line="301" pos:column="50">NULL<pos:position pos:line="301" pos:column="54"/></name></expr>)<pos:position pos:line="301" pos:column="55"/></condition><then pos:line="301" pos:column="55"> <block pos:line="301" pos:column="56">{
                <switch pos:line="302" pos:column="17">switch <condition pos:line="302" pos:column="24">(<expr><name><name pos:line="302" pos:column="25">current<pos:position pos:line="302" pos:column="32"/></name><operator pos:line="302" pos:column="32">-&gt;<pos:position pos:line="302" pos:column="37"/></operator><name pos:line="302" pos:column="34">token<pos:position pos:line="302" pos:column="39"/></name><operator pos:line="302" pos:column="39">.<pos:position pos:line="302" pos:column="40"/></operator><name pos:line="302" pos:column="40">type<pos:position pos:line="302" pos:column="44"/></name></name></expr>)<pos:position pos:line="302" pos:column="45"/></condition> <block pos:line="302" pos:column="46">{
                <case pos:line="303" pos:column="17">case <expr><name pos:line="303" pos:column="22">token_not<pos:position pos:line="303" pos:column="31"/></name></expr>:<pos:position pos:line="303" pos:column="32"/></case>
                <case pos:line="304" pos:column="17">case <expr><name pos:line="304" pos:column="22">token_eq<pos:position pos:line="304" pos:column="30"/></name></expr>:<pos:position pos:line="304" pos:column="31"/></case>
                <case pos:line="305" pos:column="17">case <expr><name pos:line="305" pos:column="22">token_ne<pos:position pos:line="305" pos:column="30"/></name></expr>:<pos:position pos:line="305" pos:column="31"/></case>
                <case pos:line="306" pos:column="17">case <expr><name pos:line="306" pos:column="22">token_and<pos:position pos:line="306" pos:column="31"/></name></expr>:<pos:position pos:line="306" pos:column="32"/></case>
                <case pos:line="307" pos:column="17">case <expr><name pos:line="307" pos:column="22">token_or<pos:position pos:line="307" pos:column="30"/></name></expr>:<pos:position pos:line="307" pos:column="31"/></case>
                <case pos:line="308" pos:column="17">case <expr><name pos:line="308" pos:column="22">token_lbrace<pos:position pos:line="308" pos:column="34"/></name></expr>:<pos:position pos:line="308" pos:column="35"/></case>
                <case pos:line="309" pos:column="17">case <expr><name pos:line="309" pos:column="22">token_ge<pos:position pos:line="309" pos:column="30"/></name></expr>:<pos:position pos:line="309" pos:column="31"/></case>
                <case pos:line="310" pos:column="17">case <expr><name pos:line="310" pos:column="22">token_gt<pos:position pos:line="310" pos:column="30"/></name></expr>:<pos:position pos:line="310" pos:column="31"/></case>
                <case pos:line="311" pos:column="17">case <expr><name pos:line="311" pos:column="22">token_le<pos:position pos:line="311" pos:column="30"/></name></expr>:<pos:position pos:line="311" pos:column="31"/></case>
                <case pos:line="312" pos:column="17">case <expr><name pos:line="312" pos:column="22">token_lt<pos:position pos:line="312" pos:column="30"/></name></expr>:<pos:position pos:line="312" pos:column="31"/></case>
                    <break pos:line="313" pos:column="21">break;<pos:position pos:line="313" pos:column="27"/></break>
                <case pos:line="314" pos:column="17">case <expr><name pos:line="314" pos:column="22">token_string<pos:position pos:line="314" pos:column="34"/></name></expr>:<pos:position pos:line="314" pos:column="35"/></case>
                <case pos:line="315" pos:column="17">case <expr><name pos:line="315" pos:column="22">token_re<pos:position pos:line="315" pos:column="30"/></name></expr>:<pos:position pos:line="315" pos:column="31"/></case>
                <case pos:line="316" pos:column="17">case <expr><name pos:line="316" pos:column="22">token_group<pos:position pos:line="316" pos:column="33"/></name></expr>:<pos:position pos:line="316" pos:column="34"/></case>
                <default pos:line="317" pos:column="17">default:<pos:position pos:line="317" pos:column="25"/></default>
                    <expr_stmt><expr><call><name pos:line="318" pos:column="21">ap_log_rerror<pos:position pos:line="318" pos:column="34"/></name><argument_list pos:line="318" pos:column="34">(<argument><expr><name pos:line="318" pos:column="35">APLOG_MARK<pos:position pos:line="318" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="318" pos:column="47">APLOG_ERR<pos:position pos:line="318" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="318" pos:column="58">0<pos:position pos:line="318" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="318" pos:column="61">r<pos:position pos:line="318" pos:column="62"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="319" pos:column="33">"Invalid expression \"%s\" in file %s"<pos:position pos:line="319" pos:column="71"/></literal></expr></argument>,
                                <argument><expr><name pos:line="320" pos:column="33">expr<pos:position pos:line="320" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="320" pos:column="39">r<pos:position pos:line="320" pos:column="40"/></name><operator pos:line="320" pos:column="40">-&gt;<pos:position pos:line="320" pos:column="45"/></operator><name pos:line="320" pos:column="42">filename<pos:position pos:line="320" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="320" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="52"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="321" pos:column="21">*<pos:position pos:line="321" pos:column="22"/></operator><name pos:line="321" pos:column="22">was_error<pos:position pos:line="321" pos:column="31"/></name> <operator pos:line="321" pos:column="32">=<pos:position pos:line="321" pos:column="33"/></operator> <literal type="number" pos:line="321" pos:column="34">1<pos:position pos:line="321" pos:column="35"/></literal></expr>;<pos:position pos:line="321" pos:column="36"/></expr_stmt>
                    <return pos:line="322" pos:column="21">return <expr><name pos:line="322" pos:column="28">retval<pos:position pos:line="322" pos:column="34"/></name></expr>;<pos:position pos:line="322" pos:column="35"/></return>
                }<pos:position pos:line="323" pos:column="18"/></block></switch>
            }<pos:position pos:line="324" pos:column="14"/></block></then></if>
            <if pos:line="325" pos:column="13">if <condition pos:line="325" pos:column="16">(<expr><name pos:line="325" pos:column="17">current<pos:position pos:line="325" pos:column="24"/></name> <operator pos:line="325" pos:column="25">==<pos:position pos:line="325" pos:column="27"/></operator> <operator pos:line="325" pos:column="28">(<pos:position pos:line="325" pos:column="29"/></operator>struct <name pos:line="325" pos:column="36">parse_node<pos:position pos:line="325" pos:column="46"/></name> <operator pos:line="325" pos:column="47">*<pos:position pos:line="325" pos:column="48"/></operator><operator pos:line="325" pos:column="48">)<pos:position pos:line="325" pos:column="49"/></operator> <name pos:line="325" pos:column="50">NULL<pos:position pos:line="325" pos:column="54"/></name></expr>)<pos:position pos:line="325" pos:column="55"/></condition><then pos:line="325" pos:column="55"> <block pos:line="325" pos:column="56">{
                <expr_stmt><expr><operator pos:line="326" pos:column="17">new<pos:position pos:line="326" pos:column="20"/></operator><operator pos:line="326" pos:column="20">-&gt;<pos:position pos:line="326" pos:column="25"/></operator><name pos:line="326" pos:column="22">left<pos:position pos:line="326" pos:column="26"/></name> <operator pos:line="326" pos:column="27">=<pos:position pos:line="326" pos:column="28"/></operator> <name pos:line="326" pos:column="29">root<pos:position pos:line="326" pos:column="33"/></name></expr>;<pos:position pos:line="326" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="327" pos:column="17">new<pos:position pos:line="327" pos:column="20"/></operator><operator pos:line="327" pos:column="20">-&gt;<pos:position pos:line="327" pos:column="25"/></operator><name><name pos:line="327" pos:column="22">left<pos:position pos:line="327" pos:column="26"/></name><operator pos:line="327" pos:column="26">-&gt;<pos:position pos:line="327" pos:column="31"/></operator><name pos:line="327" pos:column="28">parent<pos:position pos:line="327" pos:column="34"/></name></name> <operator pos:line="327" pos:column="35">=<pos:position pos:line="327" pos:column="36"/></operator> <operator pos:line="327" pos:column="37">new<pos:position pos:line="327" pos:column="40"/></operator></expr>;<pos:position pos:line="327" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="328" pos:column="17">new<pos:position pos:line="328" pos:column="20"/></operator><operator pos:line="328" pos:column="20">-&gt;<pos:position pos:line="328" pos:column="25"/></operator><name pos:line="328" pos:column="22">parent<pos:position pos:line="328" pos:column="28"/></name> <operator pos:line="328" pos:column="29">=<pos:position pos:line="328" pos:column="30"/></operator> <operator pos:line="328" pos:column="31">(<pos:position pos:line="328" pos:column="32"/></operator>struct <name pos:line="328" pos:column="39">parse_node<pos:position pos:line="328" pos:column="49"/></name> <operator pos:line="328" pos:column="50">*<pos:position pos:line="328" pos:column="51"/></operator><operator pos:line="328" pos:column="51">)<pos:position pos:line="328" pos:column="52"/></operator> <name pos:line="328" pos:column="53">NULL<pos:position pos:line="328" pos:column="57"/></name></expr>;<pos:position pos:line="328" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name pos:line="329" pos:column="17">root<pos:position pos:line="329" pos:column="21"/></name> <operator pos:line="329" pos:column="22">=<pos:position pos:line="329" pos:column="23"/></operator> <operator pos:line="329" pos:column="24">new<pos:position pos:line="329" pos:column="27"/></operator></expr>;<pos:position pos:line="329" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="330" pos:column="14"/></block></then>
            <else pos:line="331" pos:column="13">else <block pos:line="331" pos:column="18">{
                <expr_stmt><expr><operator pos:line="332" pos:column="17">new<pos:position pos:line="332" pos:column="20"/></operator><operator pos:line="332" pos:column="20">-&gt;<pos:position pos:line="332" pos:column="25"/></operator><name pos:line="332" pos:column="22">left<pos:position pos:line="332" pos:column="26"/></name> <operator pos:line="332" pos:column="27">=<pos:position pos:line="332" pos:column="28"/></operator> <name><name pos:line="332" pos:column="29">current<pos:position pos:line="332" pos:column="36"/></name><operator pos:line="332" pos:column="36">-&gt;<pos:position pos:line="332" pos:column="41"/></operator><name pos:line="332" pos:column="38">right<pos:position pos:line="332" pos:column="43"/></name></name></expr>;<pos:position pos:line="332" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="333" pos:column="17">current<pos:position pos:line="333" pos:column="24"/></name><operator pos:line="333" pos:column="24">-&gt;<pos:position pos:line="333" pos:column="29"/></operator><name pos:line="333" pos:column="26">right<pos:position pos:line="333" pos:column="31"/></name></name> <operator pos:line="333" pos:column="32">=<pos:position pos:line="333" pos:column="33"/></operator> <operator pos:line="333" pos:column="34">new<pos:position pos:line="333" pos:column="37"/></operator></expr>;<pos:position pos:line="333" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="334" pos:column="17">new<pos:position pos:line="334" pos:column="20"/></operator><operator pos:line="334" pos:column="20">-&gt;<pos:position pos:line="334" pos:column="25"/></operator><name pos:line="334" pos:column="22">parent<pos:position pos:line="334" pos:column="28"/></name> <operator pos:line="334" pos:column="29">=<pos:position pos:line="334" pos:column="30"/></operator> <name pos:line="334" pos:column="31">current<pos:position pos:line="334" pos:column="38"/></name></expr>;<pos:position pos:line="334" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="335" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="336" pos:column="13">current<pos:position pos:line="336" pos:column="20"/></name> <operator pos:line="336" pos:column="21">=<pos:position pos:line="336" pos:column="22"/></operator> <operator pos:line="336" pos:column="23">new<pos:position pos:line="336" pos:column="26"/></operator></expr>;<pos:position pos:line="336" pos:column="27"/></expr_stmt>
            <break pos:line="337" pos:column="13">break;<pos:position pos:line="337" pos:column="19"/></break>
        <default pos:line="338" pos:column="9">default:<pos:position pos:line="338" pos:column="17"/></default>
            <break pos:line="339" pos:column="13">break;<pos:position pos:line="339" pos:column="19"/></break>
        }<pos:position pos:line="340" pos:column="10"/></block></switch>
    }<pos:position pos:line="341" pos:column="6"/></block></while>

    <comment type="block" pos:line="343" pos:column="5">/* Evaluate Parse Tree */</comment>
    <expr_stmt><expr><name pos:line="344" pos:column="5">current<pos:position pos:line="344" pos:column="12"/></name> <operator pos:line="344" pos:column="13">=<pos:position pos:line="344" pos:column="14"/></operator> <name pos:line="344" pos:column="15">root<pos:position pos:line="344" pos:column="19"/></name></expr>;<pos:position pos:line="344" pos:column="20"/></expr_stmt>
    <while pos:line="345" pos:column="5">while <condition pos:line="345" pos:column="11">(<expr><name pos:line="345" pos:column="12">current<pos:position pos:line="345" pos:column="19"/></name> <operator pos:line="345" pos:column="20">!=<pos:position pos:line="345" pos:column="22"/></operator> <operator pos:line="345" pos:column="23">(<pos:position pos:line="345" pos:column="24"/></operator>struct <name pos:line="345" pos:column="31">parse_node<pos:position pos:line="345" pos:column="41"/></name> <operator pos:line="345" pos:column="42">*<pos:position pos:line="345" pos:column="43"/></operator><operator pos:line="345" pos:column="43">)<pos:position pos:line="345" pos:column="44"/></operator> <name pos:line="345" pos:column="45">NULL<pos:position pos:line="345" pos:column="49"/></name></expr>)<pos:position pos:line="345" pos:column="50"/></condition> <block pos:line="345" pos:column="51">{
        <switch pos:line="346" pos:column="9">switch <condition pos:line="346" pos:column="16">(<expr><name><name pos:line="346" pos:column="17">current<pos:position pos:line="346" pos:column="24"/></name><operator pos:line="346" pos:column="24">-&gt;<pos:position pos:line="346" pos:column="29"/></operator><name pos:line="346" pos:column="26">token<pos:position pos:line="346" pos:column="31"/></name><operator pos:line="346" pos:column="31">.<pos:position pos:line="346" pos:column="32"/></operator><name pos:line="346" pos:column="32">type<pos:position pos:line="346" pos:column="36"/></name></name></expr>)<pos:position pos:line="346" pos:column="37"/></condition> <block pos:line="346" pos:column="38">{
        <case pos:line="347" pos:column="9">case <expr><name pos:line="347" pos:column="14">token_string<pos:position pos:line="347" pos:column="26"/></name></expr>:<pos:position pos:line="347" pos:column="27"/></case>
<cpp:ifdef pos:line="348" pos:column="1">#<cpp:directive pos:line="348" pos:column="2">ifdef<pos:position pos:line="348" pos:column="7"/></cpp:directive> <name pos:line="348" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="348" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="349" pos:column="13">memcpy<pos:position pos:line="349" pos:column="19"/></name> <argument_list pos:line="349" pos:column="20">(<argument><expr><operator pos:line="349" pos:column="21">&amp;<pos:position pos:line="349" pos:column="26"/></operator><name><name pos:line="349" pos:column="22">debug<pos:position pos:line="349" pos:column="27"/></name><index pos:line="349" pos:column="27">[<expr><name pos:line="349" pos:column="28">debug_pos<pos:position pos:line="349" pos:column="37"/></name></expr>]<pos:position pos:line="349" pos:column="38"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="349" pos:column="40">"     Evaluate string\n"<pos:position pos:line="349" pos:column="64"/></literal></expr></argument>,
                    <argument><expr><sizeof pos:line="350" pos:column="21">sizeof <argument_list pos:line="350" pos:column="28">(<argument><expr><literal type="string" pos:line="350" pos:column="29">"     Evaluate string\n"<pos:position pos:line="350" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="350" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="350" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name pos:line="351" pos:column="13">debug_pos<pos:position pos:line="351" pos:column="22"/></name> <operator pos:line="351" pos:column="23">+=<pos:position pos:line="351" pos:column="25"/></operator> <sizeof pos:line="351" pos:column="26">sizeof <argument_list pos:line="351" pos:column="33">(<argument><expr><literal type="string" pos:line="351" pos:column="34">"     Evaluate string\n"<pos:position pos:line="351" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="351" pos:column="59"/></argument_list></sizeof></expr>;<pos:position pos:line="351" pos:column="60"/></expr_stmt>
<cpp:endif pos:line="352" pos:column="1">#<cpp:directive pos:line="352" pos:column="2">endif<pos:position pos:line="352" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name pos:line="353" pos:column="13">buffer<pos:position pos:line="353" pos:column="19"/></name> <operator pos:line="353" pos:column="20">=<pos:position pos:line="353" pos:column="21"/></operator> <call><name pos:line="353" pos:column="22">ap_ssi_parse_string<pos:position pos:line="353" pos:column="41"/></name><argument_list pos:line="353" pos:column="41">(<argument><expr><name pos:line="353" pos:column="42">r<pos:position pos:line="353" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="353" pos:column="45">ctx<pos:position pos:line="353" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="353" pos:column="50">current<pos:position pos:line="353" pos:column="57"/></name><operator pos:line="353" pos:column="57">-&gt;<pos:position pos:line="353" pos:column="62"/></operator><name pos:line="353" pos:column="59">token<pos:position pos:line="353" pos:column="64"/></name><operator pos:line="353" pos:column="64">.<pos:position pos:line="353" pos:column="65"/></operator><name pos:line="353" pos:column="65">value<pos:position pos:line="353" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="353" pos:column="72">NULL<pos:position pos:line="353" pos:column="76"/></name></expr></argument>, 
                                         <argument><expr><name pos:line="354" pos:column="42">MAX_STRING_LEN<pos:position pos:line="354" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="354" pos:column="58">0<pos:position pos:line="354" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="354" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="355" pos:column="13">current<pos:position pos:line="355" pos:column="20"/></name><operator pos:line="355" pos:column="20">-&gt;<pos:position pos:line="355" pos:column="25"/></operator><name pos:line="355" pos:column="22">token<pos:position pos:line="355" pos:column="27"/></name><operator pos:line="355" pos:column="27">.<pos:position pos:line="355" pos:column="28"/></operator><name pos:line="355" pos:column="28">value<pos:position pos:line="355" pos:column="33"/></name></name> <operator pos:line="355" pos:column="34">=<pos:position pos:line="355" pos:column="35"/></operator> <name pos:line="355" pos:column="36">buffer<pos:position pos:line="355" pos:column="42"/></name></expr>;<pos:position pos:line="355" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="356" pos:column="13">current<pos:position pos:line="356" pos:column="20"/></name><operator pos:line="356" pos:column="20">-&gt;<pos:position pos:line="356" pos:column="25"/></operator><name pos:line="356" pos:column="22">value<pos:position pos:line="356" pos:column="27"/></name></name> <operator pos:line="356" pos:column="28">=<pos:position pos:line="356" pos:column="29"/></operator> <operator pos:line="356" pos:column="30">(<pos:position pos:line="356" pos:column="31"/></operator><name><name pos:line="356" pos:column="31">current<pos:position pos:line="356" pos:column="38"/></name><operator pos:line="356" pos:column="38">-&gt;<pos:position pos:line="356" pos:column="43"/></operator><name pos:line="356" pos:column="40">token<pos:position pos:line="356" pos:column="45"/></name><operator pos:line="356" pos:column="45">.<pos:position pos:line="356" pos:column="46"/></operator><name pos:line="356" pos:column="46">value<pos:position pos:line="356" pos:column="51"/></name><index pos:line="356" pos:column="51">[<expr><literal type="number" pos:line="356" pos:column="52">0<pos:position pos:line="356" pos:column="53"/></literal></expr>]<pos:position pos:line="356" pos:column="54"/></index></name> <operator pos:line="356" pos:column="55">!=<pos:position pos:line="356" pos:column="57"/></operator> <literal type="char" pos:line="356" pos:column="58">'\0'<pos:position pos:line="356" pos:column="62"/></literal><operator pos:line="356" pos:column="62">)<pos:position pos:line="356" pos:column="63"/></operator></expr>;<pos:position pos:line="356" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="357" pos:column="13">current<pos:position pos:line="357" pos:column="20"/></name><operator pos:line="357" pos:column="20">-&gt;<pos:position pos:line="357" pos:column="25"/></operator><name pos:line="357" pos:column="22">done<pos:position pos:line="357" pos:column="26"/></name></name> <operator pos:line="357" pos:column="27">=<pos:position pos:line="357" pos:column="28"/></operator> <literal type="number" pos:line="357" pos:column="29">1<pos:position pos:line="357" pos:column="30"/></literal></expr>;<pos:position pos:line="357" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="358" pos:column="13">current<pos:position pos:line="358" pos:column="20"/></name> <operator pos:line="358" pos:column="21">=<pos:position pos:line="358" pos:column="22"/></operator> <name><name pos:line="358" pos:column="23">current<pos:position pos:line="358" pos:column="30"/></name><operator pos:line="358" pos:column="30">-&gt;<pos:position pos:line="358" pos:column="35"/></operator><name pos:line="358" pos:column="32">parent<pos:position pos:line="358" pos:column="38"/></name></name></expr>;<pos:position pos:line="358" pos:column="39"/></expr_stmt>
            <break pos:line="359" pos:column="13">break;<pos:position pos:line="359" pos:column="19"/></break>

        <case pos:line="361" pos:column="9">case <expr><name pos:line="361" pos:column="14">token_re<pos:position pos:line="361" pos:column="22"/></name></expr>:<pos:position pos:line="361" pos:column="23"/></case>
            <expr_stmt><expr><call><name pos:line="362" pos:column="13">ap_log_rerror<pos:position pos:line="362" pos:column="26"/></name><argument_list pos:line="362" pos:column="26">(<argument><expr><name pos:line="362" pos:column="27">APLOG_MARK<pos:position pos:line="362" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="362" pos:column="39">APLOG_ERR<pos:position pos:line="362" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="362" pos:column="50">0<pos:position pos:line="362" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="362" pos:column="53">r<pos:position pos:line="362" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="363" pos:column="27">"No operator before regex of expr \"%s\" in file %s"<pos:position pos:line="363" pos:column="79"/></literal></expr></argument>,
                          <argument><expr><name pos:line="364" pos:column="27">expr<pos:position pos:line="364" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="364" pos:column="33">r<pos:position pos:line="364" pos:column="34"/></name><operator pos:line="364" pos:column="34">-&gt;<pos:position pos:line="364" pos:column="39"/></operator><name pos:line="364" pos:column="36">filename<pos:position pos:line="364" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="364" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="365" pos:column="13">*<pos:position pos:line="365" pos:column="14"/></operator><name pos:line="365" pos:column="14">was_error<pos:position pos:line="365" pos:column="23"/></name> <operator pos:line="365" pos:column="24">=<pos:position pos:line="365" pos:column="25"/></operator> <literal type="number" pos:line="365" pos:column="26">1<pos:position pos:line="365" pos:column="27"/></literal></expr>;<pos:position pos:line="365" pos:column="28"/></expr_stmt>
            <return pos:line="366" pos:column="13">return <expr><name pos:line="366" pos:column="20">retval<pos:position pos:line="366" pos:column="26"/></name></expr>;<pos:position pos:line="366" pos:column="27"/></return>

        <case pos:line="368" pos:column="9">case <expr><name pos:line="368" pos:column="14">token_and<pos:position pos:line="368" pos:column="23"/></name></expr>:<pos:position pos:line="368" pos:column="24"/></case>
        <case pos:line="369" pos:column="9">case <expr><name pos:line="369" pos:column="14">token_or<pos:position pos:line="369" pos:column="22"/></name></expr>:<pos:position pos:line="369" pos:column="23"/></case>
<cpp:ifdef pos:line="370" pos:column="1">#<cpp:directive pos:line="370" pos:column="2">ifdef<pos:position pos:line="370" pos:column="7"/></cpp:directive> <name pos:line="370" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="370" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="371" pos:column="13">memcpy<pos:position pos:line="371" pos:column="19"/></name><argument_list pos:line="371" pos:column="19">(<argument><expr><operator pos:line="371" pos:column="20">&amp;<pos:position pos:line="371" pos:column="25"/></operator><name><name pos:line="371" pos:column="21">debug<pos:position pos:line="371" pos:column="26"/></name><index pos:line="371" pos:column="26">[<expr><name pos:line="371" pos:column="27">debug_pos<pos:position pos:line="371" pos:column="36"/></name></expr>]<pos:position pos:line="371" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="371" pos:column="39">"     Evaluate and/or\n"<pos:position pos:line="371" pos:column="63"/></literal></expr></argument>,
                    <argument><expr><sizeof pos:line="372" pos:column="21">sizeof<argument_list pos:line="372" pos:column="27">(<argument><expr><literal type="string" pos:line="372" pos:column="28">"     Evaluate and/or\n"<pos:position pos:line="372" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="372" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="372" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name pos:line="373" pos:column="13">debug_pos<pos:position pos:line="373" pos:column="22"/></name> <operator pos:line="373" pos:column="23">+=<pos:position pos:line="373" pos:column="25"/></operator> <sizeof pos:line="373" pos:column="26">sizeof<argument_list pos:line="373" pos:column="32">(<argument><expr><literal type="string" pos:line="373" pos:column="33">"     Evaluate and/or\n"<pos:position pos:line="373" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="373" pos:column="58"/></argument_list></sizeof></expr>;<pos:position pos:line="373" pos:column="59"/></expr_stmt>
<cpp:endif pos:line="374" pos:column="1">#<cpp:directive pos:line="374" pos:column="2">endif<pos:position pos:line="374" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="375" pos:column="13">if <condition pos:line="375" pos:column="16">(<expr><name><name pos:line="375" pos:column="17">current<pos:position pos:line="375" pos:column="24"/></name><operator pos:line="375" pos:column="24">-&gt;<pos:position pos:line="375" pos:column="29"/></operator><name pos:line="375" pos:column="26">left<pos:position pos:line="375" pos:column="30"/></name></name>  <operator pos:line="375" pos:column="32">==<pos:position pos:line="375" pos:column="34"/></operator> <operator pos:line="375" pos:column="35">(<pos:position pos:line="375" pos:column="36"/></operator>struct <name pos:line="375" pos:column="43">parse_node<pos:position pos:line="375" pos:column="53"/></name> <operator pos:line="375" pos:column="54">*<pos:position pos:line="375" pos:column="55"/></operator><operator pos:line="375" pos:column="55">)<pos:position pos:line="375" pos:column="56"/></operator> <name pos:line="375" pos:column="57">NULL<pos:position pos:line="375" pos:column="61"/></name> <operator pos:line="375" pos:column="62">||<pos:position pos:line="375" pos:column="64"/></operator>
                <name><name pos:line="376" pos:column="17">current<pos:position pos:line="376" pos:column="24"/></name><operator pos:line="376" pos:column="24">-&gt;<pos:position pos:line="376" pos:column="29"/></operator><name pos:line="376" pos:column="26">right<pos:position pos:line="376" pos:column="31"/></name></name> <operator pos:line="376" pos:column="32">==<pos:position pos:line="376" pos:column="34"/></operator> <operator pos:line="376" pos:column="35">(<pos:position pos:line="376" pos:column="36"/></operator>struct <name pos:line="376" pos:column="43">parse_node<pos:position pos:line="376" pos:column="53"/></name> <operator pos:line="376" pos:column="54">*<pos:position pos:line="376" pos:column="55"/></operator><operator pos:line="376" pos:column="55">)<pos:position pos:line="376" pos:column="56"/></operator> <name pos:line="376" pos:column="57">NULL<pos:position pos:line="376" pos:column="61"/></name></expr>)<pos:position pos:line="376" pos:column="62"/></condition><then pos:line="376" pos:column="62"> <block pos:line="376" pos:column="63">{
                <expr_stmt><expr><call><name pos:line="377" pos:column="17">ap_log_rerror<pos:position pos:line="377" pos:column="30"/></name><argument_list pos:line="377" pos:column="30">(<argument><expr><name pos:line="377" pos:column="31">APLOG_MARK<pos:position pos:line="377" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="377" pos:column="43">APLOG_ERR<pos:position pos:line="377" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="377" pos:column="54">0<pos:position pos:line="377" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="377" pos:column="57">r<pos:position pos:line="377" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="378" pos:column="31">"Invalid expression \"%s\" in file %s"<pos:position pos:line="378" pos:column="69"/></literal></expr></argument>,
                              <argument><expr><name pos:line="379" pos:column="31">expr<pos:position pos:line="379" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="379" pos:column="37">r<pos:position pos:line="379" pos:column="38"/></name><operator pos:line="379" pos:column="38">-&gt;<pos:position pos:line="379" pos:column="43"/></operator><name pos:line="379" pos:column="40">filename<pos:position pos:line="379" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="379" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="379" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="380" pos:column="17">*<pos:position pos:line="380" pos:column="18"/></operator><name pos:line="380" pos:column="18">was_error<pos:position pos:line="380" pos:column="27"/></name> <operator pos:line="380" pos:column="28">=<pos:position pos:line="380" pos:column="29"/></operator> <literal type="number" pos:line="380" pos:column="30">1<pos:position pos:line="380" pos:column="31"/></literal></expr>;<pos:position pos:line="380" pos:column="32"/></expr_stmt>
                <return pos:line="381" pos:column="17">return <expr><name pos:line="381" pos:column="24">retval<pos:position pos:line="381" pos:column="30"/></name></expr>;<pos:position pos:line="381" pos:column="31"/></return>
            }<pos:position pos:line="382" pos:column="14"/></block></then></if>
            <if pos:line="383" pos:column="13">if <condition pos:line="383" pos:column="16">(<expr><operator pos:line="383" pos:column="17">!<pos:position pos:line="383" pos:column="18"/></operator><name><name pos:line="383" pos:column="18">current<pos:position pos:line="383" pos:column="25"/></name><operator pos:line="383" pos:column="25">-&gt;<pos:position pos:line="383" pos:column="30"/></operator><name pos:line="383" pos:column="27">left<pos:position pos:line="383" pos:column="31"/></name><operator pos:line="383" pos:column="31">-&gt;<pos:position pos:line="383" pos:column="36"/></operator><name pos:line="383" pos:column="33">done<pos:position pos:line="383" pos:column="37"/></name></name></expr>)<pos:position pos:line="383" pos:column="38"/></condition><then pos:line="383" pos:column="38"> <block pos:line="383" pos:column="39">{
                <switch pos:line="384" pos:column="17">switch <condition pos:line="384" pos:column="24">(<expr><name><name pos:line="384" pos:column="25">current<pos:position pos:line="384" pos:column="32"/></name><operator pos:line="384" pos:column="32">-&gt;<pos:position pos:line="384" pos:column="37"/></operator><name pos:line="384" pos:column="34">left<pos:position pos:line="384" pos:column="38"/></name><operator pos:line="384" pos:column="38">-&gt;<pos:position pos:line="384" pos:column="43"/></operator><name pos:line="384" pos:column="40">token<pos:position pos:line="384" pos:column="45"/></name><operator pos:line="384" pos:column="45">.<pos:position pos:line="384" pos:column="46"/></operator><name pos:line="384" pos:column="46">type<pos:position pos:line="384" pos:column="50"/></name></name></expr>)<pos:position pos:line="384" pos:column="51"/></condition> <block pos:line="384" pos:column="52">{
                <case pos:line="385" pos:column="17">case <expr><name pos:line="385" pos:column="22">token_string<pos:position pos:line="385" pos:column="34"/></name></expr>:<pos:position pos:line="385" pos:column="35"/></case>
                    <expr_stmt><expr><name pos:line="386" pos:column="21">buffer<pos:position pos:line="386" pos:column="27"/></name> <operator pos:line="386" pos:column="28">=<pos:position pos:line="386" pos:column="29"/></operator> <call><name pos:line="386" pos:column="30">ap_ssi_parse_string<pos:position pos:line="386" pos:column="49"/></name><argument_list pos:line="386" pos:column="49">(<argument><expr><name pos:line="386" pos:column="50">r<pos:position pos:line="386" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="386" pos:column="53">ctx<pos:position pos:line="386" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="386" pos:column="58">current<pos:position pos:line="386" pos:column="65"/></name><operator pos:line="386" pos:column="65">-&gt;<pos:position pos:line="386" pos:column="70"/></operator><name pos:line="386" pos:column="67">left<pos:position pos:line="386" pos:column="71"/></name><operator pos:line="386" pos:column="71">-&gt;<pos:position pos:line="386" pos:column="76"/></operator><name pos:line="386" pos:column="73">token<pos:position pos:line="386" pos:column="78"/></name><operator pos:line="386" pos:column="78">.<pos:position pos:line="386" pos:column="79"/></operator><name pos:line="386" pos:column="79">value<pos:position pos:line="386" pos:column="84"/></name></name></expr></argument>,
                                                 <argument><expr><name pos:line="387" pos:column="50">NULL<pos:position pos:line="387" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="56">MAX_STRING_LEN<pos:position pos:line="387" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="387" pos:column="72">0<pos:position pos:line="387" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="387" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="387" pos:column="75"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="388" pos:column="21">current<pos:position pos:line="388" pos:column="28"/></name><operator pos:line="388" pos:column="28">-&gt;<pos:position pos:line="388" pos:column="33"/></operator><name pos:line="388" pos:column="30">left<pos:position pos:line="388" pos:column="34"/></name><operator pos:line="388" pos:column="34">-&gt;<pos:position pos:line="388" pos:column="39"/></operator><name pos:line="388" pos:column="36">token<pos:position pos:line="388" pos:column="41"/></name><operator pos:line="388" pos:column="41">.<pos:position pos:line="388" pos:column="42"/></operator><name pos:line="388" pos:column="42">value<pos:position pos:line="388" pos:column="47"/></name></name> <operator pos:line="388" pos:column="48">=<pos:position pos:line="388" pos:column="49"/></operator> <name pos:line="388" pos:column="50">buffer<pos:position pos:line="388" pos:column="56"/></name></expr>;<pos:position pos:line="388" pos:column="57"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="389" pos:column="21">current<pos:position pos:line="389" pos:column="28"/></name><operator pos:line="389" pos:column="28">-&gt;<pos:position pos:line="389" pos:column="33"/></operator><name pos:line="389" pos:column="30">left<pos:position pos:line="389" pos:column="34"/></name><operator pos:line="389" pos:column="34">-&gt;<pos:position pos:line="389" pos:column="39"/></operator><name pos:line="389" pos:column="36">value<pos:position pos:line="389" pos:column="41"/></name></name> <operator pos:line="389" pos:column="42">=<pos:position pos:line="389" pos:column="43"/></operator> 
                                       <operator pos:line="390" pos:column="40">(<pos:position pos:line="390" pos:column="41"/></operator><name><name pos:line="390" pos:column="41">current<pos:position pos:line="390" pos:column="48"/></name><operator pos:line="390" pos:column="48">-&gt;<pos:position pos:line="390" pos:column="53"/></operator><name pos:line="390" pos:column="50">left<pos:position pos:line="390" pos:column="54"/></name><operator pos:line="390" pos:column="54">-&gt;<pos:position pos:line="390" pos:column="59"/></operator><name pos:line="390" pos:column="56">token<pos:position pos:line="390" pos:column="61"/></name><operator pos:line="390" pos:column="61">.<pos:position pos:line="390" pos:column="62"/></operator><name pos:line="390" pos:column="62">value<pos:position pos:line="390" pos:column="67"/></name><index pos:line="390" pos:column="67">[<expr><literal type="number" pos:line="390" pos:column="68">0<pos:position pos:line="390" pos:column="69"/></literal></expr>]<pos:position pos:line="390" pos:column="70"/></index></name> <operator pos:line="390" pos:column="71">!=<pos:position pos:line="390" pos:column="73"/></operator> <literal type="char" pos:line="390" pos:column="74">'\0'<pos:position pos:line="390" pos:column="78"/></literal><operator pos:line="390" pos:column="78">)<pos:position pos:line="390" pos:column="79"/></operator></expr>;<pos:position pos:line="390" pos:column="80"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="391" pos:column="21">current<pos:position pos:line="391" pos:column="28"/></name><operator pos:line="391" pos:column="28">-&gt;<pos:position pos:line="391" pos:column="33"/></operator><name pos:line="391" pos:column="30">left<pos:position pos:line="391" pos:column="34"/></name><operator pos:line="391" pos:column="34">-&gt;<pos:position pos:line="391" pos:column="39"/></operator><name pos:line="391" pos:column="36">done<pos:position pos:line="391" pos:column="40"/></name></name> <operator pos:line="391" pos:column="41">=<pos:position pos:line="391" pos:column="42"/></operator> <literal type="number" pos:line="391" pos:column="43">1<pos:position pos:line="391" pos:column="44"/></literal></expr>;<pos:position pos:line="391" pos:column="45"/></expr_stmt>
                    <break pos:line="392" pos:column="21">break;<pos:position pos:line="392" pos:column="27"/></break>
                <default pos:line="393" pos:column="17">default:<pos:position pos:line="393" pos:column="25"/></default>
                    <expr_stmt><expr><name pos:line="394" pos:column="21">current<pos:position pos:line="394" pos:column="28"/></name> <operator pos:line="394" pos:column="29">=<pos:position pos:line="394" pos:column="30"/></operator> <name><name pos:line="394" pos:column="31">current<pos:position pos:line="394" pos:column="38"/></name><operator pos:line="394" pos:column="38">-&gt;<pos:position pos:line="394" pos:column="43"/></operator><name pos:line="394" pos:column="40">left<pos:position pos:line="394" pos:column="44"/></name></name></expr>;<pos:position pos:line="394" pos:column="45"/></expr_stmt>
                    <continue pos:line="395" pos:column="21">continue;<pos:position pos:line="395" pos:column="30"/></continue>
                }<pos:position pos:line="396" pos:column="18"/></block></switch>
            }<pos:position pos:line="397" pos:column="14"/></block></then></if>
            <if pos:line="398" pos:column="13">if <condition pos:line="398" pos:column="16">(<expr><operator pos:line="398" pos:column="17">!<pos:position pos:line="398" pos:column="18"/></operator><name><name pos:line="398" pos:column="18">current<pos:position pos:line="398" pos:column="25"/></name><operator pos:line="398" pos:column="25">-&gt;<pos:position pos:line="398" pos:column="30"/></operator><name pos:line="398" pos:column="27">right<pos:position pos:line="398" pos:column="32"/></name><operator pos:line="398" pos:column="32">-&gt;<pos:position pos:line="398" pos:column="37"/></operator><name pos:line="398" pos:column="34">done<pos:position pos:line="398" pos:column="38"/></name></name></expr>)<pos:position pos:line="398" pos:column="39"/></condition><then pos:line="398" pos:column="39"> <block pos:line="398" pos:column="40">{
                <switch pos:line="399" pos:column="17">switch <condition pos:line="399" pos:column="24">(<expr><name><name pos:line="399" pos:column="25">current<pos:position pos:line="399" pos:column="32"/></name><operator pos:line="399" pos:column="32">-&gt;<pos:position pos:line="399" pos:column="37"/></operator><name pos:line="399" pos:column="34">right<pos:position pos:line="399" pos:column="39"/></name><operator pos:line="399" pos:column="39">-&gt;<pos:position pos:line="399" pos:column="44"/></operator><name pos:line="399" pos:column="41">token<pos:position pos:line="399" pos:column="46"/></name><operator pos:line="399" pos:column="46">.<pos:position pos:line="399" pos:column="47"/></operator><name pos:line="399" pos:column="47">type<pos:position pos:line="399" pos:column="51"/></name></name></expr>)<pos:position pos:line="399" pos:column="52"/></condition> <block pos:line="399" pos:column="53">{
                <case pos:line="400" pos:column="17">case <expr><name pos:line="400" pos:column="22">token_string<pos:position pos:line="400" pos:column="34"/></name></expr>:<pos:position pos:line="400" pos:column="35"/></case>
                    <expr_stmt><expr><name pos:line="401" pos:column="21">buffer<pos:position pos:line="401" pos:column="27"/></name> <operator pos:line="401" pos:column="28">=<pos:position pos:line="401" pos:column="29"/></operator> <call><name pos:line="401" pos:column="30">ap_ssi_parse_string<pos:position pos:line="401" pos:column="49"/></name><argument_list pos:line="401" pos:column="49">(<argument><expr><name pos:line="401" pos:column="50">r<pos:position pos:line="401" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="53">ctx<pos:position pos:line="401" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="401" pos:column="58">current<pos:position pos:line="401" pos:column="65"/></name><operator pos:line="401" pos:column="65">-&gt;<pos:position pos:line="401" pos:column="70"/></operator><name pos:line="401" pos:column="67">right<pos:position pos:line="401" pos:column="72"/></name><operator pos:line="401" pos:column="72">-&gt;<pos:position pos:line="401" pos:column="77"/></operator><name pos:line="401" pos:column="74">token<pos:position pos:line="401" pos:column="79"/></name><operator pos:line="401" pos:column="79">.<pos:position pos:line="401" pos:column="80"/></operator><name pos:line="401" pos:column="80">value<pos:position pos:line="401" pos:column="85"/></name></name></expr></argument>,
                                                 <argument><expr><name pos:line="402" pos:column="50">NULL<pos:position pos:line="402" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="402" pos:column="56">MAX_STRING_LEN<pos:position pos:line="402" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="402" pos:column="72">0<pos:position pos:line="402" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="402" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="402" pos:column="75"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="403" pos:column="21">current<pos:position pos:line="403" pos:column="28"/></name><operator pos:line="403" pos:column="28">-&gt;<pos:position pos:line="403" pos:column="33"/></operator><name pos:line="403" pos:column="30">right<pos:position pos:line="403" pos:column="35"/></name><operator pos:line="403" pos:column="35">-&gt;<pos:position pos:line="403" pos:column="40"/></operator><name pos:line="403" pos:column="37">token<pos:position pos:line="403" pos:column="42"/></name><operator pos:line="403" pos:column="42">.<pos:position pos:line="403" pos:column="43"/></operator><name pos:line="403" pos:column="43">value<pos:position pos:line="403" pos:column="48"/></name></name> <operator pos:line="403" pos:column="49">=<pos:position pos:line="403" pos:column="50"/></operator> <name pos:line="403" pos:column="51">buffer<pos:position pos:line="403" pos:column="57"/></name></expr>;<pos:position pos:line="403" pos:column="58"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="404" pos:column="21">current<pos:position pos:line="404" pos:column="28"/></name><operator pos:line="404" pos:column="28">-&gt;<pos:position pos:line="404" pos:column="33"/></operator><name pos:line="404" pos:column="30">right<pos:position pos:line="404" pos:column="35"/></name><operator pos:line="404" pos:column="35">-&gt;<pos:position pos:line="404" pos:column="40"/></operator><name pos:line="404" pos:column="37">value<pos:position pos:line="404" pos:column="42"/></name></name> <operator pos:line="404" pos:column="43">=<pos:position pos:line="404" pos:column="44"/></operator> 
                                      <operator pos:line="405" pos:column="39">(<pos:position pos:line="405" pos:column="40"/></operator><name><name pos:line="405" pos:column="40">current<pos:position pos:line="405" pos:column="47"/></name><operator pos:line="405" pos:column="47">-&gt;<pos:position pos:line="405" pos:column="52"/></operator><name pos:line="405" pos:column="49">right<pos:position pos:line="405" pos:column="54"/></name><operator pos:line="405" pos:column="54">-&gt;<pos:position pos:line="405" pos:column="59"/></operator><name pos:line="405" pos:column="56">token<pos:position pos:line="405" pos:column="61"/></name><operator pos:line="405" pos:column="61">.<pos:position pos:line="405" pos:column="62"/></operator><name pos:line="405" pos:column="62">value<pos:position pos:line="405" pos:column="67"/></name><index pos:line="405" pos:column="67">[<expr><literal type="number" pos:line="405" pos:column="68">0<pos:position pos:line="405" pos:column="69"/></literal></expr>]<pos:position pos:line="405" pos:column="70"/></index></name> <operator pos:line="405" pos:column="71">!=<pos:position pos:line="405" pos:column="73"/></operator> <literal type="char" pos:line="405" pos:column="74">'\0'<pos:position pos:line="405" pos:column="78"/></literal><operator pos:line="405" pos:column="78">)<pos:position pos:line="405" pos:column="79"/></operator></expr>;<pos:position pos:line="405" pos:column="80"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="406" pos:column="21">current<pos:position pos:line="406" pos:column="28"/></name><operator pos:line="406" pos:column="28">-&gt;<pos:position pos:line="406" pos:column="33"/></operator><name pos:line="406" pos:column="30">right<pos:position pos:line="406" pos:column="35"/></name><operator pos:line="406" pos:column="35">-&gt;<pos:position pos:line="406" pos:column="40"/></operator><name pos:line="406" pos:column="37">done<pos:position pos:line="406" pos:column="41"/></name></name> <operator pos:line="406" pos:column="42">=<pos:position pos:line="406" pos:column="43"/></operator> <literal type="number" pos:line="406" pos:column="44">1<pos:position pos:line="406" pos:column="45"/></literal></expr>;<pos:position pos:line="406" pos:column="46"/></expr_stmt>
                    <break pos:line="407" pos:column="21">break;<pos:position pos:line="407" pos:column="27"/></break>
                <default pos:line="408" pos:column="17">default:<pos:position pos:line="408" pos:column="25"/></default>
                    <expr_stmt><expr><name pos:line="409" pos:column="21">current<pos:position pos:line="409" pos:column="28"/></name> <operator pos:line="409" pos:column="29">=<pos:position pos:line="409" pos:column="30"/></operator> <name><name pos:line="409" pos:column="31">current<pos:position pos:line="409" pos:column="38"/></name><operator pos:line="409" pos:column="38">-&gt;<pos:position pos:line="409" pos:column="43"/></operator><name pos:line="409" pos:column="40">right<pos:position pos:line="409" pos:column="45"/></name></name></expr>;<pos:position pos:line="409" pos:column="46"/></expr_stmt>
                    <continue pos:line="410" pos:column="21">continue;<pos:position pos:line="410" pos:column="30"/></continue>
                }<pos:position pos:line="411" pos:column="18"/></block></switch>
            }<pos:position pos:line="412" pos:column="14"/></block></then></if>
<cpp:ifdef pos:line="413" pos:column="1">#<cpp:directive pos:line="413" pos:column="2">ifdef<pos:position pos:line="413" pos:column="7"/></cpp:directive> <name pos:line="413" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="413" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><name pos:line="414" pos:column="13">debug_pos<pos:position pos:line="414" pos:column="22"/></name> <operator pos:line="414" pos:column="23">+=<pos:position pos:line="414" pos:column="25"/></operator> <call><name pos:line="414" pos:column="26">sprintf<pos:position pos:line="414" pos:column="33"/></name> <argument_list pos:line="414" pos:column="34">(<argument><expr><operator pos:line="414" pos:column="35">&amp;<pos:position pos:line="414" pos:column="40"/></operator><name><name pos:line="414" pos:column="36">debug<pos:position pos:line="414" pos:column="41"/></name><index pos:line="414" pos:column="41">[<expr><name pos:line="414" pos:column="42">debug_pos<pos:position pos:line="414" pos:column="51"/></name></expr>]<pos:position pos:line="414" pos:column="52"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="414" pos:column="54">"     Left: %c\n"<pos:position pos:line="414" pos:column="71"/></literal></expr></argument>,
                                  <argument><expr><ternary><condition><expr><name><name pos:line="415" pos:column="35">current<pos:position pos:line="415" pos:column="42"/></name><operator pos:line="415" pos:column="42">-&gt;<pos:position pos:line="415" pos:column="47"/></operator><name pos:line="415" pos:column="44">left<pos:position pos:line="415" pos:column="48"/></name><operator pos:line="415" pos:column="48">-&gt;<pos:position pos:line="415" pos:column="53"/></operator><name pos:line="415" pos:column="50">value<pos:position pos:line="415" pos:column="55"/></name></name></expr> ?<pos:position pos:line="415" pos:column="57"/></condition><then pos:line="415" pos:column="57"> <expr><literal type="char" pos:line="415" pos:column="58">'1'<pos:position pos:line="415" pos:column="61"/></literal></expr> <pos:position pos:line="415" pos:column="62"/></then><else pos:line="415" pos:column="62">: <expr><literal type="char" pos:line="415" pos:column="64">'0'<pos:position pos:line="415" pos:column="67"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="415" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="415" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><name pos:line="416" pos:column="13">debug_pos<pos:position pos:line="416" pos:column="22"/></name> <operator pos:line="416" pos:column="23">+=<pos:position pos:line="416" pos:column="25"/></operator> <call><name pos:line="416" pos:column="26">sprintf<pos:position pos:line="416" pos:column="33"/></name> <argument_list pos:line="416" pos:column="34">(<argument><expr><operator pos:line="416" pos:column="35">&amp;<pos:position pos:line="416" pos:column="40"/></operator><name><name pos:line="416" pos:column="36">debug<pos:position pos:line="416" pos:column="41"/></name><index pos:line="416" pos:column="41">[<expr><name pos:line="416" pos:column="42">debug_pos<pos:position pos:line="416" pos:column="51"/></name></expr>]<pos:position pos:line="416" pos:column="52"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="416" pos:column="54">"     Right: %c\n"<pos:position pos:line="416" pos:column="72"/></literal></expr></argument>,
                                  <argument><expr><ternary><condition><expr><name><name pos:line="417" pos:column="35">current<pos:position pos:line="417" pos:column="42"/></name><operator pos:line="417" pos:column="42">-&gt;<pos:position pos:line="417" pos:column="47"/></operator><name pos:line="417" pos:column="44">right<pos:position pos:line="417" pos:column="49"/></name><operator pos:line="417" pos:column="49">-&gt;<pos:position pos:line="417" pos:column="54"/></operator><name pos:line="417" pos:column="51">value<pos:position pos:line="417" pos:column="56"/></name></name></expr> ?<pos:position pos:line="417" pos:column="58"/></condition><then pos:line="417" pos:column="58"> <expr><literal type="char" pos:line="417" pos:column="59">'1'<pos:position pos:line="417" pos:column="62"/></literal></expr> <pos:position pos:line="417" pos:column="63"/></then><else pos:line="417" pos:column="63">: <expr><literal type="char" pos:line="417" pos:column="65">'0'<pos:position pos:line="417" pos:column="68"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="417" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="417" pos:column="70"/></expr_stmt>
<cpp:endif pos:line="418" pos:column="1">#<cpp:directive pos:line="418" pos:column="2">endif<pos:position pos:line="418" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="419" pos:column="13">if <condition pos:line="419" pos:column="16">(<expr><name><name pos:line="419" pos:column="17">current<pos:position pos:line="419" pos:column="24"/></name><operator pos:line="419" pos:column="24">-&gt;<pos:position pos:line="419" pos:column="29"/></operator><name pos:line="419" pos:column="26">token<pos:position pos:line="419" pos:column="31"/></name><operator pos:line="419" pos:column="31">.<pos:position pos:line="419" pos:column="32"/></operator><name pos:line="419" pos:column="32">type<pos:position pos:line="419" pos:column="36"/></name></name> <operator pos:line="419" pos:column="37">==<pos:position pos:line="419" pos:column="39"/></operator> <name pos:line="419" pos:column="40">token_and<pos:position pos:line="419" pos:column="49"/></name></expr>)<pos:position pos:line="419" pos:column="50"/></condition><then pos:line="419" pos:column="50"> <block pos:line="419" pos:column="51">{
                <expr_stmt><expr><name><name pos:line="420" pos:column="17">current<pos:position pos:line="420" pos:column="24"/></name><operator pos:line="420" pos:column="24">-&gt;<pos:position pos:line="420" pos:column="29"/></operator><name pos:line="420" pos:column="26">value<pos:position pos:line="420" pos:column="31"/></name></name> <operator pos:line="420" pos:column="32">=<pos:position pos:line="420" pos:column="33"/></operator> <name><name pos:line="420" pos:column="34">current<pos:position pos:line="420" pos:column="41"/></name><operator pos:line="420" pos:column="41">-&gt;<pos:position pos:line="420" pos:column="46"/></operator><name pos:line="420" pos:column="43">left<pos:position pos:line="420" pos:column="47"/></name><operator pos:line="420" pos:column="47">-&gt;<pos:position pos:line="420" pos:column="52"/></operator><name pos:line="420" pos:column="49">value<pos:position pos:line="420" pos:column="54"/></name></name> <operator pos:line="420" pos:column="55">&amp;&amp;<pos:position pos:line="420" pos:column="65"/></operator> <name><name pos:line="420" pos:column="58">current<pos:position pos:line="420" pos:column="65"/></name><operator pos:line="420" pos:column="65">-&gt;<pos:position pos:line="420" pos:column="70"/></operator><name pos:line="420" pos:column="67">right<pos:position pos:line="420" pos:column="72"/></name><operator pos:line="420" pos:column="72">-&gt;<pos:position pos:line="420" pos:column="77"/></operator><name pos:line="420" pos:column="74">value<pos:position pos:line="420" pos:column="79"/></name></name></expr>;<pos:position pos:line="420" pos:column="80"/></expr_stmt>
            }<pos:position pos:line="421" pos:column="14"/></block></then>
            <else pos:line="422" pos:column="13">else <block pos:line="422" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="423" pos:column="17">current<pos:position pos:line="423" pos:column="24"/></name><operator pos:line="423" pos:column="24">-&gt;<pos:position pos:line="423" pos:column="29"/></operator><name pos:line="423" pos:column="26">value<pos:position pos:line="423" pos:column="31"/></name></name> <operator pos:line="423" pos:column="32">=<pos:position pos:line="423" pos:column="33"/></operator> <name><name pos:line="423" pos:column="34">current<pos:position pos:line="423" pos:column="41"/></name><operator pos:line="423" pos:column="41">-&gt;<pos:position pos:line="423" pos:column="46"/></operator><name pos:line="423" pos:column="43">left<pos:position pos:line="423" pos:column="47"/></name><operator pos:line="423" pos:column="47">-&gt;<pos:position pos:line="423" pos:column="52"/></operator><name pos:line="423" pos:column="49">value<pos:position pos:line="423" pos:column="54"/></name></name> <operator pos:line="423" pos:column="55">||<pos:position pos:line="423" pos:column="57"/></operator> <name><name pos:line="423" pos:column="58">current<pos:position pos:line="423" pos:column="65"/></name><operator pos:line="423" pos:column="65">-&gt;<pos:position pos:line="423" pos:column="70"/></operator><name pos:line="423" pos:column="67">right<pos:position pos:line="423" pos:column="72"/></name><operator pos:line="423" pos:column="72">-&gt;<pos:position pos:line="423" pos:column="77"/></operator><name pos:line="423" pos:column="74">value<pos:position pos:line="423" pos:column="79"/></name></name></expr>;<pos:position pos:line="423" pos:column="80"/></expr_stmt>
            }<pos:position pos:line="424" pos:column="14"/></block></else></if>
<cpp:ifdef pos:line="425" pos:column="1">#<cpp:directive pos:line="425" pos:column="2">ifdef<pos:position pos:line="425" pos:column="7"/></cpp:directive> <name pos:line="425" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="425" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><name pos:line="426" pos:column="13">debug_pos<pos:position pos:line="426" pos:column="22"/></name> <operator pos:line="426" pos:column="23">+=<pos:position pos:line="426" pos:column="25"/></operator> <call><name pos:line="426" pos:column="26">sprintf<pos:position pos:line="426" pos:column="33"/></name> <argument_list pos:line="426" pos:column="34">(<argument><expr><operator pos:line="426" pos:column="35">&amp;<pos:position pos:line="426" pos:column="40"/></operator><name><name pos:line="426" pos:column="36">debug<pos:position pos:line="426" pos:column="41"/></name><index pos:line="426" pos:column="41">[<expr><name pos:line="426" pos:column="42">debug_pos<pos:position pos:line="426" pos:column="51"/></name></expr>]<pos:position pos:line="426" pos:column="52"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="426" pos:column="54">"     Returning %c\n"<pos:position pos:line="426" pos:column="75"/></literal></expr></argument>,
                                  <argument><expr><ternary><condition><expr><name><name pos:line="427" pos:column="35">current<pos:position pos:line="427" pos:column="42"/></name><operator pos:line="427" pos:column="42">-&gt;<pos:position pos:line="427" pos:column="47"/></operator><name pos:line="427" pos:column="44">value<pos:position pos:line="427" pos:column="49"/></name></name></expr> ?<pos:position pos:line="427" pos:column="51"/></condition><then pos:line="427" pos:column="51"> <expr><literal type="char" pos:line="427" pos:column="52">'1'<pos:position pos:line="427" pos:column="55"/></literal></expr> <pos:position pos:line="427" pos:column="56"/></then><else pos:line="427" pos:column="56">: <expr><literal type="char" pos:line="427" pos:column="58">'0'<pos:position pos:line="427" pos:column="61"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="427" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="427" pos:column="63"/></expr_stmt>
<cpp:endif pos:line="428" pos:column="1">#<cpp:directive pos:line="428" pos:column="2">endif<pos:position pos:line="428" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name><name pos:line="429" pos:column="13">current<pos:position pos:line="429" pos:column="20"/></name><operator pos:line="429" pos:column="20">-&gt;<pos:position pos:line="429" pos:column="25"/></operator><name pos:line="429" pos:column="22">done<pos:position pos:line="429" pos:column="26"/></name></name> <operator pos:line="429" pos:column="27">=<pos:position pos:line="429" pos:column="28"/></operator> <literal type="number" pos:line="429" pos:column="29">1<pos:position pos:line="429" pos:column="30"/></literal></expr>;<pos:position pos:line="429" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="430" pos:column="13">current<pos:position pos:line="430" pos:column="20"/></name> <operator pos:line="430" pos:column="21">=<pos:position pos:line="430" pos:column="22"/></operator> <name><name pos:line="430" pos:column="23">current<pos:position pos:line="430" pos:column="30"/></name><operator pos:line="430" pos:column="30">-&gt;<pos:position pos:line="430" pos:column="35"/></operator><name pos:line="430" pos:column="32">parent<pos:position pos:line="430" pos:column="38"/></name></name></expr>;<pos:position pos:line="430" pos:column="39"/></expr_stmt>
            <break pos:line="431" pos:column="13">break;<pos:position pos:line="431" pos:column="19"/></break>

        <case pos:line="433" pos:column="9">case <expr><name pos:line="433" pos:column="14">token_eq<pos:position pos:line="433" pos:column="22"/></name></expr>:<pos:position pos:line="433" pos:column="23"/></case>
        <case pos:line="434" pos:column="9">case <expr><name pos:line="434" pos:column="14">token_ne<pos:position pos:line="434" pos:column="22"/></name></expr>:<pos:position pos:line="434" pos:column="23"/></case>
<cpp:ifdef pos:line="435" pos:column="1">#<cpp:directive pos:line="435" pos:column="2">ifdef<pos:position pos:line="435" pos:column="7"/></cpp:directive> <name pos:line="435" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="435" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="436" pos:column="13">memcpy<pos:position pos:line="436" pos:column="19"/></name> <argument_list pos:line="436" pos:column="20">(<argument><expr><operator pos:line="436" pos:column="21">&amp;<pos:position pos:line="436" pos:column="26"/></operator><name><name pos:line="436" pos:column="22">debug<pos:position pos:line="436" pos:column="27"/></name><index pos:line="436" pos:column="27">[<expr><name pos:line="436" pos:column="28">debug_pos<pos:position pos:line="436" pos:column="37"/></name></expr>]<pos:position pos:line="436" pos:column="38"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="436" pos:column="40">"     Evaluate eq/ne\n"<pos:position pos:line="436" pos:column="63"/></literal></expr></argument>,
                    <argument><expr><sizeof pos:line="437" pos:column="21">sizeof <argument_list pos:line="437" pos:column="28">(<argument><expr><literal type="string" pos:line="437" pos:column="29">"     Evaluate eq/ne\n"<pos:position pos:line="437" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="437" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="437" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="437" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name pos:line="438" pos:column="13">debug_pos<pos:position pos:line="438" pos:column="22"/></name> <operator pos:line="438" pos:column="23">+=<pos:position pos:line="438" pos:column="25"/></operator> <sizeof pos:line="438" pos:column="26">sizeof <argument_list pos:line="438" pos:column="33">(<argument><expr><literal type="string" pos:line="438" pos:column="34">"     Evaluate eq/ne\n"<pos:position pos:line="438" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="438" pos:column="58"/></argument_list></sizeof></expr>;<pos:position pos:line="438" pos:column="59"/></expr_stmt>
<cpp:endif pos:line="439" pos:column="1">#<cpp:directive pos:line="439" pos:column="2">endif<pos:position pos:line="439" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="440" pos:column="13">if <condition pos:line="440" pos:column="16">(<expr><operator pos:line="440" pos:column="17">(<pos:position pos:line="440" pos:column="18"/></operator><name><name pos:line="440" pos:column="18">current<pos:position pos:line="440" pos:column="25"/></name><operator pos:line="440" pos:column="25">-&gt;<pos:position pos:line="440" pos:column="30"/></operator><name pos:line="440" pos:column="27">left<pos:position pos:line="440" pos:column="31"/></name></name> <operator pos:line="440" pos:column="32">==<pos:position pos:line="440" pos:column="34"/></operator> <operator pos:line="440" pos:column="35">(<pos:position pos:line="440" pos:column="36"/></operator>struct <name pos:line="440" pos:column="43">parse_node<pos:position pos:line="440" pos:column="53"/></name> <operator pos:line="440" pos:column="54">*<pos:position pos:line="440" pos:column="55"/></operator><operator pos:line="440" pos:column="55">)<pos:position pos:line="440" pos:column="56"/></operator> <name pos:line="440" pos:column="57">NULL<pos:position pos:line="440" pos:column="61"/></name><operator pos:line="440" pos:column="61">)<pos:position pos:line="440" pos:column="62"/></operator> <operator pos:line="440" pos:column="63">||<pos:position pos:line="440" pos:column="65"/></operator>
                <operator pos:line="441" pos:column="17">(<pos:position pos:line="441" pos:column="18"/></operator><name><name pos:line="441" pos:column="18">current<pos:position pos:line="441" pos:column="25"/></name><operator pos:line="441" pos:column="25">-&gt;<pos:position pos:line="441" pos:column="30"/></operator><name pos:line="441" pos:column="27">right<pos:position pos:line="441" pos:column="32"/></name></name> <operator pos:line="441" pos:column="33">==<pos:position pos:line="441" pos:column="35"/></operator> <operator pos:line="441" pos:column="36">(<pos:position pos:line="441" pos:column="37"/></operator>struct <name pos:line="441" pos:column="44">parse_node<pos:position pos:line="441" pos:column="54"/></name> <operator pos:line="441" pos:column="55">*<pos:position pos:line="441" pos:column="56"/></operator><operator pos:line="441" pos:column="56">)<pos:position pos:line="441" pos:column="57"/></operator> <name pos:line="441" pos:column="58">NULL<pos:position pos:line="441" pos:column="62"/></name><operator pos:line="441" pos:column="62">)<pos:position pos:line="441" pos:column="63"/></operator> <operator pos:line="441" pos:column="64">||<pos:position pos:line="441" pos:column="66"/></operator>
                <operator pos:line="442" pos:column="17">(<pos:position pos:line="442" pos:column="18"/></operator><name><name pos:line="442" pos:column="18">current<pos:position pos:line="442" pos:column="25"/></name><operator pos:line="442" pos:column="25">-&gt;<pos:position pos:line="442" pos:column="30"/></operator><name pos:line="442" pos:column="27">left<pos:position pos:line="442" pos:column="31"/></name><operator pos:line="442" pos:column="31">-&gt;<pos:position pos:line="442" pos:column="36"/></operator><name pos:line="442" pos:column="33">token<pos:position pos:line="442" pos:column="38"/></name><operator pos:line="442" pos:column="38">.<pos:position pos:line="442" pos:column="39"/></operator><name pos:line="442" pos:column="39">type<pos:position pos:line="442" pos:column="43"/></name></name> <operator pos:line="442" pos:column="44">!=<pos:position pos:line="442" pos:column="46"/></operator> <name pos:line="442" pos:column="47">token_string<pos:position pos:line="442" pos:column="59"/></name><operator pos:line="442" pos:column="59">)<pos:position pos:line="442" pos:column="60"/></operator> <operator pos:line="442" pos:column="61">||<pos:position pos:line="442" pos:column="63"/></operator>
                <operator pos:line="443" pos:column="17">(<pos:position pos:line="443" pos:column="18"/></operator><operator pos:line="443" pos:column="18">(<pos:position pos:line="443" pos:column="19"/></operator><name><name pos:line="443" pos:column="19">current<pos:position pos:line="443" pos:column="26"/></name><operator pos:line="443" pos:column="26">-&gt;<pos:position pos:line="443" pos:column="31"/></operator><name pos:line="443" pos:column="28">right<pos:position pos:line="443" pos:column="33"/></name><operator pos:line="443" pos:column="33">-&gt;<pos:position pos:line="443" pos:column="38"/></operator><name pos:line="443" pos:column="35">token<pos:position pos:line="443" pos:column="40"/></name><operator pos:line="443" pos:column="40">.<pos:position pos:line="443" pos:column="41"/></operator><name pos:line="443" pos:column="41">type<pos:position pos:line="443" pos:column="45"/></name></name> <operator pos:line="443" pos:column="46">!=<pos:position pos:line="443" pos:column="48"/></operator> <name pos:line="443" pos:column="49">token_string<pos:position pos:line="443" pos:column="61"/></name><operator pos:line="443" pos:column="61">)<pos:position pos:line="443" pos:column="62"/></operator> <operator pos:line="443" pos:column="63">&amp;&amp;<pos:position pos:line="443" pos:column="73"/></operator>
                 <operator pos:line="444" pos:column="18">(<pos:position pos:line="444" pos:column="19"/></operator><name><name pos:line="444" pos:column="19">current<pos:position pos:line="444" pos:column="26"/></name><operator pos:line="444" pos:column="26">-&gt;<pos:position pos:line="444" pos:column="31"/></operator><name pos:line="444" pos:column="28">right<pos:position pos:line="444" pos:column="33"/></name><operator pos:line="444" pos:column="33">-&gt;<pos:position pos:line="444" pos:column="38"/></operator><name pos:line="444" pos:column="35">token<pos:position pos:line="444" pos:column="40"/></name><operator pos:line="444" pos:column="40">.<pos:position pos:line="444" pos:column="41"/></operator><name pos:line="444" pos:column="41">type<pos:position pos:line="444" pos:column="45"/></name></name> <operator pos:line="444" pos:column="46">!=<pos:position pos:line="444" pos:column="48"/></operator> <name pos:line="444" pos:column="49">token_re<pos:position pos:line="444" pos:column="57"/></name><operator pos:line="444" pos:column="57">)<pos:position pos:line="444" pos:column="58"/></operator><operator pos:line="444" pos:column="58">)<pos:position pos:line="444" pos:column="59"/></operator></expr>)<pos:position pos:line="444" pos:column="60"/></condition><then pos:line="444" pos:column="60"> <block pos:line="444" pos:column="61">{
                <expr_stmt><expr><call><name pos:line="445" pos:column="17">ap_log_rerror<pos:position pos:line="445" pos:column="30"/></name><argument_list pos:line="445" pos:column="30">(<argument><expr><name pos:line="445" pos:column="31">APLOG_MARK<pos:position pos:line="445" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="445" pos:column="43">APLOG_ERR<pos:position pos:line="445" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="445" pos:column="54">0<pos:position pos:line="445" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="445" pos:column="57">r<pos:position pos:line="445" pos:column="58"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="446" pos:column="29">"Invalid expression \"%s\" in file %s"<pos:position pos:line="446" pos:column="67"/></literal></expr></argument>,
                            <argument><expr><name pos:line="447" pos:column="29">expr<pos:position pos:line="447" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="447" pos:column="35">r<pos:position pos:line="447" pos:column="36"/></name><operator pos:line="447" pos:column="36">-&gt;<pos:position pos:line="447" pos:column="41"/></operator><name pos:line="447" pos:column="38">filename<pos:position pos:line="447" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="447" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="447" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="448" pos:column="17">*<pos:position pos:line="448" pos:column="18"/></operator><name pos:line="448" pos:column="18">was_error<pos:position pos:line="448" pos:column="27"/></name> <operator pos:line="448" pos:column="28">=<pos:position pos:line="448" pos:column="29"/></operator> <literal type="number" pos:line="448" pos:column="30">1<pos:position pos:line="448" pos:column="31"/></literal></expr>;<pos:position pos:line="448" pos:column="32"/></expr_stmt>
                <return pos:line="449" pos:column="17">return <expr><name pos:line="449" pos:column="24">retval<pos:position pos:line="449" pos:column="30"/></name></expr>;<pos:position pos:line="449" pos:column="31"/></return>
            }<pos:position pos:line="450" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="451" pos:column="13">buffer<pos:position pos:line="451" pos:column="19"/></name> <operator pos:line="451" pos:column="20">=<pos:position pos:line="451" pos:column="21"/></operator> <call><name pos:line="451" pos:column="22">ap_ssi_parse_string<pos:position pos:line="451" pos:column="41"/></name><argument_list pos:line="451" pos:column="41">(<argument><expr><name pos:line="451" pos:column="42">r<pos:position pos:line="451" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="451" pos:column="45">ctx<pos:position pos:line="451" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="451" pos:column="50">current<pos:position pos:line="451" pos:column="57"/></name><operator pos:line="451" pos:column="57">-&gt;<pos:position pos:line="451" pos:column="62"/></operator><name pos:line="451" pos:column="59">left<pos:position pos:line="451" pos:column="63"/></name><operator pos:line="451" pos:column="63">-&gt;<pos:position pos:line="451" pos:column="68"/></operator><name pos:line="451" pos:column="65">token<pos:position pos:line="451" pos:column="70"/></name><operator pos:line="451" pos:column="70">.<pos:position pos:line="451" pos:column="71"/></operator><name pos:line="451" pos:column="71">value<pos:position pos:line="451" pos:column="76"/></name></name></expr></argument>,
                                         <argument><expr><name pos:line="452" pos:column="42">NULL<pos:position pos:line="452" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="452" pos:column="48">MAX_STRING_LEN<pos:position pos:line="452" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="452" pos:column="64">0<pos:position pos:line="452" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="452" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="453" pos:column="13">current<pos:position pos:line="453" pos:column="20"/></name><operator pos:line="453" pos:column="20">-&gt;<pos:position pos:line="453" pos:column="25"/></operator><name pos:line="453" pos:column="22">left<pos:position pos:line="453" pos:column="26"/></name><operator pos:line="453" pos:column="26">-&gt;<pos:position pos:line="453" pos:column="31"/></operator><name pos:line="453" pos:column="28">token<pos:position pos:line="453" pos:column="33"/></name><operator pos:line="453" pos:column="33">.<pos:position pos:line="453" pos:column="34"/></operator><name pos:line="453" pos:column="34">value<pos:position pos:line="453" pos:column="39"/></name></name> <operator pos:line="453" pos:column="40">=<pos:position pos:line="453" pos:column="41"/></operator> <name pos:line="453" pos:column="42">buffer<pos:position pos:line="453" pos:column="48"/></name></expr>;<pos:position pos:line="453" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="454" pos:column="13">buffer<pos:position pos:line="454" pos:column="19"/></name> <operator pos:line="454" pos:column="20">=<pos:position pos:line="454" pos:column="21"/></operator> <call><name pos:line="454" pos:column="22">ap_ssi_parse_string<pos:position pos:line="454" pos:column="41"/></name><argument_list pos:line="454" pos:column="41">(<argument><expr><name pos:line="454" pos:column="42">r<pos:position pos:line="454" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="454" pos:column="45">ctx<pos:position pos:line="454" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="454" pos:column="50">current<pos:position pos:line="454" pos:column="57"/></name><operator pos:line="454" pos:column="57">-&gt;<pos:position pos:line="454" pos:column="62"/></operator><name pos:line="454" pos:column="59">right<pos:position pos:line="454" pos:column="64"/></name><operator pos:line="454" pos:column="64">-&gt;<pos:position pos:line="454" pos:column="69"/></operator><name pos:line="454" pos:column="66">token<pos:position pos:line="454" pos:column="71"/></name><operator pos:line="454" pos:column="71">.<pos:position pos:line="454" pos:column="72"/></operator><name pos:line="454" pos:column="72">value<pos:position pos:line="454" pos:column="77"/></name></name></expr></argument>,
                                         <argument><expr><name pos:line="455" pos:column="42">NULL<pos:position pos:line="455" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="455" pos:column="48">MAX_STRING_LEN<pos:position pos:line="455" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="455" pos:column="64">0<pos:position pos:line="455" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="455" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="455" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="456" pos:column="13">current<pos:position pos:line="456" pos:column="20"/></name><operator pos:line="456" pos:column="20">-&gt;<pos:position pos:line="456" pos:column="25"/></operator><name pos:line="456" pos:column="22">right<pos:position pos:line="456" pos:column="27"/></name><operator pos:line="456" pos:column="27">-&gt;<pos:position pos:line="456" pos:column="32"/></operator><name pos:line="456" pos:column="29">token<pos:position pos:line="456" pos:column="34"/></name><operator pos:line="456" pos:column="34">.<pos:position pos:line="456" pos:column="35"/></operator><name pos:line="456" pos:column="35">value<pos:position pos:line="456" pos:column="40"/></name></name> <operator pos:line="456" pos:column="41">=<pos:position pos:line="456" pos:column="42"/></operator> <name pos:line="456" pos:column="43">buffer<pos:position pos:line="456" pos:column="49"/></name></expr>;<pos:position pos:line="456" pos:column="50"/></expr_stmt>
            <if pos:line="457" pos:column="13">if <condition pos:line="457" pos:column="16">(<expr><name><name pos:line="457" pos:column="17">current<pos:position pos:line="457" pos:column="24"/></name><operator pos:line="457" pos:column="24">-&gt;<pos:position pos:line="457" pos:column="29"/></operator><name pos:line="457" pos:column="26">right<pos:position pos:line="457" pos:column="31"/></name><operator pos:line="457" pos:column="31">-&gt;<pos:position pos:line="457" pos:column="36"/></operator><name pos:line="457" pos:column="33">token<pos:position pos:line="457" pos:column="38"/></name><operator pos:line="457" pos:column="38">.<pos:position pos:line="457" pos:column="39"/></operator><name pos:line="457" pos:column="39">type<pos:position pos:line="457" pos:column="43"/></name></name> <operator pos:line="457" pos:column="44">==<pos:position pos:line="457" pos:column="46"/></operator> <name pos:line="457" pos:column="47">token_re<pos:position pos:line="457" pos:column="55"/></name></expr>)<pos:position pos:line="457" pos:column="56"/></condition><then pos:line="457" pos:column="56"> <block pos:line="457" pos:column="57">{
<cpp:ifdef pos:line="458" pos:column="1">#<cpp:directive pos:line="458" pos:column="2">ifdef<pos:position pos:line="458" pos:column="7"/></cpp:directive> <name pos:line="458" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="458" pos:column="21"/></name></cpp:ifdef>
                <expr_stmt><expr><name pos:line="459" pos:column="17">debug_pos<pos:position pos:line="459" pos:column="26"/></name> <operator pos:line="459" pos:column="27">+=<pos:position pos:line="459" pos:column="29"/></operator> <call><name pos:line="459" pos:column="30">sprintf<pos:position pos:line="459" pos:column="37"/></name> <argument_list pos:line="459" pos:column="38">(<argument><expr><operator pos:line="459" pos:column="39">&amp;<pos:position pos:line="459" pos:column="44"/></operator><name><name pos:line="459" pos:column="40">debug<pos:position pos:line="459" pos:column="45"/></name><index pos:line="459" pos:column="45">[<expr><name pos:line="459" pos:column="46">debug_pos<pos:position pos:line="459" pos:column="55"/></name></expr>]<pos:position pos:line="459" pos:column="56"/></index></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="460" pos:column="39">"     Re Compare (%s) with /%s/\n"<pos:position pos:line="460" pos:column="73"/></literal></expr></argument>,
                                      <argument><expr><name><name pos:line="461" pos:column="39">current<pos:position pos:line="461" pos:column="46"/></name><operator pos:line="461" pos:column="46">-&gt;<pos:position pos:line="461" pos:column="51"/></operator><name pos:line="461" pos:column="48">left<pos:position pos:line="461" pos:column="52"/></name><operator pos:line="461" pos:column="52">-&gt;<pos:position pos:line="461" pos:column="57"/></operator><name pos:line="461" pos:column="54">token<pos:position pos:line="461" pos:column="59"/></name><operator pos:line="461" pos:column="59">.<pos:position pos:line="461" pos:column="60"/></operator><name pos:line="461" pos:column="60">value<pos:position pos:line="461" pos:column="65"/></name></name></expr></argument>,
                                      <argument><expr><name><name pos:line="462" pos:column="39">current<pos:position pos:line="462" pos:column="46"/></name><operator pos:line="462" pos:column="46">-&gt;<pos:position pos:line="462" pos:column="51"/></operator><name pos:line="462" pos:column="48">right<pos:position pos:line="462" pos:column="53"/></name><operator pos:line="462" pos:column="53">-&gt;<pos:position pos:line="462" pos:column="58"/></operator><name pos:line="462" pos:column="55">token<pos:position pos:line="462" pos:column="60"/></name><operator pos:line="462" pos:column="60">.<pos:position pos:line="462" pos:column="61"/></operator><name pos:line="462" pos:column="61">value<pos:position pos:line="462" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="462" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="462" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="463" pos:column="1">#<cpp:directive pos:line="463" pos:column="2">endif<pos:position pos:line="463" pos:column="7"/></cpp:directive></cpp:endif>
                <expr_stmt><expr><name><name pos:line="464" pos:column="17">current<pos:position pos:line="464" pos:column="24"/></name><operator pos:line="464" pos:column="24">-&gt;<pos:position pos:line="464" pos:column="29"/></operator><name pos:line="464" pos:column="26">value<pos:position pos:line="464" pos:column="31"/></name></name> <operator pos:line="464" pos:column="32">=<pos:position pos:line="464" pos:column="33"/></operator>
                    <call><name pos:line="465" pos:column="21">re_check<pos:position pos:line="465" pos:column="29"/></name><argument_list pos:line="465" pos:column="29">(<argument><expr><name pos:line="465" pos:column="30">r<pos:position pos:line="465" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="465" pos:column="33">ctx<pos:position pos:line="465" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="465" pos:column="38">current<pos:position pos:line="465" pos:column="45"/></name><operator pos:line="465" pos:column="45">-&gt;<pos:position pos:line="465" pos:column="50"/></operator><name pos:line="465" pos:column="47">left<pos:position pos:line="465" pos:column="51"/></name><operator pos:line="465" pos:column="51">-&gt;<pos:position pos:line="465" pos:column="56"/></operator><name pos:line="465" pos:column="53">token<pos:position pos:line="465" pos:column="58"/></name><operator pos:line="465" pos:column="58">.<pos:position pos:line="465" pos:column="59"/></operator><name pos:line="465" pos:column="59">value<pos:position pos:line="465" pos:column="64"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="466" pos:column="30">current<pos:position pos:line="466" pos:column="37"/></name><operator pos:line="466" pos:column="37">-&gt;<pos:position pos:line="466" pos:column="42"/></operator><name pos:line="466" pos:column="39">right<pos:position pos:line="466" pos:column="44"/></name><operator pos:line="466" pos:column="44">-&gt;<pos:position pos:line="466" pos:column="49"/></operator><name pos:line="466" pos:column="46">token<pos:position pos:line="466" pos:column="51"/></name><operator pos:line="466" pos:column="51">.<pos:position pos:line="466" pos:column="52"/></operator><name pos:line="466" pos:column="52">value<pos:position pos:line="466" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="466" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="466" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="467" pos:column="14"/></block></then>
            <else pos:line="468" pos:column="13">else <block pos:line="468" pos:column="18">{
<cpp:ifdef pos:line="469" pos:column="1">#<cpp:directive pos:line="469" pos:column="2">ifdef<pos:position pos:line="469" pos:column="7"/></cpp:directive> <name pos:line="469" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="469" pos:column="21"/></name></cpp:ifdef>
                <expr_stmt><expr><name pos:line="470" pos:column="17">debug_pos<pos:position pos:line="470" pos:column="26"/></name> <operator pos:line="470" pos:column="27">+=<pos:position pos:line="470" pos:column="29"/></operator> <call><name pos:line="470" pos:column="30">sprintf<pos:position pos:line="470" pos:column="37"/></name> <argument_list pos:line="470" pos:column="38">(<argument><expr><operator pos:line="470" pos:column="39">&amp;<pos:position pos:line="470" pos:column="44"/></operator><name><name pos:line="470" pos:column="40">debug<pos:position pos:line="470" pos:column="45"/></name><index pos:line="470" pos:column="45">[<expr><name pos:line="470" pos:column="46">debug_pos<pos:position pos:line="470" pos:column="55"/></name></expr>]<pos:position pos:line="470" pos:column="56"/></index></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="471" pos:column="39">"     Compare (%s) with (%s)\n"<pos:position pos:line="471" pos:column="70"/></literal></expr></argument>,
                                      <argument><expr><name><name pos:line="472" pos:column="39">current<pos:position pos:line="472" pos:column="46"/></name><operator pos:line="472" pos:column="46">-&gt;<pos:position pos:line="472" pos:column="51"/></operator><name pos:line="472" pos:column="48">left<pos:position pos:line="472" pos:column="52"/></name><operator pos:line="472" pos:column="52">-&gt;<pos:position pos:line="472" pos:column="57"/></operator><name pos:line="472" pos:column="54">token<pos:position pos:line="472" pos:column="59"/></name><operator pos:line="472" pos:column="59">.<pos:position pos:line="472" pos:column="60"/></operator><name pos:line="472" pos:column="60">value<pos:position pos:line="472" pos:column="65"/></name></name></expr></argument>,
                                      <argument><expr><name><name pos:line="473" pos:column="39">current<pos:position pos:line="473" pos:column="46"/></name><operator pos:line="473" pos:column="46">-&gt;<pos:position pos:line="473" pos:column="51"/></operator><name pos:line="473" pos:column="48">right<pos:position pos:line="473" pos:column="53"/></name><operator pos:line="473" pos:column="53">-&gt;<pos:position pos:line="473" pos:column="58"/></operator><name pos:line="473" pos:column="55">token<pos:position pos:line="473" pos:column="60"/></name><operator pos:line="473" pos:column="60">.<pos:position pos:line="473" pos:column="61"/></operator><name pos:line="473" pos:column="61">value<pos:position pos:line="473" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="473" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="473" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="474" pos:column="1">#<cpp:directive pos:line="474" pos:column="2">endif<pos:position pos:line="474" pos:column="7"/></cpp:directive></cpp:endif>
                <expr_stmt><expr><name><name pos:line="475" pos:column="17">current<pos:position pos:line="475" pos:column="24"/></name><operator pos:line="475" pos:column="24">-&gt;<pos:position pos:line="475" pos:column="29"/></operator><name pos:line="475" pos:column="26">value<pos:position pos:line="475" pos:column="31"/></name></name> <operator pos:line="475" pos:column="32">=<pos:position pos:line="475" pos:column="33"/></operator>
                    <operator pos:line="476" pos:column="21">(<pos:position pos:line="476" pos:column="22"/></operator><call><name pos:line="476" pos:column="22">strcmp<pos:position pos:line="476" pos:column="28"/></name><argument_list pos:line="476" pos:column="28">(<argument><expr><name><name pos:line="476" pos:column="29">current<pos:position pos:line="476" pos:column="36"/></name><operator pos:line="476" pos:column="36">-&gt;<pos:position pos:line="476" pos:column="41"/></operator><name pos:line="476" pos:column="38">left<pos:position pos:line="476" pos:column="42"/></name><operator pos:line="476" pos:column="42">-&gt;<pos:position pos:line="476" pos:column="47"/></operator><name pos:line="476" pos:column="44">token<pos:position pos:line="476" pos:column="49"/></name><operator pos:line="476" pos:column="49">.<pos:position pos:line="476" pos:column="50"/></operator><name pos:line="476" pos:column="50">value<pos:position pos:line="476" pos:column="55"/></name></name></expr></argument>,
                            <argument><expr><name><name pos:line="477" pos:column="29">current<pos:position pos:line="477" pos:column="36"/></name><operator pos:line="477" pos:column="36">-&gt;<pos:position pos:line="477" pos:column="41"/></operator><name pos:line="477" pos:column="38">right<pos:position pos:line="477" pos:column="43"/></name><operator pos:line="477" pos:column="43">-&gt;<pos:position pos:line="477" pos:column="48"/></operator><name pos:line="477" pos:column="45">token<pos:position pos:line="477" pos:column="50"/></name><operator pos:line="477" pos:column="50">.<pos:position pos:line="477" pos:column="51"/></operator><name pos:line="477" pos:column="51">value<pos:position pos:line="477" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="477" pos:column="57"/></argument_list></call> <operator pos:line="477" pos:column="58">==<pos:position pos:line="477" pos:column="60"/></operator> <literal type="number" pos:line="477" pos:column="61">0<pos:position pos:line="477" pos:column="62"/></literal><operator pos:line="477" pos:column="62">)<pos:position pos:line="477" pos:column="63"/></operator></expr>;<pos:position pos:line="477" pos:column="64"/></expr_stmt>
            }<pos:position pos:line="478" pos:column="14"/></block></else></if>
            <if pos:line="479" pos:column="13">if <condition pos:line="479" pos:column="16">(<expr><name><name pos:line="479" pos:column="17">current<pos:position pos:line="479" pos:column="24"/></name><operator pos:line="479" pos:column="24">-&gt;<pos:position pos:line="479" pos:column="29"/></operator><name pos:line="479" pos:column="26">token<pos:position pos:line="479" pos:column="31"/></name><operator pos:line="479" pos:column="31">.<pos:position pos:line="479" pos:column="32"/></operator><name pos:line="479" pos:column="32">type<pos:position pos:line="479" pos:column="36"/></name></name> <operator pos:line="479" pos:column="37">==<pos:position pos:line="479" pos:column="39"/></operator> <name pos:line="479" pos:column="40">token_ne<pos:position pos:line="479" pos:column="48"/></name></expr>)<pos:position pos:line="479" pos:column="49"/></condition><then pos:line="479" pos:column="49"> <block pos:line="479" pos:column="50">{
                <expr_stmt><expr><name><name pos:line="480" pos:column="17">current<pos:position pos:line="480" pos:column="24"/></name><operator pos:line="480" pos:column="24">-&gt;<pos:position pos:line="480" pos:column="29"/></operator><name pos:line="480" pos:column="26">value<pos:position pos:line="480" pos:column="31"/></name></name> <operator pos:line="480" pos:column="32">=<pos:position pos:line="480" pos:column="33"/></operator> <operator pos:line="480" pos:column="34">!<pos:position pos:line="480" pos:column="35"/></operator><name><name pos:line="480" pos:column="35">current<pos:position pos:line="480" pos:column="42"/></name><operator pos:line="480" pos:column="42">-&gt;<pos:position pos:line="480" pos:column="47"/></operator><name pos:line="480" pos:column="44">value<pos:position pos:line="480" pos:column="49"/></name></name></expr>;<pos:position pos:line="480" pos:column="50"/></expr_stmt>
            }<pos:position pos:line="481" pos:column="14"/></block></then></if>
<cpp:ifdef pos:line="482" pos:column="1">#<cpp:directive pos:line="482" pos:column="2">ifdef<pos:position pos:line="482" pos:column="7"/></cpp:directive> <name pos:line="482" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="482" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><name pos:line="483" pos:column="13">debug_pos<pos:position pos:line="483" pos:column="22"/></name> <operator pos:line="483" pos:column="23">+=<pos:position pos:line="483" pos:column="25"/></operator> <call><name pos:line="483" pos:column="26">sprintf<pos:position pos:line="483" pos:column="33"/></name> <argument_list pos:line="483" pos:column="34">(<argument><expr><operator pos:line="483" pos:column="35">&amp;<pos:position pos:line="483" pos:column="40"/></operator><name><name pos:line="483" pos:column="36">debug<pos:position pos:line="483" pos:column="41"/></name><index pos:line="483" pos:column="41">[<expr><name pos:line="483" pos:column="42">debug_pos<pos:position pos:line="483" pos:column="51"/></name></expr>]<pos:position pos:line="483" pos:column="52"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="483" pos:column="54">"     Returning %c\n"<pos:position pos:line="483" pos:column="75"/></literal></expr></argument>,
                                  <argument><expr><ternary><condition><expr><name><name pos:line="484" pos:column="35">current<pos:position pos:line="484" pos:column="42"/></name><operator pos:line="484" pos:column="42">-&gt;<pos:position pos:line="484" pos:column="47"/></operator><name pos:line="484" pos:column="44">value<pos:position pos:line="484" pos:column="49"/></name></name></expr> ?<pos:position pos:line="484" pos:column="51"/></condition><then pos:line="484" pos:column="51"> <expr><literal type="char" pos:line="484" pos:column="52">'1'<pos:position pos:line="484" pos:column="55"/></literal></expr> <pos:position pos:line="484" pos:column="56"/></then><else pos:line="484" pos:column="56">: <expr><literal type="char" pos:line="484" pos:column="58">'0'<pos:position pos:line="484" pos:column="61"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="484" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="484" pos:column="63"/></expr_stmt>
<cpp:endif pos:line="485" pos:column="1">#<cpp:directive pos:line="485" pos:column="2">endif<pos:position pos:line="485" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name><name pos:line="486" pos:column="13">current<pos:position pos:line="486" pos:column="20"/></name><operator pos:line="486" pos:column="20">-&gt;<pos:position pos:line="486" pos:column="25"/></operator><name pos:line="486" pos:column="22">done<pos:position pos:line="486" pos:column="26"/></name></name> <operator pos:line="486" pos:column="27">=<pos:position pos:line="486" pos:column="28"/></operator> <literal type="number" pos:line="486" pos:column="29">1<pos:position pos:line="486" pos:column="30"/></literal></expr>;<pos:position pos:line="486" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="487" pos:column="13">current<pos:position pos:line="487" pos:column="20"/></name> <operator pos:line="487" pos:column="21">=<pos:position pos:line="487" pos:column="22"/></operator> <name><name pos:line="487" pos:column="23">current<pos:position pos:line="487" pos:column="30"/></name><operator pos:line="487" pos:column="30">-&gt;<pos:position pos:line="487" pos:column="35"/></operator><name pos:line="487" pos:column="32">parent<pos:position pos:line="487" pos:column="38"/></name></name></expr>;<pos:position pos:line="487" pos:column="39"/></expr_stmt>
            <break pos:line="488" pos:column="13">break;<pos:position pos:line="488" pos:column="19"/></break>
        <case pos:line="489" pos:column="9">case <expr><name pos:line="489" pos:column="14">token_ge<pos:position pos:line="489" pos:column="22"/></name></expr>:<pos:position pos:line="489" pos:column="23"/></case>
        <case pos:line="490" pos:column="9">case <expr><name pos:line="490" pos:column="14">token_gt<pos:position pos:line="490" pos:column="22"/></name></expr>:<pos:position pos:line="490" pos:column="23"/></case>
        <case pos:line="491" pos:column="9">case <expr><name pos:line="491" pos:column="14">token_le<pos:position pos:line="491" pos:column="22"/></name></expr>:<pos:position pos:line="491" pos:column="23"/></case>
        <case pos:line="492" pos:column="9">case <expr><name pos:line="492" pos:column="14">token_lt<pos:position pos:line="492" pos:column="22"/></name></expr>:<pos:position pos:line="492" pos:column="23"/></case>
<cpp:ifdef pos:line="493" pos:column="1">#<cpp:directive pos:line="493" pos:column="2">ifdef<pos:position pos:line="493" pos:column="7"/></cpp:directive> <name pos:line="493" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="493" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="494" pos:column="13">memcpy<pos:position pos:line="494" pos:column="19"/></name> <argument_list pos:line="494" pos:column="20">(<argument><expr><operator pos:line="494" pos:column="21">&amp;<pos:position pos:line="494" pos:column="26"/></operator><name><name pos:line="494" pos:column="22">debug<pos:position pos:line="494" pos:column="27"/></name><index pos:line="494" pos:column="27">[<expr><name pos:line="494" pos:column="28">debug_pos<pos:position pos:line="494" pos:column="37"/></name></expr>]<pos:position pos:line="494" pos:column="38"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="494" pos:column="40">"     Evaluate ge/gt/le/lt\n"<pos:position pos:line="494" pos:column="69"/></literal></expr></argument>,
                    <argument><expr><sizeof pos:line="495" pos:column="21">sizeof <argument_list pos:line="495" pos:column="28">(<argument><expr><literal type="string" pos:line="495" pos:column="29">"     Evaluate ge/gt/le/lt\n"<pos:position pos:line="495" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="495" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="495" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="495" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name pos:line="496" pos:column="13">debug_pos<pos:position pos:line="496" pos:column="22"/></name> <operator pos:line="496" pos:column="23">+=<pos:position pos:line="496" pos:column="25"/></operator> <sizeof pos:line="496" pos:column="26">sizeof <argument_list pos:line="496" pos:column="33">(<argument><expr><literal type="string" pos:line="496" pos:column="34">"     Evaluate ge/gt/le/lt\n"<pos:position pos:line="496" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="496" pos:column="64"/></argument_list></sizeof></expr>;<pos:position pos:line="496" pos:column="65"/></expr_stmt>
<cpp:endif pos:line="497" pos:column="1">#<cpp:directive pos:line="497" pos:column="2">endif<pos:position pos:line="497" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="498" pos:column="13">if <condition pos:line="498" pos:column="16">(<expr><operator pos:line="498" pos:column="17">(<pos:position pos:line="498" pos:column="18"/></operator><name><name pos:line="498" pos:column="18">current<pos:position pos:line="498" pos:column="25"/></name><operator pos:line="498" pos:column="25">-&gt;<pos:position pos:line="498" pos:column="30"/></operator><name pos:line="498" pos:column="27">left<pos:position pos:line="498" pos:column="31"/></name></name> <operator pos:line="498" pos:column="32">==<pos:position pos:line="498" pos:column="34"/></operator> <operator pos:line="498" pos:column="35">(<pos:position pos:line="498" pos:column="36"/></operator>struct <name pos:line="498" pos:column="43">parse_node<pos:position pos:line="498" pos:column="53"/></name> <operator pos:line="498" pos:column="54">*<pos:position pos:line="498" pos:column="55"/></operator><operator pos:line="498" pos:column="55">)<pos:position pos:line="498" pos:column="56"/></operator> <name pos:line="498" pos:column="57">NULL<pos:position pos:line="498" pos:column="61"/></name><operator pos:line="498" pos:column="61">)<pos:position pos:line="498" pos:column="62"/></operator> <operator pos:line="498" pos:column="63">||<pos:position pos:line="498" pos:column="65"/></operator>
                <operator pos:line="499" pos:column="17">(<pos:position pos:line="499" pos:column="18"/></operator><name><name pos:line="499" pos:column="18">current<pos:position pos:line="499" pos:column="25"/></name><operator pos:line="499" pos:column="25">-&gt;<pos:position pos:line="499" pos:column="30"/></operator><name pos:line="499" pos:column="27">right<pos:position pos:line="499" pos:column="32"/></name></name> <operator pos:line="499" pos:column="33">==<pos:position pos:line="499" pos:column="35"/></operator> <operator pos:line="499" pos:column="36">(<pos:position pos:line="499" pos:column="37"/></operator>struct <name pos:line="499" pos:column="44">parse_node<pos:position pos:line="499" pos:column="54"/></name> <operator pos:line="499" pos:column="55">*<pos:position pos:line="499" pos:column="56"/></operator><operator pos:line="499" pos:column="56">)<pos:position pos:line="499" pos:column="57"/></operator> <name pos:line="499" pos:column="58">NULL<pos:position pos:line="499" pos:column="62"/></name><operator pos:line="499" pos:column="62">)<pos:position pos:line="499" pos:column="63"/></operator> <operator pos:line="499" pos:column="64">||<pos:position pos:line="499" pos:column="66"/></operator>
                <operator pos:line="500" pos:column="17">(<pos:position pos:line="500" pos:column="18"/></operator><name><name pos:line="500" pos:column="18">current<pos:position pos:line="500" pos:column="25"/></name><operator pos:line="500" pos:column="25">-&gt;<pos:position pos:line="500" pos:column="30"/></operator><name pos:line="500" pos:column="27">left<pos:position pos:line="500" pos:column="31"/></name><operator pos:line="500" pos:column="31">-&gt;<pos:position pos:line="500" pos:column="36"/></operator><name pos:line="500" pos:column="33">token<pos:position pos:line="500" pos:column="38"/></name><operator pos:line="500" pos:column="38">.<pos:position pos:line="500" pos:column="39"/></operator><name pos:line="500" pos:column="39">type<pos:position pos:line="500" pos:column="43"/></name></name> <operator pos:line="500" pos:column="44">!=<pos:position pos:line="500" pos:column="46"/></operator> <name pos:line="500" pos:column="47">token_string<pos:position pos:line="500" pos:column="59"/></name><operator pos:line="500" pos:column="59">)<pos:position pos:line="500" pos:column="60"/></operator> <operator pos:line="500" pos:column="61">||<pos:position pos:line="500" pos:column="63"/></operator>
                <operator pos:line="501" pos:column="17">(<pos:position pos:line="501" pos:column="18"/></operator><name><name pos:line="501" pos:column="18">current<pos:position pos:line="501" pos:column="25"/></name><operator pos:line="501" pos:column="25">-&gt;<pos:position pos:line="501" pos:column="30"/></operator><name pos:line="501" pos:column="27">right<pos:position pos:line="501" pos:column="32"/></name><operator pos:line="501" pos:column="32">-&gt;<pos:position pos:line="501" pos:column="37"/></operator><name pos:line="501" pos:column="34">token<pos:position pos:line="501" pos:column="39"/></name><operator pos:line="501" pos:column="39">.<pos:position pos:line="501" pos:column="40"/></operator><name pos:line="501" pos:column="40">type<pos:position pos:line="501" pos:column="44"/></name></name> <operator pos:line="501" pos:column="45">!=<pos:position pos:line="501" pos:column="47"/></operator> <name pos:line="501" pos:column="48">token_string<pos:position pos:line="501" pos:column="60"/></name><operator pos:line="501" pos:column="60">)<pos:position pos:line="501" pos:column="61"/></operator></expr>)<pos:position pos:line="501" pos:column="62"/></condition><then pos:line="501" pos:column="62"> <block pos:line="501" pos:column="63">{
                <expr_stmt><expr><call><name pos:line="502" pos:column="17">ap_log_rerror<pos:position pos:line="502" pos:column="30"/></name><argument_list pos:line="502" pos:column="30">(<argument><expr><name pos:line="502" pos:column="31">APLOG_MARK<pos:position pos:line="502" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="502" pos:column="43">APLOG_ERR<pos:position pos:line="502" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="502" pos:column="54">0<pos:position pos:line="502" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="502" pos:column="57">r<pos:position pos:line="502" pos:column="58"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="503" pos:column="29">"Invalid expression \"%s\" in file %s"<pos:position pos:line="503" pos:column="67"/></literal></expr></argument>,
                            <argument><expr><name pos:line="504" pos:column="29">expr<pos:position pos:line="504" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="504" pos:column="35">r<pos:position pos:line="504" pos:column="36"/></name><operator pos:line="504" pos:column="36">-&gt;<pos:position pos:line="504" pos:column="41"/></operator><name pos:line="504" pos:column="38">filename<pos:position pos:line="504" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="504" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="504" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="505" pos:column="17">*<pos:position pos:line="505" pos:column="18"/></operator><name pos:line="505" pos:column="18">was_error<pos:position pos:line="505" pos:column="27"/></name> <operator pos:line="505" pos:column="28">=<pos:position pos:line="505" pos:column="29"/></operator> <literal type="number" pos:line="505" pos:column="30">1<pos:position pos:line="505" pos:column="31"/></literal></expr>;<pos:position pos:line="505" pos:column="32"/></expr_stmt>
                <return pos:line="506" pos:column="17">return <expr><name pos:line="506" pos:column="24">retval<pos:position pos:line="506" pos:column="30"/></name></expr>;<pos:position pos:line="506" pos:column="31"/></return>
            }<pos:position pos:line="507" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="508" pos:column="13">buffer<pos:position pos:line="508" pos:column="19"/></name> <operator pos:line="508" pos:column="20">=<pos:position pos:line="508" pos:column="21"/></operator> <call><name pos:line="508" pos:column="22">ap_ssi_parse_string<pos:position pos:line="508" pos:column="41"/></name><argument_list pos:line="508" pos:column="41">(<argument><expr><name pos:line="508" pos:column="42">r<pos:position pos:line="508" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="508" pos:column="45">ctx<pos:position pos:line="508" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="508" pos:column="50">current<pos:position pos:line="508" pos:column="57"/></name><operator pos:line="508" pos:column="57">-&gt;<pos:position pos:line="508" pos:column="62"/></operator><name pos:line="508" pos:column="59">left<pos:position pos:line="508" pos:column="63"/></name><operator pos:line="508" pos:column="63">-&gt;<pos:position pos:line="508" pos:column="68"/></operator><name pos:line="508" pos:column="65">token<pos:position pos:line="508" pos:column="70"/></name><operator pos:line="508" pos:column="70">.<pos:position pos:line="508" pos:column="71"/></operator><name pos:line="508" pos:column="71">value<pos:position pos:line="508" pos:column="76"/></name></name></expr></argument>,
                                         <argument><expr><name pos:line="509" pos:column="42">NULL<pos:position pos:line="509" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="509" pos:column="48">MAX_STRING_LEN<pos:position pos:line="509" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="509" pos:column="64">0<pos:position pos:line="509" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="509" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="509" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="510" pos:column="13">current<pos:position pos:line="510" pos:column="20"/></name><operator pos:line="510" pos:column="20">-&gt;<pos:position pos:line="510" pos:column="25"/></operator><name pos:line="510" pos:column="22">left<pos:position pos:line="510" pos:column="26"/></name><operator pos:line="510" pos:column="26">-&gt;<pos:position pos:line="510" pos:column="31"/></operator><name pos:line="510" pos:column="28">token<pos:position pos:line="510" pos:column="33"/></name><operator pos:line="510" pos:column="33">.<pos:position pos:line="510" pos:column="34"/></operator><name pos:line="510" pos:column="34">value<pos:position pos:line="510" pos:column="39"/></name></name> <operator pos:line="510" pos:column="40">=<pos:position pos:line="510" pos:column="41"/></operator> <name pos:line="510" pos:column="42">buffer<pos:position pos:line="510" pos:column="48"/></name></expr>;<pos:position pos:line="510" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="511" pos:column="13">buffer<pos:position pos:line="511" pos:column="19"/></name> <operator pos:line="511" pos:column="20">=<pos:position pos:line="511" pos:column="21"/></operator> <call><name pos:line="511" pos:column="22">ap_ssi_parse_string<pos:position pos:line="511" pos:column="41"/></name><argument_list pos:line="511" pos:column="41">(<argument><expr><name pos:line="511" pos:column="42">r<pos:position pos:line="511" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="511" pos:column="45">ctx<pos:position pos:line="511" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="511" pos:column="50">current<pos:position pos:line="511" pos:column="57"/></name><operator pos:line="511" pos:column="57">-&gt;<pos:position pos:line="511" pos:column="62"/></operator><name pos:line="511" pos:column="59">right<pos:position pos:line="511" pos:column="64"/></name><operator pos:line="511" pos:column="64">-&gt;<pos:position pos:line="511" pos:column="69"/></operator><name pos:line="511" pos:column="66">token<pos:position pos:line="511" pos:column="71"/></name><operator pos:line="511" pos:column="71">.<pos:position pos:line="511" pos:column="72"/></operator><name pos:line="511" pos:column="72">value<pos:position pos:line="511" pos:column="77"/></name></name></expr></argument>,
                                         <argument><expr><name pos:line="512" pos:column="42">NULL<pos:position pos:line="512" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="512" pos:column="48">MAX_STRING_LEN<pos:position pos:line="512" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="512" pos:column="64">0<pos:position pos:line="512" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="512" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="512" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="513" pos:column="13">current<pos:position pos:line="513" pos:column="20"/></name><operator pos:line="513" pos:column="20">-&gt;<pos:position pos:line="513" pos:column="25"/></operator><name pos:line="513" pos:column="22">right<pos:position pos:line="513" pos:column="27"/></name><operator pos:line="513" pos:column="27">-&gt;<pos:position pos:line="513" pos:column="32"/></operator><name pos:line="513" pos:column="29">token<pos:position pos:line="513" pos:column="34"/></name><operator pos:line="513" pos:column="34">.<pos:position pos:line="513" pos:column="35"/></operator><name pos:line="513" pos:column="35">value<pos:position pos:line="513" pos:column="40"/></name></name> <operator pos:line="513" pos:column="41">=<pos:position pos:line="513" pos:column="42"/></operator> <name pos:line="513" pos:column="43">buffer<pos:position pos:line="513" pos:column="49"/></name></expr>;<pos:position pos:line="513" pos:column="50"/></expr_stmt>
<cpp:ifdef pos:line="514" pos:column="1">#<cpp:directive pos:line="514" pos:column="2">ifdef<pos:position pos:line="514" pos:column="7"/></cpp:directive> <name pos:line="514" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="514" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><name pos:line="515" pos:column="13">debug_pos<pos:position pos:line="515" pos:column="22"/></name> <operator pos:line="515" pos:column="23">+=<pos:position pos:line="515" pos:column="25"/></operator> <call><name pos:line="515" pos:column="26">sprintf<pos:position pos:line="515" pos:column="33"/></name> <argument_list pos:line="515" pos:column="34">(<argument><expr><operator pos:line="515" pos:column="35">&amp;<pos:position pos:line="515" pos:column="40"/></operator><name><name pos:line="515" pos:column="36">debug<pos:position pos:line="515" pos:column="41"/></name><index pos:line="515" pos:column="41">[<expr><name pos:line="515" pos:column="42">debug_pos<pos:position pos:line="515" pos:column="51"/></name></expr>]<pos:position pos:line="515" pos:column="52"/></index></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="516" pos:column="35">"     Compare (%s) with (%s)\n"<pos:position pos:line="516" pos:column="66"/></literal></expr></argument>,
                                  <argument><expr><name><name pos:line="517" pos:column="35">current<pos:position pos:line="517" pos:column="42"/></name><operator pos:line="517" pos:column="42">-&gt;<pos:position pos:line="517" pos:column="47"/></operator><name pos:line="517" pos:column="44">left<pos:position pos:line="517" pos:column="48"/></name><operator pos:line="517" pos:column="48">-&gt;<pos:position pos:line="517" pos:column="53"/></operator><name pos:line="517" pos:column="50">token<pos:position pos:line="517" pos:column="55"/></name><operator pos:line="517" pos:column="55">.<pos:position pos:line="517" pos:column="56"/></operator><name pos:line="517" pos:column="56">value<pos:position pos:line="517" pos:column="61"/></name></name></expr></argument>,
                                  <argument><expr><name><name pos:line="518" pos:column="35">current<pos:position pos:line="518" pos:column="42"/></name><operator pos:line="518" pos:column="42">-&gt;<pos:position pos:line="518" pos:column="47"/></operator><name pos:line="518" pos:column="44">right<pos:position pos:line="518" pos:column="49"/></name><operator pos:line="518" pos:column="49">-&gt;<pos:position pos:line="518" pos:column="54"/></operator><name pos:line="518" pos:column="51">token<pos:position pos:line="518" pos:column="56"/></name><operator pos:line="518" pos:column="56">.<pos:position pos:line="518" pos:column="57"/></operator><name pos:line="518" pos:column="57">value<pos:position pos:line="518" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="518" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="518" pos:column="64"/></expr_stmt>
<cpp:endif pos:line="519" pos:column="1">#<cpp:directive pos:line="519" pos:column="2">endif<pos:position pos:line="519" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name><name pos:line="520" pos:column="13">current<pos:position pos:line="520" pos:column="20"/></name><operator pos:line="520" pos:column="20">-&gt;<pos:position pos:line="520" pos:column="25"/></operator><name pos:line="520" pos:column="22">value<pos:position pos:line="520" pos:column="27"/></name></name> <operator pos:line="520" pos:column="28">=<pos:position pos:line="520" pos:column="29"/></operator>
                <call><name pos:line="521" pos:column="17">strcmp<pos:position pos:line="521" pos:column="23"/></name><argument_list pos:line="521" pos:column="23">(<argument><expr><name><name pos:line="521" pos:column="24">current<pos:position pos:line="521" pos:column="31"/></name><operator pos:line="521" pos:column="31">-&gt;<pos:position pos:line="521" pos:column="36"/></operator><name pos:line="521" pos:column="33">left<pos:position pos:line="521" pos:column="37"/></name><operator pos:line="521" pos:column="37">-&gt;<pos:position pos:line="521" pos:column="42"/></operator><name pos:line="521" pos:column="39">token<pos:position pos:line="521" pos:column="44"/></name><operator pos:line="521" pos:column="44">.<pos:position pos:line="521" pos:column="45"/></operator><name pos:line="521" pos:column="45">value<pos:position pos:line="521" pos:column="50"/></name></name></expr></argument>,
                       <argument><expr><name><name pos:line="522" pos:column="24">current<pos:position pos:line="522" pos:column="31"/></name><operator pos:line="522" pos:column="31">-&gt;<pos:position pos:line="522" pos:column="36"/></operator><name pos:line="522" pos:column="33">right<pos:position pos:line="522" pos:column="38"/></name><operator pos:line="522" pos:column="38">-&gt;<pos:position pos:line="522" pos:column="43"/></operator><name pos:line="522" pos:column="40">token<pos:position pos:line="522" pos:column="45"/></name><operator pos:line="522" pos:column="45">.<pos:position pos:line="522" pos:column="46"/></operator><name pos:line="522" pos:column="46">value<pos:position pos:line="522" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="522" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="522" pos:column="53"/></expr_stmt>
            <if pos:line="523" pos:column="13">if <condition pos:line="523" pos:column="16">(<expr><name><name pos:line="523" pos:column="17">current<pos:position pos:line="523" pos:column="24"/></name><operator pos:line="523" pos:column="24">-&gt;<pos:position pos:line="523" pos:column="29"/></operator><name pos:line="523" pos:column="26">token<pos:position pos:line="523" pos:column="31"/></name><operator pos:line="523" pos:column="31">.<pos:position pos:line="523" pos:column="32"/></operator><name pos:line="523" pos:column="32">type<pos:position pos:line="523" pos:column="36"/></name></name> <operator pos:line="523" pos:column="37">==<pos:position pos:line="523" pos:column="39"/></operator> <name pos:line="523" pos:column="40">token_ge<pos:position pos:line="523" pos:column="48"/></name></expr>)<pos:position pos:line="523" pos:column="49"/></condition><then pos:line="523" pos:column="49"> <block pos:line="523" pos:column="50">{
                <expr_stmt><expr><name><name pos:line="524" pos:column="17">current<pos:position pos:line="524" pos:column="24"/></name><operator pos:line="524" pos:column="24">-&gt;<pos:position pos:line="524" pos:column="29"/></operator><name pos:line="524" pos:column="26">value<pos:position pos:line="524" pos:column="31"/></name></name> <operator pos:line="524" pos:column="32">=<pos:position pos:line="524" pos:column="33"/></operator> <name><name pos:line="524" pos:column="34">current<pos:position pos:line="524" pos:column="41"/></name><operator pos:line="524" pos:column="41">-&gt;<pos:position pos:line="524" pos:column="46"/></operator><name pos:line="524" pos:column="43">value<pos:position pos:line="524" pos:column="48"/></name></name> <operator pos:line="524" pos:column="49">&gt;=<pos:position pos:line="524" pos:column="54"/></operator> <literal type="number" pos:line="524" pos:column="52">0<pos:position pos:line="524" pos:column="53"/></literal></expr>;<pos:position pos:line="524" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="525" pos:column="14"/></block></then>
            <elseif pos:line="526" pos:column="13">else <if pos:line="526" pos:column="18">if <condition pos:line="526" pos:column="21">(<expr><name><name pos:line="526" pos:column="22">current<pos:position pos:line="526" pos:column="29"/></name><operator pos:line="526" pos:column="29">-&gt;<pos:position pos:line="526" pos:column="34"/></operator><name pos:line="526" pos:column="31">token<pos:position pos:line="526" pos:column="36"/></name><operator pos:line="526" pos:column="36">.<pos:position pos:line="526" pos:column="37"/></operator><name pos:line="526" pos:column="37">type<pos:position pos:line="526" pos:column="41"/></name></name> <operator pos:line="526" pos:column="42">==<pos:position pos:line="526" pos:column="44"/></operator> <name pos:line="526" pos:column="45">token_gt<pos:position pos:line="526" pos:column="53"/></name></expr>)<pos:position pos:line="526" pos:column="54"/></condition><then pos:line="526" pos:column="54"> <block pos:line="526" pos:column="55">{
                <expr_stmt><expr><name><name pos:line="527" pos:column="17">current<pos:position pos:line="527" pos:column="24"/></name><operator pos:line="527" pos:column="24">-&gt;<pos:position pos:line="527" pos:column="29"/></operator><name pos:line="527" pos:column="26">value<pos:position pos:line="527" pos:column="31"/></name></name> <operator pos:line="527" pos:column="32">=<pos:position pos:line="527" pos:column="33"/></operator> <name><name pos:line="527" pos:column="34">current<pos:position pos:line="527" pos:column="41"/></name><operator pos:line="527" pos:column="41">-&gt;<pos:position pos:line="527" pos:column="46"/></operator><name pos:line="527" pos:column="43">value<pos:position pos:line="527" pos:column="48"/></name></name> <operator pos:line="527" pos:column="49">&gt;<pos:position pos:line="527" pos:column="53"/></operator> <literal type="number" pos:line="527" pos:column="51">0<pos:position pos:line="527" pos:column="52"/></literal></expr>;<pos:position pos:line="527" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="528" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="529" pos:column="13">else <if pos:line="529" pos:column="18">if <condition pos:line="529" pos:column="21">(<expr><name><name pos:line="529" pos:column="22">current<pos:position pos:line="529" pos:column="29"/></name><operator pos:line="529" pos:column="29">-&gt;<pos:position pos:line="529" pos:column="34"/></operator><name pos:line="529" pos:column="31">token<pos:position pos:line="529" pos:column="36"/></name><operator pos:line="529" pos:column="36">.<pos:position pos:line="529" pos:column="37"/></operator><name pos:line="529" pos:column="37">type<pos:position pos:line="529" pos:column="41"/></name></name> <operator pos:line="529" pos:column="42">==<pos:position pos:line="529" pos:column="44"/></operator> <name pos:line="529" pos:column="45">token_le<pos:position pos:line="529" pos:column="53"/></name></expr>)<pos:position pos:line="529" pos:column="54"/></condition><then pos:line="529" pos:column="54"> <block pos:line="529" pos:column="55">{
                <expr_stmt><expr><name><name pos:line="530" pos:column="17">current<pos:position pos:line="530" pos:column="24"/></name><operator pos:line="530" pos:column="24">-&gt;<pos:position pos:line="530" pos:column="29"/></operator><name pos:line="530" pos:column="26">value<pos:position pos:line="530" pos:column="31"/></name></name> <operator pos:line="530" pos:column="32">=<pos:position pos:line="530" pos:column="33"/></operator> <name><name pos:line="530" pos:column="34">current<pos:position pos:line="530" pos:column="41"/></name><operator pos:line="530" pos:column="41">-&gt;<pos:position pos:line="530" pos:column="46"/></operator><name pos:line="530" pos:column="43">value<pos:position pos:line="530" pos:column="48"/></name></name> <operator pos:line="530" pos:column="49">&lt;=<pos:position pos:line="530" pos:column="54"/></operator> <literal type="number" pos:line="530" pos:column="52">0<pos:position pos:line="530" pos:column="53"/></literal></expr>;<pos:position pos:line="530" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="531" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="532" pos:column="13">else <if pos:line="532" pos:column="18">if <condition pos:line="532" pos:column="21">(<expr><name><name pos:line="532" pos:column="22">current<pos:position pos:line="532" pos:column="29"/></name><operator pos:line="532" pos:column="29">-&gt;<pos:position pos:line="532" pos:column="34"/></operator><name pos:line="532" pos:column="31">token<pos:position pos:line="532" pos:column="36"/></name><operator pos:line="532" pos:column="36">.<pos:position pos:line="532" pos:column="37"/></operator><name pos:line="532" pos:column="37">type<pos:position pos:line="532" pos:column="41"/></name></name> <operator pos:line="532" pos:column="42">==<pos:position pos:line="532" pos:column="44"/></operator> <name pos:line="532" pos:column="45">token_lt<pos:position pos:line="532" pos:column="53"/></name></expr>)<pos:position pos:line="532" pos:column="54"/></condition><then pos:line="532" pos:column="54"> <block pos:line="532" pos:column="55">{
                <expr_stmt><expr><name><name pos:line="533" pos:column="17">current<pos:position pos:line="533" pos:column="24"/></name><operator pos:line="533" pos:column="24">-&gt;<pos:position pos:line="533" pos:column="29"/></operator><name pos:line="533" pos:column="26">value<pos:position pos:line="533" pos:column="31"/></name></name> <operator pos:line="533" pos:column="32">=<pos:position pos:line="533" pos:column="33"/></operator> <name><name pos:line="533" pos:column="34">current<pos:position pos:line="533" pos:column="41"/></name><operator pos:line="533" pos:column="41">-&gt;<pos:position pos:line="533" pos:column="46"/></operator><name pos:line="533" pos:column="43">value<pos:position pos:line="533" pos:column="48"/></name></name> <operator pos:line="533" pos:column="49">&lt;<pos:position pos:line="533" pos:column="53"/></operator> <literal type="number" pos:line="533" pos:column="51">0<pos:position pos:line="533" pos:column="52"/></literal></expr>;<pos:position pos:line="533" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="534" pos:column="14"/></block></then></if></elseif>
            <else pos:line="535" pos:column="13">else <block pos:line="535" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="536" pos:column="17">current<pos:position pos:line="536" pos:column="24"/></name><operator pos:line="536" pos:column="24">-&gt;<pos:position pos:line="536" pos:column="29"/></operator><name pos:line="536" pos:column="26">value<pos:position pos:line="536" pos:column="31"/></name></name> <operator pos:line="536" pos:column="32">=<pos:position pos:line="536" pos:column="33"/></operator> <literal type="number" pos:line="536" pos:column="34">0<pos:position pos:line="536" pos:column="35"/></literal></expr>;<pos:position pos:line="536" pos:column="36"/></expr_stmt>     <comment type="block" pos:line="536" pos:column="41">/* Don't return -1 if unknown token */</comment>
            }<pos:position pos:line="537" pos:column="14"/></block></else></if>
<cpp:ifdef pos:line="538" pos:column="1">#<cpp:directive pos:line="538" pos:column="2">ifdef<pos:position pos:line="538" pos:column="7"/></cpp:directive> <name pos:line="538" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="538" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><name pos:line="539" pos:column="13">debug_pos<pos:position pos:line="539" pos:column="22"/></name> <operator pos:line="539" pos:column="23">+=<pos:position pos:line="539" pos:column="25"/></operator> <call><name pos:line="539" pos:column="26">sprintf<pos:position pos:line="539" pos:column="33"/></name> <argument_list pos:line="539" pos:column="34">(<argument><expr><operator pos:line="539" pos:column="35">&amp;<pos:position pos:line="539" pos:column="40"/></operator><name><name pos:line="539" pos:column="36">debug<pos:position pos:line="539" pos:column="41"/></name><index pos:line="539" pos:column="41">[<expr><name pos:line="539" pos:column="42">debug_pos<pos:position pos:line="539" pos:column="51"/></name></expr>]<pos:position pos:line="539" pos:column="52"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="539" pos:column="54">"     Returning %c\n"<pos:position pos:line="539" pos:column="75"/></literal></expr></argument>,
                                  <argument><expr><ternary><condition><expr><name><name pos:line="540" pos:column="35">current<pos:position pos:line="540" pos:column="42"/></name><operator pos:line="540" pos:column="42">-&gt;<pos:position pos:line="540" pos:column="47"/></operator><name pos:line="540" pos:column="44">value<pos:position pos:line="540" pos:column="49"/></name></name></expr> ?<pos:position pos:line="540" pos:column="51"/></condition><then pos:line="540" pos:column="51"> <expr><literal type="char" pos:line="540" pos:column="52">'1'<pos:position pos:line="540" pos:column="55"/></literal></expr> <pos:position pos:line="540" pos:column="56"/></then><else pos:line="540" pos:column="56">: <expr><literal type="char" pos:line="540" pos:column="58">'0'<pos:position pos:line="540" pos:column="61"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="540" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="540" pos:column="63"/></expr_stmt>
<cpp:endif pos:line="541" pos:column="1">#<cpp:directive pos:line="541" pos:column="2">endif<pos:position pos:line="541" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name><name pos:line="542" pos:column="13">current<pos:position pos:line="542" pos:column="20"/></name><operator pos:line="542" pos:column="20">-&gt;<pos:position pos:line="542" pos:column="25"/></operator><name pos:line="542" pos:column="22">done<pos:position pos:line="542" pos:column="26"/></name></name> <operator pos:line="542" pos:column="27">=<pos:position pos:line="542" pos:column="28"/></operator> <literal type="number" pos:line="542" pos:column="29">1<pos:position pos:line="542" pos:column="30"/></literal></expr>;<pos:position pos:line="542" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="543" pos:column="13">current<pos:position pos:line="543" pos:column="20"/></name> <operator pos:line="543" pos:column="21">=<pos:position pos:line="543" pos:column="22"/></operator> <name><name pos:line="543" pos:column="23">current<pos:position pos:line="543" pos:column="30"/></name><operator pos:line="543" pos:column="30">-&gt;<pos:position pos:line="543" pos:column="35"/></operator><name pos:line="543" pos:column="32">parent<pos:position pos:line="543" pos:column="38"/></name></name></expr>;<pos:position pos:line="543" pos:column="39"/></expr_stmt>
            <break pos:line="544" pos:column="13">break;<pos:position pos:line="544" pos:column="19"/></break>

        <case pos:line="546" pos:column="9">case <expr><name pos:line="546" pos:column="14">token_not<pos:position pos:line="546" pos:column="23"/></name></expr>:<pos:position pos:line="546" pos:column="24"/></case>
            <if pos:line="547" pos:column="13">if <condition pos:line="547" pos:column="16">(<expr><name><name pos:line="547" pos:column="17">current<pos:position pos:line="547" pos:column="24"/></name><operator pos:line="547" pos:column="24">-&gt;<pos:position pos:line="547" pos:column="29"/></operator><name pos:line="547" pos:column="26">right<pos:position pos:line="547" pos:column="31"/></name></name> <operator pos:line="547" pos:column="32">!=<pos:position pos:line="547" pos:column="34"/></operator> <operator pos:line="547" pos:column="35">(<pos:position pos:line="547" pos:column="36"/></operator>struct <name pos:line="547" pos:column="43">parse_node<pos:position pos:line="547" pos:column="53"/></name> <operator pos:line="547" pos:column="54">*<pos:position pos:line="547" pos:column="55"/></operator><operator pos:line="547" pos:column="55">)<pos:position pos:line="547" pos:column="56"/></operator> <name pos:line="547" pos:column="57">NULL<pos:position pos:line="547" pos:column="61"/></name></expr>)<pos:position pos:line="547" pos:column="62"/></condition><then pos:line="547" pos:column="62"> <block pos:line="547" pos:column="63">{
                <if pos:line="548" pos:column="17">if <condition pos:line="548" pos:column="20">(<expr><operator pos:line="548" pos:column="21">!<pos:position pos:line="548" pos:column="22"/></operator><name><name pos:line="548" pos:column="22">current<pos:position pos:line="548" pos:column="29"/></name><operator pos:line="548" pos:column="29">-&gt;<pos:position pos:line="548" pos:column="34"/></operator><name pos:line="548" pos:column="31">right<pos:position pos:line="548" pos:column="36"/></name><operator pos:line="548" pos:column="36">-&gt;<pos:position pos:line="548" pos:column="41"/></operator><name pos:line="548" pos:column="38">done<pos:position pos:line="548" pos:column="42"/></name></name></expr>)<pos:position pos:line="548" pos:column="43"/></condition><then pos:line="548" pos:column="43"> <block pos:line="548" pos:column="44">{
                    <expr_stmt><expr><name pos:line="549" pos:column="21">current<pos:position pos:line="549" pos:column="28"/></name> <operator pos:line="549" pos:column="29">=<pos:position pos:line="549" pos:column="30"/></operator> <name><name pos:line="549" pos:column="31">current<pos:position pos:line="549" pos:column="38"/></name><operator pos:line="549" pos:column="38">-&gt;<pos:position pos:line="549" pos:column="43"/></operator><name pos:line="549" pos:column="40">right<pos:position pos:line="549" pos:column="45"/></name></name></expr>;<pos:position pos:line="549" pos:column="46"/></expr_stmt>
                    <continue pos:line="550" pos:column="21">continue;<pos:position pos:line="550" pos:column="30"/></continue>
                }<pos:position pos:line="551" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name><name pos:line="552" pos:column="17">current<pos:position pos:line="552" pos:column="24"/></name><operator pos:line="552" pos:column="24">-&gt;<pos:position pos:line="552" pos:column="29"/></operator><name pos:line="552" pos:column="26">value<pos:position pos:line="552" pos:column="31"/></name></name> <operator pos:line="552" pos:column="32">=<pos:position pos:line="552" pos:column="33"/></operator> <operator pos:line="552" pos:column="34">!<pos:position pos:line="552" pos:column="35"/></operator><name><name pos:line="552" pos:column="35">current<pos:position pos:line="552" pos:column="42"/></name><operator pos:line="552" pos:column="42">-&gt;<pos:position pos:line="552" pos:column="47"/></operator><name pos:line="552" pos:column="44">right<pos:position pos:line="552" pos:column="49"/></name><operator pos:line="552" pos:column="49">-&gt;<pos:position pos:line="552" pos:column="54"/></operator><name pos:line="552" pos:column="51">value<pos:position pos:line="552" pos:column="56"/></name></name></expr>;<pos:position pos:line="552" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="553" pos:column="14"/></block></then>
            <else pos:line="554" pos:column="13">else <block pos:line="554" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="555" pos:column="17">current<pos:position pos:line="555" pos:column="24"/></name><operator pos:line="555" pos:column="24">-&gt;<pos:position pos:line="555" pos:column="29"/></operator><name pos:line="555" pos:column="26">value<pos:position pos:line="555" pos:column="31"/></name></name> <operator pos:line="555" pos:column="32">=<pos:position pos:line="555" pos:column="33"/></operator> <literal type="number" pos:line="555" pos:column="34">0<pos:position pos:line="555" pos:column="35"/></literal></expr>;<pos:position pos:line="555" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="556" pos:column="14"/></block></else></if>
<cpp:ifdef pos:line="557" pos:column="1">#<cpp:directive pos:line="557" pos:column="2">ifdef<pos:position pos:line="557" pos:column="7"/></cpp:directive> <name pos:line="557" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="557" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><name pos:line="558" pos:column="13">debug_pos<pos:position pos:line="558" pos:column="22"/></name> <operator pos:line="558" pos:column="23">+=<pos:position pos:line="558" pos:column="25"/></operator> <call><name pos:line="558" pos:column="26">sprintf<pos:position pos:line="558" pos:column="33"/></name> <argument_list pos:line="558" pos:column="34">(<argument><expr><operator pos:line="558" pos:column="35">&amp;<pos:position pos:line="558" pos:column="40"/></operator><name><name pos:line="558" pos:column="36">debug<pos:position pos:line="558" pos:column="41"/></name><index pos:line="558" pos:column="41">[<expr><name pos:line="558" pos:column="42">debug_pos<pos:position pos:line="558" pos:column="51"/></name></expr>]<pos:position pos:line="558" pos:column="52"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="558" pos:column="54">"     Evaluate !: %c\n"<pos:position pos:line="558" pos:column="77"/></literal></expr></argument>,
                                  <argument><expr><ternary><condition><expr><name><name pos:line="559" pos:column="35">current<pos:position pos:line="559" pos:column="42"/></name><operator pos:line="559" pos:column="42">-&gt;<pos:position pos:line="559" pos:column="47"/></operator><name pos:line="559" pos:column="44">value<pos:position pos:line="559" pos:column="49"/></name></name></expr> ?<pos:position pos:line="559" pos:column="51"/></condition><then pos:line="559" pos:column="51"> <expr><literal type="char" pos:line="559" pos:column="52">'1'<pos:position pos:line="559" pos:column="55"/></literal></expr> <pos:position pos:line="559" pos:column="56"/></then><else pos:line="559" pos:column="56">: <expr><literal type="char" pos:line="559" pos:column="58">'0'<pos:position pos:line="559" pos:column="61"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="559" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="559" pos:column="63"/></expr_stmt>
<cpp:endif pos:line="560" pos:column="1">#<cpp:directive pos:line="560" pos:column="2">endif<pos:position pos:line="560" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name><name pos:line="561" pos:column="13">current<pos:position pos:line="561" pos:column="20"/></name><operator pos:line="561" pos:column="20">-&gt;<pos:position pos:line="561" pos:column="25"/></operator><name pos:line="561" pos:column="22">done<pos:position pos:line="561" pos:column="26"/></name></name> <operator pos:line="561" pos:column="27">=<pos:position pos:line="561" pos:column="28"/></operator> <literal type="number" pos:line="561" pos:column="29">1<pos:position pos:line="561" pos:column="30"/></literal></expr>;<pos:position pos:line="561" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="562" pos:column="13">current<pos:position pos:line="562" pos:column="20"/></name> <operator pos:line="562" pos:column="21">=<pos:position pos:line="562" pos:column="22"/></operator> <name><name pos:line="562" pos:column="23">current<pos:position pos:line="562" pos:column="30"/></name><operator pos:line="562" pos:column="30">-&gt;<pos:position pos:line="562" pos:column="35"/></operator><name pos:line="562" pos:column="32">parent<pos:position pos:line="562" pos:column="38"/></name></name></expr>;<pos:position pos:line="562" pos:column="39"/></expr_stmt>
            <break pos:line="563" pos:column="13">break;<pos:position pos:line="563" pos:column="19"/></break>

        <case pos:line="565" pos:column="9">case <expr><name pos:line="565" pos:column="14">token_group<pos:position pos:line="565" pos:column="25"/></name></expr>:<pos:position pos:line="565" pos:column="26"/></case>
            <if pos:line="566" pos:column="13">if <condition pos:line="566" pos:column="16">(<expr><name><name pos:line="566" pos:column="17">current<pos:position pos:line="566" pos:column="24"/></name><operator pos:line="566" pos:column="24">-&gt;<pos:position pos:line="566" pos:column="29"/></operator><name pos:line="566" pos:column="26">right<pos:position pos:line="566" pos:column="31"/></name></name> <operator pos:line="566" pos:column="32">!=<pos:position pos:line="566" pos:column="34"/></operator> <operator pos:line="566" pos:column="35">(<pos:position pos:line="566" pos:column="36"/></operator>struct <name pos:line="566" pos:column="43">parse_node<pos:position pos:line="566" pos:column="53"/></name> <operator pos:line="566" pos:column="54">*<pos:position pos:line="566" pos:column="55"/></operator><operator pos:line="566" pos:column="55">)<pos:position pos:line="566" pos:column="56"/></operator> <name pos:line="566" pos:column="57">NULL<pos:position pos:line="566" pos:column="61"/></name></expr>)<pos:position pos:line="566" pos:column="62"/></condition><then pos:line="566" pos:column="62"> <block pos:line="566" pos:column="63">{
                <if pos:line="567" pos:column="17">if <condition pos:line="567" pos:column="20">(<expr><operator pos:line="567" pos:column="21">!<pos:position pos:line="567" pos:column="22"/></operator><name><name pos:line="567" pos:column="22">current<pos:position pos:line="567" pos:column="29"/></name><operator pos:line="567" pos:column="29">-&gt;<pos:position pos:line="567" pos:column="34"/></operator><name pos:line="567" pos:column="31">right<pos:position pos:line="567" pos:column="36"/></name><operator pos:line="567" pos:column="36">-&gt;<pos:position pos:line="567" pos:column="41"/></operator><name pos:line="567" pos:column="38">done<pos:position pos:line="567" pos:column="42"/></name></name></expr>)<pos:position pos:line="567" pos:column="43"/></condition><then pos:line="567" pos:column="43"> <block pos:line="567" pos:column="44">{
                    <expr_stmt><expr><name pos:line="568" pos:column="21">current<pos:position pos:line="568" pos:column="28"/></name> <operator pos:line="568" pos:column="29">=<pos:position pos:line="568" pos:column="30"/></operator> <name><name pos:line="568" pos:column="31">current<pos:position pos:line="568" pos:column="38"/></name><operator pos:line="568" pos:column="38">-&gt;<pos:position pos:line="568" pos:column="43"/></operator><name pos:line="568" pos:column="40">right<pos:position pos:line="568" pos:column="45"/></name></name></expr>;<pos:position pos:line="568" pos:column="46"/></expr_stmt>
                    <continue pos:line="569" pos:column="21">continue;<pos:position pos:line="569" pos:column="30"/></continue>
                }<pos:position pos:line="570" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name><name pos:line="571" pos:column="17">current<pos:position pos:line="571" pos:column="24"/></name><operator pos:line="571" pos:column="24">-&gt;<pos:position pos:line="571" pos:column="29"/></operator><name pos:line="571" pos:column="26">value<pos:position pos:line="571" pos:column="31"/></name></name> <operator pos:line="571" pos:column="32">=<pos:position pos:line="571" pos:column="33"/></operator> <name><name pos:line="571" pos:column="34">current<pos:position pos:line="571" pos:column="41"/></name><operator pos:line="571" pos:column="41">-&gt;<pos:position pos:line="571" pos:column="46"/></operator><name pos:line="571" pos:column="43">right<pos:position pos:line="571" pos:column="48"/></name><operator pos:line="571" pos:column="48">-&gt;<pos:position pos:line="571" pos:column="53"/></operator><name pos:line="571" pos:column="50">value<pos:position pos:line="571" pos:column="55"/></name></name></expr>;<pos:position pos:line="571" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="572" pos:column="14"/></block></then>
            <else pos:line="573" pos:column="13">else <block pos:line="573" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="574" pos:column="17">current<pos:position pos:line="574" pos:column="24"/></name><operator pos:line="574" pos:column="24">-&gt;<pos:position pos:line="574" pos:column="29"/></operator><name pos:line="574" pos:column="26">value<pos:position pos:line="574" pos:column="31"/></name></name> <operator pos:line="574" pos:column="32">=<pos:position pos:line="574" pos:column="33"/></operator> <literal type="number" pos:line="574" pos:column="34">1<pos:position pos:line="574" pos:column="35"/></literal></expr>;<pos:position pos:line="574" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="575" pos:column="14"/></block></else></if>
<cpp:ifdef pos:line="576" pos:column="1">#<cpp:directive pos:line="576" pos:column="2">ifdef<pos:position pos:line="576" pos:column="7"/></cpp:directive> <name pos:line="576" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="576" pos:column="21"/></name></cpp:ifdef>
            <expr_stmt><expr><name pos:line="577" pos:column="13">debug_pos<pos:position pos:line="577" pos:column="22"/></name> <operator pos:line="577" pos:column="23">+=<pos:position pos:line="577" pos:column="25"/></operator> <call><name pos:line="577" pos:column="26">sprintf<pos:position pos:line="577" pos:column="33"/></name> <argument_list pos:line="577" pos:column="34">(<argument><expr><operator pos:line="577" pos:column="35">&amp;<pos:position pos:line="577" pos:column="40"/></operator><name><name pos:line="577" pos:column="36">debug<pos:position pos:line="577" pos:column="41"/></name><index pos:line="577" pos:column="41">[<expr><name pos:line="577" pos:column="42">debug_pos<pos:position pos:line="577" pos:column="51"/></name></expr>]<pos:position pos:line="577" pos:column="52"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="577" pos:column="54">"     Evaluate (): %c\n"<pos:position pos:line="577" pos:column="78"/></literal></expr></argument>,
                                  <argument><expr><ternary><condition><expr><name><name pos:line="578" pos:column="35">current<pos:position pos:line="578" pos:column="42"/></name><operator pos:line="578" pos:column="42">-&gt;<pos:position pos:line="578" pos:column="47"/></operator><name pos:line="578" pos:column="44">value<pos:position pos:line="578" pos:column="49"/></name></name></expr> ?<pos:position pos:line="578" pos:column="51"/></condition><then pos:line="578" pos:column="51"> <expr><literal type="char" pos:line="578" pos:column="52">'1'<pos:position pos:line="578" pos:column="55"/></literal></expr> <pos:position pos:line="578" pos:column="56"/></then><else pos:line="578" pos:column="56">: <expr><literal type="char" pos:line="578" pos:column="58">'0'<pos:position pos:line="578" pos:column="61"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="578" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="578" pos:column="63"/></expr_stmt>
<cpp:endif pos:line="579" pos:column="1">#<cpp:directive pos:line="579" pos:column="2">endif<pos:position pos:line="579" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name><name pos:line="580" pos:column="13">current<pos:position pos:line="580" pos:column="20"/></name><operator pos:line="580" pos:column="20">-&gt;<pos:position pos:line="580" pos:column="25"/></operator><name pos:line="580" pos:column="22">done<pos:position pos:line="580" pos:column="26"/></name></name> <operator pos:line="580" pos:column="27">=<pos:position pos:line="580" pos:column="28"/></operator> <literal type="number" pos:line="580" pos:column="29">1<pos:position pos:line="580" pos:column="30"/></literal></expr>;<pos:position pos:line="580" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="581" pos:column="13">current<pos:position pos:line="581" pos:column="20"/></name> <operator pos:line="581" pos:column="21">=<pos:position pos:line="581" pos:column="22"/></operator> <name><name pos:line="581" pos:column="23">current<pos:position pos:line="581" pos:column="30"/></name><operator pos:line="581" pos:column="30">-&gt;<pos:position pos:line="581" pos:column="35"/></operator><name pos:line="581" pos:column="32">parent<pos:position pos:line="581" pos:column="38"/></name></name></expr>;<pos:position pos:line="581" pos:column="39"/></expr_stmt>
            <break pos:line="582" pos:column="13">break;<pos:position pos:line="582" pos:column="19"/></break>

        <case pos:line="584" pos:column="9">case <expr><name pos:line="584" pos:column="14">token_lbrace<pos:position pos:line="584" pos:column="26"/></name></expr>:<pos:position pos:line="584" pos:column="27"/></case>
            <expr_stmt><expr><call><name pos:line="585" pos:column="13">ap_log_rerror<pos:position pos:line="585" pos:column="26"/></name><argument_list pos:line="585" pos:column="26">(<argument><expr><name pos:line="585" pos:column="27">APLOG_MARK<pos:position pos:line="585" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="585" pos:column="39">APLOG_ERR<pos:position pos:line="585" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="585" pos:column="50">0<pos:position pos:line="585" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="585" pos:column="53">r<pos:position pos:line="585" pos:column="54"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="586" pos:column="25">"Unmatched '(' in \"%s\" in file %s"<pos:position pos:line="586" pos:column="61"/></literal></expr></argument>,
                        <argument><expr><name pos:line="587" pos:column="25">expr<pos:position pos:line="587" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="587" pos:column="31">r<pos:position pos:line="587" pos:column="32"/></name><operator pos:line="587" pos:column="32">-&gt;<pos:position pos:line="587" pos:column="37"/></operator><name pos:line="587" pos:column="34">filename<pos:position pos:line="587" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="587" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="587" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="588" pos:column="13">*<pos:position pos:line="588" pos:column="14"/></operator><name pos:line="588" pos:column="14">was_error<pos:position pos:line="588" pos:column="23"/></name> <operator pos:line="588" pos:column="24">=<pos:position pos:line="588" pos:column="25"/></operator> <literal type="number" pos:line="588" pos:column="26">1<pos:position pos:line="588" pos:column="27"/></literal></expr>;<pos:position pos:line="588" pos:column="28"/></expr_stmt>
            <return pos:line="589" pos:column="13">return <expr><name pos:line="589" pos:column="20">retval<pos:position pos:line="589" pos:column="26"/></name></expr>;<pos:position pos:line="589" pos:column="27"/></return>

        <case pos:line="591" pos:column="9">case <expr><name pos:line="591" pos:column="14">token_rbrace<pos:position pos:line="591" pos:column="26"/></name></expr>:<pos:position pos:line="591" pos:column="27"/></case>
            <expr_stmt><expr><call><name pos:line="592" pos:column="13">ap_log_rerror<pos:position pos:line="592" pos:column="26"/></name><argument_list pos:line="592" pos:column="26">(<argument><expr><name pos:line="592" pos:column="27">APLOG_MARK<pos:position pos:line="592" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="592" pos:column="39">APLOG_ERR<pos:position pos:line="592" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="592" pos:column="50">0<pos:position pos:line="592" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="592" pos:column="53">r<pos:position pos:line="592" pos:column="54"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="593" pos:column="25">"Unmatched ')' in \"%s\" in file %s"<pos:position pos:line="593" pos:column="61"/></literal></expr></argument>,
                        <argument><expr><name pos:line="594" pos:column="25">expr<pos:position pos:line="594" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="594" pos:column="31">r<pos:position pos:line="594" pos:column="32"/></name><operator pos:line="594" pos:column="32">-&gt;<pos:position pos:line="594" pos:column="37"/></operator><name pos:line="594" pos:column="34">filename<pos:position pos:line="594" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="594" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="594" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="595" pos:column="13">*<pos:position pos:line="595" pos:column="14"/></operator><name pos:line="595" pos:column="14">was_error<pos:position pos:line="595" pos:column="23"/></name> <operator pos:line="595" pos:column="24">=<pos:position pos:line="595" pos:column="25"/></operator> <literal type="number" pos:line="595" pos:column="26">1<pos:position pos:line="595" pos:column="27"/></literal></expr>;<pos:position pos:line="595" pos:column="28"/></expr_stmt>
            <return pos:line="596" pos:column="13">return <expr><name pos:line="596" pos:column="20">retval<pos:position pos:line="596" pos:column="26"/></name></expr>;<pos:position pos:line="596" pos:column="27"/></return>

        <default pos:line="598" pos:column="9">default:<pos:position pos:line="598" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="599" pos:column="13">ap_log_rerror<pos:position pos:line="599" pos:column="26"/></name><argument_list pos:line="599" pos:column="26">(<argument><expr><name pos:line="599" pos:column="27">APLOG_MARK<pos:position pos:line="599" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="599" pos:column="39">APLOG_ERR<pos:position pos:line="599" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="599" pos:column="50">0<pos:position pos:line="599" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="599" pos:column="53">r<pos:position pos:line="599" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="600" pos:column="27">"bad token type"<pos:position pos:line="600" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="600" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="600" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="601" pos:column="13">*<pos:position pos:line="601" pos:column="14"/></operator><name pos:line="601" pos:column="14">was_error<pos:position pos:line="601" pos:column="23"/></name> <operator pos:line="601" pos:column="24">=<pos:position pos:line="601" pos:column="25"/></operator> <literal type="number" pos:line="601" pos:column="26">1<pos:position pos:line="601" pos:column="27"/></literal></expr>;<pos:position pos:line="601" pos:column="28"/></expr_stmt>
            <return pos:line="602" pos:column="13">return <expr><name pos:line="602" pos:column="20">retval<pos:position pos:line="602" pos:column="26"/></name></expr>;<pos:position pos:line="602" pos:column="27"/></return>
        }<pos:position pos:line="603" pos:column="10"/></block></switch>
    }<pos:position pos:line="604" pos:column="6"/></block></while>

    <expr_stmt><expr><name pos:line="606" pos:column="5">retval<pos:position pos:line="606" pos:column="11"/></name> <operator pos:line="606" pos:column="12">=<pos:position pos:line="606" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="606" pos:column="14">(<pos:position pos:line="606" pos:column="15"/></operator><name pos:line="606" pos:column="15">root<pos:position pos:line="606" pos:column="19"/></name> <operator pos:line="606" pos:column="20">==<pos:position pos:line="606" pos:column="22"/></operator> <operator pos:line="606" pos:column="23">(<pos:position pos:line="606" pos:column="24"/></operator>struct <name pos:line="606" pos:column="31">parse_node<pos:position pos:line="606" pos:column="41"/></name> <operator pos:line="606" pos:column="42">*<pos:position pos:line="606" pos:column="43"/></operator><operator pos:line="606" pos:column="43">)<pos:position pos:line="606" pos:column="44"/></operator> <name pos:line="606" pos:column="45">NULL<pos:position pos:line="606" pos:column="49"/></name><operator pos:line="606" pos:column="49">)<pos:position pos:line="606" pos:column="50"/></operator></expr> ?<pos:position pos:line="606" pos:column="52"/></condition><then pos:line="606" pos:column="52"> <expr><literal type="number" pos:line="606" pos:column="53">0<pos:position pos:line="606" pos:column="54"/></literal></expr> <pos:position pos:line="606" pos:column="55"/></then><else pos:line="606" pos:column="55">: <expr><name><name pos:line="606" pos:column="57">root<pos:position pos:line="606" pos:column="61"/></name><operator pos:line="606" pos:column="61">-&gt;<pos:position pos:line="606" pos:column="66"/></operator><name pos:line="606" pos:column="63">value<pos:position pos:line="606" pos:column="68"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="606" pos:column="69"/></expr_stmt>
    <return pos:line="607" pos:column="5">return <expr><operator pos:line="607" pos:column="12">(<pos:position pos:line="607" pos:column="13"/></operator><name pos:line="607" pos:column="13">retval<pos:position pos:line="607" pos:column="19"/></name><operator pos:line="607" pos:column="19">)<pos:position pos:line="607" pos:column="20"/></operator></expr>;<pos:position pos:line="607" pos:column="21"/></return>
}<pos:position pos:line="608" pos:column="2"/></block></function></unit>

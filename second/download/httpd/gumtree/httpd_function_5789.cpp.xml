<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5789.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">pass_out<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_bucket_brigade<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">bb<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">void<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">ctx<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list> 
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">h2_conn_io<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">io<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><operator pos:line="3" pos:column="22">(<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">h2_conn_io<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></operator><operator pos:line="3" pos:column="34">)<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="35">ctx<pos:position pos:line="3" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">status<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_off_t<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">bblen<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">APR_BRIGADE_EMPTY<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">bb<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31"> <block pos:line="7" pos:column="32">{
        <return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">APR_SUCCESS<pos:position pos:line="8" pos:column="27"/></name></expr>;<pos:position pos:line="8" pos:column="28"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ap_update_child_status<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name><name pos:line="11" pos:column="28">io<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">connection<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">sbh<pos:position pos:line="11" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">SERVER_BUSY_WRITE<pos:position pos:line="11" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="68">NULL<pos:position pos:line="11" pos:column="72"/></name></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">status<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">apr_brigade_length<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">bb<pos:position pos:line="12" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="37">0<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="40">&amp;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="41">bblen<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">status<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">APR_SUCCESS<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ap_log_cerror<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">APLOG_MARK<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">APLOG_TRACE1<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="49">0<pos:position pos:line="14" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="52">io<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">-&gt;<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="56">connection<pos:position pos:line="14" pos:column="66"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="15" pos:column="23">"h2_conn_io(%ld): pass_out brigade %ld bytes"<pos:position pos:line="15" pos:column="68"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="16" pos:column="23">io<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">connection<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">id<pos:position pos:line="16" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="43">(<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">long<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">)<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="49">bblen<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">status<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">ap_pass_brigade<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name><name pos:line="17" pos:column="34">io<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">connection<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">-&gt;<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="50">output_filters<pos:position pos:line="17" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="66">bb<pos:position pos:line="17" pos:column="68"/></name></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="70"/></expr_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">status<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">==<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">APR_SUCCESS<pos:position pos:line="18" pos:column="34"/></name></expr>)<pos:position pos:line="18" pos:column="35"/></condition><then pos:line="18" pos:column="35"> <block pos:line="18" pos:column="36">{
            <expr_stmt><expr><name><name pos:line="19" pos:column="13">io<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">bytes_written<pos:position pos:line="19" pos:column="30"/></name></name> <operator pos:line="19" pos:column="31">+=<pos:position pos:line="19" pos:column="33"/></operator> <operator pos:line="19" pos:column="34">(<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">apr_size_t<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">)<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">bblen<pos:position pos:line="19" pos:column="51"/></name></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="20" pos:column="13">io<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">last_write<pos:position pos:line="20" pos:column="27"/></name></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <call><name pos:line="20" pos:column="30">apr_time_now<pos:position pos:line="20" pos:column="42"/></name><argument_list pos:line="20" pos:column="42">()<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">apr_brigade_cleanup<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">bb<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">status<pos:position pos:line="24" pos:column="18"/></name></expr>;<pos:position pos:line="24" pos:column="19"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

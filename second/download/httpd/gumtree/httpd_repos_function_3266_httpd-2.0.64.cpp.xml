<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3266_httpd-2.0.64.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">argv<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
<decl_stmt><decl><type><name pos:line="4" pos:column="1">int<pos:position pos:line="4" pos:column="4"/></name></type> <name pos:line="4" pos:column="5">i<pos:position pos:line="4" pos:column="6"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="8">j<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="5" pos:column="1">int<pos:position pos:line="5" pos:column="4"/></name></type> <name pos:line="5" pos:column="5">rc<pos:position pos:line="5" pos:column="7"/></name> <init pos:line="5" pos:column="8">= <expr><literal type="number" pos:line="5" pos:column="10">1<pos:position pos:line="5" pos:column="11"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="6" pos:column="1">int<pos:position pos:line="6" pos:column="4"/></name></type> <name pos:line="6" pos:column="5">options<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="7" pos:column="1">int<pos:position pos:line="7" pos:column="4"/></name></type> <name pos:line="7" pos:column="5">errptr<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="8" pos:column="1">const<pos:position pos:line="8" pos:column="6"/></specifier> <name pos:line="8" pos:column="7">char<pos:position pos:line="8" pos:column="11"/></name> <modifier pos:line="8" pos:column="12">*<pos:position pos:line="8" pos:column="13"/></modifier></type><name pos:line="8" pos:column="13">error<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="9" pos:column="1">BOOL<pos:position pos:line="9" pos:column="5"/></name></type> <name pos:line="9" pos:column="6">only_one_at_top<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>

<comment type="block" pos:line="11" pos:column="1">/* Process the options */</comment>

<for pos:line="13" pos:column="1">for <control pos:line="13" pos:column="5">(<init><expr><name pos:line="13" pos:column="6">i<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <literal type="number" pos:line="13" pos:column="10">1<pos:position pos:line="13" pos:column="11"/></literal></expr>;<pos:position pos:line="13" pos:column="12"/></init> <condition><expr><name pos:line="13" pos:column="13">i<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">&lt;<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="17">argc<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></condition> <incr><expr><name pos:line="13" pos:column="23">i<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">++<pos:position pos:line="13" pos:column="26"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="27"/></control>
  <block pos:line="14" pos:column="3">{
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">argv<pos:position pos:line="15" pos:column="11"/></name><index pos:line="15" pos:column="11">[<expr><name pos:line="15" pos:column="12">i<pos:position pos:line="15" pos:column="13"/></name></expr>]<pos:position pos:line="15" pos:column="14"/></index><index pos:line="15" pos:column="14">[<expr><literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal></expr>]<pos:position pos:line="15" pos:column="17"/></index></name> <operator pos:line="15" pos:column="18">!=<pos:position pos:line="15" pos:column="20"/></operator> <literal type="char" pos:line="15" pos:column="21">'-'<pos:position pos:line="15" pos:column="24"/></literal></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25"> <block type="pseudo"><break pos:line="15" pos:column="26">break;<pos:position pos:line="15" pos:column="32"/></break></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/* Long name options */</comment>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name><name pos:line="19" pos:column="7">argv<pos:position pos:line="19" pos:column="11"/></name><index pos:line="19" pos:column="11">[<expr><name pos:line="19" pos:column="12">i<pos:position pos:line="19" pos:column="13"/></name></expr>]<pos:position pos:line="19" pos:column="14"/></index><index pos:line="19" pos:column="14">[<expr><literal type="number" pos:line="19" pos:column="15">1<pos:position pos:line="19" pos:column="16"/></literal></expr>]<pos:position pos:line="19" pos:column="17"/></index></name> <operator pos:line="19" pos:column="18">==<pos:position pos:line="19" pos:column="20"/></operator> <literal type="char" pos:line="19" pos:column="21">'-'<pos:position pos:line="19" pos:column="24"/></literal></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25">
    <block pos:line="20" pos:column="5">{
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">option_item<pos:position pos:line="21" pos:column="16"/></name> <modifier pos:line="21" pos:column="17">*<pos:position pos:line="21" pos:column="18"/></modifier></type><name pos:line="21" pos:column="18">op<pos:position pos:line="21" pos:column="20"/></name></decl>;<pos:position pos:line="21" pos:column="21"/></decl_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">strncmp<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><name><name pos:line="23" pos:column="17">argv<pos:position pos:line="23" pos:column="21"/></name><index pos:line="23" pos:column="21">[<expr><name pos:line="23" pos:column="22">i<pos:position pos:line="23" pos:column="23"/></name></expr>]<pos:position pos:line="23" pos:column="24"/></index></name><operator pos:line="23" pos:column="24">+<pos:position pos:line="23" pos:column="25"/></operator><literal type="number" pos:line="23" pos:column="25">2<pos:position pos:line="23" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="28">"file="<pos:position pos:line="23" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="37">5<pos:position pos:line="23" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call> <operator pos:line="23" pos:column="40">==<pos:position pos:line="23" pos:column="42"/></operator> <literal type="number" pos:line="23" pos:column="43">0<pos:position pos:line="23" pos:column="44"/></literal></expr>)<pos:position pos:line="23" pos:column="45"/></condition><then pos:line="23" pos:column="45">
      <block pos:line="24" pos:column="7">{
      <expr_stmt><expr><name pos:line="25" pos:column="7">pattern_filename<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <name><name pos:line="25" pos:column="26">argv<pos:position pos:line="25" pos:column="30"/></name><index pos:line="25" pos:column="30">[<expr><name pos:line="25" pos:column="31">i<pos:position pos:line="25" pos:column="32"/></name></expr>]<pos:position pos:line="25" pos:column="33"/></index></name> <operator pos:line="25" pos:column="34">+<pos:position pos:line="25" pos:column="35"/></operator> <literal type="number" pos:line="25" pos:column="36">7<pos:position pos:line="25" pos:column="37"/></literal></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
      <continue pos:line="26" pos:column="7">continue;<pos:position pos:line="26" pos:column="16"/></continue>
      }<pos:position pos:line="27" pos:column="8"/></block></then></if>

    <for pos:line="29" pos:column="5">for <control pos:line="29" pos:column="9">(<init><expr><name pos:line="29" pos:column="10">op<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">optionlist<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></init> <condition><expr><name><name pos:line="29" pos:column="27">op<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">-&gt;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="31">one_char<pos:position pos:line="29" pos:column="39"/></name></name> <operator pos:line="29" pos:column="40">!=<pos:position pos:line="29" pos:column="42"/></operator> <literal type="number" pos:line="29" pos:column="43">0<pos:position pos:line="29" pos:column="44"/></literal></expr>;<pos:position pos:line="29" pos:column="45"/></condition> <incr><expr><name pos:line="29" pos:column="46">op<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">++<pos:position pos:line="29" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="51"/></control>
      <block pos:line="30" pos:column="7">{
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><call><name pos:line="31" pos:column="11">strcmp<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name><name pos:line="31" pos:column="18">argv<pos:position pos:line="31" pos:column="22"/></name><index pos:line="31" pos:column="22">[<expr><name pos:line="31" pos:column="23">i<pos:position pos:line="31" pos:column="24"/></name></expr>]<pos:position pos:line="31" pos:column="25"/></index></name><operator pos:line="31" pos:column="25">+<pos:position pos:line="31" pos:column="26"/></operator><literal type="number" pos:line="31" pos:column="26">2<pos:position pos:line="31" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="29">op<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">long_name<pos:position pos:line="31" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></call> <operator pos:line="31" pos:column="44">==<pos:position pos:line="31" pos:column="46"/></operator> <literal type="number" pos:line="31" pos:column="47">0<pos:position pos:line="31" pos:column="48"/></literal></expr>)<pos:position pos:line="31" pos:column="49"/></condition><then pos:line="31" pos:column="49">
        <block pos:line="32" pos:column="9">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">options<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <call><name pos:line="33" pos:column="19">handle_option<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name><name pos:line="33" pos:column="33">op<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">one_char<pos:position pos:line="33" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="47">options<pos:position pos:line="33" pos:column="54"/></name></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="56"/></expr_stmt>
        <break pos:line="34" pos:column="9">break;<pos:position pos:line="34" pos:column="15"/></break>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
      }<pos:position pos:line="36" pos:column="8"/></block></for>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name><name pos:line="37" pos:column="9">op<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">-&gt;<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="13">one_char<pos:position pos:line="37" pos:column="21"/></name></name> <operator pos:line="37" pos:column="22">==<pos:position pos:line="37" pos:column="24"/></operator> <literal type="number" pos:line="37" pos:column="25">0<pos:position pos:line="37" pos:column="26"/></literal></expr>)<pos:position pos:line="37" pos:column="27"/></condition><then pos:line="37" pos:column="27">
      <block pos:line="38" pos:column="7">{
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">fprintf<pos:position pos:line="39" pos:column="14"/></name><argument_list pos:line="39" pos:column="14">(<argument><expr><name pos:line="39" pos:column="15">stderr<pos:position pos:line="39" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="23">"pcregrep: Unknown option %s\n"<pos:position pos:line="39" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="56">argv<pos:position pos:line="39" pos:column="60"/></name><index pos:line="39" pos:column="60">[<expr><name pos:line="39" pos:column="61">i<pos:position pos:line="39" pos:column="62"/></name></expr>]<pos:position pos:line="39" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">exit<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><call><name pos:line="40" pos:column="12">usage<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<argument><expr><literal type="number" pos:line="40" pos:column="18">2<pos:position pos:line="40" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="20"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="41" pos:column="8"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then>

  <comment type="block" pos:line="44" pos:column="3">/* One-char options */</comment>

  <else pos:line="46" pos:column="3">else
    <block pos:line="47" pos:column="5">{
    <decl_stmt><decl><type><name pos:line="48" pos:column="5">char<pos:position pos:line="48" pos:column="9"/></name> <modifier pos:line="48" pos:column="10">*<pos:position pos:line="48" pos:column="11"/></modifier></type><name pos:line="48" pos:column="11">s<pos:position pos:line="48" pos:column="12"/></name> <init pos:line="48" pos:column="13">= <expr><name><name pos:line="48" pos:column="15">argv<pos:position pos:line="48" pos:column="19"/></name><index pos:line="48" pos:column="19">[<expr><name pos:line="48" pos:column="20">i<pos:position pos:line="48" pos:column="21"/></name></expr>]<pos:position pos:line="48" pos:column="22"/></index></name> <operator pos:line="48" pos:column="23">+<pos:position pos:line="48" pos:column="24"/></operator> <literal type="number" pos:line="48" pos:column="25">1<pos:position pos:line="48" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="48" pos:column="27"/></decl_stmt>
    <while pos:line="49" pos:column="5">while <condition pos:line="49" pos:column="11">(<expr><operator pos:line="49" pos:column="12">*<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="13">s<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">!=<pos:position pos:line="49" pos:column="17"/></operator> <literal type="number" pos:line="49" pos:column="18">0<pos:position pos:line="49" pos:column="19"/></literal></expr>)<pos:position pos:line="49" pos:column="20"/></condition>
      <block pos:line="50" pos:column="7">{
      <if pos:line="51" pos:column="7">if <condition pos:line="51" pos:column="10">(<expr><operator pos:line="51" pos:column="11">*<pos:position pos:line="51" pos:column="12"/></operator><name pos:line="51" pos:column="12">s<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">==<pos:position pos:line="51" pos:column="16"/></operator> <literal type="char" pos:line="51" pos:column="17">'f'<pos:position pos:line="51" pos:column="20"/></literal></expr>)<pos:position pos:line="51" pos:column="21"/></condition><then pos:line="51" pos:column="21">
        <block pos:line="52" pos:column="9">{
        <expr_stmt><expr><name pos:line="53" pos:column="9">pattern_filename<pos:position pos:line="53" pos:column="25"/></name> <operator pos:line="53" pos:column="26">=<pos:position pos:line="53" pos:column="27"/></operator> <name pos:line="53" pos:column="28">s<pos:position pos:line="53" pos:column="29"/></name> <operator pos:line="53" pos:column="30">+<pos:position pos:line="53" pos:column="31"/></operator> <literal type="number" pos:line="53" pos:column="32">1<pos:position pos:line="53" pos:column="33"/></literal></expr>;<pos:position pos:line="53" pos:column="34"/></expr_stmt>
        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name><name pos:line="54" pos:column="13">pattern_filename<pos:position pos:line="54" pos:column="29"/></name><index pos:line="54" pos:column="29">[<expr><literal type="number" pos:line="54" pos:column="30">0<pos:position pos:line="54" pos:column="31"/></literal></expr>]<pos:position pos:line="54" pos:column="32"/></index></name> <operator pos:line="54" pos:column="33">==<pos:position pos:line="54" pos:column="35"/></operator> <literal type="number" pos:line="54" pos:column="36">0<pos:position pos:line="54" pos:column="37"/></literal></expr>)<pos:position pos:line="54" pos:column="38"/></condition><then pos:line="54" pos:column="38">
          <block pos:line="55" pos:column="11">{
          <if pos:line="56" pos:column="11">if <condition pos:line="56" pos:column="14">(<expr><name pos:line="56" pos:column="15">i<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">&gt;=<pos:position pos:line="56" pos:column="22"/></operator> <name pos:line="56" pos:column="20">argc<pos:position pos:line="56" pos:column="24"/></name> <operator pos:line="56" pos:column="25">-<pos:position pos:line="56" pos:column="26"/></operator> <literal type="number" pos:line="56" pos:column="27">1<pos:position pos:line="56" pos:column="28"/></literal></expr>)<pos:position pos:line="56" pos:column="29"/></condition><then pos:line="56" pos:column="29">
            <block pos:line="57" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">fprintf<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><name pos:line="58" pos:column="21">stderr<pos:position pos:line="58" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="29">"pcregrep: File name missing after -f\n"<pos:position pos:line="58" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">exit<pos:position pos:line="59" pos:column="17"/></name><argument_list pos:line="59" pos:column="17">(<argument><expr><call><name pos:line="59" pos:column="18">usage<pos:position pos:line="59" pos:column="23"/></name><argument_list pos:line="59" pos:column="23">(<argument><expr><literal type="number" pos:line="59" pos:column="24">2<pos:position pos:line="59" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="60" pos:column="14"/></block></then></if>
          <expr_stmt><expr><name pos:line="61" pos:column="11">pattern_filename<pos:position pos:line="61" pos:column="27"/></name> <operator pos:line="61" pos:column="28">=<pos:position pos:line="61" pos:column="29"/></operator> <name><name pos:line="61" pos:column="30">argv<pos:position pos:line="61" pos:column="34"/></name><index pos:line="61" pos:column="34">[<expr><operator pos:line="61" pos:column="35">++<pos:position pos:line="61" pos:column="37"/></operator><name pos:line="61" pos:column="37">i<pos:position pos:line="61" pos:column="38"/></name></expr>]<pos:position pos:line="61" pos:column="39"/></index></name></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt>
          }<pos:position pos:line="62" pos:column="12"/></block></then></if>
        <break pos:line="63" pos:column="9">break;<pos:position pos:line="63" pos:column="15"/></break>
        }<pos:position pos:line="64" pos:column="10"/></block></then>
      <else pos:line="65" pos:column="7">else <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="12">options<pos:position pos:line="65" pos:column="19"/></name> <operator pos:line="65" pos:column="20">=<pos:position pos:line="65" pos:column="21"/></operator> <call><name pos:line="65" pos:column="22">handle_option<pos:position pos:line="65" pos:column="35"/></name><argument_list pos:line="65" pos:column="35">(<argument><expr><operator pos:line="65" pos:column="36">*<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="37">s<pos:position pos:line="65" pos:column="38"/></name><operator pos:line="65" pos:column="38">++<pos:position pos:line="65" pos:column="40"/></operator></expr></argument>, <argument><expr><name pos:line="65" pos:column="42">options<pos:position pos:line="65" pos:column="49"/></name></expr></argument>)<pos:position pos:line="65" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="51"/></expr_stmt></block></else></if>
      }<pos:position pos:line="66" pos:column="8"/></block></while>
    }<pos:position pos:line="67" pos:column="6"/></block></else></if>
  }<pos:position pos:line="68" pos:column="4"/></block></for>

<expr_stmt><expr><name pos:line="70" pos:column="1">pattern_list<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">=<pos:position pos:line="70" pos:column="15"/></operator> <call><name pos:line="70" pos:column="16">malloc<pos:position pos:line="70" pos:column="22"/></name><argument_list pos:line="70" pos:column="22">(<argument><expr><name pos:line="70" pos:column="23">MAX_PATTERN_COUNT<pos:position pos:line="70" pos:column="40"/></name> <operator pos:line="70" pos:column="41">*<pos:position pos:line="70" pos:column="42"/></operator> <sizeof pos:line="70" pos:column="43">sizeof<argument_list pos:line="70" pos:column="49">(<argument><expr><name pos:line="70" pos:column="50">pcre<pos:position pos:line="70" pos:column="54"/></name> <operator pos:line="70" pos:column="55">*<pos:position pos:line="70" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="70" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="59"/></expr_stmt>
<expr_stmt><expr><name pos:line="71" pos:column="1">hints_list<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">=<pos:position pos:line="71" pos:column="13"/></operator> <call><name pos:line="71" pos:column="14">malloc<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">(<argument><expr><name pos:line="71" pos:column="21">MAX_PATTERN_COUNT<pos:position pos:line="71" pos:column="38"/></name> <operator pos:line="71" pos:column="39">*<pos:position pos:line="71" pos:column="40"/></operator> <sizeof pos:line="71" pos:column="41">sizeof<argument_list pos:line="71" pos:column="47">(<argument><expr><name pos:line="71" pos:column="48">pcre_extra<pos:position pos:line="71" pos:column="58"/></name> <operator pos:line="71" pos:column="59">*<pos:position pos:line="71" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="71" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="63"/></expr_stmt>

<if pos:line="73" pos:column="1">if <condition pos:line="73" pos:column="4">(<expr><name pos:line="73" pos:column="5">pattern_list<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">==<pos:position pos:line="73" pos:column="20"/></operator> <name pos:line="73" pos:column="21">NULL<pos:position pos:line="73" pos:column="25"/></name> <operator pos:line="73" pos:column="26">||<pos:position pos:line="73" pos:column="28"/></operator> <name pos:line="73" pos:column="29">hints_list<pos:position pos:line="73" pos:column="39"/></name> <operator pos:line="73" pos:column="40">==<pos:position pos:line="73" pos:column="42"/></operator> <name pos:line="73" pos:column="43">NULL<pos:position pos:line="73" pos:column="47"/></name></expr>)<pos:position pos:line="73" pos:column="48"/></condition><then pos:line="73" pos:column="48">
  <block pos:line="74" pos:column="3">{
  <expr_stmt><expr><call><name pos:line="75" pos:column="3">fprintf<pos:position pos:line="75" pos:column="10"/></name><argument_list pos:line="75" pos:column="10">(<argument><expr><name pos:line="75" pos:column="11">stderr<pos:position pos:line="75" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="19">"pcregrep: malloc failed\n"<pos:position pos:line="75" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="48"/></expr_stmt>
  <return pos:line="76" pos:column="3">return <expr><literal type="number" pos:line="76" pos:column="10">2<pos:position pos:line="76" pos:column="11"/></literal></expr>;<pos:position pos:line="76" pos:column="12"/></return>
  }<pos:position pos:line="77" pos:column="4"/></block></then></if>

<comment type="block" pos:line="79" pos:column="1">/* Compile the regular expression(s). */</comment>

<if pos:line="81" pos:column="1">if <condition pos:line="81" pos:column="4">(<expr><name pos:line="81" pos:column="5">pattern_filename<pos:position pos:line="81" pos:column="21"/></name> <operator pos:line="81" pos:column="22">!=<pos:position pos:line="81" pos:column="24"/></operator> <name pos:line="81" pos:column="25">NULL<pos:position pos:line="81" pos:column="29"/></name></expr>)<pos:position pos:line="81" pos:column="30"/></condition><then pos:line="81" pos:column="30">
  <block pos:line="82" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="83" pos:column="3">FILE<pos:position pos:line="83" pos:column="7"/></name> <modifier pos:line="83" pos:column="8">*<pos:position pos:line="83" pos:column="9"/></modifier></type><name pos:line="83" pos:column="9">f<pos:position pos:line="83" pos:column="10"/></name> <init pos:line="83" pos:column="11">= <expr><call><name pos:line="83" pos:column="13">fopen<pos:position pos:line="83" pos:column="18"/></name><argument_list pos:line="83" pos:column="18">(<argument><expr><name pos:line="83" pos:column="19">pattern_filename<pos:position pos:line="83" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="37">"r"<pos:position pos:line="83" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="83" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="84" pos:column="3">char<pos:position pos:line="84" pos:column="7"/></name></type> <name><name pos:line="84" pos:column="8">buffer<pos:position pos:line="84" pos:column="14"/></name><index pos:line="84" pos:column="14">[<expr><name pos:line="84" pos:column="15">BUFSIZ<pos:position pos:line="84" pos:column="21"/></name></expr>]<pos:position pos:line="84" pos:column="22"/></index></name></decl>;<pos:position pos:line="84" pos:column="23"/></decl_stmt>
  <if pos:line="85" pos:column="3">if <condition pos:line="85" pos:column="6">(<expr><name pos:line="85" pos:column="7">f<pos:position pos:line="85" pos:column="8"/></name> <operator pos:line="85" pos:column="9">==<pos:position pos:line="85" pos:column="11"/></operator> <name pos:line="85" pos:column="12">NULL<pos:position pos:line="85" pos:column="16"/></name></expr>)<pos:position pos:line="85" pos:column="17"/></condition><then pos:line="85" pos:column="17">
    <block pos:line="86" pos:column="5">{
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">fprintf<pos:position pos:line="87" pos:column="12"/></name><argument_list pos:line="87" pos:column="12">(<argument><expr><name pos:line="87" pos:column="13">stderr<pos:position pos:line="87" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="21">"pcregrep: Failed to open %s: %s\n"<pos:position pos:line="87" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="58">pattern_filename<pos:position pos:line="87" pos:column="74"/></name></expr></argument>,
      <argument><expr><call><name pos:line="88" pos:column="7">strerror<pos:position pos:line="88" pos:column="15"/></name><argument_list pos:line="88" pos:column="15">(<argument><expr><name pos:line="88" pos:column="16">errno<pos:position pos:line="88" pos:column="21"/></name></expr></argument>)<pos:position pos:line="88" pos:column="22"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="24"/></expr_stmt>
    <return pos:line="89" pos:column="5">return <expr><literal type="number" pos:line="89" pos:column="12">2<pos:position pos:line="89" pos:column="13"/></literal></expr>;<pos:position pos:line="89" pos:column="14"/></return>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
  <while pos:line="91" pos:column="3">while <condition pos:line="91" pos:column="9">(<expr><call><name pos:line="91" pos:column="10">fgets<pos:position pos:line="91" pos:column="15"/></name><argument_list pos:line="91" pos:column="15">(<argument><expr><name pos:line="91" pos:column="16">buffer<pos:position pos:line="91" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="91" pos:column="24">sizeof<argument_list pos:line="91" pos:column="30">(<argument><expr><name pos:line="91" pos:column="31">buffer<pos:position pos:line="91" pos:column="37"/></name></expr></argument>)<pos:position pos:line="91" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="91" pos:column="40">f<pos:position pos:line="91" pos:column="41"/></name></expr></argument>)<pos:position pos:line="91" pos:column="42"/></argument_list></call> <operator pos:line="91" pos:column="43">!=<pos:position pos:line="91" pos:column="45"/></operator> <name pos:line="91" pos:column="46">NULL<pos:position pos:line="91" pos:column="50"/></name></expr>)<pos:position pos:line="91" pos:column="51"/></condition>
    <block pos:line="92" pos:column="5">{
    <decl_stmt><decl><type><name pos:line="93" pos:column="5">char<pos:position pos:line="93" pos:column="9"/></name> <modifier pos:line="93" pos:column="10">*<pos:position pos:line="93" pos:column="11"/></modifier></type><name pos:line="93" pos:column="11">s<pos:position pos:line="93" pos:column="12"/></name> <init pos:line="93" pos:column="13">= <expr><name pos:line="93" pos:column="15">buffer<pos:position pos:line="93" pos:column="21"/></name> <operator pos:line="93" pos:column="22">+<pos:position pos:line="93" pos:column="23"/></operator> <operator pos:line="93" pos:column="24">(<pos:position pos:line="93" pos:column="25"/></operator><name pos:line="93" pos:column="25">int<pos:position pos:line="93" pos:column="28"/></name><operator pos:line="93" pos:column="28">)<pos:position pos:line="93" pos:column="29"/></operator><call><name pos:line="93" pos:column="29">strlen<pos:position pos:line="93" pos:column="35"/></name><argument_list pos:line="93" pos:column="35">(<argument><expr><name pos:line="93" pos:column="36">buffer<pos:position pos:line="93" pos:column="42"/></name></expr></argument>)<pos:position pos:line="93" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="93" pos:column="44"/></decl_stmt>
    <if pos:line="94" pos:column="5">if <condition pos:line="94" pos:column="8">(<expr><name pos:line="94" pos:column="9">pattern_count<pos:position pos:line="94" pos:column="22"/></name> <operator pos:line="94" pos:column="23">&gt;=<pos:position pos:line="94" pos:column="28"/></operator> <name pos:line="94" pos:column="26">MAX_PATTERN_COUNT<pos:position pos:line="94" pos:column="43"/></name></expr>)<pos:position pos:line="94" pos:column="44"/></condition><then pos:line="94" pos:column="44">
      <block pos:line="95" pos:column="7">{
      <expr_stmt><expr><call><name pos:line="96" pos:column="7">fprintf<pos:position pos:line="96" pos:column="14"/></name><argument_list pos:line="96" pos:column="14">(<argument><expr><name pos:line="96" pos:column="15">stderr<pos:position pos:line="96" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="23">"pcregrep: Too many patterns in file (max %d)\n"<pos:position pos:line="96" pos:column="71"/></literal></expr></argument>,
        <argument><expr><name pos:line="97" pos:column="9">MAX_PATTERN_COUNT<pos:position pos:line="97" pos:column="26"/></name></expr></argument>)<pos:position pos:line="97" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="28"/></expr_stmt>
      <return pos:line="98" pos:column="7">return <expr><literal type="number" pos:line="98" pos:column="14">2<pos:position pos:line="98" pos:column="15"/></literal></expr>;<pos:position pos:line="98" pos:column="16"/></return>
      }<pos:position pos:line="99" pos:column="8"/></block></then></if>
    <while pos:line="100" pos:column="5">while <condition pos:line="100" pos:column="11">(<expr><name pos:line="100" pos:column="12">s<pos:position pos:line="100" pos:column="13"/></name> <operator pos:line="100" pos:column="14">&gt;<pos:position pos:line="100" pos:column="18"/></operator> <name pos:line="100" pos:column="16">buffer<pos:position pos:line="100" pos:column="22"/></name> <operator pos:line="100" pos:column="23">&amp;&amp;<pos:position pos:line="100" pos:column="33"/></operator> <call><name pos:line="100" pos:column="26">isspace<pos:position pos:line="100" pos:column="33"/></name><argument_list pos:line="100" pos:column="33">(<argument><expr><call pos:line="100" pos:column="34">(<name pos:line="100" pos:column="35">unsigned<pos:position pos:line="100" pos:column="43"/></name> <name pos:line="100" pos:column="44">char<pos:position pos:line="100" pos:column="48"/></name>)<argument_list pos:line="100" pos:column="49">(<argument><expr><name><name pos:line="100" pos:column="50">s<pos:position pos:line="100" pos:column="51"/></name><index pos:line="100" pos:column="51">[<expr><operator pos:line="100" pos:column="52">-<pos:position pos:line="100" pos:column="53"/></operator><literal type="number" pos:line="100" pos:column="53">1<pos:position pos:line="100" pos:column="54"/></literal></expr>]<pos:position pos:line="100" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="100" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="100" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="58"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="59">s<pos:position pos:line="100" pos:column="60"/></name><operator pos:line="100" pos:column="60">--<pos:position pos:line="100" pos:column="62"/></operator></expr>;<pos:position pos:line="100" pos:column="63"/></expr_stmt></block></while>
    <if pos:line="101" pos:column="5">if <condition pos:line="101" pos:column="8">(<expr><name pos:line="101" pos:column="9">s<pos:position pos:line="101" pos:column="10"/></name> <operator pos:line="101" pos:column="11">==<pos:position pos:line="101" pos:column="13"/></operator> <name pos:line="101" pos:column="14">buffer<pos:position pos:line="101" pos:column="20"/></name></expr>)<pos:position pos:line="101" pos:column="21"/></condition><then pos:line="101" pos:column="21"> <block type="pseudo"><continue pos:line="101" pos:column="22">continue;<pos:position pos:line="101" pos:column="31"/></continue></block></then></if>
    <expr_stmt><expr><operator pos:line="102" pos:column="5">*<pos:position pos:line="102" pos:column="6"/></operator><name pos:line="102" pos:column="6">s<pos:position pos:line="102" pos:column="7"/></name> <operator pos:line="102" pos:column="8">=<pos:position pos:line="102" pos:column="9"/></operator> <literal type="number" pos:line="102" pos:column="10">0<pos:position pos:line="102" pos:column="11"/></literal></expr>;<pos:position pos:line="102" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="103" pos:column="5">pattern_list<pos:position pos:line="103" pos:column="17"/></name><index pos:line="103" pos:column="17">[<expr><name pos:line="103" pos:column="18">pattern_count<pos:position pos:line="103" pos:column="31"/></name></expr>]<pos:position pos:line="103" pos:column="32"/></index></name> <operator pos:line="103" pos:column="33">=<pos:position pos:line="103" pos:column="34"/></operator> <call><name pos:line="103" pos:column="35">pcre_compile<pos:position pos:line="103" pos:column="47"/></name><argument_list pos:line="103" pos:column="47">(<argument><expr><name pos:line="103" pos:column="48">buffer<pos:position pos:line="103" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="56">options<pos:position pos:line="103" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="103" pos:column="65">&amp;<pos:position pos:line="103" pos:column="70"/></operator><name pos:line="103" pos:column="66">error<pos:position pos:line="103" pos:column="71"/></name></expr></argument>,
      <argument><expr><operator pos:line="104" pos:column="7">&amp;<pos:position pos:line="104" pos:column="12"/></operator><name pos:line="104" pos:column="8">errptr<pos:position pos:line="104" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="16">NULL<pos:position pos:line="104" pos:column="20"/></name></expr></argument>)<pos:position pos:line="104" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="22"/></expr_stmt>
    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">(<expr><name><name pos:line="105" pos:column="9">pattern_list<pos:position pos:line="105" pos:column="21"/></name><index pos:line="105" pos:column="21">[<expr><name pos:line="105" pos:column="22">pattern_count<pos:position pos:line="105" pos:column="35"/></name><operator pos:line="105" pos:column="35">++<pos:position pos:line="105" pos:column="37"/></operator></expr>]<pos:position pos:line="105" pos:column="38"/></index></name> <operator pos:line="105" pos:column="39">==<pos:position pos:line="105" pos:column="41"/></operator> <name pos:line="105" pos:column="42">NULL<pos:position pos:line="105" pos:column="46"/></name></expr>)<pos:position pos:line="105" pos:column="47"/></condition><then pos:line="105" pos:column="47">
      <block pos:line="106" pos:column="7">{
      <expr_stmt><expr><call><name pos:line="107" pos:column="7">fprintf<pos:position pos:line="107" pos:column="14"/></name><argument_list pos:line="107" pos:column="14">(<argument><expr><name pos:line="107" pos:column="15">stderr<pos:position pos:line="107" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="23">"pcregrep: Error in regex number %d at offset %d: %s\n"<pos:position pos:line="107" pos:column="78"/></literal></expr></argument>,
        <argument><expr><name pos:line="108" pos:column="9">pattern_count<pos:position pos:line="108" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="24">errptr<pos:position pos:line="108" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="32">error<pos:position pos:line="108" pos:column="37"/></name></expr></argument>)<pos:position pos:line="108" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="39"/></expr_stmt>
      <return pos:line="109" pos:column="7">return <expr><literal type="number" pos:line="109" pos:column="14">2<pos:position pos:line="109" pos:column="15"/></literal></expr>;<pos:position pos:line="109" pos:column="16"/></return>
      }<pos:position pos:line="110" pos:column="8"/></block></then></if>
    }<pos:position pos:line="111" pos:column="6"/></block></while>
  <expr_stmt><expr><call><name pos:line="112" pos:column="3">fclose<pos:position pos:line="112" pos:column="9"/></name><argument_list pos:line="112" pos:column="9">(<argument><expr><name pos:line="112" pos:column="10">f<pos:position pos:line="112" pos:column="11"/></name></expr></argument>)<pos:position pos:line="112" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="113" pos:column="4"/></block></then>

<comment type="block" pos:line="115" pos:column="1">/* If no file name, a single regex must be given inline */</comment>

<else pos:line="117" pos:column="1">else
  <block pos:line="118" pos:column="3">{
  <if pos:line="119" pos:column="3">if <condition pos:line="119" pos:column="6">(<expr><name pos:line="119" pos:column="7">i<pos:position pos:line="119" pos:column="8"/></name> <operator pos:line="119" pos:column="9">&gt;=<pos:position pos:line="119" pos:column="14"/></operator> <name pos:line="119" pos:column="12">argc<pos:position pos:line="119" pos:column="16"/></name></expr>)<pos:position pos:line="119" pos:column="17"/></condition><then pos:line="119" pos:column="17"> <block type="pseudo"><return pos:line="119" pos:column="18">return <expr><call><name pos:line="119" pos:column="25">usage<pos:position pos:line="119" pos:column="30"/></name><argument_list pos:line="119" pos:column="30">(<argument><expr><literal type="number" pos:line="119" pos:column="31">0<pos:position pos:line="119" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="34"/></return></block></then></if>
  <expr_stmt><expr><name><name pos:line="120" pos:column="3">pattern_list<pos:position pos:line="120" pos:column="15"/></name><index pos:line="120" pos:column="15">[<expr><literal type="number" pos:line="120" pos:column="16">0<pos:position pos:line="120" pos:column="17"/></literal></expr>]<pos:position pos:line="120" pos:column="18"/></index></name> <operator pos:line="120" pos:column="19">=<pos:position pos:line="120" pos:column="20"/></operator> <call><name pos:line="120" pos:column="21">pcre_compile<pos:position pos:line="120" pos:column="33"/></name><argument_list pos:line="120" pos:column="33">(<argument><expr><name><name pos:line="120" pos:column="34">argv<pos:position pos:line="120" pos:column="38"/></name><index pos:line="120" pos:column="38">[<expr><name pos:line="120" pos:column="39">i<pos:position pos:line="120" pos:column="40"/></name><operator pos:line="120" pos:column="40">++<pos:position pos:line="120" pos:column="42"/></operator></expr>]<pos:position pos:line="120" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="45">options<pos:position pos:line="120" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="120" pos:column="54">&amp;<pos:position pos:line="120" pos:column="59"/></operator><name pos:line="120" pos:column="55">error<pos:position pos:line="120" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="120" pos:column="62">&amp;<pos:position pos:line="120" pos:column="67"/></operator><name pos:line="120" pos:column="63">errptr<pos:position pos:line="120" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="71">NULL<pos:position pos:line="120" pos:column="75"/></name></expr></argument>)<pos:position pos:line="120" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="77"/></expr_stmt>
  <if pos:line="121" pos:column="3">if <condition pos:line="121" pos:column="6">(<expr><name><name pos:line="121" pos:column="7">pattern_list<pos:position pos:line="121" pos:column="19"/></name><index pos:line="121" pos:column="19">[<expr><literal type="number" pos:line="121" pos:column="20">0<pos:position pos:line="121" pos:column="21"/></literal></expr>]<pos:position pos:line="121" pos:column="22"/></index></name> <operator pos:line="121" pos:column="23">==<pos:position pos:line="121" pos:column="25"/></operator> <name pos:line="121" pos:column="26">NULL<pos:position pos:line="121" pos:column="30"/></name></expr>)<pos:position pos:line="121" pos:column="31"/></condition><then pos:line="121" pos:column="31">
    <block pos:line="122" pos:column="5">{
    <expr_stmt><expr><call><name pos:line="123" pos:column="5">fprintf<pos:position pos:line="123" pos:column="12"/></name><argument_list pos:line="123" pos:column="12">(<argument><expr><name pos:line="123" pos:column="13">stderr<pos:position pos:line="123" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="21">"pcregrep: Error in regex at offset %d: %s\n"<pos:position pos:line="123" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="123" pos:column="68">errptr<pos:position pos:line="123" pos:column="74"/></name></expr></argument>,
      <argument><expr><name pos:line="124" pos:column="7">error<pos:position pos:line="124" pos:column="12"/></name></expr></argument>)<pos:position pos:line="124" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="14"/></expr_stmt>
    <return pos:line="125" pos:column="5">return <expr><literal type="number" pos:line="125" pos:column="12">2<pos:position pos:line="125" pos:column="13"/></literal></expr>;<pos:position pos:line="125" pos:column="14"/></return>
    }<pos:position pos:line="126" pos:column="6"/></block></then></if>
  <expr_stmt><expr><name pos:line="127" pos:column="3">pattern_count<pos:position pos:line="127" pos:column="16"/></name><operator pos:line="127" pos:column="16">++<pos:position pos:line="127" pos:column="18"/></operator></expr>;<pos:position pos:line="127" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="128" pos:column="4"/></block></else></if>

<comment type="block" pos:line="130" pos:column="1">/* Study the regular expressions, as we will be running them may times */</comment>

<for pos:line="132" pos:column="1">for <control pos:line="132" pos:column="5">(<init><expr><name pos:line="132" pos:column="6">j<pos:position pos:line="132" pos:column="7"/></name> <operator pos:line="132" pos:column="8">=<pos:position pos:line="132" pos:column="9"/></operator> <literal type="number" pos:line="132" pos:column="10">0<pos:position pos:line="132" pos:column="11"/></literal></expr>;<pos:position pos:line="132" pos:column="12"/></init> <condition><expr><name pos:line="132" pos:column="13">j<pos:position pos:line="132" pos:column="14"/></name> <operator pos:line="132" pos:column="15">&lt;<pos:position pos:line="132" pos:column="19"/></operator> <name pos:line="132" pos:column="17">pattern_count<pos:position pos:line="132" pos:column="30"/></name></expr>;<pos:position pos:line="132" pos:column="31"/></condition> <incr><expr><name pos:line="132" pos:column="32">j<pos:position pos:line="132" pos:column="33"/></name><operator pos:line="132" pos:column="33">++<pos:position pos:line="132" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="132" pos:column="36"/></control>
  <block pos:line="133" pos:column="3">{
  <expr_stmt><expr><name><name pos:line="134" pos:column="3">hints_list<pos:position pos:line="134" pos:column="13"/></name><index pos:line="134" pos:column="13">[<expr><name pos:line="134" pos:column="14">j<pos:position pos:line="134" pos:column="15"/></name></expr>]<pos:position pos:line="134" pos:column="16"/></index></name> <operator pos:line="134" pos:column="17">=<pos:position pos:line="134" pos:column="18"/></operator> <call><name pos:line="134" pos:column="19">pcre_study<pos:position pos:line="134" pos:column="29"/></name><argument_list pos:line="134" pos:column="29">(<argument><expr><name><name pos:line="134" pos:column="30">pattern_list<pos:position pos:line="134" pos:column="42"/></name><index pos:line="134" pos:column="42">[<expr><name pos:line="134" pos:column="43">j<pos:position pos:line="134" pos:column="44"/></name></expr>]<pos:position pos:line="134" pos:column="45"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="47">0<pos:position pos:line="134" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="134" pos:column="50">&amp;<pos:position pos:line="134" pos:column="55"/></operator><name pos:line="134" pos:column="51">error<pos:position pos:line="134" pos:column="56"/></name></expr></argument>)<pos:position pos:line="134" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="58"/></expr_stmt>
  <if pos:line="135" pos:column="3">if <condition pos:line="135" pos:column="6">(<expr><name pos:line="135" pos:column="7">error<pos:position pos:line="135" pos:column="12"/></name> <operator pos:line="135" pos:column="13">!=<pos:position pos:line="135" pos:column="15"/></operator> <name pos:line="135" pos:column="16">NULL<pos:position pos:line="135" pos:column="20"/></name></expr>)<pos:position pos:line="135" pos:column="21"/></condition><then pos:line="135" pos:column="21">
    <block pos:line="136" pos:column="5">{
    <decl_stmt><decl><type><name pos:line="137" pos:column="5">char<pos:position pos:line="137" pos:column="9"/></name></type> <name><name pos:line="137" pos:column="10">s<pos:position pos:line="137" pos:column="11"/></name><index pos:line="137" pos:column="11">[<expr><literal type="number" pos:line="137" pos:column="12">16<pos:position pos:line="137" pos:column="14"/></literal></expr>]<pos:position pos:line="137" pos:column="15"/></index></name></decl>;<pos:position pos:line="137" pos:column="16"/></decl_stmt>
    <if pos:line="138" pos:column="5">if <condition pos:line="138" pos:column="8">(<expr><name pos:line="138" pos:column="9">pattern_count<pos:position pos:line="138" pos:column="22"/></name> <operator pos:line="138" pos:column="23">==<pos:position pos:line="138" pos:column="25"/></operator> <literal type="number" pos:line="138" pos:column="26">1<pos:position pos:line="138" pos:column="27"/></literal></expr>)<pos:position pos:line="138" pos:column="28"/></condition><then pos:line="138" pos:column="28"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="138" pos:column="29">s<pos:position pos:line="138" pos:column="30"/></name><index pos:line="138" pos:column="30">[<expr><literal type="number" pos:line="138" pos:column="31">0<pos:position pos:line="138" pos:column="32"/></literal></expr>]<pos:position pos:line="138" pos:column="33"/></index></name> <operator pos:line="138" pos:column="34">=<pos:position pos:line="138" pos:column="35"/></operator> <literal type="number" pos:line="138" pos:column="36">0<pos:position pos:line="138" pos:column="37"/></literal></expr>;<pos:position pos:line="138" pos:column="38"/></expr_stmt></block></then> <else pos:line="138" pos:column="39">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="138" pos:column="44">sprintf<pos:position pos:line="138" pos:column="51"/></name><argument_list pos:line="138" pos:column="51">(<argument><expr><name pos:line="138" pos:column="52">s<pos:position pos:line="138" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="55">" number %d"<pos:position pos:line="138" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="138" pos:column="69">j<pos:position pos:line="138" pos:column="70"/></name></expr></argument>)<pos:position pos:line="138" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="72"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="139" pos:column="5">fprintf<pos:position pos:line="139" pos:column="12"/></name><argument_list pos:line="139" pos:column="12">(<argument><expr><name pos:line="139" pos:column="13">stderr<pos:position pos:line="139" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="21">"pcregrep: Error while studying regex%s: %s\n"<pos:position pos:line="139" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="139" pos:column="69">s<pos:position pos:line="139" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="72">error<pos:position pos:line="139" pos:column="77"/></name></expr></argument>)<pos:position pos:line="139" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="79"/></expr_stmt>
    <return pos:line="140" pos:column="5">return <expr><literal type="number" pos:line="140" pos:column="12">2<pos:position pos:line="140" pos:column="13"/></literal></expr>;<pos:position pos:line="140" pos:column="14"/></return>
    }<pos:position pos:line="141" pos:column="6"/></block></then></if>
  }<pos:position pos:line="142" pos:column="4"/></block></for>

<comment type="block" pos:line="144" pos:column="1">/* If there are no further arguments, do the business on stdin and exit */</comment>

<if pos:line="146" pos:column="1">if <condition pos:line="146" pos:column="4">(<expr><name pos:line="146" pos:column="5">i<pos:position pos:line="146" pos:column="6"/></name> <operator pos:line="146" pos:column="7">&gt;=<pos:position pos:line="146" pos:column="12"/></operator> <name pos:line="146" pos:column="10">argc<pos:position pos:line="146" pos:column="14"/></name></expr>)<pos:position pos:line="146" pos:column="15"/></condition><then pos:line="146" pos:column="15"> <block type="pseudo"><return pos:line="146" pos:column="16">return <expr><call><name pos:line="146" pos:column="23">pcregrep<pos:position pos:line="146" pos:column="31"/></name><argument_list pos:line="146" pos:column="31">(<argument><expr><name pos:line="146" pos:column="32">stdin<pos:position pos:line="146" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="39">NULL<pos:position pos:line="146" pos:column="43"/></name></expr></argument>)<pos:position pos:line="146" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="45"/></return></block></then></if>

<comment type="block" pos:line="148" pos:column="1">/* Otherwise, work through the remaining arguments as files or directories.
Pass in the fact that there is only one argument at top level - this suppresses
the file name if the argument is not a directory. */</comment>

<expr_stmt><expr><name pos:line="152" pos:column="1">only_one_at_top<pos:position pos:line="152" pos:column="16"/></name> <operator pos:line="152" pos:column="17">=<pos:position pos:line="152" pos:column="18"/></operator> <operator pos:line="152" pos:column="19">(<pos:position pos:line="152" pos:column="20"/></operator><name pos:line="152" pos:column="20">i<pos:position pos:line="152" pos:column="21"/></name> <operator pos:line="152" pos:column="22">==<pos:position pos:line="152" pos:column="24"/></operator> <name pos:line="152" pos:column="25">argc<pos:position pos:line="152" pos:column="29"/></name> <operator pos:line="152" pos:column="30">-<pos:position pos:line="152" pos:column="31"/></operator> <literal type="number" pos:line="152" pos:column="32">1<pos:position pos:line="152" pos:column="33"/></literal><operator pos:line="152" pos:column="33">)<pos:position pos:line="152" pos:column="34"/></operator></expr>;<pos:position pos:line="152" pos:column="35"/></expr_stmt>
<if pos:line="153" pos:column="1">if <condition pos:line="153" pos:column="4">(<expr><name pos:line="153" pos:column="5">filenames_only<pos:position pos:line="153" pos:column="19"/></name></expr>)<pos:position pos:line="153" pos:column="20"/></condition><then pos:line="153" pos:column="20"> <block type="pseudo"><expr_stmt><expr><name pos:line="153" pos:column="21">filenames<pos:position pos:line="153" pos:column="30"/></name> <operator pos:line="153" pos:column="31">=<pos:position pos:line="153" pos:column="32"/></operator> <name pos:line="153" pos:column="33">TRUE<pos:position pos:line="153" pos:column="37"/></name></expr>;<pos:position pos:line="153" pos:column="38"/></expr_stmt></block></then></if>

<for pos:line="155" pos:column="1">for <control pos:line="155" pos:column="5">(<init pos:line="155" pos:column="6">;<pos:position pos:line="155" pos:column="7"/></init> <condition><expr><name pos:line="155" pos:column="8">i<pos:position pos:line="155" pos:column="9"/></name> <operator pos:line="155" pos:column="10">&lt;<pos:position pos:line="155" pos:column="14"/></operator> <name pos:line="155" pos:column="12">argc<pos:position pos:line="155" pos:column="16"/></name></expr>;<pos:position pos:line="155" pos:column="17"/></condition> <incr><expr><name pos:line="155" pos:column="18">i<pos:position pos:line="155" pos:column="19"/></name><operator pos:line="155" pos:column="19">++<pos:position pos:line="155" pos:column="21"/></operator></expr></incr>)<pos:position pos:line="155" pos:column="22"/></control>
  <block pos:line="156" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="157" pos:column="3">int<pos:position pos:line="157" pos:column="6"/></name></type> <name pos:line="157" pos:column="7">frc<pos:position pos:line="157" pos:column="10"/></name> <init pos:line="157" pos:column="11">= <expr><call><name pos:line="157" pos:column="13">grep_or_recurse<pos:position pos:line="157" pos:column="28"/></name><argument_list pos:line="157" pos:column="28">(<argument><expr><name><name pos:line="157" pos:column="29">argv<pos:position pos:line="157" pos:column="33"/></name><index pos:line="157" pos:column="33">[<expr><name pos:line="157" pos:column="34">i<pos:position pos:line="157" pos:column="35"/></name></expr>]<pos:position pos:line="157" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="38">recurse<pos:position pos:line="157" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="47">filenames<pos:position pos:line="157" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="58">only_one_at_top<pos:position pos:line="157" pos:column="73"/></name></expr></argument>)<pos:position pos:line="157" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="157" pos:column="75"/></decl_stmt>
  <if pos:line="158" pos:column="3">if <condition pos:line="158" pos:column="6">(<expr><name pos:line="158" pos:column="7">frc<pos:position pos:line="158" pos:column="10"/></name> <operator pos:line="158" pos:column="11">==<pos:position pos:line="158" pos:column="13"/></operator> <literal type="number" pos:line="158" pos:column="14">0<pos:position pos:line="158" pos:column="15"/></literal> <operator pos:line="158" pos:column="16">&amp;&amp;<pos:position pos:line="158" pos:column="26"/></operator> <name pos:line="158" pos:column="19">rc<pos:position pos:line="158" pos:column="21"/></name> <operator pos:line="158" pos:column="22">==<pos:position pos:line="158" pos:column="24"/></operator> <literal type="number" pos:line="158" pos:column="25">1<pos:position pos:line="158" pos:column="26"/></literal></expr>)<pos:position pos:line="158" pos:column="27"/></condition><then pos:line="158" pos:column="27"> <block type="pseudo"><expr_stmt><expr><name pos:line="158" pos:column="28">rc<pos:position pos:line="158" pos:column="30"/></name> <operator pos:line="158" pos:column="31">=<pos:position pos:line="158" pos:column="32"/></operator> <literal type="number" pos:line="158" pos:column="33">0<pos:position pos:line="158" pos:column="34"/></literal></expr>;<pos:position pos:line="158" pos:column="35"/></expr_stmt></block></then></if>
  }<pos:position pos:line="159" pos:column="4"/></block></for>

<return pos:line="161" pos:column="1">return <expr><name pos:line="161" pos:column="8">rc<pos:position pos:line="161" pos:column="10"/></name></expr>;<pos:position pos:line="161" pos:column="11"/></return>
}<pos:position pos:line="162" pos:column="2"/></block></function></unit>

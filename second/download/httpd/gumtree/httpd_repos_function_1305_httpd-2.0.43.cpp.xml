<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1305_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ap_ssi_get_tag_and_value<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">include_ctx_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">ctx<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier><modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">tag<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier><modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">tag_val<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">dodecode<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">c<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name><name pos:line="4" pos:column="15">ctx<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">curr_tag_pos<pos:position pos:line="4" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type>   <name pos:line="5" pos:column="11">shift_val<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt> 
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type>  <name pos:line="6" pos:column="11">term<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="char" pos:line="6" pos:column="18">'\0'<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="8" pos:column="5">*<pos:position pos:line="8" pos:column="6"/></operator><name pos:line="8" pos:column="6">tag_val<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">NULL<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">ctx<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">curr_tag_pos<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">&gt;<pos:position pos:line="9" pos:column="31"/></operator> <name><name pos:line="9" pos:column="29">ctx<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">combined_tag<pos:position pos:line="9" pos:column="46"/></name></name> <operator pos:line="9" pos:column="47">+<pos:position pos:line="9" pos:column="48"/></operator> <name><name pos:line="9" pos:column="49">ctx<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">-&gt;<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="54">tag_length<pos:position pos:line="9" pos:column="64"/></name></name></expr>)<pos:position pos:line="9" pos:column="65"/></condition><then pos:line="9" pos:column="65"> <block pos:line="9" pos:column="66">{
        <expr_stmt><expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">tag<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">SKIP_TAG_WHITESPACE<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">c<pos:position pos:line="13" pos:column="26"/></name></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="14" pos:column="5">*<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">tag<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <name pos:line="14" pos:column="12">c<pos:position pos:line="14" pos:column="13"/></name></expr>;<pos:position pos:line="14" pos:column="14"/></expr_stmt>             <comment type="block" pos:line="14" pos:column="27">/* First non-whitespace character (could be NULL). */</comment>

    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">(<expr><call><name pos:line="16" pos:column="12">apr_islower<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><operator pos:line="16" pos:column="24">*<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">c<pos:position pos:line="16" pos:column="26"/></name></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="28"/></condition> <block pos:line="16" pos:column="29">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">c<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">++<pos:position pos:line="17" pos:column="12"/></operator></expr>;<pos:position pos:line="17" pos:column="13"/></expr_stmt>  <comment type="block" pos:line="17" pos:column="15">/* Optimization for the common case where the tag */</comment>
    }<pos:position pos:line="18" pos:column="6"/></block></while>         <comment type="block" pos:line="18" pos:column="15">/* is already lowercase */</comment>

    <while pos:line="20" pos:column="5">while <condition pos:line="20" pos:column="11">(<expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">c<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">!=<pos:position pos:line="20" pos:column="18"/></operator> <literal type="char" pos:line="20" pos:column="19">'='<pos:position pos:line="20" pos:column="22"/></literal><operator pos:line="20" pos:column="22">)<pos:position pos:line="20" pos:column="23"/></operator> <operator pos:line="20" pos:column="24">&amp;&amp;<pos:position pos:line="20" pos:column="34"/></operator> <operator pos:line="20" pos:column="27">(<pos:position pos:line="20" pos:column="28"/></operator><operator pos:line="20" pos:column="28">!<pos:position pos:line="20" pos:column="29"/></operator><call><name pos:line="20" pos:column="29">apr_isspace<pos:position pos:line="20" pos:column="40"/></name><argument_list pos:line="20" pos:column="40">(<argument><expr><operator pos:line="20" pos:column="41">*<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="42">c<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call><operator pos:line="20" pos:column="44">)<pos:position pos:line="20" pos:column="45"/></operator> <operator pos:line="20" pos:column="46">&amp;&amp;<pos:position pos:line="20" pos:column="56"/></operator> <operator pos:line="20" pos:column="49">(<pos:position pos:line="20" pos:column="50"/></operator><operator pos:line="20" pos:column="50">*<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="51">c<pos:position pos:line="20" pos:column="52"/></name> <operator pos:line="20" pos:column="53">!=<pos:position pos:line="20" pos:column="55"/></operator> <literal type="char" pos:line="20" pos:column="56">'\0'<pos:position pos:line="20" pos:column="60"/></literal><operator pos:line="20" pos:column="60">)<pos:position pos:line="20" pos:column="61"/></operator></expr>)<pos:position pos:line="20" pos:column="62"/></condition> <block pos:line="20" pos:column="63">{
        <expr_stmt><expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">c<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">apr_tolower<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><operator pos:line="21" pos:column="26">*<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="27">c<pos:position pos:line="21" pos:column="28"/></name></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>    <comment type="block" pos:line="21" pos:column="34">/* find end of tag, lowercasing as we go... */</comment>
        <expr_stmt><expr><name pos:line="22" pos:column="9">c<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">++<pos:position pos:line="22" pos:column="12"/></operator></expr>;<pos:position pos:line="22" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></while>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><operator pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">c<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">==<pos:position pos:line="25" pos:column="15"/></operator> <literal type="char" pos:line="25" pos:column="16">'\0'<pos:position pos:line="25" pos:column="20"/></literal><operator pos:line="25" pos:column="20">)<pos:position pos:line="25" pos:column="21"/></operator> <operator pos:line="25" pos:column="22">||<pos:position pos:line="25" pos:column="24"/></operator> <operator pos:line="25" pos:column="25">(<pos:position pos:line="25" pos:column="26"/></operator><operator pos:line="25" pos:column="26">*<pos:position pos:line="25" pos:column="27"/></operator><operator pos:line="25" pos:column="27">*<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">tag<pos:position pos:line="25" pos:column="31"/></name> <operator pos:line="25" pos:column="32">==<pos:position pos:line="25" pos:column="34"/></operator> <literal type="char" pos:line="25" pos:column="35">'='<pos:position pos:line="25" pos:column="38"/></literal><operator pos:line="25" pos:column="38">)<pos:position pos:line="25" pos:column="39"/></operator></expr>)<pos:position pos:line="25" pos:column="40"/></condition><then pos:line="25" pos:column="40"> <block pos:line="25" pos:column="41">{
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><operator pos:line="26" pos:column="14">*<pos:position pos:line="26" pos:column="15"/></operator><operator pos:line="26" pos:column="15">*<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="16">tag<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">==<pos:position pos:line="26" pos:column="22"/></operator> <literal type="char" pos:line="26" pos:column="23">'\0'<pos:position pos:line="26" pos:column="27"/></literal><operator pos:line="26" pos:column="27">)<pos:position pos:line="26" pos:column="28"/></operator> <operator pos:line="26" pos:column="29">||<pos:position pos:line="26" pos:column="31"/></operator> <operator pos:line="26" pos:column="32">(<pos:position pos:line="26" pos:column="33"/></operator><operator pos:line="26" pos:column="33">*<pos:position pos:line="26" pos:column="34"/></operator><operator pos:line="26" pos:column="34">*<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">tag<pos:position pos:line="26" pos:column="38"/></name> <operator pos:line="26" pos:column="39">==<pos:position pos:line="26" pos:column="41"/></operator> <literal type="char" pos:line="26" pos:column="42">'='<pos:position pos:line="26" pos:column="45"/></literal><operator pos:line="26" pos:column="45">)<pos:position pos:line="26" pos:column="46"/></operator></expr>)<pos:position pos:line="26" pos:column="47"/></condition><then pos:line="26" pos:column="47"> <block pos:line="26" pos:column="48">{
            <expr_stmt><expr><operator pos:line="27" pos:column="13">*<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">tag<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">NULL<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">ctx<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">curr_tag_pos<pos:position pos:line="29" pos:column="26"/></name></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="29">c<pos:position pos:line="29" pos:column="30"/></name></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
        <return pos:line="30" pos:column="9">return;<pos:position pos:line="30" pos:column="16"/></return>                      <comment type="block" pos:line="30" pos:column="38">/* We have found the end of the buffer. */</comment>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>                       <comment type="block" pos:line="31" pos:column="29">/* We might have a tag, but definitely no value. */</comment>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">c<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">==<pos:position pos:line="33" pos:column="14"/></operator> <literal type="char" pos:line="33" pos:column="15">'='<pos:position pos:line="33" pos:column="18"/></literal></expr>)<pos:position pos:line="33" pos:column="19"/></condition><then pos:line="33" pos:column="19"> <block pos:line="33" pos:column="20">{
        <expr_stmt><expr><operator pos:line="34" pos:column="9">*<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">c<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">++<pos:position pos:line="34" pos:column="13"/></operator> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <literal type="char" pos:line="34" pos:column="16">'\0'<pos:position pos:line="34" pos:column="20"/></literal></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt> <comment type="block" pos:line="34" pos:column="22">/* Overwrite the '=' with a terminating byte after tag. */</comment>
    }<pos:position pos:line="35" pos:column="6"/></block></then>
    <else pos:line="36" pos:column="5">else <block pos:line="36" pos:column="10">{                               <comment type="block" pos:line="36" pos:column="42">/* Try skipping WS to find the '='. */</comment>
        <expr_stmt><expr><operator pos:line="37" pos:column="9">*<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">c<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">++<pos:position pos:line="37" pos:column="13"/></operator> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <literal type="char" pos:line="37" pos:column="16">'\0'<pos:position pos:line="37" pos:column="20"/></literal></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt>                                 <comment type="block" pos:line="37" pos:column="54">/* Terminate the tag... */</comment>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">SKIP_TAG_WHITESPACE<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">c<pos:position pos:line="38" pos:column="30"/></name></expr></argument>)<pos:position pos:line="38" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>
        
        <comment type="block" pos:line="40" pos:column="9">/* There needs to be an equal sign if there's a value. */</comment>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">*<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">c<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">!=<pos:position pos:line="41" pos:column="18"/></operator> <literal type="char" pos:line="41" pos:column="19">'='<pos:position pos:line="41" pos:column="22"/></literal></expr>)<pos:position pos:line="41" pos:column="23"/></condition><then pos:line="41" pos:column="23"> <block pos:line="41" pos:column="24">{
            <expr_stmt><expr><name><name pos:line="42" pos:column="13">ctx<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">curr_tag_pos<pos:position pos:line="42" pos:column="30"/></name></name> <operator pos:line="42" pos:column="31">=<pos:position pos:line="42" pos:column="32"/></operator> <name pos:line="42" pos:column="33">c<pos:position pos:line="42" pos:column="34"/></name></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
            <return pos:line="43" pos:column="13">return;<pos:position pos:line="43" pos:column="20"/></return> <comment type="block" pos:line="43" pos:column="21">/* There apparently was no value. */</comment>
        }<pos:position pos:line="44" pos:column="10"/></block></then>
        <else pos:line="45" pos:column="9">else <block pos:line="45" pos:column="14">{
            <expr_stmt><expr><name pos:line="46" pos:column="13">c<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">++<pos:position pos:line="46" pos:column="16"/></operator></expr>;<pos:position pos:line="46" pos:column="17"/></expr_stmt> <comment type="block" pos:line="46" pos:column="18">/* Skip the equals sign. */</comment>
        }<pos:position pos:line="47" pos:column="10"/></block></else></if>
    }<pos:position pos:line="48" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">SKIP_TAG_WHITESPACE<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">c<pos:position pos:line="50" pos:column="26"/></name></expr></argument>)<pos:position pos:line="50" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">*<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">c<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">==<pos:position pos:line="51" pos:column="14"/></operator> <literal type="char" pos:line="51" pos:column="15">'"'<pos:position pos:line="51" pos:column="18"/></literal> <operator pos:line="51" pos:column="19">||<pos:position pos:line="51" pos:column="21"/></operator> <operator pos:line="51" pos:column="22">*<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="23">c<pos:position pos:line="51" pos:column="24"/></name> <operator pos:line="51" pos:column="25">==<pos:position pos:line="51" pos:column="27"/></operator> <literal type="char" pos:line="51" pos:column="28">'\''<pos:position pos:line="51" pos:column="32"/></literal> <operator pos:line="51" pos:column="33">||<pos:position pos:line="51" pos:column="35"/></operator> <operator pos:line="51" pos:column="36">*<pos:position pos:line="51" pos:column="37"/></operator><name pos:line="51" pos:column="37">c<pos:position pos:line="51" pos:column="38"/></name> <operator pos:line="51" pos:column="39">==<pos:position pos:line="51" pos:column="41"/></operator> <literal type="char" pos:line="51" pos:column="42">'`'<pos:position pos:line="51" pos:column="45"/></literal></expr>)<pos:position pos:line="51" pos:column="46"/></condition><then pos:line="51" pos:column="46"> <block pos:line="51" pos:column="47">{ 
        <comment type="block" pos:line="52" pos:column="9">/* Allow quoted values for space inclusion. 
         * NOTE: This does not pass the quotes on return.
         */</comment>
        <expr_stmt><expr><name pos:line="55" pos:column="9">term<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <operator pos:line="55" pos:column="16">*<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="17">c<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">++<pos:position pos:line="55" pos:column="20"/></operator></expr>;<pos:position pos:line="55" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><operator pos:line="58" pos:column="5">*<pos:position pos:line="58" pos:column="6"/></operator><name pos:line="58" pos:column="6">tag_val<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">=<pos:position pos:line="58" pos:column="15"/></operator> <name pos:line="58" pos:column="16">c<pos:position pos:line="58" pos:column="17"/></name></expr>;<pos:position pos:line="58" pos:column="18"/></expr_stmt>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><operator pos:line="59" pos:column="9">!<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">term<pos:position pos:line="59" pos:column="14"/></name></expr>)<pos:position pos:line="59" pos:column="15"/></condition><then pos:line="59" pos:column="15"> <block pos:line="59" pos:column="16">{
        <while pos:line="60" pos:column="9">while <condition pos:line="60" pos:column="15">(<expr><operator pos:line="60" pos:column="16">!<pos:position pos:line="60" pos:column="17"/></operator><call><name pos:line="60" pos:column="17">apr_isspace<pos:position pos:line="60" pos:column="28"/></name><argument_list pos:line="60" pos:column="28">(<argument><expr><operator pos:line="60" pos:column="29">*<pos:position pos:line="60" pos:column="30"/></operator><name pos:line="60" pos:column="30">c<pos:position pos:line="60" pos:column="31"/></name></expr></argument>)<pos:position pos:line="60" pos:column="32"/></argument_list></call> <operator pos:line="60" pos:column="33">&amp;&amp;<pos:position pos:line="60" pos:column="43"/></operator> <operator pos:line="60" pos:column="36">(<pos:position pos:line="60" pos:column="37"/></operator><operator pos:line="60" pos:column="37">*<pos:position pos:line="60" pos:column="38"/></operator><name pos:line="60" pos:column="38">c<pos:position pos:line="60" pos:column="39"/></name> <operator pos:line="60" pos:column="40">!=<pos:position pos:line="60" pos:column="42"/></operator> <literal type="char" pos:line="60" pos:column="43">'\0'<pos:position pos:line="60" pos:column="47"/></literal><operator pos:line="60" pos:column="47">)<pos:position pos:line="60" pos:column="48"/></operator></expr>)<pos:position pos:line="60" pos:column="49"/></condition> <block pos:line="60" pos:column="50">{
            <expr_stmt><expr><name pos:line="61" pos:column="13">c<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">++<pos:position pos:line="61" pos:column="16"/></operator></expr>;<pos:position pos:line="61" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></while>
    }<pos:position pos:line="63" pos:column="6"/></block></then>
    <else pos:line="64" pos:column="5">else <block pos:line="64" pos:column="10">{
        <while pos:line="65" pos:column="9">while <condition pos:line="65" pos:column="15">(<expr><operator pos:line="65" pos:column="16">(<pos:position pos:line="65" pos:column="17"/></operator><operator pos:line="65" pos:column="17">*<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="18">c<pos:position pos:line="65" pos:column="19"/></name> <operator pos:line="65" pos:column="20">!=<pos:position pos:line="65" pos:column="22"/></operator> <name pos:line="65" pos:column="23">term<pos:position pos:line="65" pos:column="27"/></name><operator pos:line="65" pos:column="27">)<pos:position pos:line="65" pos:column="28"/></operator> <operator pos:line="65" pos:column="29">&amp;&amp;<pos:position pos:line="65" pos:column="39"/></operator> <operator pos:line="65" pos:column="32">(<pos:position pos:line="65" pos:column="33"/></operator><operator pos:line="65" pos:column="33">*<pos:position pos:line="65" pos:column="34"/></operator><name pos:line="65" pos:column="34">c<pos:position pos:line="65" pos:column="35"/></name> <operator pos:line="65" pos:column="36">!=<pos:position pos:line="65" pos:column="38"/></operator> <literal type="char" pos:line="65" pos:column="39">'\0'<pos:position pos:line="65" pos:column="43"/></literal><operator pos:line="65" pos:column="43">)<pos:position pos:line="65" pos:column="44"/></operator> <operator pos:line="65" pos:column="45">&amp;&amp;<pos:position pos:line="65" pos:column="55"/></operator> <operator pos:line="65" pos:column="48">(<pos:position pos:line="65" pos:column="49"/></operator><operator pos:line="65" pos:column="49">*<pos:position pos:line="65" pos:column="50"/></operator><name pos:line="65" pos:column="50">c<pos:position pos:line="65" pos:column="51"/></name> <operator pos:line="65" pos:column="52">!=<pos:position pos:line="65" pos:column="54"/></operator> <literal type="char" pos:line="65" pos:column="55">'\\'<pos:position pos:line="65" pos:column="59"/></literal><operator pos:line="65" pos:column="59">)<pos:position pos:line="65" pos:column="60"/></operator></expr>)<pos:position pos:line="65" pos:column="61"/></condition> <block pos:line="65" pos:column="62">{
            <comment type="block" pos:line="66" pos:column="13">/* Quickly scan past the string until we reach
             * either the end of the tag or a backslash.  If
             * we find a backslash, we have to switch to the
             * more complicated parser loop that follows.
             */</comment>
            <expr_stmt><expr><name pos:line="71" pos:column="13">c<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">++<pos:position pos:line="71" pos:column="16"/></operator></expr>;<pos:position pos:line="71" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></while>
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><operator pos:line="73" pos:column="13">*<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="14">c<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">==<pos:position pos:line="73" pos:column="18"/></operator> <literal type="char" pos:line="73" pos:column="19">'\\'<pos:position pos:line="73" pos:column="23"/></literal></expr>)<pos:position pos:line="73" pos:column="24"/></condition><then pos:line="73" pos:column="24"> <block pos:line="73" pos:column="25">{
            <do pos:line="74" pos:column="13">do <block pos:line="74" pos:column="16">{
                <comment type="block" pos:line="75" pos:column="17">/* Accept \" (or ' or `) as valid quotation of string. 
                 */</comment>
                <if pos:line="77" pos:column="17">if <condition pos:line="77" pos:column="20">(<expr><operator pos:line="77" pos:column="21">*<pos:position pos:line="77" pos:column="22"/></operator><name pos:line="77" pos:column="22">c<pos:position pos:line="77" pos:column="23"/></name> <operator pos:line="77" pos:column="24">==<pos:position pos:line="77" pos:column="26"/></operator> <literal type="char" pos:line="77" pos:column="27">'\\'<pos:position pos:line="77" pos:column="31"/></literal></expr>)<pos:position pos:line="77" pos:column="32"/></condition><then pos:line="77" pos:column="32"> <block pos:line="77" pos:column="33">{  
                    <comment type="block" pos:line="78" pos:column="21">/* Overwrite the "\" during the embedded 
                     * escape sequence of '"'. "\'" or '`'. 
                     * Shift bytes from here to next delimiter.     
                     */</comment>
                    <expr_stmt><expr><name pos:line="82" pos:column="21">c<pos:position pos:line="82" pos:column="22"/></name><operator pos:line="82" pos:column="22">++<pos:position pos:line="82" pos:column="24"/></operator></expr>;<pos:position pos:line="82" pos:column="25"/></expr_stmt>
                    <if pos:line="83" pos:column="21">if <condition pos:line="83" pos:column="24">(<expr><operator pos:line="83" pos:column="25">*<pos:position pos:line="83" pos:column="26"/></operator><name pos:line="83" pos:column="26">c<pos:position pos:line="83" pos:column="27"/></name> <operator pos:line="83" pos:column="28">==<pos:position pos:line="83" pos:column="30"/></operator> <name pos:line="83" pos:column="31">term<pos:position pos:line="83" pos:column="35"/></name></expr>)<pos:position pos:line="83" pos:column="36"/></condition><then pos:line="83" pos:column="36"> <block pos:line="83" pos:column="37">{
                        <expr_stmt><expr><name pos:line="84" pos:column="25">shift_val<pos:position pos:line="84" pos:column="34"/></name><operator pos:line="84" pos:column="34">++<pos:position pos:line="84" pos:column="36"/></operator></expr>;<pos:position pos:line="84" pos:column="37"/></expr_stmt>
                    }<pos:position pos:line="85" pos:column="22"/></block></then></if>
                    <if pos:line="86" pos:column="21">if <condition pos:line="86" pos:column="24">(<expr><name pos:line="86" pos:column="25">shift_val<pos:position pos:line="86" pos:column="34"/></name> <operator pos:line="86" pos:column="35">&gt;<pos:position pos:line="86" pos:column="39"/></operator> <literal type="number" pos:line="86" pos:column="37">0<pos:position pos:line="86" pos:column="38"/></literal></expr>)<pos:position pos:line="86" pos:column="39"/></condition><then pos:line="86" pos:column="39"> <block pos:line="86" pos:column="40">{
                        <expr_stmt><expr><operator pos:line="87" pos:column="25">*<pos:position pos:line="87" pos:column="26"/></operator><operator pos:line="87" pos:column="26">(<pos:position pos:line="87" pos:column="27"/></operator><name pos:line="87" pos:column="27">c<pos:position pos:line="87" pos:column="28"/></name><operator pos:line="87" pos:column="28">-<pos:position pos:line="87" pos:column="29"/></operator><name pos:line="87" pos:column="29">shift_val<pos:position pos:line="87" pos:column="38"/></name><operator pos:line="87" pos:column="38">)<pos:position pos:line="87" pos:column="39"/></operator> <operator pos:line="87" pos:column="40">=<pos:position pos:line="87" pos:column="41"/></operator> <operator pos:line="87" pos:column="42">*<pos:position pos:line="87" pos:column="43"/></operator><name pos:line="87" pos:column="43">c<pos:position pos:line="87" pos:column="44"/></name></expr>;<pos:position pos:line="87" pos:column="45"/></expr_stmt>
                    }<pos:position pos:line="88" pos:column="22"/></block></then></if>
                    <if pos:line="89" pos:column="21">if <condition pos:line="89" pos:column="24">(<expr><operator pos:line="89" pos:column="25">*<pos:position pos:line="89" pos:column="26"/></operator><name pos:line="89" pos:column="26">c<pos:position pos:line="89" pos:column="27"/></name> <operator pos:line="89" pos:column="28">==<pos:position pos:line="89" pos:column="30"/></operator> <literal type="char" pos:line="89" pos:column="31">'\0'<pos:position pos:line="89" pos:column="35"/></literal></expr>)<pos:position pos:line="89" pos:column="36"/></condition><then pos:line="89" pos:column="36"> <block pos:line="89" pos:column="37">{
                        <break pos:line="90" pos:column="25">break;<pos:position pos:line="90" pos:column="31"/></break>
                    }<pos:position pos:line="91" pos:column="22"/></block></then></if>
                }<pos:position pos:line="92" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="94" pos:column="17">c<pos:position pos:line="94" pos:column="18"/></name><operator pos:line="94" pos:column="18">++<pos:position pos:line="94" pos:column="20"/></operator></expr>;<pos:position pos:line="94" pos:column="21"/></expr_stmt>
                <if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><name pos:line="95" pos:column="21">shift_val<pos:position pos:line="95" pos:column="30"/></name> <operator pos:line="95" pos:column="31">&gt;<pos:position pos:line="95" pos:column="35"/></operator> <literal type="number" pos:line="95" pos:column="33">0<pos:position pos:line="95" pos:column="34"/></literal></expr>)<pos:position pos:line="95" pos:column="35"/></condition><then pos:line="95" pos:column="35"> <block pos:line="95" pos:column="36">{
                    <expr_stmt><expr><operator pos:line="96" pos:column="21">*<pos:position pos:line="96" pos:column="22"/></operator><operator pos:line="96" pos:column="22">(<pos:position pos:line="96" pos:column="23"/></operator><name pos:line="96" pos:column="23">c<pos:position pos:line="96" pos:column="24"/></name><operator pos:line="96" pos:column="24">-<pos:position pos:line="96" pos:column="25"/></operator><name pos:line="96" pos:column="25">shift_val<pos:position pos:line="96" pos:column="34"/></name><operator pos:line="96" pos:column="34">)<pos:position pos:line="96" pos:column="35"/></operator> <operator pos:line="96" pos:column="36">=<pos:position pos:line="96" pos:column="37"/></operator> <operator pos:line="96" pos:column="38">*<pos:position pos:line="96" pos:column="39"/></operator><name pos:line="96" pos:column="39">c<pos:position pos:line="96" pos:column="40"/></name></expr>;<pos:position pos:line="96" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="97" pos:column="18"/></block></then></if>
            }<pos:position pos:line="98" pos:column="14"/></block> while <condition pos:line="98" pos:column="21">(<expr><operator pos:line="98" pos:column="22">(<pos:position pos:line="98" pos:column="23"/></operator><operator pos:line="98" pos:column="23">*<pos:position pos:line="98" pos:column="24"/></operator><name pos:line="98" pos:column="24">c<pos:position pos:line="98" pos:column="25"/></name> <operator pos:line="98" pos:column="26">!=<pos:position pos:line="98" pos:column="28"/></operator> <name pos:line="98" pos:column="29">term<pos:position pos:line="98" pos:column="33"/></name><operator pos:line="98" pos:column="33">)<pos:position pos:line="98" pos:column="34"/></operator> <operator pos:line="98" pos:column="35">&amp;&amp;<pos:position pos:line="98" pos:column="45"/></operator> <operator pos:line="98" pos:column="38">(<pos:position pos:line="98" pos:column="39"/></operator><operator pos:line="98" pos:column="39">*<pos:position pos:line="98" pos:column="40"/></operator><name pos:line="98" pos:column="40">c<pos:position pos:line="98" pos:column="41"/></name> <operator pos:line="98" pos:column="42">!=<pos:position pos:line="98" pos:column="44"/></operator> <literal type="char" pos:line="98" pos:column="45">'\0'<pos:position pos:line="98" pos:column="49"/></literal><operator pos:line="98" pos:column="49">)<pos:position pos:line="98" pos:column="50"/></operator></expr>)<pos:position pos:line="98" pos:column="51"/></condition>;<pos:position pos:line="98" pos:column="52"/></do>
        }<pos:position pos:line="99" pos:column="10"/></block></then></if>
    }<pos:position pos:line="100" pos:column="6"/></block></else></if>
    
    <expr_stmt><expr><operator pos:line="102" pos:column="5">*<pos:position pos:line="102" pos:column="6"/></operator><operator pos:line="102" pos:column="6">(<pos:position pos:line="102" pos:column="7"/></operator><name pos:line="102" pos:column="7">c<pos:position pos:line="102" pos:column="8"/></name><operator pos:line="102" pos:column="8">-<pos:position pos:line="102" pos:column="9"/></operator><name pos:line="102" pos:column="9">shift_val<pos:position pos:line="102" pos:column="18"/></name><operator pos:line="102" pos:column="18">)<pos:position pos:line="102" pos:column="19"/></operator> <operator pos:line="102" pos:column="20">=<pos:position pos:line="102" pos:column="21"/></operator> <literal type="char" pos:line="102" pos:column="22">'\0'<pos:position pos:line="102" pos:column="26"/></literal></expr>;<pos:position pos:line="102" pos:column="27"/></expr_stmt> <comment type="block" pos:line="102" pos:column="28">/* Overwrites delimiter (term or WS) with NULL. */</comment>
    <expr_stmt><expr><name><name pos:line="103" pos:column="5">ctx<pos:position pos:line="103" pos:column="8"/></name><operator pos:line="103" pos:column="8">-&gt;<pos:position pos:line="103" pos:column="13"/></operator><name pos:line="103" pos:column="10">curr_tag_pos<pos:position pos:line="103" pos:column="22"/></name></name> <operator pos:line="103" pos:column="23">=<pos:position pos:line="103" pos:column="24"/></operator> <operator pos:line="103" pos:column="25">++<pos:position pos:line="103" pos:column="27"/></operator><name pos:line="103" pos:column="27">c<pos:position pos:line="103" pos:column="28"/></name></expr>;<pos:position pos:line="103" pos:column="29"/></expr_stmt>
    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><name pos:line="104" pos:column="9">dodecode<pos:position pos:line="104" pos:column="17"/></name></expr>)<pos:position pos:line="104" pos:column="18"/></condition><then pos:line="104" pos:column="18"> <block pos:line="104" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="105" pos:column="9">decodehtml<pos:position pos:line="105" pos:column="19"/></name><argument_list pos:line="105" pos:column="19">(<argument><expr><operator pos:line="105" pos:column="20">*<pos:position pos:line="105" pos:column="21"/></operator><name pos:line="105" pos:column="21">tag_val<pos:position pos:line="105" pos:column="28"/></name></expr></argument>)<pos:position pos:line="105" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if>

    <return pos:line="108" pos:column="5">return;<pos:position pos:line="108" pos:column="12"/></return>
}<pos:position pos:line="109" pos:column="2"/></block></function></unit>

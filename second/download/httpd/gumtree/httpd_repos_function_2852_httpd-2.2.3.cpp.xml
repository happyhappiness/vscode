<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2852_httpd-2.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">internalSubset<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">PROLOG_STATE<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">state<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="3" pos:column="20">int<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">tok<pos:position pos:line="3" pos:column="27"/></name></decl></parameter>,
		   <parameter><decl><type><specifier pos:line="4" pos:column="20">const<pos:position pos:line="4" pos:column="25"/></specifier> <name pos:line="4" pos:column="26">char<pos:position pos:line="4" pos:column="30"/></name> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type><name pos:line="4" pos:column="32">ptr<pos:position pos:line="4" pos:column="35"/></name></decl></parameter>,
		   <parameter><decl><type><specifier pos:line="5" pos:column="20">const<pos:position pos:line="5" pos:column="25"/></specifier> <name pos:line="5" pos:column="26">char<pos:position pos:line="5" pos:column="30"/></name> <modifier pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></modifier></type><name pos:line="5" pos:column="32">end<pos:position pos:line="5" pos:column="35"/></name></decl></parameter>,
		   <parameter><decl><type><specifier pos:line="6" pos:column="20">const<pos:position pos:line="6" pos:column="25"/></specifier> <name pos:line="6" pos:column="26">ENCODING<pos:position pos:line="6" pos:column="34"/></name> <modifier pos:line="6" pos:column="35">*<pos:position pos:line="6" pos:column="36"/></modifier></type><name pos:line="6" pos:column="36">enc<pos:position pos:line="6" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="40"/></parameter_list>
<block pos:line="7" pos:column="1">{
  <switch pos:line="8" pos:column="3">switch <condition pos:line="8" pos:column="10">(<expr><name pos:line="8" pos:column="11">tok<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition> <block pos:line="8" pos:column="16">{
  <case pos:line="9" pos:column="3">case <expr><name pos:line="9" pos:column="8">XML_TOK_PROLOG_S<pos:position pos:line="9" pos:column="24"/></name></expr>:<pos:position pos:line="9" pos:column="25"/></case>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">XML_ROLE_NONE<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></return>
  <case pos:line="11" pos:column="3">case <expr><name pos:line="11" pos:column="8">XML_TOK_DECL_OPEN<pos:position pos:line="11" pos:column="25"/></name></expr>:<pos:position pos:line="11" pos:column="26"/></case>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">XmlNameMatchesAscii<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">enc<pos:position pos:line="12" pos:column="32"/></name></expr></argument>,
			    <argument><expr><name pos:line="13" pos:column="29">ptr<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">+<pos:position pos:line="13" pos:column="34"/></operator> <literal type="number" pos:line="13" pos:column="35">2<pos:position pos:line="13" pos:column="36"/></literal> <operator pos:line="13" pos:column="37">*<pos:position pos:line="13" pos:column="38"/></operator> <call><name pos:line="13" pos:column="39">MIN_BYTES_PER_CHAR<pos:position pos:line="13" pos:column="57"/></name><argument_list pos:line="13" pos:column="57">(<argument><expr><name pos:line="13" pos:column="58">enc<pos:position pos:line="13" pos:column="61"/></name></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="14" pos:column="29">end<pos:position pos:line="14" pos:column="32"/></name></expr></argument>,
			    <argument><expr><name pos:line="15" pos:column="29">KW_ENTITY<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40"> <block pos:line="15" pos:column="41">{
      <expr_stmt><expr><name><name pos:line="16" pos:column="7">state<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">handler<pos:position pos:line="16" pos:column="21"/></name></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">entity0<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
      <return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">XML_ROLE_NONE<pos:position pos:line="17" pos:column="27"/></name></expr>;<pos:position pos:line="17" pos:column="28"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">XmlNameMatchesAscii<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">enc<pos:position pos:line="19" pos:column="32"/></name></expr></argument>,
			    <argument><expr><name pos:line="20" pos:column="29">ptr<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">+<pos:position pos:line="20" pos:column="34"/></operator> <literal type="number" pos:line="20" pos:column="35">2<pos:position pos:line="20" pos:column="36"/></literal> <operator pos:line="20" pos:column="37">*<pos:position pos:line="20" pos:column="38"/></operator> <call><name pos:line="20" pos:column="39">MIN_BYTES_PER_CHAR<pos:position pos:line="20" pos:column="57"/></name><argument_list pos:line="20" pos:column="57">(<argument><expr><name pos:line="20" pos:column="58">enc<pos:position pos:line="20" pos:column="61"/></name></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="21" pos:column="29">end<pos:position pos:line="21" pos:column="32"/></name></expr></argument>,
			    <argument><expr><name pos:line="22" pos:column="29">KW_ATTLIST<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41"> <block pos:line="22" pos:column="42">{
      <expr_stmt><expr><name><name pos:line="23" pos:column="7">state<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">handler<pos:position pos:line="23" pos:column="21"/></name></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">attlist0<pos:position pos:line="23" pos:column="32"/></name></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><name pos:line="24" pos:column="14">XML_ROLE_NONE<pos:position pos:line="24" pos:column="27"/></name></expr>;<pos:position pos:line="24" pos:column="28"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">XmlNameMatchesAscii<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">enc<pos:position pos:line="26" pos:column="32"/></name></expr></argument>,
			    <argument><expr><name pos:line="27" pos:column="29">ptr<pos:position pos:line="27" pos:column="32"/></name> <operator pos:line="27" pos:column="33">+<pos:position pos:line="27" pos:column="34"/></operator> <literal type="number" pos:line="27" pos:column="35">2<pos:position pos:line="27" pos:column="36"/></literal> <operator pos:line="27" pos:column="37">*<pos:position pos:line="27" pos:column="38"/></operator> <call><name pos:line="27" pos:column="39">MIN_BYTES_PER_CHAR<pos:position pos:line="27" pos:column="57"/></name><argument_list pos:line="27" pos:column="57">(<argument><expr><name pos:line="27" pos:column="58">enc<pos:position pos:line="27" pos:column="61"/></name></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="28" pos:column="29">end<pos:position pos:line="28" pos:column="32"/></name></expr></argument>,
			    <argument><expr><name pos:line="29" pos:column="29">KW_ELEMENT<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="41"/></condition><then pos:line="29" pos:column="41"> <block pos:line="29" pos:column="42">{
      <expr_stmt><expr><name><name pos:line="30" pos:column="7">state<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">handler<pos:position pos:line="30" pos:column="21"/></name></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">element0<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
      <return pos:line="31" pos:column="7">return <expr><name pos:line="31" pos:column="14">XML_ROLE_NONE<pos:position pos:line="31" pos:column="27"/></name></expr>;<pos:position pos:line="31" pos:column="28"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">XmlNameMatchesAscii<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">enc<pos:position pos:line="33" pos:column="32"/></name></expr></argument>,
			    <argument><expr><name pos:line="34" pos:column="29">ptr<pos:position pos:line="34" pos:column="32"/></name> <operator pos:line="34" pos:column="33">+<pos:position pos:line="34" pos:column="34"/></operator> <literal type="number" pos:line="34" pos:column="35">2<pos:position pos:line="34" pos:column="36"/></literal> <operator pos:line="34" pos:column="37">*<pos:position pos:line="34" pos:column="38"/></operator> <call><name pos:line="34" pos:column="39">MIN_BYTES_PER_CHAR<pos:position pos:line="34" pos:column="57"/></name><argument_list pos:line="34" pos:column="57">(<argument><expr><name pos:line="34" pos:column="58">enc<pos:position pos:line="34" pos:column="61"/></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="35" pos:column="29">end<pos:position pos:line="35" pos:column="32"/></name></expr></argument>,
			    <argument><expr><name pos:line="36" pos:column="29">KW_NOTATION<pos:position pos:line="36" pos:column="40"/></name></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="42"/></condition><then pos:line="36" pos:column="42"> <block pos:line="36" pos:column="43">{
      <expr_stmt><expr><name><name pos:line="37" pos:column="7">state<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">handler<pos:position pos:line="37" pos:column="21"/></name></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">notation0<pos:position pos:line="37" pos:column="33"/></name></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>
      <return pos:line="38" pos:column="7">return <expr><name pos:line="38" pos:column="14">XML_ROLE_NONE<pos:position pos:line="38" pos:column="27"/></name></expr>;<pos:position pos:line="38" pos:column="28"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <break pos:line="40" pos:column="5">break;<pos:position pos:line="40" pos:column="11"/></break>
  <case pos:line="41" pos:column="3">case <expr><name pos:line="41" pos:column="8">XML_TOK_PI<pos:position pos:line="41" pos:column="18"/></name></expr>:<pos:position pos:line="41" pos:column="19"/></case>
  <case pos:line="42" pos:column="3">case <expr><name pos:line="42" pos:column="8">XML_TOK_COMMENT<pos:position pos:line="42" pos:column="23"/></name></expr>:<pos:position pos:line="42" pos:column="24"/></case>
    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">XML_ROLE_NONE<pos:position pos:line="43" pos:column="25"/></name></expr>;<pos:position pos:line="43" pos:column="26"/></return>
  <case pos:line="44" pos:column="3">case <expr><name pos:line="44" pos:column="8">XML_TOK_PARAM_ENTITY_REF<pos:position pos:line="44" pos:column="32"/></name></expr>:<pos:position pos:line="44" pos:column="33"/></case>
    <return pos:line="45" pos:column="5">return <expr><name pos:line="45" pos:column="12">XML_ROLE_PARAM_ENTITY_REF<pos:position pos:line="45" pos:column="37"/></name></expr>;<pos:position pos:line="45" pos:column="38"/></return>
  <case pos:line="46" pos:column="3">case <expr><name pos:line="46" pos:column="8">XML_TOK_CLOSE_BRACKET<pos:position pos:line="46" pos:column="29"/></name></expr>:<pos:position pos:line="46" pos:column="30"/></case>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">state<pos:position pos:line="47" pos:column="10"/></name><operator pos:line="47" pos:column="10">-&gt;<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="12">handler<pos:position pos:line="47" pos:column="19"/></name></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <name pos:line="47" pos:column="22">doctype5<pos:position pos:line="47" pos:column="30"/></name></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt>
    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">XML_ROLE_NONE<pos:position pos:line="48" pos:column="25"/></name></expr>;<pos:position pos:line="48" pos:column="26"/></return>
  }<pos:position pos:line="49" pos:column="4"/></block></switch>
  <return pos:line="50" pos:column="3">return <expr><call><name pos:line="50" pos:column="10">common<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><name pos:line="50" pos:column="17">state<pos:position pos:line="50" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="24">tok<pos:position pos:line="50" pos:column="27"/></name></expr></argument>)<pos:position pos:line="50" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="29"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

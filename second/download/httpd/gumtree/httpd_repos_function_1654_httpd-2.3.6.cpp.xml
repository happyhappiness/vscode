<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1654_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">copy_headers_in<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">vbaton<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">key<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">value<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">serf_bucket_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">hdrs_bkt<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><operator pos:line="3" pos:column="31">(<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="32">serf_bucket_t<pos:position pos:line="3" pos:column="45"/></name> <operator pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></operator><operator pos:line="3" pos:column="47">)<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="48">vbaton<pos:position pos:line="3" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="55"/></decl_stmt>

    <comment type="block" pos:line="5" pos:column="5">/* XXXXX: List of headers not to copy to serf. serf's serf_bucket_headers_setn, 
     * doesn't actually overwrite a header if we set it once, so we need to ignore anything
     * we might want to toggle or combine.
     */</comment>
    <switch pos:line="9" pos:column="5">switch <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">key<pos:position pos:line="9" pos:column="16"/></name><index pos:line="9" pos:column="16">[<expr><literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal></expr>]<pos:position pos:line="9" pos:column="19"/></index></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition> <block pos:line="9" pos:column="21">{
    <case pos:line="10" pos:column="5">case <expr><literal type="char" pos:line="10" pos:column="10">'a'<pos:position pos:line="10" pos:column="13"/></literal></expr>:<pos:position pos:line="10" pos:column="14"/></case>
    <case pos:line="11" pos:column="5">case <expr><literal type="char" pos:line="11" pos:column="10">'A'<pos:position pos:line="11" pos:column="13"/></literal></expr>:<pos:position pos:line="11" pos:column="14"/></case>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">strcasecmp<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><literal type="string" pos:line="12" pos:column="24">"Accept-Encoding"<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">key<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call> <operator pos:line="12" pos:column="48">==<pos:position pos:line="12" pos:column="50"/></operator> <literal type="number" pos:line="12" pos:column="51">0<pos:position pos:line="12" pos:column="52"/></literal></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53"> <block pos:line="12" pos:column="54">{
            <return pos:line="13" pos:column="13">return <expr><literal type="number" pos:line="13" pos:column="20">0<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></return>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>
        <break pos:line="15" pos:column="9">break;<pos:position pos:line="15" pos:column="15"/></break>
    <case pos:line="16" pos:column="5">case <expr><literal type="char" pos:line="16" pos:column="10">'c'<pos:position pos:line="16" pos:column="13"/></literal></expr>:<pos:position pos:line="16" pos:column="14"/></case>
    <case pos:line="17" pos:column="5">case <expr><literal type="char" pos:line="17" pos:column="10">'C'<pos:position pos:line="17" pos:column="13"/></literal></expr>:<pos:position pos:line="17" pos:column="14"/></case>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">strcasecmp<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><literal type="string" pos:line="18" pos:column="24">"Connection"<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">key<pos:position pos:line="18" pos:column="41"/></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call> <operator pos:line="18" pos:column="43">==<pos:position pos:line="18" pos:column="45"/></operator> <literal type="number" pos:line="18" pos:column="46">0<pos:position pos:line="18" pos:column="47"/></literal></expr>)<pos:position pos:line="18" pos:column="48"/></condition><then pos:line="18" pos:column="48"> <block pos:line="18" pos:column="49">{
            <return pos:line="19" pos:column="13">return <expr><literal type="number" pos:line="19" pos:column="20">0<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        <break pos:line="21" pos:column="9">break;<pos:position pos:line="21" pos:column="15"/></break>
    <case pos:line="22" pos:column="5">case <expr><literal type="char" pos:line="22" pos:column="10">'h'<pos:position pos:line="22" pos:column="13"/></literal></expr>:<pos:position pos:line="22" pos:column="14"/></case>
    <case pos:line="23" pos:column="5">case <expr><literal type="char" pos:line="23" pos:column="10">'H'<pos:position pos:line="23" pos:column="13"/></literal></expr>:<pos:position pos:line="23" pos:column="14"/></case>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">strcasecmp<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><literal type="string" pos:line="24" pos:column="24">"Host"<pos:position pos:line="24" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="32">key<pos:position pos:line="24" pos:column="35"/></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call> <operator pos:line="24" pos:column="37">==<pos:position pos:line="24" pos:column="39"/></operator> <literal type="number" pos:line="24" pos:column="40">0<pos:position pos:line="24" pos:column="41"/></literal></expr>)<pos:position pos:line="24" pos:column="42"/></condition><then pos:line="24" pos:column="42"> <block pos:line="24" pos:column="43">{
            <return pos:line="25" pos:column="13">return <expr><literal type="number" pos:line="25" pos:column="20">0<pos:position pos:line="25" pos:column="21"/></literal></expr>;<pos:position pos:line="25" pos:column="22"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
        <break pos:line="27" pos:column="9">break;<pos:position pos:line="27" pos:column="15"/></break>
    <case pos:line="28" pos:column="5">case <expr><literal type="char" pos:line="28" pos:column="10">'k'<pos:position pos:line="28" pos:column="13"/></literal></expr>:<pos:position pos:line="28" pos:column="14"/></case>
    <case pos:line="29" pos:column="5">case <expr><literal type="char" pos:line="29" pos:column="10">'K'<pos:position pos:line="29" pos:column="13"/></literal></expr>:<pos:position pos:line="29" pos:column="14"/></case>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">strcasecmp<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><literal type="string" pos:line="30" pos:column="24">"Keep-Alive"<pos:position pos:line="30" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">key<pos:position pos:line="30" pos:column="41"/></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call> <operator pos:line="30" pos:column="43">==<pos:position pos:line="30" pos:column="45"/></operator> <literal type="number" pos:line="30" pos:column="46">0<pos:position pos:line="30" pos:column="47"/></literal></expr>)<pos:position pos:line="30" pos:column="48"/></condition><then pos:line="30" pos:column="48"> <block pos:line="30" pos:column="49">{
            <return pos:line="31" pos:column="13">return <expr><literal type="number" pos:line="31" pos:column="20">0<pos:position pos:line="31" pos:column="21"/></literal></expr>;<pos:position pos:line="31" pos:column="22"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
        <break pos:line="33" pos:column="9">break;<pos:position pos:line="33" pos:column="15"/></break>
    <case pos:line="34" pos:column="5">case <expr><literal type="char" pos:line="34" pos:column="10">'t'<pos:position pos:line="34" pos:column="13"/></literal></expr>:<pos:position pos:line="34" pos:column="14"/></case>
    <case pos:line="35" pos:column="5">case <expr><literal type="char" pos:line="35" pos:column="10">'T'<pos:position pos:line="35" pos:column="13"/></literal></expr>:<pos:position pos:line="35" pos:column="14"/></case>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">strcasecmp<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><literal type="string" pos:line="36" pos:column="24">"TE"<pos:position pos:line="36" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="30">key<pos:position pos:line="36" pos:column="33"/></name></expr></argument>)<pos:position pos:line="36" pos:column="34"/></argument_list></call> <operator pos:line="36" pos:column="35">==<pos:position pos:line="36" pos:column="37"/></operator> <literal type="number" pos:line="36" pos:column="38">0<pos:position pos:line="36" pos:column="39"/></literal></expr>)<pos:position pos:line="36" pos:column="40"/></condition><then pos:line="36" pos:column="40"> <block pos:line="36" pos:column="41">{
            <return pos:line="37" pos:column="13">return <expr><literal type="number" pos:line="37" pos:column="20">0<pos:position pos:line="37" pos:column="21"/></literal></expr>;<pos:position pos:line="37" pos:column="22"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">strcasecmp<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><literal type="string" pos:line="39" pos:column="24">"Trailer"<pos:position pos:line="39" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="35">key<pos:position pos:line="39" pos:column="38"/></name></expr></argument>)<pos:position pos:line="39" pos:column="39"/></argument_list></call> <operator pos:line="39" pos:column="40">==<pos:position pos:line="39" pos:column="42"/></operator> <literal type="number" pos:line="39" pos:column="43">0<pos:position pos:line="39" pos:column="44"/></literal></expr>)<pos:position pos:line="39" pos:column="45"/></condition><then pos:line="39" pos:column="45"> <block pos:line="39" pos:column="46">{
            <return pos:line="40" pos:column="13">return <expr><literal type="number" pos:line="40" pos:column="20">0<pos:position pos:line="40" pos:column="21"/></literal></expr>;<pos:position pos:line="40" pos:column="22"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
        <break pos:line="42" pos:column="9">break;<pos:position pos:line="42" pos:column="15"/></break>
    <case pos:line="43" pos:column="5">case <expr><literal type="char" pos:line="43" pos:column="10">'u'<pos:position pos:line="43" pos:column="13"/></literal></expr>:<pos:position pos:line="43" pos:column="14"/></case>
    <case pos:line="44" pos:column="5">case <expr><literal type="char" pos:line="44" pos:column="10">'U'<pos:position pos:line="44" pos:column="13"/></literal></expr>:<pos:position pos:line="44" pos:column="14"/></case>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">strcasecmp<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><literal type="string" pos:line="45" pos:column="24">"Upgrade"<pos:position pos:line="45" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="35">key<pos:position pos:line="45" pos:column="38"/></name></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call> <operator pos:line="45" pos:column="40">==<pos:position pos:line="45" pos:column="42"/></operator> <literal type="number" pos:line="45" pos:column="43">0<pos:position pos:line="45" pos:column="44"/></literal></expr>)<pos:position pos:line="45" pos:column="45"/></condition><then pos:line="45" pos:column="45"> <block pos:line="45" pos:column="46">{
            <return pos:line="46" pos:column="13">return <expr><literal type="number" pos:line="46" pos:column="20">0<pos:position pos:line="46" pos:column="21"/></literal></expr>;<pos:position pos:line="46" pos:column="22"/></return>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>
        <break pos:line="48" pos:column="9">break;<pos:position pos:line="48" pos:column="15"/></break>
    <default pos:line="49" pos:column="5">default:<pos:position pos:line="49" pos:column="13"/></default>
        <break pos:line="50" pos:column="9">break;<pos:position pos:line="50" pos:column="15"/></break>
    }<pos:position pos:line="51" pos:column="6"/></block></switch>

    <expr_stmt><expr><call><name pos:line="53" pos:column="5">serf_bucket_headers_setn<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">hdrs_bkt<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="40">key<pos:position pos:line="53" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="45">value<pos:position pos:line="53" pos:column="50"/></name></expr></argument>)<pos:position pos:line="53" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="52"/></expr_stmt>
    <return pos:line="54" pos:column="5">return <expr><literal type="number" pos:line="54" pos:column="12">0<pos:position pos:line="54" pos:column="13"/></literal></expr>;<pos:position pos:line="54" pos:column="14"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

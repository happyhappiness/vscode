<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4076_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">key_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">our_ftok<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">filename<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* to help avoid collisions while still using
     * an easily recreated proj_id */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_ssize_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">slen<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><call><name pos:line="5" pos:column="24">strlen<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><name pos:line="5" pos:column="31">filename<pos:position pos:line="5" pos:column="39"/></name></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
    <return pos:line="6" pos:column="5">return <expr><call><name pos:line="6" pos:column="12">ftok<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">filename<pos:position pos:line="6" pos:column="25"/></name></expr></argument>,
                <argument><expr><operator pos:line="7" pos:column="17">(<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">int<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">)<pos:position pos:line="7" pos:column="22"/></operator><call><name pos:line="7" pos:column="22">apr_hashfunc_default<pos:position pos:line="7" pos:column="42"/></name><argument_list pos:line="7" pos:column="42">(<argument><expr><name pos:line="7" pos:column="43">filename<pos:position pos:line="7" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="53">&amp;<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="54">slen<pos:position pos:line="7" pos:column="58"/></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

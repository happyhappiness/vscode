<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3402.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cache_select<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">request_rec<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">r<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">cache_provider_list<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">list<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">cache_handle_t<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">h<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">key<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">cache_request_rec<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">cache<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><operator pos:line="7" pos:column="32">(<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">cache_request_rec<pos:position pos:line="7" pos:column="50"/></name> <operator pos:line="7" pos:column="51">*<pos:position pos:line="7" pos:column="52"/></operator><operator pos:line="7" pos:column="52">)<pos:position pos:line="7" pos:column="53"/></operator>
                         <call><name pos:line="8" pos:column="26">ap_get_module_config<pos:position pos:line="8" pos:column="46"/></name><argument_list pos:line="8" pos:column="46">(<argument><expr><name><name pos:line="8" pos:column="47">r<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">request_config<pos:position pos:line="8" pos:column="64"/></name></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="66">&amp;<pos:position pos:line="8" pos:column="71"/></operator><name pos:line="8" pos:column="67">cache_module<pos:position pos:line="8" pos:column="79"/></name></expr></argument>)<pos:position pos:line="8" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="81"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">rv<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">cache_generate_key<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">r<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="32">r<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">-&gt;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="35">pool<pos:position pos:line="10" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="41">&amp;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="42">key<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">rv<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">!=<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">APR_SUCCESS<pos:position pos:line="11" pos:column="26"/></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27"> <block pos:line="11" pos:column="28">{
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">rv<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="14" pos:column="5">/* go through the cache types till we get a match */</comment>
    <expr_stmt><expr><name pos:line="15" pos:column="5">h<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <call><name pos:line="15" pos:column="9">apr_palloc<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name><name pos:line="15" pos:column="20">r<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">pool<pos:position pos:line="15" pos:column="27"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="29">sizeof<argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">cache_handle_t<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">list<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <name><name pos:line="17" pos:column="12">cache<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">providers<pos:position pos:line="17" pos:column="28"/></name></name></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>

    <while pos:line="19" pos:column="5">while <condition pos:line="19" pos:column="11">(<expr><name pos:line="19" pos:column="12">list<pos:position pos:line="19" pos:column="16"/></name></expr>)<pos:position pos:line="19" pos:column="17"/></condition> <block pos:line="19" pos:column="18">{
        <switch pos:line="20" pos:column="9">switch <condition pos:line="20" pos:column="16">(<expr><operator pos:line="20" pos:column="17">(<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">rv<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <call><name><name pos:line="20" pos:column="23">list<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">-&gt;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="29">provider<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">open_entity<pos:position pos:line="20" pos:column="50"/></name></name><argument_list pos:line="20" pos:column="50">(<argument><expr><name pos:line="20" pos:column="51">h<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="54">r<pos:position pos:line="20" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="57">key<pos:position pos:line="20" pos:column="60"/></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call><operator pos:line="20" pos:column="61">)<pos:position pos:line="20" pos:column="62"/></operator></expr>)<pos:position pos:line="20" pos:column="63"/></condition> <block pos:line="20" pos:column="64">{
        <case pos:line="21" pos:column="9">case <expr><name pos:line="21" pos:column="14">OK<pos:position pos:line="21" pos:column="16"/></name></expr>:<pos:position pos:line="21" pos:column="17"/></case> <block pos:line="21" pos:column="18">{
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">char<pos:position pos:line="22" pos:column="17"/></name> <modifier pos:line="22" pos:column="18">*<pos:position pos:line="22" pos:column="19"/></modifier></type><name pos:line="22" pos:column="19">vary<pos:position pos:line="22" pos:column="23"/></name> <init pos:line="22" pos:column="24">= <expr><name pos:line="22" pos:column="26">NULL<pos:position pos:line="22" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="31"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">int<pos:position pos:line="23" pos:column="16"/></name></type> <name pos:line="23" pos:column="17">fresh<pos:position pos:line="23" pos:column="22"/></name></decl>;<pos:position pos:line="23" pos:column="23"/></decl_stmt>

            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><call><name><name pos:line="25" pos:column="17">list<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">provider<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">recall_headers<pos:position pos:line="25" pos:column="47"/></name></name><argument_list pos:line="25" pos:column="47">(<argument><expr><name pos:line="25" pos:column="48">h<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">r<pos:position pos:line="25" pos:column="52"/></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call> <operator pos:line="25" pos:column="54">!=<pos:position pos:line="25" pos:column="56"/></operator> <name pos:line="25" pos:column="57">APR_SUCCESS<pos:position pos:line="25" pos:column="68"/></name></expr>)<pos:position pos:line="25" pos:column="69"/></condition><then pos:line="25" pos:column="69"> <block pos:line="25" pos:column="70">{
                <comment type="block" pos:line="26" pos:column="17">/* TODO: Handle this error */</comment>
                <return pos:line="27" pos:column="17">return <expr><name pos:line="27" pos:column="24">DECLINED<pos:position pos:line="27" pos:column="32"/></name></expr>;<pos:position pos:line="27" pos:column="33"/></return>
            }<pos:position pos:line="28" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="30" pos:column="13">/*
             * Check Content-Negotiation - Vary
             *
             * At this point we need to make sure that the object we found in
             * the cache is the same object that would be delivered to the
             * client, when the effects of content negotiation are taken into
             * effect.
             *
             * In plain english, we want to make sure that a language-negotiated
             * document in one language is not given to a client asking for a
             * language negotiated document in a different language by mistake.
             *
             * This code makes the assumption that the storage manager will
             * cache the req_hdrs if the response contains a Vary
             * header.
             *
             * RFC2616 13.6 and 14.44 describe the Vary mechanism.
             */</comment>
            <expr_stmt><expr><name pos:line="48" pos:column="13">vary<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <call><name pos:line="48" pos:column="20">apr_pstrdup<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><name><name pos:line="48" pos:column="32">r<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">-&gt;<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="35">pool<pos:position pos:line="48" pos:column="39"/></name></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="41">apr_table_get<pos:position pos:line="48" pos:column="54"/></name><argument_list pos:line="48" pos:column="54">(<argument><expr><name><name pos:line="48" pos:column="55">h<pos:position pos:line="48" pos:column="56"/></name><operator pos:line="48" pos:column="56">-&gt;<pos:position pos:line="48" pos:column="61"/></operator><name pos:line="48" pos:column="58">resp_hdrs<pos:position pos:line="48" pos:column="67"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="69">"Vary"<pos:position pos:line="48" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="78"/></expr_stmt>
            <while pos:line="49" pos:column="13">while <condition pos:line="49" pos:column="19">(<expr><name pos:line="49" pos:column="20">vary<pos:position pos:line="49" pos:column="24"/></name> <operator pos:line="49" pos:column="25">&amp;&amp;<pos:position pos:line="49" pos:column="35"/></operator> <operator pos:line="49" pos:column="28">*<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="29">vary<pos:position pos:line="49" pos:column="33"/></name></expr>)<pos:position pos:line="49" pos:column="34"/></condition> <block pos:line="49" pos:column="35">{
                <decl_stmt><decl><type><name pos:line="50" pos:column="17">char<pos:position pos:line="50" pos:column="21"/></name> <modifier pos:line="50" pos:column="22">*<pos:position pos:line="50" pos:column="23"/></modifier></type><name pos:line="50" pos:column="23">name<pos:position pos:line="50" pos:column="27"/></name> <init pos:line="50" pos:column="28">= <expr><name pos:line="50" pos:column="30">vary<pos:position pos:line="50" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="50" pos:column="35"/></decl_stmt>
                <decl_stmt><decl><type><specifier pos:line="51" pos:column="17">const<pos:position pos:line="51" pos:column="22"/></specifier> <name pos:line="51" pos:column="23">char<pos:position pos:line="51" pos:column="27"/></name> <modifier pos:line="51" pos:column="28">*<pos:position pos:line="51" pos:column="29"/></modifier></type><name pos:line="51" pos:column="29">h1<pos:position pos:line="51" pos:column="31"/></name></decl>, <modifier pos:line="51" pos:column="33">*<pos:position pos:line="51" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="51" pos:column="34">h2<pos:position pos:line="51" pos:column="36"/></name></decl>;<pos:position pos:line="51" pos:column="37"/></decl_stmt>

                <comment type="block" pos:line="53" pos:column="17">/* isolate header name */</comment>
                <while pos:line="54" pos:column="17">while <condition pos:line="54" pos:column="23">(<expr><operator pos:line="54" pos:column="24">*<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="25">vary<pos:position pos:line="54" pos:column="29"/></name> <operator pos:line="54" pos:column="30">&amp;&amp;<pos:position pos:line="54" pos:column="40"/></operator> <operator pos:line="54" pos:column="33">!<pos:position pos:line="54" pos:column="34"/></operator><call><name pos:line="54" pos:column="34">apr_isspace<pos:position pos:line="54" pos:column="45"/></name><argument_list pos:line="54" pos:column="45">(<argument><expr><operator pos:line="54" pos:column="46">*<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="47">vary<pos:position pos:line="54" pos:column="51"/></name></expr></argument>)<pos:position pos:line="54" pos:column="52"/></argument_list></call> <operator pos:line="54" pos:column="53">&amp;&amp;<pos:position pos:line="54" pos:column="63"/></operator> <operator pos:line="54" pos:column="56">(<pos:position pos:line="54" pos:column="57"/></operator><operator pos:line="54" pos:column="57">*<pos:position pos:line="54" pos:column="58"/></operator><name pos:line="54" pos:column="58">vary<pos:position pos:line="54" pos:column="62"/></name> <operator pos:line="54" pos:column="63">!=<pos:position pos:line="54" pos:column="65"/></operator> <literal type="char" pos:line="54" pos:column="66">','<pos:position pos:line="54" pos:column="69"/></literal><operator pos:line="54" pos:column="69">)<pos:position pos:line="54" pos:column="70"/></operator></expr>)<pos:position pos:line="54" pos:column="71"/></condition>
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="55" pos:column="21">++<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="23">vary<pos:position pos:line="55" pos:column="27"/></name></expr>;<pos:position pos:line="55" pos:column="28"/></expr_stmt></block></while>
                <while pos:line="56" pos:column="17">while <condition pos:line="56" pos:column="23">(<expr><operator pos:line="56" pos:column="24">*<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="25">vary<pos:position pos:line="56" pos:column="29"/></name> <operator pos:line="56" pos:column="30">&amp;&amp;<pos:position pos:line="56" pos:column="40"/></operator> <operator pos:line="56" pos:column="33">(<pos:position pos:line="56" pos:column="34"/></operator><call><name pos:line="56" pos:column="34">apr_isspace<pos:position pos:line="56" pos:column="45"/></name><argument_list pos:line="56" pos:column="45">(<argument><expr><operator pos:line="56" pos:column="46">*<pos:position pos:line="56" pos:column="47"/></operator><name pos:line="56" pos:column="47">vary<pos:position pos:line="56" pos:column="51"/></name></expr></argument>)<pos:position pos:line="56" pos:column="52"/></argument_list></call> <operator pos:line="56" pos:column="53">||<pos:position pos:line="56" pos:column="55"/></operator> <operator pos:line="56" pos:column="56">(<pos:position pos:line="56" pos:column="57"/></operator><operator pos:line="56" pos:column="57">*<pos:position pos:line="56" pos:column="58"/></operator><name pos:line="56" pos:column="58">vary<pos:position pos:line="56" pos:column="62"/></name> <operator pos:line="56" pos:column="63">==<pos:position pos:line="56" pos:column="65"/></operator> <literal type="char" pos:line="56" pos:column="66">','<pos:position pos:line="56" pos:column="69"/></literal><operator pos:line="56" pos:column="69">)<pos:position pos:line="56" pos:column="70"/></operator><operator pos:line="56" pos:column="70">)<pos:position pos:line="56" pos:column="71"/></operator></expr>)<pos:position pos:line="56" pos:column="72"/></condition> <block pos:line="56" pos:column="73">{
                    <expr_stmt><expr><operator pos:line="57" pos:column="21">*<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="22">vary<pos:position pos:line="57" pos:column="26"/></name> <operator pos:line="57" pos:column="27">=<pos:position pos:line="57" pos:column="28"/></operator> <literal type="char" pos:line="57" pos:column="29">'\0'<pos:position pos:line="57" pos:column="33"/></literal></expr>;<pos:position pos:line="57" pos:column="34"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="58" pos:column="21">++<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="23">vary<pos:position pos:line="58" pos:column="27"/></name></expr>;<pos:position pos:line="58" pos:column="28"/></expr_stmt>
                }<pos:position pos:line="59" pos:column="18"/></block></while>

                <comment type="block" pos:line="61" pos:column="17">/*
                 * is this header in the request and the header in the cached
                 * request identical? If not, we give up and do a straight get
                 */</comment>
                <expr_stmt><expr><name pos:line="65" pos:column="17">h1<pos:position pos:line="65" pos:column="19"/></name> <operator pos:line="65" pos:column="20">=<pos:position pos:line="65" pos:column="21"/></operator> <call><name pos:line="65" pos:column="22">apr_table_get<pos:position pos:line="65" pos:column="35"/></name><argument_list pos:line="65" pos:column="35">(<argument><expr><name><name pos:line="65" pos:column="36">r<pos:position pos:line="65" pos:column="37"/></name><operator pos:line="65" pos:column="37">-&gt;<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="39">headers_in<pos:position pos:line="65" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="51">name<pos:position pos:line="65" pos:column="55"/></name></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><name pos:line="66" pos:column="17">h2<pos:position pos:line="66" pos:column="19"/></name> <operator pos:line="66" pos:column="20">=<pos:position pos:line="66" pos:column="21"/></operator> <call><name pos:line="66" pos:column="22">apr_table_get<pos:position pos:line="66" pos:column="35"/></name><argument_list pos:line="66" pos:column="35">(<argument><expr><name><name pos:line="66" pos:column="36">h<pos:position pos:line="66" pos:column="37"/></name><operator pos:line="66" pos:column="37">-&gt;<pos:position pos:line="66" pos:column="42"/></operator><name pos:line="66" pos:column="39">req_hdrs<pos:position pos:line="66" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="49">name<pos:position pos:line="66" pos:column="53"/></name></expr></argument>)<pos:position pos:line="66" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="55"/></expr_stmt>
                <if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name pos:line="67" pos:column="21">h1<pos:position pos:line="67" pos:column="23"/></name> <operator pos:line="67" pos:column="24">==<pos:position pos:line="67" pos:column="26"/></operator> <name pos:line="67" pos:column="27">h2<pos:position pos:line="67" pos:column="29"/></name></expr>)<pos:position pos:line="67" pos:column="30"/></condition><then pos:line="67" pos:column="30"> <block pos:line="67" pos:column="31">{
                    <comment type="block" pos:line="68" pos:column="21">/* both headers NULL, so a match - do nothing */</comment>
                }<pos:position pos:line="69" pos:column="18"/></block></then>
                <elseif pos:line="70" pos:column="17">else <if pos:line="70" pos:column="22">if <condition pos:line="70" pos:column="25">(<expr><name pos:line="70" pos:column="26">h1<pos:position pos:line="70" pos:column="28"/></name> <operator pos:line="70" pos:column="29">&amp;&amp;<pos:position pos:line="70" pos:column="39"/></operator> <name pos:line="70" pos:column="32">h2<pos:position pos:line="70" pos:column="34"/></name> <operator pos:line="70" pos:column="35">&amp;&amp;<pos:position pos:line="70" pos:column="45"/></operator> <operator pos:line="70" pos:column="38">!<pos:position pos:line="70" pos:column="39"/></operator><call><name pos:line="70" pos:column="39">strcmp<pos:position pos:line="70" pos:column="45"/></name><argument_list pos:line="70" pos:column="45">(<argument><expr><name pos:line="70" pos:column="46">h1<pos:position pos:line="70" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="50">h2<pos:position pos:line="70" pos:column="52"/></name></expr></argument>)<pos:position pos:line="70" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="54"/></condition><then pos:line="70" pos:column="54"> <block pos:line="70" pos:column="55">{
                    <comment type="block" pos:line="71" pos:column="21">/* both headers exist and are equal - do nothing */</comment>
                }<pos:position pos:line="72" pos:column="18"/></block></then></if></elseif>
                <else pos:line="73" pos:column="17">else <block pos:line="73" pos:column="22">{
                    <comment type="block" pos:line="74" pos:column="21">/* headers do not match, so Vary failed */</comment>
                    <expr_stmt><expr><call><name pos:line="75" pos:column="21">ap_log_error<pos:position pos:line="75" pos:column="33"/></name><argument_list pos:line="75" pos:column="33">(<argument><expr><name pos:line="75" pos:column="34">APLOG_MARK<pos:position pos:line="75" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="46">APLOG_DEBUG<pos:position pos:line="75" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="59">APR_SUCCESS<pos:position pos:line="75" pos:column="70"/></name></expr></argument>,
                                <argument><expr><name><name pos:line="76" pos:column="33">r<pos:position pos:line="76" pos:column="34"/></name><operator pos:line="76" pos:column="34">-&gt;<pos:position pos:line="76" pos:column="39"/></operator><name pos:line="76" pos:column="36">server<pos:position pos:line="76" pos:column="42"/></name></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="77" pos:column="33">"cache_select_url(): Vary header mismatch."<pos:position pos:line="77" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="78"/></expr_stmt>
                    <return pos:line="78" pos:column="21">return <expr><name pos:line="78" pos:column="28">DECLINED<pos:position pos:line="78" pos:column="36"/></name></expr>;<pos:position pos:line="78" pos:column="37"/></return>
                }<pos:position pos:line="79" pos:column="18"/></block></else></if>
            }<pos:position pos:line="80" pos:column="14"/></block></while>

            <expr_stmt><expr><name><name pos:line="82" pos:column="13">cache<pos:position pos:line="82" pos:column="18"/></name><operator pos:line="82" pos:column="18">-&gt;<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="20">provider<pos:position pos:line="82" pos:column="28"/></name></name> <operator pos:line="82" pos:column="29">=<pos:position pos:line="82" pos:column="30"/></operator> <name><name pos:line="82" pos:column="31">list<pos:position pos:line="82" pos:column="35"/></name><operator pos:line="82" pos:column="35">-&gt;<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="37">provider<pos:position pos:line="82" pos:column="45"/></name></name></expr>;<pos:position pos:line="82" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="83" pos:column="13">cache<pos:position pos:line="83" pos:column="18"/></name><operator pos:line="83" pos:column="18">-&gt;<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="20">provider_name<pos:position pos:line="83" pos:column="33"/></name></name> <operator pos:line="83" pos:column="34">=<pos:position pos:line="83" pos:column="35"/></operator> <name><name pos:line="83" pos:column="36">list<pos:position pos:line="83" pos:column="40"/></name><operator pos:line="83" pos:column="40">-&gt;<pos:position pos:line="83" pos:column="45"/></operator><name pos:line="83" pos:column="42">provider_name<pos:position pos:line="83" pos:column="55"/></name></name></expr>;<pos:position pos:line="83" pos:column="56"/></expr_stmt>

            <comment type="block" pos:line="85" pos:column="13">/* Is our cached response fresh enough? */</comment>
            <expr_stmt><expr><name pos:line="86" pos:column="13">fresh<pos:position pos:line="86" pos:column="18"/></name> <operator pos:line="86" pos:column="19">=<pos:position pos:line="86" pos:column="20"/></operator> <call><name pos:line="86" pos:column="21">ap_cache_check_freshness<pos:position pos:line="86" pos:column="45"/></name><argument_list pos:line="86" pos:column="45">(<argument><expr><name pos:line="86" pos:column="46">h<pos:position pos:line="86" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="49">r<pos:position pos:line="86" pos:column="50"/></name></expr></argument>)<pos:position pos:line="86" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="52"/></expr_stmt>
            <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><operator pos:line="87" pos:column="17">!<pos:position pos:line="87" pos:column="18"/></operator><name pos:line="87" pos:column="18">fresh<pos:position pos:line="87" pos:column="23"/></name></expr>)<pos:position pos:line="87" pos:column="24"/></condition><then pos:line="87" pos:column="24"> <block pos:line="87" pos:column="25">{
                <decl_stmt><decl><type><specifier pos:line="88" pos:column="17">const<pos:position pos:line="88" pos:column="22"/></specifier> <name pos:line="88" pos:column="23">char<pos:position pos:line="88" pos:column="27"/></name> <modifier pos:line="88" pos:column="28">*<pos:position pos:line="88" pos:column="29"/></modifier></type><name pos:line="88" pos:column="29">etag<pos:position pos:line="88" pos:column="33"/></name></decl>, <modifier pos:line="88" pos:column="35">*<pos:position pos:line="88" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="88" pos:column="36">lastmod<pos:position pos:line="88" pos:column="43"/></name></decl>;<pos:position pos:line="88" pos:column="44"/></decl_stmt>

                <expr_stmt><expr><call><name pos:line="90" pos:column="17">ap_log_error<pos:position pos:line="90" pos:column="29"/></name><argument_list pos:line="90" pos:column="29">(<argument><expr><name pos:line="90" pos:column="30">APLOG_MARK<pos:position pos:line="90" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="42">APLOG_DEBUG<pos:position pos:line="90" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="55">APR_SUCCESS<pos:position pos:line="90" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="68">r<pos:position pos:line="90" pos:column="69"/></name><operator pos:line="90" pos:column="69">-&gt;<pos:position pos:line="90" pos:column="74"/></operator><name pos:line="90" pos:column="71">server<pos:position pos:line="90" pos:column="77"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="91" pos:column="19">"Cached response for %s isn't fresh.  Adding/replacing "<pos:position pos:line="91" pos:column="75"/></literal>
                  <literal type="string" pos:line="92" pos:column="19">"conditional request headers."<pos:position pos:line="92" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="51">r<pos:position pos:line="92" pos:column="52"/></name><operator pos:line="92" pos:column="52">-&gt;<pos:position pos:line="92" pos:column="57"/></operator><name pos:line="92" pos:column="54">uri<pos:position pos:line="92" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="59"/></expr_stmt>

                <comment type="block" pos:line="94" pos:column="17">/* Make response into a conditional */</comment>
                <expr_stmt><expr><name><name pos:line="95" pos:column="17">cache<pos:position pos:line="95" pos:column="22"/></name><operator pos:line="95" pos:column="22">-&gt;<pos:position pos:line="95" pos:column="27"/></operator><name pos:line="95" pos:column="24">stale_headers<pos:position pos:line="95" pos:column="37"/></name></name> <operator pos:line="95" pos:column="38">=<pos:position pos:line="95" pos:column="39"/></operator> <call><name pos:line="95" pos:column="40">apr_table_copy<pos:position pos:line="95" pos:column="54"/></name><argument_list pos:line="95" pos:column="54">(<argument><expr><name><name pos:line="95" pos:column="55">r<pos:position pos:line="95" pos:column="56"/></name><operator pos:line="95" pos:column="56">-&gt;<pos:position pos:line="95" pos:column="61"/></operator><name pos:line="95" pos:column="58">pool<pos:position pos:line="95" pos:column="62"/></name></name></expr></argument>,
                                                      <argument><expr><name><name pos:line="96" pos:column="55">r<pos:position pos:line="96" pos:column="56"/></name><operator pos:line="96" pos:column="56">-&gt;<pos:position pos:line="96" pos:column="61"/></operator><name pos:line="96" pos:column="58">headers_in<pos:position pos:line="96" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="70"/></expr_stmt>

                <comment type="block" pos:line="98" pos:column="17">/* We can only revalidate with our own conditionals: remove the
                 * conditions from the original request.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="101" pos:column="17">apr_table_unset<pos:position pos:line="101" pos:column="32"/></name><argument_list pos:line="101" pos:column="32">(<argument><expr><name><name pos:line="101" pos:column="33">r<pos:position pos:line="101" pos:column="34"/></name><operator pos:line="101" pos:column="34">-&gt;<pos:position pos:line="101" pos:column="39"/></operator><name pos:line="101" pos:column="36">headers_in<pos:position pos:line="101" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="48">"If-Match"<pos:position pos:line="101" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="102" pos:column="17">apr_table_unset<pos:position pos:line="102" pos:column="32"/></name><argument_list pos:line="102" pos:column="32">(<argument><expr><name><name pos:line="102" pos:column="33">r<pos:position pos:line="102" pos:column="34"/></name><operator pos:line="102" pos:column="34">-&gt;<pos:position pos:line="102" pos:column="39"/></operator><name pos:line="102" pos:column="36">headers_in<pos:position pos:line="102" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="48">"If-Modified-Since"<pos:position pos:line="102" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="103" pos:column="17">apr_table_unset<pos:position pos:line="103" pos:column="32"/></name><argument_list pos:line="103" pos:column="32">(<argument><expr><name><name pos:line="103" pos:column="33">r<pos:position pos:line="103" pos:column="34"/></name><operator pos:line="103" pos:column="34">-&gt;<pos:position pos:line="103" pos:column="39"/></operator><name pos:line="103" pos:column="36">headers_in<pos:position pos:line="103" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="48">"If-None-Match"<pos:position pos:line="103" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="65"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="104" pos:column="17">apr_table_unset<pos:position pos:line="104" pos:column="32"/></name><argument_list pos:line="104" pos:column="32">(<argument><expr><name><name pos:line="104" pos:column="33">r<pos:position pos:line="104" pos:column="34"/></name><operator pos:line="104" pos:column="34">-&gt;<pos:position pos:line="104" pos:column="39"/></operator><name pos:line="104" pos:column="36">headers_in<pos:position pos:line="104" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="48">"If-Range"<pos:position pos:line="104" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="105" pos:column="17">apr_table_unset<pos:position pos:line="105" pos:column="32"/></name><argument_list pos:line="105" pos:column="32">(<argument><expr><name><name pos:line="105" pos:column="33">r<pos:position pos:line="105" pos:column="34"/></name><operator pos:line="105" pos:column="34">-&gt;<pos:position pos:line="105" pos:column="39"/></operator><name pos:line="105" pos:column="36">headers_in<pos:position pos:line="105" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="48">"If-Unmodified-Since"<pos:position pos:line="105" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="71"/></expr_stmt>

                <comment type="block" pos:line="107" pos:column="17">/*
                 * Do not do Range requests with our own conditionals: If
                 * we get 304 the Range does not matter and otherwise the
                 * entity changed and we want to have the complete entity
                 */</comment>
                <expr_stmt><expr><call><name pos:line="112" pos:column="17">apr_table_unset<pos:position pos:line="112" pos:column="32"/></name><argument_list pos:line="112" pos:column="32">(<argument><expr><name><name pos:line="112" pos:column="33">r<pos:position pos:line="112" pos:column="34"/></name><operator pos:line="112" pos:column="34">-&gt;<pos:position pos:line="112" pos:column="39"/></operator><name pos:line="112" pos:column="36">headers_in<pos:position pos:line="112" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="48">"Range"<pos:position pos:line="112" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="57"/></expr_stmt>

                <expr_stmt><expr><name pos:line="114" pos:column="17">etag<pos:position pos:line="114" pos:column="21"/></name> <operator pos:line="114" pos:column="22">=<pos:position pos:line="114" pos:column="23"/></operator> <call><name pos:line="114" pos:column="24">apr_table_get<pos:position pos:line="114" pos:column="37"/></name><argument_list pos:line="114" pos:column="37">(<argument><expr><name><name pos:line="114" pos:column="38">h<pos:position pos:line="114" pos:column="39"/></name><operator pos:line="114" pos:column="39">-&gt;<pos:position pos:line="114" pos:column="44"/></operator><name pos:line="114" pos:column="41">resp_hdrs<pos:position pos:line="114" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="52">"ETag"<pos:position pos:line="114" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><name pos:line="115" pos:column="17">lastmod<pos:position pos:line="115" pos:column="24"/></name> <operator pos:line="115" pos:column="25">=<pos:position pos:line="115" pos:column="26"/></operator> <call><name pos:line="115" pos:column="27">apr_table_get<pos:position pos:line="115" pos:column="40"/></name><argument_list pos:line="115" pos:column="40">(<argument><expr><name><name pos:line="115" pos:column="41">h<pos:position pos:line="115" pos:column="42"/></name><operator pos:line="115" pos:column="42">-&gt;<pos:position pos:line="115" pos:column="47"/></operator><name pos:line="115" pos:column="44">resp_hdrs<pos:position pos:line="115" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="55">"Last-Modified"<pos:position pos:line="115" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="72"/></expr_stmt>

                <if pos:line="117" pos:column="17">if <condition pos:line="117" pos:column="20">(<expr><name pos:line="117" pos:column="21">etag<pos:position pos:line="117" pos:column="25"/></name> <operator pos:line="117" pos:column="26">||<pos:position pos:line="117" pos:column="28"/></operator> <name pos:line="117" pos:column="29">lastmod<pos:position pos:line="117" pos:column="36"/></name></expr>)<pos:position pos:line="117" pos:column="37"/></condition><then pos:line="117" pos:column="37"> <block pos:line="117" pos:column="38">{
                    <comment type="block" pos:line="118" pos:column="21">/* If we have a cached etag and/or Last-Modified add in
                     * our own conditionals.
                     */</comment>

                    <if pos:line="122" pos:column="21">if <condition pos:line="122" pos:column="24">(<expr><name pos:line="122" pos:column="25">etag<pos:position pos:line="122" pos:column="29"/></name></expr>)<pos:position pos:line="122" pos:column="30"/></condition><then pos:line="122" pos:column="30"> <block pos:line="122" pos:column="31">{
                        <expr_stmt><expr><call><name pos:line="123" pos:column="25">apr_table_set<pos:position pos:line="123" pos:column="38"/></name><argument_list pos:line="123" pos:column="38">(<argument><expr><name><name pos:line="123" pos:column="39">r<pos:position pos:line="123" pos:column="40"/></name><operator pos:line="123" pos:column="40">-&gt;<pos:position pos:line="123" pos:column="45"/></operator><name pos:line="123" pos:column="42">headers_in<pos:position pos:line="123" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="54">"If-None-Match"<pos:position pos:line="123" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="123" pos:column="71">etag<pos:position pos:line="123" pos:column="75"/></name></expr></argument>)<pos:position pos:line="123" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="77"/></expr_stmt>
                    }<pos:position pos:line="124" pos:column="22"/></block></then></if>

                    <if pos:line="126" pos:column="21">if <condition pos:line="126" pos:column="24">(<expr><name pos:line="126" pos:column="25">lastmod<pos:position pos:line="126" pos:column="32"/></name></expr>)<pos:position pos:line="126" pos:column="33"/></condition><then pos:line="126" pos:column="33"> <block pos:line="126" pos:column="34">{
                        <expr_stmt><expr><call><name pos:line="127" pos:column="25">apr_table_set<pos:position pos:line="127" pos:column="38"/></name><argument_list pos:line="127" pos:column="38">(<argument><expr><name><name pos:line="127" pos:column="39">r<pos:position pos:line="127" pos:column="40"/></name><operator pos:line="127" pos:column="40">-&gt;<pos:position pos:line="127" pos:column="45"/></operator><name pos:line="127" pos:column="42">headers_in<pos:position pos:line="127" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="54">"If-Modified-Since"<pos:position pos:line="127" pos:column="73"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="128" pos:column="39">lastmod<pos:position pos:line="128" pos:column="46"/></name></expr></argument>)<pos:position pos:line="128" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="48"/></expr_stmt>
                    }<pos:position pos:line="129" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name><name pos:line="130" pos:column="21">cache<pos:position pos:line="130" pos:column="26"/></name><operator pos:line="130" pos:column="26">-&gt;<pos:position pos:line="130" pos:column="31"/></operator><name pos:line="130" pos:column="28">stale_handle<pos:position pos:line="130" pos:column="40"/></name></name> <operator pos:line="130" pos:column="41">=<pos:position pos:line="130" pos:column="42"/></operator> <name pos:line="130" pos:column="43">h<pos:position pos:line="130" pos:column="44"/></name></expr>;<pos:position pos:line="130" pos:column="45"/></expr_stmt>
                }<pos:position pos:line="131" pos:column="18"/></block></then>
                <else pos:line="132" pos:column="17">else <block pos:line="132" pos:column="22">{
                    <decl_stmt><decl><type><name pos:line="133" pos:column="21">int<pos:position pos:line="133" pos:column="24"/></name></type> <name pos:line="133" pos:column="25">irv<pos:position pos:line="133" pos:column="28"/></name></decl>;<pos:position pos:line="133" pos:column="29"/></decl_stmt>

                    <comment type="block" pos:line="135" pos:column="21">/*
                     * The copy isn't fresh enough, but we cannot revalidate.
                     * So it is the same case as if there had not been a cached
                     * entry at all. Thus delete the entry from cache.
                     */</comment>
                    <expr_stmt><expr><name pos:line="140" pos:column="21">irv<pos:position pos:line="140" pos:column="24"/></name> <operator pos:line="140" pos:column="25">=<pos:position pos:line="140" pos:column="26"/></operator> <call><name><name pos:line="140" pos:column="27">cache<pos:position pos:line="140" pos:column="32"/></name><operator pos:line="140" pos:column="32">-&gt;<pos:position pos:line="140" pos:column="37"/></operator><name pos:line="140" pos:column="34">provider<pos:position pos:line="140" pos:column="42"/></name><operator pos:line="140" pos:column="42">-&gt;<pos:position pos:line="140" pos:column="47"/></operator><name pos:line="140" pos:column="44">remove_url<pos:position pos:line="140" pos:column="54"/></name></name><argument_list pos:line="140" pos:column="54">(<argument><expr><name pos:line="140" pos:column="55">h<pos:position pos:line="140" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="58">r<pos:position pos:line="140" pos:column="59"/></name><operator pos:line="140" pos:column="59">-&gt;<pos:position pos:line="140" pos:column="64"/></operator><name pos:line="140" pos:column="61">pool<pos:position pos:line="140" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="67"/></expr_stmt>
                    <if pos:line="141" pos:column="21">if <condition pos:line="141" pos:column="24">(<expr><name pos:line="141" pos:column="25">irv<pos:position pos:line="141" pos:column="28"/></name> <operator pos:line="141" pos:column="29">!=<pos:position pos:line="141" pos:column="31"/></operator> <name pos:line="141" pos:column="32">OK<pos:position pos:line="141" pos:column="34"/></name></expr>)<pos:position pos:line="141" pos:column="35"/></condition><then pos:line="141" pos:column="35"> <block pos:line="141" pos:column="36">{
                        <expr_stmt><expr><call><name pos:line="142" pos:column="25">ap_log_error<pos:position pos:line="142" pos:column="37"/></name><argument_list pos:line="142" pos:column="37">(<argument><expr><name pos:line="142" pos:column="38">APLOG_MARK<pos:position pos:line="142" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="50">APLOG_DEBUG<pos:position pos:line="142" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="63">irv<pos:position pos:line="142" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="68">r<pos:position pos:line="142" pos:column="69"/></name><operator pos:line="142" pos:column="69">-&gt;<pos:position pos:line="142" pos:column="74"/></operator><name pos:line="142" pos:column="71">server<pos:position pos:line="142" pos:column="77"/></name></name></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="143" pos:column="38">"cache: attempt to remove url from cache unsuccessful."<pos:position pos:line="143" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="95"/></expr_stmt>
                    }<pos:position pos:line="144" pos:column="22"/></block></then></if>
                }<pos:position pos:line="145" pos:column="18"/></block></else></if>

                <return pos:line="147" pos:column="17">return <expr><name pos:line="147" pos:column="24">DECLINED<pos:position pos:line="147" pos:column="32"/></name></expr>;<pos:position pos:line="147" pos:column="33"/></return>
            }<pos:position pos:line="148" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="150" pos:column="13">/* Okay, this response looks okay.  Merge in our stuff and go. */</comment>
            <expr_stmt><expr><call><name pos:line="151" pos:column="13">ap_cache_accept_headers<pos:position pos:line="151" pos:column="36"/></name><argument_list pos:line="151" pos:column="36">(<argument><expr><name pos:line="151" pos:column="37">h<pos:position pos:line="151" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="40">r<pos:position pos:line="151" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="151" pos:column="43">0<pos:position pos:line="151" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="46"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="153" pos:column="13">cache<pos:position pos:line="153" pos:column="18"/></name><operator pos:line="153" pos:column="18">-&gt;<pos:position pos:line="153" pos:column="23"/></operator><name pos:line="153" pos:column="20">handle<pos:position pos:line="153" pos:column="26"/></name></name> <operator pos:line="153" pos:column="27">=<pos:position pos:line="153" pos:column="28"/></operator> <name pos:line="153" pos:column="29">h<pos:position pos:line="153" pos:column="30"/></name></expr>;<pos:position pos:line="153" pos:column="31"/></expr_stmt>
            <return pos:line="154" pos:column="13">return <expr><name pos:line="154" pos:column="20">OK<pos:position pos:line="154" pos:column="22"/></name></expr>;<pos:position pos:line="154" pos:column="23"/></return>
        }<pos:position pos:line="155" pos:column="10"/></block>
        <case pos:line="156" pos:column="9">case <expr><name pos:line="156" pos:column="14">DECLINED<pos:position pos:line="156" pos:column="22"/></name></expr>:<pos:position pos:line="156" pos:column="23"/></case> <block pos:line="156" pos:column="24">{
            <comment type="block" pos:line="157" pos:column="13">/* try again with next cache type */</comment>
            <expr_stmt><expr><name pos:line="158" pos:column="13">list<pos:position pos:line="158" pos:column="17"/></name> <operator pos:line="158" pos:column="18">=<pos:position pos:line="158" pos:column="19"/></operator> <name><name pos:line="158" pos:column="20">list<pos:position pos:line="158" pos:column="24"/></name><operator pos:line="158" pos:column="24">-&gt;<pos:position pos:line="158" pos:column="29"/></operator><name pos:line="158" pos:column="26">next<pos:position pos:line="158" pos:column="30"/></name></name></expr>;<pos:position pos:line="158" pos:column="31"/></expr_stmt>
            <continue pos:line="159" pos:column="13">continue;<pos:position pos:line="159" pos:column="22"/></continue>
        }<pos:position pos:line="160" pos:column="10"/></block>
        <default pos:line="161" pos:column="9">default:<pos:position pos:line="161" pos:column="17"/></default> <block pos:line="161" pos:column="18">{
            <comment type="block" pos:line="162" pos:column="13">/* oo-er! an error */</comment>
            <return pos:line="163" pos:column="13">return <expr><name pos:line="163" pos:column="20">rv<pos:position pos:line="163" pos:column="22"/></name></expr>;<pos:position pos:line="163" pos:column="23"/></return>
        }<pos:position pos:line="164" pos:column="10"/></block>
        }<pos:position pos:line="165" pos:column="10"/></block></switch>
    }<pos:position pos:line="166" pos:column="6"/></block></while>
    <return pos:line="167" pos:column="5">return <expr><name pos:line="167" pos:column="12">DECLINED<pos:position pos:line="167" pos:column="20"/></name></expr>;<pos:position pos:line="167" pos:column="21"/></return>
}<pos:position pos:line="168" pos:column="2"/></block></function></unit>

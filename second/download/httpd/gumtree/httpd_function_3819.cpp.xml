<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3819.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">dead_yet<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">pid_t<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">pid<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">apr_interval_time_t<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">max_wait<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_interval_time_t<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">interval<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><literal type="number" pos:line="3" pos:column="36">10000<pos:position pos:line="3" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt> <comment type="block" pos:line="3" pos:column="43">/* 10 ms */</comment>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_interval_time_t<pos:position pos:line="4" pos:column="24"/></name></type> <name pos:line="4" pos:column="25">total<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><literal type="number" pos:line="4" pos:column="33">0<pos:position pos:line="4" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

    <do pos:line="6" pos:column="5">do <block pos:line="6" pos:column="8">{
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">_AIX<pos:position pos:line="7" pos:column="12"/></name></cpp:ifdef>
        <comment type="block" pos:line="8" pos:column="9">/* On AIX, for processes like mod_cgid's script children where
         * SIGCHLD is ignored, kill(pid,0) returns success for up to
         * one second after the script child exits, based on when a
         * daemon runs to clean up unnecessary process table entries.
         * getpgid() can report the proper info (-1/ESRCH) immediately.
         */</comment>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">getpgid<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">pid<pos:position pos:line="14" pos:column="24"/></name></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></call> <operator pos:line="14" pos:column="26">&lt;<pos:position pos:line="14" pos:column="30"/></operator> <literal type="number" pos:line="14" pos:column="28">0<pos:position pos:line="14" pos:column="29"/></literal></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30"> <block pos:line="14" pos:column="31">{
<cpp:else pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">else<pos:position pos:line="15" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">kill<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">pid<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call> <operator pos:line="16" pos:column="26">&lt;<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="28">0<pos:position pos:line="16" pos:column="29"/></literal></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30"> <block pos:line="16" pos:column="31">{
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">APR_SUCCESS<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">apr_sleep<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">interval<pos:position pos:line="20" pos:column="27"/></name></expr></argument>)<pos:position pos:line="20" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">total<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">total<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">+<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">interval<pos:position pos:line="21" pos:column="33"/></name></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">interval<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">&lt;<pos:position pos:line="22" pos:column="26"/></operator> <literal type="number" pos:line="22" pos:column="24">500000<pos:position pos:line="22" pos:column="30"/></literal></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31"> <block pos:line="22" pos:column="32">{
            <expr_stmt><expr><name pos:line="23" pos:column="13">interval<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">*=<pos:position pos:line="23" pos:column="24"/></operator> <literal type="number" pos:line="23" pos:column="25">2<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if> <while pos:line="25" pos:column="7">while <condition pos:line="25" pos:column="13">(<expr><name pos:line="25" pos:column="14">total<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">&lt;<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="22">max_wait<pos:position pos:line="25" pos:column="30"/></name></expr>)<pos:position pos:line="25" pos:column="31"/></condition><block type="pseudo"><empty_stmt pos:line="25" pos:column="31">;<pos:position pos:line="25" pos:column="32"/></empty_stmt></block></while>
    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">APR_EGENERAL<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></return>
}<pos:position pos:line="27" pos:column="2"/></block>

static apr_status_t cleanup_nonchild_process(request_rec *r<operator pos:line="29" pos:column="60">,<pos:position pos:line="29" pos:column="61"/></operator> pid_t pid<pos:position pos:line="29" pos:column="71"/></do>)<pos:position pos:line="29" pos:column="72"/></block>
<block pos:line="30" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">kill<pos:position pos:line="31" pos:column="9"/></name><argument_list pos:line="31" pos:column="9">(<argument><expr><name pos:line="31" pos:column="10">pid<pos:position pos:line="31" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="15">SIGTERM<pos:position pos:line="31" pos:column="22"/></name></expr></argument>)<pos:position pos:line="31" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt> <comment type="block" pos:line="31" pos:column="25">/* in case it isn't dead yet */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">dead_yet<pos:position pos:line="32" pos:column="17"/></name><argument_list pos:line="32" pos:column="17">(<argument><expr><name pos:line="32" pos:column="18">pid<pos:position pos:line="32" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="23">apr_time_from_sec<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><literal type="number" pos:line="32" pos:column="41">3<pos:position pos:line="32" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call> <operator pos:line="32" pos:column="45">==<pos:position pos:line="32" pos:column="47"/></operator> <name pos:line="32" pos:column="48">APR_SUCCESS<pos:position pos:line="32" pos:column="59"/></name></expr>)<pos:position pos:line="32" pos:column="60"/></condition><then pos:line="32" pos:column="60"> <block pos:line="32" pos:column="61">{
        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">APR_SUCCESS<pos:position pos:line="33" pos:column="27"/></name></expr>;<pos:position pos:line="33" pos:column="28"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">ap_log_rerror<pos:position pos:line="35" pos:column="18"/></name><argument_list pos:line="35" pos:column="18">(<argument><expr><name pos:line="35" pos:column="19">APLOG_MARK<pos:position pos:line="35" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="31">APLOG_ERR<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="42">0<pos:position pos:line="35" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="45">r<pos:position pos:line="35" pos:column="46"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="36" pos:column="19">"CGI process %"<pos:position pos:line="36" pos:column="34"/></literal> <name pos:line="36" pos:column="35">APR_PID_T_FMT<pos:position pos:line="36" pos:column="48"/></name> <literal type="string" pos:line="36" pos:column="49">" didn't exit, sending SIGKILL"<pos:position pos:line="36" pos:column="80"/></literal></expr></argument>,
                  <argument><expr><name pos:line="37" pos:column="19">pid<pos:position pos:line="37" pos:column="22"/></name></expr></argument>)<pos:position pos:line="37" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">kill<pos:position pos:line="38" pos:column="9"/></name><argument_list pos:line="38" pos:column="9">(<argument><expr><name pos:line="38" pos:column="10">pid<pos:position pos:line="38" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="15">SIGKILL<pos:position pos:line="38" pos:column="22"/></name></expr></argument>)<pos:position pos:line="38" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><call><name pos:line="39" pos:column="9">dead_yet<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name pos:line="39" pos:column="18">pid<pos:position pos:line="39" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="23">apr_time_from_sec<pos:position pos:line="39" pos:column="40"/></name><argument_list pos:line="39" pos:column="40">(<argument><expr><literal type="number" pos:line="39" pos:column="41">3<pos:position pos:line="39" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call> <operator pos:line="39" pos:column="45">==<pos:position pos:line="39" pos:column="47"/></operator> <name pos:line="39" pos:column="48">APR_SUCCESS<pos:position pos:line="39" pos:column="59"/></name></expr>)<pos:position pos:line="39" pos:column="60"/></condition><then pos:line="39" pos:column="60"> <block pos:line="39" pos:column="61">{
        <return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">APR_SUCCESS<pos:position pos:line="40" pos:column="27"/></name></expr>;<pos:position pos:line="40" pos:column="28"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">ap_log_rerror<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name pos:line="42" pos:column="19">APLOG_MARK<pos:position pos:line="42" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="31">APLOG_ERR<pos:position pos:line="42" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="42">0<pos:position pos:line="42" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="45">r<pos:position pos:line="42" pos:column="46"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="43" pos:column="19">"CGI process %"<pos:position pos:line="43" pos:column="34"/></literal> <name pos:line="43" pos:column="35">APR_PID_T_FMT<pos:position pos:line="43" pos:column="48"/></name> <literal type="string" pos:line="43" pos:column="49">" didn't exit, sending SIGKILL again"<pos:position pos:line="43" pos:column="86"/></literal></expr></argument>,
                  <argument><expr><name pos:line="44" pos:column="19">pid<pos:position pos:line="44" pos:column="22"/></name></expr></argument>)<pos:position pos:line="44" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">kill<pos:position pos:line="45" pos:column="9"/></name><argument_list pos:line="45" pos:column="9">(<argument><expr><name pos:line="45" pos:column="10">pid<pos:position pos:line="45" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="15">SIGKILL<pos:position pos:line="45" pos:column="22"/></name></expr></argument>)<pos:position pos:line="45" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>

    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">APR_EGENERAL<pos:position pos:line="47" pos:column="24"/></name></expr>;<pos:position pos:line="47" pos:column="25"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

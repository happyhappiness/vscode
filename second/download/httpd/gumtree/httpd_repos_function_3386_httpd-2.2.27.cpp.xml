<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3386_httpd-2.2.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">file_bucket_read<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">apr_bucket<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">e<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier><modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">str<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">apr_size_t<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">len<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">apr_read_type_e<pos:position pos:line="2" pos:column="70"/></name></type> <name pos:line="2" pos:column="71">block<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_bucket_file<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">a<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name><name pos:line="4" pos:column="26">e<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">data<pos:position pos:line="4" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_file_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">f<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">a<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">fd<pos:position pos:line="5" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">b<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">buf<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">filelength<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name><name pos:line="9" pos:column="29">e<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">length<pos:position pos:line="9" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>  <comment type="block" pos:line="9" pos:column="41">/* bytes remaining in file past offset */</comment>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_off_t<pos:position pos:line="10" pos:column="14"/></name></type> <name pos:line="10" pos:column="15">fileoffset<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><name><name pos:line="10" pos:column="28">e<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">start<pos:position pos:line="10" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">APR_HAS_THREADS<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&amp;&amp;<pos:position pos:line="11" pos:column="31"/></operator> <operator pos:line="11" pos:column="24">!<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">APR_HAS_XTHREAD_FILES<pos:position pos:line="11" pos:column="46"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_int32_t<pos:position pos:line="12" pos:column="16"/></name></type> <name pos:line="12" pos:column="17">flags<pos:position pos:line="12" pos:column="22"/></name></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">APR_HAS_MMAP<pos:position pos:line="15" pos:column="17"/></name></expr></cpp:if>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">file_make_mmap<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">e<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="27">filelength<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="39">fileoffset<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="51">a<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">-&gt;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="54">readpool<pos:position pos:line="16" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="64"/></condition><then pos:line="16" pos:column="64"> <block pos:line="16" pos:column="65">{
        <return pos:line="17" pos:column="9">return <expr><call><name pos:line="17" pos:column="16">apr_bucket_read<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">e<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">str<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">len<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="45">block<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">if<pos:position pos:line="21" pos:column="4"/></cpp:directive> <expr><name pos:line="21" pos:column="5">APR_HAS_THREADS<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">&amp;&amp;<pos:position pos:line="21" pos:column="31"/></operator> <operator pos:line="21" pos:column="24">!<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">APR_HAS_XTHREAD_FILES<pos:position pos:line="21" pos:column="46"/></name></expr></cpp:if>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">flags<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">apr_file_flags_get<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><name pos:line="22" pos:column="37">f<pos:position pos:line="22" pos:column="38"/></name></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call><operator pos:line="22" pos:column="39">)<pos:position pos:line="22" pos:column="40"/></operator> <operator pos:line="22" pos:column="41">&amp;<pos:position pos:line="22" pos:column="46"/></operator> <name pos:line="22" pos:column="43">APR_FOPEN_XTHREAD<pos:position pos:line="22" pos:column="60"/></name></expr>)<pos:position pos:line="22" pos:column="61"/></condition><then pos:line="22" pos:column="61"> <block pos:line="22" pos:column="62">{
        <comment type="block" pos:line="23" pos:column="9">/* this file descriptor is shared across multiple threads and
         * this OS doesn't support that natively, so as a workaround
         * we must reopen the file into a-&gt;readpool */</comment>
        <decl_stmt><decl><type><specifier pos:line="26" pos:column="9">const<pos:position pos:line="26" pos:column="14"/></specifier> <name pos:line="26" pos:column="15">char<pos:position pos:line="26" pos:column="19"/></name> <modifier pos:line="26" pos:column="20">*<pos:position pos:line="26" pos:column="21"/></modifier></type><name pos:line="26" pos:column="21">fname<pos:position pos:line="26" pos:column="26"/></name></decl>;<pos:position pos:line="26" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">apr_file_name_get<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><operator pos:line="27" pos:column="27">&amp;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="28">fname<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="35">f<pos:position pos:line="27" pos:column="36"/></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>

        <expr_stmt><expr><name pos:line="29" pos:column="9">rv<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">apr_file_open<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><operator pos:line="29" pos:column="28">&amp;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="29">f<pos:position pos:line="29" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="32">fname<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="39">(<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="40">flags<pos:position pos:line="29" pos:column="45"/></name> <operator pos:line="29" pos:column="46">&amp;<pos:position pos:line="29" pos:column="51"/></operator> <operator pos:line="29" pos:column="48">~<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="49">APR_FOPEN_XTHREAD<pos:position pos:line="29" pos:column="66"/></name><operator pos:line="29" pos:column="66">)<pos:position pos:line="29" pos:column="67"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="69">0<pos:position pos:line="29" pos:column="70"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="72">a<pos:position pos:line="29" pos:column="73"/></name><operator pos:line="29" pos:column="73">-&gt;<pos:position pos:line="29" pos:column="78"/></operator><name pos:line="29" pos:column="75">readpool<pos:position pos:line="29" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="85"/></expr_stmt>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">rv<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">!=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">APR_SUCCESS<pos:position pos:line="30" pos:column="30"/></name></expr>)<pos:position pos:line="30" pos:column="31"/></condition><then pos:line="30" pos:column="31">
            <block type="pseudo"><return pos:line="31" pos:column="13">return <expr><name pos:line="31" pos:column="20">rv<pos:position pos:line="31" pos:column="22"/></name></expr>;<pos:position pos:line="31" pos:column="23"/></return></block></then></if>

        <expr_stmt><expr><name><name pos:line="33" pos:column="9">a<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">-&gt;<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="12">fd<pos:position pos:line="33" pos:column="14"/></name></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <name pos:line="33" pos:column="17">f<pos:position pos:line="33" pos:column="18"/></name></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><operator pos:line="37" pos:column="5">*<pos:position pos:line="37" pos:column="6"/></operator><name pos:line="37" pos:column="6">len<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <ternary><condition><expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="13">filelength<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">&gt;<pos:position pos:line="37" pos:column="28"/></operator> <name pos:line="37" pos:column="26">APR_BUCKET_BUFF_SIZE<pos:position pos:line="37" pos:column="46"/></name><operator pos:line="37" pos:column="46">)<pos:position pos:line="37" pos:column="47"/></operator></expr>
               ?<pos:position pos:line="38" pos:column="17"/></condition><then pos:line="38" pos:column="17"> <expr><name pos:line="38" pos:column="18">APR_BUCKET_BUFF_SIZE<pos:position pos:line="38" pos:column="38"/></name></expr>
               <pos:position pos:line="39" pos:column="16"/></then><else pos:line="39" pos:column="16">: <expr><name pos:line="39" pos:column="18">filelength<pos:position pos:line="39" pos:column="28"/></name></expr></else></ternary></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="40" pos:column="5">*<pos:position pos:line="40" pos:column="6"/></operator><name pos:line="40" pos:column="6">str<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <name pos:line="40" pos:column="12">NULL<pos:position pos:line="40" pos:column="16"/></name></expr>;<pos:position pos:line="40" pos:column="17"/></expr_stmt>  <comment type="block" pos:line="40" pos:column="19">/* in case we die prematurely */</comment>
    <expr_stmt><expr><name pos:line="41" pos:column="5">buf<pos:position pos:line="41" pos:column="8"/></name> <operator pos:line="41" pos:column="9">=<pos:position pos:line="41" pos:column="10"/></operator> <call><name pos:line="41" pos:column="11">apr_bucket_alloc<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><operator pos:line="41" pos:column="28">*<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="29">len<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="34">e<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">-&gt;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="37">list<pos:position pos:line="41" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/* Handle offset ... */</comment>
    <expr_stmt><expr><name pos:line="44" pos:column="5">rv<pos:position pos:line="44" pos:column="7"/></name> <operator pos:line="44" pos:column="8">=<pos:position pos:line="44" pos:column="9"/></operator> <call><name pos:line="44" pos:column="10">apr_file_seek<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><name pos:line="44" pos:column="24">f<pos:position pos:line="44" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="27">APR_SET<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="36">&amp;<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="37">fileoffset<pos:position pos:line="44" pos:column="47"/></name></expr></argument>)<pos:position pos:line="44" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="49"/></expr_stmt>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">rv<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">!=<pos:position pos:line="45" pos:column="14"/></operator> <name pos:line="45" pos:column="15">APR_SUCCESS<pos:position pos:line="45" pos:column="26"/></name></expr>)<pos:position pos:line="45" pos:column="27"/></condition><then pos:line="45" pos:column="27"> <block pos:line="45" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">apr_bucket_free<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">buf<pos:position pos:line="46" pos:column="28"/></name></expr></argument>)<pos:position pos:line="46" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
        <return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">rv<pos:position pos:line="47" pos:column="18"/></name></expr>;<pos:position pos:line="47" pos:column="19"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="49" pos:column="5">rv<pos:position pos:line="49" pos:column="7"/></name> <operator pos:line="49" pos:column="8">=<pos:position pos:line="49" pos:column="9"/></operator> <call><name pos:line="49" pos:column="10">apr_file_read<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">f<pos:position pos:line="49" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="27">buf<pos:position pos:line="49" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="32">len<pos:position pos:line="49" pos:column="35"/></name></expr></argument>)<pos:position pos:line="49" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="37"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">rv<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">!=<pos:position pos:line="50" pos:column="14"/></operator> <name pos:line="50" pos:column="15">APR_SUCCESS<pos:position pos:line="50" pos:column="26"/></name> <operator pos:line="50" pos:column="27">&amp;&amp;<pos:position pos:line="50" pos:column="37"/></operator> <name pos:line="50" pos:column="30">rv<pos:position pos:line="50" pos:column="32"/></name> <operator pos:line="50" pos:column="33">!=<pos:position pos:line="50" pos:column="35"/></operator> <name pos:line="50" pos:column="36">APR_EOF<pos:position pos:line="50" pos:column="43"/></name></expr>)<pos:position pos:line="50" pos:column="44"/></condition><then pos:line="50" pos:column="44"> <block pos:line="50" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">apr_bucket_free<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">buf<pos:position pos:line="51" pos:column="28"/></name></expr></argument>)<pos:position pos:line="51" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="30"/></expr_stmt>
        <return pos:line="52" pos:column="9">return <expr><name pos:line="52" pos:column="16">rv<pos:position pos:line="52" pos:column="18"/></name></expr>;<pos:position pos:line="52" pos:column="19"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="54" pos:column="5">filelength<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">-=<pos:position pos:line="54" pos:column="18"/></operator> <operator pos:line="54" pos:column="19">*<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="20">len<pos:position pos:line="54" pos:column="23"/></name></expr>;<pos:position pos:line="54" pos:column="24"/></expr_stmt>
    <comment type="block" pos:line="55" pos:column="5">/*
     * Change the current bucket to refer to what we read,
     * even if we read nothing because we hit EOF.
     */</comment>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">apr_bucket_heap_make<pos:position pos:line="59" pos:column="25"/></name><argument_list pos:line="59" pos:column="25">(<argument><expr><name pos:line="59" pos:column="26">e<pos:position pos:line="59" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="29">buf<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="34">*<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="35">len<pos:position pos:line="59" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="40">apr_bucket_free<pos:position pos:line="59" pos:column="55"/></name></expr></argument>)<pos:position pos:line="59" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="61" pos:column="5">/* If we have more to read from the file, then create another bucket */</comment>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">filelength<pos:position pos:line="62" pos:column="19"/></name> <operator pos:line="62" pos:column="20">&gt;<pos:position pos:line="62" pos:column="24"/></operator> <literal type="number" pos:line="62" pos:column="22">0<pos:position pos:line="62" pos:column="23"/></literal> <operator pos:line="62" pos:column="24">&amp;&amp;<pos:position pos:line="62" pos:column="34"/></operator> <name pos:line="62" pos:column="27">rv<pos:position pos:line="62" pos:column="29"/></name> <operator pos:line="62" pos:column="30">!=<pos:position pos:line="62" pos:column="32"/></operator> <name pos:line="62" pos:column="33">APR_EOF<pos:position pos:line="62" pos:column="40"/></name></expr>)<pos:position pos:line="62" pos:column="41"/></condition><then pos:line="62" pos:column="41"> <block pos:line="62" pos:column="42">{
        <comment type="block" pos:line="63" pos:column="9">/* for efficiency, we can just build a new apr_bucket struct
         * to wrap around the existing file bucket */</comment>
        <expr_stmt><expr><name pos:line="65" pos:column="9">b<pos:position pos:line="65" pos:column="10"/></name> <operator pos:line="65" pos:column="11">=<pos:position pos:line="65" pos:column="12"/></operator> <call><name pos:line="65" pos:column="13">apr_bucket_alloc<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><sizeof pos:line="65" pos:column="30">sizeof<argument_list pos:line="65" pos:column="36">(<argument><expr><operator pos:line="65" pos:column="37">*<pos:position pos:line="65" pos:column="38"/></operator><name pos:line="65" pos:column="38">b<pos:position pos:line="65" pos:column="39"/></name></expr></argument>)<pos:position pos:line="65" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="42">e<pos:position pos:line="65" pos:column="43"/></name><operator pos:line="65" pos:column="43">-&gt;<pos:position pos:line="65" pos:column="48"/></operator><name pos:line="65" pos:column="45">list<pos:position pos:line="65" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="66" pos:column="9">b<pos:position pos:line="66" pos:column="10"/></name><operator pos:line="66" pos:column="10">-&gt;<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="12">start<pos:position pos:line="66" pos:column="17"/></name></name>  <operator pos:line="66" pos:column="19">=<pos:position pos:line="66" pos:column="20"/></operator> <name pos:line="66" pos:column="21">fileoffset<pos:position pos:line="66" pos:column="31"/></name> <operator pos:line="66" pos:column="32">+<pos:position pos:line="66" pos:column="33"/></operator> <operator pos:line="66" pos:column="34">(<pos:position pos:line="66" pos:column="35"/></operator><operator pos:line="66" pos:column="35">*<pos:position pos:line="66" pos:column="36"/></operator><name pos:line="66" pos:column="36">len<pos:position pos:line="66" pos:column="39"/></name><operator pos:line="66" pos:column="39">)<pos:position pos:line="66" pos:column="40"/></operator></expr>;<pos:position pos:line="66" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">b<pos:position pos:line="67" pos:column="10"/></name><operator pos:line="67" pos:column="10">-&gt;<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="12">length<pos:position pos:line="67" pos:column="18"/></name></name> <operator pos:line="67" pos:column="19">=<pos:position pos:line="67" pos:column="20"/></operator> <name pos:line="67" pos:column="21">filelength<pos:position pos:line="67" pos:column="31"/></name></expr>;<pos:position pos:line="67" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="68" pos:column="9">b<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">-&gt;<pos:position pos:line="68" pos:column="15"/></operator><name pos:line="68" pos:column="12">data<pos:position pos:line="68" pos:column="16"/></name></name>   <operator pos:line="68" pos:column="19">=<pos:position pos:line="68" pos:column="20"/></operator> <name pos:line="68" pos:column="21">a<pos:position pos:line="68" pos:column="22"/></name></expr>;<pos:position pos:line="68" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="69" pos:column="9">b<pos:position pos:line="69" pos:column="10"/></name><operator pos:line="69" pos:column="10">-&gt;<pos:position pos:line="69" pos:column="15"/></operator><name pos:line="69" pos:column="12">type<pos:position pos:line="69" pos:column="16"/></name></name>   <operator pos:line="69" pos:column="19">=<pos:position pos:line="69" pos:column="20"/></operator> <operator pos:line="69" pos:column="21">&amp;<pos:position pos:line="69" pos:column="26"/></operator><name pos:line="69" pos:column="22">apr_bucket_type_file<pos:position pos:line="69" pos:column="42"/></name></expr>;<pos:position pos:line="69" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">b<pos:position pos:line="70" pos:column="10"/></name><operator pos:line="70" pos:column="10">-&gt;<pos:position pos:line="70" pos:column="15"/></operator><name pos:line="70" pos:column="12">free<pos:position pos:line="70" pos:column="16"/></name></name>   <operator pos:line="70" pos:column="19">=<pos:position pos:line="70" pos:column="20"/></operator> <name pos:line="70" pos:column="21">apr_bucket_free<pos:position pos:line="70" pos:column="36"/></name></expr>;<pos:position pos:line="70" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="71" pos:column="9">b<pos:position pos:line="71" pos:column="10"/></name><operator pos:line="71" pos:column="10">-&gt;<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="12">list<pos:position pos:line="71" pos:column="16"/></name></name>   <operator pos:line="71" pos:column="19">=<pos:position pos:line="71" pos:column="20"/></operator> <name><name pos:line="71" pos:column="21">e<pos:position pos:line="71" pos:column="22"/></name><operator pos:line="71" pos:column="22">-&gt;<pos:position pos:line="71" pos:column="27"/></operator><name pos:line="71" pos:column="24">list<pos:position pos:line="71" pos:column="28"/></name></name></expr>;<pos:position pos:line="71" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">APR_BUCKET_INSERT_AFTER<pos:position pos:line="72" pos:column="32"/></name><argument_list pos:line="72" pos:column="32">(<argument><expr><name pos:line="72" pos:column="33">e<pos:position pos:line="72" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="36">b<pos:position pos:line="72" pos:column="37"/></name></expr></argument>)<pos:position pos:line="72" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then>
    <else pos:line="74" pos:column="5">else <block pos:line="74" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">file_bucket_destroy<pos:position pos:line="75" pos:column="28"/></name><argument_list pos:line="75" pos:column="28">(<argument><expr><name pos:line="75" pos:column="29">a<pos:position pos:line="75" pos:column="30"/></name></expr></argument>)<pos:position pos:line="75" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></else></if>

    <expr_stmt><expr><operator pos:line="78" pos:column="5">*<pos:position pos:line="78" pos:column="6"/></operator><name pos:line="78" pos:column="6">str<pos:position pos:line="78" pos:column="9"/></name> <operator pos:line="78" pos:column="10">=<pos:position pos:line="78" pos:column="11"/></operator> <name pos:line="78" pos:column="12">buf<pos:position pos:line="78" pos:column="15"/></name></expr>;<pos:position pos:line="78" pos:column="16"/></expr_stmt>
    <return pos:line="79" pos:column="5">return <expr><name pos:line="79" pos:column="12">rv<pos:position pos:line="79" pos:column="14"/></name></expr>;<pos:position pos:line="79" pos:column="15"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3193_httpd-2.4.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">log_error_core<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">file<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">line<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">module_index<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">level<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="3" pos:column="28">apr_status_t<pos:position pos:line="3" pos:column="40"/></name></type> <name pos:line="3" pos:column="41">status<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="49">const<pos:position pos:line="3" pos:column="54"/></specifier> <name pos:line="3" pos:column="55">server_rec<pos:position pos:line="3" pos:column="65"/></name> <modifier pos:line="3" pos:column="66">*<pos:position pos:line="3" pos:column="67"/></modifier></type><name pos:line="3" pos:column="67">s<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="4" pos:column="28">const<pos:position pos:line="4" pos:column="33"/></specifier> <name pos:line="4" pos:column="34">conn_rec<pos:position pos:line="4" pos:column="42"/></name> <modifier pos:line="4" pos:column="43">*<pos:position pos:line="4" pos:column="44"/></modifier></type><name pos:line="4" pos:column="44">c<pos:position pos:line="4" pos:column="45"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="5" pos:column="28">const<pos:position pos:line="5" pos:column="33"/></specifier> <name pos:line="5" pos:column="34">request_rec<pos:position pos:line="5" pos:column="45"/></name> <modifier pos:line="5" pos:column="46">*<pos:position pos:line="5" pos:column="47"/></modifier></type><name pos:line="5" pos:column="47">r<pos:position pos:line="5" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="50">apr_pool_t<pos:position pos:line="5" pos:column="60"/></name> <modifier pos:line="5" pos:column="61">*<pos:position pos:line="5" pos:column="62"/></modifier></type><name pos:line="5" pos:column="62">pool<pos:position pos:line="5" pos:column="66"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="6" pos:column="28">const<pos:position pos:line="6" pos:column="33"/></specifier> <name pos:line="6" pos:column="34">char<pos:position pos:line="6" pos:column="38"/></name> <modifier pos:line="6" pos:column="39">*<pos:position pos:line="6" pos:column="40"/></modifier></type><name pos:line="6" pos:column="40">fmt<pos:position pos:line="6" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="6" pos:column="45">va_list<pos:position pos:line="6" pos:column="52"/></name></type> <name pos:line="6" pos:column="53">args<pos:position pos:line="6" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="58"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">errstr<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><name pos:line="8" pos:column="17">MAX_STRING_LEN<pos:position pos:line="8" pos:column="31"/></name></expr>]<pos:position pos:line="8" pos:column="32"/></index></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_file_t<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">logf<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">level_and_mask<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><name pos:line="10" pos:column="26">level<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">&amp;<pos:position pos:line="10" pos:column="37"/></operator> <name pos:line="10" pos:column="34">APLOG_LEVELMASK<pos:position pos:line="10" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">request_rec<pos:position pos:line="11" pos:column="22"/></name> <modifier pos:line="11" pos:column="23">*<pos:position pos:line="11" pos:column="24"/></modifier></type><name pos:line="11" pos:column="24">rmain<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><name pos:line="11" pos:column="32">NULL<pos:position pos:line="11" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">core_server_config<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">sconf<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><name pos:line="12" pos:column="33">NULL<pos:position pos:line="12" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">ap_errorlog_info<pos:position pos:line="13" pos:column="21"/></name></type> <name pos:line="13" pos:column="22">info<pos:position pos:line="13" pos:column="26"/></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* do we need to log once-per-req or once-per-conn info? */</comment>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">log_conn_info<pos:position pos:line="16" pos:column="22"/></name> <init pos:line="16" pos:column="23">= <expr><literal type="number" pos:line="16" pos:column="25">0<pos:position pos:line="16" pos:column="26"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="28">log_req_info<pos:position pos:line="16" pos:column="40"/></name> <init pos:line="16" pos:column="41">= <expr><literal type="number" pos:line="16" pos:column="43">0<pos:position pos:line="16" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">apr_array_header_t<pos:position pos:line="17" pos:column="23"/></name> <modifier pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></modifier><modifier pos:line="17" pos:column="25">*<pos:position pos:line="17" pos:column="26"/></modifier></type><name pos:line="17" pos:column="26">lines<pos:position pos:line="17" pos:column="31"/></name> <init pos:line="17" pos:column="32">= <expr><name pos:line="17" pos:column="34">NULL<pos:position pos:line="17" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">done<pos:position pos:line="18" pos:column="13"/></name> <init pos:line="18" pos:column="14">= <expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">line_number<pos:position pos:line="19" pos:column="20"/></name> <init pos:line="19" pos:column="21">= <expr><literal type="number" pos:line="19" pos:column="23">0<pos:position pos:line="19" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="25"/></decl_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">r<pos:position pos:line="21" pos:column="10"/></name></expr>)<pos:position pos:line="21" pos:column="11"/></condition><then pos:line="21" pos:column="11"> <block pos:line="21" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">AP_DEBUG_ASSERT<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name><name pos:line="22" pos:column="25">r<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">-&gt;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="28">connection<pos:position pos:line="22" pos:column="38"/></name></name> <operator pos:line="22" pos:column="39">!=<pos:position pos:line="22" pos:column="41"/></operator> <name pos:line="22" pos:column="42">NULL<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">c<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <name><name pos:line="23" pos:column="13">r<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">connection<pos:position pos:line="23" pos:column="26"/></name></name></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">s<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">==<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">NULL<pos:position pos:line="26" pos:column="18"/></name></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19"> <block pos:line="26" pos:column="20">{
        <comment type="block" pos:line="27" pos:column="9">/*
         * If we are doing stderr logging (startup), don't log messages that are
         * above the default server log level unless it is a startup/shutdown
         * notice
         */</comment>
<cpp:ifndef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifndef<pos:position pos:line="32" pos:column="8"/></cpp:directive> <name pos:line="32" pos:column="9">DEBUG<pos:position pos:line="32" pos:column="14"/></name></cpp:ifndef>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">(<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">level_and_mask<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">!=<pos:position pos:line="33" pos:column="31"/></operator> <name pos:line="33" pos:column="32">APLOG_NOTICE<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">)<pos:position pos:line="33" pos:column="45"/></operator>
            <operator pos:line="34" pos:column="13">&amp;&amp;<pos:position pos:line="34" pos:column="23"/></operator> <operator pos:line="34" pos:column="16">(<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">level_and_mask<pos:position pos:line="34" pos:column="31"/></name> <operator pos:line="34" pos:column="32">&gt;<pos:position pos:line="34" pos:column="36"/></operator> <name pos:line="34" pos:column="34">ap_default_loglevel<pos:position pos:line="34" pos:column="53"/></name><operator pos:line="34" pos:column="53">)<pos:position pos:line="34" pos:column="54"/></operator></expr>)<pos:position pos:line="34" pos:column="55"/></condition><then pos:line="34" pos:column="55"> <block pos:line="34" pos:column="56">{
            <return pos:line="35" pos:column="13">return;<pos:position pos:line="35" pos:column="20"/></return>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><name pos:line="39" pos:column="9">logf<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <name pos:line="39" pos:column="16">stderr_log<pos:position pos:line="39" pos:column="26"/></name></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then>
    <else pos:line="41" pos:column="5">else <block pos:line="41" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="42" pos:column="9">int<pos:position pos:line="42" pos:column="12"/></name></type> <name pos:line="42" pos:column="13">configured_level<pos:position pos:line="42" pos:column="29"/></name> <init pos:line="42" pos:column="30">= <expr><ternary><condition><expr><name pos:line="42" pos:column="32">r<pos:position pos:line="42" pos:column="33"/></name></expr> ?<pos:position pos:line="42" pos:column="35"/></condition><then pos:line="42" pos:column="35"> <expr><call><name pos:line="42" pos:column="36">ap_get_request_module_loglevel<pos:position pos:line="42" pos:column="66"/></name><argument_list pos:line="42" pos:column="66">(<argument><expr><name pos:line="42" pos:column="67">r<pos:position pos:line="42" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="70">module_index<pos:position pos:line="42" pos:column="82"/></name></expr></argument>)<pos:position pos:line="42" pos:column="83"/></argument_list></call></expr>        <pos:position pos:line="42" pos:column="91"/></then><else pos:line="42" pos:column="91">:
                               <expr><ternary><condition><expr><name pos:line="43" pos:column="32">c<pos:position pos:line="43" pos:column="33"/></name></expr> ?<pos:position pos:line="43" pos:column="35"/></condition><then pos:line="43" pos:column="35"> <expr><call><name pos:line="43" pos:column="36">ap_get_conn_server_module_loglevel<pos:position pos:line="43" pos:column="70"/></name><argument_list pos:line="43" pos:column="70">(<argument><expr><name pos:line="43" pos:column="71">c<pos:position pos:line="43" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="74">s<pos:position pos:line="43" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="77">module_index<pos:position pos:line="43" pos:column="89"/></name></expr></argument>)<pos:position pos:line="43" pos:column="90"/></argument_list></call></expr> <pos:position pos:line="43" pos:column="91"/></then><else pos:line="43" pos:column="91">:
                                   <expr><call><name pos:line="44" pos:column="36">ap_get_server_module_loglevel<pos:position pos:line="44" pos:column="65"/></name><argument_list pos:line="44" pos:column="65">(<argument><expr><name pos:line="44" pos:column="66">s<pos:position pos:line="44" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="69">module_index<pos:position pos:line="44" pos:column="81"/></name></expr></argument>)<pos:position pos:line="44" pos:column="82"/></argument_list></call></expr></else></ternary></expr></else></ternary></expr></init></decl>;<pos:position pos:line="44" pos:column="83"/></decl_stmt>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name><name pos:line="45" pos:column="13">s<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">-&gt;<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="16">error_log<pos:position pos:line="45" pos:column="25"/></name></name></expr>)<pos:position pos:line="45" pos:column="26"/></condition><then pos:line="45" pos:column="26"> <block pos:line="45" pos:column="27">{
            <comment type="block" pos:line="46" pos:column="13">/*
             * If we are doing normal logging, don't log messages that are
             * above the module's log level unless it is a startup/shutdown notice
             */</comment>
            <if pos:line="50" pos:column="13">if <condition pos:line="50" pos:column="16">(<expr><operator pos:line="50" pos:column="17">(<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">level_and_mask<pos:position pos:line="50" pos:column="32"/></name> <operator pos:line="50" pos:column="33">!=<pos:position pos:line="50" pos:column="35"/></operator> <name pos:line="50" pos:column="36">APLOG_NOTICE<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">)<pos:position pos:line="50" pos:column="49"/></operator>
                <operator pos:line="51" pos:column="17">&amp;&amp;<pos:position pos:line="51" pos:column="27"/></operator> <operator pos:line="51" pos:column="20">(<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="21">level_and_mask<pos:position pos:line="51" pos:column="35"/></name> <operator pos:line="51" pos:column="36">&gt;<pos:position pos:line="51" pos:column="40"/></operator> <name pos:line="51" pos:column="38">configured_level<pos:position pos:line="51" pos:column="54"/></name><operator pos:line="51" pos:column="54">)<pos:position pos:line="51" pos:column="55"/></operator></expr>)<pos:position pos:line="51" pos:column="56"/></condition><then pos:line="51" pos:column="56"> <block pos:line="51" pos:column="57">{
                <return pos:line="52" pos:column="17">return;<pos:position pos:line="52" pos:column="24"/></return>
            }<pos:position pos:line="53" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="55" pos:column="13">logf<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <name><name pos:line="55" pos:column="20">s<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">-&gt;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="23">error_log<pos:position pos:line="55" pos:column="32"/></name></name></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></then>
        <else pos:line="57" pos:column="9">else <block pos:line="57" pos:column="14">{
            <comment type="block" pos:line="58" pos:column="13">/*
             * If we are doing syslog logging, don't log messages that are
             * above the module's log level (including a startup/shutdown notice)
             */</comment>
            <if pos:line="62" pos:column="13">if <condition pos:line="62" pos:column="16">(<expr><name pos:line="62" pos:column="17">level_and_mask<pos:position pos:line="62" pos:column="31"/></name> <operator pos:line="62" pos:column="32">&gt;<pos:position pos:line="62" pos:column="36"/></operator> <name pos:line="62" pos:column="34">configured_level<pos:position pos:line="62" pos:column="50"/></name></expr>)<pos:position pos:line="62" pos:column="51"/></condition><then pos:line="62" pos:column="51"> <block pos:line="62" pos:column="52">{
                <return pos:line="63" pos:column="17">return;<pos:position pos:line="63" pos:column="24"/></return>
            }<pos:position pos:line="64" pos:column="14"/></block></then></if>
        }<pos:position pos:line="65" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="67" pos:column="9">/* the faked server_rec from mod_cgid does not have s-&gt;module_config */</comment>
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name><name pos:line="68" pos:column="13">s<pos:position pos:line="68" pos:column="14"/></name><operator pos:line="68" pos:column="14">-&gt;<pos:position pos:line="68" pos:column="19"/></operator><name pos:line="68" pos:column="16">module_config<pos:position pos:line="68" pos:column="29"/></name></name></expr>)<pos:position pos:line="68" pos:column="30"/></condition><then pos:line="68" pos:column="30"> <block pos:line="68" pos:column="31">{
            <expr_stmt><expr><name pos:line="69" pos:column="13">sconf<pos:position pos:line="69" pos:column="18"/></name> <operator pos:line="69" pos:column="19">=<pos:position pos:line="69" pos:column="20"/></operator> <call><name pos:line="69" pos:column="21">ap_get_core_module_config<pos:position pos:line="69" pos:column="46"/></name><argument_list pos:line="69" pos:column="46">(<argument><expr><name><name pos:line="69" pos:column="47">s<pos:position pos:line="69" pos:column="48"/></name><operator pos:line="69" pos:column="48">-&gt;<pos:position pos:line="69" pos:column="53"/></operator><name pos:line="69" pos:column="50">module_config<pos:position pos:line="69" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="65"/></expr_stmt>
            <if pos:line="70" pos:column="13">if <condition pos:line="70" pos:column="16">(<expr><name pos:line="70" pos:column="17">c<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">&amp;&amp;<pos:position pos:line="70" pos:column="29"/></operator> <operator pos:line="70" pos:column="22">!<pos:position pos:line="70" pos:column="23"/></operator><name><name pos:line="70" pos:column="23">c<pos:position pos:line="70" pos:column="24"/></name><operator pos:line="70" pos:column="24">-&gt;<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="26">log_id<pos:position pos:line="70" pos:column="32"/></name></name></expr>)<pos:position pos:line="70" pos:column="33"/></condition><then pos:line="70" pos:column="33"> <block pos:line="70" pos:column="34">{
                <expr_stmt><expr><call><name pos:line="71" pos:column="17">add_log_id<pos:position pos:line="71" pos:column="27"/></name><argument_list pos:line="71" pos:column="27">(<argument><expr><name pos:line="71" pos:column="28">c<pos:position pos:line="71" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="31">NULL<pos:position pos:line="71" pos:column="35"/></name></expr></argument>)<pos:position pos:line="71" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="37"/></expr_stmt>
                <if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><name><name pos:line="72" pos:column="21">sconf<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">error_log_conn<pos:position pos:line="72" pos:column="42"/></name></name> <operator pos:line="72" pos:column="43">&amp;&amp;<pos:position pos:line="72" pos:column="53"/></operator> <name><name pos:line="72" pos:column="46">sconf<pos:position pos:line="72" pos:column="51"/></name><operator pos:line="72" pos:column="51">-&gt;<pos:position pos:line="72" pos:column="56"/></operator><name pos:line="72" pos:column="53">error_log_conn<pos:position pos:line="72" pos:column="67"/></name><operator pos:line="72" pos:column="67">-&gt;<pos:position pos:line="72" pos:column="72"/></operator><name pos:line="72" pos:column="69">nelts<pos:position pos:line="72" pos:column="74"/></name></name> <operator pos:line="72" pos:column="75">&gt;<pos:position pos:line="72" pos:column="79"/></operator> <literal type="number" pos:line="72" pos:column="77">0<pos:position pos:line="72" pos:column="78"/></literal></expr>)<pos:position pos:line="72" pos:column="79"/></condition><then pos:line="72" pos:column="79">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="21">log_conn_info<pos:position pos:line="73" pos:column="34"/></name> <operator pos:line="73" pos:column="35">=<pos:position pos:line="73" pos:column="36"/></operator> <literal type="number" pos:line="73" pos:column="37">1<pos:position pos:line="73" pos:column="38"/></literal></expr>;<pos:position pos:line="73" pos:column="39"/></expr_stmt></block></then></if>
            }<pos:position pos:line="74" pos:column="14"/></block></then></if>
            <if pos:line="75" pos:column="13">if <condition pos:line="75" pos:column="16">(<expr><name pos:line="75" pos:column="17">r<pos:position pos:line="75" pos:column="18"/></name></expr>)<pos:position pos:line="75" pos:column="19"/></condition><then pos:line="75" pos:column="19"> <block pos:line="75" pos:column="20">{
                <if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name><name pos:line="76" pos:column="21">r<pos:position pos:line="76" pos:column="22"/></name><operator pos:line="76" pos:column="22">-&gt;<pos:position pos:line="76" pos:column="27"/></operator><name pos:line="76" pos:column="24">main<pos:position pos:line="76" pos:column="28"/></name></name></expr>)<pos:position pos:line="76" pos:column="29"/></condition><then pos:line="76" pos:column="29">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="21">rmain<pos:position pos:line="77" pos:column="26"/></name> <operator pos:line="77" pos:column="27">=<pos:position pos:line="77" pos:column="28"/></operator> <name><name pos:line="77" pos:column="29">r<pos:position pos:line="77" pos:column="30"/></name><operator pos:line="77" pos:column="30">-&gt;<pos:position pos:line="77" pos:column="35"/></operator><name pos:line="77" pos:column="32">main<pos:position pos:line="77" pos:column="36"/></name></name></expr>;<pos:position pos:line="77" pos:column="37"/></expr_stmt></block></then>
                <else pos:line="78" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><name pos:line="79" pos:column="21">rmain<pos:position pos:line="79" pos:column="26"/></name> <operator pos:line="79" pos:column="27">=<pos:position pos:line="79" pos:column="28"/></operator> <name pos:line="79" pos:column="29">r<pos:position pos:line="79" pos:column="30"/></name></expr>;<pos:position pos:line="79" pos:column="31"/></expr_stmt></block></else></if>

                <if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><operator pos:line="81" pos:column="21">!<pos:position pos:line="81" pos:column="22"/></operator><name><name pos:line="81" pos:column="22">rmain<pos:position pos:line="81" pos:column="27"/></name><operator pos:line="81" pos:column="27">-&gt;<pos:position pos:line="81" pos:column="32"/></operator><name pos:line="81" pos:column="29">log_id<pos:position pos:line="81" pos:column="35"/></name></name></expr>)<pos:position pos:line="81" pos:column="36"/></condition><then pos:line="81" pos:column="36"> <block pos:line="81" pos:column="37">{
                    <comment type="block" pos:line="82" pos:column="21">/* XXX: do we need separate log ids for subrequests? */</comment>
                    <if pos:line="83" pos:column="21">if <condition pos:line="83" pos:column="24">(<expr><name><name pos:line="83" pos:column="25">sconf<pos:position pos:line="83" pos:column="30"/></name><operator pos:line="83" pos:column="30">-&gt;<pos:position pos:line="83" pos:column="35"/></operator><name pos:line="83" pos:column="32">error_log_req<pos:position pos:line="83" pos:column="45"/></name></name> <operator pos:line="83" pos:column="46">&amp;&amp;<pos:position pos:line="83" pos:column="56"/></operator> <name><name pos:line="83" pos:column="49">sconf<pos:position pos:line="83" pos:column="54"/></name><operator pos:line="83" pos:column="54">-&gt;<pos:position pos:line="83" pos:column="59"/></operator><name pos:line="83" pos:column="56">error_log_req<pos:position pos:line="83" pos:column="69"/></name><operator pos:line="83" pos:column="69">-&gt;<pos:position pos:line="83" pos:column="74"/></operator><name pos:line="83" pos:column="71">nelts<pos:position pos:line="83" pos:column="76"/></name></name> <operator pos:line="83" pos:column="77">&gt;<pos:position pos:line="83" pos:column="81"/></operator> <literal type="number" pos:line="83" pos:column="79">0<pos:position pos:line="83" pos:column="80"/></literal></expr>)<pos:position pos:line="83" pos:column="81"/></condition><then pos:line="83" pos:column="81">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="25">log_req_info<pos:position pos:line="84" pos:column="37"/></name> <operator pos:line="84" pos:column="38">=<pos:position pos:line="84" pos:column="39"/></operator> <literal type="number" pos:line="84" pos:column="40">1<pos:position pos:line="84" pos:column="41"/></literal></expr>;<pos:position pos:line="84" pos:column="42"/></expr_stmt></block></then></if>
                    <comment type="block" pos:line="85" pos:column="21">/*
                     * XXX: potential optimization: only create log id if %L is
                     * XXX: actually used
                     */</comment>
                    <expr_stmt><expr><call><name pos:line="89" pos:column="21">add_log_id<pos:position pos:line="89" pos:column="31"/></name><argument_list pos:line="89" pos:column="31">(<argument><expr><name pos:line="89" pos:column="32">c<pos:position pos:line="89" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="35">rmain<pos:position pos:line="89" pos:column="40"/></name></expr></argument>)<pos:position pos:line="89" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="42"/></expr_stmt>
                }<pos:position pos:line="90" pos:column="18"/></block></then></if>
            }<pos:position pos:line="91" pos:column="14"/></block></then></if>
        }<pos:position pos:line="92" pos:column="10"/></block></then></if>
    }<pos:position pos:line="93" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="95" pos:column="5">info<pos:position pos:line="95" pos:column="9"/></name><operator pos:line="95" pos:column="9">.<pos:position pos:line="95" pos:column="10"/></operator><name pos:line="95" pos:column="10">s<pos:position pos:line="95" pos:column="11"/></name></name>             <operator pos:line="95" pos:column="24">=<pos:position pos:line="95" pos:column="25"/></operator> <name pos:line="95" pos:column="26">s<pos:position pos:line="95" pos:column="27"/></name></expr>;<pos:position pos:line="95" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="96" pos:column="5">info<pos:position pos:line="96" pos:column="9"/></name><operator pos:line="96" pos:column="9">.<pos:position pos:line="96" pos:column="10"/></operator><name pos:line="96" pos:column="10">c<pos:position pos:line="96" pos:column="11"/></name></name>             <operator pos:line="96" pos:column="24">=<pos:position pos:line="96" pos:column="25"/></operator> <name pos:line="96" pos:column="26">c<pos:position pos:line="96" pos:column="27"/></name></expr>;<pos:position pos:line="96" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="97" pos:column="5">info<pos:position pos:line="97" pos:column="9"/></name><operator pos:line="97" pos:column="9">.<pos:position pos:line="97" pos:column="10"/></operator><name pos:line="97" pos:column="10">pool<pos:position pos:line="97" pos:column="14"/></name></name>          <operator pos:line="97" pos:column="24">=<pos:position pos:line="97" pos:column="25"/></operator> <name pos:line="97" pos:column="26">pool<pos:position pos:line="97" pos:column="30"/></name></expr>;<pos:position pos:line="97" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="98" pos:column="5">info<pos:position pos:line="98" pos:column="9"/></name><operator pos:line="98" pos:column="9">.<pos:position pos:line="98" pos:column="10"/></operator><name pos:line="98" pos:column="10">file<pos:position pos:line="98" pos:column="14"/></name></name>          <operator pos:line="98" pos:column="24">=<pos:position pos:line="98" pos:column="25"/></operator> <name pos:line="98" pos:column="26">NULL<pos:position pos:line="98" pos:column="30"/></name></expr>;<pos:position pos:line="98" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="99" pos:column="5">info<pos:position pos:line="99" pos:column="9"/></name><operator pos:line="99" pos:column="9">.<pos:position pos:line="99" pos:column="10"/></operator><name pos:line="99" pos:column="10">line<pos:position pos:line="99" pos:column="14"/></name></name>          <operator pos:line="99" pos:column="24">=<pos:position pos:line="99" pos:column="25"/></operator> <literal type="number" pos:line="99" pos:column="26">0<pos:position pos:line="99" pos:column="27"/></literal></expr>;<pos:position pos:line="99" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="100" pos:column="5">info<pos:position pos:line="100" pos:column="9"/></name><operator pos:line="100" pos:column="9">.<pos:position pos:line="100" pos:column="10"/></operator><name pos:line="100" pos:column="10">status<pos:position pos:line="100" pos:column="16"/></name></name>        <operator pos:line="100" pos:column="24">=<pos:position pos:line="100" pos:column="25"/></operator> <literal type="number" pos:line="100" pos:column="26">0<pos:position pos:line="100" pos:column="27"/></literal></expr>;<pos:position pos:line="100" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="101" pos:column="5">info<pos:position pos:line="101" pos:column="9"/></name><operator pos:line="101" pos:column="9">.<pos:position pos:line="101" pos:column="10"/></operator><name pos:line="101" pos:column="10">using_syslog<pos:position pos:line="101" pos:column="22"/></name></name>  <operator pos:line="101" pos:column="24">=<pos:position pos:line="101" pos:column="25"/></operator> <operator pos:line="101" pos:column="26">(<pos:position pos:line="101" pos:column="27"/></operator><name pos:line="101" pos:column="27">logf<pos:position pos:line="101" pos:column="31"/></name> <operator pos:line="101" pos:column="32">==<pos:position pos:line="101" pos:column="34"/></operator> <name pos:line="101" pos:column="35">NULL<pos:position pos:line="101" pos:column="39"/></name><operator pos:line="101" pos:column="39">)<pos:position pos:line="101" pos:column="40"/></operator></expr>;<pos:position pos:line="101" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="102" pos:column="5">info<pos:position pos:line="102" pos:column="9"/></name><operator pos:line="102" pos:column="9">.<pos:position pos:line="102" pos:column="10"/></operator><name pos:line="102" pos:column="10">startup<pos:position pos:line="102" pos:column="17"/></name></name>       <operator pos:line="102" pos:column="24">=<pos:position pos:line="102" pos:column="25"/></operator> <operator pos:line="102" pos:column="26">(<pos:position pos:line="102" pos:column="27"/></operator><operator pos:line="102" pos:column="27">(<pos:position pos:line="102" pos:column="28"/></operator><name pos:line="102" pos:column="28">level<pos:position pos:line="102" pos:column="33"/></name> <operator pos:line="102" pos:column="34">&amp;<pos:position pos:line="102" pos:column="39"/></operator> <name pos:line="102" pos:column="36">APLOG_STARTUP<pos:position pos:line="102" pos:column="49"/></name><operator pos:line="102" pos:column="49">)<pos:position pos:line="102" pos:column="50"/></operator> <operator pos:line="102" pos:column="51">==<pos:position pos:line="102" pos:column="53"/></operator> <name pos:line="102" pos:column="54">APLOG_STARTUP<pos:position pos:line="102" pos:column="67"/></name><operator pos:line="102" pos:column="67">)<pos:position pos:line="102" pos:column="68"/></operator></expr>;<pos:position pos:line="102" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="103" pos:column="5">info<pos:position pos:line="103" pos:column="9"/></name><operator pos:line="103" pos:column="9">.<pos:position pos:line="103" pos:column="10"/></operator><name pos:line="103" pos:column="10">format<pos:position pos:line="103" pos:column="16"/></name></name>        <operator pos:line="103" pos:column="24">=<pos:position pos:line="103" pos:column="25"/></operator> <name pos:line="103" pos:column="26">fmt<pos:position pos:line="103" pos:column="29"/></name></expr>;<pos:position pos:line="103" pos:column="30"/></expr_stmt>

    <while pos:line="105" pos:column="5">while <condition pos:line="105" pos:column="11">(<expr><operator pos:line="105" pos:column="12">!<pos:position pos:line="105" pos:column="13"/></operator><name pos:line="105" pos:column="13">done<pos:position pos:line="105" pos:column="17"/></name></expr>)<pos:position pos:line="105" pos:column="18"/></condition> <block pos:line="105" pos:column="19">{
        <decl_stmt><decl><type><name pos:line="106" pos:column="9">apr_array_header_t<pos:position pos:line="106" pos:column="27"/></name> <modifier pos:line="106" pos:column="28">*<pos:position pos:line="106" pos:column="29"/></modifier></type><name pos:line="106" pos:column="29">log_format<pos:position pos:line="106" pos:column="39"/></name></decl>;<pos:position pos:line="106" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="107" pos:column="9">int<pos:position pos:line="107" pos:column="12"/></name></type> <name pos:line="107" pos:column="13">len<pos:position pos:line="107" pos:column="16"/></name> <init pos:line="107" pos:column="17">= <expr><literal type="number" pos:line="107" pos:column="19">0<pos:position pos:line="107" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="107" pos:column="22">errstr_start<pos:position pos:line="107" pos:column="34"/></name> <init pos:line="107" pos:column="35">= <expr><literal type="number" pos:line="107" pos:column="37">0<pos:position pos:line="107" pos:column="38"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="107" pos:column="40">errstr_end<pos:position pos:line="107" pos:column="50"/></name> <init pos:line="107" pos:column="51">= <expr><literal type="number" pos:line="107" pos:column="53">0<pos:position pos:line="107" pos:column="54"/></literal></expr></init></decl>;<pos:position pos:line="107" pos:column="55"/></decl_stmt>
        <comment type="block" pos:line="108" pos:column="9">/* XXX: potential optimization: format common prefixes only once */</comment>
        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name pos:line="109" pos:column="13">log_conn_info<pos:position pos:line="109" pos:column="26"/></name></expr>)<pos:position pos:line="109" pos:column="27"/></condition><then pos:line="109" pos:column="27"> <block pos:line="109" pos:column="28">{
            <comment type="block" pos:line="110" pos:column="13">/* once-per-connection info */</comment>
            <if pos:line="111" pos:column="13">if <condition pos:line="111" pos:column="16">(<expr><name pos:line="111" pos:column="17">line_number<pos:position pos:line="111" pos:column="28"/></name> <operator pos:line="111" pos:column="29">==<pos:position pos:line="111" pos:column="31"/></operator> <literal type="number" pos:line="111" pos:column="32">0<pos:position pos:line="111" pos:column="33"/></literal></expr>)<pos:position pos:line="111" pos:column="34"/></condition><then pos:line="111" pos:column="34"> <block pos:line="111" pos:column="35">{
                <expr_stmt><expr><name pos:line="112" pos:column="17">lines<pos:position pos:line="112" pos:column="22"/></name> <operator pos:line="112" pos:column="23">=<pos:position pos:line="112" pos:column="24"/></operator> <operator pos:line="112" pos:column="25">(<pos:position pos:line="112" pos:column="26"/></operator><name pos:line="112" pos:column="26">apr_array_header_t<pos:position pos:line="112" pos:column="44"/></name> <operator pos:line="112" pos:column="45">*<pos:position pos:line="112" pos:column="46"/></operator><operator pos:line="112" pos:column="46">*<pos:position pos:line="112" pos:column="47"/></operator><operator pos:line="112" pos:column="47">)<pos:position pos:line="112" pos:column="48"/></operator><name><name pos:line="112" pos:column="48">sconf<pos:position pos:line="112" pos:column="53"/></name><operator pos:line="112" pos:column="53">-&gt;<pos:position pos:line="112" pos:column="58"/></operator><name pos:line="112" pos:column="55">error_log_conn<pos:position pos:line="112" pos:column="69"/></name><operator pos:line="112" pos:column="69">-&gt;<pos:position pos:line="112" pos:column="74"/></operator><name pos:line="112" pos:column="71">elts<pos:position pos:line="112" pos:column="75"/></name></name></expr>;<pos:position pos:line="112" pos:column="76"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="113" pos:column="17">info<pos:position pos:line="113" pos:column="21"/></name><operator pos:line="113" pos:column="21">.<pos:position pos:line="113" pos:column="22"/></operator><name pos:line="113" pos:column="22">r<pos:position pos:line="113" pos:column="23"/></name></name> <operator pos:line="113" pos:column="24">=<pos:position pos:line="113" pos:column="25"/></operator> <name pos:line="113" pos:column="26">NULL<pos:position pos:line="113" pos:column="30"/></name></expr>;<pos:position pos:line="113" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="114" pos:column="17">info<pos:position pos:line="114" pos:column="21"/></name><operator pos:line="114" pos:column="21">.<pos:position pos:line="114" pos:column="22"/></operator><name pos:line="114" pos:column="22">rmain<pos:position pos:line="114" pos:column="27"/></name></name> <operator pos:line="114" pos:column="28">=<pos:position pos:line="114" pos:column="29"/></operator> <name pos:line="114" pos:column="30">NULL<pos:position pos:line="114" pos:column="34"/></name></expr>;<pos:position pos:line="114" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="115" pos:column="17">info<pos:position pos:line="115" pos:column="21"/></name><operator pos:line="115" pos:column="21">.<pos:position pos:line="115" pos:column="22"/></operator><name pos:line="115" pos:column="22">level<pos:position pos:line="115" pos:column="27"/></name></name> <operator pos:line="115" pos:column="28">=<pos:position pos:line="115" pos:column="29"/></operator> <operator pos:line="115" pos:column="30">-<pos:position pos:line="115" pos:column="31"/></operator><literal type="number" pos:line="115" pos:column="31">1<pos:position pos:line="115" pos:column="32"/></literal></expr>;<pos:position pos:line="115" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="116" pos:column="17">info<pos:position pos:line="116" pos:column="21"/></name><operator pos:line="116" pos:column="21">.<pos:position pos:line="116" pos:column="22"/></operator><name pos:line="116" pos:column="22">module_index<pos:position pos:line="116" pos:column="34"/></name></name> <operator pos:line="116" pos:column="35">=<pos:position pos:line="116" pos:column="36"/></operator> <name pos:line="116" pos:column="37">APLOG_NO_MODULE<pos:position pos:line="116" pos:column="52"/></name></expr>;<pos:position pos:line="116" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="117" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="119" pos:column="13">log_format<pos:position pos:line="119" pos:column="23"/></name> <operator pos:line="119" pos:column="24">=<pos:position pos:line="119" pos:column="25"/></operator> <name><name pos:line="119" pos:column="26">lines<pos:position pos:line="119" pos:column="31"/></name><index pos:line="119" pos:column="31">[<expr><name pos:line="119" pos:column="32">line_number<pos:position pos:line="119" pos:column="43"/></name><operator pos:line="119" pos:column="43">++<pos:position pos:line="119" pos:column="45"/></operator></expr>]<pos:position pos:line="119" pos:column="46"/></index></name></expr>;<pos:position pos:line="119" pos:column="47"/></expr_stmt>

            <if pos:line="121" pos:column="13">if <condition pos:line="121" pos:column="16">(<expr><name pos:line="121" pos:column="17">line_number<pos:position pos:line="121" pos:column="28"/></name> <operator pos:line="121" pos:column="29">==<pos:position pos:line="121" pos:column="31"/></operator> <name><name pos:line="121" pos:column="32">sconf<pos:position pos:line="121" pos:column="37"/></name><operator pos:line="121" pos:column="37">-&gt;<pos:position pos:line="121" pos:column="42"/></operator><name pos:line="121" pos:column="39">error_log_conn<pos:position pos:line="121" pos:column="53"/></name><operator pos:line="121" pos:column="53">-&gt;<pos:position pos:line="121" pos:column="58"/></operator><name pos:line="121" pos:column="55">nelts<pos:position pos:line="121" pos:column="60"/></name></name></expr>)<pos:position pos:line="121" pos:column="61"/></condition><then pos:line="121" pos:column="61"> <block pos:line="121" pos:column="62">{
                <comment type="block" pos:line="122" pos:column="17">/* this is the last line of once-per-connection info */</comment>
                <expr_stmt><expr><name pos:line="123" pos:column="17">line_number<pos:position pos:line="123" pos:column="28"/></name> <operator pos:line="123" pos:column="29">=<pos:position pos:line="123" pos:column="30"/></operator> <literal type="number" pos:line="123" pos:column="31">0<pos:position pos:line="123" pos:column="32"/></literal></expr>;<pos:position pos:line="123" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="124" pos:column="17">log_conn_info<pos:position pos:line="124" pos:column="30"/></name> <operator pos:line="124" pos:column="31">=<pos:position pos:line="124" pos:column="32"/></operator> <literal type="number" pos:line="124" pos:column="33">0<pos:position pos:line="124" pos:column="34"/></literal></expr>;<pos:position pos:line="124" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="125" pos:column="14"/></block></then></if>
        }<pos:position pos:line="126" pos:column="10"/></block></then>
        <elseif pos:line="127" pos:column="9">else <if pos:line="127" pos:column="14">if <condition pos:line="127" pos:column="17">(<expr><name pos:line="127" pos:column="18">log_req_info<pos:position pos:line="127" pos:column="30"/></name></expr>)<pos:position pos:line="127" pos:column="31"/></condition><then pos:line="127" pos:column="31"> <block pos:line="127" pos:column="32">{
            <comment type="block" pos:line="128" pos:column="13">/* once-per-request info */</comment>
            <if pos:line="129" pos:column="13">if <condition pos:line="129" pos:column="16">(<expr><name pos:line="129" pos:column="17">line_number<pos:position pos:line="129" pos:column="28"/></name> <operator pos:line="129" pos:column="29">==<pos:position pos:line="129" pos:column="31"/></operator> <literal type="number" pos:line="129" pos:column="32">0<pos:position pos:line="129" pos:column="33"/></literal></expr>)<pos:position pos:line="129" pos:column="34"/></condition><then pos:line="129" pos:column="34"> <block pos:line="129" pos:column="35">{
                <expr_stmt><expr><name pos:line="130" pos:column="17">lines<pos:position pos:line="130" pos:column="22"/></name> <operator pos:line="130" pos:column="23">=<pos:position pos:line="130" pos:column="24"/></operator> <operator pos:line="130" pos:column="25">(<pos:position pos:line="130" pos:column="26"/></operator><name pos:line="130" pos:column="26">apr_array_header_t<pos:position pos:line="130" pos:column="44"/></name> <operator pos:line="130" pos:column="45">*<pos:position pos:line="130" pos:column="46"/></operator><operator pos:line="130" pos:column="46">*<pos:position pos:line="130" pos:column="47"/></operator><operator pos:line="130" pos:column="47">)<pos:position pos:line="130" pos:column="48"/></operator><name><name pos:line="130" pos:column="48">sconf<pos:position pos:line="130" pos:column="53"/></name><operator pos:line="130" pos:column="53">-&gt;<pos:position pos:line="130" pos:column="58"/></operator><name pos:line="130" pos:column="55">error_log_req<pos:position pos:line="130" pos:column="68"/></name><operator pos:line="130" pos:column="68">-&gt;<pos:position pos:line="130" pos:column="73"/></operator><name pos:line="130" pos:column="70">elts<pos:position pos:line="130" pos:column="74"/></name></name></expr>;<pos:position pos:line="130" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="131" pos:column="17">info<pos:position pos:line="131" pos:column="21"/></name><operator pos:line="131" pos:column="21">.<pos:position pos:line="131" pos:column="22"/></operator><name pos:line="131" pos:column="22">r<pos:position pos:line="131" pos:column="23"/></name></name> <operator pos:line="131" pos:column="24">=<pos:position pos:line="131" pos:column="25"/></operator> <name pos:line="131" pos:column="26">rmain<pos:position pos:line="131" pos:column="31"/></name></expr>;<pos:position pos:line="131" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="132" pos:column="17">info<pos:position pos:line="132" pos:column="21"/></name><operator pos:line="132" pos:column="21">.<pos:position pos:line="132" pos:column="22"/></operator><name pos:line="132" pos:column="22">rmain<pos:position pos:line="132" pos:column="27"/></name></name> <operator pos:line="132" pos:column="28">=<pos:position pos:line="132" pos:column="29"/></operator> <name pos:line="132" pos:column="30">rmain<pos:position pos:line="132" pos:column="35"/></name></expr>;<pos:position pos:line="132" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="133" pos:column="17">info<pos:position pos:line="133" pos:column="21"/></name><operator pos:line="133" pos:column="21">.<pos:position pos:line="133" pos:column="22"/></operator><name pos:line="133" pos:column="22">level<pos:position pos:line="133" pos:column="27"/></name></name> <operator pos:line="133" pos:column="28">=<pos:position pos:line="133" pos:column="29"/></operator> <operator pos:line="133" pos:column="30">-<pos:position pos:line="133" pos:column="31"/></operator><literal type="number" pos:line="133" pos:column="31">1<pos:position pos:line="133" pos:column="32"/></literal></expr>;<pos:position pos:line="133" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="134" pos:column="17">info<pos:position pos:line="134" pos:column="21"/></name><operator pos:line="134" pos:column="21">.<pos:position pos:line="134" pos:column="22"/></operator><name pos:line="134" pos:column="22">module_index<pos:position pos:line="134" pos:column="34"/></name></name> <operator pos:line="134" pos:column="35">=<pos:position pos:line="134" pos:column="36"/></operator> <name pos:line="134" pos:column="37">APLOG_NO_MODULE<pos:position pos:line="134" pos:column="52"/></name></expr>;<pos:position pos:line="134" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="135" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="137" pos:column="13">log_format<pos:position pos:line="137" pos:column="23"/></name> <operator pos:line="137" pos:column="24">=<pos:position pos:line="137" pos:column="25"/></operator> <name><name pos:line="137" pos:column="26">lines<pos:position pos:line="137" pos:column="31"/></name><index pos:line="137" pos:column="31">[<expr><name pos:line="137" pos:column="32">line_number<pos:position pos:line="137" pos:column="43"/></name><operator pos:line="137" pos:column="43">++<pos:position pos:line="137" pos:column="45"/></operator></expr>]<pos:position pos:line="137" pos:column="46"/></index></name></expr>;<pos:position pos:line="137" pos:column="47"/></expr_stmt>

            <if pos:line="139" pos:column="13">if <condition pos:line="139" pos:column="16">(<expr><name pos:line="139" pos:column="17">line_number<pos:position pos:line="139" pos:column="28"/></name> <operator pos:line="139" pos:column="29">==<pos:position pos:line="139" pos:column="31"/></operator> <name><name pos:line="139" pos:column="32">sconf<pos:position pos:line="139" pos:column="37"/></name><operator pos:line="139" pos:column="37">-&gt;<pos:position pos:line="139" pos:column="42"/></operator><name pos:line="139" pos:column="39">error_log_req<pos:position pos:line="139" pos:column="52"/></name><operator pos:line="139" pos:column="52">-&gt;<pos:position pos:line="139" pos:column="57"/></operator><name pos:line="139" pos:column="54">nelts<pos:position pos:line="139" pos:column="59"/></name></name></expr>)<pos:position pos:line="139" pos:column="60"/></condition><then pos:line="139" pos:column="60"> <block pos:line="139" pos:column="61">{
                <comment type="block" pos:line="140" pos:column="17">/* this is the last line of once-per-request info */</comment>
                <expr_stmt><expr><name pos:line="141" pos:column="17">line_number<pos:position pos:line="141" pos:column="28"/></name> <operator pos:line="141" pos:column="29">=<pos:position pos:line="141" pos:column="30"/></operator> <literal type="number" pos:line="141" pos:column="31">0<pos:position pos:line="141" pos:column="32"/></literal></expr>;<pos:position pos:line="141" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="142" pos:column="17">log_req_info<pos:position pos:line="142" pos:column="29"/></name> <operator pos:line="142" pos:column="30">=<pos:position pos:line="142" pos:column="31"/></operator> <literal type="number" pos:line="142" pos:column="32">0<pos:position pos:line="142" pos:column="33"/></literal></expr>;<pos:position pos:line="142" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="143" pos:column="14"/></block></then></if>
        }<pos:position pos:line="144" pos:column="10"/></block></then></if></elseif>
        <else pos:line="145" pos:column="9">else <block pos:line="145" pos:column="14">{
            <comment type="block" pos:line="146" pos:column="13">/* the actual error message */</comment>
            <expr_stmt><expr><name><name pos:line="147" pos:column="13">info<pos:position pos:line="147" pos:column="17"/></name><operator pos:line="147" pos:column="17">.<pos:position pos:line="147" pos:column="18"/></operator><name pos:line="147" pos:column="18">r<pos:position pos:line="147" pos:column="19"/></name></name>            <operator pos:line="147" pos:column="31">=<pos:position pos:line="147" pos:column="32"/></operator> <name pos:line="147" pos:column="33">r<pos:position pos:line="147" pos:column="34"/></name></expr>;<pos:position pos:line="147" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="148" pos:column="13">info<pos:position pos:line="148" pos:column="17"/></name><operator pos:line="148" pos:column="17">.<pos:position pos:line="148" pos:column="18"/></operator><name pos:line="148" pos:column="18">rmain<pos:position pos:line="148" pos:column="23"/></name></name>        <operator pos:line="148" pos:column="31">=<pos:position pos:line="148" pos:column="32"/></operator> <name pos:line="148" pos:column="33">rmain<pos:position pos:line="148" pos:column="38"/></name></expr>;<pos:position pos:line="148" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="149" pos:column="13">info<pos:position pos:line="149" pos:column="17"/></name><operator pos:line="149" pos:column="17">.<pos:position pos:line="149" pos:column="18"/></operator><name pos:line="149" pos:column="18">level<pos:position pos:line="149" pos:column="23"/></name></name>        <operator pos:line="149" pos:column="31">=<pos:position pos:line="149" pos:column="32"/></operator> <name pos:line="149" pos:column="33">level_and_mask<pos:position pos:line="149" pos:column="47"/></name></expr>;<pos:position pos:line="149" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="150" pos:column="13">info<pos:position pos:line="150" pos:column="17"/></name><operator pos:line="150" pos:column="17">.<pos:position pos:line="150" pos:column="18"/></operator><name pos:line="150" pos:column="18">module_index<pos:position pos:line="150" pos:column="30"/></name></name> <operator pos:line="150" pos:column="31">=<pos:position pos:line="150" pos:column="32"/></operator> <name pos:line="150" pos:column="33">module_index<pos:position pos:line="150" pos:column="45"/></name></expr>;<pos:position pos:line="150" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="151" pos:column="13">info<pos:position pos:line="151" pos:column="17"/></name><operator pos:line="151" pos:column="17">.<pos:position pos:line="151" pos:column="18"/></operator><name pos:line="151" pos:column="18">file<pos:position pos:line="151" pos:column="22"/></name></name>         <operator pos:line="151" pos:column="31">=<pos:position pos:line="151" pos:column="32"/></operator> <name pos:line="151" pos:column="33">file<pos:position pos:line="151" pos:column="37"/></name></expr>;<pos:position pos:line="151" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="152" pos:column="13">info<pos:position pos:line="152" pos:column="17"/></name><operator pos:line="152" pos:column="17">.<pos:position pos:line="152" pos:column="18"/></operator><name pos:line="152" pos:column="18">line<pos:position pos:line="152" pos:column="22"/></name></name>         <operator pos:line="152" pos:column="31">=<pos:position pos:line="152" pos:column="32"/></operator> <name pos:line="152" pos:column="33">line<pos:position pos:line="152" pos:column="37"/></name></expr>;<pos:position pos:line="152" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="153" pos:column="13">info<pos:position pos:line="153" pos:column="17"/></name><operator pos:line="153" pos:column="17">.<pos:position pos:line="153" pos:column="18"/></operator><name pos:line="153" pos:column="18">status<pos:position pos:line="153" pos:column="24"/></name></name>       <operator pos:line="153" pos:column="31">=<pos:position pos:line="153" pos:column="32"/></operator> <name pos:line="153" pos:column="33">status<pos:position pos:line="153" pos:column="39"/></name></expr>;<pos:position pos:line="153" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="154" pos:column="13">log_format<pos:position pos:line="154" pos:column="23"/></name> <operator pos:line="154" pos:column="24">=<pos:position pos:line="154" pos:column="25"/></operator> <ternary><condition><expr><name pos:line="154" pos:column="26">sconf<pos:position pos:line="154" pos:column="31"/></name></expr> ?<pos:position pos:line="154" pos:column="33"/></condition><then pos:line="154" pos:column="33"> <expr><name><name pos:line="154" pos:column="34">sconf<pos:position pos:line="154" pos:column="39"/></name><operator pos:line="154" pos:column="39">-&gt;<pos:position pos:line="154" pos:column="44"/></operator><name pos:line="154" pos:column="41">error_log_format<pos:position pos:line="154" pos:column="57"/></name></name></expr> <pos:position pos:line="154" pos:column="58"/></then><else pos:line="154" pos:column="58">: <expr><name pos:line="154" pos:column="60">NULL<pos:position pos:line="154" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="154" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name pos:line="155" pos:column="13">done<pos:position pos:line="155" pos:column="17"/></name> <operator pos:line="155" pos:column="18">=<pos:position pos:line="155" pos:column="19"/></operator> <literal type="number" pos:line="155" pos:column="20">1<pos:position pos:line="155" pos:column="21"/></literal></expr>;<pos:position pos:line="155" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="156" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="158" pos:column="9">/*
         * prepare and log one line
         */</comment>

        <if pos:line="162" pos:column="9">if <condition pos:line="162" pos:column="12">(<expr><name pos:line="162" pos:column="13">log_format<pos:position pos:line="162" pos:column="23"/></name> <operator pos:line="162" pos:column="24">&amp;&amp;<pos:position pos:line="162" pos:column="34"/></operator> <operator pos:line="162" pos:column="27">!<pos:position pos:line="162" pos:column="28"/></operator><name><name pos:line="162" pos:column="28">info<pos:position pos:line="162" pos:column="32"/></name><operator pos:line="162" pos:column="32">.<pos:position pos:line="162" pos:column="33"/></operator><name pos:line="162" pos:column="33">startup<pos:position pos:line="162" pos:column="40"/></name></name></expr>)<pos:position pos:line="162" pos:column="41"/></condition><then pos:line="162" pos:column="41"> <block pos:line="162" pos:column="42">{
            <expr_stmt><expr><name pos:line="163" pos:column="13">len<pos:position pos:line="163" pos:column="16"/></name> <operator pos:line="163" pos:column="17">+=<pos:position pos:line="163" pos:column="19"/></operator> <call><name pos:line="163" pos:column="20">do_errorlog_format<pos:position pos:line="163" pos:column="38"/></name><argument_list pos:line="163" pos:column="38">(<argument><expr><name pos:line="163" pos:column="39">log_format<pos:position pos:line="163" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="163" pos:column="51">&amp;<pos:position pos:line="163" pos:column="56"/></operator><name pos:line="163" pos:column="52">info<pos:position pos:line="163" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="58">errstr<pos:position pos:line="163" pos:column="64"/></name> <operator pos:line="163" pos:column="65">+<pos:position pos:line="163" pos:column="66"/></operator> <name pos:line="163" pos:column="67">len<pos:position pos:line="163" pos:column="70"/></name></expr></argument>,
                                      <argument><expr><name pos:line="164" pos:column="39">MAX_STRING_LEN<pos:position pos:line="164" pos:column="53"/></name> <operator pos:line="164" pos:column="54">-<pos:position pos:line="164" pos:column="55"/></operator> <name pos:line="164" pos:column="56">len<pos:position pos:line="164" pos:column="59"/></name></expr></argument>,
                                      <argument><expr><operator pos:line="165" pos:column="39">&amp;<pos:position pos:line="165" pos:column="44"/></operator><name pos:line="165" pos:column="40">errstr_start<pos:position pos:line="165" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="165" pos:column="54">&amp;<pos:position pos:line="165" pos:column="59"/></operator><name pos:line="165" pos:column="55">errstr_end<pos:position pos:line="165" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="67">fmt<pos:position pos:line="165" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="72">args<pos:position pos:line="165" pos:column="76"/></name></expr></argument>)<pos:position pos:line="165" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="166" pos:column="10"/></block></then>
        <else pos:line="167" pos:column="9">else <block pos:line="167" pos:column="14">{
            <expr_stmt><expr><name pos:line="168" pos:column="13">len<pos:position pos:line="168" pos:column="16"/></name> <operator pos:line="168" pos:column="17">+=<pos:position pos:line="168" pos:column="19"/></operator> <call><name pos:line="168" pos:column="20">do_errorlog_default<pos:position pos:line="168" pos:column="39"/></name><argument_list pos:line="168" pos:column="39">(<argument><expr><operator pos:line="168" pos:column="40">&amp;<pos:position pos:line="168" pos:column="45"/></operator><name pos:line="168" pos:column="41">info<pos:position pos:line="168" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="47">errstr<pos:position pos:line="168" pos:column="53"/></name> <operator pos:line="168" pos:column="54">+<pos:position pos:line="168" pos:column="55"/></operator> <name pos:line="168" pos:column="56">len<pos:position pos:line="168" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="61">MAX_STRING_LEN<pos:position pos:line="168" pos:column="75"/></name> <operator pos:line="168" pos:column="76">-<pos:position pos:line="168" pos:column="77"/></operator> <name pos:line="168" pos:column="78">len<pos:position pos:line="168" pos:column="81"/></name></expr></argument>,
                                       <argument><expr><operator pos:line="169" pos:column="40">&amp;<pos:position pos:line="169" pos:column="45"/></operator><name pos:line="169" pos:column="41">errstr_start<pos:position pos:line="169" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="169" pos:column="55">&amp;<pos:position pos:line="169" pos:column="60"/></operator><name pos:line="169" pos:column="56">errstr_end<pos:position pos:line="169" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="68">fmt<pos:position pos:line="169" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="73">args<pos:position pos:line="169" pos:column="77"/></name></expr></argument>)<pos:position pos:line="169" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="170" pos:column="10"/></block></else></if>

        <if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><operator pos:line="172" pos:column="13">!<pos:position pos:line="172" pos:column="14"/></operator><operator pos:line="172" pos:column="14">*<pos:position pos:line="172" pos:column="15"/></operator><name pos:line="172" pos:column="15">errstr<pos:position pos:line="172" pos:column="21"/></name></expr>)<pos:position pos:line="172" pos:column="22"/></condition><then pos:line="172" pos:column="22"> <block pos:line="172" pos:column="23">{
            <comment type="block" pos:line="173" pos:column="13">/*
             * Don't log empty lines. This can happen with once-per-conn/req
             * info if an item with AP_ERRORLOG_FLAG_REQUIRED is NULL.
             */</comment>
            <continue pos:line="177" pos:column="13">continue;<pos:position pos:line="177" pos:column="22"/></continue>
        }<pos:position pos:line="178" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="179" pos:column="9">write_logline<pos:position pos:line="179" pos:column="22"/></name><argument_list pos:line="179" pos:column="22">(<argument><expr><name pos:line="179" pos:column="23">errstr<pos:position pos:line="179" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="31">len<pos:position pos:line="179" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="36">logf<pos:position pos:line="179" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="42">level_and_mask<pos:position pos:line="179" pos:column="56"/></name></expr></argument>)<pos:position pos:line="179" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="58"/></expr_stmt>

        <if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><name pos:line="181" pos:column="13">done<pos:position pos:line="181" pos:column="17"/></name></expr>)<pos:position pos:line="181" pos:column="18"/></condition><then pos:line="181" pos:column="18"> <block pos:line="181" pos:column="19">{
            <comment type="block" pos:line="182" pos:column="13">/*
             * We don't call the error_log hook for per-request/per-conn
             * lines, and we only pass the actual log message, not the
             * prefix and suffix.
             */</comment>
            <expr_stmt><expr><name><name pos:line="187" pos:column="13">errstr<pos:position pos:line="187" pos:column="19"/></name><index pos:line="187" pos:column="19">[<expr><name pos:line="187" pos:column="20">errstr_end<pos:position pos:line="187" pos:column="30"/></name></expr>]<pos:position pos:line="187" pos:column="31"/></index></name> <operator pos:line="187" pos:column="32">=<pos:position pos:line="187" pos:column="33"/></operator> <literal type="char" pos:line="187" pos:column="34">'\0'<pos:position pos:line="187" pos:column="38"/></literal></expr>;<pos:position pos:line="187" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="188" pos:column="13">ap_run_error_log<pos:position pos:line="188" pos:column="29"/></name><argument_list pos:line="188" pos:column="29">(<argument><expr><operator pos:line="188" pos:column="30">&amp;<pos:position pos:line="188" pos:column="35"/></operator><name pos:line="188" pos:column="31">info<pos:position pos:line="188" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="37">errstr<pos:position pos:line="188" pos:column="43"/></name> <operator pos:line="188" pos:column="44">+<pos:position pos:line="188" pos:column="45"/></operator> <name pos:line="188" pos:column="46">errstr_start<pos:position pos:line="188" pos:column="58"/></name></expr></argument>)<pos:position pos:line="188" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="189" pos:column="10"/></block></then></if>

        <expr_stmt><expr><operator pos:line="191" pos:column="9">*<pos:position pos:line="191" pos:column="10"/></operator><name pos:line="191" pos:column="10">errstr<pos:position pos:line="191" pos:column="16"/></name> <operator pos:line="191" pos:column="17">=<pos:position pos:line="191" pos:column="18"/></operator> <literal type="char" pos:line="191" pos:column="19">'\0'<pos:position pos:line="191" pos:column="23"/></literal></expr>;<pos:position pos:line="191" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="192" pos:column="6"/></block></while>
}<pos:position pos:line="193" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2619_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">XML_Content<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type>
<name pos:line="2" pos:column="1">build_model<pos:position pos:line="2" pos:column="12"/></name> <parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">XML_Parser<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">parser<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">DTD<pos:position pos:line="4" pos:column="6"/></name> <modifier pos:line="4" pos:column="7">*<pos:position pos:line="4" pos:column="8"/></modifier> <specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier></type> <name pos:line="4" pos:column="15">dtd<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">_dtd<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>  <comment type="block" pos:line="4" pos:column="28">/* save one level of indirection */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">XML_Content<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">ret<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">XML_Content<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">cpos<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">XML_Char<pos:position pos:line="7" pos:column="11"/></name> <modifier pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></modifier></type> <name pos:line="7" pos:column="14">str<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">allocsize<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><operator pos:line="8" pos:column="19">(<pos:position pos:line="8" pos:column="20"/></operator><name><name pos:line="8" pos:column="20">dtd<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">scaffCount<pos:position pos:line="8" pos:column="35"/></name></name> <operator pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></operator> <sizeof pos:line="8" pos:column="38">sizeof<argument_list pos:line="8" pos:column="44">(<argument><expr><name pos:line="8" pos:column="45">XML_Content<pos:position pos:line="8" pos:column="56"/></name></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></sizeof>
                   <operator pos:line="9" pos:column="20">+<pos:position pos:line="9" pos:column="21"/></operator> <operator pos:line="9" pos:column="22">(<pos:position pos:line="9" pos:column="23"/></operator><name><name pos:line="9" pos:column="23">dtd<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">contentStringLen<pos:position pos:line="9" pos:column="44"/></name></name> <operator pos:line="9" pos:column="45">*<pos:position pos:line="9" pos:column="46"/></operator> <sizeof pos:line="9" pos:column="47">sizeof<argument_list pos:line="9" pos:column="53">(<argument><expr><name pos:line="9" pos:column="54">XML_Char<pos:position pos:line="9" pos:column="62"/></name></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></sizeof><operator pos:line="9" pos:column="63">)<pos:position pos:line="9" pos:column="64"/></operator><operator pos:line="9" pos:column="64">)<pos:position pos:line="9" pos:column="65"/></operator></expr></init></decl>;<pos:position pos:line="9" pos:column="66"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">ret<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">XML_Content<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></operator><operator pos:line="11" pos:column="23">)<pos:position pos:line="11" pos:column="24"/></operator><call><name pos:line="11" pos:column="24">MALLOC<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">allocsize<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">ret<pos:position pos:line="12" pos:column="11"/></name></expr>)<pos:position pos:line="12" pos:column="12"/></condition><then pos:line="12" pos:column="12">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">NULL<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">str<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator>  <operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">XML_Char<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></operator><operator pos:line="15" pos:column="21">)<pos:position pos:line="15" pos:column="22"/></operator> <operator pos:line="15" pos:column="23">(<pos:position pos:line="15" pos:column="24"/></operator><operator pos:line="15" pos:column="24">&amp;<pos:position pos:line="15" pos:column="29"/></operator><name><name pos:line="15" pos:column="25">ret<pos:position pos:line="15" pos:column="28"/></name><index pos:line="15" pos:column="28">[<expr><name><name pos:line="15" pos:column="29">dtd<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">scaffCount<pos:position pos:line="15" pos:column="44"/></name></name></expr>]<pos:position pos:line="15" pos:column="45"/></index></name><operator pos:line="15" pos:column="45">)<pos:position pos:line="15" pos:column="46"/></operator></expr>;<pos:position pos:line="15" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">cpos<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <operator pos:line="16" pos:column="10">&amp;<pos:position pos:line="16" pos:column="15"/></operator><name><name pos:line="16" pos:column="11">ret<pos:position pos:line="16" pos:column="14"/></name><index pos:line="16" pos:column="14">[<expr><literal type="number" pos:line="16" pos:column="15">1<pos:position pos:line="16" pos:column="16"/></literal></expr>]<pos:position pos:line="16" pos:column="17"/></index></name></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">build_node<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name pos:line="18" pos:column="14">parser<pos:position pos:line="18" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="22">0<pos:position pos:line="18" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="25">ret<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="30">&amp;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="31">cpos<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="37">&amp;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="38">str<pos:position pos:line="18" pos:column="41"/></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
  <return pos:line="19" pos:column="3">return <expr><name pos:line="19" pos:column="10">ret<pos:position pos:line="19" pos:column="13"/></name></expr>;<pos:position pos:line="19" pos:column="14"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

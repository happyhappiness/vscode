<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1031_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parseargline<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">str<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">a1<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier><modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">a2<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier><modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">a3<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">cp<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">isquoted<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

<cpp:define pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">define<pos:position pos:line="6" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="6" pos:column="9">SKIP_WHITESPACE<pos:position pos:line="6" pos:column="24"/></name><parameter_list pos:line="6" pos:column="24">(<parameter><type><name pos:line="6" pos:column="25">cp<pos:position pos:line="6" pos:column="27"/></name></type></parameter>)<pos:position pos:line="6" pos:column="28"/></parameter_list></cpp:macro> \
    <cpp:value pos:line="7" pos:column="5">for ( ; *cp == ' ' || *cp == '\t'; ) { \
        cp++; \
    };<pos:position pos:line="9" pos:column="7"/></cpp:value></cpp:define>

<cpp:define pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">define<pos:position pos:line="11" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="11" pos:column="9">CHECK_QUOTATION<pos:position pos:line="11" pos:column="24"/></name><parameter_list pos:line="11" pos:column="24">(<parameter><type><name pos:line="11" pos:column="25">cp<pos:position pos:line="11" pos:column="27"/></name></type></parameter>,<parameter><type><name pos:line="11" pos:column="28">isquoted<pos:position pos:line="11" pos:column="36"/></name></type></parameter>)<pos:position pos:line="11" pos:column="37"/></parameter_list></cpp:macro> \
    <cpp:value pos:line="12" pos:column="5">isquoted = 0; \
    if (*cp == '"') { \
        isquoted = 1; \
        cp++; \
    }<pos:position pos:line="16" pos:column="6"/></cpp:value></cpp:define>

<cpp:define pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">define<pos:position pos:line="18" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="18" pos:column="9">DETERMINE_NEXTSTRING<pos:position pos:line="18" pos:column="29"/></name><parameter_list pos:line="18" pos:column="29">(<parameter><type><name pos:line="18" pos:column="30">cp<pos:position pos:line="18" pos:column="32"/></name></type></parameter>,<parameter><type><name pos:line="18" pos:column="33">isquoted<pos:position pos:line="18" pos:column="41"/></name></type></parameter>)<pos:position pos:line="18" pos:column="42"/></parameter_list></cpp:macro> \
    <cpp:value pos:line="19" pos:column="5">for ( ; *cp != '\0'; cp++) { \
        if (   (isquoted    &amp;&amp; (*cp     == ' ' || *cp     == '\t')) \
            || (*cp == '\\' &amp;&amp; (*(cp+1) == ' ' || *(cp+1) == '\t'))) { \
            cp++; \
            continue; \
        } \
        if (   (!isquoted &amp;&amp; (*cp == ' ' || *cp == '\t')) \
            || (isquoted  &amp;&amp; *cp == '"')                  ) { \
            break; \
        } \
    }<pos:position pos:line="29" pos:column="6"/></cpp:value></cpp:define>

    <expr_stmt><expr><name pos:line="31" pos:column="5">cp<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <name pos:line="31" pos:column="10">str<pos:position pos:line="31" pos:column="13"/></name></expr>;<pos:position pos:line="31" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">SKIP_WHITESPACE<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">cp<pos:position pos:line="32" pos:column="23"/></name></expr></argument>)<pos:position pos:line="32" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="34" pos:column="5">/*  determine first argument */</comment>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">CHECK_QUOTATION<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">cp<pos:position pos:line="35" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="25">isquoted<pos:position pos:line="35" pos:column="33"/></name></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="36" pos:column="5">*<pos:position pos:line="36" pos:column="6"/></operator><name pos:line="36" pos:column="6">a1<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <name pos:line="36" pos:column="11">cp<pos:position pos:line="36" pos:column="13"/></name></expr>;<pos:position pos:line="36" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">DETERMINE_NEXTSTRING<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">cp<pos:position pos:line="37" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="30">isquoted<pos:position pos:line="37" pos:column="38"/></name></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">*<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">cp<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">==<pos:position pos:line="38" pos:column="15"/></operator> <literal type="char" pos:line="38" pos:column="16">'\0'<pos:position pos:line="38" pos:column="20"/></literal></expr>)<pos:position pos:line="38" pos:column="21"/></condition><then pos:line="38" pos:column="21"> <block pos:line="38" pos:column="22">{
        <return pos:line="39" pos:column="9">return <expr><literal type="number" pos:line="39" pos:column="16">1<pos:position pos:line="39" pos:column="17"/></literal></expr>;<pos:position pos:line="39" pos:column="18"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="41" pos:column="5">*<pos:position pos:line="41" pos:column="6"/></operator><name pos:line="41" pos:column="6">cp<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">++<pos:position pos:line="41" pos:column="10"/></operator> <operator pos:line="41" pos:column="11">=<pos:position pos:line="41" pos:column="12"/></operator> <literal type="char" pos:line="41" pos:column="13">'\0'<pos:position pos:line="41" pos:column="17"/></literal></expr>;<pos:position pos:line="41" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">SKIP_WHITESPACE<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">cp<pos:position pos:line="43" pos:column="23"/></name></expr></argument>)<pos:position pos:line="43" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="45" pos:column="5">/*  determine second argument */</comment>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">CHECK_QUOTATION<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">cp<pos:position pos:line="46" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="25">isquoted<pos:position pos:line="46" pos:column="33"/></name></expr></argument>)<pos:position pos:line="46" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="47" pos:column="5">*<pos:position pos:line="47" pos:column="6"/></operator><name pos:line="47" pos:column="6">a2<pos:position pos:line="47" pos:column="8"/></name> <operator pos:line="47" pos:column="9">=<pos:position pos:line="47" pos:column="10"/></operator> <name pos:line="47" pos:column="11">cp<pos:position pos:line="47" pos:column="13"/></name></expr>;<pos:position pos:line="47" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">DETERMINE_NEXTSTRING<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">cp<pos:position pos:line="48" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="30">isquoted<pos:position pos:line="48" pos:column="38"/></name></expr></argument>)<pos:position pos:line="48" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">*<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">cp<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">==<pos:position pos:line="49" pos:column="15"/></operator> <literal type="char" pos:line="49" pos:column="16">'\0'<pos:position pos:line="49" pos:column="20"/></literal></expr>)<pos:position pos:line="49" pos:column="21"/></condition><then pos:line="49" pos:column="21"> <block pos:line="49" pos:column="22">{
        <expr_stmt><expr><operator pos:line="50" pos:column="9">*<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">cp<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">++<pos:position pos:line="50" pos:column="14"/></operator> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <literal type="char" pos:line="50" pos:column="17">'\0'<pos:position pos:line="50" pos:column="21"/></literal></expr>;<pos:position pos:line="50" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="51" pos:column="9">*<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">a3<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">=<pos:position pos:line="51" pos:column="14"/></operator> <name pos:line="51" pos:column="15">NULL<pos:position pos:line="51" pos:column="19"/></name></expr>;<pos:position pos:line="51" pos:column="20"/></expr_stmt>
        <return pos:line="52" pos:column="9">return <expr><literal type="number" pos:line="52" pos:column="16">0<pos:position pos:line="52" pos:column="17"/></literal></expr>;<pos:position pos:line="52" pos:column="18"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="54" pos:column="5">*<pos:position pos:line="54" pos:column="6"/></operator><name pos:line="54" pos:column="6">cp<pos:position pos:line="54" pos:column="8"/></name><operator pos:line="54" pos:column="8">++<pos:position pos:line="54" pos:column="10"/></operator> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <literal type="char" pos:line="54" pos:column="13">'\0'<pos:position pos:line="54" pos:column="17"/></literal></expr>;<pos:position pos:line="54" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="56" pos:column="5">SKIP_WHITESPACE<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">cp<pos:position pos:line="56" pos:column="23"/></name></expr></argument>)<pos:position pos:line="56" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="58" pos:column="5">/* again check if there are only two arguments */</comment>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><operator pos:line="59" pos:column="9">*<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">cp<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">==<pos:position pos:line="59" pos:column="15"/></operator> <literal type="char" pos:line="59" pos:column="16">'\0'<pos:position pos:line="59" pos:column="20"/></literal></expr>)<pos:position pos:line="59" pos:column="21"/></condition><then pos:line="59" pos:column="21"> <block pos:line="59" pos:column="22">{
        <expr_stmt><expr><operator pos:line="60" pos:column="9">*<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">cp<pos:position pos:line="60" pos:column="12"/></name><operator pos:line="60" pos:column="12">++<pos:position pos:line="60" pos:column="14"/></operator> <operator pos:line="60" pos:column="15">=<pos:position pos:line="60" pos:column="16"/></operator> <literal type="char" pos:line="60" pos:column="17">'\0'<pos:position pos:line="60" pos:column="21"/></literal></expr>;<pos:position pos:line="60" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="61" pos:column="9">*<pos:position pos:line="61" pos:column="10"/></operator><name pos:line="61" pos:column="10">a3<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">=<pos:position pos:line="61" pos:column="14"/></operator> <name pos:line="61" pos:column="15">NULL<pos:position pos:line="61" pos:column="19"/></name></expr>;<pos:position pos:line="61" pos:column="20"/></expr_stmt>
        <return pos:line="62" pos:column="9">return <expr><literal type="number" pos:line="62" pos:column="16">0<pos:position pos:line="62" pos:column="17"/></literal></expr>;<pos:position pos:line="62" pos:column="18"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="65" pos:column="5">/*  determine second argument */</comment>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">CHECK_QUOTATION<pos:position pos:line="66" pos:column="20"/></name><argument_list pos:line="66" pos:column="20">(<argument><expr><name pos:line="66" pos:column="21">cp<pos:position pos:line="66" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="25">isquoted<pos:position pos:line="66" pos:column="33"/></name></expr></argument>)<pos:position pos:line="66" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="67" pos:column="5">*<pos:position pos:line="67" pos:column="6"/></operator><name pos:line="67" pos:column="6">a3<pos:position pos:line="67" pos:column="8"/></name> <operator pos:line="67" pos:column="9">=<pos:position pos:line="67" pos:column="10"/></operator> <name pos:line="67" pos:column="11">cp<pos:position pos:line="67" pos:column="13"/></name></expr>;<pos:position pos:line="67" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">DETERMINE_NEXTSTRING<pos:position pos:line="68" pos:column="25"/></name><argument_list pos:line="68" pos:column="25">(<argument><expr><name pos:line="68" pos:column="26">cp<pos:position pos:line="68" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="30">isquoted<pos:position pos:line="68" pos:column="38"/></name></expr></argument>)<pos:position pos:line="68" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="69" pos:column="5">*<pos:position pos:line="69" pos:column="6"/></operator><name pos:line="69" pos:column="6">cp<pos:position pos:line="69" pos:column="8"/></name><operator pos:line="69" pos:column="8">++<pos:position pos:line="69" pos:column="10"/></operator> <operator pos:line="69" pos:column="11">=<pos:position pos:line="69" pos:column="12"/></operator> <literal type="char" pos:line="69" pos:column="13">'\0'<pos:position pos:line="69" pos:column="17"/></literal></expr>;<pos:position pos:line="69" pos:column="18"/></expr_stmt>

    <return pos:line="71" pos:column="5">return <expr><literal type="number" pos:line="71" pos:column="12">0<pos:position pos:line="71" pos:column="13"/></literal></expr>;<pos:position pos:line="71" pos:column="14"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

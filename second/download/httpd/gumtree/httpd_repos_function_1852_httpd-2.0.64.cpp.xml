<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1852_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">open_scoreboard<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">apr_pool_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">pconf<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">APR_HAS_SHARED_MEMORY<pos:position pos:line="3" pos:column="26"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">fname<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name pos:line="5" pos:column="19">NULL<pos:position pos:line="5" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_pool_t<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">global_pool<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* We don't want to have to recreate the scoreboard after
     * restarts, so we'll create a global pool and never clean it.
     */</comment>
    <expr_stmt><expr><name pos:line="11" pos:column="5">rv<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">apr_pool_create<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><operator pos:line="11" pos:column="26">&amp;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="27">global_pool<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">NULL<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">rv<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">!=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">APR_SUCCESS<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27"> <block pos:line="12" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_log_error<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">APLOG_MARK<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">APLOG_CRIT<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">rv<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">NULL<pos:position pos:line="13" pos:column="54"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="14" pos:column="22">"Fatal error: unable to create global pool "<pos:position pos:line="14" pos:column="66"/></literal>
                     <literal type="string" pos:line="15" pos:column="22">"for use with by the scoreboard"<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">rv<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* The config says to create a name-based shmem */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">ap_scoreboard_fname<pos:position pos:line="20" pos:column="28"/></name></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29"> <block pos:line="20" pos:column="30">{
        <comment type="block" pos:line="21" pos:column="9">/* make sure it's an absolute pathname */</comment>
        <expr_stmt><expr><name pos:line="22" pos:column="9">fname<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">ap_server_root_relative<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><name pos:line="22" pos:column="41">pconf<pos:position pos:line="22" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">ap_scoreboard_fname<pos:position pos:line="22" pos:column="67"/></name></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="69"/></expr_stmt>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">fname<pos:position pos:line="23" pos:column="19"/></name></expr>)<pos:position pos:line="23" pos:column="20"/></condition><then pos:line="23" pos:column="20"> <block pos:line="23" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">ap_log_error<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">APLOG_MARK<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="38">APLOG_CRIT<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="50">APR_EBADPATH<pos:position pos:line="24" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="64">NULL<pos:position pos:line="24" pos:column="68"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="25" pos:column="26">"Fatal error: Invalid Scoreboard path %s"<pos:position pos:line="25" pos:column="67"/></literal></expr></argument>,
                         <argument><expr><name pos:line="26" pos:column="26">ap_scoreboard_fname<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt>
            <return pos:line="27" pos:column="13">return <expr><name pos:line="27" pos:column="20">APR_EBADPATH<pos:position pos:line="27" pos:column="32"/></name></expr>;<pos:position pos:line="27" pos:column="33"/></return>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
        <return pos:line="29" pos:column="9">return <expr><call><name pos:line="29" pos:column="16">create_namebased_scoreboard<pos:position pos:line="29" pos:column="43"/></name><argument_list pos:line="29" pos:column="43">(<argument><expr><name pos:line="29" pos:column="44">global_pool<pos:position pos:line="29" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="57">fname<pos:position pos:line="29" pos:column="62"/></name></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="64"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then>
    <else pos:line="31" pos:column="5">else <block pos:line="31" pos:column="10">{ <comment type="block" pos:line="31" pos:column="12">/* config didn't specify, we get to choose shmem type */</comment>
        <expr_stmt><expr><name pos:line="32" pos:column="9">rv<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">apr_shm_create<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><operator pos:line="32" pos:column="29">&amp;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="30">ap_scoreboard_shm<pos:position pos:line="32" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="49">scoreboard_size<pos:position pos:line="32" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="66">NULL<pos:position pos:line="32" pos:column="70"/></name></expr></argument>,
                            <argument><expr><name pos:line="33" pos:column="29">global_pool<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt> <comment type="block" pos:line="33" pos:column="43">/* anonymous shared memory */</comment>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">(<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">rv<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">!=<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">APR_SUCCESS<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">)<pos:position pos:line="34" pos:column="32"/></operator> <operator pos:line="34" pos:column="33">&amp;&amp;<pos:position pos:line="34" pos:column="43"/></operator> <operator pos:line="34" pos:column="36">(<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="37">rv<pos:position pos:line="34" pos:column="39"/></name> <operator pos:line="34" pos:column="40">!=<pos:position pos:line="34" pos:column="42"/></operator> <name pos:line="34" pos:column="43">APR_ENOTIMPL<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">)<pos:position pos:line="34" pos:column="56"/></operator></expr>)<pos:position pos:line="34" pos:column="57"/></condition><then pos:line="34" pos:column="57"> <block pos:line="34" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">ap_log_error<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">APLOG_MARK<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="38">APLOG_CRIT<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">rv<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="54">NULL<pos:position pos:line="35" pos:column="58"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="36" pos:column="26">"Unable to create scoreboard "<pos:position pos:line="36" pos:column="56"/></literal>
                         <literal type="string" pos:line="37" pos:column="26">"(anonymous shared memory failure)"<pos:position pos:line="37" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="63"/></expr_stmt>
            <return pos:line="38" pos:column="13">return <expr><name pos:line="38" pos:column="20">rv<pos:position pos:line="38" pos:column="22"/></name></expr>;<pos:position pos:line="38" pos:column="23"/></return>
        }<pos:position pos:line="39" pos:column="10"/></block></then>
        <comment type="block" pos:line="40" pos:column="9">/* Make up a filename and do name-based shmem */</comment>
        <elseif pos:line="41" pos:column="9">else <if pos:line="41" pos:column="14">if <condition pos:line="41" pos:column="17">(<expr><name pos:line="41" pos:column="18">rv<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">==<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="24">APR_ENOTIMPL<pos:position pos:line="41" pos:column="36"/></name></expr>)<pos:position pos:line="41" pos:column="37"/></condition><then pos:line="41" pos:column="37"> <block pos:line="41" pos:column="38">{
            <comment type="block" pos:line="42" pos:column="13">/* Make sure it's an absolute pathname */</comment>
            <expr_stmt><expr><name pos:line="43" pos:column="13">ap_scoreboard_fname<pos:position pos:line="43" pos:column="32"/></name> <operator pos:line="43" pos:column="33">=<pos:position pos:line="43" pos:column="34"/></operator> <name pos:line="43" pos:column="35">DEFAULT_SCOREBOARD<pos:position pos:line="43" pos:column="53"/></name></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="44" pos:column="13">fname<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <call><name pos:line="44" pos:column="21">ap_server_root_relative<pos:position pos:line="44" pos:column="44"/></name><argument_list pos:line="44" pos:column="44">(<argument><expr><name pos:line="44" pos:column="45">pconf<pos:position pos:line="44" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="52">ap_scoreboard_fname<pos:position pos:line="44" pos:column="71"/></name></expr></argument>)<pos:position pos:line="44" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="73"/></expr_stmt>

            <return pos:line="46" pos:column="13">return <expr><call><name pos:line="46" pos:column="20">create_namebased_scoreboard<pos:position pos:line="46" pos:column="47"/></name><argument_list pos:line="46" pos:column="47">(<argument><expr><name pos:line="46" pos:column="48">global_pool<pos:position pos:line="46" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="61">fname<pos:position pos:line="46" pos:column="66"/></name></expr></argument>)<pos:position pos:line="46" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="68"/></return>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="48" pos:column="6"/></block></else></if>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="49" pos:column="8">/* APR_HAS_SHARED_MEMORY */</comment>
    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">APR_SUCCESS<pos:position pos:line="50" pos:column="23"/></name></expr>;<pos:position pos:line="50" pos:column="24"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

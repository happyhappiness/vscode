<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3603.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">process_mkcol_body<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">request_rec<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">r<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* This is snarfed from ap_setup_client_block(). We could get pretty
     * close to this behavior by passing REQUEST_NO_BODY, but we need to
     * return HTTP_UNSUPPORTED_MEDIA_TYPE (while ap_setup_client_block
     * returns HTTP_REQUEST_ENTITY_TOO_LARGE). */</comment>

    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">tenc<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><call><name pos:line="8" pos:column="24">apr_table_get<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><name><name pos:line="8" pos:column="38">r<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">headers_in<pos:position pos:line="8" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="53">"Transfer-Encoding"<pos:position pos:line="8" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">lenp<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><call><name pos:line="9" pos:column="24">apr_table_get<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><name><name pos:line="9" pos:column="38">r<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">headers_in<pos:position pos:line="9" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="53">"Content-Length"<pos:position pos:line="9" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="71"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* make sure to set the Apache request fields properly. */</comment>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">r<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">read_body<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">REQUEST_NO_BODY<pos:position pos:line="12" pos:column="35"/></name></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">r<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">read_chunked<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">r<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">remaining<pos:position pos:line="14" pos:column="17"/></name></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <literal type="number" pos:line="14" pos:column="20">0<pos:position pos:line="14" pos:column="21"/></literal></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">tenc<pos:position pos:line="16" pos:column="13"/></name></expr>)<pos:position pos:line="16" pos:column="14"/></condition><then pos:line="16" pos:column="14"> <block pos:line="16" pos:column="15">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">strcasecmp<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">tenc<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="30">"chunked"<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="41"/></condition><then pos:line="17" pos:column="41"> <block pos:line="17" pos:column="42">{
            <comment type="block" pos:line="18" pos:column="13">/* Use this instead of Apache's default error string */</comment>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">ap_log_rerror<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">APLOG_MARK<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">APLOG_ERR<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="50">0<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">r<pos:position pos:line="19" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="20" pos:column="27">"Unknown Transfer-Encoding %s"<pos:position pos:line="20" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="59">tenc<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>
            <return pos:line="21" pos:column="13">return <expr><name pos:line="21" pos:column="20">HTTP_NOT_IMPLEMENTED<pos:position pos:line="21" pos:column="40"/></name></expr>;<pos:position pos:line="21" pos:column="41"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="24" pos:column="9">r<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">read_chunked<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <literal type="number" pos:line="24" pos:column="27">1<pos:position pos:line="24" pos:column="28"/></literal></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then>
    <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><name pos:line="26" pos:column="14">lenp<pos:position pos:line="26" pos:column="18"/></name></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19"> <block pos:line="26" pos:column="20">{
        <decl_stmt><decl><type><specifier pos:line="27" pos:column="9">const<pos:position pos:line="27" pos:column="14"/></specifier> <name pos:line="27" pos:column="15">char<pos:position pos:line="27" pos:column="19"/></name> <modifier pos:line="27" pos:column="20">*<pos:position pos:line="27" pos:column="21"/></modifier></type><name pos:line="27" pos:column="21">pos<pos:position pos:line="27" pos:column="24"/></name> <init pos:line="27" pos:column="25">= <expr><name pos:line="27" pos:column="27">lenp<pos:position pos:line="27" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="32"/></decl_stmt>

        <while pos:line="29" pos:column="9">while <condition pos:line="29" pos:column="15">(<expr><call><name pos:line="29" pos:column="16">apr_isdigit<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><operator pos:line="29" pos:column="28">*<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="29">pos<pos:position pos:line="29" pos:column="32"/></name></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call> <operator pos:line="29" pos:column="34">||<pos:position pos:line="29" pos:column="36"/></operator> <call><name pos:line="29" pos:column="37">apr_isspace<pos:position pos:line="29" pos:column="48"/></name><argument_list pos:line="29" pos:column="48">(<argument><expr><operator pos:line="29" pos:column="49">*<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="50">pos<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="55"/></condition> <block pos:line="29" pos:column="56">{
            <expr_stmt><expr><operator pos:line="30" pos:column="13">++<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">pos<pos:position pos:line="30" pos:column="18"/></name></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></while>

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">*<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">pos<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">!=<pos:position pos:line="33" pos:column="20"/></operator> <literal type="char" pos:line="33" pos:column="21">'\0'<pos:position pos:line="33" pos:column="25"/></literal></expr>)<pos:position pos:line="33" pos:column="26"/></condition><then pos:line="33" pos:column="26"> <block pos:line="33" pos:column="27">{
            <comment type="block" pos:line="34" pos:column="13">/* This supplies additional information for the default message. */</comment>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">ap_log_rerror<pos:position pos:line="35" pos:column="26"/></name><argument_list pos:line="35" pos:column="26">(<argument><expr><name pos:line="35" pos:column="27">APLOG_MARK<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">APLOG_ERR<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="50">0<pos:position pos:line="35" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="53">r<pos:position pos:line="35" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="36" pos:column="27">"Invalid Content-Length %s"<pos:position pos:line="36" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="56">lenp<pos:position pos:line="36" pos:column="60"/></name></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="62"/></expr_stmt>
            <return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">HTTP_BAD_REQUEST<pos:position pos:line="37" pos:column="36"/></name></expr>;<pos:position pos:line="37" pos:column="37"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="40" pos:column="9">r<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">remaining<pos:position pos:line="40" pos:column="21"/></name></name> <operator pos:line="40" pos:column="22">=<pos:position pos:line="40" pos:column="23"/></operator> <call><name pos:line="40" pos:column="24">apr_atoi64<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">lenp<pos:position pos:line="40" pos:column="39"/></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name><name pos:line="43" pos:column="9">r<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">-&gt;<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="12">read_chunked<pos:position pos:line="43" pos:column="24"/></name></name> <operator pos:line="43" pos:column="25">||<pos:position pos:line="43" pos:column="27"/></operator> <name><name pos:line="43" pos:column="28">r<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">-&gt;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="31">remaining<pos:position pos:line="43" pos:column="40"/></name></name> <operator pos:line="43" pos:column="41">&gt;<pos:position pos:line="43" pos:column="45"/></operator> <literal type="number" pos:line="43" pos:column="43">0<pos:position pos:line="43" pos:column="44"/></literal></expr>)<pos:position pos:line="43" pos:column="45"/></condition><then pos:line="43" pos:column="45"> <block pos:line="43" pos:column="46">{
        <comment type="block" pos:line="44" pos:column="9">/* ### log something? */</comment>

        <comment type="block" pos:line="46" pos:column="9">/* Apache will supply a default error for this. */</comment>
        <return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">HTTP_UNSUPPORTED_MEDIA_TYPE<pos:position pos:line="47" pos:column="43"/></name></expr>;<pos:position pos:line="47" pos:column="44"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="50" pos:column="5">/*
     * Get rid of the body. this will call ap_setup_client_block(), but
     * our copy above has already verified its work.
     */</comment>
    <return pos:line="54" pos:column="5">return <expr><call><name pos:line="54" pos:column="12">ap_discard_request_body<pos:position pos:line="54" pos:column="35"/></name><argument_list pos:line="54" pos:column="35">(<argument><expr><name pos:line="54" pos:column="36">r<pos:position pos:line="54" pos:column="37"/></name></expr></argument>)<pos:position pos:line="54" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="39"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1302_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_bucket<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">find_end_sequence<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">apr_bucket<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">dptr<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">include_ctx_t<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">ctx<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, 
                                     <parameter><decl><type><name pos:line="2" pos:column="38">apr_bucket_brigade<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">bb<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">len<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">c<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">buf<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">str<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name><name pos:line="7" pos:column="23">ctx<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">end_seq<pos:position pos:line="7" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">start<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

    <do pos:line="10" pos:column="5">do <block pos:line="10" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">apr_status_t<pos:position pos:line="11" pos:column="21"/></name></type> <name pos:line="11" pos:column="22">rv<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><literal type="number" pos:line="11" pos:column="27">0<pos:position pos:line="11" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">read_done<pos:position pos:line="12" pos:column="22"/></name> <init pos:line="12" pos:column="23">= <expr><literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>

        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">dptr<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="37"/></condition><then pos:line="14" pos:column="37"> <block pos:line="14" pos:column="38">{
            <break pos:line="15" pos:column="13">break;<pos:position pos:line="15" pos:column="19"/></break>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if<pos:position pos:line="17" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="17" pos:column="5">0<pos:position pos:line="17" pos:column="6"/></literal></expr></cpp:if>
        <comment type="block" pos:line="18" pos:column="9">/* XXX the bucket flush support is commented out for now
         * because it was causing a segfault */</comment>
        if (APR_BUCKET_IS_FLUSH(dptr)) {
            apr_bucket *old = dptr; 
            dptr = APR_BUCKET_NEXT(old);
            APR_BUCKET_REMOVE(old);
            ctx-&gt;output_now = 1;
            ctx-&gt;output_flush = 1;
        }
        else
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="28" pos:column="8">/* 0 */</comment>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name><name pos:line="29" pos:column="13">ctx<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">bytes_parsed<pos:position pos:line="29" pos:column="30"/></name></name> <operator pos:line="29" pos:column="31">&gt;=<pos:position pos:line="29" pos:column="36"/></operator> <name pos:line="29" pos:column="34">BYTE_COUNT_THRESHOLD<pos:position pos:line="29" pos:column="54"/></name></expr>)<pos:position pos:line="29" pos:column="55"/></condition><then pos:line="29" pos:column="55"> <block pos:line="29" pos:column="56">{
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">ctx<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">output_now<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <literal type="number" pos:line="30" pos:column="31">1<pos:position pos:line="30" pos:column="32"/></literal></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then>
        <elseif pos:line="32" pos:column="9">else <if pos:line="32" pos:column="14">if <condition pos:line="32" pos:column="17">(<expr><name><name pos:line="32" pos:column="18">ctx<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">bytes_parsed<pos:position pos:line="32" pos:column="35"/></name></name> <operator pos:line="32" pos:column="36">&gt;<pos:position pos:line="32" pos:column="40"/></operator> <literal type="number" pos:line="32" pos:column="38">0<pos:position pos:line="32" pos:column="39"/></literal></expr>)<pos:position pos:line="32" pos:column="40"/></condition><then pos:line="32" pos:column="40"> <block pos:line="32" pos:column="41">{
            <expr_stmt><expr><name pos:line="33" pos:column="13">rv<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">apr_bucket_read<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">dptr<pos:position pos:line="33" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="40">&amp;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="41">buf<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="46">&amp;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="47">len<pos:position pos:line="33" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="52">APR_NONBLOCK_READ<pos:position pos:line="33" pos:column="69"/></name></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><name pos:line="34" pos:column="13">read_done<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <literal type="number" pos:line="34" pos:column="25">1<pos:position pos:line="34" pos:column="26"/></literal></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><call><name pos:line="35" pos:column="17">APR_STATUS_IS_EAGAIN<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">rv<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42"> <block pos:line="35" pos:column="43">{
                <expr_stmt><expr><name><name pos:line="36" pos:column="17">ctx<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">-&gt;<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="22">output_now<pos:position pos:line="36" pos:column="32"/></name></name> <operator pos:line="36" pos:column="33">=<pos:position pos:line="36" pos:column="34"/></operator> <literal type="number" pos:line="36" pos:column="35">1<pos:position pos:line="36" pos:column="36"/></literal></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">ctx<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">output_now<pos:position pos:line="40" pos:column="28"/></name></name></expr>)<pos:position pos:line="40" pos:column="29"/></condition><then pos:line="40" pos:column="29"> <block pos:line="40" pos:column="30">{
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><name><name pos:line="41" pos:column="17">ctx<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">state<pos:position pos:line="41" pos:column="27"/></name></name> <operator pos:line="41" pos:column="28">==<pos:position pos:line="41" pos:column="30"/></operator> <name pos:line="41" pos:column="31">PARSE_DIRECTIVE<pos:position pos:line="41" pos:column="46"/></name></expr>)<pos:position pos:line="41" pos:column="47"/></condition><then pos:line="41" pos:column="47"> <block pos:line="41" pos:column="48">{
                <comment type="block" pos:line="42" pos:column="17">/* gonna start over parsing the directive next time through */</comment>
                <expr_stmt><expr><name><name pos:line="43" pos:column="17">ctx<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">-&gt;<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="22">directive_length<pos:position pos:line="43" pos:column="38"/></name></name> <operator pos:line="43" pos:column="39">=<pos:position pos:line="43" pos:column="40"/></operator> <literal type="number" pos:line="43" pos:column="41">0<pos:position pos:line="43" pos:column="42"/></literal></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="44" pos:column="17">ctx<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">tag_length<pos:position pos:line="44" pos:column="32"/></name></name>       <operator pos:line="44" pos:column="39">=<pos:position pos:line="44" pos:column="40"/></operator> <literal type="number" pos:line="44" pos:column="41">0<pos:position pos:line="44" pos:column="42"/></literal></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="45" pos:column="14"/></block></then></if>
            <return pos:line="46" pos:column="13">return <expr><name pos:line="46" pos:column="20">dptr<pos:position pos:line="46" pos:column="24"/></name></expr>;<pos:position pos:line="46" pos:column="25"/></return>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">read_done<pos:position pos:line="49" pos:column="23"/></name></expr>)<pos:position pos:line="49" pos:column="24"/></condition><then pos:line="49" pos:column="24"> <block pos:line="49" pos:column="25">{
            <expr_stmt><expr><name pos:line="50" pos:column="13">rv<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <call><name pos:line="50" pos:column="18">apr_bucket_read<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><name pos:line="50" pos:column="34">dptr<pos:position pos:line="50" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="40">&amp;<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="41">buf<pos:position pos:line="50" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="46">&amp;<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="47">len<pos:position pos:line="50" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="52">APR_BLOCK_READ<pos:position pos:line="50" pos:column="66"/></name></expr></argument>)<pos:position pos:line="50" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><operator pos:line="52" pos:column="13">!<pos:position pos:line="52" pos:column="14"/></operator><call><name pos:line="52" pos:column="14">APR_STATUS_IS_SUCCESS<pos:position pos:line="52" pos:column="35"/></name><argument_list pos:line="52" pos:column="35">(<argument><expr><name pos:line="52" pos:column="36">rv<pos:position pos:line="52" pos:column="38"/></name></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="40"/></condition><then pos:line="52" pos:column="40"> <block pos:line="52" pos:column="41">{
            <expr_stmt><expr><name><name pos:line="53" pos:column="13">ctx<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">-&gt;<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="18">status<pos:position pos:line="53" pos:column="24"/></name></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="27">rv<pos:position pos:line="53" pos:column="29"/></name></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt>
            <return pos:line="54" pos:column="13">return <expr><name pos:line="54" pos:column="20">NULL<pos:position pos:line="54" pos:column="24"/></name></expr>;<pos:position pos:line="54" pos:column="25"/></return>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>

        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">len<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">==<pos:position pos:line="57" pos:column="19"/></operator> <literal type="number" pos:line="57" pos:column="20">0<pos:position pos:line="57" pos:column="21"/></literal></expr>)<pos:position pos:line="57" pos:column="22"/></condition><then pos:line="57" pos:column="22"> <block pos:line="57" pos:column="23">{ <comment type="block" pos:line="57" pos:column="25">/* end of pipe? */</comment>
            <break pos:line="58" pos:column="13">break;<pos:position pos:line="58" pos:column="19"/></break>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">dptr<pos:position pos:line="60" pos:column="17"/></name> <operator pos:line="60" pos:column="18">==<pos:position pos:line="60" pos:column="20"/></operator> <name><name pos:line="60" pos:column="21">ctx<pos:position pos:line="60" pos:column="24"/></name><operator pos:line="60" pos:column="24">-&gt;<pos:position pos:line="60" pos:column="29"/></operator><name pos:line="60" pos:column="26">tag_start_bucket<pos:position pos:line="60" pos:column="42"/></name></name></expr>)<pos:position pos:line="60" pos:column="43"/></condition><then pos:line="60" pos:column="43"> <block pos:line="60" pos:column="44">{
            <expr_stmt><expr><name pos:line="61" pos:column="13">c<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">=<pos:position pos:line="61" pos:column="16"/></operator> <name pos:line="61" pos:column="17">buf<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">+<pos:position pos:line="61" pos:column="22"/></operator> <name><name pos:line="61" pos:column="23">ctx<pos:position pos:line="61" pos:column="26"/></name><operator pos:line="61" pos:column="26">-&gt;<pos:position pos:line="61" pos:column="31"/></operator><name pos:line="61" pos:column="28">tag_start_index<pos:position pos:line="61" pos:column="43"/></name></name></expr>;<pos:position pos:line="61" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></then>
        <else pos:line="63" pos:column="9">else <block pos:line="63" pos:column="14">{
            <expr_stmt><expr><name pos:line="64" pos:column="13">c<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <name pos:line="64" pos:column="17">buf<pos:position pos:line="64" pos:column="20"/></name></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="65" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="66" pos:column="9">start<pos:position pos:line="66" pos:column="14"/></name> <operator pos:line="66" pos:column="15">=<pos:position pos:line="66" pos:column="16"/></operator> <name pos:line="66" pos:column="17">c<pos:position pos:line="66" pos:column="18"/></name></expr>;<pos:position pos:line="66" pos:column="19"/></expr_stmt>
        <while pos:line="67" pos:column="9">while <condition pos:line="67" pos:column="15">(<expr><name pos:line="67" pos:column="16">c<pos:position pos:line="67" pos:column="17"/></name> <operator pos:line="67" pos:column="18">&lt;<pos:position pos:line="67" pos:column="22"/></operator> <name pos:line="67" pos:column="20">buf<pos:position pos:line="67" pos:column="23"/></name> <operator pos:line="67" pos:column="24">+<pos:position pos:line="67" pos:column="25"/></operator> <name pos:line="67" pos:column="26">len<pos:position pos:line="67" pos:column="29"/></name></expr>)<pos:position pos:line="67" pos:column="30"/></condition> <block pos:line="67" pos:column="31">{
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><operator pos:line="68" pos:column="17">*<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="18">c<pos:position pos:line="68" pos:column="19"/></name> <operator pos:line="68" pos:column="20">==<pos:position pos:line="68" pos:column="22"/></operator> <name><name pos:line="68" pos:column="23">str<pos:position pos:line="68" pos:column="26"/></name><index pos:line="68" pos:column="26">[<expr><name><name pos:line="68" pos:column="27">ctx<pos:position pos:line="68" pos:column="30"/></name><operator pos:line="68" pos:column="30">-&gt;<pos:position pos:line="68" pos:column="35"/></operator><name pos:line="68" pos:column="32">parse_pos<pos:position pos:line="68" pos:column="41"/></name></name></expr>]<pos:position pos:line="68" pos:column="42"/></index></name></expr>)<pos:position pos:line="68" pos:column="43"/></condition><then pos:line="68" pos:column="43"> <block pos:line="68" pos:column="44">{
                <if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><name><name pos:line="69" pos:column="21">ctx<pos:position pos:line="69" pos:column="24"/></name><operator pos:line="69" pos:column="24">-&gt;<pos:position pos:line="69" pos:column="29"/></operator><name pos:line="69" pos:column="26">state<pos:position pos:line="69" pos:column="31"/></name></name> <operator pos:line="69" pos:column="32">!=<pos:position pos:line="69" pos:column="34"/></operator> <name pos:line="69" pos:column="35">PARSE_TAIL<pos:position pos:line="69" pos:column="45"/></name></expr>)<pos:position pos:line="69" pos:column="46"/></condition><then pos:line="69" pos:column="46"> <block pos:line="69" pos:column="47">{
                    <expr_stmt><expr><name><name pos:line="70" pos:column="21">ctx<pos:position pos:line="70" pos:column="24"/></name><operator pos:line="70" pos:column="24">-&gt;<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="26">state<pos:position pos:line="70" pos:column="31"/></name></name>             <operator pos:line="70" pos:column="44">=<pos:position pos:line="70" pos:column="45"/></operator> <name pos:line="70" pos:column="46">PARSE_TAIL<pos:position pos:line="70" pos:column="56"/></name></expr>;<pos:position pos:line="70" pos:column="57"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="71" pos:column="21">ctx<pos:position pos:line="71" pos:column="24"/></name><operator pos:line="71" pos:column="24">-&gt;<pos:position pos:line="71" pos:column="29"/></operator><name pos:line="71" pos:column="26">tail_start_bucket<pos:position pos:line="71" pos:column="43"/></name></name> <operator pos:line="71" pos:column="44">=<pos:position pos:line="71" pos:column="45"/></operator> <name pos:line="71" pos:column="46">dptr<pos:position pos:line="71" pos:column="50"/></name></expr>;<pos:position pos:line="71" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="72" pos:column="21">ctx<pos:position pos:line="72" pos:column="24"/></name><operator pos:line="72" pos:column="24">-&gt;<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="26">tail_start_index<pos:position pos:line="72" pos:column="42"/></name></name>  <operator pos:line="72" pos:column="44">=<pos:position pos:line="72" pos:column="45"/></operator> <name pos:line="72" pos:column="46">c<pos:position pos:line="72" pos:column="47"/></name> <operator pos:line="72" pos:column="48">-<pos:position pos:line="72" pos:column="49"/></operator> <name pos:line="72" pos:column="50">buf<pos:position pos:line="72" pos:column="53"/></name></expr>;<pos:position pos:line="72" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="73" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name><name pos:line="74" pos:column="17">ctx<pos:position pos:line="74" pos:column="20"/></name><operator pos:line="74" pos:column="20">-&gt;<pos:position pos:line="74" pos:column="25"/></operator><name pos:line="74" pos:column="22">parse_pos<pos:position pos:line="74" pos:column="31"/></name></name><operator pos:line="74" pos:column="31">++<pos:position pos:line="74" pos:column="33"/></operator></expr>;<pos:position pos:line="74" pos:column="34"/></expr_stmt>
                <if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><name><name pos:line="75" pos:column="21">str<pos:position pos:line="75" pos:column="24"/></name><index pos:line="75" pos:column="24">[<expr><name><name pos:line="75" pos:column="25">ctx<pos:position pos:line="75" pos:column="28"/></name><operator pos:line="75" pos:column="28">-&gt;<pos:position pos:line="75" pos:column="33"/></operator><name pos:line="75" pos:column="30">parse_pos<pos:position pos:line="75" pos:column="39"/></name></name></expr>]<pos:position pos:line="75" pos:column="40"/></index></name> <operator pos:line="75" pos:column="41">==<pos:position pos:line="75" pos:column="43"/></operator> <literal type="char" pos:line="75" pos:column="44">'\0'<pos:position pos:line="75" pos:column="48"/></literal></expr>)<pos:position pos:line="75" pos:column="49"/></condition><then pos:line="75" pos:column="49"> <block pos:line="75" pos:column="50">{
                        <decl_stmt><decl><type><name pos:line="76" pos:column="25">apr_bucket<pos:position pos:line="76" pos:column="35"/></name> <modifier pos:line="76" pos:column="36">*<pos:position pos:line="76" pos:column="37"/></modifier></type><name pos:line="76" pos:column="37">tmp_buck<pos:position pos:line="76" pos:column="45"/></name> <init pos:line="76" pos:column="46">= <expr><name pos:line="76" pos:column="48">dptr<pos:position pos:line="76" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="76" pos:column="53"/></decl_stmt>

                        <comment type="block" pos:line="78" pos:column="25">/* We want to split the bucket at the '&gt;'. The
                         * end of the END_SEQUENCE is in the current bucket.
                         * The beginning might be in a previous bucket.
                         */</comment>
                        <expr_stmt><expr><name pos:line="82" pos:column="25">c<pos:position pos:line="82" pos:column="26"/></name><operator pos:line="82" pos:column="26">++<pos:position pos:line="82" pos:column="28"/></operator></expr>;<pos:position pos:line="82" pos:column="29"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="83" pos:column="25">ctx<pos:position pos:line="83" pos:column="28"/></name><operator pos:line="83" pos:column="28">-&gt;<pos:position pos:line="83" pos:column="33"/></operator><name pos:line="83" pos:column="30">bytes_parsed<pos:position pos:line="83" pos:column="42"/></name></name> <operator pos:line="83" pos:column="43">+=<pos:position pos:line="83" pos:column="45"/></operator> <operator pos:line="83" pos:column="46">(<pos:position pos:line="83" pos:column="47"/></operator><name pos:line="83" pos:column="47">c<pos:position pos:line="83" pos:column="48"/></name> <operator pos:line="83" pos:column="49">-<pos:position pos:line="83" pos:column="50"/></operator> <name pos:line="83" pos:column="51">start<pos:position pos:line="83" pos:column="56"/></name><operator pos:line="83" pos:column="56">)<pos:position pos:line="83" pos:column="57"/></operator></expr>;<pos:position pos:line="83" pos:column="58"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="84" pos:column="25">ctx<pos:position pos:line="84" pos:column="28"/></name><operator pos:line="84" pos:column="28">-&gt;<pos:position pos:line="84" pos:column="33"/></operator><name pos:line="84" pos:column="30">state<pos:position pos:line="84" pos:column="35"/></name></name> <operator pos:line="84" pos:column="36">=<pos:position pos:line="84" pos:column="37"/></operator> <name pos:line="84" pos:column="38">PARSED<pos:position pos:line="84" pos:column="44"/></name></expr>;<pos:position pos:line="84" pos:column="45"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="85" pos:column="25">apr_bucket_split<pos:position pos:line="85" pos:column="41"/></name><argument_list pos:line="85" pos:column="41">(<argument><expr><name pos:line="85" pos:column="42">dptr<pos:position pos:line="85" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="48">c<pos:position pos:line="85" pos:column="49"/></name> <operator pos:line="85" pos:column="50">-<pos:position pos:line="85" pos:column="51"/></operator> <name pos:line="85" pos:column="52">buf<pos:position pos:line="85" pos:column="55"/></name></expr></argument>)<pos:position pos:line="85" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="57"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="86" pos:column="25">tmp_buck<pos:position pos:line="86" pos:column="33"/></name> <operator pos:line="86" pos:column="34">=<pos:position pos:line="86" pos:column="35"/></operator> <call><name pos:line="86" pos:column="36">APR_BUCKET_NEXT<pos:position pos:line="86" pos:column="51"/></name><argument_list pos:line="86" pos:column="51">(<argument><expr><name pos:line="86" pos:column="52">dptr<pos:position pos:line="86" pos:column="56"/></name></expr></argument>)<pos:position pos:line="86" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="58"/></expr_stmt>
                        <return pos:line="87" pos:column="25">return <expr><operator pos:line="87" pos:column="32">(<pos:position pos:line="87" pos:column="33"/></operator><name pos:line="87" pos:column="33">tmp_buck<pos:position pos:line="87" pos:column="41"/></name><operator pos:line="87" pos:column="41">)<pos:position pos:line="87" pos:column="42"/></operator></expr>;<pos:position pos:line="87" pos:column="43"/></return>
                    }<pos:position pos:line="88" pos:column="22"/></block></then></if>           
            }<pos:position pos:line="89" pos:column="14"/></block></then>
            <else pos:line="90" pos:column="13">else <block pos:line="90" pos:column="18">{
                <if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><name><name pos:line="91" pos:column="21">ctx<pos:position pos:line="91" pos:column="24"/></name><operator pos:line="91" pos:column="24">-&gt;<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="26">state<pos:position pos:line="91" pos:column="31"/></name></name> <operator pos:line="91" pos:column="32">==<pos:position pos:line="91" pos:column="34"/></operator> <name pos:line="91" pos:column="35">PARSE_DIRECTIVE<pos:position pos:line="91" pos:column="50"/></name></expr>)<pos:position pos:line="91" pos:column="51"/></condition><then pos:line="91" pos:column="51"> <block pos:line="91" pos:column="52">{
                    <if pos:line="92" pos:column="21">if <condition pos:line="92" pos:column="24">(<expr><name><name pos:line="92" pos:column="25">ctx<pos:position pos:line="92" pos:column="28"/></name><operator pos:line="92" pos:column="28">-&gt;<pos:position pos:line="92" pos:column="33"/></operator><name pos:line="92" pos:column="30">tag_length<pos:position pos:line="92" pos:column="40"/></name></name> <operator pos:line="92" pos:column="41">==<pos:position pos:line="92" pos:column="43"/></operator> <literal type="number" pos:line="92" pos:column="44">0<pos:position pos:line="92" pos:column="45"/></literal></expr>)<pos:position pos:line="92" pos:column="46"/></condition><then pos:line="92" pos:column="46"> <block pos:line="92" pos:column="47">{
                        <if pos:line="93" pos:column="25">if <condition pos:line="93" pos:column="28">(<expr><operator pos:line="93" pos:column="29">!<pos:position pos:line="93" pos:column="30"/></operator><call><name pos:line="93" pos:column="30">apr_isspace<pos:position pos:line="93" pos:column="41"/></name><argument_list pos:line="93" pos:column="41">(<argument><expr><operator pos:line="93" pos:column="42">*<pos:position pos:line="93" pos:column="43"/></operator><name pos:line="93" pos:column="43">c<pos:position pos:line="93" pos:column="44"/></name></expr></argument>)<pos:position pos:line="93" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="46"/></condition><then pos:line="93" pos:column="46"> <block pos:line="93" pos:column="47">{
                            <decl_stmt><decl><type><specifier pos:line="94" pos:column="29">const<pos:position pos:line="94" pos:column="34"/></specifier> <name pos:line="94" pos:column="35">char<pos:position pos:line="94" pos:column="39"/></name> <modifier pos:line="94" pos:column="40">*<pos:position pos:line="94" pos:column="41"/></modifier></type><name pos:line="94" pos:column="41">tmp<pos:position pos:line="94" pos:column="44"/></name> <init pos:line="94" pos:column="45">= <expr><name pos:line="94" pos:column="47">c<pos:position pos:line="94" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="94" pos:column="49"/></decl_stmt>
                            <expr_stmt><expr><name><name pos:line="95" pos:column="29">ctx<pos:position pos:line="95" pos:column="32"/></name><operator pos:line="95" pos:column="32">-&gt;<pos:position pos:line="95" pos:column="37"/></operator><name pos:line="95" pos:column="34">tag_start_bucket<pos:position pos:line="95" pos:column="50"/></name></name> <operator pos:line="95" pos:column="51">=<pos:position pos:line="95" pos:column="52"/></operator> <name pos:line="95" pos:column="53">dptr<pos:position pos:line="95" pos:column="57"/></name></expr>;<pos:position pos:line="95" pos:column="58"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="96" pos:column="29">ctx<pos:position pos:line="96" pos:column="32"/></name><operator pos:line="96" pos:column="32">-&gt;<pos:position pos:line="96" pos:column="37"/></operator><name pos:line="96" pos:column="34">tag_start_index<pos:position pos:line="96" pos:column="49"/></name></name>  <operator pos:line="96" pos:column="51">=<pos:position pos:line="96" pos:column="52"/></operator> <name pos:line="96" pos:column="53">c<pos:position pos:line="96" pos:column="54"/></name> <operator pos:line="96" pos:column="55">-<pos:position pos:line="96" pos:column="56"/></operator> <name pos:line="96" pos:column="57">buf<pos:position pos:line="96" pos:column="60"/></name></expr>;<pos:position pos:line="96" pos:column="61"/></expr_stmt>
                            <do pos:line="97" pos:column="29">do <block pos:line="97" pos:column="32">{
                                <expr_stmt><expr><name pos:line="98" pos:column="33">c<pos:position pos:line="98" pos:column="34"/></name><operator pos:line="98" pos:column="34">++<pos:position pos:line="98" pos:column="36"/></operator></expr>;<pos:position pos:line="98" pos:column="37"/></expr_stmt>
                            }<pos:position pos:line="99" pos:column="30"/></block> while <condition pos:line="99" pos:column="37">(<expr><operator pos:line="99" pos:column="38">(<pos:position pos:line="99" pos:column="39"/></operator><name pos:line="99" pos:column="39">c<pos:position pos:line="99" pos:column="40"/></name> <operator pos:line="99" pos:column="41">&lt;<pos:position pos:line="99" pos:column="45"/></operator> <name pos:line="99" pos:column="43">buf<pos:position pos:line="99" pos:column="46"/></name> <operator pos:line="99" pos:column="47">+<pos:position pos:line="99" pos:column="48"/></operator> <name pos:line="99" pos:column="49">len<pos:position pos:line="99" pos:column="52"/></name><operator pos:line="99" pos:column="52">)<pos:position pos:line="99" pos:column="53"/></operator> <operator pos:line="99" pos:column="54">&amp;&amp;<pos:position pos:line="99" pos:column="64"/></operator> <operator pos:line="99" pos:column="57">!<pos:position pos:line="99" pos:column="58"/></operator><call><name pos:line="99" pos:column="58">apr_isspace<pos:position pos:line="99" pos:column="69"/></name><argument_list pos:line="99" pos:column="69">(<argument><expr><operator pos:line="99" pos:column="70">*<pos:position pos:line="99" pos:column="71"/></operator><name pos:line="99" pos:column="71">c<pos:position pos:line="99" pos:column="72"/></name></expr></argument>)<pos:position pos:line="99" pos:column="73"/></argument_list></call> <operator pos:line="99" pos:column="74">&amp;&amp;<pos:position pos:line="99" pos:column="84"/></operator>
                                     <operator pos:line="100" pos:column="38">*<pos:position pos:line="100" pos:column="39"/></operator><name pos:line="100" pos:column="39">c<pos:position pos:line="100" pos:column="40"/></name> <operator pos:line="100" pos:column="41">!=<pos:position pos:line="100" pos:column="43"/></operator> <operator pos:line="100" pos:column="44">*<pos:position pos:line="100" pos:column="45"/></operator><name pos:line="100" pos:column="45">str<pos:position pos:line="100" pos:column="48"/></name></expr>)<pos:position pos:line="100" pos:column="49"/></condition>;<pos:position pos:line="100" pos:column="50"/></do>
                            <expr_stmt><expr><name><name pos:line="101" pos:column="29">ctx<pos:position pos:line="101" pos:column="32"/></name><operator pos:line="101" pos:column="32">-&gt;<pos:position pos:line="101" pos:column="37"/></operator><name pos:line="101" pos:column="34">tag_length<pos:position pos:line="101" pos:column="44"/></name></name> <operator pos:line="101" pos:column="45">=<pos:position pos:line="101" pos:column="46"/></operator> <name><name pos:line="101" pos:column="47">ctx<pos:position pos:line="101" pos:column="50"/></name><operator pos:line="101" pos:column="50">-&gt;<pos:position pos:line="101" pos:column="55"/></operator><name pos:line="101" pos:column="52">directive_length<pos:position pos:line="101" pos:column="68"/></name></name> <operator pos:line="101" pos:column="69">=<pos:position pos:line="101" pos:column="70"/></operator> <name pos:line="101" pos:column="71">c<pos:position pos:line="101" pos:column="72"/></name> <operator pos:line="101" pos:column="73">-<pos:position pos:line="101" pos:column="74"/></operator> <name pos:line="101" pos:column="75">tmp<pos:position pos:line="101" pos:column="78"/></name></expr>;<pos:position pos:line="101" pos:column="79"/></expr_stmt>
                            <continue pos:line="102" pos:column="29">continue;<pos:position pos:line="102" pos:column="38"/></continue>
                        }<pos:position pos:line="103" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="104" pos:column="22"/></block></then>
                    <else pos:line="105" pos:column="21">else <block pos:line="105" pos:column="26">{
                        <if pos:line="106" pos:column="25">if <condition pos:line="106" pos:column="28">(<expr><operator pos:line="106" pos:column="29">!<pos:position pos:line="106" pos:column="30"/></operator><call><name pos:line="106" pos:column="30">apr_isspace<pos:position pos:line="106" pos:column="41"/></name><argument_list pos:line="106" pos:column="41">(<argument><expr><operator pos:line="106" pos:column="42">*<pos:position pos:line="106" pos:column="43"/></operator><name pos:line="106" pos:column="43">c<pos:position pos:line="106" pos:column="44"/></name></expr></argument>)<pos:position pos:line="106" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="46"/></condition><then pos:line="106" pos:column="46"> <block pos:line="106" pos:column="47">{
                            <expr_stmt><expr><name><name pos:line="107" pos:column="29">ctx<pos:position pos:line="107" pos:column="32"/></name><operator pos:line="107" pos:column="32">-&gt;<pos:position pos:line="107" pos:column="37"/></operator><name pos:line="107" pos:column="34">directive_length<pos:position pos:line="107" pos:column="50"/></name></name><operator pos:line="107" pos:column="50">++<pos:position pos:line="107" pos:column="52"/></operator></expr>;<pos:position pos:line="107" pos:column="53"/></expr_stmt>
                        }<pos:position pos:line="108" pos:column="26"/></block></then>
                        <else pos:line="109" pos:column="25">else <block pos:line="109" pos:column="30">{
                            <expr_stmt><expr><name><name pos:line="110" pos:column="29">ctx<pos:position pos:line="110" pos:column="32"/></name><operator pos:line="110" pos:column="32">-&gt;<pos:position pos:line="110" pos:column="37"/></operator><name pos:line="110" pos:column="34">state<pos:position pos:line="110" pos:column="39"/></name></name> <operator pos:line="110" pos:column="40">=<pos:position pos:line="110" pos:column="41"/></operator> <name pos:line="110" pos:column="42">PARSE_TAG<pos:position pos:line="110" pos:column="51"/></name></expr>;<pos:position pos:line="110" pos:column="52"/></expr_stmt>
                        }<pos:position pos:line="111" pos:column="26"/></block></else></if>
                        <expr_stmt><expr><name><name pos:line="112" pos:column="25">ctx<pos:position pos:line="112" pos:column="28"/></name><operator pos:line="112" pos:column="28">-&gt;<pos:position pos:line="112" pos:column="33"/></operator><name pos:line="112" pos:column="30">tag_length<pos:position pos:line="112" pos:column="40"/></name></name><operator pos:line="112" pos:column="40">++<pos:position pos:line="112" pos:column="42"/></operator></expr>;<pos:position pos:line="112" pos:column="43"/></expr_stmt>
                    }<pos:position pos:line="113" pos:column="22"/></block></else></if>
                }<pos:position pos:line="114" pos:column="18"/></block></then>
                <elseif pos:line="115" pos:column="17">else <if pos:line="115" pos:column="22">if <condition pos:line="115" pos:column="25">(<expr><name><name pos:line="115" pos:column="26">ctx<pos:position pos:line="115" pos:column="29"/></name><operator pos:line="115" pos:column="29">-&gt;<pos:position pos:line="115" pos:column="34"/></operator><name pos:line="115" pos:column="31">state<pos:position pos:line="115" pos:column="36"/></name></name> <operator pos:line="115" pos:column="37">==<pos:position pos:line="115" pos:column="39"/></operator> <name pos:line="115" pos:column="40">PARSE_TAG<pos:position pos:line="115" pos:column="49"/></name></expr>)<pos:position pos:line="115" pos:column="50"/></condition><then pos:line="115" pos:column="50"> <block pos:line="115" pos:column="51">{
                    <decl_stmt><decl><type><specifier pos:line="116" pos:column="21">const<pos:position pos:line="116" pos:column="26"/></specifier> <name pos:line="116" pos:column="27">char<pos:position pos:line="116" pos:column="31"/></name> <modifier pos:line="116" pos:column="32">*<pos:position pos:line="116" pos:column="33"/></modifier></type><name pos:line="116" pos:column="33">tmp<pos:position pos:line="116" pos:column="36"/></name> <init pos:line="116" pos:column="37">= <expr><name pos:line="116" pos:column="39">c<pos:position pos:line="116" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="116" pos:column="41"/></decl_stmt>
                    <do pos:line="117" pos:column="21">do <block pos:line="117" pos:column="24">{
                        <expr_stmt><expr><name pos:line="118" pos:column="25">c<pos:position pos:line="118" pos:column="26"/></name><operator pos:line="118" pos:column="26">++<pos:position pos:line="118" pos:column="28"/></operator></expr>;<pos:position pos:line="118" pos:column="29"/></expr_stmt>
                    }<pos:position pos:line="119" pos:column="22"/></block> while <condition pos:line="119" pos:column="29">(<expr><operator pos:line="119" pos:column="30">(<pos:position pos:line="119" pos:column="31"/></operator><name pos:line="119" pos:column="31">c<pos:position pos:line="119" pos:column="32"/></name> <operator pos:line="119" pos:column="33">&lt;<pos:position pos:line="119" pos:column="37"/></operator> <name pos:line="119" pos:column="35">buf<pos:position pos:line="119" pos:column="38"/></name> <operator pos:line="119" pos:column="39">+<pos:position pos:line="119" pos:column="40"/></operator> <name pos:line="119" pos:column="41">len<pos:position pos:line="119" pos:column="44"/></name><operator pos:line="119" pos:column="44">)<pos:position pos:line="119" pos:column="45"/></operator> <operator pos:line="119" pos:column="46">&amp;&amp;<pos:position pos:line="119" pos:column="56"/></operator> <operator pos:line="119" pos:column="49">(<pos:position pos:line="119" pos:column="50"/></operator><operator pos:line="119" pos:column="50">*<pos:position pos:line="119" pos:column="51"/></operator><name pos:line="119" pos:column="51">c<pos:position pos:line="119" pos:column="52"/></name> <operator pos:line="119" pos:column="53">!=<pos:position pos:line="119" pos:column="55"/></operator> <operator pos:line="119" pos:column="56">*<pos:position pos:line="119" pos:column="57"/></operator><name pos:line="119" pos:column="57">str<pos:position pos:line="119" pos:column="60"/></name><operator pos:line="119" pos:column="60">)<pos:position pos:line="119" pos:column="61"/></operator></expr>)<pos:position pos:line="119" pos:column="62"/></condition>;<pos:position pos:line="119" pos:column="63"/></do>
                    <expr_stmt><expr><name><name pos:line="120" pos:column="21">ctx<pos:position pos:line="120" pos:column="24"/></name><operator pos:line="120" pos:column="24">-&gt;<pos:position pos:line="120" pos:column="29"/></operator><name pos:line="120" pos:column="26">tag_length<pos:position pos:line="120" pos:column="36"/></name></name> <operator pos:line="120" pos:column="37">+=<pos:position pos:line="120" pos:column="39"/></operator> <operator pos:line="120" pos:column="40">(<pos:position pos:line="120" pos:column="41"/></operator><name pos:line="120" pos:column="41">c<pos:position pos:line="120" pos:column="42"/></name> <operator pos:line="120" pos:column="43">-<pos:position pos:line="120" pos:column="44"/></operator> <name pos:line="120" pos:column="45">tmp<pos:position pos:line="120" pos:column="48"/></name><operator pos:line="120" pos:column="48">)<pos:position pos:line="120" pos:column="49"/></operator></expr>;<pos:position pos:line="120" pos:column="50"/></expr_stmt>
                    <continue pos:line="121" pos:column="21">continue;<pos:position pos:line="121" pos:column="30"/></continue>
                }<pos:position pos:line="122" pos:column="18"/></block></then></if></elseif>
                <else pos:line="123" pos:column="17">else <block pos:line="123" pos:column="22">{
                    <if pos:line="124" pos:column="21">if <condition pos:line="124" pos:column="24">(<expr><name><name pos:line="124" pos:column="25">ctx<pos:position pos:line="124" pos:column="28"/></name><operator pos:line="124" pos:column="28">-&gt;<pos:position pos:line="124" pos:column="33"/></operator><name pos:line="124" pos:column="30">parse_pos<pos:position pos:line="124" pos:column="39"/></name></name> <operator pos:line="124" pos:column="40">!=<pos:position pos:line="124" pos:column="42"/></operator> <literal type="number" pos:line="124" pos:column="43">0<pos:position pos:line="124" pos:column="44"/></literal></expr>)<pos:position pos:line="124" pos:column="45"/></condition><then pos:line="124" pos:column="45"> <block pos:line="124" pos:column="46">{
                        <comment type="block" pos:line="125" pos:column="25">/* The reason for this, is that we need to make sure 
                         * that we catch cases like ---&gt;.  This makes the 
                         * second check after the original check fails.
                         * If parse_pos was already 0 then we already checked 
                         * this.
                         */</comment>
                         <expr_stmt><expr><name><name pos:line="131" pos:column="26">ctx<pos:position pos:line="131" pos:column="29"/></name><operator pos:line="131" pos:column="29">-&gt;<pos:position pos:line="131" pos:column="34"/></operator><name pos:line="131" pos:column="31">tag_length<pos:position pos:line="131" pos:column="41"/></name></name> <operator pos:line="131" pos:column="42">+=<pos:position pos:line="131" pos:column="44"/></operator> <name><name pos:line="131" pos:column="45">ctx<pos:position pos:line="131" pos:column="48"/></name><operator pos:line="131" pos:column="48">-&gt;<pos:position pos:line="131" pos:column="53"/></operator><name pos:line="131" pos:column="50">parse_pos<pos:position pos:line="131" pos:column="59"/></name></name></expr>;<pos:position pos:line="131" pos:column="60"/></expr_stmt>

                         <if pos:line="133" pos:column="26">if <condition pos:line="133" pos:column="29">(<expr><operator pos:line="133" pos:column="30">*<pos:position pos:line="133" pos:column="31"/></operator><name pos:line="133" pos:column="31">c<pos:position pos:line="133" pos:column="32"/></name> <operator pos:line="133" pos:column="33">==<pos:position pos:line="133" pos:column="35"/></operator> <name><name pos:line="133" pos:column="36">str<pos:position pos:line="133" pos:column="39"/></name><index pos:line="133" pos:column="39">[<expr><literal type="number" pos:line="133" pos:column="40">0<pos:position pos:line="133" pos:column="41"/></literal></expr>]<pos:position pos:line="133" pos:column="42"/></index></name></expr>)<pos:position pos:line="133" pos:column="43"/></condition><then pos:line="133" pos:column="43"> <block pos:line="133" pos:column="44">{
                             <expr_stmt><expr><name><name pos:line="134" pos:column="30">ctx<pos:position pos:line="134" pos:column="33"/></name><operator pos:line="134" pos:column="33">-&gt;<pos:position pos:line="134" pos:column="38"/></operator><name pos:line="134" pos:column="35">state<pos:position pos:line="134" pos:column="40"/></name></name> <operator pos:line="134" pos:column="41">=<pos:position pos:line="134" pos:column="42"/></operator> <name pos:line="134" pos:column="43">PARSE_TAIL<pos:position pos:line="134" pos:column="53"/></name></expr>;<pos:position pos:line="134" pos:column="54"/></expr_stmt>
                             <expr_stmt><expr><name><name pos:line="135" pos:column="30">ctx<pos:position pos:line="135" pos:column="33"/></name><operator pos:line="135" pos:column="33">-&gt;<pos:position pos:line="135" pos:column="38"/></operator><name pos:line="135" pos:column="35">tail_start_bucket<pos:position pos:line="135" pos:column="52"/></name></name> <operator pos:line="135" pos:column="53">=<pos:position pos:line="135" pos:column="54"/></operator> <name pos:line="135" pos:column="55">dptr<pos:position pos:line="135" pos:column="59"/></name></expr>;<pos:position pos:line="135" pos:column="60"/></expr_stmt>
                             <expr_stmt><expr><name><name pos:line="136" pos:column="30">ctx<pos:position pos:line="136" pos:column="33"/></name><operator pos:line="136" pos:column="33">-&gt;<pos:position pos:line="136" pos:column="38"/></operator><name pos:line="136" pos:column="35">tail_start_index<pos:position pos:line="136" pos:column="51"/></name></name> <operator pos:line="136" pos:column="52">=<pos:position pos:line="136" pos:column="53"/></operator> <name pos:line="136" pos:column="54">c<pos:position pos:line="136" pos:column="55"/></name> <operator pos:line="136" pos:column="56">-<pos:position pos:line="136" pos:column="57"/></operator> <name pos:line="136" pos:column="58">buf<pos:position pos:line="136" pos:column="61"/></name></expr>;<pos:position pos:line="136" pos:column="62"/></expr_stmt>
                             <expr_stmt><expr><name><name pos:line="137" pos:column="30">ctx<pos:position pos:line="137" pos:column="33"/></name><operator pos:line="137" pos:column="33">-&gt;<pos:position pos:line="137" pos:column="38"/></operator><name pos:line="137" pos:column="35">parse_pos<pos:position pos:line="137" pos:column="44"/></name></name> <operator pos:line="137" pos:column="45">=<pos:position pos:line="137" pos:column="46"/></operator> <literal type="number" pos:line="137" pos:column="47">1<pos:position pos:line="137" pos:column="48"/></literal></expr>;<pos:position pos:line="137" pos:column="49"/></expr_stmt>
                         }<pos:position pos:line="138" pos:column="27"/></block></then>
                         <else pos:line="139" pos:column="26">else <block pos:line="139" pos:column="31">{
                             <expr_stmt><expr><name><name pos:line="140" pos:column="30">ctx<pos:position pos:line="140" pos:column="33"/></name><operator pos:line="140" pos:column="33">-&gt;<pos:position pos:line="140" pos:column="38"/></operator><name pos:line="140" pos:column="35">tag_length<pos:position pos:line="140" pos:column="45"/></name></name><operator pos:line="140" pos:column="45">++<pos:position pos:line="140" pos:column="47"/></operator></expr>;<pos:position pos:line="140" pos:column="48"/></expr_stmt>
                             <if pos:line="141" pos:column="30">if <condition pos:line="141" pos:column="33">(<expr><name><name pos:line="141" pos:column="34">ctx<pos:position pos:line="141" pos:column="37"/></name><operator pos:line="141" pos:column="37">-&gt;<pos:position pos:line="141" pos:column="42"/></operator><name pos:line="141" pos:column="39">tag_length<pos:position pos:line="141" pos:column="49"/></name></name> <operator pos:line="141" pos:column="50">&gt;<pos:position pos:line="141" pos:column="54"/></operator> <name><name pos:line="141" pos:column="52">ctx<pos:position pos:line="141" pos:column="55"/></name><operator pos:line="141" pos:column="55">-&gt;<pos:position pos:line="141" pos:column="60"/></operator><name pos:line="141" pos:column="57">directive_length<pos:position pos:line="141" pos:column="73"/></name></name></expr>)<pos:position pos:line="141" pos:column="74"/></condition><then pos:line="141" pos:column="74"> <block pos:line="141" pos:column="75">{
                                 <expr_stmt><expr><name><name pos:line="142" pos:column="34">ctx<pos:position pos:line="142" pos:column="37"/></name><operator pos:line="142" pos:column="37">-&gt;<pos:position pos:line="142" pos:column="42"/></operator><name pos:line="142" pos:column="39">state<pos:position pos:line="142" pos:column="44"/></name></name> <operator pos:line="142" pos:column="45">=<pos:position pos:line="142" pos:column="46"/></operator> <name pos:line="142" pos:column="47">PARSE_TAG<pos:position pos:line="142" pos:column="56"/></name></expr>;<pos:position pos:line="142" pos:column="57"/></expr_stmt>
                             }<pos:position pos:line="143" pos:column="31"/></block></then>
                             <else pos:line="144" pos:column="30">else <block pos:line="144" pos:column="35">{
                                 <expr_stmt><expr><name><name pos:line="145" pos:column="34">ctx<pos:position pos:line="145" pos:column="37"/></name><operator pos:line="145" pos:column="37">-&gt;<pos:position pos:line="145" pos:column="42"/></operator><name pos:line="145" pos:column="39">state<pos:position pos:line="145" pos:column="44"/></name></name> <operator pos:line="145" pos:column="45">=<pos:position pos:line="145" pos:column="46"/></operator> <name pos:line="145" pos:column="47">PARSE_DIRECTIVE<pos:position pos:line="145" pos:column="62"/></name></expr>;<pos:position pos:line="145" pos:column="63"/></expr_stmt>
                                 <expr_stmt><expr><name><name pos:line="146" pos:column="34">ctx<pos:position pos:line="146" pos:column="37"/></name><operator pos:line="146" pos:column="37">-&gt;<pos:position pos:line="146" pos:column="42"/></operator><name pos:line="146" pos:column="39">directive_length<pos:position pos:line="146" pos:column="55"/></name></name> <operator pos:line="146" pos:column="56">+=<pos:position pos:line="146" pos:column="58"/></operator> <name><name pos:line="146" pos:column="59">ctx<pos:position pos:line="146" pos:column="62"/></name><operator pos:line="146" pos:column="62">-&gt;<pos:position pos:line="146" pos:column="67"/></operator><name pos:line="146" pos:column="64">parse_pos<pos:position pos:line="146" pos:column="73"/></name></name></expr>;<pos:position pos:line="146" pos:column="74"/></expr_stmt>
                             }<pos:position pos:line="147" pos:column="31"/></block></else></if>
                             <expr_stmt><expr><name><name pos:line="148" pos:column="30">ctx<pos:position pos:line="148" pos:column="33"/></name><operator pos:line="148" pos:column="33">-&gt;<pos:position pos:line="148" pos:column="38"/></operator><name pos:line="148" pos:column="35">tail_start_bucket<pos:position pos:line="148" pos:column="52"/></name></name> <operator pos:line="148" pos:column="53">=<pos:position pos:line="148" pos:column="54"/></operator> <name pos:line="148" pos:column="55">NULL<pos:position pos:line="148" pos:column="59"/></name></expr>;<pos:position pos:line="148" pos:column="60"/></expr_stmt>
                             <expr_stmt><expr><name><name pos:line="149" pos:column="30">ctx<pos:position pos:line="149" pos:column="33"/></name><operator pos:line="149" pos:column="33">-&gt;<pos:position pos:line="149" pos:column="38"/></operator><name pos:line="149" pos:column="35">tail_start_index<pos:position pos:line="149" pos:column="51"/></name></name> <operator pos:line="149" pos:column="52">=<pos:position pos:line="149" pos:column="53"/></operator> <literal type="number" pos:line="149" pos:column="54">0<pos:position pos:line="149" pos:column="55"/></literal></expr>;<pos:position pos:line="149" pos:column="56"/></expr_stmt>
                             <expr_stmt><expr><name><name pos:line="150" pos:column="30">ctx<pos:position pos:line="150" pos:column="33"/></name><operator pos:line="150" pos:column="33">-&gt;<pos:position pos:line="150" pos:column="38"/></operator><name pos:line="150" pos:column="35">parse_pos<pos:position pos:line="150" pos:column="44"/></name></name> <operator pos:line="150" pos:column="45">=<pos:position pos:line="150" pos:column="46"/></operator> <literal type="number" pos:line="150" pos:column="47">0<pos:position pos:line="150" pos:column="48"/></literal></expr>;<pos:position pos:line="150" pos:column="49"/></expr_stmt>
                         }<pos:position pos:line="151" pos:column="27"/></block></else></if>
                    }<pos:position pos:line="152" pos:column="22"/></block></then></if>
                }<pos:position pos:line="153" pos:column="18"/></block></else></if>
            }<pos:position pos:line="154" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="155" pos:column="13">c<pos:position pos:line="155" pos:column="14"/></name><operator pos:line="155" pos:column="14">++<pos:position pos:line="155" pos:column="16"/></operator></expr>;<pos:position pos:line="155" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="156" pos:column="10"/></block></while>
        <expr_stmt><expr><name><name pos:line="157" pos:column="9">ctx<pos:position pos:line="157" pos:column="12"/></name><operator pos:line="157" pos:column="12">-&gt;<pos:position pos:line="157" pos:column="17"/></operator><name pos:line="157" pos:column="14">bytes_parsed<pos:position pos:line="157" pos:column="26"/></name></name> <operator pos:line="157" pos:column="27">+=<pos:position pos:line="157" pos:column="29"/></operator> <operator pos:line="157" pos:column="30">(<pos:position pos:line="157" pos:column="31"/></operator><name pos:line="157" pos:column="31">c<pos:position pos:line="157" pos:column="32"/></name> <operator pos:line="157" pos:column="33">-<pos:position pos:line="157" pos:column="34"/></operator> <name pos:line="157" pos:column="35">start<pos:position pos:line="157" pos:column="40"/></name><operator pos:line="157" pos:column="40">)<pos:position pos:line="157" pos:column="41"/></operator></expr>;<pos:position pos:line="157" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="158" pos:column="9">dptr<pos:position pos:line="158" pos:column="13"/></name> <operator pos:line="158" pos:column="14">=<pos:position pos:line="158" pos:column="15"/></operator> <call><name pos:line="158" pos:column="16">APR_BUCKET_NEXT<pos:position pos:line="158" pos:column="31"/></name><argument_list pos:line="158" pos:column="31">(<argument><expr><name pos:line="158" pos:column="32">dptr<pos:position pos:line="158" pos:column="36"/></name></expr></argument>)<pos:position pos:line="158" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="159" pos:column="6"/></block> while <condition pos:line="159" pos:column="13">(<expr><name pos:line="159" pos:column="14">dptr<pos:position pos:line="159" pos:column="18"/></name> <operator pos:line="159" pos:column="19">!=<pos:position pos:line="159" pos:column="21"/></operator> <call><name pos:line="159" pos:column="22">APR_BRIGADE_SENTINEL<pos:position pos:line="159" pos:column="42"/></name><argument_list pos:line="159" pos:column="42">(<argument><expr><name pos:line="159" pos:column="43">bb<pos:position pos:line="159" pos:column="45"/></name></expr></argument>)<pos:position pos:line="159" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="159" pos:column="47"/></condition>;<pos:position pos:line="159" pos:column="48"/></do>
    <return pos:line="160" pos:column="5">return <expr><name pos:line="160" pos:column="12">NULL<pos:position pos:line="160" pos:column="16"/></name></expr>;<pos:position pos:line="160" pos:column="17"/></return>
}<pos:position pos:line="161" pos:column="2"/></block></function></unit>

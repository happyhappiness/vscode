<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_702_httpd-2.2.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SSL_SESSION<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ssl_scache_dbm_retrieve<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">server_rec<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">s<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">UCHAR<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">id<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">int<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">idlen<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSLModConfigRec<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">mc<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">myModConfig<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><name pos:line="3" pos:column="39">s<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_dbm_t<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">dbm<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_datum_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">dbmkey<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_datum_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">dbmval<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">SSL_SESSION<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">sess<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">MODSSL_D2I_SSL_SESSION_CONST<pos:position pos:line="8" pos:column="33"/></name> <name pos:line="8" pos:column="34">unsigned<pos:position pos:line="8" pos:column="42"/></name> <name pos:line="8" pos:column="43">char<pos:position pos:line="8" pos:column="47"/></name> <modifier pos:line="8" pos:column="48">*<pos:position pos:line="8" pos:column="49"/></modifier></type><name pos:line="8" pos:column="49">ucpData<pos:position pos:line="8" pos:column="56"/></name></decl>;<pos:position pos:line="8" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">nData<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">time_t<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">expiry<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">time_t<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">now<pos:position pos:line="11" pos:column="15"/></name></decl>;<pos:position pos:line="11" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_status_t<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">rc<pos:position pos:line="12" pos:column="20"/></name></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* allow the regular expiring to occur */</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ssl_scache_dbm_expire<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">s<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* create DBM key and values */</comment>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">dbmkey<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">.<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">dptr<pos:position pos:line="18" pos:column="16"/></name></name>  <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <operator pos:line="18" pos:column="20">(<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">char<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">*<pos:position pos:line="18" pos:column="27"/></operator><operator pos:line="18" pos:column="27">)<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">id<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">dbmkey<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">.<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">dsize<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">idlen<pos:position pos:line="19" pos:column="25"/></name></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* and fetch it from the DBM file
     * XXX: Should we open the dbm against r-&gt;pool so the cleanup will
     * do the apr_dbm_close? This would make the code a bit cleaner.
     */</comment>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">ssl_mutex_on<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><name pos:line="25" pos:column="18">s<pos:position pos:line="25" pos:column="19"/></name></expr></argument>)<pos:position pos:line="25" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">rc<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <call><name pos:line="26" pos:column="15">apr_dbm_open<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><operator pos:line="26" pos:column="28">&amp;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="29">dbm<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="34">mc<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">szSessionCacheDataFile<pos:position pos:line="26" pos:column="60"/></name></name></expr></argument>,
            <argument><expr><name pos:line="27" pos:column="13">APR_DBM_RWCREATE<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="31">SSL_DBM_FILE_MODE<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="50">mc<pos:position pos:line="27" pos:column="52"/></name><operator pos:line="27" pos:column="52">-&gt;<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="54">pPool<pos:position pos:line="27" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call><operator pos:line="27" pos:column="60">)<pos:position pos:line="27" pos:column="61"/></operator> <operator pos:line="27" pos:column="62">!=<pos:position pos:line="27" pos:column="64"/></operator> <name pos:line="27" pos:column="65">APR_SUCCESS<pos:position pos:line="27" pos:column="76"/></name></expr>)<pos:position pos:line="27" pos:column="77"/></condition><then pos:line="27" pos:column="77"> <block pos:line="27" pos:column="78">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">ap_log_error<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">APLOG_MARK<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">APLOG_ERR<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="45">rc<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="49">s<pos:position pos:line="28" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="29" pos:column="22">"Cannot open SSLSessionCache DBM file `%s' for reading "<pos:position pos:line="29" pos:column="78"/></literal>
                     <literal type="string" pos:line="30" pos:column="22">"(fetch)"<pos:position pos:line="30" pos:column="31"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="31" pos:column="22">mc<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">szSessionCacheDataFile<pos:position pos:line="31" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">ssl_mutex_off<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">s<pos:position pos:line="32" pos:column="24"/></name></expr></argument>)<pos:position pos:line="32" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">NULL<pos:position pos:line="33" pos:column="20"/></name></expr>;<pos:position pos:line="33" pos:column="21"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="35" pos:column="5">rc<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <call><name pos:line="35" pos:column="10">apr_dbm_fetch<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">dbm<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="29">dbmkey<pos:position pos:line="35" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="37">&amp;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="38">dbmval<pos:position pos:line="35" pos:column="44"/></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">rc<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">!=<pos:position pos:line="36" pos:column="14"/></operator> <name pos:line="36" pos:column="15">APR_SUCCESS<pos:position pos:line="36" pos:column="26"/></name></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27"> <block pos:line="36" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">apr_dbm_close<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name pos:line="37" pos:column="23">dbm<pos:position pos:line="37" pos:column="26"/></name></expr></argument>)<pos:position pos:line="37" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ssl_mutex_off<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><name pos:line="38" pos:column="23">s<pos:position pos:line="38" pos:column="24"/></name></expr></argument>)<pos:position pos:line="38" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">NULL<pos:position pos:line="39" pos:column="20"/></name></expr>;<pos:position pos:line="39" pos:column="21"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name><name pos:line="41" pos:column="9">dbmval<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">.<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="16">dptr<pos:position pos:line="41" pos:column="20"/></name></name> <operator pos:line="41" pos:column="21">==<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="24">NULL<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">||<pos:position pos:line="41" pos:column="31"/></operator> <name><name pos:line="41" pos:column="32">dbmval<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">.<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="39">dsize<pos:position pos:line="41" pos:column="44"/></name></name> <operator pos:line="41" pos:column="45">&lt;=<pos:position pos:line="41" pos:column="50"/></operator> <sizeof pos:line="41" pos:column="48">sizeof<argument_list pos:line="41" pos:column="54">(<argument><expr><name pos:line="41" pos:column="55">time_t<pos:position pos:line="41" pos:column="61"/></name></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></sizeof></expr>)<pos:position pos:line="41" pos:column="63"/></condition><then pos:line="41" pos:column="63"> <block pos:line="41" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">apr_dbm_close<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">dbm<pos:position pos:line="42" pos:column="26"/></name></expr></argument>)<pos:position pos:line="42" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">ssl_mutex_off<pos:position pos:line="43" pos:column="22"/></name><argument_list pos:line="43" pos:column="22">(<argument><expr><name pos:line="43" pos:column="23">s<pos:position pos:line="43" pos:column="24"/></name></expr></argument>)<pos:position pos:line="43" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
        <return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">NULL<pos:position pos:line="44" pos:column="20"/></name></expr>;<pos:position pos:line="44" pos:column="21"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="47" pos:column="5">/* parse resulting data */</comment>
    <expr_stmt><expr><name pos:line="48" pos:column="5">nData<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">=<pos:position pos:line="48" pos:column="12"/></operator> <name><name pos:line="48" pos:column="13">dbmval<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">dsize<pos:position pos:line="48" pos:column="25"/></name></name><operator pos:line="48" pos:column="25">-<pos:position pos:line="48" pos:column="26"/></operator><sizeof pos:line="48" pos:column="26">sizeof<argument_list pos:line="48" pos:column="32">(<argument><expr><name pos:line="48" pos:column="33">time_t<pos:position pos:line="48" pos:column="39"/></name></expr></argument>)<pos:position pos:line="48" pos:column="40"/></argument_list></sizeof></expr>;<pos:position pos:line="48" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">ucpData<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">=<pos:position pos:line="49" pos:column="14"/></operator> <call><name pos:line="49" pos:column="15">malloc<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">(<argument><expr><name pos:line="49" pos:column="22">nData<pos:position pos:line="49" pos:column="27"/></name></expr></argument>)<pos:position pos:line="49" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="29"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">ucpData<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">==<pos:position pos:line="50" pos:column="19"/></operator> <name pos:line="50" pos:column="20">NULL<pos:position pos:line="50" pos:column="24"/></name></expr>)<pos:position pos:line="50" pos:column="25"/></condition><then pos:line="50" pos:column="25"> <block pos:line="50" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">apr_dbm_close<pos:position pos:line="51" pos:column="22"/></name><argument_list pos:line="51" pos:column="22">(<argument><expr><name pos:line="51" pos:column="23">dbm<pos:position pos:line="51" pos:column="26"/></name></expr></argument>)<pos:position pos:line="51" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">ssl_mutex_off<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><name pos:line="52" pos:column="23">s<pos:position pos:line="52" pos:column="24"/></name></expr></argument>)<pos:position pos:line="52" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="26"/></expr_stmt>
        <return pos:line="53" pos:column="9">return <expr><name pos:line="53" pos:column="16">NULL<pos:position pos:line="53" pos:column="20"/></name></expr>;<pos:position pos:line="53" pos:column="21"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="55" pos:column="5">/* Cast needed, ucpData may be const */</comment>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">memcpy<pos:position pos:line="56" pos:column="11"/></name><argument_list pos:line="56" pos:column="11">(<argument><expr><operator pos:line="56" pos:column="12">(<pos:position pos:line="56" pos:column="13"/></operator><name pos:line="56" pos:column="13">unsigned<pos:position pos:line="56" pos:column="21"/></name> <name pos:line="56" pos:column="22">char<pos:position pos:line="56" pos:column="26"/></name> <operator pos:line="56" pos:column="27">*<pos:position pos:line="56" pos:column="28"/></operator><operator pos:line="56" pos:column="28">)<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="29">ucpData<pos:position pos:line="56" pos:column="36"/></name></expr></argument>,
           <argument><expr><operator pos:line="57" pos:column="12">(<pos:position pos:line="57" pos:column="13"/></operator><name pos:line="57" pos:column="13">char<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">*<pos:position pos:line="57" pos:column="19"/></operator><operator pos:line="57" pos:column="19">)<pos:position pos:line="57" pos:column="20"/></operator><name><name pos:line="57" pos:column="20">dbmval<pos:position pos:line="57" pos:column="26"/></name><operator pos:line="57" pos:column="26">.<pos:position pos:line="57" pos:column="27"/></operator><name pos:line="57" pos:column="27">dptr<pos:position pos:line="57" pos:column="31"/></name></name> <operator pos:line="57" pos:column="32">+<pos:position pos:line="57" pos:column="33"/></operator> <sizeof pos:line="57" pos:column="34">sizeof<argument_list pos:line="57" pos:column="40">(<argument><expr><name pos:line="57" pos:column="41">time_t<pos:position pos:line="57" pos:column="47"/></name></expr></argument>)<pos:position pos:line="57" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="57" pos:column="50">nData<pos:position pos:line="57" pos:column="55"/></name></expr></argument>)<pos:position pos:line="57" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">memcpy<pos:position pos:line="58" pos:column="11"/></name><argument_list pos:line="58" pos:column="11">(<argument><expr><operator pos:line="58" pos:column="12">&amp;<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="13">expiry<pos:position pos:line="58" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="21">dbmval<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">.<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="28">dptr<pos:position pos:line="58" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="58" pos:column="34">sizeof<argument_list pos:line="58" pos:column="40">(<argument><expr><name pos:line="58" pos:column="41">time_t<pos:position pos:line="58" pos:column="47"/></name></expr></argument>)<pos:position pos:line="58" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="58" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="50"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="60" pos:column="5">apr_dbm_close<pos:position pos:line="60" pos:column="18"/></name><argument_list pos:line="60" pos:column="18">(<argument><expr><name pos:line="60" pos:column="19">dbm<pos:position pos:line="60" pos:column="22"/></name></expr></argument>)<pos:position pos:line="60" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">ssl_mutex_off<pos:position pos:line="61" pos:column="18"/></name><argument_list pos:line="61" pos:column="18">(<argument><expr><name pos:line="61" pos:column="19">s<pos:position pos:line="61" pos:column="20"/></name></expr></argument>)<pos:position pos:line="61" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="63" pos:column="5">/* make sure the stuff is still not expired */</comment>
    <expr_stmt><expr><name pos:line="64" pos:column="5">now<pos:position pos:line="64" pos:column="8"/></name> <operator pos:line="64" pos:column="9">=<pos:position pos:line="64" pos:column="10"/></operator> <call><name pos:line="64" pos:column="11">time<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><name pos:line="64" pos:column="16">NULL<pos:position pos:line="64" pos:column="20"/></name></expr></argument>)<pos:position pos:line="64" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="22"/></expr_stmt>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name pos:line="65" pos:column="9">expiry<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">&lt;=<pos:position pos:line="65" pos:column="21"/></operator> <name pos:line="65" pos:column="19">now<pos:position pos:line="65" pos:column="22"/></name></expr>)<pos:position pos:line="65" pos:column="23"/></condition><then pos:line="65" pos:column="23"> <block pos:line="65" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">ssl_scache_dbm_remove<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><name pos:line="66" pos:column="31">s<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="34">id<pos:position pos:line="66" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="38">idlen<pos:position pos:line="66" pos:column="43"/></name></expr></argument>)<pos:position pos:line="66" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="45"/></expr_stmt>
        <return pos:line="67" pos:column="9">return <expr><name pos:line="67" pos:column="16">NULL<pos:position pos:line="67" pos:column="20"/></name></expr>;<pos:position pos:line="67" pos:column="21"/></return>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="70" pos:column="5">/* unstreamed SSL_SESSION */</comment>
    <expr_stmt><expr><name pos:line="71" pos:column="5">sess<pos:position pos:line="71" pos:column="9"/></name> <operator pos:line="71" pos:column="10">=<pos:position pos:line="71" pos:column="11"/></operator> <call><name pos:line="71" pos:column="12">d2i_SSL_SESSION<pos:position pos:line="71" pos:column="27"/></name><argument_list pos:line="71" pos:column="27">(<argument><expr><name pos:line="71" pos:column="28">NULL<pos:position pos:line="71" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="34">&amp;<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="35">ucpData<pos:position pos:line="71" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="44">nData<pos:position pos:line="71" pos:column="49"/></name></expr></argument>)<pos:position pos:line="71" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="51"/></expr_stmt>

    <return pos:line="73" pos:column="5">return <expr><name pos:line="73" pos:column="12">sess<pos:position pos:line="73" pos:column="16"/></name></expr>;<pos:position pos:line="73" pos:column="17"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

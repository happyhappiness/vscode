<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2280_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">sniff_encoding<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">request_rec<pos:position pos:line="1" pos:column="39"/></name><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type> <name pos:line="1" pos:column="41">r<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">xml2ctx<pos:position pos:line="1" pos:column="51"/></name><modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type> <name pos:line="1" pos:column="53">ctx<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">xml2cfg<pos:position pos:line="3" pos:column="12"/></name><modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type> <name pos:line="3" pos:column="14">cfg<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name pos:line="3" pos:column="20">NULL<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt> <comment type="block" pos:line="3" pos:column="26">/* initialise to shut compiler warnings up */</comment>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name><modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type> <name pos:line="4" pos:column="11">p<pos:position pos:line="4" pos:column="12"/></name></decl> ;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_bucket<pos:position pos:line="5" pos:column="15"/></name><modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type> <name pos:line="5" pos:column="17">cutb<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket<pos:position pos:line="6" pos:column="15"/></name><modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type> <name pos:line="6" pos:column="17">cute<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_bucket<pos:position pos:line="7" pos:column="15"/></name><modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type> <name pos:line="7" pos:column="17">b<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ap_regmatch_t<pos:position pos:line="8" pos:column="18"/></name></type> <name><name pos:line="8" pos:column="19">match<pos:position pos:line="8" pos:column="24"/></name><index pos:line="8" pos:column="24">[<expr><literal type="number" pos:line="8" pos:column="25">2<pos:position pos:line="8" pos:column="26"/></literal></expr>]<pos:position pos:line="8" pos:column="27"/></index></name></decl> ;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">rv<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name><modifier pos:line="10" pos:column="15">*<pos:position pos:line="10" pos:column="16"/></modifier></type> <name pos:line="10" pos:column="17">ctype<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><name><name pos:line="10" pos:column="25">r<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">content_type<pos:position pos:line="10" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="41"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">ctype<pos:position pos:line="12" pos:column="14"/></name></expr>)<pos:position pos:line="12" pos:column="15"/></condition><then pos:line="12" pos:column="15"> <block pos:line="12" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_log_rerror<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">APLOG_MARK<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">APLOG_DEBUG<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="48">0<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">r<pos:position pos:line="13" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="54">APLOGNO<pos:position pos:line="13" pos:column="61"/></name><argument_list pos:line="13" pos:column="61">(<argument><expr><literal type="number" pos:line="13" pos:column="62">01430<pos:position pos:line="13" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call>
                      <literal type="string" pos:line="14" pos:column="23">"Content-Type is %s"<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">ctype<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr> ;<pos:position pos:line="14" pos:column="53"/></expr_stmt>

        <comment type="block" pos:line="16" pos:column="9">/* If we've got it in the HTTP headers, there's nothing to do */</comment>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">ctype<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">&amp;&amp;<pos:position pos:line="17" pos:column="29"/></operator> <operator pos:line="17" pos:column="22">(<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">p<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <call><name pos:line="17" pos:column="27">ap_strcasestr<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name pos:line="17" pos:column="41">ctype<pos:position pos:line="17" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="48">"charset="<pos:position pos:line="17" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call> <operator pos:line="17" pos:column="60">,<pos:position pos:line="17" pos:column="61"/></operator> <name pos:line="17" pos:column="62">p<pos:position pos:line="17" pos:column="63"/></name> <operator pos:line="17" pos:column="64">!=<pos:position pos:line="17" pos:column="66"/></operator> <name pos:line="17" pos:column="67">NULL<pos:position pos:line="17" pos:column="71"/></name><operator pos:line="17" pos:column="71">)<pos:position pos:line="17" pos:column="72"/></operator></expr>)<pos:position pos:line="17" pos:column="73"/></condition><then pos:line="17" pos:column="73"> <block pos:line="17" pos:column="74">{
            <expr_stmt><expr><name pos:line="18" pos:column="13">p<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">+=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">8<pos:position pos:line="18" pos:column="19"/></literal></expr> ;<pos:position pos:line="18" pos:column="21"/></expr_stmt>
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><name><name pos:line="19" pos:column="17">ctx<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">encoding<pos:position pos:line="19" pos:column="30"/></name></name> <operator pos:line="19" pos:column="31">=<pos:position pos:line="19" pos:column="32"/></operator> <call><name pos:line="19" pos:column="33">apr_pstrndup<pos:position pos:line="19" pos:column="45"/></name><argument_list pos:line="19" pos:column="45">(<argument><expr><name><name pos:line="19" pos:column="46">r<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">pool<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="55">p<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="58">strcspn<pos:position pos:line="19" pos:column="65"/></name><argument_list pos:line="19" pos:column="65">(<argument><expr><name pos:line="19" pos:column="66">p<pos:position pos:line="19" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="69">" ;"<pos:position pos:line="19" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></call></expr></argument> )<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr><operator pos:line="19" pos:column="76">,<pos:position pos:line="19" pos:column="77"/></operator>
                <expr><name><name pos:line="20" pos:column="17">ctx<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">-&gt;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">encoding<pos:position pos:line="20" pos:column="30"/></name></name></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31"> <block pos:line="20" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="21" pos:column="17">ap_log_rerror<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">APLOG_MARK<pos:position pos:line="21" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="43">APLOG_INFO<pos:position pos:line="21" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="55">0<pos:position pos:line="21" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="58">r<pos:position pos:line="21" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="61">APLOGNO<pos:position pos:line="21" pos:column="68"/></name><argument_list pos:line="21" pos:column="68">(<argument><expr><literal type="number" pos:line="21" pos:column="69">01431<pos:position pos:line="21" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call>
                              <literal type="string" pos:line="22" pos:column="31">"Got charset %s from HTTP headers"<pos:position pos:line="22" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="67">ctx<pos:position pos:line="22" pos:column="70"/></name><operator pos:line="22" pos:column="70">-&gt;<pos:position pos:line="22" pos:column="75"/></operator><name pos:line="22" pos:column="72">encoding<pos:position pos:line="22" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="81"/></argument_list></call></expr> ;<pos:position pos:line="22" pos:column="83"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="23" pos:column="17">ctx<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">xml2enc<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <call><name pos:line="23" pos:column="32">xmlParseCharEncoding<pos:position pos:line="23" pos:column="52"/></name><argument_list pos:line="23" pos:column="52">(<argument><expr><name><name pos:line="23" pos:column="53">ctx<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">-&gt;<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="58">encoding<pos:position pos:line="23" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="24" pos:column="14"/></block></then></if>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
  
    <comment type="block" pos:line="28" pos:column="5">/* to sniff, first we look for BOM */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">ctx<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">xml2enc<pos:position pos:line="29" pos:column="21"/></name></name> <operator pos:line="29" pos:column="22">==<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">XML_CHAR_ENCODING_NONE<pos:position pos:line="29" pos:column="47"/></name></expr>)<pos:position pos:line="29" pos:column="48"/></condition><then pos:line="29" pos:column="48"> <block pos:line="29" pos:column="49">{
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">ctx<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">xml2enc<pos:position pos:line="30" pos:column="21"/></name></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <call><name pos:line="30" pos:column="24">xmlDetectCharEncoding<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><operator pos:line="30" pos:column="46">(<pos:position pos:line="30" pos:column="47"/></operator><specifier pos:line="30" pos:column="47">const<pos:position pos:line="30" pos:column="52"/></specifier> <name pos:line="30" pos:column="53">xmlChar<pos:position pos:line="30" pos:column="60"/></name><operator pos:line="30" pos:column="60">*<pos:position pos:line="30" pos:column="61"/></operator><operator pos:line="30" pos:column="61">)<pos:position pos:line="30" pos:column="62"/></operator><name><name pos:line="30" pos:column="62">ctx<pos:position pos:line="30" pos:column="65"/></name><operator pos:line="30" pos:column="65">-&gt;<pos:position pos:line="30" pos:column="70"/></operator><name pos:line="30" pos:column="67">buf<pos:position pos:line="30" pos:column="70"/></name></name></expr></argument>,
                                             <argument><expr><name><name pos:line="31" pos:column="46">ctx<pos:position pos:line="31" pos:column="49"/></name><operator pos:line="31" pos:column="49">-&gt;<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="51">bytes<pos:position pos:line="31" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt> 
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name pos:line="32" pos:column="13">HAVE_ENCODING<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name><name pos:line="32" pos:column="27">ctx<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">-&gt;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="32">xml2enc<pos:position pos:line="32" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="41"/></condition><then pos:line="32" pos:column="41"> <block pos:line="32" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">ap_log_rerror<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name pos:line="33" pos:column="27">APLOG_MARK<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">APLOG_INFO<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="51">0<pos:position pos:line="33" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="54">r<pos:position pos:line="33" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="57">APLOGNO<pos:position pos:line="33" pos:column="64"/></name><argument_list pos:line="33" pos:column="64">(<argument><expr><literal type="number" pos:line="33" pos:column="65">01432<pos:position pos:line="33" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="71"/></argument_list></call>
                          <literal type="string" pos:line="34" pos:column="27">"Got charset from XML rules."<pos:position pos:line="34" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr> ;<pos:position pos:line="34" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">ctx<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">-&gt;<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="18">encoding<pos:position pos:line="35" pos:column="26"/></name></name> <operator pos:line="35" pos:column="27">=<pos:position pos:line="35" pos:column="28"/></operator> <call><name pos:line="35" pos:column="29">xmlGetCharEncodingName<pos:position pos:line="35" pos:column="51"/></name><argument_list pos:line="35" pos:column="51">(<argument><expr><name><name pos:line="35" pos:column="52">ctx<pos:position pos:line="35" pos:column="55"/></name><operator pos:line="35" pos:column="55">-&gt;<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="57">xml2enc<pos:position pos:line="35" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/* If none of the above, look for a META-thingey */</comment>
    <comment type="block" pos:line="40" pos:column="5">/* also we're probably about to invalidate it, so we remove it. */</comment>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><call><name pos:line="41" pos:column="9">ap_regexec<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><name pos:line="41" pos:column="20">seek_meta_ctype<pos:position pos:line="41" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="37">ctx<pos:position pos:line="41" pos:column="40"/></name><operator pos:line="41" pos:column="40">-&gt;<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="42">buf<pos:position pos:line="41" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="47">1<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">match<pos:position pos:line="41" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="57">0<pos:position pos:line="41" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call> <operator pos:line="41" pos:column="60">==<pos:position pos:line="41" pos:column="62"/></operator> <literal type="number" pos:line="41" pos:column="63">0<pos:position pos:line="41" pos:column="64"/></literal></expr> )<pos:position pos:line="41" pos:column="66"/></condition><then pos:line="41" pos:column="66"> <block pos:line="41" pos:column="67">{
        <comment type="block" pos:line="42" pos:column="9">/* get markers on the start and end of the match */</comment>
        <expr_stmt><expr><name pos:line="43" pos:column="9">rv<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <call><name pos:line="43" pos:column="14">apr_brigade_partition<pos:position pos:line="43" pos:column="35"/></name><argument_list pos:line="43" pos:column="35">(<argument><expr><name><name pos:line="43" pos:column="36">ctx<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">-&gt;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="41">bbsave<pos:position pos:line="43" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="49">match<pos:position pos:line="43" pos:column="54"/></name><index pos:line="43" pos:column="54">[<expr><literal type="number" pos:line="43" pos:column="55">0<pos:position pos:line="43" pos:column="56"/></literal></expr>]<pos:position pos:line="43" pos:column="57"/></index></name><operator pos:line="43" pos:column="57">.<pos:position pos:line="43" pos:column="58"/></operator><name pos:line="43" pos:column="58">rm_eo<pos:position pos:line="43" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="65">&amp;<pos:position pos:line="43" pos:column="70"/></operator><name pos:line="43" pos:column="66">cute<pos:position pos:line="43" pos:column="70"/></name></expr></argument>)<pos:position pos:line="43" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">ap_assert<pos:position pos:line="44" pos:column="18"/></name><argument_list pos:line="44" pos:column="18">(<argument><expr><name pos:line="44" pos:column="19">rv<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">==<pos:position pos:line="44" pos:column="24"/></operator> <name pos:line="44" pos:column="25">APR_SUCCESS<pos:position pos:line="44" pos:column="36"/></name></expr></argument>)<pos:position pos:line="44" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="45" pos:column="9">rv<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <call><name pos:line="45" pos:column="14">apr_brigade_partition<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name><name pos:line="45" pos:column="36">ctx<pos:position pos:line="45" pos:column="39"/></name><operator pos:line="45" pos:column="39">-&gt;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="41">bbsave<pos:position pos:line="45" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="49">match<pos:position pos:line="45" pos:column="54"/></name><index pos:line="45" pos:column="54">[<expr><literal type="number" pos:line="45" pos:column="55">0<pos:position pos:line="45" pos:column="56"/></literal></expr>]<pos:position pos:line="45" pos:column="57"/></index></name><operator pos:line="45" pos:column="57">.<pos:position pos:line="45" pos:column="58"/></operator><name pos:line="45" pos:column="58">rm_so<pos:position pos:line="45" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="65">&amp;<pos:position pos:line="45" pos:column="70"/></operator><name pos:line="45" pos:column="66">cutb<pos:position pos:line="45" pos:column="70"/></name></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">ap_assert<pos:position pos:line="46" pos:column="18"/></name><argument_list pos:line="46" pos:column="18">(<argument><expr><name pos:line="46" pos:column="19">rv<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">==<pos:position pos:line="46" pos:column="24"/></operator> <name pos:line="46" pos:column="25">APR_SUCCESS<pos:position pos:line="46" pos:column="36"/></name></expr></argument>)<pos:position pos:line="46" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
        <comment type="block" pos:line="47" pos:column="9">/* now set length of useful buf for start-of-data hooks */</comment>
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">ctx<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">bytes<pos:position pos:line="48" pos:column="19"/></name></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <name><name pos:line="48" pos:column="22">match<pos:position pos:line="48" pos:column="27"/></name><index pos:line="48" pos:column="27">[<expr><literal type="number" pos:line="48" pos:column="28">0<pos:position pos:line="48" pos:column="29"/></literal></expr>]<pos:position pos:line="48" pos:column="30"/></index></name><operator pos:line="48" pos:column="30">.<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="31">rm_so<pos:position pos:line="48" pos:column="36"/></name></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name><name pos:line="49" pos:column="13">ctx<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">encoding<pos:position pos:line="49" pos:column="26"/></name></name> <operator pos:line="49" pos:column="27">==<pos:position pos:line="49" pos:column="29"/></operator> <name pos:line="49" pos:column="30">NULL<pos:position pos:line="49" pos:column="34"/></name></expr>)<pos:position pos:line="49" pos:column="35"/></condition><then pos:line="49" pos:column="35"> <block pos:line="49" pos:column="36">{
            <expr_stmt><expr><name pos:line="50" pos:column="13">p<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <call><name pos:line="50" pos:column="17">apr_pstrndup<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><name><name pos:line="50" pos:column="30">r<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">-&gt;<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="33">pool<pos:position pos:line="50" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="39">ctx<pos:position pos:line="50" pos:column="42"/></name><operator pos:line="50" pos:column="42">-&gt;<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="44">buf<pos:position pos:line="50" pos:column="47"/></name></name> <operator pos:line="50" pos:column="48">+<pos:position pos:line="50" pos:column="49"/></operator> <name><name pos:line="50" pos:column="50">match<pos:position pos:line="50" pos:column="55"/></name><index pos:line="50" pos:column="55">[<expr><literal type="number" pos:line="50" pos:column="56">0<pos:position pos:line="50" pos:column="57"/></literal></expr>]<pos:position pos:line="50" pos:column="58"/></index></name><operator pos:line="50" pos:column="58">.<pos:position pos:line="50" pos:column="59"/></operator><name pos:line="50" pos:column="59">rm_so<pos:position pos:line="50" pos:column="64"/></name></expr></argument>,
                             <argument><expr><name><name pos:line="51" pos:column="30">match<pos:position pos:line="51" pos:column="35"/></name><index pos:line="51" pos:column="35">[<expr><literal type="number" pos:line="51" pos:column="36">0<pos:position pos:line="51" pos:column="37"/></literal></expr>]<pos:position pos:line="51" pos:column="38"/></index></name><operator pos:line="51" pos:column="38">.<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="39">rm_eo<pos:position pos:line="51" pos:column="44"/></name> <operator pos:line="51" pos:column="45">-<pos:position pos:line="51" pos:column="46"/></operator> <name><name pos:line="51" pos:column="47">match<pos:position pos:line="51" pos:column="52"/></name><index pos:line="51" pos:column="52">[<expr><literal type="number" pos:line="51" pos:column="53">0<pos:position pos:line="51" pos:column="54"/></literal></expr>]<pos:position pos:line="51" pos:column="55"/></index></name><operator pos:line="51" pos:column="55">.<pos:position pos:line="51" pos:column="56"/></operator><name pos:line="51" pos:column="56">rm_so<pos:position pos:line="51" pos:column="61"/></name></expr></argument>)<pos:position pos:line="51" pos:column="62"/></argument_list></call></expr> ;<pos:position pos:line="51" pos:column="64"/></expr_stmt>
            <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><call><name pos:line="52" pos:column="17">ap_regexec<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">seek_charset<pos:position pos:line="52" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="42">p<pos:position pos:line="52" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="45">2<pos:position pos:line="52" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="48">match<pos:position pos:line="52" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="55">0<pos:position pos:line="52" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call> <operator pos:line="52" pos:column="58">==<pos:position pos:line="52" pos:column="60"/></operator> <literal type="number" pos:line="52" pos:column="61">0<pos:position pos:line="52" pos:column="62"/></literal></expr>)<pos:position pos:line="52" pos:column="63"/></condition><then pos:line="52" pos:column="63"> <block pos:line="52" pos:column="64">{
                <if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name><name pos:line="53" pos:column="21">ctx<pos:position pos:line="53" pos:column="24"/></name><operator pos:line="53" pos:column="24">-&gt;<pos:position pos:line="53" pos:column="29"/></operator><name pos:line="53" pos:column="26">encoding<pos:position pos:line="53" pos:column="34"/></name></name> <operator pos:line="53" pos:column="35">=<pos:position pos:line="53" pos:column="36"/></operator> <call><name pos:line="53" pos:column="37">apr_pstrndup<pos:position pos:line="53" pos:column="49"/></name><argument_list pos:line="53" pos:column="49">(<argument><expr><name><name pos:line="53" pos:column="50">r<pos:position pos:line="53" pos:column="51"/></name><operator pos:line="53" pos:column="51">-&gt;<pos:position pos:line="53" pos:column="56"/></operator><name pos:line="53" pos:column="53">pool<pos:position pos:line="53" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="59">p<pos:position pos:line="53" pos:column="60"/></name><operator pos:line="53" pos:column="60">+<pos:position pos:line="53" pos:column="61"/></operator><name><name pos:line="53" pos:column="61">match<pos:position pos:line="53" pos:column="66"/></name><index pos:line="53" pos:column="66">[<expr><literal type="number" pos:line="53" pos:column="67">1<pos:position pos:line="53" pos:column="68"/></literal></expr>]<pos:position pos:line="53" pos:column="69"/></index></name><operator pos:line="53" pos:column="69">.<pos:position pos:line="53" pos:column="70"/></operator><name pos:line="53" pos:column="70">rm_so<pos:position pos:line="53" pos:column="75"/></name></expr></argument>,
                                               <argument><expr><name><name pos:line="54" pos:column="48">match<pos:position pos:line="54" pos:column="53"/></name><index pos:line="54" pos:column="53">[<expr><literal type="number" pos:line="54" pos:column="54">1<pos:position pos:line="54" pos:column="55"/></literal></expr>]<pos:position pos:line="54" pos:column="56"/></index></name><operator pos:line="54" pos:column="56">.<pos:position pos:line="54" pos:column="57"/></operator><name pos:line="54" pos:column="57">rm_eo<pos:position pos:line="54" pos:column="62"/></name> <operator pos:line="54" pos:column="63">-<pos:position pos:line="54" pos:column="64"/></operator> <name><name pos:line="54" pos:column="65">match<pos:position pos:line="54" pos:column="70"/></name><index pos:line="54" pos:column="70">[<expr><literal type="number" pos:line="54" pos:column="71">1<pos:position pos:line="54" pos:column="72"/></literal></expr>]<pos:position pos:line="54" pos:column="73"/></index></name><operator pos:line="54" pos:column="73">.<pos:position pos:line="54" pos:column="74"/></operator><name pos:line="54" pos:column="74">rm_so<pos:position pos:line="54" pos:column="79"/></name></expr></argument>)<pos:position pos:line="54" pos:column="80"/></argument_list></call></expr><operator pos:line="54" pos:column="80">,<pos:position pos:line="54" pos:column="81"/></operator>
                    <expr><name><name pos:line="55" pos:column="21">ctx<pos:position pos:line="55" pos:column="24"/></name><operator pos:line="55" pos:column="24">-&gt;<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="26">encoding<pos:position pos:line="55" pos:column="34"/></name></name></expr>)<pos:position pos:line="55" pos:column="35"/></condition><then pos:line="55" pos:column="35"> <block pos:line="55" pos:column="36">{
                    <expr_stmt><expr><name><name pos:line="56" pos:column="21">ctx<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">-&gt;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="26">xml2enc<pos:position pos:line="56" pos:column="33"/></name></name> <operator pos:line="56" pos:column="34">=<pos:position pos:line="56" pos:column="35"/></operator> <call><name pos:line="56" pos:column="36">xmlParseCharEncoding<pos:position pos:line="56" pos:column="56"/></name><argument_list pos:line="56" pos:column="56">(<argument><expr><name><name pos:line="56" pos:column="57">ctx<pos:position pos:line="56" pos:column="60"/></name><operator pos:line="56" pos:column="60">-&gt;<pos:position pos:line="56" pos:column="65"/></operator><name pos:line="56" pos:column="62">encoding<pos:position pos:line="56" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="72"/></expr_stmt>
                    <if pos:line="57" pos:column="21">if <condition pos:line="57" pos:column="24">(<expr><call><name pos:line="57" pos:column="25">HAVE_ENCODING<pos:position pos:line="57" pos:column="38"/></name><argument_list pos:line="57" pos:column="38">(<argument><expr><name><name pos:line="57" pos:column="39">ctx<pos:position pos:line="57" pos:column="42"/></name><operator pos:line="57" pos:column="42">-&gt;<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="44">xml2enc<pos:position pos:line="57" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="53"/></condition><then pos:line="57" pos:column="53">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="25">ap_log_rerror<pos:position pos:line="58" pos:column="38"/></name><argument_list pos:line="58" pos:column="38">(<argument><expr><name pos:line="58" pos:column="39">APLOG_MARK<pos:position pos:line="58" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="51">APLOG_INFO<pos:position pos:line="58" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="63">0<pos:position pos:line="58" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="66">r<pos:position pos:line="58" pos:column="67"/></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="69">APLOGNO<pos:position pos:line="58" pos:column="76"/></name><argument_list pos:line="58" pos:column="76">(<argument><expr><literal type="number" pos:line="58" pos:column="77">01433<pos:position pos:line="58" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="83"/></argument_list></call>
                                      <literal type="string" pos:line="59" pos:column="39">"Got charset %s from HTML META"<pos:position pos:line="59" pos:column="70"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="72">ctx<pos:position pos:line="59" pos:column="75"/></name><operator pos:line="59" pos:column="75">-&gt;<pos:position pos:line="59" pos:column="80"/></operator><name pos:line="59" pos:column="77">encoding<pos:position pos:line="59" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="86"/></argument_list></call></expr> ;<pos:position pos:line="59" pos:column="88"/></expr_stmt></block></then></if>
                }<pos:position pos:line="60" pos:column="18"/></block></then></if>
            }<pos:position pos:line="61" pos:column="14"/></block></then></if>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="64" pos:column="9">/* cut out the &lt;meta&gt; we're invalidating */</comment>
        <while pos:line="65" pos:column="9">while <condition pos:line="65" pos:column="15">(<expr><name pos:line="65" pos:column="16">cutb<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">!=<pos:position pos:line="65" pos:column="23"/></operator> <name pos:line="65" pos:column="24">cute<pos:position pos:line="65" pos:column="28"/></name></expr>)<pos:position pos:line="65" pos:column="29"/></condition> <block pos:line="65" pos:column="30">{
            <expr_stmt><expr><name pos:line="66" pos:column="13">b<pos:position pos:line="66" pos:column="14"/></name> <operator pos:line="66" pos:column="15">=<pos:position pos:line="66" pos:column="16"/></operator> <call><name pos:line="66" pos:column="17">APR_BUCKET_NEXT<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">(<argument><expr><name pos:line="66" pos:column="33">cutb<pos:position pos:line="66" pos:column="37"/></name></expr></argument>)<pos:position pos:line="66" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="67" pos:column="30"/></name><argument_list pos:line="67" pos:column="30">(<argument><expr><name pos:line="67" pos:column="31">cutb<pos:position pos:line="67" pos:column="35"/></name></expr></argument>)<pos:position pos:line="67" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">apr_bucket_destroy<pos:position pos:line="68" pos:column="31"/></name><argument_list pos:line="68" pos:column="31">(<argument><expr><name pos:line="68" pos:column="32">cutb<pos:position pos:line="68" pos:column="36"/></name></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name pos:line="69" pos:column="13">cutb<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <name pos:line="69" pos:column="20">b<pos:position pos:line="69" pos:column="21"/></name></expr>;<pos:position pos:line="69" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></while>
        <comment type="block" pos:line="71" pos:column="9">/* and leave a string */</comment>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">ctx<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">-&gt;<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="14">buf<pos:position pos:line="72" pos:column="17"/></name><index pos:line="72" pos:column="17">[<expr><name><name pos:line="72" pos:column="18">ctx<pos:position pos:line="72" pos:column="21"/></name><operator pos:line="72" pos:column="21">-&gt;<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="23">bytes<pos:position pos:line="72" pos:column="28"/></name></name></expr>]<pos:position pos:line="72" pos:column="29"/></index></name> <operator pos:line="72" pos:column="30">=<pos:position pos:line="72" pos:column="31"/></operator> <literal type="number" pos:line="72" pos:column="32">0<pos:position pos:line="72" pos:column="33"/></literal></expr>;<pos:position pos:line="72" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="75" pos:column="5">/* either it's set to something we found or it's still the default */</comment>
    <comment type="block" pos:line="76" pos:column="5">/* Aaargh!  libxml2 has undocumented &lt;META-crap&gt; support.  So this fails
     * if metafix is not active.  Have to make it conditional.
     *
     * No, that means no-metafix breaks things.  Deal immediately with
     * this particular instance of metafix.
     */</comment>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><operator pos:line="82" pos:column="9">!<pos:position pos:line="82" pos:column="10"/></operator><call><name pos:line="82" pos:column="10">HAVE_ENCODING<pos:position pos:line="82" pos:column="23"/></name><argument_list pos:line="82" pos:column="23">(<argument><expr><name><name pos:line="82" pos:column="24">ctx<pos:position pos:line="82" pos:column="27"/></name><operator pos:line="82" pos:column="27">-&gt;<pos:position pos:line="82" pos:column="32"/></operator><name pos:line="82" pos:column="29">xml2enc<pos:position pos:line="82" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="38"/></condition><then pos:line="82" pos:column="38"> <block pos:line="82" pos:column="39">{
        <expr_stmt><expr><name pos:line="83" pos:column="9">cfg<pos:position pos:line="83" pos:column="12"/></name> <operator pos:line="83" pos:column="13">=<pos:position pos:line="83" pos:column="14"/></operator> <call><name pos:line="83" pos:column="15">ap_get_module_config<pos:position pos:line="83" pos:column="35"/></name><argument_list pos:line="83" pos:column="35">(<argument><expr><name><name pos:line="83" pos:column="36">r<pos:position pos:line="83" pos:column="37"/></name><operator pos:line="83" pos:column="37">-&gt;<pos:position pos:line="83" pos:column="42"/></operator><name pos:line="83" pos:column="39">per_dir_config<pos:position pos:line="83" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="55">&amp;<pos:position pos:line="83" pos:column="60"/></operator><name pos:line="83" pos:column="56">xml2enc_module<pos:position pos:line="83" pos:column="70"/></name></expr></argument>)<pos:position pos:line="83" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="72"/></expr_stmt>
        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><operator pos:line="84" pos:column="13">!<pos:position pos:line="84" pos:column="14"/></operator><name><name pos:line="84" pos:column="14">ctx<pos:position pos:line="84" pos:column="17"/></name><operator pos:line="84" pos:column="17">-&gt;<pos:position pos:line="84" pos:column="22"/></operator><name pos:line="84" pos:column="19">encoding<pos:position pos:line="84" pos:column="27"/></name></name></expr>)<pos:position pos:line="84" pos:column="28"/></condition><then pos:line="84" pos:column="28"> <block pos:line="84" pos:column="29">{
            <expr_stmt><expr><name><name pos:line="85" pos:column="13">ctx<pos:position pos:line="85" pos:column="16"/></name><operator pos:line="85" pos:column="16">-&gt;<pos:position pos:line="85" pos:column="21"/></operator><name pos:line="85" pos:column="18">encoding<pos:position pos:line="85" pos:column="26"/></name></name> <operator pos:line="85" pos:column="27">=<pos:position pos:line="85" pos:column="28"/></operator> <ternary><condition><expr><name><name pos:line="85" pos:column="29">cfg<pos:position pos:line="85" pos:column="32"/></name><operator pos:line="85" pos:column="32">-&gt;<pos:position pos:line="85" pos:column="37"/></operator><name pos:line="85" pos:column="34">default_charset<pos:position pos:line="85" pos:column="49"/></name></name></expr>?<pos:position pos:line="85" pos:column="50"/></condition><then><expr><name><name pos:line="85" pos:column="50">cfg<pos:position pos:line="85" pos:column="53"/></name><operator pos:line="85" pos:column="53">-&gt;<pos:position pos:line="85" pos:column="58"/></operator><name pos:line="85" pos:column="55">default_charset<pos:position pos:line="85" pos:column="70"/></name></name></expr></then><else pos:line="85" pos:column="70">:<expr><literal type="string" pos:line="85" pos:column="71">"ISO-8859-1"<pos:position pos:line="85" pos:column="83"/></literal></expr></else></ternary></expr>;<pos:position pos:line="85" pos:column="84"/></expr_stmt>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="87" pos:column="9">/* Unsupported charset. Can we get (iconv) support through apr_xlate? */</comment>
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">ap_log_rerror<pos:position pos:line="88" pos:column="22"/></name><argument_list pos:line="88" pos:column="22">(<argument><expr><name pos:line="88" pos:column="23">APLOG_MARK<pos:position pos:line="88" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="35">APLOG_DEBUG<pos:position pos:line="88" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="48">0<pos:position pos:line="88" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="51">r<pos:position pos:line="88" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="88" pos:column="54">APLOGNO<pos:position pos:line="88" pos:column="61"/></name><argument_list pos:line="88" pos:column="61">(<argument><expr><literal type="number" pos:line="88" pos:column="62">01434<pos:position pos:line="88" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="68"/></argument_list></call>
                      <literal type="string" pos:line="89" pos:column="23">"Charset %s not supported by libxml2; trying apr_xlate"<pos:position pos:line="89" pos:column="78"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="90" pos:column="23">ctx<pos:position pos:line="90" pos:column="26"/></name><operator pos:line="90" pos:column="26">-&gt;<pos:position pos:line="90" pos:column="31"/></operator><name pos:line="90" pos:column="28">encoding<pos:position pos:line="90" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="38"/></expr_stmt>
        <if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><call><name pos:line="91" pos:column="13">apr_xlate_open<pos:position pos:line="91" pos:column="27"/></name><argument_list pos:line="91" pos:column="27">(<argument><expr><operator pos:line="91" pos:column="28">&amp;<pos:position pos:line="91" pos:column="33"/></operator><name><name pos:line="91" pos:column="29">ctx<pos:position pos:line="91" pos:column="32"/></name><operator pos:line="91" pos:column="32">-&gt;<pos:position pos:line="91" pos:column="37"/></operator><name pos:line="91" pos:column="34">convset<pos:position pos:line="91" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="43">"UTF-8"<pos:position pos:line="91" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="52">ctx<pos:position pos:line="91" pos:column="55"/></name><operator pos:line="91" pos:column="55">-&gt;<pos:position pos:line="91" pos:column="60"/></operator><name pos:line="91" pos:column="57">encoding<pos:position pos:line="91" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="67">r<pos:position pos:line="91" pos:column="68"/></name><operator pos:line="91" pos:column="68">-&gt;<pos:position pos:line="91" pos:column="73"/></operator><name pos:line="91" pos:column="70">pool<pos:position pos:line="91" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="75"/></argument_list></call>
            <operator pos:line="92" pos:column="13">==<pos:position pos:line="92" pos:column="15"/></operator> <name pos:line="92" pos:column="16">APR_SUCCESS<pos:position pos:line="92" pos:column="27"/></name></expr>)<pos:position pos:line="92" pos:column="28"/></condition><then pos:line="92" pos:column="28"> <block pos:line="92" pos:column="29">{
            <expr_stmt><expr><name><name pos:line="93" pos:column="13">ctx<pos:position pos:line="93" pos:column="16"/></name><operator pos:line="93" pos:column="16">-&gt;<pos:position pos:line="93" pos:column="21"/></operator><name pos:line="93" pos:column="18">xml2enc<pos:position pos:line="93" pos:column="25"/></name></name> <operator pos:line="93" pos:column="26">=<pos:position pos:line="93" pos:column="27"/></operator> <name pos:line="93" pos:column="28">XML_CHAR_ENCODING_UTF8<pos:position pos:line="93" pos:column="50"/></name></expr> ;<pos:position pos:line="93" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="94" pos:column="10"/></block></then> <else pos:line="94" pos:column="11">else <block pos:line="94" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">ap_log_rerror<pos:position pos:line="95" pos:column="26"/></name><argument_list pos:line="95" pos:column="26">(<argument><expr><name pos:line="95" pos:column="27">APLOG_MARK<pos:position pos:line="95" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="39">APLOG_ERR<pos:position pos:line="95" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="50">0<pos:position pos:line="95" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="53">r<pos:position pos:line="95" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="95" pos:column="56">APLOGNO<pos:position pos:line="95" pos:column="63"/></name><argument_list pos:line="95" pos:column="63">(<argument><expr><literal type="number" pos:line="95" pos:column="64">01435<pos:position pos:line="95" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="70"/></argument_list></call>
                          <literal type="string" pos:line="96" pos:column="27">"Charset %s not supported.  Consider aliasing it?"<pos:position pos:line="96" pos:column="77"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="97" pos:column="27">ctx<pos:position pos:line="97" pos:column="30"/></name><operator pos:line="97" pos:column="30">-&gt;<pos:position pos:line="97" pos:column="35"/></operator><name pos:line="97" pos:column="32">encoding<pos:position pos:line="97" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="41"/></argument_list></call></expr> ;<pos:position pos:line="97" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="98" pos:column="10"/></block></else></if>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>

    <if pos:line="101" pos:column="5">if <condition pos:line="101" pos:column="8">(<expr><operator pos:line="101" pos:column="9">!<pos:position pos:line="101" pos:column="10"/></operator><call><name pos:line="101" pos:column="10">HAVE_ENCODING<pos:position pos:line="101" pos:column="23"/></name><argument_list pos:line="101" pos:column="23">(<argument><expr><name><name pos:line="101" pos:column="24">ctx<pos:position pos:line="101" pos:column="27"/></name><operator pos:line="101" pos:column="27">-&gt;<pos:position pos:line="101" pos:column="32"/></operator><name pos:line="101" pos:column="29">xml2enc<pos:position pos:line="101" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="38"/></condition><then pos:line="101" pos:column="38"> <block pos:line="101" pos:column="39">{
        <comment type="block" pos:line="102" pos:column="9">/* Use configuration default as a last resort */</comment>
        <expr_stmt><expr><call><name pos:line="103" pos:column="9">ap_log_rerror<pos:position pos:line="103" pos:column="22"/></name><argument_list pos:line="103" pos:column="22">(<argument><expr><name pos:line="103" pos:column="23">APLOG_MARK<pos:position pos:line="103" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="35">APLOG_WARNING<pos:position pos:line="103" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="50">0<pos:position pos:line="103" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="53">r<pos:position pos:line="103" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="103" pos:column="56">APLOGNO<pos:position pos:line="103" pos:column="63"/></name><argument_list pos:line="103" pos:column="63">(<argument><expr><literal type="number" pos:line="103" pos:column="64">01436<pos:position pos:line="103" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="70"/></argument_list></call>
                  <literal type="string" pos:line="104" pos:column="19">"No usable charset information; using configuration default"<pos:position pos:line="104" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="105" pos:column="9">ctx<pos:position pos:line="105" pos:column="12"/></name><operator pos:line="105" pos:column="12">-&gt;<pos:position pos:line="105" pos:column="17"/></operator><name pos:line="105" pos:column="14">xml2enc<pos:position pos:line="105" pos:column="21"/></name></name> <operator pos:line="105" pos:column="22">=<pos:position pos:line="105" pos:column="23"/></operator> <ternary><condition><expr><operator pos:line="105" pos:column="24">(<pos:position pos:line="105" pos:column="25"/></operator><name><name pos:line="105" pos:column="25">cfg<pos:position pos:line="105" pos:column="28"/></name><operator pos:line="105" pos:column="28">-&gt;<pos:position pos:line="105" pos:column="33"/></operator><name pos:line="105" pos:column="30">default_encoding<pos:position pos:line="105" pos:column="46"/></name></name> <operator pos:line="105" pos:column="47">==<pos:position pos:line="105" pos:column="49"/></operator> <name pos:line="105" pos:column="50">XML_CHAR_ENCODING_NONE<pos:position pos:line="105" pos:column="72"/></name><operator pos:line="105" pos:column="72">)<pos:position pos:line="105" pos:column="73"/></operator></expr>
                        ?<pos:position pos:line="106" pos:column="26"/></condition><then pos:line="106" pos:column="26"> <expr><name pos:line="106" pos:column="27">XML_CHAR_ENCODING_8859_1<pos:position pos:line="106" pos:column="51"/></name></expr> <pos:position pos:line="106" pos:column="52"/></then><else pos:line="106" pos:column="52">: <expr><name><name pos:line="106" pos:column="54">cfg<pos:position pos:line="106" pos:column="57"/></name><operator pos:line="106" pos:column="57">-&gt;<pos:position pos:line="106" pos:column="62"/></operator><name pos:line="106" pos:column="59">default_encoding<pos:position pos:line="106" pos:column="75"/></name></name></expr></else></ternary></expr> ;<pos:position pos:line="106" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if>
    <if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><name pos:line="108" pos:column="9">ctype<pos:position pos:line="108" pos:column="14"/></name> <operator pos:line="108" pos:column="15">&amp;&amp;<pos:position pos:line="108" pos:column="25"/></operator> <name><name pos:line="108" pos:column="18">ctx<pos:position pos:line="108" pos:column="21"/></name><operator pos:line="108" pos:column="21">-&gt;<pos:position pos:line="108" pos:column="26"/></operator><name pos:line="108" pos:column="23">encoding<pos:position pos:line="108" pos:column="31"/></name></name></expr>)<pos:position pos:line="108" pos:column="32"/></condition><then pos:line="108" pos:column="32"> <block pos:line="108" pos:column="33">{
        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><call><name pos:line="109" pos:column="13">ap_regexec<pos:position pos:line="109" pos:column="23"/></name><argument_list pos:line="109" pos:column="23">(<argument><expr><name pos:line="109" pos:column="24">seek_charset<pos:position pos:line="109" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="38">ctype<pos:position pos:line="109" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="45">2<pos:position pos:line="109" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="48">match<pos:position pos:line="109" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="55">0<pos:position pos:line="109" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="58"/></condition><then pos:line="109" pos:column="58"> <block pos:line="109" pos:column="59">{
            <expr_stmt><expr><name><name pos:line="110" pos:column="13">r<pos:position pos:line="110" pos:column="14"/></name><operator pos:line="110" pos:column="14">-&gt;<pos:position pos:line="110" pos:column="19"/></operator><name pos:line="110" pos:column="16">content_type<pos:position pos:line="110" pos:column="28"/></name></name> <operator pos:line="110" pos:column="29">=<pos:position pos:line="110" pos:column="30"/></operator> <call><name pos:line="110" pos:column="31">apr_pstrcat<pos:position pos:line="110" pos:column="42"/></name><argument_list pos:line="110" pos:column="42">(<argument><expr><name><name pos:line="110" pos:column="43">r<pos:position pos:line="110" pos:column="44"/></name><operator pos:line="110" pos:column="44">-&gt;<pos:position pos:line="110" pos:column="49"/></operator><name pos:line="110" pos:column="46">pool<pos:position pos:line="110" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="52">ctype<pos:position pos:line="110" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="59">";charset=utf-8"<pos:position pos:line="110" pos:column="75"/></literal></expr></argument>,
                                          <argument><expr><name pos:line="111" pos:column="43">NULL<pos:position pos:line="111" pos:column="47"/></name></expr></argument>)<pos:position pos:line="111" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="112" pos:column="10"/></block></then> <else pos:line="112" pos:column="11">else <block pos:line="112" pos:column="16">{
            <decl_stmt><decl><type><name pos:line="113" pos:column="13">char<pos:position pos:line="113" pos:column="17"/></name><modifier pos:line="113" pos:column="17">*<pos:position pos:line="113" pos:column="18"/></modifier></type> <name pos:line="113" pos:column="19">str<pos:position pos:line="113" pos:column="22"/></name> <init pos:line="113" pos:column="23">= <expr><call><name pos:line="113" pos:column="25">apr_palloc<pos:position pos:line="113" pos:column="35"/></name><argument_list pos:line="113" pos:column="35">(<argument><expr><name><name pos:line="113" pos:column="36">r<pos:position pos:line="113" pos:column="37"/></name><operator pos:line="113" pos:column="37">-&gt;<pos:position pos:line="113" pos:column="42"/></operator><name pos:line="113" pos:column="39">pool<pos:position pos:line="113" pos:column="43"/></name></name></expr></argument>, <argument><expr><call><name pos:line="113" pos:column="45">strlen<pos:position pos:line="113" pos:column="51"/></name><argument_list pos:line="113" pos:column="51">(<argument><expr><name><name pos:line="113" pos:column="52">r<pos:position pos:line="113" pos:column="53"/></name><operator pos:line="113" pos:column="53">-&gt;<pos:position pos:line="113" pos:column="58"/></operator><name pos:line="113" pos:column="55">content_type<pos:position pos:line="113" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="68"/></argument_list></call> <operator pos:line="113" pos:column="69">+<pos:position pos:line="113" pos:column="70"/></operator> <literal type="number" pos:line="113" pos:column="71">13<pos:position pos:line="113" pos:column="73"/></literal>
                                   <operator pos:line="114" pos:column="36">-<pos:position pos:line="114" pos:column="37"/></operator> <operator pos:line="114" pos:column="38">(<pos:position pos:line="114" pos:column="39"/></operator><name><name pos:line="114" pos:column="39">match<pos:position pos:line="114" pos:column="44"/></name><index pos:line="114" pos:column="44">[<expr><literal type="number" pos:line="114" pos:column="45">0<pos:position pos:line="114" pos:column="46"/></literal></expr>]<pos:position pos:line="114" pos:column="47"/></index></name><operator pos:line="114" pos:column="47">.<pos:position pos:line="114" pos:column="48"/></operator><name pos:line="114" pos:column="48">rm_eo<pos:position pos:line="114" pos:column="53"/></name> <operator pos:line="114" pos:column="54">-<pos:position pos:line="114" pos:column="55"/></operator> <name><name pos:line="114" pos:column="56">match<pos:position pos:line="114" pos:column="61"/></name><index pos:line="114" pos:column="61">[<expr><literal type="number" pos:line="114" pos:column="62">0<pos:position pos:line="114" pos:column="63"/></literal></expr>]<pos:position pos:line="114" pos:column="64"/></index></name><operator pos:line="114" pos:column="64">.<pos:position pos:line="114" pos:column="65"/></operator><name pos:line="114" pos:column="65">rm_so<pos:position pos:line="114" pos:column="70"/></name><operator pos:line="114" pos:column="70">)<pos:position pos:line="114" pos:column="71"/></operator> <operator pos:line="114" pos:column="72">+<pos:position pos:line="114" pos:column="73"/></operator> <literal type="number" pos:line="114" pos:column="74">1<pos:position pos:line="114" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="114" pos:column="77"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="115" pos:column="13">memcpy<pos:position pos:line="115" pos:column="19"/></name><argument_list pos:line="115" pos:column="19">(<argument><expr><name pos:line="115" pos:column="20">str<pos:position pos:line="115" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="25">r<pos:position pos:line="115" pos:column="26"/></name><operator pos:line="115" pos:column="26">-&gt;<pos:position pos:line="115" pos:column="31"/></operator><name pos:line="115" pos:column="28">content_type<pos:position pos:line="115" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="42">match<pos:position pos:line="115" pos:column="47"/></name><index pos:line="115" pos:column="47">[<expr><literal type="number" pos:line="115" pos:column="48">1<pos:position pos:line="115" pos:column="49"/></literal></expr>]<pos:position pos:line="115" pos:column="50"/></index></name><operator pos:line="115" pos:column="50">.<pos:position pos:line="115" pos:column="51"/></operator><name pos:line="115" pos:column="51">rm_so<pos:position pos:line="115" pos:column="56"/></name></expr></argument>)<pos:position pos:line="115" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="116" pos:column="13">memcpy<pos:position pos:line="116" pos:column="19"/></name><argument_list pos:line="116" pos:column="19">(<argument><expr><name pos:line="116" pos:column="20">str<pos:position pos:line="116" pos:column="23"/></name> <operator pos:line="116" pos:column="24">+<pos:position pos:line="116" pos:column="25"/></operator> <name><name pos:line="116" pos:column="26">match<pos:position pos:line="116" pos:column="31"/></name><index pos:line="116" pos:column="31">[<expr><literal type="number" pos:line="116" pos:column="32">1<pos:position pos:line="116" pos:column="33"/></literal></expr>]<pos:position pos:line="116" pos:column="34"/></index></name><operator pos:line="116" pos:column="34">.<pos:position pos:line="116" pos:column="35"/></operator><name pos:line="116" pos:column="35">rm_so<pos:position pos:line="116" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="42">"utf-8"<pos:position pos:line="116" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="116" pos:column="51">5<pos:position pos:line="116" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="117" pos:column="13">strcpy<pos:position pos:line="117" pos:column="19"/></name><argument_list pos:line="117" pos:column="19">(<argument><expr><name pos:line="117" pos:column="20">str<pos:position pos:line="117" pos:column="23"/></name> <operator pos:line="117" pos:column="24">+<pos:position pos:line="117" pos:column="25"/></operator> <name><name pos:line="117" pos:column="26">match<pos:position pos:line="117" pos:column="31"/></name><index pos:line="117" pos:column="31">[<expr><literal type="number" pos:line="117" pos:column="32">1<pos:position pos:line="117" pos:column="33"/></literal></expr>]<pos:position pos:line="117" pos:column="34"/></index></name><operator pos:line="117" pos:column="34">.<pos:position pos:line="117" pos:column="35"/></operator><name pos:line="117" pos:column="35">rm_so<pos:position pos:line="117" pos:column="40"/></name> <operator pos:line="117" pos:column="41">+<pos:position pos:line="117" pos:column="42"/></operator> <literal type="number" pos:line="117" pos:column="43">5<pos:position pos:line="117" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="46">r<pos:position pos:line="117" pos:column="47"/></name><operator pos:line="117" pos:column="47">-&gt;<pos:position pos:line="117" pos:column="52"/></operator><name pos:line="117" pos:column="49">content_type<pos:position pos:line="117" pos:column="61"/></name></name><operator pos:line="117" pos:column="61">+<pos:position pos:line="117" pos:column="62"/></operator><name><name pos:line="117" pos:column="62">match<pos:position pos:line="117" pos:column="67"/></name><index pos:line="117" pos:column="67">[<expr><literal type="number" pos:line="117" pos:column="68">1<pos:position pos:line="117" pos:column="69"/></literal></expr>]<pos:position pos:line="117" pos:column="70"/></index></name><operator pos:line="117" pos:column="70">.<pos:position pos:line="117" pos:column="71"/></operator><name pos:line="117" pos:column="71">rm_eo<pos:position pos:line="117" pos:column="76"/></name></expr></argument>)<pos:position pos:line="117" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="118" pos:column="13">r<pos:position pos:line="118" pos:column="14"/></name><operator pos:line="118" pos:column="14">-&gt;<pos:position pos:line="118" pos:column="19"/></operator><name pos:line="118" pos:column="16">content_type<pos:position pos:line="118" pos:column="28"/></name></name> <operator pos:line="118" pos:column="29">=<pos:position pos:line="118" pos:column="30"/></operator> <name pos:line="118" pos:column="31">str<pos:position pos:line="118" pos:column="34"/></name></expr>;<pos:position pos:line="118" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="119" pos:column="10"/></block></else></if>
    }<pos:position pos:line="120" pos:column="6"/></block></then></if>
}<pos:position pos:line="121" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4026_httpd-2.2.15.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">find_firstassertedchar<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">uschar<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">code<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">options<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">BOOL<pos:position pos:line="2" pos:column="62"/></name></type> <name pos:line="2" pos:column="63">inassert<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
<decl_stmt><decl><type><specifier pos:line="4" pos:column="1">register<pos:position pos:line="4" pos:column="9"/></specifier> <name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">c<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><operator pos:line="4" pos:column="18">-<pos:position pos:line="4" pos:column="19"/></operator><literal type="number" pos:line="4" pos:column="19">1<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
<do pos:line="5" pos:column="1">do <block pos:line="5" pos:column="4">{
   <decl_stmt><decl><type><name pos:line="6" pos:column="4">int<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">d<pos:position pos:line="6" pos:column="9"/></name></decl>;<pos:position pos:line="6" pos:column="10"/></decl_stmt>
   <decl_stmt><decl><type><specifier pos:line="7" pos:column="4">const<pos:position pos:line="7" pos:column="9"/></specifier> <name pos:line="7" pos:column="10">uschar<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">scode<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">=
     <expr><call><name pos:line="8" pos:column="6">first_significant_code<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">code<pos:position pos:line="8" pos:column="33"/></name> <operator pos:line="8" pos:column="34">+<pos:position pos:line="8" pos:column="35"/></operator> <literal type="number" pos:line="8" pos:column="36">1<pos:position pos:line="8" pos:column="37"/></literal><operator pos:line="8" pos:column="37">+<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">LINK_SIZE<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="49">options<pos:position pos:line="8" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="58">PCRE_CASELESS<pos:position pos:line="8" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="73">TRUE<pos:position pos:line="8" pos:column="77"/></name></expr></argument>)<pos:position pos:line="8" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="79"/></decl_stmt>
   <decl_stmt><decl><type><specifier pos:line="9" pos:column="4">register<pos:position pos:line="9" pos:column="12"/></specifier> <name pos:line="9" pos:column="13">int<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">op<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><operator pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">scode<pos:position pos:line="9" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>

   <if pos:line="11" pos:column="4">if <condition pos:line="11" pos:column="7">(<expr><name pos:line="11" pos:column="8">op<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">&gt;=<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="14">OP_BRA<pos:position pos:line="11" pos:column="20"/></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21"> <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="22">op<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">OP_BRA<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt></block></then></if>

   <switch pos:line="13" pos:column="4">switch<condition pos:line="13" pos:column="10">(<expr><name pos:line="13" pos:column="11">op<pos:position pos:line="13" pos:column="13"/></name></expr>)<pos:position pos:line="13" pos:column="14"/></condition>
     <block pos:line="14" pos:column="6">{
     <default pos:line="15" pos:column="6">default:<pos:position pos:line="15" pos:column="14"/></default>
     <return pos:line="16" pos:column="6">return <expr><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal></expr>;<pos:position pos:line="16" pos:column="16"/></return>

     <case pos:line="18" pos:column="6">case <expr><name pos:line="18" pos:column="11">OP_BRA<pos:position pos:line="18" pos:column="17"/></name></expr>:<pos:position pos:line="18" pos:column="18"/></case>
     <case pos:line="19" pos:column="6">case <expr><name pos:line="19" pos:column="11">OP_ASSERT<pos:position pos:line="19" pos:column="20"/></name></expr>:<pos:position pos:line="19" pos:column="21"/></case>
     <case pos:line="20" pos:column="6">case <expr><name pos:line="20" pos:column="11">OP_ONCE<pos:position pos:line="20" pos:column="18"/></name></expr>:<pos:position pos:line="20" pos:column="19"/></case>
     <case pos:line="21" pos:column="6">case <expr><name pos:line="21" pos:column="11">OP_COND<pos:position pos:line="21" pos:column="18"/></name></expr>:<pos:position pos:line="21" pos:column="19"/></case>
     <if pos:line="22" pos:column="6">if <condition pos:line="22" pos:column="9">(<expr><operator pos:line="22" pos:column="10">(<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">d<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">find_firstassertedchar<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">scode<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">options<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="54">op<pos:position pos:line="22" pos:column="56"/></name> <operator pos:line="22" pos:column="57">==<pos:position pos:line="22" pos:column="59"/></operator> <name pos:line="22" pos:column="60">OP_ASSERT<pos:position pos:line="22" pos:column="69"/></name></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call><operator pos:line="22" pos:column="70">)<pos:position pos:line="22" pos:column="71"/></operator> <operator pos:line="22" pos:column="72">&lt;<pos:position pos:line="22" pos:column="76"/></operator> <literal type="number" pos:line="22" pos:column="74">0<pos:position pos:line="22" pos:column="75"/></literal></expr>)<pos:position pos:line="22" pos:column="76"/></condition><then pos:line="22" pos:column="76">
       <block type="pseudo"><return pos:line="23" pos:column="8">return <expr><operator pos:line="23" pos:column="15">-<pos:position pos:line="23" pos:column="16"/></operator><literal type="number" pos:line="23" pos:column="16">1<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></return></block></then></if>
     <if pos:line="24" pos:column="6">if <condition pos:line="24" pos:column="9">(<expr><name pos:line="24" pos:column="10">c<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">&lt;<pos:position pos:line="24" pos:column="16"/></operator> <literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>)<pos:position pos:line="24" pos:column="16"/></condition><then pos:line="24" pos:column="16"> <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">c<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">d<pos:position pos:line="24" pos:column="22"/></name></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt></block></then> <elseif pos:line="24" pos:column="24">else <if pos:line="24" pos:column="29">if <condition pos:line="24" pos:column="32">(<expr><name pos:line="24" pos:column="33">c<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">!=<pos:position pos:line="24" pos:column="37"/></operator> <name pos:line="24" pos:column="38">d<pos:position pos:line="24" pos:column="39"/></name></expr>)<pos:position pos:line="24" pos:column="40"/></condition><then pos:line="24" pos:column="40"> <block type="pseudo"><return pos:line="24" pos:column="41">return <expr><operator pos:line="24" pos:column="48">-<pos:position pos:line="24" pos:column="49"/></operator><literal type="number" pos:line="24" pos:column="49">1<pos:position pos:line="24" pos:column="50"/></literal></expr>;<pos:position pos:line="24" pos:column="51"/></return></block></then></if></elseif></if>
     <break pos:line="25" pos:column="6">break;<pos:position pos:line="25" pos:column="12"/></break>

     <case pos:line="27" pos:column="6">case <expr><name pos:line="27" pos:column="11">OP_EXACT<pos:position pos:line="27" pos:column="19"/></name></expr>:<pos:position pos:line="27" pos:column="20"/></case>       <comment type="block" pos:line="27" pos:column="27">/* Fall through */</comment>
     <expr_stmt><expr><name pos:line="28" pos:column="6">scode<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">+=<pos:position pos:line="28" pos:column="14"/></operator> <literal type="number" pos:line="28" pos:column="15">2<pos:position pos:line="28" pos:column="16"/></literal></expr>;<pos:position pos:line="28" pos:column="17"/></expr_stmt>

     <case pos:line="30" pos:column="6">case <expr><name pos:line="30" pos:column="11">OP_CHAR<pos:position pos:line="30" pos:column="18"/></name></expr>:<pos:position pos:line="30" pos:column="19"/></case>
     <case pos:line="31" pos:column="6">case <expr><name pos:line="31" pos:column="11">OP_CHARNC<pos:position pos:line="31" pos:column="20"/></name></expr>:<pos:position pos:line="31" pos:column="21"/></case>
     <case pos:line="32" pos:column="6">case <expr><name pos:line="32" pos:column="11">OP_PLUS<pos:position pos:line="32" pos:column="18"/></name></expr>:<pos:position pos:line="32" pos:column="19"/></case>
     <case pos:line="33" pos:column="6">case <expr><name pos:line="33" pos:column="11">OP_MINPLUS<pos:position pos:line="33" pos:column="21"/></name></expr>:<pos:position pos:line="33" pos:column="22"/></case>
     <if pos:line="34" pos:column="6">if <condition pos:line="34" pos:column="9">(<expr><operator pos:line="34" pos:column="10">!<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="11">inassert<pos:position pos:line="34" pos:column="19"/></name></expr>)<pos:position pos:line="34" pos:column="20"/></condition><then pos:line="34" pos:column="20"> <block type="pseudo"><return pos:line="34" pos:column="21">return <expr><operator pos:line="34" pos:column="28">-<pos:position pos:line="34" pos:column="29"/></operator><literal type="number" pos:line="34" pos:column="29">1<pos:position pos:line="34" pos:column="30"/></literal></expr>;<pos:position pos:line="34" pos:column="31"/></return></block></then></if>
     <if pos:line="35" pos:column="6">if <condition pos:line="35" pos:column="9">(<expr><name pos:line="35" pos:column="10">c<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">&lt;<pos:position pos:line="35" pos:column="16"/></operator> <literal type="number" pos:line="35" pos:column="14">0<pos:position pos:line="35" pos:column="15"/></literal></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16">
       <block pos:line="36" pos:column="8">{
       <expr_stmt><expr><name pos:line="37" pos:column="8">c<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <name><name pos:line="37" pos:column="12">scode<pos:position pos:line="37" pos:column="17"/></name><index pos:line="37" pos:column="17">[<expr><literal type="number" pos:line="37" pos:column="18">1<pos:position pos:line="37" pos:column="19"/></literal></expr>]<pos:position pos:line="37" pos:column="20"/></index></name></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt>
       <if pos:line="38" pos:column="8">if <condition pos:line="38" pos:column="11">(<expr><operator pos:line="38" pos:column="12">(<pos:position pos:line="38" pos:column="13"/></operator><operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">options<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">&amp;<pos:position pos:line="38" pos:column="27"/></operator> <name pos:line="38" pos:column="24">PCRE_CASELESS<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">)<pos:position pos:line="38" pos:column="38"/></operator> <operator pos:line="38" pos:column="39">!=<pos:position pos:line="38" pos:column="41"/></operator> <literal type="number" pos:line="38" pos:column="42">0<pos:position pos:line="38" pos:column="43"/></literal></expr>)<pos:position pos:line="38" pos:column="44"/></condition><then pos:line="38" pos:column="44"> <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="45">c<pos:position pos:line="38" pos:column="46"/></name> <operator pos:line="38" pos:column="47">|=<pos:position pos:line="38" pos:column="49"/></operator> <name pos:line="38" pos:column="50">REQ_CASELESS<pos:position pos:line="38" pos:column="62"/></name></expr>;<pos:position pos:line="38" pos:column="63"/></expr_stmt></block></then></if>
       }<pos:position pos:line="39" pos:column="9"/></block></then>
     <elseif pos:line="40" pos:column="6">else <if pos:line="40" pos:column="11">if <condition pos:line="40" pos:column="14">(<expr><name pos:line="40" pos:column="15">c<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">!=<pos:position pos:line="40" pos:column="19"/></operator> <name><name pos:line="40" pos:column="20">scode<pos:position pos:line="40" pos:column="25"/></name><index pos:line="40" pos:column="25">[<expr><literal type="number" pos:line="40" pos:column="26">1<pos:position pos:line="40" pos:column="27"/></literal></expr>]<pos:position pos:line="40" pos:column="28"/></index></name></expr>)<pos:position pos:line="40" pos:column="29"/></condition><then pos:line="40" pos:column="29"> <block type="pseudo"><return pos:line="40" pos:column="30">return <expr><operator pos:line="40" pos:column="37">-<pos:position pos:line="40" pos:column="38"/></operator><literal type="number" pos:line="40" pos:column="38">1<pos:position pos:line="40" pos:column="39"/></literal></expr>;<pos:position pos:line="40" pos:column="40"/></return></block></then></if></elseif></if>
     <break pos:line="41" pos:column="6">break;<pos:position pos:line="41" pos:column="12"/></break>
     }<pos:position pos:line="42" pos:column="7"/></block></switch>

   <expr_stmt><expr><name pos:line="44" pos:column="4">code<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">+=<pos:position pos:line="44" pos:column="11"/></operator> <call><name pos:line="44" pos:column="12">GET<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">code<pos:position pos:line="44" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="22">1<pos:position pos:line="44" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="25"/></expr_stmt>
   }<pos:position pos:line="45" pos:column="5"/></block>
while <condition pos:line="46" pos:column="7">(<expr><operator pos:line="46" pos:column="8">*<pos:position pos:line="46" pos:column="9"/></operator><name pos:line="46" pos:column="9">code<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">==<pos:position pos:line="46" pos:column="16"/></operator> <name pos:line="46" pos:column="17">OP_ALT<pos:position pos:line="46" pos:column="23"/></name></expr>)<pos:position pos:line="46" pos:column="24"/></condition>;<pos:position pos:line="46" pos:column="25"/></do>
<return pos:line="47" pos:column="1">return <expr><name pos:line="47" pos:column="8">c<pos:position pos:line="47" pos:column="9"/></name></expr>;<pos:position pos:line="47" pos:column="10"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

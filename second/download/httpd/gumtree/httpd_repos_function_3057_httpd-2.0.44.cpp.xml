<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3057_httpd-2.0.44.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_int32_t<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">apr_atomic_add<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">apr_atomic_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">mem<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">apr_int32_t<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">val<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list> 
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_atomic_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">old<pos:position pos:line="3" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="23">new_val<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt> 

    <expr_stmt><expr><name pos:line="5" pos:column="5">old<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">=<pos:position pos:line="5" pos:column="10"/></operator> <operator pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">mem<pos:position pos:line="5" pos:column="15"/></name></expr>;<pos:position pos:line="5" pos:column="16"/></expr_stmt>   <comment type="block" pos:line="5" pos:column="19">/* old is automatically updated on cs failure */</comment>
    <do pos:line="6" pos:column="5">do <block pos:line="6" pos:column="8">{
        <expr_stmt><expr><name pos:line="7" pos:column="9">new_val<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">old<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">+<pos:position pos:line="7" pos:column="24"/></operator> <name pos:line="7" pos:column="25">val<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block> while <condition pos:line="8" pos:column="13">(<expr><call><name pos:line="8" pos:column="14">__cs<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><operator pos:line="8" pos:column="19">&amp;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="20">old<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">mem<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="30">new_val<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="39"/></condition>;<pos:position pos:line="8" pos:column="40"/></do> 

    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">new_val<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

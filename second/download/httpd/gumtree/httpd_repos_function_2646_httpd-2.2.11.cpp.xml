<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2646_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mget_conn_result<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">up<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">apr_status_t<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">rv<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="3" pos:column="30">apr_memcache_t<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">mc<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="4" pos:column="30">apr_memcache_server_t<pos:position pos:line="4" pos:column="51"/></name> <modifier pos:line="4" pos:column="52">*<pos:position pos:line="4" pos:column="53"/></modifier></type><name pos:line="4" pos:column="53">ms<pos:position pos:line="4" pos:column="55"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="5" pos:column="30">apr_memcache_conn_t<pos:position pos:line="5" pos:column="49"/></name> <modifier pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></modifier></type><name pos:line="5" pos:column="51">conn<pos:position pos:line="5" pos:column="55"/></name></decl></parameter>,
                             <parameter><decl><type><name><name pos:line="6" pos:column="30">struct<pos:position pos:line="6" pos:column="36"/></name> <name pos:line="6" pos:column="37">cache_server_query_t<pos:position pos:line="6" pos:column="57"/></name></name> <modifier pos:line="6" pos:column="58">*<pos:position pos:line="6" pos:column="59"/></modifier></type><name pos:line="6" pos:column="59">server_query<pos:position pos:line="6" pos:column="71"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="7" pos:column="30">apr_hash_t<pos:position pos:line="7" pos:column="40"/></name> <modifier pos:line="7" pos:column="41">*<pos:position pos:line="7" pos:column="42"/></modifier></type><name pos:line="7" pos:column="42">values<pos:position pos:line="7" pos:column="48"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="8" pos:column="30">apr_hash_t<pos:position pos:line="8" pos:column="40"/></name> <modifier pos:line="8" pos:column="41">*<pos:position pos:line="8" pos:column="42"/></modifier></type><name pos:line="8" pos:column="42">server_queries<pos:position pos:line="8" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="8" pos:column="57"/></parameter_list>
<block pos:line="9" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_int32_t<pos:position pos:line="10" pos:column="16"/></name></type> <name pos:line="10" pos:column="17">j<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_memcache_value_t<pos:position pos:line="11" pos:column="25"/></name><modifier pos:line="11" pos:column="25">*<pos:position pos:line="11" pos:column="26"/></modifier></type> <name pos:line="11" pos:column="27">value<pos:position pos:line="11" pos:column="32"/></name></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>
    
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">up<pos:position pos:line="13" pos:column="12"/></name></expr>)<pos:position pos:line="13" pos:column="13"/></condition><then pos:line="13" pos:column="13"> <block pos:line="13" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ms_bad_conn<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">ms<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="25">conn<pos:position pos:line="14" pos:column="29"/></name></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">apr_memcache_disable_server<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><name pos:line="15" pos:column="37">mc<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">ms<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    
    <for pos:line="18" pos:column="5">for <control pos:line="18" pos:column="9">(<init><expr><name pos:line="18" pos:column="10">j<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal></expr>;<pos:position pos:line="18" pos:column="16"/></init> <condition><expr><name pos:line="18" pos:column="17">j<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">&lt;<pos:position pos:line="18" pos:column="23"/></operator> <name><name pos:line="18" pos:column="21">server_query<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">-&gt;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="35">query_vec_count<pos:position pos:line="18" pos:column="50"/></name></name></expr> ;<pos:position pos:line="18" pos:column="52"/></condition> <incr><expr><name pos:line="18" pos:column="53">j<pos:position pos:line="18" pos:column="54"/></name><operator pos:line="18" pos:column="54">+=<pos:position pos:line="18" pos:column="56"/></operator><literal type="number" pos:line="18" pos:column="56">2<pos:position pos:line="18" pos:column="57"/></literal></expr></incr>)<pos:position pos:line="18" pos:column="58"/></control> <block pos:line="18" pos:column="59">{
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">server_query<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">query_vec<pos:position pos:line="19" pos:column="36"/></name><index pos:line="19" pos:column="36">[<expr><name pos:line="19" pos:column="37">j<pos:position pos:line="19" pos:column="38"/></name></expr>]<pos:position pos:line="19" pos:column="39"/></index></name><operator pos:line="19" pos:column="39">.<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="40">iov_base<pos:position pos:line="19" pos:column="48"/></name></expr>)<pos:position pos:line="19" pos:column="49"/></condition><then pos:line="19" pos:column="49"> <block pos:line="19" pos:column="50">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">value<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <call><name pos:line="20" pos:column="21">apr_hash_get<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><name pos:line="20" pos:column="34">values<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="42">server_query<pos:position pos:line="20" pos:column="54"/></name><operator pos:line="20" pos:column="54">-&gt;<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="56">query_vec<pos:position pos:line="20" pos:column="65"/></name><index pos:line="20" pos:column="65">[<expr><name pos:line="20" pos:column="66">j<pos:position pos:line="20" pos:column="67"/></name></expr>]<pos:position pos:line="20" pos:column="68"/></index></name><operator pos:line="20" pos:column="68">.<pos:position pos:line="20" pos:column="69"/></operator><name pos:line="20" pos:column="69">iov_base<pos:position pos:line="20" pos:column="77"/></name></expr></argument>,
                                 <argument><expr><call><name pos:line="21" pos:column="34">strlen<pos:position pos:line="21" pos:column="40"/></name><argument_list pos:line="21" pos:column="40">(<argument><expr><name><name pos:line="21" pos:column="41">server_query<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">-&gt;<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="55">query_vec<pos:position pos:line="21" pos:column="64"/></name><index pos:line="21" pos:column="64">[<expr><name pos:line="21" pos:column="65">j<pos:position pos:line="21" pos:column="66"/></name></expr>]<pos:position pos:line="21" pos:column="67"/></index></name><operator pos:line="21" pos:column="67">.<pos:position pos:line="21" pos:column="68"/></operator><name pos:line="21" pos:column="68">iov_base<pos:position pos:line="21" pos:column="76"/></name></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="79"/></expr_stmt>
            
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name><name pos:line="23" pos:column="17">value<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">status<pos:position pos:line="23" pos:column="30"/></name></name> <operator pos:line="23" pos:column="31">==<pos:position pos:line="23" pos:column="33"/></operator> <name pos:line="23" pos:column="34">APR_NOTFOUND<pos:position pos:line="23" pos:column="46"/></name></expr>)<pos:position pos:line="23" pos:column="47"/></condition><then pos:line="23" pos:column="47"> <block pos:line="23" pos:column="48">{
                <expr_stmt><expr><name><name pos:line="24" pos:column="17">value<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">status<pos:position pos:line="24" pos:column="30"/></name></name> <operator pos:line="24" pos:column="31">=<pos:position pos:line="24" pos:column="32"/></operator> <name pos:line="24" pos:column="33">rv<pos:position pos:line="24" pos:column="35"/></name></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="25" pos:column="14"/></block></then></if>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">ms_release_conn<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">ms<pos:position pos:line="29" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="25">conn<pos:position pos:line="29" pos:column="29"/></name></expr></argument>)<pos:position pos:line="29" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">apr_hash_set<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">server_queries<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="34">&amp;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="35">ms<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="39">sizeof<argument_list pos:line="31" pos:column="45">(<argument><expr><name pos:line="31" pos:column="46">ms<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="31" pos:column="51">NULL<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

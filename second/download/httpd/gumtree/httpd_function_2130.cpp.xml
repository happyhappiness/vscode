<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2130.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_loglevel<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">cmd_parms<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">cmd<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">void<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">config_<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="64">const<pos:position pos:line="1" pos:column="69"/></specifier> <name pos:line="1" pos:column="70">char<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">arg_<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">level_str<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">level<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">module<pos:position pos:line="5" pos:column="11"/></name> <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">module<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">arg<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><call><name pos:line="6" pos:column="17">apr_pstrdup<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><name><name pos:line="6" pos:column="29">cmd<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">temp_pool<pos:position pos:line="6" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="45">arg_<pos:position pos:line="6" pos:column="49"/></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">ap_logconf<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">log<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">err<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* XXX: what check is necessary here? */</comment>
<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="11" pos:column="5">0<pos:position pos:line="11" pos:column="6"/></literal></expr></cpp:if>
    const char *err = ap_check_cmd_context(cmd, NOT_IN_DIR_LOC_FILE);
    if (err != NULL) {
        return err;
    }
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">cmd<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">path<pos:position pos:line="18" pos:column="18"/></name></name></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19"> <block pos:line="18" pos:column="20">{
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">core_dir_config<pos:position pos:line="19" pos:column="24"/></name> <modifier pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></modifier></type><name pos:line="19" pos:column="26">dconf<pos:position pos:line="19" pos:column="31"/></name> <init pos:line="19" pos:column="32">= <expr><name pos:line="19" pos:column="34">config_<pos:position pos:line="19" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="42"/></decl_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name><name pos:line="20" pos:column="14">dconf<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">log<pos:position pos:line="20" pos:column="24"/></name></name></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25"> <block pos:line="20" pos:column="26">{
            <expr_stmt><expr><name><name pos:line="21" pos:column="13">dconf<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">log<pos:position pos:line="21" pos:column="23"/></name></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <call><name pos:line="21" pos:column="26">ap_new_log_config<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><name><name pos:line="21" pos:column="44">cmd<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">-&gt;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="49">pool<pos:position pos:line="21" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="55">NULL<pos:position pos:line="21" pos:column="59"/></name></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="23" pos:column="9">log<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name><name pos:line="23" pos:column="15">dconf<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">log<pos:position pos:line="23" pos:column="25"/></name></name></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <else pos:line="25" pos:column="5">else <block pos:line="25" pos:column="10">{
        <expr_stmt><expr><name pos:line="26" pos:column="9">log<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <operator pos:line="26" pos:column="15">&amp;<pos:position pos:line="26" pos:column="20"/></operator><name><name pos:line="26" pos:column="16">cmd<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">server<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">log<pos:position pos:line="26" pos:column="32"/></name></name></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></else></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">arg<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">==<pos:position pos:line="29" pos:column="15"/></operator> <name pos:line="29" pos:column="16">NULL<pos:position pos:line="29" pos:column="20"/></name></expr>)<pos:position pos:line="29" pos:column="21"/></condition><then pos:line="29" pos:column="21">
        <block type="pseudo"><return pos:line="30" pos:column="9">return <expr><literal type="string" pos:line="30" pos:column="16">"LogLevel requires level keyword or module loglevel specifier"<pos:position pos:line="30" pos:column="78"/></literal></expr>;<pos:position pos:line="30" pos:column="79"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="32" pos:column="5">level_str<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <call><name pos:line="32" pos:column="17">ap_strchr<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">arg<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="32" pos:column="32">':'<pos:position pos:line="32" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">level_str<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">==<pos:position pos:line="34" pos:column="21"/></operator> <name pos:line="34" pos:column="22">NULL<pos:position pos:line="34" pos:column="26"/></name></expr>)<pos:position pos:line="34" pos:column="27"/></condition><then pos:line="34" pos:column="27"> <block pos:line="34" pos:column="28">{
        <expr_stmt><expr><name pos:line="35" pos:column="9">err<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">ap_parse_log_level<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">arg<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="39">&amp;<pos:position pos:line="35" pos:column="44"/></operator><name><name pos:line="35" pos:column="40">log<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">-&gt;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="45">level<pos:position pos:line="35" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">err<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">!=<pos:position pos:line="36" pos:column="19"/></operator> <name pos:line="36" pos:column="20">NULL<pos:position pos:line="36" pos:column="24"/></name></expr>)<pos:position pos:line="36" pos:column="25"/></condition><then pos:line="36" pos:column="25">
            <block type="pseudo"><return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">err<pos:position pos:line="37" pos:column="23"/></name></expr>;<pos:position pos:line="37" pos:column="24"/></return></block></then></if>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ap_reset_module_loglevels<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">log<pos:position pos:line="38" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="40">APLOG_NO_MODULE<pos:position pos:line="38" pos:column="55"/></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">ap_log_error<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name pos:line="39" pos:column="22">APLOG_MARK<pos:position pos:line="39" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="34">APLOG_TRACE3<pos:position pos:line="39" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="48">0<pos:position pos:line="39" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="51">cmd<pos:position pos:line="39" pos:column="54"/></name><operator pos:line="39" pos:column="54">-&gt;<pos:position pos:line="39" pos:column="59"/></operator><name pos:line="39" pos:column="56">server<pos:position pos:line="39" pos:column="62"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="40" pos:column="22">"Setting LogLevel for all modules to %s"<pos:position pos:line="40" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="64">arg<pos:position pos:line="40" pos:column="67"/></name></expr></argument>)<pos:position pos:line="40" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="69"/></expr_stmt>
        <return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">NULL<pos:position pos:line="41" pos:column="20"/></name></expr>;<pos:position pos:line="41" pos:column="21"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="44" pos:column="5">*<pos:position pos:line="44" pos:column="6"/></operator><name pos:line="44" pos:column="6">level_str<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">++<pos:position pos:line="44" pos:column="17"/></operator> <operator pos:line="44" pos:column="18">=<pos:position pos:line="44" pos:column="19"/></operator> <literal type="char" pos:line="44" pos:column="20">'\0'<pos:position pos:line="44" pos:column="24"/></literal></expr>;<pos:position pos:line="44" pos:column="25"/></expr_stmt>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">!<pos:position pos:line="45" pos:column="10"/></operator><operator pos:line="45" pos:column="10">*<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">level_str<pos:position pos:line="45" pos:column="20"/></name></expr>)<pos:position pos:line="45" pos:column="21"/></condition><then pos:line="45" pos:column="21"> <block pos:line="45" pos:column="22">{
        <return pos:line="46" pos:column="9">return <expr><call><name pos:line="46" pos:column="16">apr_psprintf<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><name><name pos:line="46" pos:column="29">cmd<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">-&gt;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="34">temp_pool<pos:position pos:line="46" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="45">"Module specifier '%s' must be "<pos:position pos:line="46" pos:column="77"/></literal>
                            <literal type="string" pos:line="47" pos:column="29">"followed by a log level keyword"<pos:position pos:line="47" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="64">arg<pos:position pos:line="47" pos:column="67"/></name></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="69"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="50" pos:column="5">err<pos:position pos:line="50" pos:column="8"/></name> <operator pos:line="50" pos:column="9">=<pos:position pos:line="50" pos:column="10"/></operator> <call><name pos:line="50" pos:column="11">ap_parse_log_level<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><name pos:line="50" pos:column="30">level_str<pos:position pos:line="50" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="41">&amp;<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="42">level<pos:position pos:line="50" pos:column="47"/></name></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">err<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">!=<pos:position pos:line="51" pos:column="15"/></operator> <name pos:line="51" pos:column="16">NULL<pos:position pos:line="51" pos:column="20"/></name></expr>)<pos:position pos:line="51" pos:column="21"/></condition><then pos:line="51" pos:column="21">
        <block type="pseudo"><return pos:line="52" pos:column="9">return <expr><call><name pos:line="52" pos:column="16">apr_psprintf<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">(<argument><expr><name><name pos:line="52" pos:column="29">cmd<pos:position pos:line="52" pos:column="32"/></name><operator pos:line="52" pos:column="32">-&gt;<pos:position pos:line="52" pos:column="37"/></operator><name pos:line="52" pos:column="34">temp_pool<pos:position pos:line="52" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="45">"%s:%s: %s"<pos:position pos:line="52" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="58">arg<pos:position pos:line="52" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="63">level_str<pos:position pos:line="52" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="74">err<pos:position pos:line="52" pos:column="77"/></name></expr></argument>)<pos:position pos:line="52" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="79"/></return></block></then></if>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><operator pos:line="54" pos:column="9">(<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">module<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">=<pos:position pos:line="54" pos:column="18"/></operator> <call><name pos:line="54" pos:column="19">find_module<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name><name pos:line="54" pos:column="31">cmd<pos:position pos:line="54" pos:column="34"/></name><operator pos:line="54" pos:column="34">-&gt;<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="36">server<pos:position pos:line="54" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="44">arg<pos:position pos:line="54" pos:column="47"/></name></expr></argument>)<pos:position pos:line="54" pos:column="48"/></argument_list></call><operator pos:line="54" pos:column="48">)<pos:position pos:line="54" pos:column="49"/></operator> <operator pos:line="54" pos:column="50">==<pos:position pos:line="54" pos:column="52"/></operator> <name pos:line="54" pos:column="53">NULL<pos:position pos:line="54" pos:column="57"/></name></expr>)<pos:position pos:line="54" pos:column="58"/></condition><then pos:line="54" pos:column="58"> <block pos:line="54" pos:column="59">{
        <decl_stmt><decl><type><name pos:line="55" pos:column="9">char<pos:position pos:line="55" pos:column="13"/></name> <modifier pos:line="55" pos:column="14">*<pos:position pos:line="55" pos:column="15"/></modifier></type><name pos:line="55" pos:column="15">name<pos:position pos:line="55" pos:column="19"/></name> <init pos:line="55" pos:column="20">= <expr><call><name pos:line="55" pos:column="22">apr_psprintf<pos:position pos:line="55" pos:column="34"/></name><argument_list pos:line="55" pos:column="34">(<argument><expr><name><name pos:line="55" pos:column="35">cmd<pos:position pos:line="55" pos:column="38"/></name><operator pos:line="55" pos:column="38">-&gt;<pos:position pos:line="55" pos:column="43"/></operator><name pos:line="55" pos:column="40">temp_pool<pos:position pos:line="55" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="51">"%s_module"<pos:position pos:line="55" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="64">arg<pos:position pos:line="55" pos:column="67"/></name></expr></argument>)<pos:position pos:line="55" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="55" pos:column="69"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">ap_log_error<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">APLOG_MARK<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="34">APLOG_TRACE6<pos:position pos:line="56" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="48">0<pos:position pos:line="56" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="51">cmd<pos:position pos:line="56" pos:column="54"/></name><operator pos:line="56" pos:column="54">-&gt;<pos:position pos:line="56" pos:column="59"/></operator><name pos:line="56" pos:column="56">server<pos:position pos:line="56" pos:column="62"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="57" pos:column="22">"Cannot find module '%s', trying '%s'"<pos:position pos:line="57" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="62">arg<pos:position pos:line="57" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="67">name<pos:position pos:line="57" pos:column="71"/></name></expr></argument>)<pos:position pos:line="57" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">module<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <call><name pos:line="58" pos:column="18">find_module<pos:position pos:line="58" pos:column="29"/></name><argument_list pos:line="58" pos:column="29">(<argument><expr><name><name pos:line="58" pos:column="30">cmd<pos:position pos:line="58" pos:column="33"/></name><operator pos:line="58" pos:column="33">-&gt;<pos:position pos:line="58" pos:column="38"/></operator><name pos:line="58" pos:column="35">server<pos:position pos:line="58" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="43">name<pos:position pos:line="58" pos:column="47"/></name></expr></argument>)<pos:position pos:line="58" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">module<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">==<pos:position pos:line="61" pos:column="18"/></operator> <name pos:line="61" pos:column="19">NULL<pos:position pos:line="61" pos:column="23"/></name></expr>)<pos:position pos:line="61" pos:column="24"/></condition><then pos:line="61" pos:column="24"> <block pos:line="61" pos:column="25">{
        <return pos:line="62" pos:column="9">return <expr><call><name pos:line="62" pos:column="16">apr_psprintf<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><name><name pos:line="62" pos:column="29">cmd<pos:position pos:line="62" pos:column="32"/></name><operator pos:line="62" pos:column="32">-&gt;<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="34">temp_pool<pos:position pos:line="62" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="45">"Cannot find module %s"<pos:position pos:line="62" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="70">arg<pos:position pos:line="62" pos:column="73"/></name></expr></argument>)<pos:position pos:line="62" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="75"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="65" pos:column="5">ap_set_module_loglevel<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><name><name pos:line="65" pos:column="28">cmd<pos:position pos:line="65" pos:column="31"/></name><operator pos:line="65" pos:column="31">-&gt;<pos:position pos:line="65" pos:column="36"/></operator><name pos:line="65" pos:column="33">pool<pos:position pos:line="65" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="39">log<pos:position pos:line="65" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="44">module<pos:position pos:line="65" pos:column="50"/></name><operator pos:line="65" pos:column="50">-&gt;<pos:position pos:line="65" pos:column="55"/></operator><name pos:line="65" pos:column="52">module_index<pos:position pos:line="65" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="66">level<pos:position pos:line="65" pos:column="71"/></name></expr></argument>)<pos:position pos:line="65" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">ap_log_error<pos:position pos:line="66" pos:column="17"/></name><argument_list pos:line="66" pos:column="17">(<argument><expr><name pos:line="66" pos:column="18">APLOG_MARK<pos:position pos:line="66" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="30">APLOG_TRACE3<pos:position pos:line="66" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="44">0<pos:position pos:line="66" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="47">cmd<pos:position pos:line="66" pos:column="50"/></name><operator pos:line="66" pos:column="50">-&gt;<pos:position pos:line="66" pos:column="55"/></operator><name pos:line="66" pos:column="52">server<pos:position pos:line="66" pos:column="58"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="67" pos:column="18">"Setting LogLevel for module %s to %s"<pos:position pos:line="67" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="58">module<pos:position pos:line="67" pos:column="64"/></name><operator pos:line="67" pos:column="64">-&gt;<pos:position pos:line="67" pos:column="69"/></operator><name pos:line="67" pos:column="66">name<pos:position pos:line="67" pos:column="70"/></name></name></expr></argument>,
                 <argument><expr><name pos:line="68" pos:column="18">level_str<pos:position pos:line="68" pos:column="27"/></name></expr></argument>)<pos:position pos:line="68" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt>

    <return pos:line="70" pos:column="5">return <expr><name pos:line="70" pos:column="12">NULL<pos:position pos:line="70" pos:column="16"/></name></expr>;<pos:position pos:line="70" pos:column="17"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

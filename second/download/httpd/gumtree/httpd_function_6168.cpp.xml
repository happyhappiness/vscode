<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6168.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">h2_workers<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">h2_workers_create<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">server_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">s<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">apr_pool_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">server_pool<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">min_workers<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">max_workers<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="3" pos:column="31">apr_size_t<pos:position pos:line="3" pos:column="41"/></name></type> <name pos:line="3" pos:column="42">max_tx_handles<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">h2_workers<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">workers<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_pool_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">pool<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">s<pos:position pos:line="9" pos:column="22"/></name></expr></argument>)<pos:position pos:line="9" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">server_pool<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* let's have our own pool that will be parent to all h2_worker
     * instances we create. This happens in various threads, but always
     * guarded by our lock. Without this pool, all subpool creations would
     * happen on the pool handed to us, which we do not guard.
     */</comment>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">apr_pool_create<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><operator pos:line="17" pos:column="21">&amp;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="22">pool<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="28">server_pool<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">apr_pool_tag<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">pool<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="24">"h2_workers"<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">workers<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">apr_pcalloc<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">pool<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="33">sizeof<argument_list pos:line="19" pos:column="39">(<argument><expr><name pos:line="19" pos:column="40">h2_workers<pos:position pos:line="19" pos:column="50"/></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">workers<pos:position pos:line="20" pos:column="16"/></name></expr>)<pos:position pos:line="20" pos:column="17"/></condition><then pos:line="20" pos:column="17"> <block pos:line="20" pos:column="18">{
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">workers<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">s<pos:position pos:line="21" pos:column="19"/></name></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">s<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">workers<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">pool<pos:position pos:line="22" pos:column="22"/></name></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">pool<pos:position pos:line="22" pos:column="29"/></name></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">workers<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">min_workers<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="32">min_workers<pos:position pos:line="23" pos:column="43"/></name></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">workers<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">max_workers<pos:position pos:line="24" pos:column="29"/></name></name> <operator pos:line="24" pos:column="30">=<pos:position pos:line="24" pos:column="31"/></operator> <name pos:line="24" pos:column="32">max_workers<pos:position pos:line="24" pos:column="43"/></name></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">workers<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">max_idle_secs<pos:position pos:line="25" pos:column="31"/></name></name> <operator pos:line="25" pos:column="32">=<pos:position pos:line="25" pos:column="33"/></operator> <literal type="number" pos:line="25" pos:column="34">10<pos:position pos:line="25" pos:column="36"/></literal></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
        
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">workers<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">max_tx_handles<pos:position pos:line="27" pos:column="32"/></name></name> <operator pos:line="27" pos:column="33">=<pos:position pos:line="27" pos:column="34"/></operator> <name pos:line="27" pos:column="35">max_tx_handles<pos:position pos:line="27" pos:column="49"/></name></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">workers<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">spare_tx_handles<pos:position pos:line="28" pos:column="34"/></name></name> <operator pos:line="28" pos:column="35">=<pos:position pos:line="28" pos:column="36"/></operator> <name><name pos:line="28" pos:column="37">workers<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">-&gt;<pos:position pos:line="28" pos:column="49"/></operator><name pos:line="28" pos:column="46">max_tx_handles<pos:position pos:line="28" pos:column="60"/></name></name></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>
        
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">apr_threadattr_create<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><operator pos:line="30" pos:column="31">&amp;<pos:position pos:line="30" pos:column="36"/></operator><name><name pos:line="30" pos:column="32">workers<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">thread_attr<pos:position pos:line="30" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="54">workers<pos:position pos:line="30" pos:column="61"/></name><operator pos:line="30" pos:column="61">-&gt;<pos:position pos:line="30" pos:column="66"/></operator><name pos:line="30" pos:column="63">pool<pos:position pos:line="30" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="69"/></expr_stmt>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">ap_thread_stacksize<pos:position pos:line="31" pos:column="32"/></name> <operator pos:line="31" pos:column="33">!=<pos:position pos:line="31" pos:column="35"/></operator> <literal type="number" pos:line="31" pos:column="36">0<pos:position pos:line="31" pos:column="37"/></literal></expr>)<pos:position pos:line="31" pos:column="38"/></condition><then pos:line="31" pos:column="38"> <block pos:line="31" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">apr_threadattr_stacksize_set<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">(<argument><expr><name><name pos:line="32" pos:column="42">workers<pos:position pos:line="32" pos:column="49"/></name><operator pos:line="32" pos:column="49">-&gt;<pos:position pos:line="32" pos:column="54"/></operator><name pos:line="32" pos:column="51">thread_attr<pos:position pos:line="32" pos:column="62"/></name></name></expr></argument>,
                                         <argument><expr><name pos:line="33" pos:column="42">ap_thread_stacksize<pos:position pos:line="33" pos:column="61"/></name></expr></argument>)<pos:position pos:line="33" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">ap_log_error<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">APLOG_MARK<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="38">APLOG_TRACE3<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="52">0<pos:position pos:line="34" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">s<pos:position pos:line="34" pos:column="56"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="35" pos:column="26">"h2_workers: using stacksize=%ld"<pos:position pos:line="35" pos:column="59"/></literal></expr></argument>, 
                         <argument><expr><operator pos:line="36" pos:column="26">(<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">long<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">)<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="32">ap_thread_stacksize<pos:position pos:line="36" pos:column="51"/></name></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
        
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">APR_RING_INIT<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><operator pos:line="39" pos:column="23">&amp;<pos:position pos:line="39" pos:column="28"/></operator><name><name pos:line="39" pos:column="24">workers<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">workers<pos:position pos:line="39" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="42">h2_worker<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="53">link<pos:position pos:line="39" pos:column="57"/></name></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">APR_RING_INIT<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><operator pos:line="40" pos:column="23">&amp;<pos:position pos:line="40" pos:column="28"/></operator><name><name pos:line="40" pos:column="24">workers<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">-&gt;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="33">zombies<pos:position pos:line="40" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="42">h2_worker<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="53">link<pos:position pos:line="40" pos:column="57"/></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">APR_RING_INIT<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><operator pos:line="41" pos:column="23">&amp;<pos:position pos:line="41" pos:column="28"/></operator><name><name pos:line="41" pos:column="24">workers<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">mplxs<pos:position pos:line="41" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="40">h2_mplx<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">link<pos:position pos:line="41" pos:column="53"/></name></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt>
        
        <expr_stmt><expr><name pos:line="43" pos:column="9">status<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <call><name pos:line="43" pos:column="18">apr_thread_mutex_create<pos:position pos:line="43" pos:column="41"/></name><argument_list pos:line="43" pos:column="41">(<argument><expr><operator pos:line="43" pos:column="42">&amp;<pos:position pos:line="43" pos:column="47"/></operator><name><name pos:line="43" pos:column="43">workers<pos:position pos:line="43" pos:column="50"/></name><operator pos:line="43" pos:column="50">-&gt;<pos:position pos:line="43" pos:column="55"/></operator><name pos:line="43" pos:column="52">lock<pos:position pos:line="43" pos:column="56"/></name></name></expr></argument>,
                                         <argument><expr><name pos:line="44" pos:column="42">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="44" pos:column="66"/></name></expr></argument>,
                                         <argument><expr><name><name pos:line="45" pos:column="42">workers<pos:position pos:line="45" pos:column="49"/></name><operator pos:line="45" pos:column="49">-&gt;<pos:position pos:line="45" pos:column="54"/></operator><name pos:line="45" pos:column="51">pool<pos:position pos:line="45" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">status<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">==<pos:position pos:line="46" pos:column="22"/></operator> <name pos:line="46" pos:column="23">APR_SUCCESS<pos:position pos:line="46" pos:column="34"/></name></expr>)<pos:position pos:line="46" pos:column="35"/></condition><then pos:line="46" pos:column="35"> <block pos:line="46" pos:column="36">{
            <expr_stmt><expr><name pos:line="47" pos:column="13">status<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <call><name pos:line="47" pos:column="22">apr_thread_cond_create<pos:position pos:line="47" pos:column="44"/></name><argument_list pos:line="47" pos:column="44">(<argument><expr><operator pos:line="47" pos:column="45">&amp;<pos:position pos:line="47" pos:column="50"/></operator><name><name pos:line="47" pos:column="46">workers<pos:position pos:line="47" pos:column="53"/></name><operator pos:line="47" pos:column="53">-&gt;<pos:position pos:line="47" pos:column="58"/></operator><name pos:line="47" pos:column="55">mplx_added<pos:position pos:line="47" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="67">workers<pos:position pos:line="47" pos:column="74"/></name><operator pos:line="47" pos:column="74">-&gt;<pos:position pos:line="47" pos:column="79"/></operator><name pos:line="47" pos:column="76">pool<pos:position pos:line="47" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="82"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
        
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">status<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">==<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">APR_SUCCESS<pos:position pos:line="50" pos:column="34"/></name></expr>)<pos:position pos:line="50" pos:column="35"/></condition><then pos:line="50" pos:column="35"> <block pos:line="50" pos:column="36">{
            <expr_stmt><expr><name pos:line="51" pos:column="13">status<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <call><name pos:line="51" pos:column="22">apr_thread_mutex_create<pos:position pos:line="51" pos:column="45"/></name><argument_list pos:line="51" pos:column="45">(<argument><expr><operator pos:line="51" pos:column="46">&amp;<pos:position pos:line="51" pos:column="51"/></operator><name><name pos:line="51" pos:column="47">workers<pos:position pos:line="51" pos:column="54"/></name><operator pos:line="51" pos:column="54">-&gt;<pos:position pos:line="51" pos:column="59"/></operator><name pos:line="51" pos:column="56">tx_lock<pos:position pos:line="51" pos:column="63"/></name></name></expr></argument>,
                                             <argument><expr><name pos:line="52" pos:column="46">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="52" pos:column="70"/></name></expr></argument>,
                                             <argument><expr><name><name pos:line="53" pos:column="46">workers<pos:position pos:line="53" pos:column="53"/></name><operator pos:line="53" pos:column="53">-&gt;<pos:position pos:line="53" pos:column="58"/></operator><name pos:line="53" pos:column="55">pool<pos:position pos:line="53" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
        
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">status<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">==<pos:position pos:line="56" pos:column="22"/></operator> <name pos:line="56" pos:column="23">APR_SUCCESS<pos:position pos:line="56" pos:column="34"/></name></expr>)<pos:position pos:line="56" pos:column="35"/></condition><then pos:line="56" pos:column="35"> <block pos:line="56" pos:column="36">{
            <expr_stmt><expr><name pos:line="57" pos:column="13">status<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">=<pos:position pos:line="57" pos:column="21"/></operator> <call><name pos:line="57" pos:column="22">h2_workers_start<pos:position pos:line="57" pos:column="38"/></name><argument_list pos:line="57" pos:column="38">(<argument><expr><name pos:line="57" pos:column="39">workers<pos:position pos:line="57" pos:column="46"/></name></expr></argument>)<pos:position pos:line="57" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
        
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">status<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">!=<pos:position pos:line="60" pos:column="22"/></operator> <name pos:line="60" pos:column="23">APR_SUCCESS<pos:position pos:line="60" pos:column="34"/></name></expr>)<pos:position pos:line="60" pos:column="35"/></condition><then pos:line="60" pos:column="35"> <block pos:line="60" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">h2_workers_destroy<pos:position pos:line="61" pos:column="31"/></name><argument_list pos:line="61" pos:column="31">(<argument><expr><name pos:line="61" pos:column="32">workers<pos:position pos:line="61" pos:column="39"/></name></expr></argument>)<pos:position pos:line="61" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name pos:line="62" pos:column="13">workers<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">=<pos:position pos:line="62" pos:column="22"/></operator> <name pos:line="62" pos:column="23">NULL<pos:position pos:line="62" pos:column="27"/></name></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
    <return pos:line="65" pos:column="5">return <expr><name pos:line="65" pos:column="12">workers<pos:position pos:line="65" pos:column="19"/></name></expr>;<pos:position pos:line="65" pos:column="20"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

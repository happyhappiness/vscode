<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2222_httpd-2.4.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">init_ext_filter_process<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">ap_filter_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">f<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ef_ctx_t<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">ctx<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name><name pos:line="3" pos:column="21">f<pos:position pos:line="3" pos:column="22"/></name><operator pos:line="3" pos:column="22">-&gt;<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="24">ctx<pos:position pos:line="3" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rc<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ef_dir_t<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">dc<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name><name pos:line="5" pos:column="20">ctx<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">dc<pos:position pos:line="5" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier> <specifier pos:line="6" pos:column="18">const<pos:position pos:line="6" pos:column="23"/></specifier> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">env<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="8" pos:column="5">ctx<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">proc<pos:position pos:line="8" pos:column="14"/></name></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <call><name pos:line="8" pos:column="17">apr_pcalloc<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name><name pos:line="8" pos:column="29">ctx<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">p<pos:position pos:line="8" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="37">sizeof<argument_list pos:line="8" pos:column="43">(<argument><expr><operator pos:line="8" pos:column="44">*<pos:position pos:line="8" pos:column="45"/></operator><name><name pos:line="8" pos:column="45">ctx<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">proc<pos:position pos:line="8" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">rc<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">apr_procattr_create<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator><name><name pos:line="10" pos:column="31">ctx<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">procattr<pos:position pos:line="10" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="46">ctx<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">-&gt;<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="51">p<pos:position pos:line="10" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ap_assert<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">rc<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">==<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">APR_SUCCESS<pos:position pos:line="11" pos:column="32"/></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">rc<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">apr_procattr_io_set<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name><name pos:line="13" pos:column="30">ctx<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="35">procattr<pos:position pos:line="13" pos:column="43"/></name></name></expr></argument>,
                            <argument><expr><name pos:line="14" pos:column="29">APR_CHILD_BLOCK<pos:position pos:line="14" pos:column="44"/></name></expr></argument>,
                            <argument><expr><name pos:line="15" pos:column="29">APR_CHILD_BLOCK<pos:position pos:line="15" pos:column="44"/></name></expr></argument>,
                            <argument><expr><name pos:line="16" pos:column="29">APR_CHILD_BLOCK<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ap_assert<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><name pos:line="17" pos:column="15">rc<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">==<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">APR_SUCCESS<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">rc<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <call><name pos:line="19" pos:column="10">set_resource_limits<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name><name pos:line="19" pos:column="30">f<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">r<pos:position pos:line="19" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="36">ctx<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">procattr<pos:position pos:line="19" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ap_assert<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">rc<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">==<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">APR_SUCCESS<pos:position pos:line="20" pos:column="32"/></name></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name><name pos:line="22" pos:column="9">dc<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">log_stderr<pos:position pos:line="22" pos:column="23"/></name></name> <operator pos:line="22" pos:column="24">&gt;<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28"> <block pos:line="22" pos:column="29">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">rc<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">apr_procattr_child_err_set<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><name><name pos:line="23" pos:column="41">ctx<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">-&gt;<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="46">procattr<pos:position pos:line="23" pos:column="54"/></name></name></expr></argument>,
                                      <argument><expr><name><name pos:line="24" pos:column="39">f<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">-&gt;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="42">r<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="45">server<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">-&gt;<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="53">error_log<pos:position pos:line="24" pos:column="62"/></name></name></expr></argument>, <comment type="block" pos:line="24" pos:column="64">/* stderr in child */</comment>
                                      <argument><expr><name pos:line="25" pos:column="39">NULL<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">ap_assert<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">rc<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">==<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">APR_SUCCESS<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">rc<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <call><name pos:line="29" pos:column="10">apr_procattr_child_errfn_set<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><name><name pos:line="29" pos:column="39">ctx<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">procattr<pos:position pos:line="29" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">child_errfn<pos:position pos:line="29" pos:column="65"/></name></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ap_assert<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><name pos:line="30" pos:column="15">rc<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">==<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">APR_SUCCESS<pos:position pos:line="30" pos:column="32"/></name></expr></argument>)<pos:position pos:line="30" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">apr_pool_userdata_set<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name><name pos:line="31" pos:column="27">f<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-&gt;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="30">r<pos:position pos:line="31" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="33">ERRFN_USERDATA_KEY<pos:position pos:line="31" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="53">apr_pool_cleanup_null<pos:position pos:line="31" pos:column="74"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="76">ctx<pos:position pos:line="31" pos:column="79"/></name><operator pos:line="31" pos:column="79">-&gt;<pos:position pos:line="31" pos:column="84"/></operator><name pos:line="31" pos:column="81">p<pos:position pos:line="31" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="84"/></expr_stmt>

    <expr_stmt><expr><name pos:line="33" pos:column="5">rc<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator> <call><name pos:line="33" pos:column="10">apr_procattr_error_check_set<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><name><name pos:line="33" pos:column="39">ctx<pos:position pos:line="33" pos:column="42"/></name><operator pos:line="33" pos:column="42">-&gt;<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="44">procattr<pos:position pos:line="33" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="54">1<pos:position pos:line="33" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="57"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">rc<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">!=<pos:position pos:line="34" pos:column="14"/></operator> <name pos:line="34" pos:column="15">APR_SUCCESS<pos:position pos:line="34" pos:column="26"/></name></expr>)<pos:position pos:line="34" pos:column="27"/></condition><then pos:line="34" pos:column="27"> <block pos:line="34" pos:column="28">{
        <return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">rc<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="38" pos:column="5">/* add standard CGI variables as well as DOCUMENT_URI, DOCUMENT_PATH_INFO,
     * and QUERY_STRING_UNESCAPED
     */</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">ap_add_cgi_vars<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><name><name pos:line="41" pos:column="21">f<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">-&gt;<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="24">r<pos:position pos:line="41" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">ap_add_common_vars<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name><name pos:line="42" pos:column="24">f<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">-&gt;<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="27">r<pos:position pos:line="42" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">apr_table_setn<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><name><name pos:line="43" pos:column="20">f<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">-&gt;<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="23">r<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">-&gt;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="26">subprocess_env<pos:position pos:line="43" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="42">"DOCUMENT_URI"<pos:position pos:line="43" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="58">f<pos:position pos:line="43" pos:column="59"/></name><operator pos:line="43" pos:column="59">-&gt;<pos:position pos:line="43" pos:column="64"/></operator><name pos:line="43" pos:column="61">r<pos:position pos:line="43" pos:column="62"/></name><operator pos:line="43" pos:column="62">-&gt;<pos:position pos:line="43" pos:column="67"/></operator><name pos:line="43" pos:column="64">uri<pos:position pos:line="43" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">apr_table_setn<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><name><name pos:line="44" pos:column="20">f<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">-&gt;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="23">r<pos:position pos:line="44" pos:column="24"/></name><operator pos:line="44" pos:column="24">-&gt;<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="26">subprocess_env<pos:position pos:line="44" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="42">"DOCUMENT_PATH_INFO"<pos:position pos:line="44" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="64">f<pos:position pos:line="44" pos:column="65"/></name><operator pos:line="44" pos:column="65">-&gt;<pos:position pos:line="44" pos:column="70"/></operator><name pos:line="44" pos:column="67">r<pos:position pos:line="44" pos:column="68"/></name><operator pos:line="44" pos:column="68">-&gt;<pos:position pos:line="44" pos:column="73"/></operator><name pos:line="44" pos:column="70">path_info<pos:position pos:line="44" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="81"/></expr_stmt>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name><name pos:line="45" pos:column="9">f<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">r<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">-&gt;<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="15">args<pos:position pos:line="45" pos:column="19"/></name></name></expr>)<pos:position pos:line="45" pos:column="20"/></condition><then pos:line="45" pos:column="20"> <block pos:line="45" pos:column="21">{
            <comment type="block" pos:line="46" pos:column="13">/* QUERY_STRING is added by ap_add_cgi_vars */</comment>
        <decl_stmt><decl><type><name pos:line="47" pos:column="9">char<pos:position pos:line="47" pos:column="13"/></name> <modifier pos:line="47" pos:column="14">*<pos:position pos:line="47" pos:column="15"/></modifier></type><name pos:line="47" pos:column="15">arg_copy<pos:position pos:line="47" pos:column="23"/></name> <init pos:line="47" pos:column="24">= <expr><call><name pos:line="47" pos:column="26">apr_pstrdup<pos:position pos:line="47" pos:column="37"/></name><argument_list pos:line="47" pos:column="37">(<argument><expr><name><name pos:line="47" pos:column="38">f<pos:position pos:line="47" pos:column="39"/></name><operator pos:line="47" pos:column="39">-&gt;<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="41">r<pos:position pos:line="47" pos:column="42"/></name><operator pos:line="47" pos:column="42">-&gt;<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="44">pool<pos:position pos:line="47" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="50">f<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">-&gt;<pos:position pos:line="47" pos:column="56"/></operator><name pos:line="47" pos:column="53">r<pos:position pos:line="47" pos:column="54"/></name><operator pos:line="47" pos:column="54">-&gt;<pos:position pos:line="47" pos:column="59"/></operator><name pos:line="47" pos:column="56">args<pos:position pos:line="47" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="62"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">ap_unescape_url<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">arg_copy<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">apr_table_setn<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><name><name pos:line="49" pos:column="24">f<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">-&gt;<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="27">r<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">-&gt;<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="30">subprocess_env<pos:position pos:line="49" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="46">"QUERY_STRING_UNESCAPED"<pos:position pos:line="49" pos:column="70"/></literal></expr></argument>,
                       <argument><expr><call><name pos:line="50" pos:column="24">ap_escape_shell_cmd<pos:position pos:line="50" pos:column="43"/></name><argument_list pos:line="50" pos:column="43">(<argument><expr><name><name pos:line="50" pos:column="44">f<pos:position pos:line="50" pos:column="45"/></name><operator pos:line="50" pos:column="45">-&gt;<pos:position pos:line="50" pos:column="50"/></operator><name pos:line="50" pos:column="47">r<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">-&gt;<pos:position pos:line="50" pos:column="53"/></operator><name pos:line="50" pos:column="50">pool<pos:position pos:line="50" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="56">arg_copy<pos:position pos:line="50" pos:column="64"/></name></expr></argument>)<pos:position pos:line="50" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="53" pos:column="5">env<pos:position pos:line="53" pos:column="8"/></name> <operator pos:line="53" pos:column="9">=<pos:position pos:line="53" pos:column="10"/></operator> <operator pos:line="53" pos:column="11">(<pos:position pos:line="53" pos:column="12"/></operator><specifier pos:line="53" pos:column="12">const<pos:position pos:line="53" pos:column="17"/></specifier> <name pos:line="53" pos:column="18">char<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">*<pos:position pos:line="53" pos:column="24"/></operator> <specifier pos:line="53" pos:column="25">const<pos:position pos:line="53" pos:column="30"/></specifier> <operator pos:line="53" pos:column="31">*<pos:position pos:line="53" pos:column="32"/></operator><operator pos:line="53" pos:column="32">)<pos:position pos:line="53" pos:column="33"/></operator> <call><name pos:line="53" pos:column="34">ap_create_environment<pos:position pos:line="53" pos:column="55"/></name><argument_list pos:line="53" pos:column="55">(<argument><expr><name><name pos:line="53" pos:column="56">ctx<pos:position pos:line="53" pos:column="59"/></name><operator pos:line="53" pos:column="59">-&gt;<pos:position pos:line="53" pos:column="64"/></operator><name pos:line="53" pos:column="61">p<pos:position pos:line="53" pos:column="62"/></name></name></expr></argument>,
                                                       <argument><expr><name><name pos:line="54" pos:column="56">f<pos:position pos:line="54" pos:column="57"/></name><operator pos:line="54" pos:column="57">-&gt;<pos:position pos:line="54" pos:column="62"/></operator><name pos:line="54" pos:column="59">r<pos:position pos:line="54" pos:column="60"/></name><operator pos:line="54" pos:column="60">-&gt;<pos:position pos:line="54" pos:column="65"/></operator><name pos:line="54" pos:column="62">subprocess_env<pos:position pos:line="54" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="78"/></expr_stmt>

    <expr_stmt><expr><name pos:line="56" pos:column="5">rc<pos:position pos:line="56" pos:column="7"/></name> <operator pos:line="56" pos:column="8">=<pos:position pos:line="56" pos:column="9"/></operator> <call><name pos:line="56" pos:column="10">apr_proc_create<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><name><name pos:line="56" pos:column="26">ctx<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">-&gt;<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="31">proc<pos:position pos:line="56" pos:column="35"/></name></name></expr></argument>,
                            <argument><expr><name><name pos:line="57" pos:column="29">ctx<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">-&gt;<pos:position pos:line="57" pos:column="37"/></operator><name pos:line="57" pos:column="34">filter<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">-&gt;<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="42">command<pos:position pos:line="57" pos:column="49"/></name></name></expr></argument>,
                            <argument><expr><operator pos:line="58" pos:column="29">(<pos:position pos:line="58" pos:column="30"/></operator><specifier pos:line="58" pos:column="30">const<pos:position pos:line="58" pos:column="35"/></specifier> <name pos:line="58" pos:column="36">char<pos:position pos:line="58" pos:column="40"/></name> <operator pos:line="58" pos:column="41">*<pos:position pos:line="58" pos:column="42"/></operator> <specifier pos:line="58" pos:column="43">const<pos:position pos:line="58" pos:column="48"/></specifier> <operator pos:line="58" pos:column="49">*<pos:position pos:line="58" pos:column="50"/></operator><operator pos:line="58" pos:column="50">)<pos:position pos:line="58" pos:column="51"/></operator><name><name pos:line="58" pos:column="51">ctx<pos:position pos:line="58" pos:column="54"/></name><operator pos:line="58" pos:column="54">-&gt;<pos:position pos:line="58" pos:column="59"/></operator><name pos:line="58" pos:column="56">filter<pos:position pos:line="58" pos:column="62"/></name><operator pos:line="58" pos:column="62">-&gt;<pos:position pos:line="58" pos:column="67"/></operator><name pos:line="58" pos:column="64">args<pos:position pos:line="58" pos:column="68"/></name></name></expr></argument>,
                            <argument><expr><name pos:line="59" pos:column="29">env<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <comment type="block" pos:line="59" pos:column="34">/* environment */</comment>
                            <argument><expr><name><name pos:line="60" pos:column="29">ctx<pos:position pos:line="60" pos:column="32"/></name><operator pos:line="60" pos:column="32">-&gt;<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="34">procattr<pos:position pos:line="60" pos:column="42"/></name></name></expr></argument>,
                            <argument><expr><name><name pos:line="61" pos:column="29">ctx<pos:position pos:line="61" pos:column="32"/></name><operator pos:line="61" pos:column="32">-&gt;<pos:position pos:line="61" pos:column="37"/></operator><name pos:line="61" pos:column="34">p<pos:position pos:line="61" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="37"/></expr_stmt>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">rc<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">!=<pos:position pos:line="62" pos:column="14"/></operator> <name pos:line="62" pos:column="15">APR_SUCCESS<pos:position pos:line="62" pos:column="26"/></name></expr>)<pos:position pos:line="62" pos:column="27"/></condition><then pos:line="62" pos:column="27"> <block pos:line="62" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">ap_log_rerror<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><name pos:line="63" pos:column="23">APLOG_MARK<pos:position pos:line="63" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="35">APLOG_ERR<pos:position pos:line="63" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="46">rc<pos:position pos:line="63" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="50">f<pos:position pos:line="63" pos:column="51"/></name><operator pos:line="63" pos:column="51">-&gt;<pos:position pos:line="63" pos:column="56"/></operator><name pos:line="63" pos:column="53">r<pos:position pos:line="63" pos:column="54"/></name></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="56">APLOGNO<pos:position pos:line="63" pos:column="63"/></name><argument_list pos:line="63" pos:column="63">(<argument><expr><literal type="number" pos:line="63" pos:column="64">01458<pos:position pos:line="63" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="70"/></argument_list></call>
                      <literal type="string" pos:line="64" pos:column="23">"couldn't create child process to run `%s'"<pos:position pos:line="64" pos:column="66"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="65" pos:column="23">ctx<pos:position pos:line="65" pos:column="26"/></name><operator pos:line="65" pos:column="26">-&gt;<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="28">filter<pos:position pos:line="65" pos:column="34"/></name><operator pos:line="65" pos:column="34">-&gt;<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="36">command<pos:position pos:line="65" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="45"/></expr_stmt>
        <return pos:line="66" pos:column="9">return <expr><name pos:line="66" pos:column="16">rc<pos:position pos:line="66" pos:column="18"/></name></expr>;<pos:position pos:line="66" pos:column="19"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="69" pos:column="5">apr_pool_note_subprocess<pos:position pos:line="69" pos:column="29"/></name><argument_list pos:line="69" pos:column="29">(<argument><expr><name><name pos:line="69" pos:column="30">ctx<pos:position pos:line="69" pos:column="33"/></name><operator pos:line="69" pos:column="33">-&gt;<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="35">p<pos:position pos:line="69" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="38">ctx<pos:position pos:line="69" pos:column="41"/></name><operator pos:line="69" pos:column="41">-&gt;<pos:position pos:line="69" pos:column="46"/></operator><name pos:line="69" pos:column="43">proc<pos:position pos:line="69" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="49">APR_KILL_AFTER_TIMEOUT<pos:position pos:line="69" pos:column="71"/></name></expr></argument>)<pos:position pos:line="69" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="73"/></expr_stmt>

    <comment type="block" pos:line="71" pos:column="5">/* We don't want the handle to the child's stdin inherited by any
     * other processes created by httpd.  Otherwise, when we close our
     * handle, the child won't see EOF because another handle will still
     * be open.
     */</comment>

    <expr_stmt><expr><call><name pos:line="77" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><name><name pos:line="77" pos:column="31">ctx<pos:position pos:line="77" pos:column="34"/></name><operator pos:line="77" pos:column="34">-&gt;<pos:position pos:line="77" pos:column="39"/></operator><name pos:line="77" pos:column="36">p<pos:position pos:line="77" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="39">ctx<pos:position pos:line="77" pos:column="42"/></name><operator pos:line="77" pos:column="42">-&gt;<pos:position pos:line="77" pos:column="47"/></operator><name pos:line="77" pos:column="44">proc<pos:position pos:line="77" pos:column="48"/></name><operator pos:line="77" pos:column="48">-&gt;<pos:position pos:line="77" pos:column="53"/></operator><name pos:line="77" pos:column="50">in<pos:position pos:line="77" pos:column="52"/></name></name></expr></argument>,
                         <argument><expr><name pos:line="78" pos:column="26">apr_pool_cleanup_null<pos:position pos:line="78" pos:column="47"/></name></expr></argument>, <comment type="block" pos:line="78" pos:column="49">/* other mechanism */</comment>
                         <argument><expr><name pos:line="79" pos:column="26">ef_close_file<pos:position pos:line="79" pos:column="39"/></name></expr></argument>)<pos:position pos:line="79" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="41"/></expr_stmt>

<cpp:if pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">if<pos:position pos:line="81" pos:column="4"/></cpp:directive> <expr><name pos:line="81" pos:column="5">APR_FILES_AS_SOCKETS<pos:position pos:line="81" pos:column="25"/></name></expr></cpp:if>
    <block pos:line="82" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="83" pos:column="9">apr_pollfd_t<pos:position pos:line="83" pos:column="21"/></name></type> <name pos:line="83" pos:column="22">pfd<pos:position pos:line="83" pos:column="25"/></name> <init pos:line="83" pos:column="26">= <expr><block pos:line="83" pos:column="28">{ <expr><literal type="number" pos:line="83" pos:column="30">0<pos:position pos:line="83" pos:column="31"/></literal></expr> }<pos:position pos:line="83" pos:column="33"/></block></expr></init></decl>;<pos:position pos:line="83" pos:column="34"/></decl_stmt>

        <expr_stmt><expr><name pos:line="85" pos:column="9">rc<pos:position pos:line="85" pos:column="11"/></name> <operator pos:line="85" pos:column="12">=<pos:position pos:line="85" pos:column="13"/></operator> <call><name pos:line="85" pos:column="14">apr_pollset_create<pos:position pos:line="85" pos:column="32"/></name><argument_list pos:line="85" pos:column="32">(<argument><expr><operator pos:line="85" pos:column="33">&amp;<pos:position pos:line="85" pos:column="38"/></operator><name><name pos:line="85" pos:column="34">ctx<pos:position pos:line="85" pos:column="37"/></name><operator pos:line="85" pos:column="37">-&gt;<pos:position pos:line="85" pos:column="42"/></operator><name pos:line="85" pos:column="39">pollset<pos:position pos:line="85" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="48">2<pos:position pos:line="85" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="51">ctx<pos:position pos:line="85" pos:column="54"/></name><operator pos:line="85" pos:column="54">-&gt;<pos:position pos:line="85" pos:column="59"/></operator><name pos:line="85" pos:column="56">p<pos:position pos:line="85" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="59">0<pos:position pos:line="85" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">ap_assert<pos:position pos:line="86" pos:column="18"/></name><argument_list pos:line="86" pos:column="18">(<argument><expr><name pos:line="86" pos:column="19">rc<pos:position pos:line="86" pos:column="21"/></name> <operator pos:line="86" pos:column="22">==<pos:position pos:line="86" pos:column="24"/></operator> <name pos:line="86" pos:column="25">APR_SUCCESS<pos:position pos:line="86" pos:column="36"/></name></expr></argument>)<pos:position pos:line="86" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="38"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="88" pos:column="9">pfd<pos:position pos:line="88" pos:column="12"/></name><operator pos:line="88" pos:column="12">.<pos:position pos:line="88" pos:column="13"/></operator><name pos:line="88" pos:column="13">p<pos:position pos:line="88" pos:column="14"/></name></name>         <operator pos:line="88" pos:column="23">=<pos:position pos:line="88" pos:column="24"/></operator> <name><name pos:line="88" pos:column="25">ctx<pos:position pos:line="88" pos:column="28"/></name><operator pos:line="88" pos:column="28">-&gt;<pos:position pos:line="88" pos:column="33"/></operator><name pos:line="88" pos:column="30">p<pos:position pos:line="88" pos:column="31"/></name></name></expr>;<pos:position pos:line="88" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="89" pos:column="9">pfd<pos:position pos:line="89" pos:column="12"/></name><operator pos:line="89" pos:column="12">.<pos:position pos:line="89" pos:column="13"/></operator><name pos:line="89" pos:column="13">desc_type<pos:position pos:line="89" pos:column="22"/></name></name> <operator pos:line="89" pos:column="23">=<pos:position pos:line="89" pos:column="24"/></operator> <name pos:line="89" pos:column="25">APR_POLL_FILE<pos:position pos:line="89" pos:column="38"/></name></expr>;<pos:position pos:line="89" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="90" pos:column="9">pfd<pos:position pos:line="90" pos:column="12"/></name><operator pos:line="90" pos:column="12">.<pos:position pos:line="90" pos:column="13"/></operator><name pos:line="90" pos:column="13">reqevents<pos:position pos:line="90" pos:column="22"/></name></name> <operator pos:line="90" pos:column="23">=<pos:position pos:line="90" pos:column="24"/></operator> <name pos:line="90" pos:column="25">APR_POLLOUT<pos:position pos:line="90" pos:column="36"/></name></expr>;<pos:position pos:line="90" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="91" pos:column="9">pfd<pos:position pos:line="91" pos:column="12"/></name><operator pos:line="91" pos:column="12">.<pos:position pos:line="91" pos:column="13"/></operator><name pos:line="91" pos:column="13">desc<pos:position pos:line="91" pos:column="17"/></name><operator pos:line="91" pos:column="17">.<pos:position pos:line="91" pos:column="18"/></operator><name pos:line="91" pos:column="18">f<pos:position pos:line="91" pos:column="19"/></name></name>    <operator pos:line="91" pos:column="23">=<pos:position pos:line="91" pos:column="24"/></operator> <name><name pos:line="91" pos:column="25">ctx<pos:position pos:line="91" pos:column="28"/></name><operator pos:line="91" pos:column="28">-&gt;<pos:position pos:line="91" pos:column="33"/></operator><name pos:line="91" pos:column="30">proc<pos:position pos:line="91" pos:column="34"/></name><operator pos:line="91" pos:column="34">-&gt;<pos:position pos:line="91" pos:column="39"/></operator><name pos:line="91" pos:column="36">in<pos:position pos:line="91" pos:column="38"/></name></name></expr>;<pos:position pos:line="91" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="92" pos:column="9">rc<pos:position pos:line="92" pos:column="11"/></name> <operator pos:line="92" pos:column="12">=<pos:position pos:line="92" pos:column="13"/></operator> <call><name pos:line="92" pos:column="14">apr_pollset_add<pos:position pos:line="92" pos:column="29"/></name><argument_list pos:line="92" pos:column="29">(<argument><expr><name><name pos:line="92" pos:column="30">ctx<pos:position pos:line="92" pos:column="33"/></name><operator pos:line="92" pos:column="33">-&gt;<pos:position pos:line="92" pos:column="38"/></operator><name pos:line="92" pos:column="35">pollset<pos:position pos:line="92" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="44">&amp;<pos:position pos:line="92" pos:column="49"/></operator><name pos:line="92" pos:column="45">pfd<pos:position pos:line="92" pos:column="48"/></name></expr></argument>)<pos:position pos:line="92" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">ap_assert<pos:position pos:line="93" pos:column="18"/></name><argument_list pos:line="93" pos:column="18">(<argument><expr><name pos:line="93" pos:column="19">rc<pos:position pos:line="93" pos:column="21"/></name> <operator pos:line="93" pos:column="22">==<pos:position pos:line="93" pos:column="24"/></operator> <name pos:line="93" pos:column="25">APR_SUCCESS<pos:position pos:line="93" pos:column="36"/></name></expr></argument>)<pos:position pos:line="93" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="38"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="95" pos:column="9">pfd<pos:position pos:line="95" pos:column="12"/></name><operator pos:line="95" pos:column="12">.<pos:position pos:line="95" pos:column="13"/></operator><name pos:line="95" pos:column="13">reqevents<pos:position pos:line="95" pos:column="22"/></name></name> <operator pos:line="95" pos:column="23">=<pos:position pos:line="95" pos:column="24"/></operator> <name pos:line="95" pos:column="25">APR_POLLIN<pos:position pos:line="95" pos:column="35"/></name></expr>;<pos:position pos:line="95" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="96" pos:column="9">pfd<pos:position pos:line="96" pos:column="12"/></name><operator pos:line="96" pos:column="12">.<pos:position pos:line="96" pos:column="13"/></operator><name pos:line="96" pos:column="13">desc<pos:position pos:line="96" pos:column="17"/></name><operator pos:line="96" pos:column="17">.<pos:position pos:line="96" pos:column="18"/></operator><name pos:line="96" pos:column="18">f<pos:position pos:line="96" pos:column="19"/></name></name>    <operator pos:line="96" pos:column="23">=<pos:position pos:line="96" pos:column="24"/></operator> <name><name pos:line="96" pos:column="25">ctx<pos:position pos:line="96" pos:column="28"/></name><operator pos:line="96" pos:column="28">-&gt;<pos:position pos:line="96" pos:column="33"/></operator><name pos:line="96" pos:column="30">proc<pos:position pos:line="96" pos:column="34"/></name><operator pos:line="96" pos:column="34">-&gt;<pos:position pos:line="96" pos:column="39"/></operator><name pos:line="96" pos:column="36">out<pos:position pos:line="96" pos:column="39"/></name></name></expr>;<pos:position pos:line="96" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="97" pos:column="9">rc<pos:position pos:line="97" pos:column="11"/></name> <operator pos:line="97" pos:column="12">=<pos:position pos:line="97" pos:column="13"/></operator> <call><name pos:line="97" pos:column="14">apr_pollset_add<pos:position pos:line="97" pos:column="29"/></name><argument_list pos:line="97" pos:column="29">(<argument><expr><name><name pos:line="97" pos:column="30">ctx<pos:position pos:line="97" pos:column="33"/></name><operator pos:line="97" pos:column="33">-&gt;<pos:position pos:line="97" pos:column="38"/></operator><name pos:line="97" pos:column="35">pollset<pos:position pos:line="97" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="44">&amp;<pos:position pos:line="97" pos:column="49"/></operator><name pos:line="97" pos:column="45">pfd<pos:position pos:line="97" pos:column="48"/></name></expr></argument>)<pos:position pos:line="97" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">ap_assert<pos:position pos:line="98" pos:column="18"/></name><argument_list pos:line="98" pos:column="18">(<argument><expr><name pos:line="98" pos:column="19">rc<pos:position pos:line="98" pos:column="21"/></name> <operator pos:line="98" pos:column="22">==<pos:position pos:line="98" pos:column="24"/></operator> <name pos:line="98" pos:column="25">APR_SUCCESS<pos:position pos:line="98" pos:column="36"/></name></expr></argument>)<pos:position pos:line="98" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="99" pos:column="6"/></block>
<cpp:endif pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">endif<pos:position pos:line="100" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="102" pos:column="5">return <expr><name pos:line="102" pos:column="12">APR_SUCCESS<pos:position pos:line="102" pos:column="23"/></name></expr>;<pos:position pos:line="102" pos:column="24"/></return>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

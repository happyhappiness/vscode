<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2299_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">x_handler<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">request_rec<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">r<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">x_cfg<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">dcfg<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">note<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">void<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">conn_data<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">status<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">dcfg<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">our_dconfig<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">r<pos:position pos:line="8" pos:column="25"/></name></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
    <comment type="block" pos:line="9" pos:column="5">/*
     * Add our trace to the log, and whether we get to write
     * content for this request.
     */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">note<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <call><name pos:line="13" pos:column="12">apr_pstrcat<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name><name pos:line="13" pos:column="24">r<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">pool<pos:position pos:line="13" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="33">"x_handler(), handler is \""<pos:position pos:line="13" pos:column="61"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="14" pos:column="23">r<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">handler<pos:position pos:line="14" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="35">"\""<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">NULL<pos:position pos:line="14" pos:column="45"/></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">trace_request<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">r<pos:position pos:line="15" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="22">note<pos:position pos:line="15" pos:column="26"/></name></expr></argument>)<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* If it's not for us, get out as soon as possible. */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">strcmp<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name><name pos:line="18" pos:column="16">r<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">handler<pos:position pos:line="18" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="28">"example-hooks-handler"<pos:position pos:line="18" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="53"/></condition><then pos:line="18" pos:column="53"> <block pos:line="18" pos:column="54">{
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">DECLINED<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="22" pos:column="5">/*
     * Set the Content-type header. Note that we do not actually have to send
     * the headers: this is done by the http core.
     */</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">ap_set_content_type<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">r<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="28">"text/html"<pos:position pos:line="26" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
    <comment type="block" pos:line="27" pos:column="5">/*
     * If we're only supposed to send header information (HEAD request), we're
     * already there.
     */</comment>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">r<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">header_only<pos:position pos:line="31" pos:column="23"/></name></name></expr>)<pos:position pos:line="31" pos:column="24"/></condition><then pos:line="31" pos:column="24"> <block pos:line="31" pos:column="25">{
        <return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">OK<pos:position pos:line="32" pos:column="18"/></name></expr>;<pos:position pos:line="32" pos:column="19"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="35" pos:column="5">/*
     * Now send our actual output.  Since we tagged this as being
     * "text/html", we need to embed any HTML.
     */</comment>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">ap_rputs<pos:position pos:line="39" pos:column="13"/></name><argument_list pos:line="39" pos:column="13">(<argument><expr><name pos:line="39" pos:column="14">DOCTYPE_HTML_3_2<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">r<pos:position pos:line="39" pos:column="33"/></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">ap_rputs<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><literal type="string" pos:line="40" pos:column="14">"&lt;HTML&gt;\n"<pos:position pos:line="40" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="26">r<pos:position pos:line="40" pos:column="27"/></name></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">ap_rputs<pos:position pos:line="41" pos:column="13"/></name><argument_list pos:line="41" pos:column="13">(<argument><expr><literal type="string" pos:line="41" pos:column="14">" &lt;HEAD&gt;\n"<pos:position pos:line="41" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="27">r<pos:position pos:line="41" pos:column="28"/></name></expr></argument>)<pos:position pos:line="41" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">ap_rputs<pos:position pos:line="42" pos:column="13"/></name><argument_list pos:line="42" pos:column="13">(<argument><expr><literal type="string" pos:line="42" pos:column="14">"  &lt;TITLE&gt;mod_example_hooks Module Content-Handler Output\n"<pos:position pos:line="42" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="76">r<pos:position pos:line="42" pos:column="77"/></name></expr></argument>)<pos:position pos:line="42" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">ap_rputs<pos:position pos:line="43" pos:column="13"/></name><argument_list pos:line="43" pos:column="13">(<argument><expr><literal type="string" pos:line="43" pos:column="14">"  &lt;/TITLE&gt;\n"<pos:position pos:line="43" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="30">r<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">ap_rputs<pos:position pos:line="44" pos:column="13"/></name><argument_list pos:line="44" pos:column="13">(<argument><expr><literal type="string" pos:line="44" pos:column="14">" &lt;/HEAD&gt;\n"<pos:position pos:line="44" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="28">r<pos:position pos:line="44" pos:column="29"/></name></expr></argument>)<pos:position pos:line="44" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">ap_rputs<pos:position pos:line="45" pos:column="13"/></name><argument_list pos:line="45" pos:column="13">(<argument><expr><literal type="string" pos:line="45" pos:column="14">" &lt;BODY&gt;\n"<pos:position pos:line="45" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="27">r<pos:position pos:line="45" pos:column="28"/></name></expr></argument>)<pos:position pos:line="45" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">ap_rputs<pos:position pos:line="46" pos:column="13"/></name><argument_list pos:line="46" pos:column="13">(<argument><expr><literal type="string" pos:line="46" pos:column="14">"  &lt;H1&gt;&lt;SAMP&gt;mod_example_hooks&lt;/SAMP&gt; Module Content-Handler Output\n"<pos:position pos:line="46" pos:column="102"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="86">r<pos:position pos:line="46" pos:column="87"/></name></expr></argument>)<pos:position pos:line="46" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="89"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">ap_rputs<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><literal type="string" pos:line="47" pos:column="14">"  &lt;/H1&gt;\n"<pos:position pos:line="47" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="27">r<pos:position pos:line="47" pos:column="28"/></name></expr></argument>)<pos:position pos:line="47" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">ap_rputs<pos:position pos:line="48" pos:column="13"/></name><argument_list pos:line="48" pos:column="13">(<argument><expr><literal type="string" pos:line="48" pos:column="14">"  &lt;P&gt;\n"<pos:position pos:line="48" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="25">r<pos:position pos:line="48" pos:column="26"/></name></expr></argument>)<pos:position pos:line="48" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">ap_rprintf<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">r<pos:position pos:line="49" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="19">"  Apache HTTP Server version: \"%s\"\n"<pos:position pos:line="49" pos:column="59"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="50" pos:column="13">ap_get_server_banner<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">()<pos:position pos:line="50" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">ap_rputs<pos:position pos:line="51" pos:column="13"/></name><argument_list pos:line="51" pos:column="13">(<argument><expr><literal type="string" pos:line="51" pos:column="14">"  &lt;BR&gt;\n"<pos:position pos:line="51" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="26">r<pos:position pos:line="51" pos:column="27"/></name></expr></argument>)<pos:position pos:line="51" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">ap_rprintf<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><name pos:line="52" pos:column="16">r<pos:position pos:line="52" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="19">"  Server built: \"%s\"\n"<pos:position pos:line="52" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="47">ap_get_server_built<pos:position pos:line="52" pos:column="66"/></name><argument_list pos:line="52" pos:column="66">()<pos:position pos:line="52" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">ap_rputs<pos:position pos:line="53" pos:column="13"/></name><argument_list pos:line="53" pos:column="13">(<argument><expr><literal type="string" pos:line="53" pos:column="14">"  &lt;/P&gt;\n"<pos:position pos:line="53" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="26">r<pos:position pos:line="53" pos:column="27"/></name></expr></argument>)<pos:position pos:line="53" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt><empty_stmt pos:line="53" pos:column="29">;<pos:position pos:line="53" pos:column="30"/></empty_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">ap_rputs<pos:position pos:line="54" pos:column="13"/></name><argument_list pos:line="54" pos:column="13">(<argument><expr><literal type="string" pos:line="54" pos:column="14">"  &lt;P&gt;\n"<pos:position pos:line="54" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="25">r<pos:position pos:line="54" pos:column="26"/></name></expr></argument>)<pos:position pos:line="54" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">ap_rputs<pos:position pos:line="55" pos:column="13"/></name><argument_list pos:line="55" pos:column="13">(<argument><expr><literal type="string" pos:line="55" pos:column="14">"  The format for the callback trace is:\n"<pos:position pos:line="55" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="59">r<pos:position pos:line="55" pos:column="60"/></name></expr></argument>)<pos:position pos:line="55" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">ap_rputs<pos:position pos:line="56" pos:column="13"/></name><argument_list pos:line="56" pos:column="13">(<argument><expr><literal type="string" pos:line="56" pos:column="14">"  &lt;/P&gt;\n"<pos:position pos:line="56" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="26">r<pos:position pos:line="56" pos:column="27"/></name></expr></argument>)<pos:position pos:line="56" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">ap_rputs<pos:position pos:line="57" pos:column="13"/></name><argument_list pos:line="57" pos:column="13">(<argument><expr><literal type="string" pos:line="57" pos:column="14">"  &lt;DL&gt;\n"<pos:position pos:line="57" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="26">r<pos:position pos:line="57" pos:column="27"/></name></expr></argument>)<pos:position pos:line="57" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">ap_rputs<pos:position pos:line="58" pos:column="13"/></name><argument_list pos:line="58" pos:column="13">(<argument><expr><literal type="string" pos:line="58" pos:column="14">"   &lt;DT&gt;&lt;EM&gt;n&lt;/EM&gt;.&lt;SAMP&gt;&amp;lt;routine-name&amp;gt;"<pos:position pos:line="58" pos:column="92"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="62">r<pos:position pos:line="58" pos:column="63"/></name></expr></argument>)<pos:position pos:line="58" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">ap_rputs<pos:position pos:line="59" pos:column="13"/></name><argument_list pos:line="59" pos:column="13">(<argument><expr><literal type="string" pos:line="59" pos:column="14">"(&amp;lt;routine-data&amp;gt;)&lt;/SAMP&gt;\n"<pos:position pos:line="59" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="49">r<pos:position pos:line="59" pos:column="50"/></name></expr></argument>)<pos:position pos:line="59" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">ap_rputs<pos:position pos:line="60" pos:column="13"/></name><argument_list pos:line="60" pos:column="13">(<argument><expr><literal type="string" pos:line="60" pos:column="14">"   &lt;/DT&gt;\n"<pos:position pos:line="60" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="28">r<pos:position pos:line="60" pos:column="29"/></name></expr></argument>)<pos:position pos:line="60" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">ap_rputs<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">(<argument><expr><literal type="string" pos:line="61" pos:column="14">"   &lt;DD&gt;&lt;SAMP&gt;[&amp;lt;applies-to&amp;gt;]&lt;/SAMP&gt;\n"<pos:position pos:line="61" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="60">r<pos:position pos:line="61" pos:column="61"/></name></expr></argument>)<pos:position pos:line="61" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">ap_rputs<pos:position pos:line="62" pos:column="13"/></name><argument_list pos:line="62" pos:column="13">(<argument><expr><literal type="string" pos:line="62" pos:column="14">"   &lt;/DD&gt;\n"<pos:position pos:line="62" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="28">r<pos:position pos:line="62" pos:column="29"/></name></expr></argument>)<pos:position pos:line="62" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">ap_rputs<pos:position pos:line="63" pos:column="13"/></name><argument_list pos:line="63" pos:column="13">(<argument><expr><literal type="string" pos:line="63" pos:column="14">"  &lt;/DL&gt;\n"<pos:position pos:line="63" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="27">r<pos:position pos:line="63" pos:column="28"/></name></expr></argument>)<pos:position pos:line="63" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">ap_rputs<pos:position pos:line="64" pos:column="13"/></name><argument_list pos:line="64" pos:column="13">(<argument><expr><literal type="string" pos:line="64" pos:column="14">"  &lt;P&gt;\n"<pos:position pos:line="64" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="25">r<pos:position pos:line="64" pos:column="26"/></name></expr></argument>)<pos:position pos:line="64" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">ap_rputs<pos:position pos:line="65" pos:column="13"/></name><argument_list pos:line="65" pos:column="13">(<argument><expr><literal type="string" pos:line="65" pos:column="14">"  The &lt;SAMP&gt;&amp;lt;routine-data&amp;gt;&lt;/SAMP&gt; is supplied by\n"<pos:position pos:line="65" pos:column="92"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="74">r<pos:position pos:line="65" pos:column="75"/></name></expr></argument>)<pos:position pos:line="65" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">ap_rputs<pos:position pos:line="66" pos:column="13"/></name><argument_list pos:line="66" pos:column="13">(<argument><expr><literal type="string" pos:line="66" pos:column="14">"  the routine when it requests the trace,\n"<pos:position pos:line="66" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="61">r<pos:position pos:line="66" pos:column="62"/></name></expr></argument>)<pos:position pos:line="66" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">ap_rputs<pos:position pos:line="67" pos:column="13"/></name><argument_list pos:line="67" pos:column="13">(<argument><expr><literal type="string" pos:line="67" pos:column="14">"  and the &lt;SAMP&gt;&amp;lt;applies-to&amp;gt;&lt;/SAMP&gt; is extracted\n"<pos:position pos:line="67" pos:column="92"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="74">r<pos:position pos:line="67" pos:column="75"/></name></expr></argument>)<pos:position pos:line="67" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">ap_rputs<pos:position pos:line="68" pos:column="13"/></name><argument_list pos:line="68" pos:column="13">(<argument><expr><literal type="string" pos:line="68" pos:column="14">"  from the configuration record at the time of the trace.\n"<pos:position pos:line="68" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="77">r<pos:position pos:line="68" pos:column="78"/></name></expr></argument>)<pos:position pos:line="68" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">ap_rputs<pos:position pos:line="69" pos:column="13"/></name><argument_list pos:line="69" pos:column="13">(<argument><expr><literal type="string" pos:line="69" pos:column="14">"  &lt;STRONG&gt;SVR()&lt;/STRONG&gt; indicates a server environment\n"<pos:position pos:line="69" pos:column="85"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="75">r<pos:position pos:line="69" pos:column="76"/></name></expr></argument>)<pos:position pos:line="69" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">ap_rputs<pos:position pos:line="70" pos:column="13"/></name><argument_list pos:line="70" pos:column="13">(<argument><expr><literal type="string" pos:line="70" pos:column="14">"  (blank means the main or default server, otherwise it's\n"<pos:position pos:line="70" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="77">r<pos:position pos:line="70" pos:column="78"/></name></expr></argument>)<pos:position pos:line="70" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">ap_rputs<pos:position pos:line="71" pos:column="13"/></name><argument_list pos:line="71" pos:column="13">(<argument><expr><literal type="string" pos:line="71" pos:column="14">"  the name of the VirtualHost); &lt;STRONG&gt;DIR()&lt;/STRONG&gt;\n"<pos:position pos:line="71" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="74">r<pos:position pos:line="71" pos:column="75"/></name></expr></argument>)<pos:position pos:line="71" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">ap_rputs<pos:position pos:line="72" pos:column="13"/></name><argument_list pos:line="72" pos:column="13">(<argument><expr><literal type="string" pos:line="72" pos:column="14">"  indicates a location in the URL or filesystem\n"<pos:position pos:line="72" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="67">r<pos:position pos:line="72" pos:column="68"/></name></expr></argument>)<pos:position pos:line="72" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">ap_rputs<pos:position pos:line="73" pos:column="13"/></name><argument_list pos:line="73" pos:column="13">(<argument><expr><literal type="string" pos:line="73" pos:column="14">"  namespace.\n"<pos:position pos:line="73" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="32">r<pos:position pos:line="73" pos:column="33"/></name></expr></argument>)<pos:position pos:line="73" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">ap_rputs<pos:position pos:line="74" pos:column="13"/></name><argument_list pos:line="74" pos:column="13">(<argument><expr><literal type="string" pos:line="74" pos:column="14">"  &lt;/P&gt;\n"<pos:position pos:line="74" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="26">r<pos:position pos:line="74" pos:column="27"/></name></expr></argument>)<pos:position pos:line="74" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">ap_rprintf<pos:position pos:line="75" pos:column="15"/></name><argument_list pos:line="75" pos:column="15">(<argument><expr><name pos:line="75" pos:column="16">r<pos:position pos:line="75" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="19">"  &lt;H2&gt;Startup callbacks so far:&lt;/H2&gt;\n  &lt;OL&gt;\n%s  &lt;/OL&gt;\n"<pos:position pos:line="75" pos:column="102"/></literal></expr></argument>,
            <argument><expr><name pos:line="76" pos:column="13">trace<pos:position pos:line="76" pos:column="18"/></name></expr></argument>)<pos:position pos:line="76" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">ap_rputs<pos:position pos:line="77" pos:column="13"/></name><argument_list pos:line="77" pos:column="13">(<argument><expr><literal type="string" pos:line="77" pos:column="14">"  &lt;H2&gt;Connection-specific callbacks so far:&lt;/H2&gt;\n"<pos:position pos:line="77" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="68">r<pos:position pos:line="77" pos:column="69"/></name></expr></argument>)<pos:position pos:line="77" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="71"/></expr_stmt>

    <expr_stmt><expr><name pos:line="79" pos:column="5">status<pos:position pos:line="79" pos:column="11"/></name> <operator pos:line="79" pos:column="12">=<pos:position pos:line="79" pos:column="13"/></operator>  <call><name pos:line="79" pos:column="15">apr_pool_userdata_get<pos:position pos:line="79" pos:column="36"/></name><argument_list pos:line="79" pos:column="36">(<argument><expr><operator pos:line="79" pos:column="37">&amp;<pos:position pos:line="79" pos:column="42"/></operator><name pos:line="79" pos:column="38">conn_data<pos:position pos:line="79" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="49">CONN_NOTE<pos:position pos:line="79" pos:column="58"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="80" pos:column="37">r<pos:position pos:line="80" pos:column="38"/></name><operator pos:line="80" pos:column="38">-&gt;<pos:position pos:line="80" pos:column="43"/></operator><name pos:line="80" pos:column="40">connection<pos:position pos:line="80" pos:column="50"/></name><operator pos:line="80" pos:column="50">-&gt;<pos:position pos:line="80" pos:column="55"/></operator><name pos:line="80" pos:column="52">pool<pos:position pos:line="80" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="58"/></expr_stmt>
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><operator pos:line="81" pos:column="9">(<pos:position pos:line="81" pos:column="10"/></operator><name pos:line="81" pos:column="10">status<pos:position pos:line="81" pos:column="16"/></name> <operator pos:line="81" pos:column="17">==<pos:position pos:line="81" pos:column="19"/></operator> <name pos:line="81" pos:column="20">APR_SUCCESS<pos:position pos:line="81" pos:column="31"/></name><operator pos:line="81" pos:column="31">)<pos:position pos:line="81" pos:column="32"/></operator> <operator pos:line="81" pos:column="33">&amp;&amp;<pos:position pos:line="81" pos:column="43"/></operator> <name pos:line="81" pos:column="36">conn_data<pos:position pos:line="81" pos:column="45"/></name></expr>)<pos:position pos:line="81" pos:column="46"/></condition><then pos:line="81" pos:column="46"> <block pos:line="81" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">ap_rprintf<pos:position pos:line="82" pos:column="19"/></name><argument_list pos:line="82" pos:column="19">(<argument><expr><name pos:line="82" pos:column="20">r<pos:position pos:line="82" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="23">"  &lt;OL&gt;\n%s  &lt;/OL&gt;\n"<pos:position pos:line="82" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="82" pos:column="46">(<pos:position pos:line="82" pos:column="47"/></operator><name pos:line="82" pos:column="47">char<pos:position pos:line="82" pos:column="51"/></name> <operator pos:line="82" pos:column="52">*<pos:position pos:line="82" pos:column="53"/></operator><operator pos:line="82" pos:column="53">)<pos:position pos:line="82" pos:column="54"/></operator> <name pos:line="82" pos:column="55">conn_data<pos:position pos:line="82" pos:column="64"/></name></expr></argument>)<pos:position pos:line="82" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then> <else pos:line="83" pos:column="7">else <block pos:line="83" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">ap_rputs<pos:position pos:line="84" pos:column="17"/></name><argument_list pos:line="84" pos:column="17">(<argument><expr><literal type="string" pos:line="84" pos:column="18">"  &lt;P&gt;No connection-specific callback information was "<pos:position pos:line="84" pos:column="79"/></literal>
                 <literal type="string" pos:line="85" pos:column="18">"retrieved.&lt;/P&gt;\n"<pos:position pos:line="85" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="38">r<pos:position pos:line="85" pos:column="39"/></name></expr></argument>)<pos:position pos:line="85" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="88" pos:column="5">ap_rputs<pos:position pos:line="88" pos:column="13"/></name><argument_list pos:line="88" pos:column="13">(<argument><expr><literal type="string" pos:line="88" pos:column="14">"  &lt;H2&gt;Request-specific callbacks so far:&lt;/H2&gt;\n"<pos:position pos:line="88" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="65">r<pos:position pos:line="88" pos:column="66"/></name></expr></argument>)<pos:position pos:line="88" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">ap_rprintf<pos:position pos:line="89" pos:column="15"/></name><argument_list pos:line="89" pos:column="15">(<argument><expr><name pos:line="89" pos:column="16">r<pos:position pos:line="89" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="19">"  &lt;OL&gt;\n%s  &lt;/OL&gt;\n"<pos:position pos:line="89" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="89" pos:column="42">apr_table_get<pos:position pos:line="89" pos:column="55"/></name><argument_list pos:line="89" pos:column="55">(<argument><expr><name><name pos:line="89" pos:column="56">r<pos:position pos:line="89" pos:column="57"/></name><operator pos:line="89" pos:column="57">-&gt;<pos:position pos:line="89" pos:column="62"/></operator><name pos:line="89" pos:column="59">notes<pos:position pos:line="89" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="66">TRACE_NOTE<pos:position pos:line="89" pos:column="76"/></name></expr></argument>)<pos:position pos:line="89" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">ap_rputs<pos:position pos:line="90" pos:column="13"/></name><argument_list pos:line="90" pos:column="13">(<argument><expr><literal type="string" pos:line="90" pos:column="14">"  &lt;H2&gt;Environment for &lt;EM&gt;this&lt;/EM&gt; call:&lt;/H2&gt;\n"<pos:position pos:line="90" pos:column="88"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="66">r<pos:position pos:line="90" pos:column="67"/></name></expr></argument>)<pos:position pos:line="90" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">ap_rputs<pos:position pos:line="91" pos:column="13"/></name><argument_list pos:line="91" pos:column="13">(<argument><expr><literal type="string" pos:line="91" pos:column="14">"  &lt;UL&gt;\n"<pos:position pos:line="91" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="26">r<pos:position pos:line="91" pos:column="27"/></name></expr></argument>)<pos:position pos:line="91" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">ap_rprintf<pos:position pos:line="92" pos:column="15"/></name><argument_list pos:line="92" pos:column="15">(<argument><expr><name pos:line="92" pos:column="16">r<pos:position pos:line="92" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="19">"   &lt;LI&gt;Applies-to: &lt;SAMP&gt;%s&lt;/SAMP&gt;\n   &lt;/LI&gt;\n"<pos:position pos:line="92" pos:column="91"/></literal></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="69">dcfg<pos:position pos:line="92" pos:column="73"/></name><operator pos:line="92" pos:column="73">-&gt;<pos:position pos:line="92" pos:column="78"/></operator><name pos:line="92" pos:column="75">loc<pos:position pos:line="92" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">ap_rprintf<pos:position pos:line="93" pos:column="15"/></name><argument_list pos:line="93" pos:column="15">(<argument><expr><name pos:line="93" pos:column="16">r<pos:position pos:line="93" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="19">"   &lt;LI&gt;\"Example\" directive declared here: %s\n   &lt;/LI&gt;\n"<pos:position pos:line="93" pos:column="91"/></literal></expr></argument>,
            <argument><expr><operator pos:line="94" pos:column="13">(<pos:position pos:line="94" pos:column="14"/></operator><ternary><condition><expr><name><name pos:line="94" pos:column="14">dcfg<pos:position pos:line="94" pos:column="18"/></name><operator pos:line="94" pos:column="18">-&gt;<pos:position pos:line="94" pos:column="23"/></operator><name pos:line="94" pos:column="20">local<pos:position pos:line="94" pos:column="25"/></name></name></expr> ?<pos:position pos:line="94" pos:column="27"/></condition><then pos:line="94" pos:column="27"> <expr><literal type="string" pos:line="94" pos:column="28">"YES"<pos:position pos:line="94" pos:column="33"/></literal></expr> <pos:position pos:line="94" pos:column="34"/></then><else pos:line="94" pos:column="34">: <expr><literal type="string" pos:line="94" pos:column="36">"NO"<pos:position pos:line="94" pos:column="40"/></literal></expr></else></ternary><operator pos:line="94" pos:column="40">)<pos:position pos:line="94" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="94" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">ap_rprintf<pos:position pos:line="95" pos:column="15"/></name><argument_list pos:line="95" pos:column="15">(<argument><expr><name pos:line="95" pos:column="16">r<pos:position pos:line="95" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="19">"   &lt;LI&gt;\"Example\" inherited: %s\n   &lt;/LI&gt;\n"<pos:position pos:line="95" pos:column="77"/></literal></expr></argument>,
            <argument><expr><operator pos:line="96" pos:column="13">(<pos:position pos:line="96" pos:column="14"/></operator><ternary><condition><expr><name><name pos:line="96" pos:column="14">dcfg<pos:position pos:line="96" pos:column="18"/></name><operator pos:line="96" pos:column="18">-&gt;<pos:position pos:line="96" pos:column="23"/></operator><name pos:line="96" pos:column="20">congenital<pos:position pos:line="96" pos:column="30"/></name></name></expr> ?<pos:position pos:line="96" pos:column="32"/></condition><then pos:line="96" pos:column="32"> <expr><literal type="string" pos:line="96" pos:column="33">"YES"<pos:position pos:line="96" pos:column="38"/></literal></expr> <pos:position pos:line="96" pos:column="39"/></then><else pos:line="96" pos:column="39">: <expr><literal type="string" pos:line="96" pos:column="41">"NO"<pos:position pos:line="96" pos:column="45"/></literal></expr></else></ternary><operator pos:line="96" pos:column="45">)<pos:position pos:line="96" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="96" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">ap_rputs<pos:position pos:line="97" pos:column="13"/></name><argument_list pos:line="97" pos:column="13">(<argument><expr><literal type="string" pos:line="97" pos:column="14">"  &lt;/UL&gt;\n"<pos:position pos:line="97" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="27">r<pos:position pos:line="97" pos:column="28"/></name></expr></argument>)<pos:position pos:line="97" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">ap_rputs<pos:position pos:line="98" pos:column="13"/></name><argument_list pos:line="98" pos:column="13">(<argument><expr><literal type="string" pos:line="98" pos:column="14">" &lt;/BODY&gt;\n"<pos:position pos:line="98" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="28">r<pos:position pos:line="98" pos:column="29"/></name></expr></argument>)<pos:position pos:line="98" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">ap_rputs<pos:position pos:line="99" pos:column="13"/></name><argument_list pos:line="99" pos:column="13">(<argument><expr><literal type="string" pos:line="99" pos:column="14">"&lt;/HTML&gt;\n"<pos:position pos:line="99" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="27">r<pos:position pos:line="99" pos:column="28"/></name></expr></argument>)<pos:position pos:line="99" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="30"/></expr_stmt>
    <comment type="block" pos:line="100" pos:column="5">/*
     * We're all done, so cancel the timeout we set.  Since this is probably
     * the end of the request we *could* assume this would be done during
     * post-processing - but it's possible that another handler might be
     * called and inherit our outstanding timer.  Not good; to each its own.
     */</comment>
    <comment type="block" pos:line="106" pos:column="5">/*
     * We did what we wanted to do, so tell the rest of the server we
     * succeeded.
     */</comment>
    <return pos:line="110" pos:column="5">return <expr><name pos:line="110" pos:column="12">OK<pos:position pos:line="110" pos:column="14"/></name></expr>;<pos:position pos:line="110" pos:column="15"/></return>
}<pos:position pos:line="111" pos:column="2"/></block></function></unit>

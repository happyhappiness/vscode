<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2826_httpd-2.0.59.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">generate_def_file<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">cmd_data_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">cmd_data<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">def_file<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><literal type="number" pos:line="3" pos:column="19">1024<pos:position pos:line="3" pos:column="23"/></literal></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">implib_file<pos:position pos:line="4" pos:column="21"/></name><index pos:line="4" pos:column="21">[<expr><literal type="number" pos:line="4" pos:column="22">1024<pos:position pos:line="4" pos:column="26"/></literal></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">ext<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">FILE<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">hDef<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name><name pos:line="7" pos:column="11">export_args<pos:position pos:line="7" pos:column="22"/></name><index pos:line="7" pos:column="22">[<expr><literal type="number" pos:line="7" pos:column="23">1024<pos:position pos:line="7" pos:column="27"/></literal></expr>]<pos:position pos:line="7" pos:column="28"/></index></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">num_export_args<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><literal type="number" pos:line="8" pos:column="27">0<pos:position pos:line="8" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">cmd<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">cmd_size<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><literal type="number" pos:line="10" pos:column="20">0<pos:position pos:line="10" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">a<pos:position pos:line="11" pos:column="10"/></name></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">cmd_data<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">output_name<pos:position pos:line="13" pos:column="30"/></name></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">strcpy<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">def_file<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="26">cmd_data<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">output_name<pos:position pos:line="14" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">strcat<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">def_file<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="26">".def"<pos:position pos:line="15" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">hDef<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">fopen<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">def_file<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="32">"w"<pos:position pos:line="16" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">hDef<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">!=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">NULL<pos:position pos:line="18" pos:column="25"/></name></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26"> <block pos:line="18" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">fprintf<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">hDef<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="27">"LIBRARY '%s' INITINSTANCE\n"<pos:position pos:line="19" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="58">nameof<pos:position pos:line="19" pos:column="64"/></name><argument_list pos:line="19" pos:column="64">(<argument><expr><name><name pos:line="19" pos:column="65">cmd_data<pos:position pos:line="19" pos:column="73"/></name><operator pos:line="19" pos:column="73">-&gt;<pos:position pos:line="19" pos:column="78"/></operator><name pos:line="19" pos:column="75">output_name<pos:position pos:line="19" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="89"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">fprintf<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name pos:line="20" pos:column="21">hDef<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="27">"DATA NONSHARED\n"<pos:position pos:line="20" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">fprintf<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">hDef<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="27">"EXPORTS\n"<pos:position pos:line="21" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">fclose<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">hDef<pos:position pos:line="22" pos:column="24"/></name></expr></argument>)<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>

            <for pos:line="24" pos:column="13">for <control pos:line="24" pos:column="17">(<init><expr><name pos:line="24" pos:column="18">a<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator><literal type="number" pos:line="24" pos:column="20">0<pos:position pos:line="24" pos:column="21"/></literal></expr>;<pos:position pos:line="24" pos:column="22"/></init> <condition><expr><name pos:line="24" pos:column="23">a<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">&lt;<pos:position pos:line="24" pos:column="29"/></operator> <name><name pos:line="24" pos:column="27">cmd_data<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">num_obj_files<pos:position pos:line="24" pos:column="50"/></name></name></expr>;<pos:position pos:line="24" pos:column="51"/></condition> <incr><expr><name pos:line="24" pos:column="52">a<pos:position pos:line="24" pos:column="53"/></name><operator pos:line="24" pos:column="53">++<pos:position pos:line="24" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="56"/></control> <block pos:line="24" pos:column="57">{
                <expr_stmt><expr><name pos:line="25" pos:column="17">cmd_size<pos:position pos:line="25" pos:column="25"/></name> <operator pos:line="25" pos:column="26">+=<pos:position pos:line="25" pos:column="28"/></operator> <call><name pos:line="25" pos:column="29">strlen<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name><name pos:line="25" pos:column="36">cmd_data<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">-&gt;<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="46">obj_files<pos:position pos:line="25" pos:column="55"/></name><index pos:line="25" pos:column="55">[<expr><name pos:line="25" pos:column="56">a<pos:position pos:line="25" pos:column="57"/></name></expr>]<pos:position pos:line="25" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call> <operator pos:line="25" pos:column="60">+<pos:position pos:line="25" pos:column="61"/></operator> <literal type="number" pos:line="25" pos:column="62">1<pos:position pos:line="25" pos:column="63"/></literal></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>
            }<pos:position pos:line="26" pos:column="14"/></block></for>

            <expr_stmt><expr><name pos:line="28" pos:column="13">cmd_size<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">+=<pos:position pos:line="28" pos:column="24"/></operator> <call><name pos:line="28" pos:column="25">strlen<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">GEN_EXPORTS<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call> <operator pos:line="28" pos:column="45">+<pos:position pos:line="28" pos:column="46"/></operator> <call><name pos:line="28" pos:column="47">strlen<pos:position pos:line="28" pos:column="53"/></name><argument_list pos:line="28" pos:column="53">(<argument><expr><name pos:line="28" pos:column="54">def_file<pos:position pos:line="28" pos:column="62"/></name></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call> <operator pos:line="28" pos:column="64">+<pos:position pos:line="28" pos:column="65"/></operator> <literal type="number" pos:line="28" pos:column="66">3<pos:position pos:line="28" pos:column="67"/></literal></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><name pos:line="29" pos:column="13">cmd<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <operator pos:line="29" pos:column="19">(<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">char<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">*<pos:position pos:line="29" pos:column="26"/></operator><operator pos:line="29" pos:column="26">)<pos:position pos:line="29" pos:column="27"/></operator><call><name pos:line="29" pos:column="27">malloc<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">cmd_size<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">strcpy<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><name pos:line="30" pos:column="20">cmd<pos:position pos:line="30" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="25">GEN_EXPORTS<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>

            <for pos:line="32" pos:column="13">for <control pos:line="32" pos:column="17">(<init><expr><name pos:line="32" pos:column="18">a<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator><literal type="number" pos:line="32" pos:column="20">0<pos:position pos:line="32" pos:column="21"/></literal></expr>;<pos:position pos:line="32" pos:column="22"/></init> <condition><expr><name pos:line="32" pos:column="23">a<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">&lt;<pos:position pos:line="32" pos:column="29"/></operator> <name><name pos:line="32" pos:column="27">cmd_data<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">num_obj_files<pos:position pos:line="32" pos:column="50"/></name></name></expr>;<pos:position pos:line="32" pos:column="51"/></condition> <incr><expr><name pos:line="32" pos:column="52">a<pos:position pos:line="32" pos:column="53"/></name><operator pos:line="32" pos:column="53">++<pos:position pos:line="32" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="56"/></control> <block pos:line="32" pos:column="57">{
                <expr_stmt><expr><call><name pos:line="33" pos:column="17">strcat<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">cmd<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="29">" "<pos:position pos:line="33" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="34" pos:column="17">strcat<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">cmd<pos:position pos:line="34" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="29">cmd_data<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">-&gt;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="39">obj_files<pos:position pos:line="34" pos:column="48"/></name><index pos:line="34" pos:column="48">[<expr><name pos:line="34" pos:column="49">a<pos:position pos:line="34" pos:column="50"/></name></expr>]<pos:position pos:line="34" pos:column="51"/></index></name></expr></argument> )<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="35" pos:column="14"/></block></for>

            <expr_stmt><expr><call><name pos:line="37" pos:column="13">strcat<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><name pos:line="37" pos:column="20">cmd<pos:position pos:line="37" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="25">"&gt;&gt;"<pos:position pos:line="37" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">strcat<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><name pos:line="38" pos:column="20">cmd<pos:position pos:line="38" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="25">def_file<pos:position pos:line="38" pos:column="33"/></name></expr></argument>)<pos:position pos:line="38" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">puts<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name pos:line="39" pos:column="18">cmd<pos:position pos:line="39" pos:column="21"/></name></expr></argument>)<pos:position pos:line="39" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="40" pos:column="13">export_args<pos:position pos:line="40" pos:column="24"/></name><index pos:line="40" pos:column="24">[<expr><name pos:line="40" pos:column="25">num_export_args<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">++<pos:position pos:line="40" pos:column="42"/></operator></expr>]<pos:position pos:line="40" pos:column="43"/></index></name> <operator pos:line="40" pos:column="44">=<pos:position pos:line="40" pos:column="45"/></operator> <name pos:line="40" pos:column="46">SHELL_CMD<pos:position pos:line="40" pos:column="55"/></name></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">export_args<pos:position pos:line="41" pos:column="24"/></name><index pos:line="41" pos:column="24">[<expr><name pos:line="41" pos:column="25">num_export_args<pos:position pos:line="41" pos:column="40"/></name><operator pos:line="41" pos:column="40">++<pos:position pos:line="41" pos:column="42"/></operator></expr>]<pos:position pos:line="41" pos:column="43"/></index></name> <operator pos:line="41" pos:column="44">=<pos:position pos:line="41" pos:column="45"/></operator> <literal type="string" pos:line="41" pos:column="46">"-c"<pos:position pos:line="41" pos:column="50"/></literal></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="42" pos:column="13">export_args<pos:position pos:line="42" pos:column="24"/></name><index pos:line="42" pos:column="24">[<expr><name pos:line="42" pos:column="25">num_export_args<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">++<pos:position pos:line="42" pos:column="42"/></operator></expr>]<pos:position pos:line="42" pos:column="43"/></index></name> <operator pos:line="42" pos:column="44">=<pos:position pos:line="42" pos:column="45"/></operator> <name pos:line="42" pos:column="46">cmd<pos:position pos:line="42" pos:column="49"/></name></expr>;<pos:position pos:line="42" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">export_args<pos:position pos:line="43" pos:column="24"/></name><index pos:line="43" pos:column="24">[<expr><name pos:line="43" pos:column="25">num_export_args<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">++<pos:position pos:line="43" pos:column="42"/></operator></expr>]<pos:position pos:line="43" pos:column="43"/></index></name> <operator pos:line="43" pos:column="44">=<pos:position pos:line="43" pos:column="45"/></operator> <name pos:line="43" pos:column="46">NULL<pos:position pos:line="43" pos:column="50"/></name></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">spawnvp<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">P_WAIT<pos:position pos:line="44" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="29">export_args<pos:position pos:line="44" pos:column="40"/></name><index pos:line="44" pos:column="40">[<expr><literal type="number" pos:line="44" pos:column="41">0<pos:position pos:line="44" pos:column="42"/></literal></expr>]<pos:position pos:line="44" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="45">export_args<pos:position pos:line="44" pos:column="56"/></name></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="45" pos:column="13">cmd_data<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">arglist<pos:position pos:line="45" pos:column="30"/></name><index pos:line="45" pos:column="30">[<expr><name><name pos:line="45" pos:column="31">cmd_data<pos:position pos:line="45" pos:column="39"/></name><operator pos:line="45" pos:column="39">-&gt;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="41">num_args<pos:position pos:line="45" pos:column="49"/></name></name><operator pos:line="45" pos:column="49">++<pos:position pos:line="45" pos:column="51"/></operator></expr>]<pos:position pos:line="45" pos:column="52"/></index></name> <operator pos:line="45" pos:column="53">=<pos:position pos:line="45" pos:column="54"/></operator> <call><name pos:line="45" pos:column="55">strdup<pos:position pos:line="45" pos:column="61"/></name><argument_list pos:line="45" pos:column="61">(<argument><expr><name pos:line="45" pos:column="62">def_file<pos:position pos:line="45" pos:column="70"/></name></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="72"/></expr_stmt>

            <comment type="block" pos:line="47" pos:column="13">/* Now make an import library for the dll */</comment>
            <expr_stmt><expr><name pos:line="48" pos:column="13">num_export_args<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <literal type="number" pos:line="48" pos:column="31">0<pos:position pos:line="48" pos:column="32"/></literal></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="49" pos:column="13">export_args<pos:position pos:line="49" pos:column="24"/></name><index pos:line="49" pos:column="24">[<expr><name pos:line="49" pos:column="25">num_export_args<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">++<pos:position pos:line="49" pos:column="42"/></operator></expr>]<pos:position pos:line="49" pos:column="43"/></index></name> <operator pos:line="49" pos:column="44">=<pos:position pos:line="49" pos:column="45"/></operator> <name pos:line="49" pos:column="46">DEF2IMPLIB_CMD<pos:position pos:line="49" pos:column="60"/></name></expr>;<pos:position pos:line="49" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="50" pos:column="13">export_args<pos:position pos:line="50" pos:column="24"/></name><index pos:line="50" pos:column="24">[<expr><name pos:line="50" pos:column="25">num_export_args<pos:position pos:line="50" pos:column="40"/></name><operator pos:line="50" pos:column="40">++<pos:position pos:line="50" pos:column="42"/></operator></expr>]<pos:position pos:line="50" pos:column="43"/></index></name> <operator pos:line="50" pos:column="44">=<pos:position pos:line="50" pos:column="45"/></operator> <literal type="string" pos:line="50" pos:column="46">"-o"<pos:position pos:line="50" pos:column="50"/></literal></expr>;<pos:position pos:line="50" pos:column="51"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="52" pos:column="13">strcpy<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><name pos:line="52" pos:column="20">implib_file<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="33">".libs/"<pos:position pos:line="52" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">strcat<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><name pos:line="53" pos:column="20">implib_file<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="33">cmd_data<pos:position pos:line="53" pos:column="41"/></name><operator pos:line="53" pos:column="41">-&gt;<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="43">stub_name<pos:position pos:line="53" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="54" pos:column="13">ext<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">=<pos:position pos:line="54" pos:column="18"/></operator> <call><name pos:line="54" pos:column="19">strrchr<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><name pos:line="54" pos:column="27">implib_file<pos:position pos:line="54" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="54" pos:column="40">'.'<pos:position pos:line="54" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="45"/></expr_stmt>

            <if pos:line="56" pos:column="13">if <condition pos:line="56" pos:column="16">(<expr><name pos:line="56" pos:column="17">ext<pos:position pos:line="56" pos:column="20"/></name></expr>)<pos:position pos:line="56" pos:column="21"/></condition><then pos:line="56" pos:column="21">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="57" pos:column="17">*<pos:position pos:line="57" pos:column="18"/></operator><name pos:line="57" pos:column="18">ext<pos:position pos:line="57" pos:column="21"/></name> <operator pos:line="57" pos:column="22">=<pos:position pos:line="57" pos:column="23"/></operator> <literal type="number" pos:line="57" pos:column="24">0<pos:position pos:line="57" pos:column="25"/></literal></expr>;<pos:position pos:line="57" pos:column="26"/></expr_stmt></block></then></if>

            <expr_stmt><expr><call><name pos:line="59" pos:column="13">strcat<pos:position pos:line="59" pos:column="19"/></name><argument_list pos:line="59" pos:column="19">(<argument><expr><name pos:line="59" pos:column="20">implib_file<pos:position pos:line="59" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="33">"."<pos:position pos:line="59" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">strcat<pos:position pos:line="60" pos:column="19"/></name><argument_list pos:line="60" pos:column="19">(<argument><expr><name pos:line="60" pos:column="20">implib_file<pos:position pos:line="60" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="33">STATIC_LIB_EXT<pos:position pos:line="60" pos:column="47"/></name></expr></argument>)<pos:position pos:line="60" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="49"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="62" pos:column="13">export_args<pos:position pos:line="62" pos:column="24"/></name><index pos:line="62" pos:column="24">[<expr><name pos:line="62" pos:column="25">num_export_args<pos:position pos:line="62" pos:column="40"/></name><operator pos:line="62" pos:column="40">++<pos:position pos:line="62" pos:column="42"/></operator></expr>]<pos:position pos:line="62" pos:column="43"/></index></name> <operator pos:line="62" pos:column="44">=<pos:position pos:line="62" pos:column="45"/></operator> <name pos:line="62" pos:column="46">implib_file<pos:position pos:line="62" pos:column="57"/></name></expr>;<pos:position pos:line="62" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">export_args<pos:position pos:line="63" pos:column="24"/></name><index pos:line="63" pos:column="24">[<expr><name pos:line="63" pos:column="25">num_export_args<pos:position pos:line="63" pos:column="40"/></name><operator pos:line="63" pos:column="40">++<pos:position pos:line="63" pos:column="42"/></operator></expr>]<pos:position pos:line="63" pos:column="43"/></index></name> <operator pos:line="63" pos:column="44">=<pos:position pos:line="63" pos:column="45"/></operator> <name pos:line="63" pos:column="46">def_file<pos:position pos:line="63" pos:column="54"/></name></expr>;<pos:position pos:line="63" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="64" pos:column="13">export_args<pos:position pos:line="64" pos:column="24"/></name><index pos:line="64" pos:column="24">[<expr><name pos:line="64" pos:column="25">num_export_args<pos:position pos:line="64" pos:column="40"/></name><operator pos:line="64" pos:column="40">++<pos:position pos:line="64" pos:column="42"/></operator></expr>]<pos:position pos:line="64" pos:column="43"/></index></name> <operator pos:line="64" pos:column="44">=<pos:position pos:line="64" pos:column="45"/></operator> <name pos:line="64" pos:column="46">NULL<pos:position pos:line="64" pos:column="50"/></name></expr>;<pos:position pos:line="64" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">spawnvp<pos:position pos:line="65" pos:column="20"/></name><argument_list pos:line="65" pos:column="20">(<argument><expr><name pos:line="65" pos:column="21">P_WAIT<pos:position pos:line="65" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="29">export_args<pos:position pos:line="65" pos:column="40"/></name><index pos:line="65" pos:column="40">[<expr><literal type="number" pos:line="65" pos:column="41">0<pos:position pos:line="65" pos:column="42"/></literal></expr>]<pos:position pos:line="65" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="45">export_args<pos:position pos:line="65" pos:column="56"/></name></expr></argument>)<pos:position pos:line="65" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

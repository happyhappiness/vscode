<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3918_httpd-2.2.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_os_sock_put<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_socket_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">sock<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">apr_os_sock_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">thesock<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>, 
                           <parameter><decl><type><name pos:line="2" pos:column="28">apr_pool_t<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">cont<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* XXX Bogus assumption that *sock points at anything legit */</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><operator pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">sock<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">)<pos:position pos:line="5" pos:column="16"/></operator> <operator pos:line="5" pos:column="17">==<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25"> <block pos:line="5" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">alloc_socket<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">sock<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="28">cont<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>
        <comment type="block" pos:line="7" pos:column="9">/* XXX IPv6 figure out the family here! */</comment>
        <comment type="block" pos:line="8" pos:column="9">/* XXX figure out the actual socket type here */</comment>
        <comment type="block" pos:line="9" pos:column="9">/* *or* just decide that apr_os_sock_put() has to be told the family and type */</comment>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">set_socket_vars<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">sock<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">APR_INET<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">SOCK_STREAM<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="55">0<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><operator pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">sock<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">timeout<pos:position pos:line="11" pos:column="25"/></name></name> <operator pos:line="11" pos:column="26">=<pos:position pos:line="11" pos:column="27"/></operator> <operator pos:line="11" pos:column="28">-<pos:position pos:line="11" pos:column="29"/></operator><literal type="number" pos:line="11" pos:column="29">1<pos:position pos:line="11" pos:column="30"/></literal></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><operator pos:line="13" pos:column="5">(<pos:position pos:line="13" pos:column="6"/></operator><operator pos:line="13" pos:column="6">*<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">sock<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">)<pos:position pos:line="13" pos:column="12"/></operator><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">local_port_unknown<pos:position pos:line="13" pos:column="32"/></name></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <name><operator pos:line="13" pos:column="35">(<pos:position pos:line="13" pos:column="36"/></operator><operator pos:line="13" pos:column="36">*<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="37">sock<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">)<pos:position pos:line="13" pos:column="42"/></operator><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">local_interface_unknown<pos:position pos:line="13" pos:column="67"/></name></name> <operator pos:line="13" pos:column="68">=<pos:position pos:line="13" pos:column="69"/></operator> <literal type="number" pos:line="13" pos:column="70">1<pos:position pos:line="13" pos:column="71"/></literal></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="14" pos:column="5">(<pos:position pos:line="14" pos:column="6"/></operator><operator pos:line="14" pos:column="6">*<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">sock<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">)<pos:position pos:line="14" pos:column="12"/></operator><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">remote_addr_unknown<pos:position pos:line="14" pos:column="33"/></name></name> <operator pos:line="14" pos:column="34">=<pos:position pos:line="14" pos:column="35"/></operator> <literal type="number" pos:line="14" pos:column="36">1<pos:position pos:line="14" pos:column="37"/></literal></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="15" pos:column="5">(<pos:position pos:line="15" pos:column="6"/></operator><operator pos:line="15" pos:column="6">*<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">sock<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">)<pos:position pos:line="15" pos:column="12"/></operator><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">socketdes<pos:position pos:line="15" pos:column="23"/></name></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <operator pos:line="15" pos:column="26">*<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">thesock<pos:position pos:line="15" pos:column="34"/></name></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">APR_SUCCESS<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

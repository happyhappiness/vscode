<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2078_httpd-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">socket_connect_un<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">apr_socket_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">sock<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                                      <parameter><decl><type><name><name pos:line="2" pos:column="39">struct<pos:position pos:line="2" pos:column="45"/></name> <name pos:line="2" pos:column="46">sockaddr_un<pos:position pos:line="2" pos:column="57"/></name></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">sa<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_os_sock_t<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">rawsock<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_interval_time_t<pos:position pos:line="6" pos:column="24"/></name></type> <name pos:line="6" pos:column="25">t<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">rv<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <call><name pos:line="8" pos:column="10">apr_os_sock_get<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><operator pos:line="8" pos:column="26">&amp;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="27">rawsock<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">sock<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">rv<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">!=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">APR_SUCCESS<pos:position pos:line="9" pos:column="26"/></name></expr>)<pos:position pos:line="9" pos:column="27"/></condition><then pos:line="9" pos:column="27"> <block pos:line="9" pos:column="28">{
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">rv<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="13" pos:column="5">rv<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">apr_socket_timeout_get<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">sock<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="39">&amp;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="40">t<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">!=<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">APR_SUCCESS<pos:position pos:line="14" pos:column="26"/></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27"> <block pos:line="14" pos:column="28">{
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">rv<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <do pos:line="18" pos:column="5">do <block pos:line="18" pos:column="8">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">rv<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">connect<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">rawsock<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="31">(<pos:position pos:line="19" pos:column="32"/></operator>struct <name pos:line="19" pos:column="39">sockaddr<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">*<pos:position pos:line="19" pos:column="48"/></operator><operator pos:line="19" pos:column="48">)<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="49">sa<pos:position pos:line="19" pos:column="51"/></name></expr></argument>,
                               <argument><expr><sizeof pos:line="20" pos:column="32">sizeof<argument_list pos:line="20" pos:column="38">(<argument><expr><operator pos:line="20" pos:column="39">*<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="40">sa<pos:position pos:line="20" pos:column="42"/></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></sizeof> <operator pos:line="20" pos:column="44">+<pos:position pos:line="20" pos:column="45"/></operator> <call><name pos:line="20" pos:column="46">strlen<pos:position pos:line="20" pos:column="52"/></name><argument_list pos:line="20" pos:column="52">(<argument><expr><name><name pos:line="20" pos:column="53">sa<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">-&gt;<pos:position pos:line="20" pos:column="60"/></operator><name pos:line="20" pos:column="57">sun_path<pos:position pos:line="20" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block> while <condition pos:line="21" pos:column="13">(<expr><name pos:line="21" pos:column="14">rv<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">==<pos:position pos:line="21" pos:column="19"/></operator> <operator pos:line="21" pos:column="20">-<pos:position pos:line="21" pos:column="21"/></operator><literal type="number" pos:line="21" pos:column="21">1<pos:position pos:line="21" pos:column="22"/></literal> <operator pos:line="21" pos:column="23">&amp;&amp;<pos:position pos:line="21" pos:column="33"/></operator> <name pos:line="21" pos:column="26">errno<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">==<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="35">EINTR<pos:position pos:line="21" pos:column="40"/></name></expr>)<pos:position pos:line="21" pos:column="41"/></condition>;<pos:position pos:line="21" pos:column="42"/></do>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">rv<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">==<pos:position pos:line="23" pos:column="15"/></operator> <operator pos:line="23" pos:column="16">-<pos:position pos:line="23" pos:column="17"/></operator><literal type="number" pos:line="23" pos:column="17">1<pos:position pos:line="23" pos:column="18"/></literal><operator pos:line="23" pos:column="18">)<pos:position pos:line="23" pos:column="19"/></operator> <operator pos:line="23" pos:column="20">&amp;&amp;<pos:position pos:line="23" pos:column="30"/></operator> <operator pos:line="23" pos:column="23">(<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">errno<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">==<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="33">EINPROGRESS<pos:position pos:line="23" pos:column="44"/></name> <operator pos:line="23" pos:column="45">||<pos:position pos:line="23" pos:column="47"/></operator> <name pos:line="23" pos:column="48">errno<pos:position pos:line="23" pos:column="53"/></name> <operator pos:line="23" pos:column="54">==<pos:position pos:line="23" pos:column="56"/></operator> <name pos:line="23" pos:column="57">EALREADY<pos:position pos:line="23" pos:column="65"/></name><operator pos:line="23" pos:column="65">)<pos:position pos:line="23" pos:column="66"/></operator>
        <operator pos:line="24" pos:column="9">&amp;&amp;<pos:position pos:line="24" pos:column="19"/></operator> <operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">t<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">&gt;<pos:position pos:line="24" pos:column="19"/></operator> <literal type="number" pos:line="24" pos:column="17">0<pos:position pos:line="24" pos:column="18"/></literal><operator pos:line="24" pos:column="18">)<pos:position pos:line="24" pos:column="19"/></operator></expr>)<pos:position pos:line="24" pos:column="20"/></condition><then pos:line="24" pos:column="20"> <block pos:line="24" pos:column="21">{
<cpp:if pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">if<pos:position pos:line="25" pos:column="4"/></cpp:directive> <expr><name pos:line="25" pos:column="5">APR_MAJOR_VERSION<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">&lt;<pos:position pos:line="25" pos:column="27"/></operator> <literal type="number" pos:line="25" pos:column="25">2<pos:position pos:line="25" pos:column="26"/></literal></expr></cpp:if>
        <expr_stmt><expr><name pos:line="26" pos:column="9">rv<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">apr_wait_for_io_or_timeout<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">NULL<pos:position pos:line="26" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="47">sock<pos:position pos:line="26" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="53">0<pos:position pos:line="26" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="56"/></expr_stmt>
<cpp:else pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">else<pos:position pos:line="27" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="28" pos:column="9">rv<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">apr_socket_wait<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">sock<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="36">APR_WAIT_WRITE<pos:position pos:line="28" pos:column="50"/></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>

        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">rv<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">!=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">APR_SUCCESS<pos:position pos:line="31" pos:column="30"/></name></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31"> <block pos:line="31" pos:column="32">{
            <return pos:line="32" pos:column="13">return <expr><name pos:line="32" pos:column="20">rv<pos:position pos:line="32" pos:column="22"/></name></expr>;<pos:position pos:line="32" pos:column="23"/></return>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">rv<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">==<pos:position pos:line="36" pos:column="14"/></operator> <operator pos:line="36" pos:column="15">-<pos:position pos:line="36" pos:column="16"/></operator><literal type="number" pos:line="36" pos:column="16">1<pos:position pos:line="36" pos:column="17"/></literal> <operator pos:line="36" pos:column="18">&amp;&amp;<pos:position pos:line="36" pos:column="28"/></operator> <name pos:line="36" pos:column="21">errno<pos:position pos:line="36" pos:column="26"/></name> <operator pos:line="36" pos:column="27">!=<pos:position pos:line="36" pos:column="29"/></operator> <name pos:line="36" pos:column="30">EISCONN<pos:position pos:line="36" pos:column="37"/></name></expr>)<pos:position pos:line="36" pos:column="38"/></condition><then pos:line="36" pos:column="38"> <block pos:line="36" pos:column="39">{
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">errno<pos:position pos:line="37" pos:column="21"/></name></expr>;<pos:position pos:line="37" pos:column="22"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">APR_SUCCESS<pos:position pos:line="40" pos:column="23"/></name></expr>;<pos:position pos:line="40" pos:column="24"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

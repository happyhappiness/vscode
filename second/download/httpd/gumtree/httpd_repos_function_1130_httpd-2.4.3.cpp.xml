<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1130_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_cache_x_cache<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">cmd_parms<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">parms<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">void<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">dummy<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">int<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">flag<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{

    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">parms<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">-&gt;<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="16">path<pos:position pos:line="4" pos:column="20"/></name></name></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21"> <block pos:line="4" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">cache_dir_conf<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">dconf<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><operator pos:line="5" pos:column="33">(<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="34">cache_dir_conf<pos:position pos:line="5" pos:column="48"/></name> <operator pos:line="5" pos:column="49">*<pos:position pos:line="5" pos:column="50"/></operator><operator pos:line="5" pos:column="50">)<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="51">dummy<pos:position pos:line="5" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="57"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="7" pos:column="9">dconf<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">x_cache<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">=<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">flag<pos:position pos:line="7" pos:column="30"/></name></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">dconf<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">x_cache_set<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <literal type="number" pos:line="8" pos:column="30">1<pos:position pos:line="8" pos:column="31"/></literal></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>

    }<pos:position pos:line="10" pos:column="6"/></block></then>
    <else pos:line="11" pos:column="5">else <block pos:line="11" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">cache_server_conf<pos:position pos:line="12" pos:column="26"/></name> <modifier pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></modifier></type><name pos:line="12" pos:column="28">conf<pos:position pos:line="12" pos:column="32"/></name> <init pos:line="12" pos:column="33">=
            <expr><operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">cache_server_conf<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">*<pos:position pos:line="13" pos:column="33"/></operator><operator pos:line="13" pos:column="33">)<pos:position pos:line="13" pos:column="34"/></operator><call><name pos:line="13" pos:column="34">ap_get_module_config<pos:position pos:line="13" pos:column="54"/></name><argument_list pos:line="13" pos:column="54">(<argument><expr><name><name pos:line="13" pos:column="55">parms<pos:position pos:line="13" pos:column="60"/></name><operator pos:line="13" pos:column="60">-&gt;<pos:position pos:line="13" pos:column="65"/></operator><name pos:line="13" pos:column="62">server<pos:position pos:line="13" pos:column="68"/></name><operator pos:line="13" pos:column="68">-&gt;<pos:position pos:line="13" pos:column="73"/></operator><name pos:line="13" pos:column="70">module_config<pos:position pos:line="13" pos:column="83"/></name></name></expr></argument>,
                                                      <argument><expr><operator pos:line="14" pos:column="55">&amp;<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="56">cache_module<pos:position pos:line="14" pos:column="68"/></name></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="70"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="16" pos:column="9">conf<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">x_cache<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <name pos:line="16" pos:column="25">flag<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">conf<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">x_cache_set<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <literal type="number" pos:line="17" pos:column="29">1<pos:position pos:line="17" pos:column="30"/></literal></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>

    }<pos:position pos:line="19" pos:column="6"/></block></else></if>

    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">NULL<pos:position pos:line="21" pos:column="16"/></name></expr>;<pos:position pos:line="21" pos:column="17"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3207_httpd-2.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">filepath_drive_get<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">rootpath<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">drive<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, 
                                <parameter><decl><type><name pos:line="2" pos:column="33">apr_int32_t<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">flags<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">apr_pool_t<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">p<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">path<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">APR_PATH_MAX<pos:position pos:line="4" pos:column="27"/></name></expr>]<pos:position pos:line="4" pos:column="28"/></index></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">APR_HAS_UNICODE_FS<pos:position pos:line="5" pos:column="23"/></name></expr></cpp:if>
    <macro><name pos:line="6" pos:column="5">IF_WIN_OS_IS_UNICODE<pos:position pos:line="6" pos:column="25"/></name></macro>
    <block pos:line="7" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">apr_wchar_t<pos:position pos:line="8" pos:column="20"/></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">ignored<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">apr_wchar_t<pos:position pos:line="9" pos:column="20"/></name></type> <name><name pos:line="9" pos:column="21">wdrive<pos:position pos:line="9" pos:column="27"/></name><index pos:line="9" pos:column="27">[<expr><literal type="number" pos:line="9" pos:column="28">8<pos:position pos:line="9" pos:column="29"/></literal></expr>]<pos:position pos:line="9" pos:column="30"/></index></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">apr_wchar_t<pos:position pos:line="10" pos:column="20"/></name></type> <name><name pos:line="10" pos:column="21">wpath<pos:position pos:line="10" pos:column="26"/></name><index pos:line="10" pos:column="26">[<expr><name pos:line="10" pos:column="27">APR_PATH_MAX<pos:position pos:line="10" pos:column="39"/></name></expr>]<pos:position pos:line="10" pos:column="40"/></index></name></decl>;<pos:position pos:line="10" pos:column="41"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">apr_status_t<pos:position pos:line="11" pos:column="21"/></name></type> <name pos:line="11" pos:column="22">rv<pos:position pos:line="11" pos:column="24"/></name></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
        <comment type="block" pos:line="12" pos:column="9">/* ???: This needs review, apparently "\\?\d:." returns "\\?\d:" 
         * as if that is useful for anything.
         */</comment>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">wcscpy<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">wdrive<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="24">L"D:."<pos:position pos:line="15" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">wdrive<pos:position pos:line="16" pos:column="15"/></name><index pos:line="16" pos:column="15">[<expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>]<pos:position pos:line="16" pos:column="18"/></index></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <operator pos:line="16" pos:column="21">(<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">apr_wchar_t<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">)<pos:position pos:line="16" pos:column="34"/></operator><operator pos:line="16" pos:column="34">(<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="35">unsigned<pos:position pos:line="16" pos:column="43"/></name> <name pos:line="16" pos:column="44">char<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">)<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="49">drive<pos:position pos:line="16" pos:column="54"/></name></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><call><name pos:line="17" pos:column="14">GetFullPathNameW<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">wdrive<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="39">sizeof<argument_list pos:line="17" pos:column="45">(<argument><expr><name pos:line="17" pos:column="46">wpath<pos:position pos:line="17" pos:column="51"/></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></sizeof> <operator pos:line="17" pos:column="53">/<pos:position pos:line="17" pos:column="54"/></operator> <sizeof pos:line="17" pos:column="55">sizeof<argument_list pos:line="17" pos:column="61">(<argument><expr><name pos:line="17" pos:column="62">apr_wchar_t<pos:position pos:line="17" pos:column="73"/></name></expr></argument>)<pos:position pos:line="17" pos:column="74"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="17" pos:column="76">wpath<pos:position pos:line="17" pos:column="81"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="83">&amp;<pos:position pos:line="17" pos:column="88"/></operator><name pos:line="17" pos:column="84">ignored<pos:position pos:line="17" pos:column="91"/></name></expr></argument>)<pos:position pos:line="17" pos:column="92"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="93"/></condition><then pos:line="17" pos:column="93">
            <block type="pseudo"><return pos:line="18" pos:column="13">return <expr><call><name pos:line="18" pos:column="20">apr_get_os_error<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">()<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></return></block></then></if>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">rv<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">unicode_to_utf8_path<pos:position pos:line="19" pos:column="39"/></name><argument_list pos:line="19" pos:column="39">(<argument><expr><name pos:line="19" pos:column="40">path<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="46">sizeof<argument_list pos:line="19" pos:column="52">(<argument><expr><name pos:line="19" pos:column="53">path<pos:position pos:line="19" pos:column="57"/></name></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="19" pos:column="60">wpath<pos:position pos:line="19" pos:column="65"/></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call><operator pos:line="19" pos:column="66">)<pos:position pos:line="19" pos:column="67"/></operator></expr>)<pos:position pos:line="19" pos:column="68"/></condition><then pos:line="19" pos:column="68">
            <block type="pseudo"><return pos:line="20" pos:column="13">return <expr><name pos:line="20" pos:column="20">rv<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><name pos:line="23" pos:column="5">APR_HAS_ANSI_FS<pos:position pos:line="23" pos:column="20"/></name></expr></cpp:if>
    <macro><name pos:line="24" pos:column="5">ELSE_WIN_OS_IS_ANSI<pos:position pos:line="24" pos:column="24"/></name></macro>
    <block pos:line="25" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">char<pos:position pos:line="26" pos:column="13"/></name> <modifier pos:line="26" pos:column="14">*<pos:position pos:line="26" pos:column="15"/></modifier></type><name pos:line="26" pos:column="15">ignored<pos:position pos:line="26" pos:column="22"/></name></decl>;<pos:position pos:line="26" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">char<pos:position pos:line="27" pos:column="13"/></name></type> <name><name pos:line="27" pos:column="14">drivestr<pos:position pos:line="27" pos:column="22"/></name><index pos:line="27" pos:column="22">[<expr><literal type="number" pos:line="27" pos:column="23">4<pos:position pos:line="27" pos:column="24"/></literal></expr>]<pos:position pos:line="27" pos:column="25"/></index></name></decl>;<pos:position pos:line="27" pos:column="26"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">drivestr<pos:position pos:line="28" pos:column="17"/></name><index pos:line="28" pos:column="17">[<expr><literal type="number" pos:line="28" pos:column="18">0<pos:position pos:line="28" pos:column="19"/></literal></expr>]<pos:position pos:line="28" pos:column="20"/></index></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">drive<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">drivestr<pos:position pos:line="29" pos:column="17"/></name><index pos:line="29" pos:column="17">[<expr><literal type="number" pos:line="29" pos:column="18">1<pos:position pos:line="29" pos:column="19"/></literal></expr>]<pos:position pos:line="29" pos:column="20"/></index></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <literal type="char" pos:line="29" pos:column="23">':'<pos:position pos:line="29" pos:column="26"/></literal></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">drivestr<pos:position pos:line="30" pos:column="17"/></name><index pos:line="30" pos:column="17">[<expr><literal type="number" pos:line="30" pos:column="18">2<pos:position pos:line="30" pos:column="19"/></literal></expr>]<pos:position pos:line="30" pos:column="20"/></index></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <literal type="char" pos:line="30" pos:column="23">'.'<pos:position pos:line="30" pos:column="26"/></literal></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt><empty_stmt pos:line="30" pos:column="27">;<pos:position pos:line="30" pos:column="28"/></empty_stmt>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">drivestr<pos:position pos:line="31" pos:column="17"/></name><index pos:line="31" pos:column="17">[<expr><literal type="number" pos:line="31" pos:column="18">3<pos:position pos:line="31" pos:column="19"/></literal></expr>]<pos:position pos:line="31" pos:column="20"/></index></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <literal type="char" pos:line="31" pos:column="23">'\0'<pos:position pos:line="31" pos:column="27"/></literal></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">GetFullPathName<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">drivestr<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="40">sizeof<argument_list pos:line="32" pos:column="46">(<argument><expr><name pos:line="32" pos:column="47">path<pos:position pos:line="32" pos:column="51"/></name></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="32" pos:column="54">path<pos:position pos:line="32" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="60">&amp;<pos:position pos:line="32" pos:column="65"/></operator><name pos:line="32" pos:column="61">ignored<pos:position pos:line="32" pos:column="68"/></name></expr></argument>)<pos:position pos:line="32" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="70"/></condition><then pos:line="32" pos:column="70">
            <block type="pseudo"><return pos:line="33" pos:column="13">return <expr><call><name pos:line="33" pos:column="20">apr_get_os_error<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">()<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></return></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><operator pos:line="36" pos:column="10">(<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">flags<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">&amp;<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="19">APR_FILEPATH_NATIVE<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">)<pos:position pos:line="36" pos:column="39"/></operator></expr>)<pos:position pos:line="36" pos:column="40"/></condition><then pos:line="36" pos:column="40"> <block pos:line="36" pos:column="41">{
        <for pos:line="37" pos:column="9">for <control pos:line="37" pos:column="13">(<init><expr><operator pos:line="37" pos:column="14">*<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">rootpath<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <name pos:line="37" pos:column="26">path<pos:position pos:line="37" pos:column="30"/></name></expr>;<pos:position pos:line="37" pos:column="31"/></init> <condition><expr><operator pos:line="37" pos:column="32">*<pos:position pos:line="37" pos:column="33"/></operator><operator pos:line="37" pos:column="33">*<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="34">rootpath<pos:position pos:line="37" pos:column="42"/></name></expr>;<pos:position pos:line="37" pos:column="43"/></condition> <incr><expr><operator pos:line="37" pos:column="44">++<pos:position pos:line="37" pos:column="46"/></operator><operator pos:line="37" pos:column="46">*<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="47">rootpath<pos:position pos:line="37" pos:column="55"/></name></expr></incr>)<pos:position pos:line="37" pos:column="56"/></control> <block pos:line="37" pos:column="57">{
            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><operator pos:line="38" pos:column="17">*<pos:position pos:line="38" pos:column="18"/></operator><operator pos:line="38" pos:column="18">*<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">rootpath<pos:position pos:line="38" pos:column="27"/></name> <operator pos:line="38" pos:column="28">==<pos:position pos:line="38" pos:column="30"/></operator> <literal type="char" pos:line="38" pos:column="31">'\\'<pos:position pos:line="38" pos:column="35"/></literal></expr>)<pos:position pos:line="38" pos:column="36"/></condition><then pos:line="38" pos:column="36">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="39" pos:column="17">*<pos:position pos:line="39" pos:column="18"/></operator><operator pos:line="39" pos:column="18">*<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="19">rootpath<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <literal type="char" pos:line="39" pos:column="30">'/'<pos:position pos:line="39" pos:column="33"/></literal></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt></block></then></if>
        }<pos:position pos:line="40" pos:column="10"/></block></for>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="42" pos:column="5">*<pos:position pos:line="42" pos:column="6"/></operator><name pos:line="42" pos:column="6">rootpath<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <call><name pos:line="42" pos:column="17">apr_pstrdup<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">p<pos:position pos:line="42" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="32">path<pos:position pos:line="42" pos:column="36"/></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">APR_SUCCESS<pos:position pos:line="43" pos:column="23"/></name></expr>;<pos:position pos:line="43" pos:column="24"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

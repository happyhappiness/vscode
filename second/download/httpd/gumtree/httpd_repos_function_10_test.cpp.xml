<function xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position"><specifier pos:line="168" pos:column="1">static<pos:position pos:line="168" pos:column="7"/></specifier> <type><name pos:line="168" pos:column="8">int<pos:position pos:line="168" pos:column="11"/></name></type> <name pos:line="168" pos:column="12">read_graft_file<pos:position pos:line="168" pos:column="27"/></name><parameter_list pos:line="168" pos:column="27">(<parameter><decl><type><specifier pos:line="168" pos:column="28">const<pos:position pos:line="168" pos:column="33"/></specifier> <name pos:line="168" pos:column="34">char<pos:position pos:line="168" pos:column="38"/></name> <modifier pos:line="168" pos:column="39">*<pos:position pos:line="168" pos:column="40"/></modifier></type><name pos:line="168" pos:column="40">graft_file<pos:position pos:line="168" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="168" pos:column="51"/></parameter_list>
<block pos:line="169" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="170" pos:column="9">FILE<pos:position pos:line="170" pos:column="13"/></name> <modifier pos:line="170" pos:column="14">*<pos:position pos:line="170" pos:column="15"/></modifier></type><name pos:line="170" pos:column="15">fp<pos:position pos:line="170" pos:column="17"/></name> <init pos:line="170" pos:column="18">= <expr><call><name pos:line="170" pos:column="20">fopen<pos:position pos:line="170" pos:column="25"/></name><argument_list pos:line="170" pos:column="25">(<argument><expr><name pos:line="170" pos:column="26">graft_file<pos:position pos:line="170" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="38">"r"<pos:position pos:line="170" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="170" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="171" pos:column="9">struct<pos:position pos:line="171" pos:column="15"/></name> <name pos:line="171" pos:column="16">strbuf<pos:position pos:line="171" pos:column="22"/></name></name></type> <name pos:line="171" pos:column="23">buf<pos:position pos:line="171" pos:column="26"/></name> <init pos:line="171" pos:column="27">= <expr><name pos:line="171" pos:column="29">STRBUF_INIT<pos:position pos:line="171" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="171" pos:column="41"/></decl_stmt>
	<if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><operator pos:line="172" pos:column="13">!<pos:position pos:line="172" pos:column="14"/></operator><name pos:line="172" pos:column="14">fp<pos:position pos:line="172" pos:column="16"/></name></expr>)<pos:position pos:line="172" pos:column="17"/></condition><then pos:line="172" pos:column="17">
		<block type="pseudo"><return pos:line="173" pos:column="17">return <expr><operator pos:line="173" pos:column="24">-<pos:position pos:line="173" pos:column="25"/></operator><literal type="number" pos:line="173" pos:column="25">1<pos:position pos:line="173" pos:column="26"/></literal></expr>;<pos:position pos:line="173" pos:column="27"/></return></block></then></if>
	<while pos:line="174" pos:column="9">while <condition pos:line="174" pos:column="15">(<expr><operator pos:line="174" pos:column="16">!<pos:position pos:line="174" pos:column="17"/></operator><call><name pos:line="174" pos:column="17">strbuf_getwholeline<pos:position pos:line="174" pos:column="36"/></name><argument_list pos:line="174" pos:column="36">(<argument><expr><operator pos:line="174" pos:column="37">&amp;<pos:position pos:line="174" pos:column="42"/></operator><name pos:line="174" pos:column="38">buf<pos:position pos:line="174" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="43">fp<pos:position pos:line="174" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="174" pos:column="47">'\n'<pos:position pos:line="174" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="174" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="174" pos:column="53"/></condition> <block pos:line="174" pos:column="54">{
		<comment type="block" pos:line="175" pos:column="17">/* The format is just "Commit Parent1 Parent2 ...\n" */</comment>
		<decl_stmt><decl><type><name><name pos:line="176" pos:column="17">struct<pos:position pos:line="176" pos:column="23"/></name> <name pos:line="176" pos:column="24">commit_graft<pos:position pos:line="176" pos:column="36"/></name></name> <modifier pos:line="176" pos:column="37">*<pos:position pos:line="176" pos:column="38"/></modifier></type><name pos:line="176" pos:column="38">graft<pos:position pos:line="176" pos:column="43"/></name> <init pos:line="176" pos:column="44">= <expr><call><name pos:line="176" pos:column="46">read_graft_line<pos:position pos:line="176" pos:column="61"/></name><argument_list pos:line="176" pos:column="61">(<argument><expr><name><name pos:line="176" pos:column="62">buf<pos:position pos:line="176" pos:column="65"/></name><operator pos:line="176" pos:column="65">.<pos:position pos:line="176" pos:column="66"/></operator><name pos:line="176" pos:column="66">buf<pos:position pos:line="176" pos:column="69"/></name></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="71">buf<pos:position pos:line="176" pos:column="74"/></name><operator pos:line="176" pos:column="74">.<pos:position pos:line="176" pos:column="75"/></operator><name pos:line="176" pos:column="75">len<pos:position pos:line="176" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="176" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="176" pos:column="80"/></decl_stmt>
		<if pos:line="177" pos:column="17">if <condition pos:line="177" pos:column="20">(<expr><operator pos:line="177" pos:column="21">!<pos:position pos:line="177" pos:column="22"/></operator><name pos:line="177" pos:column="22">graft<pos:position pos:line="177" pos:column="27"/></name></expr>)<pos:position pos:line="177" pos:column="28"/></condition><then pos:line="177" pos:column="28">
			<block type="pseudo"><continue pos:line="178" pos:column="25">continue;<pos:position pos:line="178" pos:column="34"/></continue></block></then></if>
		<if pos:line="179" pos:column="17">if <condition pos:line="179" pos:column="20">(<expr><call><name pos:line="179" pos:column="21">register_commit_graft<pos:position pos:line="179" pos:column="42"/></name><argument_list pos:line="179" pos:column="42">(<argument><expr><name pos:line="179" pos:column="43">graft<pos:position pos:line="179" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="179" pos:column="50">1<pos:position pos:line="179" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="179" pos:column="53"/></condition><then pos:line="179" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="180" pos:column="25">error<pos:position pos:line="180" pos:column="30"/></name><argument_list pos:line="180" pos:column="30">(<argument><expr><literal type="string" pos:line="180" pos:column="31">"duplicate graft data: %s"<pos:position pos:line="180" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="180" pos:column="59">buf<pos:position pos:line="180" pos:column="62"/></name><operator pos:line="180" pos:column="62">.<pos:position pos:line="180" pos:column="63"/></operator><name pos:line="180" pos:column="63">buf<pos:position pos:line="180" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="180" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="68"/></expr_stmt></block></then></if>
	}<pos:position pos:line="181" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="182" pos:column="9">fclose<pos:position pos:line="182" pos:column="15"/></name><argument_list pos:line="182" pos:column="15">(<argument><expr><name pos:line="182" pos:column="16">fp<pos:position pos:line="182" pos:column="18"/></name></expr></argument>)<pos:position pos:line="182" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="183" pos:column="9">strbuf_release<pos:position pos:line="183" pos:column="23"/></name><argument_list pos:line="183" pos:column="23">(<argument><expr><operator pos:line="183" pos:column="24">&amp;<pos:position pos:line="183" pos:column="29"/></operator><name pos:line="183" pos:column="25">buf<pos:position pos:line="183" pos:column="28"/></name></expr></argument>)<pos:position pos:line="183" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="30"/></expr_stmt>
	<return pos:line="184" pos:column="9">return <expr><literal type="number" pos:line="184" pos:column="16">0<pos:position pos:line="184" pos:column="17"/></literal></expr>;<pos:position pos:line="184" pos:column="18"/></return>
}<pos:position pos:line="185" pos:column="2"/></block></function>


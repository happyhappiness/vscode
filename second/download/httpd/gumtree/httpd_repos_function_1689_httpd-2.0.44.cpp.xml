<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1689_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">order<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">cmd_parms<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">cmd<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">void<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">dv<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">arg<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">access_dir_conf<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">d<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><operator pos:line="3" pos:column="26">(<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="27">access_dir_conf<pos:position pos:line="3" pos:column="42"/></name> <operator pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></operator><operator pos:line="3" pos:column="44">)<pos:position pos:line="3" pos:column="45"/></operator> <name pos:line="3" pos:column="46">dv<pos:position pos:line="3" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="12">o<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name pos:line="6" pos:column="10">strcasecmp<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">arg<pos:position pos:line="6" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="26">"allow,deny"<pos:position pos:line="6" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="40"/></condition><then pos:line="6" pos:column="40">
	<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="9">o<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <name pos:line="7" pos:column="13">ALLOW_THEN_DENY<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt></block></then>
    <elseif pos:line="8" pos:column="5">else <if pos:line="8" pos:column="10">if <condition pos:line="8" pos:column="13">(<expr><operator pos:line="8" pos:column="14">!<pos:position pos:line="8" pos:column="15"/></operator><call><name pos:line="8" pos:column="15">strcasecmp<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">arg<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="31">"deny,allow"<pos:position pos:line="8" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45">
	<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">o<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">DENY_THEN_ALLOW<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="10" pos:column="5">else <if pos:line="10" pos:column="10">if <condition pos:line="10" pos:column="13">(<expr><operator pos:line="10" pos:column="14">!<pos:position pos:line="10" pos:column="15"/></operator><call><name pos:line="10" pos:column="15">strcasecmp<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">arg<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="31">"mutual-failure"<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="49"/></condition><then pos:line="10" pos:column="49">
	<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="9">o<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">MUTUAL_FAILURE<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt></block></then></if></elseif>
    <else pos:line="12" pos:column="5">else
	<block type="pseudo"><return pos:line="13" pos:column="9">return <expr><literal type="string" pos:line="13" pos:column="16">"unknown order"<pos:position pos:line="13" pos:column="31"/></literal></expr>;<pos:position pos:line="13" pos:column="32"/></return></block></else></if>

    <for pos:line="15" pos:column="5">for <control pos:line="15" pos:column="9">(<init><expr><name pos:line="15" pos:column="10">i<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <literal type="number" pos:line="15" pos:column="14">0<pos:position pos:line="15" pos:column="15"/></literal></expr>;<pos:position pos:line="15" pos:column="16"/></init> <condition><expr><name pos:line="15" pos:column="17">i<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">&lt;<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="21">METHODS<pos:position pos:line="15" pos:column="28"/></name></expr>;<pos:position pos:line="15" pos:column="29"/></condition> <incr><expr><operator pos:line="15" pos:column="30">++<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">i<pos:position pos:line="15" pos:column="33"/></name></expr></incr>)<pos:position pos:line="15" pos:column="34"/></control>
	<block type="pseudo"><if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">cmd<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">limited<pos:position pos:line="16" pos:column="25"/></name></name> <operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator> <operator pos:line="16" pos:column="28">(<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">AP_METHOD_BIT<pos:position pos:line="16" pos:column="42"/></name> <operator pos:line="16" pos:column="43">&lt;&lt;<pos:position pos:line="16" pos:column="51"/></operator> <name pos:line="16" pos:column="46">i<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">)<pos:position pos:line="16" pos:column="48"/></operator></expr>)<pos:position pos:line="16" pos:column="49"/></condition><then pos:line="16" pos:column="49">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="13">d<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">order<pos:position pos:line="17" pos:column="21"/></name><index pos:line="17" pos:column="21">[<expr><name pos:line="17" pos:column="22">i<pos:position pos:line="17" pos:column="23"/></name></expr>]<pos:position pos:line="17" pos:column="24"/></index></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">o<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt></block></then></if></block></for>

    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">NULL<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3831_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">call_port_getn<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">port<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">port_event_t<pos:position pos:line="1" pos:column="58"/></name></type> <name><name pos:line="1" pos:column="59">list<pos:position pos:line="1" pos:column="63"/></name><index pos:line="1" pos:column="63">[]<pos:position pos:line="1" pos:column="65"/></index></name></decl></parameter>, 
                                   <parameter><decl><type><name pos:line="2" pos:column="36">unsigned<pos:position pos:line="2" pos:column="44"/></name> <name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">max<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">unsigned<pos:position pos:line="2" pos:column="62"/></name> <name pos:line="2" pos:column="63">int<pos:position pos:line="2" pos:column="66"/></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">nget<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="3" pos:column="36">apr_interval_time_t<pos:position pos:line="3" pos:column="55"/></name></type> <name pos:line="3" pos:column="56">timeout<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="64"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">timespec<pos:position pos:line="5" pos:column="20"/></name></name></type> <name pos:line="5" pos:column="21">tv<pos:position pos:line="5" pos:column="23"/></name></decl>, <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="26">tvptr<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">ret<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rv<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">APR_SUCCESS<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">timeout<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&lt;<pos:position pos:line="9" pos:column="21"/></operator> <literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">tvptr<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">NULL<pos:position pos:line="10" pos:column="21"/></name></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then>
    <else pos:line="12" pos:column="5">else <block pos:line="12" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">tv<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">.<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">tv_sec<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">long<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">)<pos:position pos:line="13" pos:column="27"/></operator> <call><name pos:line="13" pos:column="28">apr_time_sec<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><expr><name pos:line="13" pos:column="41">timeout<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">tv<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">.<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">tv_nsec<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <operator pos:line="14" pos:column="22">(<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="23">long<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator> <call><name pos:line="14" pos:column="29">apr_time_usec<pos:position pos:line="14" pos:column="42"/></name><argument_list pos:line="14" pos:column="42">(<argument><expr><name pos:line="14" pos:column="43">timeout<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call> <operator pos:line="14" pos:column="52">*<pos:position pos:line="14" pos:column="53"/></operator> <literal type="number" pos:line="14" pos:column="54">1000<pos:position pos:line="14" pos:column="58"/></literal></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">tvptr<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <operator pos:line="15" pos:column="17">&amp;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="18">tv<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">list<pos:position pos:line="18" pos:column="9"/></name><index pos:line="18" pos:column="9">[<expr><literal type="number" pos:line="18" pos:column="10">0<pos:position pos:line="18" pos:column="11"/></literal></expr>]<pos:position pos:line="18" pos:column="12"/></index></name><operator pos:line="18" pos:column="12">.<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">portev_user<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <operator pos:line="18" pos:column="27">(<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">void<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">*<pos:position pos:line="18" pos:column="34"/></operator><operator pos:line="18" pos:column="34">)<pos:position pos:line="18" pos:column="35"/></operator><operator pos:line="18" pos:column="35">-<pos:position pos:line="18" pos:column="36"/></operator><literal type="number" pos:line="18" pos:column="36">1<pos:position pos:line="18" pos:column="37"/></literal></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt> <comment type="block" pos:line="18" pos:column="39">/* so we can double check that an
                                       * event was returned
                                       */</comment>

    <expr_stmt><expr><name pos:line="22" pos:column="5">ret<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">=<pos:position pos:line="22" pos:column="10"/></operator> <call><name pos:line="22" pos:column="11">port_getn<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">port<pos:position pos:line="22" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="27">list<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="33">max<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">nget<pos:position pos:line="22" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="44">tvptr<pos:position pos:line="22" pos:column="49"/></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>
    <comment type="block" pos:line="23" pos:column="5">/* Note: 32-bit port_getn() on Solaris 10 x86 returns large negative 
     * values instead of 0 when returning immediately.
     */</comment>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">ret<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">==<pos:position pos:line="27" pos:column="15"/></operator> <operator pos:line="27" pos:column="16">-<pos:position pos:line="27" pos:column="17"/></operator><literal type="number" pos:line="27" pos:column="17">1<pos:position pos:line="27" pos:column="18"/></literal></expr>)<pos:position pos:line="27" pos:column="19"/></condition><then pos:line="27" pos:column="19"> <block pos:line="27" pos:column="20">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">rv<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">apr_get_netos_error<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">()<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>

        <switch pos:line="30" pos:column="9">switch<condition pos:line="30" pos:column="15">(<expr><name pos:line="30" pos:column="16">rv<pos:position pos:line="30" pos:column="18"/></name></expr>)<pos:position pos:line="30" pos:column="19"/></condition> <block pos:line="30" pos:column="20">{
        <case pos:line="31" pos:column="9">case <expr><name pos:line="31" pos:column="14">EINTR<pos:position pos:line="31" pos:column="19"/></name></expr>:<pos:position pos:line="31" pos:column="20"/></case>
        <case pos:line="32" pos:column="9">case <expr><name pos:line="32" pos:column="14">ETIME<pos:position pos:line="32" pos:column="19"/></name></expr>:<pos:position pos:line="32" pos:column="20"/></case>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><operator pos:line="33" pos:column="17">*<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">nget<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">&gt;<pos:position pos:line="33" pos:column="27"/></operator> <literal type="number" pos:line="33" pos:column="25">0<pos:position pos:line="33" pos:column="26"/></literal> <operator pos:line="33" pos:column="27">&amp;&amp;<pos:position pos:line="33" pos:column="37"/></operator> <name><name pos:line="33" pos:column="30">list<pos:position pos:line="33" pos:column="34"/></name><index pos:line="33" pos:column="34">[<expr><literal type="number" pos:line="33" pos:column="35">0<pos:position pos:line="33" pos:column="36"/></literal></expr>]<pos:position pos:line="33" pos:column="37"/></index></name><operator pos:line="33" pos:column="37">.<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="38">portev_user<pos:position pos:line="33" pos:column="49"/></name> <operator pos:line="33" pos:column="50">!=<pos:position pos:line="33" pos:column="52"/></operator> <operator pos:line="33" pos:column="53">(<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="54">void<pos:position pos:line="33" pos:column="58"/></name> <operator pos:line="33" pos:column="59">*<pos:position pos:line="33" pos:column="60"/></operator><operator pos:line="33" pos:column="60">)<pos:position pos:line="33" pos:column="61"/></operator><operator pos:line="33" pos:column="61">-<pos:position pos:line="33" pos:column="62"/></operator><literal type="number" pos:line="33" pos:column="62">1<pos:position pos:line="33" pos:column="63"/></literal></expr>)<pos:position pos:line="33" pos:column="64"/></condition><then pos:line="33" pos:column="64"> <block pos:line="33" pos:column="65">{
                <comment type="block" pos:line="34" pos:column="17">/* This confusing API can return an event at the same time
                 * that it reports EINTR or ETIME.  If that occurs, just
                 * report the event.  With EINTR, nget can be &gt; 0 without
                 * any event, so check that portev_user was filled in.
                 *
                 * (Maybe it will be simplified; see thread
                 *   http://mail.opensolaris.org
                 *   /pipermail/networking-discuss/2009-August/011979.html
                 *  This code will still work afterwards.)
                 */</comment>
                <expr_stmt><expr><name pos:line="44" pos:column="17">rv<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <name pos:line="44" pos:column="22">APR_SUCCESS<pos:position pos:line="44" pos:column="33"/></name></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
                <break pos:line="45" pos:column="17">break;<pos:position pos:line="45" pos:column="23"/></break>
            }<pos:position pos:line="46" pos:column="14"/></block></then></if>
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">rv<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">==<pos:position pos:line="47" pos:column="22"/></operator> <name pos:line="47" pos:column="23">ETIME<pos:position pos:line="47" pos:column="28"/></name></expr>)<pos:position pos:line="47" pos:column="29"/></condition><then pos:line="47" pos:column="29"> <block pos:line="47" pos:column="30">{
                <expr_stmt><expr><name pos:line="48" pos:column="17">rv<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="22">APR_TIMEUP<pos:position pos:line="48" pos:column="32"/></name></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>
        <comment type="block" pos:line="50" pos:column="9">/* fall-through */</comment>
        <default pos:line="51" pos:column="9">default:<pos:position pos:line="51" pos:column="17"/></default>
            <expr_stmt><expr><operator pos:line="52" pos:column="13">*<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">nget<pos:position pos:line="52" pos:column="18"/></name> <operator pos:line="52" pos:column="19">=<pos:position pos:line="52" pos:column="20"/></operator> <literal type="number" pos:line="52" pos:column="21">0<pos:position pos:line="52" pos:column="22"/></literal></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="53" pos:column="10"/></block></switch>
    }<pos:position pos:line="54" pos:column="6"/></block></then>
    <elseif pos:line="55" pos:column="5">else <if pos:line="55" pos:column="10">if <condition pos:line="55" pos:column="13">(<expr><operator pos:line="55" pos:column="14">*<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">nget<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">==<pos:position pos:line="55" pos:column="22"/></operator> <literal type="number" pos:line="55" pos:column="23">0<pos:position pos:line="55" pos:column="24"/></literal></expr>)<pos:position pos:line="55" pos:column="25"/></condition><then pos:line="55" pos:column="25"> <block pos:line="55" pos:column="26">{
        <expr_stmt><expr><name pos:line="56" pos:column="9">rv<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <name pos:line="56" pos:column="14">APR_TIMEUP<pos:position pos:line="56" pos:column="24"/></name></expr>;<pos:position pos:line="56" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if></elseif></if>

    <return pos:line="59" pos:column="5">return <expr><name pos:line="59" pos:column="12">rv<pos:position pos:line="59" pos:column="14"/></name></expr>;<pos:position pos:line="59" pos:column="15"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

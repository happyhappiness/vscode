<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1574_httpd-2.2.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">get_include_var<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">var<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">include_ctx_t<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">ctx<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">val<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">ctx<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">intern<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">r<pos:position pos:line="4" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">apr_isdigit<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><operator pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">var<pos:position pos:line="6" pos:column="25"/></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call> <operator pos:line="6" pos:column="27">&amp;&amp;<pos:position pos:line="6" pos:column="37"/></operator> <operator pos:line="6" pos:column="30">!<pos:position pos:line="6" pos:column="31"/></operator><name><name pos:line="6" pos:column="31">var<pos:position pos:line="6" pos:column="34"/></name><index pos:line="6" pos:column="34">[<expr><literal type="number" pos:line="6" pos:column="35">1<pos:position pos:line="6" pos:column="36"/></literal></expr>]<pos:position pos:line="6" pos:column="37"/></index></name></expr>)<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38"> <block pos:line="6" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">apr_size_t<pos:position pos:line="7" pos:column="19"/></name></type> <name pos:line="7" pos:column="20">idx<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><operator pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">var<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">-<pos:position pos:line="7" pos:column="32"/></operator> <literal type="char" pos:line="7" pos:column="33">'0'<pos:position pos:line="7" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">backref_t<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">re<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name><name pos:line="8" pos:column="25">ctx<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">intern<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">re<pos:position pos:line="8" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>

        <comment type="block" pos:line="10" pos:column="9">/* Handle $0 .. $9 from the last regex evaluated.
         * The choice of returning NULL strings on not-found,
         * v.s. empty strings on an empty match is deliberate.
         */</comment>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">re<pos:position pos:line="14" pos:column="16"/></name></expr>)<pos:position pos:line="14" pos:column="17"/></condition><then pos:line="14" pos:column="17"> <block pos:line="14" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">ap_log_rerror<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">APLOG_MARK<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">APLOG_WARNING<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="54">0<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="57">r<pos:position pos:line="15" pos:column="58"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="16" pos:column="17">"regex capture $%"<pos:position pos:line="16" pos:column="35"/></literal> <name pos:line="16" pos:column="36">APR_SIZE_T_FMT<pos:position pos:line="16" pos:column="50"/></name> <literal type="string" pos:line="16" pos:column="51">" refers to no regex in %s"<pos:position pos:line="16" pos:column="78"/></literal></expr></argument>,
                <argument><expr><name pos:line="17" pos:column="17">idx<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="22">r<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">-&gt;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="25">filename<pos:position pos:line="17" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">NULL<pos:position pos:line="18" pos:column="24"/></name></expr>;<pos:position pos:line="18" pos:column="25"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then>
        <else pos:line="20" pos:column="9">else <block pos:line="20" pos:column="14">{
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><name><name pos:line="21" pos:column="17">re<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">nsub<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">&lt;<pos:position pos:line="21" pos:column="30"/></operator> <name pos:line="21" pos:column="28">idx<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">||<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="35">idx<pos:position pos:line="21" pos:column="38"/></name> <operator pos:line="21" pos:column="39">&gt;=<pos:position pos:line="21" pos:column="44"/></operator> <name pos:line="21" pos:column="42">AP_MAX_REG_MATCH<pos:position pos:line="21" pos:column="58"/></name></expr>)<pos:position pos:line="21" pos:column="59"/></condition><then pos:line="21" pos:column="59"> <block pos:line="21" pos:column="60">{
                <expr_stmt><expr><call><name pos:line="22" pos:column="17">ap_log_rerror<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">APLOG_MARK<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="43">APLOG_WARNING<pos:position pos:line="22" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="58">0<pos:position pos:line="22" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="61">r<pos:position pos:line="22" pos:column="62"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="23" pos:column="31">"regex capture $%"<pos:position pos:line="23" pos:column="49"/></literal> <name pos:line="23" pos:column="50">APR_SIZE_T_FMT<pos:position pos:line="23" pos:column="64"/></name>
                              <literal type="string" pos:line="24" pos:column="31">" is out of range (last regex was: '%s') in %s"<pos:position pos:line="24" pos:column="78"/></literal></expr></argument>,
                              <argument><expr><name pos:line="25" pos:column="31">idx<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="36">re<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">rexp<pos:position pos:line="25" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="46">r<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">filename<pos:position pos:line="25" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
                <return pos:line="26" pos:column="17">return <expr><name pos:line="26" pos:column="24">NULL<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></return>
            }<pos:position pos:line="27" pos:column="14"/></block></then></if>

            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name><name pos:line="29" pos:column="17">re<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">-&gt;<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="21">match<pos:position pos:line="29" pos:column="26"/></name><index pos:line="29" pos:column="26">[<expr><name pos:line="29" pos:column="27">idx<pos:position pos:line="29" pos:column="30"/></name></expr>]<pos:position pos:line="29" pos:column="31"/></index></name><operator pos:line="29" pos:column="31">.<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="32">rm_so<pos:position pos:line="29" pos:column="37"/></name> <operator pos:line="29" pos:column="38">&lt;<pos:position pos:line="29" pos:column="42"/></operator> <literal type="number" pos:line="29" pos:column="40">0<pos:position pos:line="29" pos:column="41"/></literal> <operator pos:line="29" pos:column="42">||<pos:position pos:line="29" pos:column="44"/></operator> <name><name pos:line="29" pos:column="45">re<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">-&gt;<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="49">match<pos:position pos:line="29" pos:column="54"/></name><index pos:line="29" pos:column="54">[<expr><name pos:line="29" pos:column="55">idx<pos:position pos:line="29" pos:column="58"/></name></expr>]<pos:position pos:line="29" pos:column="59"/></index></name><operator pos:line="29" pos:column="59">.<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="60">rm_eo<pos:position pos:line="29" pos:column="65"/></name> <operator pos:line="29" pos:column="66">&lt;<pos:position pos:line="29" pos:column="70"/></operator> <literal type="number" pos:line="29" pos:column="68">0<pos:position pos:line="29" pos:column="69"/></literal></expr>)<pos:position pos:line="29" pos:column="70"/></condition><then pos:line="29" pos:column="70"> <block pos:line="29" pos:column="71">{
                <return pos:line="30" pos:column="17">return <expr><name pos:line="30" pos:column="24">NULL<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></return>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="33" pos:column="13">val<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <call><name pos:line="33" pos:column="19">apr_pstrmemdup<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><name><name pos:line="33" pos:column="34">ctx<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">-&gt;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="39">dpool<pos:position pos:line="33" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="46">re<pos:position pos:line="33" pos:column="48"/></name><operator pos:line="33" pos:column="48">-&gt;<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="50">source<pos:position pos:line="33" pos:column="56"/></name></name> <operator pos:line="33" pos:column="57">+<pos:position pos:line="33" pos:column="58"/></operator> <name><name pos:line="33" pos:column="59">re<pos:position pos:line="33" pos:column="61"/></name><operator pos:line="33" pos:column="61">-&gt;<pos:position pos:line="33" pos:column="66"/></operator><name pos:line="33" pos:column="63">match<pos:position pos:line="33" pos:column="68"/></name><index pos:line="33" pos:column="68">[<expr><name pos:line="33" pos:column="69">idx<pos:position pos:line="33" pos:column="72"/></name></expr>]<pos:position pos:line="33" pos:column="73"/></index></name><operator pos:line="33" pos:column="73">.<pos:position pos:line="33" pos:column="74"/></operator><name pos:line="33" pos:column="74">rm_so<pos:position pos:line="33" pos:column="79"/></name></expr></argument>,
                                 <argument><expr><name><name pos:line="34" pos:column="34">re<pos:position pos:line="34" pos:column="36"/></name><operator pos:line="34" pos:column="36">-&gt;<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="38">match<pos:position pos:line="34" pos:column="43"/></name><index pos:line="34" pos:column="43">[<expr><name pos:line="34" pos:column="44">idx<pos:position pos:line="34" pos:column="47"/></name></expr>]<pos:position pos:line="34" pos:column="48"/></index></name><operator pos:line="34" pos:column="48">.<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="49">rm_eo<pos:position pos:line="34" pos:column="54"/></name> <operator pos:line="34" pos:column="55">-<pos:position pos:line="34" pos:column="56"/></operator> <name><name pos:line="34" pos:column="57">re<pos:position pos:line="34" pos:column="59"/></name><operator pos:line="34" pos:column="59">-&gt;<pos:position pos:line="34" pos:column="64"/></operator><name pos:line="34" pos:column="61">match<pos:position pos:line="34" pos:column="66"/></name><index pos:line="34" pos:column="66">[<expr><name pos:line="34" pos:column="67">idx<pos:position pos:line="34" pos:column="70"/></name></expr>]<pos:position pos:line="34" pos:column="71"/></index></name><operator pos:line="34" pos:column="71">.<pos:position pos:line="34" pos:column="72"/></operator><name pos:line="34" pos:column="72">rm_so<pos:position pos:line="34" pos:column="77"/></name></expr></argument>)<pos:position pos:line="34" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></else></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then>
    <else pos:line="37" pos:column="5">else <block pos:line="37" pos:column="10">{
        <expr_stmt><expr><name pos:line="38" pos:column="9">val<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <call><name pos:line="38" pos:column="15">apr_table_get<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name><name pos:line="38" pos:column="29">r<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">subprocess_env<pos:position pos:line="38" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="48">var<pos:position pos:line="38" pos:column="51"/></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt>

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">val<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">==<pos:position pos:line="40" pos:column="19"/></operator> <name pos:line="40" pos:column="20">LAZY_VALUE<pos:position pos:line="40" pos:column="30"/></name></expr>)<pos:position pos:line="40" pos:column="31"/></condition><then pos:line="40" pos:column="31"> <block pos:line="40" pos:column="32">{
            <expr_stmt><expr><name pos:line="41" pos:column="13">val<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <call><name pos:line="41" pos:column="19">add_include_vars_lazy<pos:position pos:line="41" pos:column="40"/></name><argument_list pos:line="41" pos:column="40">(<argument><expr><name pos:line="41" pos:column="41">r<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">var<pos:position pos:line="41" pos:column="47"/></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
    }<pos:position pos:line="43" pos:column="6"/></block></else></if>

    <return pos:line="45" pos:column="5">return <expr><name pos:line="45" pos:column="12">val<pos:position pos:line="45" pos:column="15"/></name></expr>;<pos:position pos:line="45" pos:column="16"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1469_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wd_post_config_hook<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">apr_pool_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">pconf<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">apr_pool_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">plog<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">apr_pool_t<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">ptemp<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">server_rec<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">s<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">pk<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="string" pos:line="5" pos:column="22">"watchdog_init_module_tag"<pos:position pos:line="5" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_pool_t<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">pproc<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><name><name pos:line="6" pos:column="25">s<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">process<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">pool<pos:position pos:line="6" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">apr_array_header_t<pos:position pos:line="7" pos:column="29"/></name> <modifier pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></modifier></type><name pos:line="7" pos:column="31">wl<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">ap_state_query<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">AP_SQ_MAIN_STATE<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call> <operator pos:line="9" pos:column="42">==<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">AP_SQ_MS_CREATE_PRE_CONFIG<pos:position pos:line="9" pos:column="71"/></name></expr>)<pos:position pos:line="9" pos:column="72"/></condition><then pos:line="9" pos:column="72">
        <comment type="block" pos:line="10" pos:column="9">/* First time config phase -- skip. */</comment>
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">OK<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">apr_pool_userdata_get<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><operator pos:line="13" pos:column="27">(<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">void<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">*<pos:position pos:line="13" pos:column="34"/></operator><operator pos:line="13" pos:column="34">)<pos:position pos:line="13" pos:column="35"/></operator><operator pos:line="13" pos:column="35">&amp;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="36">wd_server_conf<pos:position pos:line="13" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="52">pk<pos:position pos:line="13" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="56">pproc<pos:position pos:line="13" pos:column="61"/></name></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">wd_server_conf<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25"> <block pos:line="14" pos:column="26">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">wd_server_conf<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <call><name pos:line="15" pos:column="32">apr_pcalloc<pos:position pos:line="15" pos:column="43"/></name><argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">pproc<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="51">sizeof<argument_list pos:line="15" pos:column="57">(<argument><expr><name pos:line="15" pos:column="58">wd_server_conf_t<pos:position pos:line="15" pos:column="74"/></name></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call><operator pos:line="15" pos:column="76">)<pos:position pos:line="15" pos:column="77"/></operator></expr>)<pos:position pos:line="15" pos:column="78"/></condition><then pos:line="15" pos:column="78">
            <block type="pseudo"><return pos:line="16" pos:column="13">return <expr><name pos:line="16" pos:column="20">APR_ENOMEM<pos:position pos:line="16" pos:column="30"/></name></expr>;<pos:position pos:line="16" pos:column="31"/></return></block></then></if>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">apr_pool_create<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><operator pos:line="17" pos:column="25">&amp;<pos:position pos:line="17" pos:column="30"/></operator><name><name pos:line="17" pos:column="26">wd_server_conf<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">-&gt;<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="42">pool<pos:position pos:line="17" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">pproc<pos:position pos:line="17" pos:column="53"/></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">apr_pool_userdata_set<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">wd_server_conf<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">pk<pos:position pos:line="18" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="51">apr_pool_cleanup_null<pos:position pos:line="18" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="74">pproc<pos:position pos:line="18" pos:column="79"/></name></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">wd_server_conf<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">s<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">s<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">wl<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">ap_list_provider_names<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">pconf<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="45">AP_WATCHDOG_PGROUP<pos:position pos:line="21" pos:column="63"/></name></expr></argument>,
                                            <argument><expr><name pos:line="22" pos:column="45">AP_WATCHDOG_PVERSION<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call><operator pos:line="22" pos:column="66">)<pos:position pos:line="22" pos:column="67"/></operator></expr>)<pos:position pos:line="22" pos:column="68"/></condition><then pos:line="22" pos:column="68"> <block pos:line="22" pos:column="69">{
        <decl_stmt><decl><type><specifier pos:line="23" pos:column="9">const<pos:position pos:line="23" pos:column="14"/></specifier> <name pos:line="23" pos:column="15">ap_list_provider_names_t<pos:position pos:line="23" pos:column="39"/></name> <modifier pos:line="23" pos:column="40">*<pos:position pos:line="23" pos:column="41"/></modifier></type><name pos:line="23" pos:column="41">wn<pos:position pos:line="23" pos:column="43"/></name></decl>;<pos:position pos:line="23" pos:column="44"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">int<pos:position pos:line="24" pos:column="12"/></name></type> <name pos:line="24" pos:column="13">i<pos:position pos:line="24" pos:column="14"/></name></decl>;<pos:position pos:line="24" pos:column="15"/></decl_stmt>

        <expr_stmt><expr><name pos:line="26" pos:column="9">wn<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <operator pos:line="26" pos:column="14">(<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">ap_list_provider_names_t<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">*<pos:position pos:line="26" pos:column="41"/></operator><operator pos:line="26" pos:column="41">)<pos:position pos:line="26" pos:column="42"/></operator><name><name pos:line="26" pos:column="42">wl<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">-&gt;<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="46">elts<pos:position pos:line="26" pos:column="50"/></name></name></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
        <for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init><expr><name pos:line="27" pos:column="14">i<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></init> <condition><expr><name pos:line="27" pos:column="21">i<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">&lt;<pos:position pos:line="27" pos:column="27"/></operator> <name><name pos:line="27" pos:column="25">wl<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">nelts<pos:position pos:line="27" pos:column="34"/></name></name></expr>;<pos:position pos:line="27" pos:column="35"/></condition> <incr><expr><name pos:line="27" pos:column="36">i<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">++<pos:position pos:line="27" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="40"/></control> <block pos:line="27" pos:column="41">{
            <decl_stmt><decl><type><name pos:line="28" pos:column="13">ap_watchdog_t<pos:position pos:line="28" pos:column="26"/></name> <modifier pos:line="28" pos:column="27">*<pos:position pos:line="28" pos:column="28"/></modifier></type><name pos:line="28" pos:column="28">w<pos:position pos:line="28" pos:column="29"/></name> <init pos:line="28" pos:column="30">= <expr><call><name pos:line="28" pos:column="32">ap_lookup_provider<pos:position pos:line="28" pos:column="50"/></name><argument_list pos:line="28" pos:column="50">(<argument><expr><name pos:line="28" pos:column="51">AP_WATCHDOG_PGROUP<pos:position pos:line="28" pos:column="69"/></name></expr></argument>,
                                                  <argument><expr><name><name pos:line="29" pos:column="51">wn<pos:position pos:line="29" pos:column="53"/></name><index pos:line="29" pos:column="53">[<expr><name pos:line="29" pos:column="54">i<pos:position pos:line="29" pos:column="55"/></name></expr>]<pos:position pos:line="29" pos:column="56"/></index></name><operator pos:line="29" pos:column="56">.<pos:position pos:line="29" pos:column="57"/></operator><name pos:line="29" pos:column="57">provider_name<pos:position pos:line="29" pos:column="70"/></name></expr></argument>,
                                                  <argument><expr><name pos:line="30" pos:column="51">AP_WATCHDOG_PVERSION<pos:position pos:line="30" pos:column="71"/></name></expr></argument>)<pos:position pos:line="30" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="73"/></decl_stmt>
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><name pos:line="31" pos:column="17">w<pos:position pos:line="31" pos:column="18"/></name></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19"> <block pos:line="31" pos:column="20">{
                <if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">!<pos:position pos:line="32" pos:column="22"/></operator><name><name pos:line="32" pos:column="22">w<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">active<pos:position pos:line="32" pos:column="31"/></name></name></expr>)<pos:position pos:line="32" pos:column="32"/></condition><then pos:line="32" pos:column="32"> <block pos:line="32" pos:column="33">{
                    <decl_stmt><decl><type><name pos:line="33" pos:column="21">int<pos:position pos:line="33" pos:column="24"/></name></type> <name pos:line="33" pos:column="25">status<pos:position pos:line="33" pos:column="31"/></name> <init pos:line="33" pos:column="32">= <expr><call><name pos:line="33" pos:column="34">ap_run_watchdog_need<pos:position pos:line="33" pos:column="54"/></name><argument_list pos:line="33" pos:column="54">(<argument><expr><name pos:line="33" pos:column="55">s<pos:position pos:line="33" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="58">w<pos:position pos:line="33" pos:column="59"/></name><operator pos:line="33" pos:column="59">-&gt;<pos:position pos:line="33" pos:column="64"/></operator><name pos:line="33" pos:column="61">name<pos:position pos:line="33" pos:column="65"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="67">1<pos:position pos:line="33" pos:column="68"/></literal></expr></argument>,
                                                      <argument><expr><name><name pos:line="34" pos:column="55">w<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">-&gt;<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="58">singleton<pos:position pos:line="34" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="69"/></decl_stmt>
                    <if pos:line="35" pos:column="21">if <condition pos:line="35" pos:column="24">(<expr><name pos:line="35" pos:column="25">status<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">==<pos:position pos:line="35" pos:column="34"/></operator> <name pos:line="35" pos:column="35">OK<pos:position pos:line="35" pos:column="37"/></name></expr>)<pos:position pos:line="35" pos:column="38"/></condition><then pos:line="35" pos:column="38"> <block pos:line="35" pos:column="39">{
                        <comment type="block" pos:line="36" pos:column="25">/* One of the modules returned OK to this watchog.
                         * Mark it as active
                         */</comment>
                        <expr_stmt><expr><name><name pos:line="39" pos:column="25">w<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">-&gt;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="28">active<pos:position pos:line="39" pos:column="34"/></name></name> <operator pos:line="39" pos:column="35">=<pos:position pos:line="39" pos:column="36"/></operator> <literal type="number" pos:line="39" pos:column="37">1<pos:position pos:line="39" pos:column="38"/></literal></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt>
                    }<pos:position pos:line="40" pos:column="22"/></block></then></if>
                }<pos:position pos:line="41" pos:column="18"/></block></then></if>
                <if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name><name pos:line="42" pos:column="21">w<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">-&gt;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="24">active<pos:position pos:line="42" pos:column="30"/></name></name></expr>)<pos:position pos:line="42" pos:column="31"/></condition><then pos:line="42" pos:column="31"> <block pos:line="42" pos:column="32">{
                    <comment type="block" pos:line="43" pos:column="21">/* We have active watchdog.
                     * Create the watchdog thread
                     */</comment>
                    <if pos:line="46" pos:column="21">if <condition pos:line="46" pos:column="24">(<expr><operator pos:line="46" pos:column="25">(<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="26">rv<pos:position pos:line="46" pos:column="28"/></name> <operator pos:line="46" pos:column="29">=<pos:position pos:line="46" pos:column="30"/></operator> <call><name pos:line="46" pos:column="31">wd_startup<pos:position pos:line="46" pos:column="41"/></name><argument_list pos:line="46" pos:column="41">(<argument><expr><name pos:line="46" pos:column="42">w<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="45">wd_server_conf<pos:position pos:line="46" pos:column="59"/></name><operator pos:line="46" pos:column="59">-&gt;<pos:position pos:line="46" pos:column="64"/></operator><name pos:line="46" pos:column="61">pool<pos:position pos:line="46" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call><operator pos:line="46" pos:column="66">)<pos:position pos:line="46" pos:column="67"/></operator> <operator pos:line="46" pos:column="68">!=<pos:position pos:line="46" pos:column="70"/></operator> <name pos:line="46" pos:column="71">APR_SUCCESS<pos:position pos:line="46" pos:column="82"/></name></expr>)<pos:position pos:line="46" pos:column="83"/></condition><then pos:line="46" pos:column="83"> <block pos:line="46" pos:column="84">{
                        <expr_stmt><expr><call><name pos:line="47" pos:column="25">ap_log_error<pos:position pos:line="47" pos:column="37"/></name><argument_list pos:line="47" pos:column="37">(<argument><expr><name pos:line="47" pos:column="38">APLOG_MARK<pos:position pos:line="47" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="50">APLOG_CRIT<pos:position pos:line="47" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="62">rv<pos:position pos:line="47" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="66">s<pos:position pos:line="47" pos:column="67"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="69">APLOGNO<pos:position pos:line="47" pos:column="76"/></name><argument_list pos:line="47" pos:column="76">(<argument><expr><literal type="number" pos:line="47" pos:column="77">01571<pos:position pos:line="47" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="83"/></argument_list></call>
                                <literal type="string" pos:line="48" pos:column="33">"Watchdog: Failed to create parent worker thread."<pos:position pos:line="48" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="85"/></expr_stmt>
                        <return pos:line="49" pos:column="25">return <expr><name pos:line="49" pos:column="32">rv<pos:position pos:line="49" pos:column="34"/></name></expr>;<pos:position pos:line="49" pos:column="35"/></return>
                    }<pos:position pos:line="50" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name><name pos:line="51" pos:column="21">wd_server_conf<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">-&gt;<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="37">parent_workers<pos:position pos:line="51" pos:column="51"/></name></name><operator pos:line="51" pos:column="51">++<pos:position pos:line="51" pos:column="53"/></operator></expr>;<pos:position pos:line="51" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="52" pos:column="18"/></block></then></if>
            }<pos:position pos:line="53" pos:column="14"/></block></then></if>
        }<pos:position pos:line="54" pos:column="10"/></block></for>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name><name pos:line="56" pos:column="9">wd_server_conf<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">-&gt;<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="25">parent_workers<pos:position pos:line="56" pos:column="39"/></name></name></expr>)<pos:position pos:line="56" pos:column="40"/></condition><then pos:line="56" pos:column="40"> <block pos:line="56" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">ap_log_error<pos:position pos:line="57" pos:column="21"/></name><argument_list pos:line="57" pos:column="21">(<argument><expr><name pos:line="57" pos:column="22">APLOG_MARK<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="34">APLOG_DEBUG<pos:position pos:line="57" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="47">0<pos:position pos:line="57" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="50">s<pos:position pos:line="57" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="53">APLOGNO<pos:position pos:line="57" pos:column="60"/></name><argument_list pos:line="57" pos:column="60">(<argument><expr><literal type="number" pos:line="57" pos:column="61">01572<pos:position pos:line="57" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="67"/></argument_list></call>
                     <literal type="string" pos:line="58" pos:column="22">"Spawned %d parent worker threads."<pos:position pos:line="58" pos:column="57"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="59" pos:column="22">wd_server_conf<pos:position pos:line="59" pos:column="36"/></name><operator pos:line="59" pos:column="36">-&gt;<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="38">parent_workers<pos:position pos:line="59" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><operator pos:line="61" pos:column="9">(<pos:position pos:line="61" pos:column="10"/></operator><name pos:line="61" pos:column="10">wl<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">=<pos:position pos:line="61" pos:column="14"/></operator> <call><name pos:line="61" pos:column="15">ap_list_provider_names<pos:position pos:line="61" pos:column="37"/></name><argument_list pos:line="61" pos:column="37">(<argument><expr><name pos:line="61" pos:column="38">pconf<pos:position pos:line="61" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="45">AP_WATCHDOG_PGROUP<pos:position pos:line="61" pos:column="63"/></name></expr></argument>,
                                            <argument><expr><name pos:line="62" pos:column="45">AP_WATCHDOG_CVERSION<pos:position pos:line="62" pos:column="65"/></name></expr></argument>)<pos:position pos:line="62" pos:column="66"/></argument_list></call><operator pos:line="62" pos:column="66">)<pos:position pos:line="62" pos:column="67"/></operator></expr>)<pos:position pos:line="62" pos:column="68"/></condition><then pos:line="62" pos:column="68"> <block pos:line="62" pos:column="69">{
        <decl_stmt><decl><type><specifier pos:line="63" pos:column="9">const<pos:position pos:line="63" pos:column="14"/></specifier> <name pos:line="63" pos:column="15">ap_list_provider_names_t<pos:position pos:line="63" pos:column="39"/></name> <modifier pos:line="63" pos:column="40">*<pos:position pos:line="63" pos:column="41"/></modifier></type><name pos:line="63" pos:column="41">wn<pos:position pos:line="63" pos:column="43"/></name></decl>;<pos:position pos:line="63" pos:column="44"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="64" pos:column="9">int<pos:position pos:line="64" pos:column="12"/></name></type> <name pos:line="64" pos:column="13">i<pos:position pos:line="64" pos:column="14"/></name></decl>;<pos:position pos:line="64" pos:column="15"/></decl_stmt>

        <expr_stmt><expr><name pos:line="66" pos:column="9">wn<pos:position pos:line="66" pos:column="11"/></name> <operator pos:line="66" pos:column="12">=<pos:position pos:line="66" pos:column="13"/></operator> <operator pos:line="66" pos:column="14">(<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="15">ap_list_provider_names_t<pos:position pos:line="66" pos:column="39"/></name> <operator pos:line="66" pos:column="40">*<pos:position pos:line="66" pos:column="41"/></operator><operator pos:line="66" pos:column="41">)<pos:position pos:line="66" pos:column="42"/></operator><name><name pos:line="66" pos:column="42">wl<pos:position pos:line="66" pos:column="44"/></name><operator pos:line="66" pos:column="44">-&gt;<pos:position pos:line="66" pos:column="49"/></operator><name pos:line="66" pos:column="46">elts<pos:position pos:line="66" pos:column="50"/></name></name></expr>;<pos:position pos:line="66" pos:column="51"/></expr_stmt>
        <for pos:line="67" pos:column="9">for <control pos:line="67" pos:column="13">(<init><expr><name pos:line="67" pos:column="14">i<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <literal type="number" pos:line="67" pos:column="18">0<pos:position pos:line="67" pos:column="19"/></literal></expr>;<pos:position pos:line="67" pos:column="20"/></init> <condition><expr><name pos:line="67" pos:column="21">i<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">&lt;<pos:position pos:line="67" pos:column="27"/></operator> <name><name pos:line="67" pos:column="25">wl<pos:position pos:line="67" pos:column="27"/></name><operator pos:line="67" pos:column="27">-&gt;<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="29">nelts<pos:position pos:line="67" pos:column="34"/></name></name></expr>;<pos:position pos:line="67" pos:column="35"/></condition> <incr><expr><name pos:line="67" pos:column="36">i<pos:position pos:line="67" pos:column="37"/></name><operator pos:line="67" pos:column="37">++<pos:position pos:line="67" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="40"/></control> <block pos:line="67" pos:column="41">{
            <decl_stmt><decl><type><name pos:line="68" pos:column="13">ap_watchdog_t<pos:position pos:line="68" pos:column="26"/></name> <modifier pos:line="68" pos:column="27">*<pos:position pos:line="68" pos:column="28"/></modifier></type><name pos:line="68" pos:column="28">w<pos:position pos:line="68" pos:column="29"/></name> <init pos:line="68" pos:column="30">= <expr><call><name pos:line="68" pos:column="32">ap_lookup_provider<pos:position pos:line="68" pos:column="50"/></name><argument_list pos:line="68" pos:column="50">(<argument><expr><name pos:line="68" pos:column="51">AP_WATCHDOG_PGROUP<pos:position pos:line="68" pos:column="69"/></name></expr></argument>,
                                                  <argument><expr><name><name pos:line="69" pos:column="51">wn<pos:position pos:line="69" pos:column="53"/></name><index pos:line="69" pos:column="53">[<expr><name pos:line="69" pos:column="54">i<pos:position pos:line="69" pos:column="55"/></name></expr>]<pos:position pos:line="69" pos:column="56"/></index></name><operator pos:line="69" pos:column="56">.<pos:position pos:line="69" pos:column="57"/></operator><name pos:line="69" pos:column="57">provider_name<pos:position pos:line="69" pos:column="70"/></name></expr></argument>,
                                                  <argument><expr><name pos:line="70" pos:column="51">AP_WATCHDOG_CVERSION<pos:position pos:line="70" pos:column="71"/></name></expr></argument>)<pos:position pos:line="70" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="70" pos:column="73"/></decl_stmt>
            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><name pos:line="71" pos:column="17">w<pos:position pos:line="71" pos:column="18"/></name></expr>)<pos:position pos:line="71" pos:column="19"/></condition><then pos:line="71" pos:column="19"> <block pos:line="71" pos:column="20">{
                <if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><operator pos:line="72" pos:column="21">!<pos:position pos:line="72" pos:column="22"/></operator><name><name pos:line="72" pos:column="22">w<pos:position pos:line="72" pos:column="23"/></name><operator pos:line="72" pos:column="23">-&gt;<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="25">active<pos:position pos:line="72" pos:column="31"/></name></name></expr>)<pos:position pos:line="72" pos:column="32"/></condition><then pos:line="72" pos:column="32"> <block pos:line="72" pos:column="33">{
                    <decl_stmt><decl><type><name pos:line="73" pos:column="21">int<pos:position pos:line="73" pos:column="24"/></name></type> <name pos:line="73" pos:column="25">status<pos:position pos:line="73" pos:column="31"/></name> <init pos:line="73" pos:column="32">= <expr><call><name pos:line="73" pos:column="34">ap_run_watchdog_need<pos:position pos:line="73" pos:column="54"/></name><argument_list pos:line="73" pos:column="54">(<argument><expr><name pos:line="73" pos:column="55">s<pos:position pos:line="73" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="58">w<pos:position pos:line="73" pos:column="59"/></name><operator pos:line="73" pos:column="59">-&gt;<pos:position pos:line="73" pos:column="64"/></operator><name pos:line="73" pos:column="61">name<pos:position pos:line="73" pos:column="65"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="67">0<pos:position pos:line="73" pos:column="68"/></literal></expr></argument>,
                                                      <argument><expr><name><name pos:line="74" pos:column="55">w<pos:position pos:line="74" pos:column="56"/></name><operator pos:line="74" pos:column="56">-&gt;<pos:position pos:line="74" pos:column="61"/></operator><name pos:line="74" pos:column="58">singleton<pos:position pos:line="74" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="74" pos:column="69"/></decl_stmt>
                    <if pos:line="75" pos:column="21">if <condition pos:line="75" pos:column="24">(<expr><name pos:line="75" pos:column="25">status<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">==<pos:position pos:line="75" pos:column="34"/></operator> <name pos:line="75" pos:column="35">OK<pos:position pos:line="75" pos:column="37"/></name></expr>)<pos:position pos:line="75" pos:column="38"/></condition><then pos:line="75" pos:column="38"> <block pos:line="75" pos:column="39">{
                        <comment type="block" pos:line="76" pos:column="25">/* One of the modules returned OK to this watchog.
                         * Mark it as active
                         */</comment>
                        <expr_stmt><expr><name><name pos:line="79" pos:column="25">w<pos:position pos:line="79" pos:column="26"/></name><operator pos:line="79" pos:column="26">-&gt;<pos:position pos:line="79" pos:column="31"/></operator><name pos:line="79" pos:column="28">active<pos:position pos:line="79" pos:column="34"/></name></name> <operator pos:line="79" pos:column="35">=<pos:position pos:line="79" pos:column="36"/></operator> <literal type="number" pos:line="79" pos:column="37">1<pos:position pos:line="79" pos:column="38"/></literal></expr>;<pos:position pos:line="79" pos:column="39"/></expr_stmt>
                    }<pos:position pos:line="80" pos:column="22"/></block></then></if>
                }<pos:position pos:line="81" pos:column="18"/></block></then></if>
                <if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><name><name pos:line="82" pos:column="21">w<pos:position pos:line="82" pos:column="22"/></name><operator pos:line="82" pos:column="22">-&gt;<pos:position pos:line="82" pos:column="27"/></operator><name pos:line="82" pos:column="24">active<pos:position pos:line="82" pos:column="30"/></name></name></expr>)<pos:position pos:line="82" pos:column="31"/></condition><then pos:line="82" pos:column="31"> <block pos:line="82" pos:column="32">{
                    <comment type="block" pos:line="83" pos:column="21">/* We have some callbacks registered.
                     * Create mutexes for singleton watchdogs
                     */</comment>
                    <if pos:line="86" pos:column="21">if <condition pos:line="86" pos:column="24">(<expr><name><name pos:line="86" pos:column="25">w<pos:position pos:line="86" pos:column="26"/></name><operator pos:line="86" pos:column="26">-&gt;<pos:position pos:line="86" pos:column="31"/></operator><name pos:line="86" pos:column="28">singleton<pos:position pos:line="86" pos:column="37"/></name></name></expr>)<pos:position pos:line="86" pos:column="38"/></condition><then pos:line="86" pos:column="38"> <block pos:line="86" pos:column="39">{
                        <expr_stmt><expr><name pos:line="87" pos:column="25">rv<pos:position pos:line="87" pos:column="27"/></name> <operator pos:line="87" pos:column="28">=<pos:position pos:line="87" pos:column="29"/></operator> <call><name pos:line="87" pos:column="30">ap_proc_mutex_create<pos:position pos:line="87" pos:column="50"/></name><argument_list pos:line="87" pos:column="50">(<argument><expr><operator pos:line="87" pos:column="51">&amp;<pos:position pos:line="87" pos:column="56"/></operator><name><name pos:line="87" pos:column="52">w<pos:position pos:line="87" pos:column="53"/></name><operator pos:line="87" pos:column="53">-&gt;<pos:position pos:line="87" pos:column="58"/></operator><name pos:line="87" pos:column="55">mutex<pos:position pos:line="87" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="62">NULL<pos:position pos:line="87" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="68">wd_proc_mutex_type<pos:position pos:line="87" pos:column="86"/></name></expr></argument>,
                                                  <argument><expr><name><name pos:line="88" pos:column="51">w<pos:position pos:line="88" pos:column="52"/></name><operator pos:line="88" pos:column="52">-&gt;<pos:position pos:line="88" pos:column="57"/></operator><name pos:line="88" pos:column="54">name<pos:position pos:line="88" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="60">s<pos:position pos:line="88" pos:column="61"/></name></expr></argument>,
                                                  <argument><expr><name><name pos:line="89" pos:column="51">wd_server_conf<pos:position pos:line="89" pos:column="65"/></name><operator pos:line="89" pos:column="65">-&gt;<pos:position pos:line="89" pos:column="70"/></operator><name pos:line="89" pos:column="67">pool<pos:position pos:line="89" pos:column="71"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="73">0<pos:position pos:line="89" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="76"/></expr_stmt>
                        <if pos:line="90" pos:column="25">if <condition pos:line="90" pos:column="28">(<expr><name pos:line="90" pos:column="29">rv<pos:position pos:line="90" pos:column="31"/></name> <operator pos:line="90" pos:column="32">!=<pos:position pos:line="90" pos:column="34"/></operator> <name pos:line="90" pos:column="35">APR_SUCCESS<pos:position pos:line="90" pos:column="46"/></name></expr>)<pos:position pos:line="90" pos:column="47"/></condition><then pos:line="90" pos:column="47"> <block pos:line="90" pos:column="48">{
                            <return pos:line="91" pos:column="29">return <expr><name pos:line="91" pos:column="36">rv<pos:position pos:line="91" pos:column="38"/></name></expr>;<pos:position pos:line="91" pos:column="39"/></return>
                        }<pos:position pos:line="92" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="93" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name><name pos:line="94" pos:column="21">wd_server_conf<pos:position pos:line="94" pos:column="35"/></name><operator pos:line="94" pos:column="35">-&gt;<pos:position pos:line="94" pos:column="40"/></operator><name pos:line="94" pos:column="37">child_workers<pos:position pos:line="94" pos:column="50"/></name></name><operator pos:line="94" pos:column="50">++<pos:position pos:line="94" pos:column="52"/></operator></expr>;<pos:position pos:line="94" pos:column="53"/></expr_stmt>
                }<pos:position pos:line="95" pos:column="18"/></block></then></if>
            }<pos:position pos:line="96" pos:column="14"/></block></then></if>
        }<pos:position pos:line="97" pos:column="10"/></block></for>
    }<pos:position pos:line="98" pos:column="6"/></block></then></if>
    <return pos:line="99" pos:column="5">return <expr><name pos:line="99" pos:column="12">OK<pos:position pos:line="99" pos:column="14"/></name></expr>;<pos:position pos:line="99" pos:column="15"/></return>
}<pos:position pos:line="100" pos:column="2"/></block></function></unit>

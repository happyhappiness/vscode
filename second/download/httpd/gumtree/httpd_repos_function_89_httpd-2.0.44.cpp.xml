<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_89_httpd-2.0.44.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name><name pos:line="1" pos:column="26">argv<pos:position pos:line="1" pos:column="30"/></name><index pos:line="1" pos:column="30">[]<pos:position pos:line="1" pos:column="32"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">result<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">gid_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">gid<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">group<pos:position pos:line="6" pos:column="17"/></name></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">grent<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">group<pos:position pos:line="7" pos:column="17"/></name></name></type> <name pos:line="7" pos:column="18">fake_grent<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/*
     * Assume success. :-)
     */</comment>
    <expr_stmt><expr><name pos:line="12" pos:column="5">result<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></expr_stmt>
    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><expr><name pos:line="13" pos:column="10">i<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal></expr>;<pos:position pos:line="13" pos:column="16"/></init> <condition><expr><name pos:line="13" pos:column="17">i<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">&lt;<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="21">argc<pos:position pos:line="13" pos:column="25"/></name></expr>;<pos:position pos:line="13" pos:column="26"/></condition> <incr><expr><operator pos:line="13" pos:column="27">++<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">i<pos:position pos:line="13" pos:column="30"/></name></expr></incr>)<pos:position pos:line="13" pos:column="31"/></control> <block pos:line="13" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">arg<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">arg<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <name><name pos:line="15" pos:column="15">argv<pos:position pos:line="15" pos:column="19"/></name><index pos:line="15" pos:column="19">[<expr><name pos:line="15" pos:column="20">i<pos:position pos:line="15" pos:column="21"/></name></expr>]<pos:position pos:line="15" pos:column="22"/></index></name></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>

        <comment type="block" pos:line="17" pos:column="9">/*
         * If it's from a 'Group #-1' statement, get the numeric value
         * and skip the group lookup stuff.
         */</comment>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">*<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">arg<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <literal type="char" pos:line="21" pos:column="21">'#'<pos:position pos:line="21" pos:column="24"/></literal></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25"> <block pos:line="21" pos:column="26">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">gid<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <call><name pos:line="22" pos:column="19">atoi<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><operator pos:line="22" pos:column="24">&amp;<pos:position pos:line="22" pos:column="29"/></operator><name><name pos:line="22" pos:column="25">arg<pos:position pos:line="22" pos:column="28"/></name><index pos:line="22" pos:column="28">[<expr><literal type="number" pos:line="22" pos:column="29">1<pos:position pos:line="22" pos:column="30"/></literal></expr>]<pos:position pos:line="22" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="23" pos:column="13">fake_grent<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">.<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">gr_gid<pos:position pos:line="23" pos:column="30"/></name></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="33">gid<pos:position pos:line="23" pos:column="36"/></name></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name pos:line="24" pos:column="13">grent<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <operator pos:line="24" pos:column="21">&amp;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="22">fake_grent<pos:position pos:line="24" pos:column="32"/></name></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then>
        <else pos:line="26" pos:column="9">else <block pos:line="26" pos:column="14">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">grent<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <call><name pos:line="27" pos:column="21">getgrnam<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">arg<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="30" pos:column="9">/*
         * A NULL return means no such group was found, so we're done
         * with this one.
         */</comment>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">grent<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">==<pos:position pos:line="34" pos:column="21"/></operator> <name pos:line="34" pos:column="22">NULL<pos:position pos:line="34" pos:column="26"/></name></expr>)<pos:position pos:line="34" pos:column="27"/></condition><then pos:line="34" pos:column="27"> <block pos:line="34" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">fprintf<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">stderr<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="29">"%s: group '%s' not found\n"<pos:position pos:line="35" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="59">argv<pos:position pos:line="35" pos:column="63"/></name><index pos:line="35" pos:column="63">[<expr><literal type="number" pos:line="35" pos:column="64">0<pos:position pos:line="35" pos:column="65"/></literal></expr>]<pos:position pos:line="35" pos:column="66"/></index></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="68">arg<pos:position pos:line="35" pos:column="71"/></name></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><name pos:line="36" pos:column="13">result<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <operator pos:line="36" pos:column="22">-<pos:position pos:line="36" pos:column="23"/></operator><literal type="number" pos:line="36" pos:column="23">1<pos:position pos:line="36" pos:column="24"/></literal></expr>;<pos:position pos:line="36" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then>
        <else pos:line="38" pos:column="9">else <block pos:line="38" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">int<pos:position pos:line="39" pos:column="16"/></name></type> <name pos:line="39" pos:column="17">check<pos:position pos:line="39" pos:column="22"/></name></decl>;<pos:position pos:line="39" pos:column="23"/></decl_stmt>

            <comment type="block" pos:line="41" pos:column="13">/*
             * See if we can switch to the numeric GID we have. If so,
             * all well and good; if not, well..
             */</comment>
            <expr_stmt><expr><name pos:line="45" pos:column="13">gid<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <name><name pos:line="45" pos:column="19">grent<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">-&gt;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="26">gr_gid<pos:position pos:line="45" pos:column="32"/></name></name></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name pos:line="46" pos:column="13">check<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <call><name pos:line="46" pos:column="21">setgid<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">gid<pos:position pos:line="46" pos:column="31"/></name></expr></argument>)<pos:position pos:line="46" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="33"/></expr_stmt>
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">check<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">!=<pos:position pos:line="47" pos:column="25"/></operator> <literal type="number" pos:line="47" pos:column="26">0<pos:position pos:line="47" pos:column="27"/></literal></expr>)<pos:position pos:line="47" pos:column="28"/></condition><then pos:line="47" pos:column="28"> <block pos:line="47" pos:column="29">{
                <expr_stmt><expr><call><name pos:line="48" pos:column="17">fprintf<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">stderr<pos:position pos:line="48" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="33">"%s: invalid group '%s'\n"<pos:position pos:line="48" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="61">argv<pos:position pos:line="48" pos:column="65"/></name><index pos:line="48" pos:column="65">[<expr><literal type="number" pos:line="48" pos:column="66">0<pos:position pos:line="48" pos:column="67"/></literal></expr>]<pos:position pos:line="48" pos:column="68"/></index></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="70">arg<pos:position pos:line="48" pos:column="73"/></name></expr></argument>)<pos:position pos:line="48" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="49" pos:column="17">perror<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><name><name pos:line="49" pos:column="24">argv<pos:position pos:line="49" pos:column="28"/></name><index pos:line="49" pos:column="28">[<expr><literal type="number" pos:line="49" pos:column="29">0<pos:position pos:line="49" pos:column="30"/></literal></expr>]<pos:position pos:line="49" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="49" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="50" pos:column="17">result<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">=<pos:position pos:line="50" pos:column="25"/></operator> <operator pos:line="50" pos:column="26">-<pos:position pos:line="50" pos:column="27"/></operator><literal type="number" pos:line="50" pos:column="27">1<pos:position pos:line="50" pos:column="28"/></literal></expr>;<pos:position pos:line="50" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="51" pos:column="14"/></block></then></if>
        }<pos:position pos:line="52" pos:column="10"/></block></else></if>
    }<pos:position pos:line="53" pos:column="6"/></block></for>
    <comment type="block" pos:line="54" pos:column="5">/*
     * Worst-case return value.
     */</comment>
    <return pos:line="57" pos:column="5">return <expr><name pos:line="57" pos:column="12">result<pos:position pos:line="57" pos:column="18"/></name></expr>;<pos:position pos:line="57" pos:column="19"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

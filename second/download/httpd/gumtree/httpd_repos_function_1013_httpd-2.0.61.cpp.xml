<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1013_httpd-2.0.61.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">lookup_variable<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">request_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">r<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">var<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">result<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">resultbuf<pos:position pos:line="4" pos:column="19"/></name><index pos:line="4" pos:column="19">[<expr><name pos:line="4" pos:column="20">LONG_STRING_LEN<pos:position pos:line="4" pos:column="35"/></name></expr>]<pos:position pos:line="4" pos:column="36"/></index></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_time_exp_t<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">tm<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">request_rec<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">rsub<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">result<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <name pos:line="8" pos:column="14">NULL<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* HTTP headers */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">strcasecmp<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">var<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="25">"HTTP_USER_AGENT"<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call> <operator pos:line="11" pos:column="44">==<pos:position pos:line="11" pos:column="46"/></operator> <literal type="number" pos:line="11" pos:column="47">0<pos:position pos:line="11" pos:column="48"/></literal></expr>)<pos:position pos:line="11" pos:column="49"/></condition><then pos:line="11" pos:column="49"> <block pos:line="11" pos:column="50">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">result<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">lookup_header<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">r<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="35">"User-Agent"<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then>
    <elseif pos:line="14" pos:column="5">else <if pos:line="14" pos:column="10">if <condition pos:line="14" pos:column="13">(<expr><call><name pos:line="14" pos:column="14">strcasecmp<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">var<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="30">"HTTP_REFERER"<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call> <operator pos:line="14" pos:column="46">==<pos:position pos:line="14" pos:column="48"/></operator> <literal type="number" pos:line="14" pos:column="49">0<pos:position pos:line="14" pos:column="50"/></literal></expr>)<pos:position pos:line="14" pos:column="51"/></condition><then pos:line="14" pos:column="51"> <block pos:line="14" pos:column="52">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">result<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">lookup_header<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">r<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="35">"Referer"<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="17" pos:column="5">else <if pos:line="17" pos:column="10">if <condition pos:line="17" pos:column="13">(<expr><call><name pos:line="17" pos:column="14">strcasecmp<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">var<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="30">"HTTP_COOKIE"<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call> <operator pos:line="17" pos:column="45">==<pos:position pos:line="17" pos:column="47"/></operator> <literal type="number" pos:line="17" pos:column="48">0<pos:position pos:line="17" pos:column="49"/></literal></expr>)<pos:position pos:line="17" pos:column="50"/></condition><then pos:line="17" pos:column="50"> <block pos:line="17" pos:column="51">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">result<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">lookup_header<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">r<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="35">"Cookie"<pos:position pos:line="18" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><call><name pos:line="20" pos:column="14">strcasecmp<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">var<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="30">"HTTP_FORWARDED"<pos:position pos:line="20" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call> <operator pos:line="20" pos:column="48">==<pos:position pos:line="20" pos:column="50"/></operator> <literal type="number" pos:line="20" pos:column="51">0<pos:position pos:line="20" pos:column="52"/></literal></expr>)<pos:position pos:line="20" pos:column="53"/></condition><then pos:line="20" pos:column="53"> <block pos:line="20" pos:column="54">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">result<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">lookup_header<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">r<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="35">"Forwarded"<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><call><name pos:line="23" pos:column="14">strcasecmp<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">var<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="30">"HTTP_HOST"<pos:position pos:line="23" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call> <operator pos:line="23" pos:column="43">==<pos:position pos:line="23" pos:column="45"/></operator> <literal type="number" pos:line="23" pos:column="46">0<pos:position pos:line="23" pos:column="47"/></literal></expr>)<pos:position pos:line="23" pos:column="48"/></condition><then pos:line="23" pos:column="48"> <block pos:line="23" pos:column="49">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">result<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <call><name pos:line="24" pos:column="18">lookup_header<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">r<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="35">"Host"<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><call><name pos:line="26" pos:column="14">strcasecmp<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">var<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="30">"HTTP_PROXY_CONNECTION"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call> <operator pos:line="26" pos:column="55">==<pos:position pos:line="26" pos:column="57"/></operator> <literal type="number" pos:line="26" pos:column="58">0<pos:position pos:line="26" pos:column="59"/></literal></expr>)<pos:position pos:line="26" pos:column="60"/></condition><then pos:line="26" pos:column="60"> <block pos:line="26" pos:column="61">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">result<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <call><name pos:line="27" pos:column="18">lookup_header<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">r<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="35">"Proxy-Connection"<pos:position pos:line="27" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><call><name pos:line="29" pos:column="14">strcasecmp<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">var<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="30">"HTTP_ACCEPT"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call> <operator pos:line="29" pos:column="45">==<pos:position pos:line="29" pos:column="47"/></operator> <literal type="number" pos:line="29" pos:column="48">0<pos:position pos:line="29" pos:column="49"/></literal></expr>)<pos:position pos:line="29" pos:column="50"/></condition><then pos:line="29" pos:column="50"> <block pos:line="29" pos:column="51">{
        <expr_stmt><expr><name pos:line="30" pos:column="9">result<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">lookup_header<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">r<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="35">"Accept"<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if></elseif>
    <comment type="block" pos:line="32" pos:column="5">/* all other headers from which we are still not know about */</comment>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if <condition pos:line="33" pos:column="13">(<expr><call><name pos:line="33" pos:column="14">strlen<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">var<pos:position pos:line="33" pos:column="24"/></name></expr></argument>)<pos:position pos:line="33" pos:column="25"/></argument_list></call> <operator pos:line="33" pos:column="26">&gt;<pos:position pos:line="33" pos:column="30"/></operator> <literal type="number" pos:line="33" pos:column="28">5<pos:position pos:line="33" pos:column="29"/></literal> <operator pos:line="33" pos:column="30">&amp;&amp;<pos:position pos:line="33" pos:column="40"/></operator> <call><name pos:line="33" pos:column="33">strncasecmp<pos:position pos:line="33" pos:column="44"/></name><argument_list pos:line="33" pos:column="44">(<argument><expr><name pos:line="33" pos:column="45">var<pos:position pos:line="33" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="50">"HTTP:"<pos:position pos:line="33" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="59">5<pos:position pos:line="33" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call> <operator pos:line="33" pos:column="62">==<pos:position pos:line="33" pos:column="64"/></operator> <literal type="number" pos:line="33" pos:column="65">0<pos:position pos:line="33" pos:column="66"/></literal></expr>)<pos:position pos:line="33" pos:column="67"/></condition><then pos:line="33" pos:column="67"> <block pos:line="33" pos:column="68">{
        <expr_stmt><expr><name pos:line="34" pos:column="9">result<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">lookup_header<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">r<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="35">var<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">+<pos:position pos:line="34" pos:column="39"/></operator><literal type="number" pos:line="34" pos:column="39">5<pos:position pos:line="34" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="37" pos:column="5">/* connection stuff */</comment>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><call><name pos:line="38" pos:column="14">strcasecmp<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">var<pos:position pos:line="38" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="30">"REMOTE_ADDR"<pos:position pos:line="38" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call> <operator pos:line="38" pos:column="45">==<pos:position pos:line="38" pos:column="47"/></operator> <literal type="number" pos:line="38" pos:column="48">0<pos:position pos:line="38" pos:column="49"/></literal></expr>)<pos:position pos:line="38" pos:column="50"/></condition><then pos:line="38" pos:column="50"> <block pos:line="38" pos:column="51">{
        <expr_stmt><expr><name pos:line="39" pos:column="9">result<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <name><name pos:line="39" pos:column="18">r<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">-&gt;<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="21">connection<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">remote_ip<pos:position pos:line="39" pos:column="42"/></name></name></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><call><name pos:line="41" pos:column="14">strcasecmp<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">var<pos:position pos:line="41" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="30">"REMOTE_PORT"<pos:position pos:line="41" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call> <operator pos:line="41" pos:column="45">==<pos:position pos:line="41" pos:column="47"/></operator> <literal type="number" pos:line="41" pos:column="48">0<pos:position pos:line="41" pos:column="49"/></literal></expr>)<pos:position pos:line="41" pos:column="50"/></condition><then pos:line="41" pos:column="50"> <block pos:line="41" pos:column="51">{
        <return pos:line="42" pos:column="9">return <expr><call><name pos:line="42" pos:column="16">apr_itoa<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name><name pos:line="42" pos:column="25">r<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">-&gt;<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="28">pool<pos:position pos:line="42" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="34">r<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">-&gt;<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="37">connection<pos:position pos:line="42" pos:column="47"/></name><operator pos:line="42" pos:column="47">-&gt;<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="49">remote_addr<pos:position pos:line="42" pos:column="60"/></name><operator pos:line="42" pos:column="60">-&gt;<pos:position pos:line="42" pos:column="65"/></operator><name pos:line="42" pos:column="62">port<pos:position pos:line="42" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="68"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="44" pos:column="5">else <if pos:line="44" pos:column="10">if <condition pos:line="44" pos:column="13">(<expr><call><name pos:line="44" pos:column="14">strcasecmp<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name pos:line="44" pos:column="25">var<pos:position pos:line="44" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="30">"REMOTE_HOST"<pos:position pos:line="44" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></call> <operator pos:line="44" pos:column="45">==<pos:position pos:line="44" pos:column="47"/></operator> <literal type="number" pos:line="44" pos:column="48">0<pos:position pos:line="44" pos:column="49"/></literal></expr>)<pos:position pos:line="44" pos:column="50"/></condition><then pos:line="44" pos:column="50"> <block pos:line="44" pos:column="51">{
        <expr_stmt><expr><name pos:line="45" pos:column="9">result<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <operator pos:line="45" pos:column="18">(<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="19">char<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">*<pos:position pos:line="45" pos:column="25"/></operator><operator pos:line="45" pos:column="25">)<pos:position pos:line="45" pos:column="26"/></operator><call><name pos:line="45" pos:column="26">ap_get_remote_host<pos:position pos:line="45" pos:column="44"/></name><argument_list pos:line="45" pos:column="44">(<argument><expr><name><name pos:line="45" pos:column="45">r<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">-&gt;<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="48">connection<pos:position pos:line="45" pos:column="58"/></name></name></expr></argument>,
                                            <argument><expr><name><name pos:line="46" pos:column="45">r<pos:position pos:line="46" pos:column="46"/></name><operator pos:line="46" pos:column="46">-&gt;<pos:position pos:line="46" pos:column="51"/></operator><name pos:line="46" pos:column="48">per_dir_config<pos:position pos:line="46" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="64">REMOTE_NAME<pos:position pos:line="46" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="77">NULL<pos:position pos:line="46" pos:column="81"/></name></expr></argument>)<pos:position pos:line="46" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="83"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="48" pos:column="5">else <if pos:line="48" pos:column="10">if <condition pos:line="48" pos:column="13">(<expr><call><name pos:line="48" pos:column="14">strcasecmp<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">var<pos:position pos:line="48" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="30">"REMOTE_USER"<pos:position pos:line="48" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call> <operator pos:line="48" pos:column="45">==<pos:position pos:line="48" pos:column="47"/></operator> <literal type="number" pos:line="48" pos:column="48">0<pos:position pos:line="48" pos:column="49"/></literal></expr>)<pos:position pos:line="48" pos:column="50"/></condition><then pos:line="48" pos:column="50"> <block pos:line="48" pos:column="51">{
        <expr_stmt><expr><name pos:line="49" pos:column="9">result<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <name><name pos:line="49" pos:column="18">r<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">-&gt;<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="21">user<pos:position pos:line="49" pos:column="25"/></name></name></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="51" pos:column="5">else <if pos:line="51" pos:column="10">if <condition pos:line="51" pos:column="13">(<expr><call><name pos:line="51" pos:column="14">strcasecmp<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">var<pos:position pos:line="51" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="30">"REMOTE_IDENT"<pos:position pos:line="51" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="45"/></argument_list></call> <operator pos:line="51" pos:column="46">==<pos:position pos:line="51" pos:column="48"/></operator> <literal type="number" pos:line="51" pos:column="49">0<pos:position pos:line="51" pos:column="50"/></literal></expr>)<pos:position pos:line="51" pos:column="51"/></condition><then pos:line="51" pos:column="51"> <block pos:line="51" pos:column="52">{
        <expr_stmt><expr><name pos:line="52" pos:column="9">result<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <operator pos:line="52" pos:column="18">(<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="19">char<pos:position pos:line="52" pos:column="23"/></name> <operator pos:line="52" pos:column="24">*<pos:position pos:line="52" pos:column="25"/></operator><operator pos:line="52" pos:column="25">)<pos:position pos:line="52" pos:column="26"/></operator><call><name pos:line="52" pos:column="26">ap_get_remote_logname<pos:position pos:line="52" pos:column="47"/></name><argument_list pos:line="52" pos:column="47">(<argument><expr><name pos:line="52" pos:column="48">r<pos:position pos:line="52" pos:column="49"/></name></expr></argument>)<pos:position pos:line="52" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="55" pos:column="5">/* request stuff */</comment>
    <elseif pos:line="56" pos:column="5">else <if pos:line="56" pos:column="10">if <condition pos:line="56" pos:column="13">(<expr><call><name pos:line="56" pos:column="14">strcasecmp<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">var<pos:position pos:line="56" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="30">"THE_REQUEST"<pos:position pos:line="56" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="44"/></argument_list></call> <operator pos:line="56" pos:column="45">==<pos:position pos:line="56" pos:column="47"/></operator> <literal type="number" pos:line="56" pos:column="48">0<pos:position pos:line="56" pos:column="49"/></literal></expr>)<pos:position pos:line="56" pos:column="50"/></condition><then pos:line="56" pos:column="50"> <block pos:line="56" pos:column="51">{ <comment type="block" pos:line="56" pos:column="53">/* non-standard */</comment>
        <expr_stmt><expr><name pos:line="57" pos:column="9">result<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <name><name pos:line="57" pos:column="18">r<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">-&gt;<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="21">the_request<pos:position pos:line="57" pos:column="32"/></name></name></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="59" pos:column="5">else <if pos:line="59" pos:column="10">if <condition pos:line="59" pos:column="13">(<expr><call><name pos:line="59" pos:column="14">strcasecmp<pos:position pos:line="59" pos:column="24"/></name><argument_list pos:line="59" pos:column="24">(<argument><expr><name pos:line="59" pos:column="25">var<pos:position pos:line="59" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="30">"REQUEST_METHOD"<pos:position pos:line="59" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="47"/></argument_list></call> <operator pos:line="59" pos:column="48">==<pos:position pos:line="59" pos:column="50"/></operator> <literal type="number" pos:line="59" pos:column="51">0<pos:position pos:line="59" pos:column="52"/></literal></expr>)<pos:position pos:line="59" pos:column="53"/></condition><then pos:line="59" pos:column="53"> <block pos:line="59" pos:column="54">{
        <expr_stmt><expr><name pos:line="60" pos:column="9">result<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">=<pos:position pos:line="60" pos:column="17"/></operator> <name><name pos:line="60" pos:column="18">r<pos:position pos:line="60" pos:column="19"/></name><operator pos:line="60" pos:column="19">-&gt;<pos:position pos:line="60" pos:column="24"/></operator><name pos:line="60" pos:column="21">method<pos:position pos:line="60" pos:column="27"/></name></name></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="62" pos:column="5">else <if pos:line="62" pos:column="10">if <condition pos:line="62" pos:column="13">(<expr><call><name pos:line="62" pos:column="14">strcasecmp<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><name pos:line="62" pos:column="25">var<pos:position pos:line="62" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="30">"REQUEST_URI"<pos:position pos:line="62" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="44"/></argument_list></call> <operator pos:line="62" pos:column="45">==<pos:position pos:line="62" pos:column="47"/></operator> <literal type="number" pos:line="62" pos:column="48">0<pos:position pos:line="62" pos:column="49"/></literal></expr>)<pos:position pos:line="62" pos:column="50"/></condition><then pos:line="62" pos:column="50"> <block pos:line="62" pos:column="51">{ <comment type="block" pos:line="62" pos:column="53">/* non-standard */</comment>
        <expr_stmt><expr><name pos:line="63" pos:column="9">result<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <name><name pos:line="63" pos:column="18">r<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">-&gt;<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="21">uri<pos:position pos:line="63" pos:column="24"/></name></name></expr>;<pos:position pos:line="63" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="65" pos:column="5">else <if pos:line="65" pos:column="10">if <condition pos:line="65" pos:column="13">(<expr><call><name pos:line="65" pos:column="14">strcasecmp<pos:position pos:line="65" pos:column="24"/></name><argument_list pos:line="65" pos:column="24">(<argument><expr><name pos:line="65" pos:column="25">var<pos:position pos:line="65" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="30">"SCRIPT_FILENAME"<pos:position pos:line="65" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="48"/></argument_list></call> <operator pos:line="65" pos:column="49">==<pos:position pos:line="65" pos:column="51"/></operator> <literal type="number" pos:line="65" pos:column="52">0<pos:position pos:line="65" pos:column="53"/></literal> <operator pos:line="65" pos:column="54">||<pos:position pos:line="65" pos:column="56"/></operator>
             <call><name pos:line="66" pos:column="14">strcasecmp<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">var<pos:position pos:line="66" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="30">"REQUEST_FILENAME"<pos:position pos:line="66" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="49"/></argument_list></call> <operator pos:line="66" pos:column="50">==<pos:position pos:line="66" pos:column="52"/></operator> <literal type="number" pos:line="66" pos:column="53">0<pos:position pos:line="66" pos:column="54"/></literal></expr>  )<pos:position pos:line="66" pos:column="57"/></condition><then pos:line="66" pos:column="57"> <block pos:line="66" pos:column="58">{
        <expr_stmt><expr><name pos:line="67" pos:column="9">result<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <name><name pos:line="67" pos:column="18">r<pos:position pos:line="67" pos:column="19"/></name><operator pos:line="67" pos:column="19">-&gt;<pos:position pos:line="67" pos:column="24"/></operator><name pos:line="67" pos:column="21">filename<pos:position pos:line="67" pos:column="29"/></name></name></expr>;<pos:position pos:line="67" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="69" pos:column="5">else <if pos:line="69" pos:column="10">if <condition pos:line="69" pos:column="13">(<expr><call><name pos:line="69" pos:column="14">strcasecmp<pos:position pos:line="69" pos:column="24"/></name><argument_list pos:line="69" pos:column="24">(<argument><expr><name pos:line="69" pos:column="25">var<pos:position pos:line="69" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="30">"PATH_INFO"<pos:position pos:line="69" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="42"/></argument_list></call> <operator pos:line="69" pos:column="43">==<pos:position pos:line="69" pos:column="45"/></operator> <literal type="number" pos:line="69" pos:column="46">0<pos:position pos:line="69" pos:column="47"/></literal></expr>)<pos:position pos:line="69" pos:column="48"/></condition><then pos:line="69" pos:column="48"> <block pos:line="69" pos:column="49">{
        <expr_stmt><expr><name pos:line="70" pos:column="9">result<pos:position pos:line="70" pos:column="15"/></name> <operator pos:line="70" pos:column="16">=<pos:position pos:line="70" pos:column="17"/></operator> <name><name pos:line="70" pos:column="18">r<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">-&gt;<pos:position pos:line="70" pos:column="24"/></operator><name pos:line="70" pos:column="21">path_info<pos:position pos:line="70" pos:column="30"/></name></name></expr>;<pos:position pos:line="70" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="72" pos:column="5">else <if pos:line="72" pos:column="10">if <condition pos:line="72" pos:column="13">(<expr><call><name pos:line="72" pos:column="14">strcasecmp<pos:position pos:line="72" pos:column="24"/></name><argument_list pos:line="72" pos:column="24">(<argument><expr><name pos:line="72" pos:column="25">var<pos:position pos:line="72" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="30">"QUERY_STRING"<pos:position pos:line="72" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="45"/></argument_list></call> <operator pos:line="72" pos:column="46">==<pos:position pos:line="72" pos:column="48"/></operator> <literal type="number" pos:line="72" pos:column="49">0<pos:position pos:line="72" pos:column="50"/></literal></expr>)<pos:position pos:line="72" pos:column="51"/></condition><then pos:line="72" pos:column="51"> <block pos:line="72" pos:column="52">{
        <expr_stmt><expr><name pos:line="73" pos:column="9">result<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">=<pos:position pos:line="73" pos:column="17"/></operator> <name><name pos:line="73" pos:column="18">r<pos:position pos:line="73" pos:column="19"/></name><operator pos:line="73" pos:column="19">-&gt;<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="21">args<pos:position pos:line="73" pos:column="25"/></name></name></expr>;<pos:position pos:line="73" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="75" pos:column="5">else <if pos:line="75" pos:column="10">if <condition pos:line="75" pos:column="13">(<expr><call><name pos:line="75" pos:column="14">strcasecmp<pos:position pos:line="75" pos:column="24"/></name><argument_list pos:line="75" pos:column="24">(<argument><expr><name pos:line="75" pos:column="25">var<pos:position pos:line="75" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="30">"AUTH_TYPE"<pos:position pos:line="75" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="42"/></argument_list></call> <operator pos:line="75" pos:column="43">==<pos:position pos:line="75" pos:column="45"/></operator> <literal type="number" pos:line="75" pos:column="46">0<pos:position pos:line="75" pos:column="47"/></literal></expr>)<pos:position pos:line="75" pos:column="48"/></condition><then pos:line="75" pos:column="48"> <block pos:line="75" pos:column="49">{
        <expr_stmt><expr><name pos:line="76" pos:column="9">result<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">=<pos:position pos:line="76" pos:column="17"/></operator> <name><name pos:line="76" pos:column="18">r<pos:position pos:line="76" pos:column="19"/></name><operator pos:line="76" pos:column="19">-&gt;<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="21">ap_auth_type<pos:position pos:line="76" pos:column="33"/></name></name></expr>;<pos:position pos:line="76" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="78" pos:column="5">else <if pos:line="78" pos:column="10">if <condition pos:line="78" pos:column="13">(<expr><call><name pos:line="78" pos:column="14">strcasecmp<pos:position pos:line="78" pos:column="24"/></name><argument_list pos:line="78" pos:column="24">(<argument><expr><name pos:line="78" pos:column="25">var<pos:position pos:line="78" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="30">"IS_SUBREQ"<pos:position pos:line="78" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="42"/></argument_list></call> <operator pos:line="78" pos:column="43">==<pos:position pos:line="78" pos:column="45"/></operator> <literal type="number" pos:line="78" pos:column="46">0<pos:position pos:line="78" pos:column="47"/></literal></expr>)<pos:position pos:line="78" pos:column="48"/></condition><then pos:line="78" pos:column="48"> <block pos:line="78" pos:column="49">{ <comment type="block" pos:line="78" pos:column="51">/* non-standard */</comment>
        <expr_stmt><expr><name pos:line="79" pos:column="9">result<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">=<pos:position pos:line="79" pos:column="17"/></operator> <operator pos:line="79" pos:column="18">(<pos:position pos:line="79" pos:column="19"/></operator><ternary><condition><expr><name><name pos:line="79" pos:column="19">r<pos:position pos:line="79" pos:column="20"/></name><operator pos:line="79" pos:column="20">-&gt;<pos:position pos:line="79" pos:column="25"/></operator><name pos:line="79" pos:column="22">main<pos:position pos:line="79" pos:column="26"/></name></name> <operator pos:line="79" pos:column="27">!=<pos:position pos:line="79" pos:column="29"/></operator> <name pos:line="79" pos:column="30">NULL<pos:position pos:line="79" pos:column="34"/></name></expr> ?<pos:position pos:line="79" pos:column="36"/></condition><then pos:line="79" pos:column="36"> <expr><literal type="string" pos:line="79" pos:column="37">"true"<pos:position pos:line="79" pos:column="43"/></literal></expr> <pos:position pos:line="79" pos:column="44"/></then><else pos:line="79" pos:column="44">: <expr><literal type="string" pos:line="79" pos:column="46">"false"<pos:position pos:line="79" pos:column="53"/></literal></expr></else></ternary><operator pos:line="79" pos:column="53">)<pos:position pos:line="79" pos:column="54"/></operator></expr>;<pos:position pos:line="79" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="82" pos:column="5">/* internal server stuff */</comment>
    <elseif pos:line="83" pos:column="5">else <if pos:line="83" pos:column="10">if <condition pos:line="83" pos:column="13">(<expr><call><name pos:line="83" pos:column="14">strcasecmp<pos:position pos:line="83" pos:column="24"/></name><argument_list pos:line="83" pos:column="24">(<argument><expr><name pos:line="83" pos:column="25">var<pos:position pos:line="83" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="30">"DOCUMENT_ROOT"<pos:position pos:line="83" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="46"/></argument_list></call> <operator pos:line="83" pos:column="47">==<pos:position pos:line="83" pos:column="49"/></operator> <literal type="number" pos:line="83" pos:column="50">0<pos:position pos:line="83" pos:column="51"/></literal></expr>)<pos:position pos:line="83" pos:column="52"/></condition><then pos:line="83" pos:column="52"> <block pos:line="83" pos:column="53">{
        <expr_stmt><expr><name pos:line="84" pos:column="9">result<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <call><name pos:line="84" pos:column="18">ap_document_root<pos:position pos:line="84" pos:column="34"/></name><argument_list pos:line="84" pos:column="34">(<argument><expr><name pos:line="84" pos:column="35">r<pos:position pos:line="84" pos:column="36"/></name></expr></argument>)<pos:position pos:line="84" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="86" pos:column="5">else <if pos:line="86" pos:column="10">if <condition pos:line="86" pos:column="13">(<expr><call><name pos:line="86" pos:column="14">strcasecmp<pos:position pos:line="86" pos:column="24"/></name><argument_list pos:line="86" pos:column="24">(<argument><expr><name pos:line="86" pos:column="25">var<pos:position pos:line="86" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="30">"SERVER_ADMIN"<pos:position pos:line="86" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="45"/></argument_list></call> <operator pos:line="86" pos:column="46">==<pos:position pos:line="86" pos:column="48"/></operator> <literal type="number" pos:line="86" pos:column="49">0<pos:position pos:line="86" pos:column="50"/></literal></expr>)<pos:position pos:line="86" pos:column="51"/></condition><then pos:line="86" pos:column="51"> <block pos:line="86" pos:column="52">{
        <expr_stmt><expr><name pos:line="87" pos:column="9">result<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <name><name pos:line="87" pos:column="18">r<pos:position pos:line="87" pos:column="19"/></name><operator pos:line="87" pos:column="19">-&gt;<pos:position pos:line="87" pos:column="24"/></operator><name pos:line="87" pos:column="21">server<pos:position pos:line="87" pos:column="27"/></name><operator pos:line="87" pos:column="27">-&gt;<pos:position pos:line="87" pos:column="32"/></operator><name pos:line="87" pos:column="29">server_admin<pos:position pos:line="87" pos:column="41"/></name></name></expr>;<pos:position pos:line="87" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="89" pos:column="5">else <if pos:line="89" pos:column="10">if <condition pos:line="89" pos:column="13">(<expr><call><name pos:line="89" pos:column="14">strcasecmp<pos:position pos:line="89" pos:column="24"/></name><argument_list pos:line="89" pos:column="24">(<argument><expr><name pos:line="89" pos:column="25">var<pos:position pos:line="89" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="30">"SERVER_NAME"<pos:position pos:line="89" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="44"/></argument_list></call> <operator pos:line="89" pos:column="45">==<pos:position pos:line="89" pos:column="47"/></operator> <literal type="number" pos:line="89" pos:column="48">0<pos:position pos:line="89" pos:column="49"/></literal></expr>)<pos:position pos:line="89" pos:column="50"/></condition><then pos:line="89" pos:column="50"> <block pos:line="89" pos:column="51">{
        <expr_stmt><expr><name pos:line="90" pos:column="9">result<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <call><name pos:line="90" pos:column="18">ap_get_server_name<pos:position pos:line="90" pos:column="36"/></name><argument_list pos:line="90" pos:column="36">(<argument><expr><name pos:line="90" pos:column="37">r<pos:position pos:line="90" pos:column="38"/></name></expr></argument>)<pos:position pos:line="90" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="92" pos:column="5">else <if pos:line="92" pos:column="10">if <condition pos:line="92" pos:column="13">(<expr><call><name pos:line="92" pos:column="14">strcasecmp<pos:position pos:line="92" pos:column="24"/></name><argument_list pos:line="92" pos:column="24">(<argument><expr><name pos:line="92" pos:column="25">var<pos:position pos:line="92" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="30">"SERVER_ADDR"<pos:position pos:line="92" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="44"/></argument_list></call> <operator pos:line="92" pos:column="45">==<pos:position pos:line="92" pos:column="47"/></operator> <literal type="number" pos:line="92" pos:column="48">0<pos:position pos:line="92" pos:column="49"/></literal></expr>)<pos:position pos:line="92" pos:column="50"/></condition><then pos:line="92" pos:column="50"> <block pos:line="92" pos:column="51">{ <comment type="block" pos:line="92" pos:column="53">/* non-standard */</comment>
        <expr_stmt><expr><name pos:line="93" pos:column="9">result<pos:position pos:line="93" pos:column="15"/></name> <operator pos:line="93" pos:column="16">=<pos:position pos:line="93" pos:column="17"/></operator> <name><name pos:line="93" pos:column="18">r<pos:position pos:line="93" pos:column="19"/></name><operator pos:line="93" pos:column="19">-&gt;<pos:position pos:line="93" pos:column="24"/></operator><name pos:line="93" pos:column="21">connection<pos:position pos:line="93" pos:column="31"/></name><operator pos:line="93" pos:column="31">-&gt;<pos:position pos:line="93" pos:column="36"/></operator><name pos:line="93" pos:column="33">local_ip<pos:position pos:line="93" pos:column="41"/></name></name></expr>;<pos:position pos:line="93" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="95" pos:column="5">else <if pos:line="95" pos:column="10">if <condition pos:line="95" pos:column="13">(<expr><call><name pos:line="95" pos:column="14">strcasecmp<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">(<argument><expr><name pos:line="95" pos:column="25">var<pos:position pos:line="95" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="30">"SERVER_PORT"<pos:position pos:line="95" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="44"/></argument_list></call> <operator pos:line="95" pos:column="45">==<pos:position pos:line="95" pos:column="47"/></operator> <literal type="number" pos:line="95" pos:column="48">0<pos:position pos:line="95" pos:column="49"/></literal></expr>)<pos:position pos:line="95" pos:column="50"/></condition><then pos:line="95" pos:column="50"> <block pos:line="95" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="96" pos:column="9">apr_snprintf<pos:position pos:line="96" pos:column="21"/></name><argument_list pos:line="96" pos:column="21">(<argument><expr><name pos:line="96" pos:column="22">resultbuf<pos:position pos:line="96" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="96" pos:column="33">sizeof<argument_list pos:line="96" pos:column="39">(<argument><expr><name pos:line="96" pos:column="40">resultbuf<pos:position pos:line="96" pos:column="49"/></name></expr></argument>)<pos:position pos:line="96" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="52">"%u"<pos:position pos:line="96" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="96" pos:column="58">ap_get_server_port<pos:position pos:line="96" pos:column="76"/></name><argument_list pos:line="96" pos:column="76">(<argument><expr><name pos:line="96" pos:column="77">r<pos:position pos:line="96" pos:column="78"/></name></expr></argument>)<pos:position pos:line="96" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><name pos:line="97" pos:column="9">result<pos:position pos:line="97" pos:column="15"/></name> <operator pos:line="97" pos:column="16">=<pos:position pos:line="97" pos:column="17"/></operator> <name pos:line="97" pos:column="18">resultbuf<pos:position pos:line="97" pos:column="27"/></name></expr>;<pos:position pos:line="97" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="98" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="99" pos:column="5">else <if pos:line="99" pos:column="10">if <condition pos:line="99" pos:column="13">(<expr><call><name pos:line="99" pos:column="14">strcasecmp<pos:position pos:line="99" pos:column="24"/></name><argument_list pos:line="99" pos:column="24">(<argument><expr><name pos:line="99" pos:column="25">var<pos:position pos:line="99" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="30">"SERVER_PROTOCOL"<pos:position pos:line="99" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="48"/></argument_list></call> <operator pos:line="99" pos:column="49">==<pos:position pos:line="99" pos:column="51"/></operator> <literal type="number" pos:line="99" pos:column="52">0<pos:position pos:line="99" pos:column="53"/></literal></expr>)<pos:position pos:line="99" pos:column="54"/></condition><then pos:line="99" pos:column="54"> <block pos:line="99" pos:column="55">{
        <expr_stmt><expr><name pos:line="100" pos:column="9">result<pos:position pos:line="100" pos:column="15"/></name> <operator pos:line="100" pos:column="16">=<pos:position pos:line="100" pos:column="17"/></operator> <name><name pos:line="100" pos:column="18">r<pos:position pos:line="100" pos:column="19"/></name><operator pos:line="100" pos:column="19">-&gt;<pos:position pos:line="100" pos:column="24"/></operator><name pos:line="100" pos:column="21">protocol<pos:position pos:line="100" pos:column="29"/></name></name></expr>;<pos:position pos:line="100" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="102" pos:column="5">else <if pos:line="102" pos:column="10">if <condition pos:line="102" pos:column="13">(<expr><call><name pos:line="102" pos:column="14">strcasecmp<pos:position pos:line="102" pos:column="24"/></name><argument_list pos:line="102" pos:column="24">(<argument><expr><name pos:line="102" pos:column="25">var<pos:position pos:line="102" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="30">"SERVER_SOFTWARE"<pos:position pos:line="102" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="48"/></argument_list></call> <operator pos:line="102" pos:column="49">==<pos:position pos:line="102" pos:column="51"/></operator> <literal type="number" pos:line="102" pos:column="52">0<pos:position pos:line="102" pos:column="53"/></literal></expr>)<pos:position pos:line="102" pos:column="54"/></condition><then pos:line="102" pos:column="54"> <block pos:line="102" pos:column="55">{
        <expr_stmt><expr><name pos:line="103" pos:column="9">result<pos:position pos:line="103" pos:column="15"/></name> <operator pos:line="103" pos:column="16">=<pos:position pos:line="103" pos:column="17"/></operator> <call><name pos:line="103" pos:column="18">ap_get_server_version<pos:position pos:line="103" pos:column="39"/></name><argument_list pos:line="103" pos:column="39">()<pos:position pos:line="103" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="104" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="105" pos:column="5">else <if pos:line="105" pos:column="10">if <condition pos:line="105" pos:column="13">(<expr><call><name pos:line="105" pos:column="14">strcasecmp<pos:position pos:line="105" pos:column="24"/></name><argument_list pos:line="105" pos:column="24">(<argument><expr><name pos:line="105" pos:column="25">var<pos:position pos:line="105" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="30">"API_VERSION"<pos:position pos:line="105" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="44"/></argument_list></call> <operator pos:line="105" pos:column="45">==<pos:position pos:line="105" pos:column="47"/></operator> <literal type="number" pos:line="105" pos:column="48">0<pos:position pos:line="105" pos:column="49"/></literal></expr>)<pos:position pos:line="105" pos:column="50"/></condition><then pos:line="105" pos:column="50"> <block pos:line="105" pos:column="51">{ <comment type="block" pos:line="105" pos:column="53">/* non-standard */</comment>
        <expr_stmt><expr><call><name pos:line="106" pos:column="9">apr_snprintf<pos:position pos:line="106" pos:column="21"/></name><argument_list pos:line="106" pos:column="21">(<argument><expr><name pos:line="106" pos:column="22">resultbuf<pos:position pos:line="106" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="106" pos:column="33">sizeof<argument_list pos:line="106" pos:column="39">(<argument><expr><name pos:line="106" pos:column="40">resultbuf<pos:position pos:line="106" pos:column="49"/></name></expr></argument>)<pos:position pos:line="106" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="52">"%d:%d"<pos:position pos:line="106" pos:column="59"/></literal></expr></argument>,
                     <argument><expr><name pos:line="107" pos:column="22">MODULE_MAGIC_NUMBER_MAJOR<pos:position pos:line="107" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="49">MODULE_MAGIC_NUMBER_MINOR<pos:position pos:line="107" pos:column="74"/></name></expr></argument>)<pos:position pos:line="107" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><name pos:line="108" pos:column="9">result<pos:position pos:line="108" pos:column="15"/></name> <operator pos:line="108" pos:column="16">=<pos:position pos:line="108" pos:column="17"/></operator> <name pos:line="108" pos:column="18">resultbuf<pos:position pos:line="108" pos:column="27"/></name></expr>;<pos:position pos:line="108" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="109" pos:column="6"/></block></then></if></elseif>

<comment type="block" pos:line="111" pos:column="1">/* XXX: wow this has gotta be slow if you actually use it for a lot, recalculates exploded time for each variable */</comment>
    <comment type="block" pos:line="112" pos:column="5">/* underlaying Unix system stuff */</comment>
    <elseif pos:line="113" pos:column="5">else <if pos:line="113" pos:column="10">if <condition pos:line="113" pos:column="13">(<expr><call><name pos:line="113" pos:column="14">strcasecmp<pos:position pos:line="113" pos:column="24"/></name><argument_list pos:line="113" pos:column="24">(<argument><expr><name pos:line="113" pos:column="25">var<pos:position pos:line="113" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="30">"TIME_YEAR"<pos:position pos:line="113" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="42"/></argument_list></call> <operator pos:line="113" pos:column="43">==<pos:position pos:line="113" pos:column="45"/></operator> <literal type="number" pos:line="113" pos:column="46">0<pos:position pos:line="113" pos:column="47"/></literal></expr>)<pos:position pos:line="113" pos:column="48"/></condition><then pos:line="113" pos:column="48"> <block pos:line="113" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="114" pos:column="9">apr_time_exp_lt<pos:position pos:line="114" pos:column="24"/></name><argument_list pos:line="114" pos:column="24">(<argument><expr><operator pos:line="114" pos:column="25">&amp;<pos:position pos:line="114" pos:column="30"/></operator><name pos:line="114" pos:column="26">tm<pos:position pos:line="114" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="114" pos:column="30">apr_time_now<pos:position pos:line="114" pos:column="42"/></name><argument_list pos:line="114" pos:column="42">()<pos:position pos:line="114" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="114" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="115" pos:column="9">apr_snprintf<pos:position pos:line="115" pos:column="21"/></name><argument_list pos:line="115" pos:column="21">(<argument><expr><name pos:line="115" pos:column="22">resultbuf<pos:position pos:line="115" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="115" pos:column="33">sizeof<argument_list pos:line="115" pos:column="39">(<argument><expr><name pos:line="115" pos:column="40">resultbuf<pos:position pos:line="115" pos:column="49"/></name></expr></argument>)<pos:position pos:line="115" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="52">"%04d"<pos:position pos:line="115" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="60">tm<pos:position pos:line="115" pos:column="62"/></name><operator pos:line="115" pos:column="62">.<pos:position pos:line="115" pos:column="63"/></operator><name pos:line="115" pos:column="63">tm_year<pos:position pos:line="115" pos:column="70"/></name></name> <operator pos:line="115" pos:column="71">+<pos:position pos:line="115" pos:column="72"/></operator> <literal type="number" pos:line="115" pos:column="73">1900<pos:position pos:line="115" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><name pos:line="116" pos:column="9">result<pos:position pos:line="116" pos:column="15"/></name> <operator pos:line="116" pos:column="16">=<pos:position pos:line="116" pos:column="17"/></operator> <name pos:line="116" pos:column="18">resultbuf<pos:position pos:line="116" pos:column="27"/></name></expr>;<pos:position pos:line="116" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="117" pos:column="6"/></block></then></if></elseif>
<cpp:define pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">define<pos:position pos:line="118" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="118" pos:column="9">MKTIMESTR<pos:position pos:line="118" pos:column="18"/></name><parameter_list pos:line="118" pos:column="18">(<parameter><type><name pos:line="118" pos:column="19">format<pos:position pos:line="118" pos:column="25"/></name></type></parameter>, <parameter><type><name pos:line="118" pos:column="27">tmfield<pos:position pos:line="118" pos:column="34"/></name></type></parameter>)<pos:position pos:line="118" pos:column="35"/></parameter_list></cpp:macro> \
    <cpp:value pos:line="119" pos:column="5">apr_time_exp_lt(&amp;tm, apr_time_now()); \
    apr_snprintf(resultbuf, sizeof(resultbuf), format, tm.tmfield); \
    result = resultbuf;<pos:position pos:line="121" pos:column="24"/></cpp:value></cpp:define>
    <elseif pos:line="122" pos:column="5">else <if pos:line="122" pos:column="10">if <condition pos:line="122" pos:column="13">(<expr><call><name pos:line="122" pos:column="14">strcasecmp<pos:position pos:line="122" pos:column="24"/></name><argument_list pos:line="122" pos:column="24">(<argument><expr><name pos:line="122" pos:column="25">var<pos:position pos:line="122" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="30">"TIME_MON"<pos:position pos:line="122" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="41"/></argument_list></call> <operator pos:line="122" pos:column="42">==<pos:position pos:line="122" pos:column="44"/></operator> <literal type="number" pos:line="122" pos:column="45">0<pos:position pos:line="122" pos:column="46"/></literal></expr>)<pos:position pos:line="122" pos:column="47"/></condition><then pos:line="122" pos:column="47"> <block pos:line="122" pos:column="48">{
        <macro><name pos:line="123" pos:column="9">MKTIMESTR<pos:position pos:line="123" pos:column="18"/></name><argument_list pos:line="123" pos:column="18">(<argument><literal type="string" pos:line="123" pos:column="19">"%02d"<pos:position pos:line="123" pos:column="25"/></literal></argument>, <argument pos:line="123" pos:column="27">tm_mon+<literal type="number" pos:line="123" pos:column="34">1<pos:position pos:line="123" pos:column="35"/></literal></argument>)<pos:position pos:line="123" pos:column="36"/></argument_list></macro>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="125" pos:column="5">else <if pos:line="125" pos:column="10">if <condition pos:line="125" pos:column="13">(<expr><call><name pos:line="125" pos:column="14">strcasecmp<pos:position pos:line="125" pos:column="24"/></name><argument_list pos:line="125" pos:column="24">(<argument><expr><name pos:line="125" pos:column="25">var<pos:position pos:line="125" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="30">"TIME_DAY"<pos:position pos:line="125" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="41"/></argument_list></call> <operator pos:line="125" pos:column="42">==<pos:position pos:line="125" pos:column="44"/></operator> <literal type="number" pos:line="125" pos:column="45">0<pos:position pos:line="125" pos:column="46"/></literal></expr>)<pos:position pos:line="125" pos:column="47"/></condition><then pos:line="125" pos:column="47"> <block pos:line="125" pos:column="48">{
        <macro><name pos:line="126" pos:column="9">MKTIMESTR<pos:position pos:line="126" pos:column="18"/></name><argument_list pos:line="126" pos:column="18">(<argument><literal type="string" pos:line="126" pos:column="19">"%02d"<pos:position pos:line="126" pos:column="25"/></literal></argument>, <argument pos:line="126" pos:column="27">tm_mday<pos:position pos:line="126" pos:column="34"/></argument>)<pos:position pos:line="126" pos:column="35"/></argument_list></macro>
    }<pos:position pos:line="127" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="128" pos:column="5">else <if pos:line="128" pos:column="10">if <condition pos:line="128" pos:column="13">(<expr><call><name pos:line="128" pos:column="14">strcasecmp<pos:position pos:line="128" pos:column="24"/></name><argument_list pos:line="128" pos:column="24">(<argument><expr><name pos:line="128" pos:column="25">var<pos:position pos:line="128" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="30">"TIME_HOUR"<pos:position pos:line="128" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="42"/></argument_list></call> <operator pos:line="128" pos:column="43">==<pos:position pos:line="128" pos:column="45"/></operator> <literal type="number" pos:line="128" pos:column="46">0<pos:position pos:line="128" pos:column="47"/></literal></expr>)<pos:position pos:line="128" pos:column="48"/></condition><then pos:line="128" pos:column="48"> <block pos:line="128" pos:column="49">{
        <macro><name pos:line="129" pos:column="9">MKTIMESTR<pos:position pos:line="129" pos:column="18"/></name><argument_list pos:line="129" pos:column="18">(<argument><literal type="string" pos:line="129" pos:column="19">"%02d"<pos:position pos:line="129" pos:column="25"/></literal></argument>, <argument pos:line="129" pos:column="27">tm_hour<pos:position pos:line="129" pos:column="34"/></argument>)<pos:position pos:line="129" pos:column="35"/></argument_list></macro>
    }<pos:position pos:line="130" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="131" pos:column="5">else <if pos:line="131" pos:column="10">if <condition pos:line="131" pos:column="13">(<expr><call><name pos:line="131" pos:column="14">strcasecmp<pos:position pos:line="131" pos:column="24"/></name><argument_list pos:line="131" pos:column="24">(<argument><expr><name pos:line="131" pos:column="25">var<pos:position pos:line="131" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="30">"TIME_MIN"<pos:position pos:line="131" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="41"/></argument_list></call> <operator pos:line="131" pos:column="42">==<pos:position pos:line="131" pos:column="44"/></operator> <literal type="number" pos:line="131" pos:column="45">0<pos:position pos:line="131" pos:column="46"/></literal></expr>)<pos:position pos:line="131" pos:column="47"/></condition><then pos:line="131" pos:column="47"> <block pos:line="131" pos:column="48">{
        <macro><name pos:line="132" pos:column="9">MKTIMESTR<pos:position pos:line="132" pos:column="18"/></name><argument_list pos:line="132" pos:column="18">(<argument><literal type="string" pos:line="132" pos:column="19">"%02d"<pos:position pos:line="132" pos:column="25"/></literal></argument>, <argument pos:line="132" pos:column="27">tm_min<pos:position pos:line="132" pos:column="33"/></argument>)<pos:position pos:line="132" pos:column="34"/></argument_list></macro>
    }<pos:position pos:line="133" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="134" pos:column="5">else <if pos:line="134" pos:column="10">if <condition pos:line="134" pos:column="13">(<expr><call><name pos:line="134" pos:column="14">strcasecmp<pos:position pos:line="134" pos:column="24"/></name><argument_list pos:line="134" pos:column="24">(<argument><expr><name pos:line="134" pos:column="25">var<pos:position pos:line="134" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="30">"TIME_SEC"<pos:position pos:line="134" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="41"/></argument_list></call> <operator pos:line="134" pos:column="42">==<pos:position pos:line="134" pos:column="44"/></operator> <literal type="number" pos:line="134" pos:column="45">0<pos:position pos:line="134" pos:column="46"/></literal></expr>)<pos:position pos:line="134" pos:column="47"/></condition><then pos:line="134" pos:column="47"> <block pos:line="134" pos:column="48">{
        <macro><name pos:line="135" pos:column="9">MKTIMESTR<pos:position pos:line="135" pos:column="18"/></name><argument_list pos:line="135" pos:column="18">(<argument><literal type="string" pos:line="135" pos:column="19">"%02d"<pos:position pos:line="135" pos:column="25"/></literal></argument>, <argument pos:line="135" pos:column="27">tm_sec<pos:position pos:line="135" pos:column="33"/></argument>)<pos:position pos:line="135" pos:column="34"/></argument_list></macro>
    }<pos:position pos:line="136" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="137" pos:column="5">else <if pos:line="137" pos:column="10">if <condition pos:line="137" pos:column="13">(<expr><call><name pos:line="137" pos:column="14">strcasecmp<pos:position pos:line="137" pos:column="24"/></name><argument_list pos:line="137" pos:column="24">(<argument><expr><name pos:line="137" pos:column="25">var<pos:position pos:line="137" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="30">"TIME_WDAY"<pos:position pos:line="137" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="42"/></argument_list></call> <operator pos:line="137" pos:column="43">==<pos:position pos:line="137" pos:column="45"/></operator> <literal type="number" pos:line="137" pos:column="46">0<pos:position pos:line="137" pos:column="47"/></literal></expr>)<pos:position pos:line="137" pos:column="48"/></condition><then pos:line="137" pos:column="48"> <block pos:line="137" pos:column="49">{
        <macro><name pos:line="138" pos:column="9">MKTIMESTR<pos:position pos:line="138" pos:column="18"/></name><argument_list pos:line="138" pos:column="18">(<argument><literal type="string" pos:line="138" pos:column="19">"%d"<pos:position pos:line="138" pos:column="23"/></literal></argument>, <argument pos:line="138" pos:column="25">tm_wday<pos:position pos:line="138" pos:column="32"/></argument>)<pos:position pos:line="138" pos:column="33"/></argument_list></macro>
    }<pos:position pos:line="139" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="140" pos:column="5">else <if pos:line="140" pos:column="10">if <condition pos:line="140" pos:column="13">(<expr><call><name pos:line="140" pos:column="14">strcasecmp<pos:position pos:line="140" pos:column="24"/></name><argument_list pos:line="140" pos:column="24">(<argument><expr><name pos:line="140" pos:column="25">var<pos:position pos:line="140" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="30">"TIME"<pos:position pos:line="140" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="37"/></argument_list></call> <operator pos:line="140" pos:column="38">==<pos:position pos:line="140" pos:column="40"/></operator> <literal type="number" pos:line="140" pos:column="41">0<pos:position pos:line="140" pos:column="42"/></literal></expr>)<pos:position pos:line="140" pos:column="43"/></condition><then pos:line="140" pos:column="43"> <block pos:line="140" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="141" pos:column="9">apr_time_exp_lt<pos:position pos:line="141" pos:column="24"/></name><argument_list pos:line="141" pos:column="24">(<argument><expr><operator pos:line="141" pos:column="25">&amp;<pos:position pos:line="141" pos:column="30"/></operator><name pos:line="141" pos:column="26">tm<pos:position pos:line="141" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="141" pos:column="30">apr_time_now<pos:position pos:line="141" pos:column="42"/></name><argument_list pos:line="141" pos:column="42">()<pos:position pos:line="141" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="141" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="142" pos:column="9">apr_snprintf<pos:position pos:line="142" pos:column="21"/></name><argument_list pos:line="142" pos:column="21">(<argument><expr><name pos:line="142" pos:column="22">resultbuf<pos:position pos:line="142" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="142" pos:column="33">sizeof<argument_list pos:line="142" pos:column="39">(<argument><expr><name pos:line="142" pos:column="40">resultbuf<pos:position pos:line="142" pos:column="49"/></name></expr></argument>)<pos:position pos:line="142" pos:column="50"/></argument_list></sizeof></expr></argument>,
                     <argument><expr><literal type="string" pos:line="143" pos:column="22">"%04d%02d%02d%02d%02d%02d"<pos:position pos:line="143" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="143" pos:column="50">tm<pos:position pos:line="143" pos:column="52"/></name><operator pos:line="143" pos:column="52">.<pos:position pos:line="143" pos:column="53"/></operator><name pos:line="143" pos:column="53">tm_year<pos:position pos:line="143" pos:column="60"/></name></name> <operator pos:line="143" pos:column="61">+<pos:position pos:line="143" pos:column="62"/></operator> <literal type="number" pos:line="143" pos:column="63">1900<pos:position pos:line="143" pos:column="67"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="144" pos:column="22">tm<pos:position pos:line="144" pos:column="24"/></name><operator pos:line="144" pos:column="24">.<pos:position pos:line="144" pos:column="25"/></operator><name pos:line="144" pos:column="25">tm_mon<pos:position pos:line="144" pos:column="31"/></name></name><operator pos:line="144" pos:column="31">+<pos:position pos:line="144" pos:column="32"/></operator><literal type="number" pos:line="144" pos:column="32">1<pos:position pos:line="144" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="144" pos:column="35">tm<pos:position pos:line="144" pos:column="37"/></name><operator pos:line="144" pos:column="37">.<pos:position pos:line="144" pos:column="38"/></operator><name pos:line="144" pos:column="38">tm_mday<pos:position pos:line="144" pos:column="45"/></name></name></expr></argument>,
                     <argument><expr><name><name pos:line="145" pos:column="22">tm<pos:position pos:line="145" pos:column="24"/></name><operator pos:line="145" pos:column="24">.<pos:position pos:line="145" pos:column="25"/></operator><name pos:line="145" pos:column="25">tm_hour<pos:position pos:line="145" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="34">tm<pos:position pos:line="145" pos:column="36"/></name><operator pos:line="145" pos:column="36">.<pos:position pos:line="145" pos:column="37"/></operator><name pos:line="145" pos:column="37">tm_min<pos:position pos:line="145" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="45">tm<pos:position pos:line="145" pos:column="47"/></name><operator pos:line="145" pos:column="47">.<pos:position pos:line="145" pos:column="48"/></operator><name pos:line="145" pos:column="48">tm_sec<pos:position pos:line="145" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name pos:line="146" pos:column="9">result<pos:position pos:line="146" pos:column="15"/></name> <operator pos:line="146" pos:column="16">=<pos:position pos:line="146" pos:column="17"/></operator> <name pos:line="146" pos:column="18">resultbuf<pos:position pos:line="146" pos:column="27"/></name></expr>;<pos:position pos:line="146" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="147" pos:column="9">rewritelog<pos:position pos:line="147" pos:column="19"/></name><argument_list pos:line="147" pos:column="19">(<argument><expr><name pos:line="147" pos:column="20">r<pos:position pos:line="147" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="147" pos:column="23">1<pos:position pos:line="147" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="26">"RESULT='%s'"<pos:position pos:line="147" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="147" pos:column="41">result<pos:position pos:line="147" pos:column="47"/></name></expr></argument>)<pos:position pos:line="147" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="148" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="150" pos:column="5">/* all other env-variables from the parent Apache process */</comment>
    <elseif pos:line="151" pos:column="5">else <if pos:line="151" pos:column="10">if <condition pos:line="151" pos:column="13">(<expr><call><name pos:line="151" pos:column="14">strlen<pos:position pos:line="151" pos:column="20"/></name><argument_list pos:line="151" pos:column="20">(<argument><expr><name pos:line="151" pos:column="21">var<pos:position pos:line="151" pos:column="24"/></name></expr></argument>)<pos:position pos:line="151" pos:column="25"/></argument_list></call> <operator pos:line="151" pos:column="26">&gt;<pos:position pos:line="151" pos:column="30"/></operator> <literal type="number" pos:line="151" pos:column="28">4<pos:position pos:line="151" pos:column="29"/></literal> <operator pos:line="151" pos:column="30">&amp;&amp;<pos:position pos:line="151" pos:column="40"/></operator> <call><name pos:line="151" pos:column="33">strncasecmp<pos:position pos:line="151" pos:column="44"/></name><argument_list pos:line="151" pos:column="44">(<argument><expr><name pos:line="151" pos:column="45">var<pos:position pos:line="151" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="50">"ENV:"<pos:position pos:line="151" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="151" pos:column="58">4<pos:position pos:line="151" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="60"/></argument_list></call> <operator pos:line="151" pos:column="61">==<pos:position pos:line="151" pos:column="63"/></operator> <literal type="number" pos:line="151" pos:column="64">0<pos:position pos:line="151" pos:column="65"/></literal></expr>)<pos:position pos:line="151" pos:column="66"/></condition><then pos:line="151" pos:column="66"> <block pos:line="151" pos:column="67">{
        <comment type="block" pos:line="152" pos:column="9">/* first try the internal Apache notes structure */</comment>
        <expr_stmt><expr><name pos:line="153" pos:column="9">result<pos:position pos:line="153" pos:column="15"/></name> <operator pos:line="153" pos:column="16">=<pos:position pos:line="153" pos:column="17"/></operator> <call><name pos:line="153" pos:column="18">apr_table_get<pos:position pos:line="153" pos:column="31"/></name><argument_list pos:line="153" pos:column="31">(<argument><expr><name><name pos:line="153" pos:column="32">r<pos:position pos:line="153" pos:column="33"/></name><operator pos:line="153" pos:column="33">-&gt;<pos:position pos:line="153" pos:column="38"/></operator><name pos:line="153" pos:column="35">notes<pos:position pos:line="153" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="42">var<pos:position pos:line="153" pos:column="45"/></name><operator pos:line="153" pos:column="45">+<pos:position pos:line="153" pos:column="46"/></operator><literal type="number" pos:line="153" pos:column="46">4<pos:position pos:line="153" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="49"/></expr_stmt>
        <comment type="block" pos:line="154" pos:column="9">/* second try the internal Apache env structure  */</comment>
        <if pos:line="155" pos:column="9">if <condition pos:line="155" pos:column="12">(<expr><name pos:line="155" pos:column="13">result<pos:position pos:line="155" pos:column="19"/></name> <operator pos:line="155" pos:column="20">==<pos:position pos:line="155" pos:column="22"/></operator> <name pos:line="155" pos:column="23">NULL<pos:position pos:line="155" pos:column="27"/></name></expr>)<pos:position pos:line="155" pos:column="28"/></condition><then pos:line="155" pos:column="28"> <block pos:line="155" pos:column="29">{
            <expr_stmt><expr><name pos:line="156" pos:column="13">result<pos:position pos:line="156" pos:column="19"/></name> <operator pos:line="156" pos:column="20">=<pos:position pos:line="156" pos:column="21"/></operator> <call><name pos:line="156" pos:column="22">apr_table_get<pos:position pos:line="156" pos:column="35"/></name><argument_list pos:line="156" pos:column="35">(<argument><expr><name><name pos:line="156" pos:column="36">r<pos:position pos:line="156" pos:column="37"/></name><operator pos:line="156" pos:column="37">-&gt;<pos:position pos:line="156" pos:column="42"/></operator><name pos:line="156" pos:column="39">subprocess_env<pos:position pos:line="156" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="55">var<pos:position pos:line="156" pos:column="58"/></name><operator pos:line="156" pos:column="58">+<pos:position pos:line="156" pos:column="59"/></operator><literal type="number" pos:line="156" pos:column="59">4<pos:position pos:line="156" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="157" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="158" pos:column="9">/* third try the external OS env */</comment>
        <if pos:line="159" pos:column="9">if <condition pos:line="159" pos:column="12">(<expr><name pos:line="159" pos:column="13">result<pos:position pos:line="159" pos:column="19"/></name> <operator pos:line="159" pos:column="20">==<pos:position pos:line="159" pos:column="22"/></operator> <name pos:line="159" pos:column="23">NULL<pos:position pos:line="159" pos:column="27"/></name></expr>)<pos:position pos:line="159" pos:column="28"/></condition><then pos:line="159" pos:column="28"> <block pos:line="159" pos:column="29">{
            <expr_stmt><expr><name pos:line="160" pos:column="13">result<pos:position pos:line="160" pos:column="19"/></name> <operator pos:line="160" pos:column="20">=<pos:position pos:line="160" pos:column="21"/></operator> <call><name pos:line="160" pos:column="22">getenv<pos:position pos:line="160" pos:column="28"/></name><argument_list pos:line="160" pos:column="28">(<argument><expr><name pos:line="160" pos:column="29">var<pos:position pos:line="160" pos:column="32"/></name><operator pos:line="160" pos:column="32">+<pos:position pos:line="160" pos:column="33"/></operator><literal type="number" pos:line="160" pos:column="33">4<pos:position pos:line="160" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="161" pos:column="10"/></block></then></if>
    }<pos:position pos:line="162" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="163" pos:column="5">else <if pos:line="163" pos:column="10">if <condition pos:line="163" pos:column="13">(<expr><call><name pos:line="163" pos:column="14">strlen<pos:position pos:line="163" pos:column="20"/></name><argument_list pos:line="163" pos:column="20">(<argument><expr><name pos:line="163" pos:column="21">var<pos:position pos:line="163" pos:column="24"/></name></expr></argument>)<pos:position pos:line="163" pos:column="25"/></argument_list></call> <operator pos:line="163" pos:column="26">&gt;<pos:position pos:line="163" pos:column="30"/></operator> <literal type="number" pos:line="163" pos:column="28">4<pos:position pos:line="163" pos:column="29"/></literal> <operator pos:line="163" pos:column="30">&amp;&amp;<pos:position pos:line="163" pos:column="40"/></operator> <operator pos:line="163" pos:column="33">!<pos:position pos:line="163" pos:column="34"/></operator><call><name pos:line="163" pos:column="34">strncasecmp<pos:position pos:line="163" pos:column="45"/></name><argument_list pos:line="163" pos:column="45">(<argument><expr><name pos:line="163" pos:column="46">var<pos:position pos:line="163" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="51">"SSL:"<pos:position pos:line="163" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="59">4<pos:position pos:line="163" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="61"/></argument_list></call> 
             <operator pos:line="164" pos:column="14">&amp;&amp;<pos:position pos:line="164" pos:column="24"/></operator> <name pos:line="164" pos:column="17">rewrite_ssl_lookup<pos:position pos:line="164" pos:column="35"/></name></expr>)<pos:position pos:line="164" pos:column="36"/></condition><then pos:line="164" pos:column="36"> <block pos:line="164" pos:column="37">{
        <expr_stmt><expr><name pos:line="165" pos:column="9">result<pos:position pos:line="165" pos:column="15"/></name> <operator pos:line="165" pos:column="16">=<pos:position pos:line="165" pos:column="17"/></operator> <call><name pos:line="165" pos:column="18">rewrite_ssl_lookup<pos:position pos:line="165" pos:column="36"/></name><argument_list pos:line="165" pos:column="36">(<argument><expr><name><name pos:line="165" pos:column="37">r<pos:position pos:line="165" pos:column="38"/></name><operator pos:line="165" pos:column="38">-&gt;<pos:position pos:line="165" pos:column="43"/></operator><name pos:line="165" pos:column="40">pool<pos:position pos:line="165" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="46">r<pos:position pos:line="165" pos:column="47"/></name><operator pos:line="165" pos:column="47">-&gt;<pos:position pos:line="165" pos:column="52"/></operator><name pos:line="165" pos:column="49">server<pos:position pos:line="165" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="57">r<pos:position pos:line="165" pos:column="58"/></name><operator pos:line="165" pos:column="58">-&gt;<pos:position pos:line="165" pos:column="63"/></operator><name pos:line="165" pos:column="60">connection<pos:position pos:line="165" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="72">r<pos:position pos:line="165" pos:column="73"/></name></expr></argument>, 
                                    <argument><expr><name pos:line="166" pos:column="37">var<pos:position pos:line="166" pos:column="40"/></name> <operator pos:line="166" pos:column="41">+<pos:position pos:line="166" pos:column="42"/></operator> <literal type="number" pos:line="166" pos:column="43">4<pos:position pos:line="166" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="167" pos:column="6"/></block></then></if></elseif>

<cpp:define pos:line="169" pos:column="1">#<cpp:directive pos:line="169" pos:column="2">define<pos:position pos:line="169" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="169" pos:column="9">LOOKAHEAD<pos:position pos:line="169" pos:column="18"/></name><parameter_list pos:line="169" pos:column="18">(<parameter><type><name pos:line="169" pos:column="19">subrecfunc<pos:position pos:line="169" pos:column="29"/></name></type></parameter>)<pos:position pos:line="169" pos:column="30"/></parameter_list></cpp:macro> \
        <cpp:value pos:line="170" pos:column="9">if ( \
          <comment type="block" pos:line="171" pos:column="11">/* filename is safe to use */</comment> \
          r-&gt;filename != NULL \
              <comment type="block" pos:line="173" pos:column="15">/* - and we're either not in a subrequest */</comment> \
              &amp;&amp; ( r-&gt;main == NULL \
                  <comment type="block" pos:line="175" pos:column="19">/* - or in a subrequest where paths are non-NULL... */</comment> \
                    || ( r-&gt;main-&gt;uri != NULL &amp;&amp; r-&gt;uri != NULL \
                        <comment type="block" pos:line="177" pos:column="25">/*   ...and sub and main paths differ */</comment> \
                        &amp;&amp; strcmp(r-&gt;main-&gt;uri, r-&gt;uri) != 0))) { \
            <comment type="block" pos:line="179" pos:column="13">/* process a file-based subrequest */</comment> \
            rsub = subrecfunc(r-&gt;filename, r, NULL); \
            <comment type="block" pos:line="181" pos:column="13">/* now recursively lookup the variable in the sub_req */</comment> \
            result = lookup_variable(rsub, var+5); \
            <comment type="block" pos:line="183" pos:column="13">/* copy it up to our scope before we destroy sub_req's apr_pool_t */</comment> \
            result = apr_pstrdup(r-&gt;pool, result); \
            <comment type="block" pos:line="185" pos:column="13">/* cleanup by destroying the subrequest */</comment> \
            ap_destroy_sub_req(rsub); \
            <comment type="block" pos:line="187" pos:column="13">/* log it */</comment> \
            rewritelog(r, 5, "lookahead: path=%s var=%s -&gt; val=%s", \
                       r-&gt;filename, var+5, result); \
            <comment type="block" pos:line="190" pos:column="13">/* return ourself to prevent re-pstrdup */</comment> \
            return (char *)result; \
        }<pos:position pos:line="192" pos:column="10"/></cpp:value></cpp:define>

    <comment type="block" pos:line="194" pos:column="5">/* look-ahead for parameter through URI-based sub-request */</comment>
    <elseif pos:line="195" pos:column="5">else <if pos:line="195" pos:column="10">if <condition pos:line="195" pos:column="13">(<expr><call><name pos:line="195" pos:column="14">strlen<pos:position pos:line="195" pos:column="20"/></name><argument_list pos:line="195" pos:column="20">(<argument><expr><name pos:line="195" pos:column="21">var<pos:position pos:line="195" pos:column="24"/></name></expr></argument>)<pos:position pos:line="195" pos:column="25"/></argument_list></call> <operator pos:line="195" pos:column="26">&gt;<pos:position pos:line="195" pos:column="30"/></operator> <literal type="number" pos:line="195" pos:column="28">5<pos:position pos:line="195" pos:column="29"/></literal> <operator pos:line="195" pos:column="30">&amp;&amp;<pos:position pos:line="195" pos:column="40"/></operator> <call><name pos:line="195" pos:column="33">strncasecmp<pos:position pos:line="195" pos:column="44"/></name><argument_list pos:line="195" pos:column="44">(<argument><expr><name pos:line="195" pos:column="45">var<pos:position pos:line="195" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="195" pos:column="50">"LA-U:"<pos:position pos:line="195" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="195" pos:column="59">5<pos:position pos:line="195" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="195" pos:column="61"/></argument_list></call> <operator pos:line="195" pos:column="62">==<pos:position pos:line="195" pos:column="64"/></operator> <literal type="number" pos:line="195" pos:column="65">0<pos:position pos:line="195" pos:column="66"/></literal></expr>)<pos:position pos:line="195" pos:column="67"/></condition><then pos:line="195" pos:column="67"> <block pos:line="195" pos:column="68">{
        <macro><name pos:line="196" pos:column="9">LOOKAHEAD<pos:position pos:line="196" pos:column="18"/></name><argument_list pos:line="196" pos:column="18">(<argument pos:line="196" pos:column="19">ap_sub_req_lookup_uri<pos:position pos:line="196" pos:column="40"/></argument>)<pos:position pos:line="196" pos:column="41"/></argument_list></macro>
    }<pos:position pos:line="197" pos:column="6"/></block></then></if></elseif>
    <comment type="block" pos:line="198" pos:column="5">/* look-ahead for parameter through file-based sub-request */</comment>
    <elseif pos:line="199" pos:column="5">else <if pos:line="199" pos:column="10">if <condition pos:line="199" pos:column="13">(<expr><call><name pos:line="199" pos:column="14">strlen<pos:position pos:line="199" pos:column="20"/></name><argument_list pos:line="199" pos:column="20">(<argument><expr><name pos:line="199" pos:column="21">var<pos:position pos:line="199" pos:column="24"/></name></expr></argument>)<pos:position pos:line="199" pos:column="25"/></argument_list></call> <operator pos:line="199" pos:column="26">&gt;<pos:position pos:line="199" pos:column="30"/></operator> <literal type="number" pos:line="199" pos:column="28">5<pos:position pos:line="199" pos:column="29"/></literal> <operator pos:line="199" pos:column="30">&amp;&amp;<pos:position pos:line="199" pos:column="40"/></operator> <call><name pos:line="199" pos:column="33">strncasecmp<pos:position pos:line="199" pos:column="44"/></name><argument_list pos:line="199" pos:column="44">(<argument><expr><name pos:line="199" pos:column="45">var<pos:position pos:line="199" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="199" pos:column="50">"LA-F:"<pos:position pos:line="199" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="199" pos:column="59">5<pos:position pos:line="199" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="61"/></argument_list></call> <operator pos:line="199" pos:column="62">==<pos:position pos:line="199" pos:column="64"/></operator> <literal type="number" pos:line="199" pos:column="65">0<pos:position pos:line="199" pos:column="66"/></literal></expr>)<pos:position pos:line="199" pos:column="67"/></condition><then pos:line="199" pos:column="67"> <block pos:line="199" pos:column="68">{
        <macro><name pos:line="200" pos:column="9">LOOKAHEAD<pos:position pos:line="200" pos:column="18"/></name><argument_list pos:line="200" pos:column="18">(<argument pos:line="200" pos:column="19">ap_sub_req_lookup_file<pos:position pos:line="200" pos:column="41"/></argument>)<pos:position pos:line="200" pos:column="42"/></argument_list></macro>
    }<pos:position pos:line="201" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="203" pos:column="5">/* file stuff */</comment>
    <elseif pos:line="204" pos:column="5">else <if pos:line="204" pos:column="10">if <condition pos:line="204" pos:column="13">(<expr><call><name pos:line="204" pos:column="14">strcasecmp<pos:position pos:line="204" pos:column="24"/></name><argument_list pos:line="204" pos:column="24">(<argument><expr><name pos:line="204" pos:column="25">var<pos:position pos:line="204" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="204" pos:column="30">"SCRIPT_USER"<pos:position pos:line="204" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="204" pos:column="44"/></argument_list></call> <operator pos:line="204" pos:column="45">==<pos:position pos:line="204" pos:column="47"/></operator> <literal type="number" pos:line="204" pos:column="48">0<pos:position pos:line="204" pos:column="49"/></literal></expr>)<pos:position pos:line="204" pos:column="50"/></condition><then pos:line="204" pos:column="50"> <block pos:line="204" pos:column="51">{
        <expr_stmt><expr><name pos:line="205" pos:column="9">result<pos:position pos:line="205" pos:column="15"/></name> <operator pos:line="205" pos:column="16">=<pos:position pos:line="205" pos:column="17"/></operator> <literal type="string" pos:line="205" pos:column="18">"&lt;unknown&gt;"<pos:position pos:line="205" pos:column="35"/></literal></expr>;<pos:position pos:line="205" pos:column="30"/></expr_stmt>
        <if pos:line="206" pos:column="9">if <condition pos:line="206" pos:column="12">(<expr><name><name pos:line="206" pos:column="13">r<pos:position pos:line="206" pos:column="14"/></name><operator pos:line="206" pos:column="14">-&gt;<pos:position pos:line="206" pos:column="19"/></operator><name pos:line="206" pos:column="16">finfo<pos:position pos:line="206" pos:column="21"/></name><operator pos:line="206" pos:column="21">.<pos:position pos:line="206" pos:column="22"/></operator><name pos:line="206" pos:column="22">valid<pos:position pos:line="206" pos:column="27"/></name></name> <operator pos:line="206" pos:column="28">&amp;<pos:position pos:line="206" pos:column="33"/></operator> <name pos:line="206" pos:column="30">APR_FINFO_USER<pos:position pos:line="206" pos:column="44"/></name></expr>)<pos:position pos:line="206" pos:column="45"/></condition><then pos:line="206" pos:column="45"> <block pos:line="206" pos:column="46">{
            <expr_stmt><expr><call><name pos:line="207" pos:column="13">apr_get_username<pos:position pos:line="207" pos:column="29"/></name><argument_list pos:line="207" pos:column="29">(<argument><expr><operator pos:line="207" pos:column="30">(<pos:position pos:line="207" pos:column="31"/></operator><name pos:line="207" pos:column="31">char<pos:position pos:line="207" pos:column="35"/></name> <operator pos:line="207" pos:column="36">*<pos:position pos:line="207" pos:column="37"/></operator><operator pos:line="207" pos:column="37">*<pos:position pos:line="207" pos:column="38"/></operator><operator pos:line="207" pos:column="38">)<pos:position pos:line="207" pos:column="39"/></operator><operator pos:line="207" pos:column="39">&amp;<pos:position pos:line="207" pos:column="44"/></operator><name pos:line="207" pos:column="40">result<pos:position pos:line="207" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="207" pos:column="48">r<pos:position pos:line="207" pos:column="49"/></name><operator pos:line="207" pos:column="49">-&gt;<pos:position pos:line="207" pos:column="54"/></operator><name pos:line="207" pos:column="51">finfo<pos:position pos:line="207" pos:column="56"/></name><operator pos:line="207" pos:column="56">.<pos:position pos:line="207" pos:column="57"/></operator><name pos:line="207" pos:column="57">user<pos:position pos:line="207" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="207" pos:column="63">r<pos:position pos:line="207" pos:column="64"/></name><operator pos:line="207" pos:column="64">-&gt;<pos:position pos:line="207" pos:column="69"/></operator><name pos:line="207" pos:column="66">pool<pos:position pos:line="207" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="207" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="208" pos:column="10"/></block></then></if>
    }<pos:position pos:line="209" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="210" pos:column="5">else <if pos:line="210" pos:column="10">if <condition pos:line="210" pos:column="13">(<expr><call><name pos:line="210" pos:column="14">strcasecmp<pos:position pos:line="210" pos:column="24"/></name><argument_list pos:line="210" pos:column="24">(<argument><expr><name pos:line="210" pos:column="25">var<pos:position pos:line="210" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="210" pos:column="30">"SCRIPT_GROUP"<pos:position pos:line="210" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="210" pos:column="45"/></argument_list></call> <operator pos:line="210" pos:column="46">==<pos:position pos:line="210" pos:column="48"/></operator> <literal type="number" pos:line="210" pos:column="49">0<pos:position pos:line="210" pos:column="50"/></literal></expr>)<pos:position pos:line="210" pos:column="51"/></condition><then pos:line="210" pos:column="51"> <block pos:line="210" pos:column="52">{
        <expr_stmt><expr><name pos:line="211" pos:column="9">result<pos:position pos:line="211" pos:column="15"/></name> <operator pos:line="211" pos:column="16">=<pos:position pos:line="211" pos:column="17"/></operator> <literal type="string" pos:line="211" pos:column="18">"&lt;unknown&gt;"<pos:position pos:line="211" pos:column="35"/></literal></expr>;<pos:position pos:line="211" pos:column="30"/></expr_stmt>
        <if pos:line="212" pos:column="9">if <condition pos:line="212" pos:column="12">(<expr><name><name pos:line="212" pos:column="13">r<pos:position pos:line="212" pos:column="14"/></name><operator pos:line="212" pos:column="14">-&gt;<pos:position pos:line="212" pos:column="19"/></operator><name pos:line="212" pos:column="16">finfo<pos:position pos:line="212" pos:column="21"/></name><operator pos:line="212" pos:column="21">.<pos:position pos:line="212" pos:column="22"/></operator><name pos:line="212" pos:column="22">valid<pos:position pos:line="212" pos:column="27"/></name></name> <operator pos:line="212" pos:column="28">&amp;<pos:position pos:line="212" pos:column="33"/></operator> <name pos:line="212" pos:column="30">APR_FINFO_GROUP<pos:position pos:line="212" pos:column="45"/></name></expr>)<pos:position pos:line="212" pos:column="46"/></condition><then pos:line="212" pos:column="46"> <block pos:line="212" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="213" pos:column="13">apr_group_name_get<pos:position pos:line="213" pos:column="31"/></name><argument_list pos:line="213" pos:column="31">(<argument><expr><operator pos:line="213" pos:column="32">(<pos:position pos:line="213" pos:column="33"/></operator><name pos:line="213" pos:column="33">char<pos:position pos:line="213" pos:column="37"/></name> <operator pos:line="213" pos:column="38">*<pos:position pos:line="213" pos:column="39"/></operator><operator pos:line="213" pos:column="39">*<pos:position pos:line="213" pos:column="40"/></operator><operator pos:line="213" pos:column="40">)<pos:position pos:line="213" pos:column="41"/></operator><operator pos:line="213" pos:column="41">&amp;<pos:position pos:line="213" pos:column="46"/></operator><name pos:line="213" pos:column="42">result<pos:position pos:line="213" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="213" pos:column="50">r<pos:position pos:line="213" pos:column="51"/></name><operator pos:line="213" pos:column="51">-&gt;<pos:position pos:line="213" pos:column="56"/></operator><name pos:line="213" pos:column="53">finfo<pos:position pos:line="213" pos:column="58"/></name><operator pos:line="213" pos:column="58">.<pos:position pos:line="213" pos:column="59"/></operator><name pos:line="213" pos:column="59">group<pos:position pos:line="213" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="213" pos:column="66">r<pos:position pos:line="213" pos:column="67"/></name><operator pos:line="213" pos:column="67">-&gt;<pos:position pos:line="213" pos:column="72"/></operator><name pos:line="213" pos:column="69">pool<pos:position pos:line="213" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="213" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="75"/></expr_stmt>
        }<pos:position pos:line="214" pos:column="10"/></block></then></if>
    }<pos:position pos:line="215" pos:column="6"/></block></then></if></elseif> <elseif pos:line="215" pos:column="7">else <if pos:line="215" pos:column="12">if <condition pos:line="215" pos:column="15">(<expr><call><name pos:line="215" pos:column="16">strcasecmp<pos:position pos:line="215" pos:column="26"/></name><argument_list pos:line="215" pos:column="26">(<argument><expr><name pos:line="215" pos:column="27">var<pos:position pos:line="215" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="215" pos:column="32">"HTTPS"<pos:position pos:line="215" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="40"/></argument_list></call> <operator pos:line="215" pos:column="41">==<pos:position pos:line="215" pos:column="43"/></operator> <literal type="number" pos:line="215" pos:column="44">0<pos:position pos:line="215" pos:column="45"/></literal></expr>)<pos:position pos:line="215" pos:column="46"/></condition><then pos:line="215" pos:column="46"> <block pos:line="215" pos:column="47">{
        <decl_stmt><decl><type><name pos:line="216" pos:column="9">int<pos:position pos:line="216" pos:column="12"/></name></type> <name pos:line="216" pos:column="13">flag<pos:position pos:line="216" pos:column="17"/></name> <init pos:line="216" pos:column="18">= <expr><name pos:line="216" pos:column="20">rewrite_is_https<pos:position pos:line="216" pos:column="36"/></name> <operator pos:line="216" pos:column="37">&amp;&amp;<pos:position pos:line="216" pos:column="47"/></operator> <call><name pos:line="216" pos:column="40">rewrite_is_https<pos:position pos:line="216" pos:column="56"/></name><argument_list pos:line="216" pos:column="56">(<argument><expr><name><name pos:line="216" pos:column="57">r<pos:position pos:line="216" pos:column="58"/></name><operator pos:line="216" pos:column="58">-&gt;<pos:position pos:line="216" pos:column="63"/></operator><name pos:line="216" pos:column="60">connection<pos:position pos:line="216" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="216" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="216" pos:column="72"/></decl_stmt>
        <expr_stmt><expr><name pos:line="217" pos:column="9">result<pos:position pos:line="217" pos:column="15"/></name> <operator pos:line="217" pos:column="16">=<pos:position pos:line="217" pos:column="17"/></operator> <ternary><condition><expr><name pos:line="217" pos:column="18">flag<pos:position pos:line="217" pos:column="22"/></name></expr> ?<pos:position pos:line="217" pos:column="24"/></condition><then pos:line="217" pos:column="24"> <expr><literal type="string" pos:line="217" pos:column="25">"on"<pos:position pos:line="217" pos:column="29"/></literal></expr> <pos:position pos:line="217" pos:column="30"/></then><else pos:line="217" pos:column="30">: <expr><literal type="string" pos:line="217" pos:column="32">"off"<pos:position pos:line="217" pos:column="37"/></literal></expr></else></ternary></expr>;<pos:position pos:line="217" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="218" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="220" pos:column="5">if <condition pos:line="220" pos:column="8">(<expr><name pos:line="220" pos:column="9">result<pos:position pos:line="220" pos:column="15"/></name> <operator pos:line="220" pos:column="16">==<pos:position pos:line="220" pos:column="18"/></operator> <name pos:line="220" pos:column="19">NULL<pos:position pos:line="220" pos:column="23"/></name></expr>)<pos:position pos:line="220" pos:column="24"/></condition><then pos:line="220" pos:column="24"> <block pos:line="220" pos:column="25">{
        <return pos:line="221" pos:column="9">return <expr><call><name pos:line="221" pos:column="16">apr_pstrdup<pos:position pos:line="221" pos:column="27"/></name><argument_list pos:line="221" pos:column="27">(<argument><expr><name><name pos:line="221" pos:column="28">r<pos:position pos:line="221" pos:column="29"/></name><operator pos:line="221" pos:column="29">-&gt;<pos:position pos:line="221" pos:column="34"/></operator><name pos:line="221" pos:column="31">pool<pos:position pos:line="221" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="221" pos:column="37">""<pos:position pos:line="221" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="221" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="41"/></return>
    }<pos:position pos:line="222" pos:column="6"/></block></then>
    <else pos:line="223" pos:column="5">else <block pos:line="223" pos:column="10">{
        <return pos:line="224" pos:column="9">return <expr><call><name pos:line="224" pos:column="16">apr_pstrdup<pos:position pos:line="224" pos:column="27"/></name><argument_list pos:line="224" pos:column="27">(<argument><expr><name><name pos:line="224" pos:column="28">r<pos:position pos:line="224" pos:column="29"/></name><operator pos:line="224" pos:column="29">-&gt;<pos:position pos:line="224" pos:column="34"/></operator><name pos:line="224" pos:column="31">pool<pos:position pos:line="224" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="37">result<pos:position pos:line="224" pos:column="43"/></name></expr></argument>)<pos:position pos:line="224" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="45"/></return>
    }<pos:position pos:line="225" pos:column="6"/></block></else></if>
}<pos:position pos:line="226" pos:column="2"/></block></function></unit>

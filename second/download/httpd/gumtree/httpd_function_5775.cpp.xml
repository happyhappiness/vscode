<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5775.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">usage<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">progname<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">fprintf<pos:position pos:line="3" pos:column="12"/></name><argument_list pos:line="3" pos:column="12">(<argument><expr><name pos:line="3" pos:column="13">stderr<pos:position pos:line="3" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="21">"Usage: %s [options] [http"<pos:position pos:line="3" pos:column="48"/></literal>
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">USE_SSL<pos:position pos:line="4" pos:column="15"/></name></cpp:ifdef>
        <literal type="string" pos:line="5" pos:column="9">"[s]"<pos:position pos:line="5" pos:column="14"/></literal>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>
        <literal type="string" pos:line="7" pos:column="9">"://]hostname[:port]/path\n"<pos:position pos:line="7" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="39">progname<pos:position pos:line="7" pos:column="47"/></name></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="49"/></expr_stmt>
<comment type="block" pos:line="8" pos:column="1">/* 80 column ruler:  ********************************************************************************
 */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">fprintf<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">stderr<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="21">"Options are:\n"<pos:position pos:line="10" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">fprintf<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">stderr<pos:position pos:line="11" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="21">"    -n requests     Number of requests to perform\n"<pos:position pos:line="11" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">fprintf<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">stderr<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="21">"    -c concurrency  Number of multiple requests to make at a time\n"<pos:position pos:line="12" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="92"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">fprintf<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">stderr<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="21">"    -t timelimit    Seconds to max. to spend on benchmarking\n"<pos:position pos:line="13" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="87"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">fprintf<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">stderr<pos:position pos:line="14" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="21">"                    This implies -n 50000\n"<pos:position pos:line="14" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">fprintf<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">stderr<pos:position pos:line="15" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="21">"    -s timeout      Seconds to max. wait for each response\n"<pos:position pos:line="15" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="85"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">fprintf<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">stderr<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="21">"                    Default is 30 seconds\n"<pos:position pos:line="16" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">fprintf<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">stderr<pos:position pos:line="17" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="21">"    -b windowsize   Size of TCP send/receive buffer, in bytes\n"<pos:position pos:line="17" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="88"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">fprintf<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">stderr<pos:position pos:line="18" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="21">"    -B address      Address to bind to when making outgoing connections\n"<pos:position pos:line="18" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="98"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">fprintf<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">stderr<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="21">"    -p postfile     File containing data to POST. Remember also to set -T\n"<pos:position pos:line="19" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="100"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">fprintf<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">stderr<pos:position pos:line="20" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="21">"    -u putfile      File containing data to PUT. Remember also to set -T\n"<pos:position pos:line="20" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="99"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">fprintf<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">stderr<pos:position pos:line="21" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="21">"    -T content-type Content-type header to use for POST/PUT data, eg.\n"<pos:position pos:line="21" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="96"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">fprintf<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">stderr<pos:position pos:line="22" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="21">"                    'application/x-www-form-urlencoded'\n"<pos:position pos:line="22" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">fprintf<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><name pos:line="23" pos:column="13">stderr<pos:position pos:line="23" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="21">"                    Default is 'text/plain'\n"<pos:position pos:line="23" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">fprintf<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">stderr<pos:position pos:line="24" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="21">"    -v verbosity    How much troubleshooting info to print\n"<pos:position pos:line="24" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="85"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">fprintf<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><name pos:line="25" pos:column="13">stderr<pos:position pos:line="25" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="21">"    -w              Print out results in HTML tables\n"<pos:position pos:line="25" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">fprintf<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><name pos:line="26" pos:column="13">stderr<pos:position pos:line="26" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="21">"    -i              Use HEAD instead of GET\n"<pos:position pos:line="26" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">fprintf<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">stderr<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="21">"    -x attributes   String to insert as table attributes\n"<pos:position pos:line="27" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="83"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">fprintf<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><name pos:line="28" pos:column="13">stderr<pos:position pos:line="28" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="21">"    -y attributes   String to insert as tr attributes\n"<pos:position pos:line="28" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">fprintf<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">stderr<pos:position pos:line="29" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="21">"    -z attributes   String to insert as td or th attributes\n"<pos:position pos:line="29" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="86"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">fprintf<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">stderr<pos:position pos:line="30" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="21">"    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)\n"<pos:position pos:line="30" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="90"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">fprintf<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">stderr<pos:position pos:line="31" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="21">"    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'\n"<pos:position pos:line="31" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="101"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">fprintf<pos:position pos:line="32" pos:column="12"/></name><argument_list pos:line="32" pos:column="12">(<argument><expr><name pos:line="32" pos:column="13">stderr<pos:position pos:line="32" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="21">"                    Inserted after all normal header lines. (repeatable)\n"<pos:position pos:line="32" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="99"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">fprintf<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><name pos:line="33" pos:column="13">stderr<pos:position pos:line="33" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="21">"    -A attribute    Add Basic WWW Authentication, the attributes\n"<pos:position pos:line="33" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="91"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">fprintf<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">stderr<pos:position pos:line="34" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="21">"                    are a colon separated username and password.\n"<pos:position pos:line="34" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="91"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">fprintf<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><name pos:line="35" pos:column="13">stderr<pos:position pos:line="35" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="21">"    -P attribute    Add Basic Proxy Authentication, the attributes\n"<pos:position pos:line="35" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="93"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">fprintf<pos:position pos:line="36" pos:column="12"/></name><argument_list pos:line="36" pos:column="12">(<argument><expr><name pos:line="36" pos:column="13">stderr<pos:position pos:line="36" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="21">"                    are a colon separated username and password.\n"<pos:position pos:line="36" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="91"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">fprintf<pos:position pos:line="37" pos:column="12"/></name><argument_list pos:line="37" pos:column="12">(<argument><expr><name pos:line="37" pos:column="13">stderr<pos:position pos:line="37" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="21">"    -X proxy:port   Proxyserver and port number to use\n"<pos:position pos:line="37" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">fprintf<pos:position pos:line="38" pos:column="12"/></name><argument_list pos:line="38" pos:column="12">(<argument><expr><name pos:line="38" pos:column="13">stderr<pos:position pos:line="38" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="21">"    -V              Print version number and exit\n"<pos:position pos:line="38" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">fprintf<pos:position pos:line="39" pos:column="12"/></name><argument_list pos:line="39" pos:column="12">(<argument><expr><name pos:line="39" pos:column="13">stderr<pos:position pos:line="39" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="21">"    -k              Use HTTP KeepAlive feature\n"<pos:position pos:line="39" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">fprintf<pos:position pos:line="40" pos:column="12"/></name><argument_list pos:line="40" pos:column="12">(<argument><expr><name pos:line="40" pos:column="13">stderr<pos:position pos:line="40" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="21">"    -d              Do not show percentiles served table.\n"<pos:position pos:line="40" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="84"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">fprintf<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">stderr<pos:position pos:line="41" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="21">"    -S              Do not show confidence estimators and warnings.\n"<pos:position pos:line="41" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="94"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">fprintf<pos:position pos:line="42" pos:column="12"/></name><argument_list pos:line="42" pos:column="12">(<argument><expr><name pos:line="42" pos:column="13">stderr<pos:position pos:line="42" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="21">"    -q              Do not show progress when doing more than 150 requests\n"<pos:position pos:line="42" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="101"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">fprintf<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><name pos:line="43" pos:column="13">stderr<pos:position pos:line="43" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="21">"    -l              Accept variable document length (use this for dynamic pages)\n"<pos:position pos:line="43" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="107"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">fprintf<pos:position pos:line="44" pos:column="12"/></name><argument_list pos:line="44" pos:column="12">(<argument><expr><name pos:line="44" pos:column="13">stderr<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="21">"    -g filename     Output collected data to gnuplot format file.\n"<pos:position pos:line="44" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="92"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">fprintf<pos:position pos:line="45" pos:column="12"/></name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">stderr<pos:position pos:line="45" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="21">"    -e filename     Output CSV file with percentages served\n"<pos:position pos:line="45" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="86"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">fprintf<pos:position pos:line="46" pos:column="12"/></name><argument_list pos:line="46" pos:column="12">(<argument><expr><name pos:line="46" pos:column="13">stderr<pos:position pos:line="46" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="21">"    -r              Don't exit on socket receive errors.\n"<pos:position pos:line="46" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="83"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">fprintf<pos:position pos:line="47" pos:column="12"/></name><argument_list pos:line="47" pos:column="12">(<argument><expr><name pos:line="47" pos:column="13">stderr<pos:position pos:line="47" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="21">"    -m method       Method name\n"<pos:position pos:line="47" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">fprintf<pos:position pos:line="48" pos:column="12"/></name><argument_list pos:line="48" pos:column="12">(<argument><expr><name pos:line="48" pos:column="13">stderr<pos:position pos:line="48" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="21">"    -h              Display usage information (this message)\n"<pos:position pos:line="48" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="87"/></expr_stmt>
<cpp:ifdef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifdef<pos:position pos:line="49" pos:column="7"/></cpp:directive> <name pos:line="49" pos:column="8">USE_SSL<pos:position pos:line="49" pos:column="15"/></name></cpp:ifdef>

<cpp:ifndef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifndef<pos:position pos:line="51" pos:column="8"/></cpp:directive> <name pos:line="51" pos:column="9">OPENSSL_NO_SSL2<pos:position pos:line="51" pos:column="24"/></name></cpp:ifndef>
<cpp:define pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">define<pos:position pos:line="52" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="52" pos:column="9">SSL2_HELP_MSG<pos:position pos:line="52" pos:column="22"/></name></cpp:macro> <cpp:value pos:line="52" pos:column="23">"SSL2, "<pos:position pos:line="52" pos:column="31"/></cpp:value></cpp:define>
<cpp:else pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">else<pos:position pos:line="53" pos:column="6"/></cpp:directive></cpp:else>
<cpp:define pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">define<pos:position pos:line="54" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="54" pos:column="9">SSL2_HELP_MSG<pos:position pos:line="54" pos:column="22"/></name></cpp:macro> <cpp:value pos:line="54" pos:column="23">""<pos:position pos:line="54" pos:column="25"/></cpp:value></cpp:define>
<cpp:endif pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">endif<pos:position pos:line="55" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifdef<pos:position pos:line="57" pos:column="7"/></cpp:directive> <name pos:line="57" pos:column="8">HAVE_TLSV1_X<pos:position pos:line="57" pos:column="20"/></name></cpp:ifdef>
<cpp:define pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">define<pos:position pos:line="58" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="58" pos:column="9">TLS1_X_HELP_MSG<pos:position pos:line="58" pos:column="24"/></name></cpp:macro> <cpp:value pos:line="58" pos:column="25">", TLS1.1, TLS1.2"<pos:position pos:line="58" pos:column="43"/></cpp:value></cpp:define>
<cpp:else pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">else<pos:position pos:line="59" pos:column="6"/></cpp:directive></cpp:else>
<cpp:define pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">define<pos:position pos:line="60" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="60" pos:column="9">TLS1_X_HELP_MSG<pos:position pos:line="60" pos:column="24"/></name></cpp:macro> <cpp:value pos:line="60" pos:column="25">""<pos:position pos:line="60" pos:column="27"/></cpp:value></cpp:define>
<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="63" pos:column="5">fprintf<pos:position pos:line="63" pos:column="12"/></name><argument_list pos:line="63" pos:column="12">(<argument><expr><name pos:line="63" pos:column="13">stderr<pos:position pos:line="63" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="21">"    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)\n"<pos:position pos:line="63" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="97"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">fprintf<pos:position pos:line="64" pos:column="12"/></name><argument_list pos:line="64" pos:column="12">(<argument><expr><name pos:line="64" pos:column="13">stderr<pos:position pos:line="64" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="21">"    -f protocol     Specify SSL/TLS protocol\n"<pos:position pos:line="64" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">fprintf<pos:position pos:line="65" pos:column="12"/></name><argument_list pos:line="65" pos:column="12">(<argument><expr><name pos:line="65" pos:column="13">stderr<pos:position pos:line="65" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="21">"                    ("<pos:position pos:line="65" pos:column="44"/></literal> <name pos:line="65" pos:column="45">SSL2_HELP_MSG<pos:position pos:line="65" pos:column="58"/></name> <literal type="string" pos:line="65" pos:column="59">"SSL3, TLS1"<pos:position pos:line="65" pos:column="71"/></literal> <name pos:line="65" pos:column="72">TLS1_X_HELP_MSG<pos:position pos:line="65" pos:column="87"/></name> <literal type="string" pos:line="65" pos:column="88">" or ALL)\n"<pos:position pos:line="65" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="102"/></expr_stmt>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">exit<pos:position pos:line="67" pos:column="9"/></name><argument_list pos:line="67" pos:column="9">(<argument><expr><name pos:line="67" pos:column="10">EINVAL<pos:position pos:line="67" pos:column="16"/></name></expr></argument>)<pos:position pos:line="67" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="18"/></expr_stmt>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

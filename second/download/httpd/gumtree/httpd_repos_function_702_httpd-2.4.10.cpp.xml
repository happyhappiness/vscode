<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_702_httpd-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">stapling_check_response<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">server_rec<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">s<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">modssl_ctx_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">mctx<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">certinfo<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">cinf<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">OCSP_RESPONSE<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">rsp<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="3" pos:column="36">BOOL<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">pok<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="46"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">status<pos:position pos:line="5" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="17">reason<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">OCSP_BASICRESP<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">bs<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><name pos:line="6" pos:column="26">NULL<pos:position pos:line="6" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ASN1_GENERALIZEDTIME<pos:position pos:line="7" pos:column="25"/></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">rev<pos:position pos:line="7" pos:column="30"/></name></decl>, <modifier pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="33">thisupd<pos:position pos:line="7" pos:column="40"/></name></decl>, <modifier pos:line="7" pos:column="42">*<pos:position pos:line="7" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="43">nextupd<pos:position pos:line="7" pos:column="50"/></name></decl>;<pos:position pos:line="7" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">response_status<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><call><name pos:line="8" pos:column="27">OCSP_response_status<pos:position pos:line="8" pos:column="47"/></name><argument_list pos:line="8" pos:column="47">(<argument><expr><name pos:line="8" pos:column="48">rsp<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="53"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">pok<pos:position pos:line="10" pos:column="12"/></name></expr>)<pos:position pos:line="10" pos:column="13"/></condition><then pos:line="10" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">pok<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">FALSE<pos:position pos:line="11" pos:column="21"/></name></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt></block></then></if>
    <comment type="block" pos:line="12" pos:column="5">/* Check to see if response is an error. If so we automatically accept
     * it because it would have expired from the cache if it was time to
     * retry.
     */</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">response_status<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">!=<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="28">OCSP_RESPONSE_STATUS_SUCCESSFUL<pos:position pos:line="16" pos:column="59"/></name></expr>)<pos:position pos:line="16" pos:column="60"/></condition><then pos:line="16" pos:column="60"> <block pos:line="16" pos:column="61">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">mctx<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">stapling_return_errors<pos:position pos:line="17" pos:column="41"/></name></name></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42">
            <block type="pseudo"><return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">SSL_TLSEXT_ERR_OK<pos:position pos:line="18" pos:column="37"/></name></expr>;<pos:position pos:line="18" pos:column="38"/></return></block></then>
        <else pos:line="19" pos:column="9">else
            <block type="pseudo"><return pos:line="20" pos:column="13">return <expr><name pos:line="20" pos:column="20">SSL_TLSEXT_ERR_NOACK<pos:position pos:line="20" pos:column="40"/></name></expr>;<pos:position pos:line="20" pos:column="41"/></return></block></else></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">bs<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <call><name pos:line="23" pos:column="10">OCSP_response_get1_basic<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">rsp<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">bs<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">==<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">NULL<pos:position pos:line="24" pos:column="19"/></name></expr>)<pos:position pos:line="24" pos:column="20"/></condition><then pos:line="24" pos:column="20"> <block pos:line="24" pos:column="21">{
        <comment type="block" pos:line="25" pos:column="9">/* If we can't parse response just pass it to client */</comment>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">ap_log_error<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">APLOG_MARK<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">APLOG_ERR<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="45">0<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="48">s<pos:position pos:line="26" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="51">APLOGNO<pos:position pos:line="26" pos:column="58"/></name><argument_list pos:line="26" pos:column="58">(<argument><expr><literal type="number" pos:line="26" pos:column="59">01934<pos:position pos:line="26" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call>
                     <literal type="string" pos:line="27" pos:column="22">"stapling_check_response: Error Parsing Response!"<pos:position pos:line="27" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="74"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">SSL_TLSEXT_ERR_OK<pos:position pos:line="28" pos:column="33"/></name></expr>;<pos:position pos:line="28" pos:column="34"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">!<pos:position pos:line="31" pos:column="10"/></operator><call><name pos:line="31" pos:column="10">OCSP_resp_find_status<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">bs<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="36">cinf<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">-&gt;<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="42">cid<pos:position pos:line="31" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="47">&amp;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="48">status<pos:position pos:line="31" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="56">&amp;<pos:position pos:line="31" pos:column="61"/></operator><name pos:line="31" pos:column="57">reason<pos:position pos:line="31" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="65">&amp;<pos:position pos:line="31" pos:column="70"/></operator><name pos:line="31" pos:column="66">rev<pos:position pos:line="31" pos:column="69"/></name></expr></argument>,
                               <argument><expr><operator pos:line="32" pos:column="32">&amp;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="33">thisupd<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="42">&amp;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="43">nextupd<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52"> <block pos:line="32" pos:column="53">{
        <comment type="block" pos:line="33" pos:column="9">/* If ID not present just pass back to client */</comment>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">ap_log_error<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">APLOG_MARK<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="34">APLOG_ERR<pos:position pos:line="34" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="45">0<pos:position pos:line="34" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="48">s<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="51">APLOGNO<pos:position pos:line="34" pos:column="58"/></name><argument_list pos:line="34" pos:column="58">(<argument><expr><literal type="number" pos:line="34" pos:column="59">01935<pos:position pos:line="34" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call>
                     <literal type="string" pos:line="35" pos:column="22">"stapling_check_response: certificate ID not present in response!"<pos:position pos:line="35" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="90"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then>
    <else pos:line="37" pos:column="5">else <block pos:line="37" pos:column="10">{
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name pos:line="38" pos:column="13">OCSP_check_validity<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">thisupd<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="42">nextupd<pos:position pos:line="38" pos:column="49"/></name></expr></argument>,
                                <argument><expr><name><name pos:line="39" pos:column="33">mctx<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">-&gt;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="39">stapling_resptime_skew<pos:position pos:line="39" pos:column="61"/></name></name></expr></argument>,
                                <argument><expr><name><name pos:line="40" pos:column="33">mctx<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">-&gt;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="39">stapling_resp_maxage<pos:position pos:line="40" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="61"/></condition><then pos:line="40" pos:column="61"> <block pos:line="40" pos:column="62">{
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><name pos:line="41" pos:column="17">pok<pos:position pos:line="41" pos:column="20"/></name></expr>)<pos:position pos:line="41" pos:column="21"/></condition><then pos:line="41" pos:column="21">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="42" pos:column="17">*<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">pok<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="24">TRUE<pos:position pos:line="42" pos:column="28"/></name></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt></block></then></if>
        }<pos:position pos:line="43" pos:column="10"/></block></then>
        <else pos:line="44" pos:column="9">else <block pos:line="44" pos:column="14">{
            <comment type="block" pos:line="45" pos:column="13">/* If pok is not NULL response was direct from a responder and
             * the times should be valide. If pok is NULL the response was
             * retrieved from cache and it is expected to subsequently expire
             */</comment>
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><name pos:line="49" pos:column="17">pok<pos:position pos:line="49" pos:column="20"/></name></expr>)<pos:position pos:line="49" pos:column="21"/></condition><then pos:line="49" pos:column="21"> <block pos:line="49" pos:column="22">{
                <expr_stmt><expr><call><name pos:line="50" pos:column="17">ap_log_error<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><name pos:line="50" pos:column="30">APLOG_MARK<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="42">APLOG_ERR<pos:position pos:line="50" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="53">0<pos:position pos:line="50" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="56">s<pos:position pos:line="50" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="59">APLOGNO<pos:position pos:line="50" pos:column="66"/></name><argument_list pos:line="50" pos:column="66">(<argument><expr><literal type="number" pos:line="50" pos:column="67">01936<pos:position pos:line="50" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="73"/></argument_list></call>
                             <literal type="string" pos:line="51" pos:column="30">"stapling_check_response: response times invalid"<pos:position pos:line="51" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="81"/></expr_stmt>
            }<pos:position pos:line="52" pos:column="14"/></block></then>
            <else pos:line="53" pos:column="13">else <block pos:line="53" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="54" pos:column="17">ap_log_error<pos:position pos:line="54" pos:column="29"/></name><argument_list pos:line="54" pos:column="29">(<argument><expr><name pos:line="54" pos:column="30">APLOG_MARK<pos:position pos:line="54" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="42">APLOG_DEBUG<pos:position pos:line="54" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="55">0<pos:position pos:line="54" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="58">s<pos:position pos:line="54" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="61">APLOGNO<pos:position pos:line="54" pos:column="68"/></name><argument_list pos:line="54" pos:column="68">(<argument><expr><literal type="number" pos:line="54" pos:column="69">01937<pos:position pos:line="54" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="75"/></argument_list></call>
                             <literal type="string" pos:line="55" pos:column="30">"stapling_check_response: cached response expired"<pos:position pos:line="55" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="82"/></expr_stmt>
            }<pos:position pos:line="56" pos:column="14"/></block></else></if>

            <expr_stmt><expr><call><name pos:line="58" pos:column="13">OCSP_BASICRESP_free<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">bs<pos:position pos:line="58" pos:column="35"/></name></expr></argument>)<pos:position pos:line="58" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="37"/></expr_stmt>
            <return pos:line="59" pos:column="13">return <expr><name pos:line="59" pos:column="20">SSL_TLSEXT_ERR_NOACK<pos:position pos:line="59" pos:column="40"/></name></expr>;<pos:position pos:line="59" pos:column="41"/></return>
        }<pos:position pos:line="60" pos:column="10"/></block></else></if>
    }<pos:position pos:line="61" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="63" pos:column="5">OCSP_BASICRESP_free<pos:position pos:line="63" pos:column="24"/></name><argument_list pos:line="63" pos:column="24">(<argument><expr><name pos:line="63" pos:column="25">bs<pos:position pos:line="63" pos:column="27"/></name></expr></argument>)<pos:position pos:line="63" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="29"/></expr_stmt>

    <return pos:line="65" pos:column="5">return <expr><name pos:line="65" pos:column="12">SSL_TLSEXT_ERR_OK<pos:position pos:line="65" pos:column="29"/></name></expr>;<pos:position pos:line="65" pos:column="30"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

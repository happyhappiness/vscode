<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2892_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">conv_10<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">register<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">wide_int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">num<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">register<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">bool_int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">is_unsigned<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
                     <parameter><decl><type><specifier pos:line="2" pos:column="22">register<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">bool_int<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">is_negative<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">char<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">buf_end<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                     <parameter><decl><type><specifier pos:line="3" pos:column="22">register<pos:position pos:line="3" pos:column="30"/></specifier> <name pos:line="3" pos:column="31">int<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">len<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="40"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">register<pos:position pos:line="5" pos:column="13"/></specifier> <name pos:line="5" pos:column="14">char<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">p<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">buf_end<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">register<pos:position pos:line="6" pos:column="13"/></specifier> <name pos:line="6" pos:column="14">u_wide_int<pos:position pos:line="6" pos:column="24"/></name></type> <name pos:line="6" pos:column="25">magnitude<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">is_unsigned<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21"> <block pos:line="8" pos:column="22">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">magnitude<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <operator pos:line="9" pos:column="21">(<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">u_wide_int<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">)<pos:position pos:line="9" pos:column="33"/></operator> <name pos:line="9" pos:column="34">num<pos:position pos:line="9" pos:column="37"/></name></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">is_negative<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">FALSE<pos:position pos:line="10" pos:column="29"/></name></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then>
    <else pos:line="12" pos:column="5">else <block pos:line="12" pos:column="10">{
        <expr_stmt><expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">is_negative<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">num<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">&lt;<pos:position pos:line="13" pos:column="33"/></operator> <literal type="number" pos:line="13" pos:column="31">0<pos:position pos:line="13" pos:column="32"/></literal><operator pos:line="13" pos:column="32">)<pos:position pos:line="13" pos:column="33"/></operator></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>

        <comment type="block" pos:line="15" pos:column="9">/*
         * On a 2's complement machine, negating the most negative integer 
         * results in a number that cannot be represented as a signed integer.
         * Here is what we do to obtain the number's magnitude:
         *      a. add 1 to the number
         *      b. negate it (becomes positive)
         *      c. convert it to unsigned
         *      d. add 1
         */</comment>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">*<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">is_negative<pos:position pos:line="24" pos:column="25"/></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26"> <block pos:line="24" pos:column="27">{
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">wide_int<pos:position pos:line="25" pos:column="21"/></name></type> <name pos:line="25" pos:column="22">t<pos:position pos:line="25" pos:column="23"/></name> <init pos:line="25" pos:column="24">= <expr><name pos:line="25" pos:column="26">num<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">+<pos:position pos:line="25" pos:column="31"/></operator> <literal type="number" pos:line="25" pos:column="32">1<pos:position pos:line="25" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="34"/></decl_stmt>

            <expr_stmt><expr><name pos:line="27" pos:column="13">magnitude<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <operator pos:line="27" pos:column="25">(<pos:position pos:line="27" pos:column="26"/></operator><operator pos:line="27" pos:column="26">(<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">u_wide_int<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">)<pos:position pos:line="27" pos:column="38"/></operator> <operator pos:line="27" pos:column="39">-<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="40">t<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">)<pos:position pos:line="27" pos:column="42"/></operator> <operator pos:line="27" pos:column="43">+<pos:position pos:line="27" pos:column="44"/></operator> <literal type="number" pos:line="27" pos:column="45">1<pos:position pos:line="27" pos:column="46"/></literal></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then>
        <else pos:line="29" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="13">magnitude<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">=<pos:position pos:line="30" pos:column="24"/></operator> <operator pos:line="30" pos:column="25">(<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="26">u_wide_int<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">)<pos:position pos:line="30" pos:column="37"/></operator> <name pos:line="30" pos:column="38">num<pos:position pos:line="30" pos:column="41"/></name></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt></block></else></if>
    }<pos:position pos:line="31" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="33" pos:column="5">/*
     * We use a do-while loop so that we write at least 1 digit 
     */</comment>
    <do pos:line="36" pos:column="5">do <block pos:line="36" pos:column="8">{
        <decl_stmt><decl><type><specifier pos:line="37" pos:column="9">register<pos:position pos:line="37" pos:column="17"/></specifier> <name pos:line="37" pos:column="18">u_wide_int<pos:position pos:line="37" pos:column="28"/></name></type> <name pos:line="37" pos:column="29">new_magnitude<pos:position pos:line="37" pos:column="42"/></name> <init pos:line="37" pos:column="43">= <expr><name pos:line="37" pos:column="45">magnitude<pos:position pos:line="37" pos:column="54"/></name> <operator pos:line="37" pos:column="55">/<pos:position pos:line="37" pos:column="56"/></operator> <literal type="number" pos:line="37" pos:column="57">10<pos:position pos:line="37" pos:column="59"/></literal></expr></init></decl>;<pos:position pos:line="37" pos:column="60"/></decl_stmt>

        <expr_stmt><expr><operator pos:line="39" pos:column="9">*<pos:position pos:line="39" pos:column="10"/></operator><operator pos:line="39" pos:column="10">--<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">p<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call pos:line="39" pos:column="16">(<name pos:line="39" pos:column="17">char<pos:position pos:line="39" pos:column="21"/></name>) <argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">magnitude<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">-<pos:position pos:line="39" pos:column="35"/></operator> <name pos:line="39" pos:column="36">new_magnitude<pos:position pos:line="39" pos:column="49"/></name> <operator pos:line="39" pos:column="50">*<pos:position pos:line="39" pos:column="51"/></operator> <literal type="number" pos:line="39" pos:column="52">10<pos:position pos:line="39" pos:column="54"/></literal> <operator pos:line="39" pos:column="55">+<pos:position pos:line="39" pos:column="56"/></operator> <literal type="char" pos:line="39" pos:column="57">'0'<pos:position pos:line="39" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name pos:line="40" pos:column="9">magnitude<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <name pos:line="40" pos:column="21">new_magnitude<pos:position pos:line="40" pos:column="34"/></name></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block>
    while <condition pos:line="42" pos:column="11">(<expr><name pos:line="42" pos:column="12">magnitude<pos:position pos:line="42" pos:column="21"/></name></expr>)<pos:position pos:line="42" pos:column="22"/></condition>;<pos:position pos:line="42" pos:column="23"/></do>

    <expr_stmt><expr><operator pos:line="44" pos:column="5">*<pos:position pos:line="44" pos:column="6"/></operator><name pos:line="44" pos:column="6">len<pos:position pos:line="44" pos:column="9"/></name> <operator pos:line="44" pos:column="10">=<pos:position pos:line="44" pos:column="11"/></operator> <name pos:line="44" pos:column="12">buf_end<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">-<pos:position pos:line="44" pos:column="21"/></operator> <name pos:line="44" pos:column="22">p<pos:position pos:line="44" pos:column="23"/></name></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
    <return pos:line="45" pos:column="5">return <expr><operator pos:line="45" pos:column="12">(<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="13">p<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">)<pos:position pos:line="45" pos:column="15"/></operator></expr>;<pos:position pos:line="45" pos:column="16"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3391_httpd-2.2.11.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">add_minus_l<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">count_chars<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">cc<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">arg<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">newarg<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">name<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><call><name pos:line="4" pos:column="18">strrchr<pos:position pos:line="4" pos:column="25"/></name><argument_list pos:line="4" pos:column="25">(<argument><expr><name pos:line="4" pos:column="26">arg<pos:position pos:line="4" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="4" pos:column="31">'/'<pos:position pos:line="4" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">file<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><call><name pos:line="5" pos:column="18">strrchr<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">arg<pos:position pos:line="5" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="5" pos:column="31">'.'<pos:position pos:line="5" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">lib<pos:position pos:line="6" pos:column="14"/></name>  <init pos:line="6" pos:column="16">= <expr><call><name pos:line="6" pos:column="18">strstr<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">name<pos:position pos:line="6" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="31">"lib"<pos:position pos:line="6" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">name<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">!=<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">NULL<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">&amp;&amp;<pos:position pos:line="8" pos:column="31"/></operator> <name pos:line="8" pos:column="24">file<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">!=<pos:position pos:line="8" pos:column="31"/></operator> <name pos:line="8" pos:column="32">NULL<pos:position pos:line="8" pos:column="36"/></name> <operator pos:line="8" pos:column="37">&amp;&amp;<pos:position pos:line="8" pos:column="47"/></operator> <name pos:line="8" pos:column="40">lib<pos:position pos:line="8" pos:column="43"/></name> <operator pos:line="8" pos:column="44">==<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="47">name<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">+<pos:position pos:line="8" pos:column="52"/></operator><literal type="number" pos:line="8" pos:column="52">1<pos:position pos:line="8" pos:column="53"/></literal></expr>)<pos:position pos:line="8" pos:column="54"/></condition><then pos:line="8" pos:column="54"> <block pos:line="8" pos:column="55">{
        <expr_stmt><expr><operator pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">name<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <literal type="char" pos:line="9" pos:column="17">'\0'<pos:position pos:line="9" pos:column="21"/></literal></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">file<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="char" pos:line="10" pos:column="17">'\0'<pos:position pos:line="10" pos:column="21"/></literal></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">file<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">name<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">file<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">file<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">+<pos:position pos:line="12" pos:column="21"/></operator><literal type="number" pos:line="12" pos:column="21">4<pos:position pos:line="12" pos:column="22"/></literal></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">push_count_chars<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">cc<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="30">"-L"<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">push_count_chars<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">cc<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="30">arg<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
        <comment type="block" pos:line="15" pos:column="9">/* we need one argument like -lapr-1 */</comment>
        <expr_stmt><expr><name pos:line="16" pos:column="9">newarg<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">malloc<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><call><name pos:line="16" pos:column="25">strlen<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">file<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call> <operator pos:line="16" pos:column="38">+<pos:position pos:line="16" pos:column="39"/></operator> <literal type="number" pos:line="16" pos:column="40">3<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">strcpy<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">newarg<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="24">"-l"<pos:position pos:line="17" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">strcat<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">newarg<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="24">file<pos:position pos:line="18" pos:column="28"/></name></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">push_count_chars<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">cc<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">newarg<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then> <else pos:line="20" pos:column="7">else <block pos:line="20" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">push_count_chars<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">cc<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="30">arg<pos:position pos:line="21" pos:column="33"/></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

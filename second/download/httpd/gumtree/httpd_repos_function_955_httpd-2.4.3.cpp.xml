<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_955_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">scope_to_string<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">unsigned<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">scope<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <switch pos:line="3" pos:column="5">switch <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">scope<pos:position pos:line="3" pos:column="18"/></name></expr>)<pos:position pos:line="3" pos:column="19"/></condition> <block pos:line="3" pos:column="20">{
    <case pos:line="4" pos:column="5">case <expr><name pos:line="4" pos:column="10">AP_LUA_SCOPE_ONCE<pos:position pos:line="4" pos:column="27"/></name></expr>:<pos:position pos:line="4" pos:column="28"/></case>
    <case pos:line="5" pos:column="5">case <expr><name pos:line="5" pos:column="10">AP_LUA_SCOPE_UNSET<pos:position pos:line="5" pos:column="28"/></name></expr>:<pos:position pos:line="5" pos:column="29"/></case>
        <return pos:line="6" pos:column="9">return <expr><literal type="string" pos:line="6" pos:column="16">"once"<pos:position pos:line="6" pos:column="22"/></literal></expr>;<pos:position pos:line="6" pos:column="23"/></return>
    <case pos:line="7" pos:column="5">case <expr><name pos:line="7" pos:column="10">AP_LUA_SCOPE_REQUEST<pos:position pos:line="7" pos:column="30"/></name></expr>:<pos:position pos:line="7" pos:column="31"/></case>
        <return pos:line="8" pos:column="9">return <expr><literal type="string" pos:line="8" pos:column="16">"request"<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return>
    <case pos:line="9" pos:column="5">case <expr><name pos:line="9" pos:column="10">AP_LUA_SCOPE_CONN<pos:position pos:line="9" pos:column="27"/></name></expr>:<pos:position pos:line="9" pos:column="28"/></case>
        <return pos:line="10" pos:column="9">return <expr><literal type="string" pos:line="10" pos:column="16">"conn"<pos:position pos:line="10" pos:column="22"/></literal></expr>;<pos:position pos:line="10" pos:column="23"/></return>
<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">APR_HAS_THREADS<pos:position pos:line="11" pos:column="20"/></name></expr></cpp:if>
    <case pos:line="12" pos:column="5">case <expr><name pos:line="12" pos:column="10">AP_LUA_SCOPE_THREAD<pos:position pos:line="12" pos:column="29"/></name></expr>:<pos:position pos:line="12" pos:column="30"/></case>
        <return pos:line="13" pos:column="9">return <expr><literal type="string" pos:line="13" pos:column="16">"thread"<pos:position pos:line="13" pos:column="24"/></literal></expr>;<pos:position pos:line="13" pos:column="25"/></return>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
    <default pos:line="15" pos:column="5">default:<pos:position pos:line="15" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">ap_assert<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><literal type="number" pos:line="16" pos:column="19">0<pos:position pos:line="16" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></switch>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

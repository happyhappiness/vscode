<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2240_httpd-2.4.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">sed_response_filter<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">ap_filter_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">f<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="2" pos:column="41">apr_bucket_brigade<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">bb<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_bucket<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">b<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">sed_config<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">cfg<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><call><name pos:line="6" pos:column="23">ap_get_module_config<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">(<argument><expr><name><name pos:line="6" pos:column="44">f<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">-&gt;<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="47">r<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">-&gt;<pos:position pos:line="6" pos:column="53"/></operator><name pos:line="6" pos:column="50">per_dir_config<pos:position pos:line="6" pos:column="64"/></name></name></expr></argument>,
                                           <argument><expr><operator pos:line="7" pos:column="44">&amp;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="45">sed_module<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">sed_filter_ctxt<pos:position pos:line="8" pos:column="20"/></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">ctx<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name><name pos:line="8" pos:column="28">f<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">ctx<pos:position pos:line="8" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">sed_expr_config<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">sed_cfg<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><operator pos:line="9" pos:column="32">&amp;<pos:position pos:line="9" pos:column="37"/></operator><name><name pos:line="9" pos:column="33">cfg<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">output<pos:position pos:line="9" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">sed_cfg<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">==<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">NULL<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">)<pos:position pos:line="11" pos:column="26"/></operator> <operator pos:line="11" pos:column="27">||<pos:position pos:line="11" pos:column="29"/></operator> <operator pos:line="11" pos:column="30">(<pos:position pos:line="11" pos:column="31"/></operator><name><name pos:line="11" pos:column="31">sed_cfg<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">sed_cmds<pos:position pos:line="11" pos:column="48"/></name></name> <operator pos:line="11" pos:column="49">==<pos:position pos:line="11" pos:column="51"/></operator> <name pos:line="11" pos:column="52">NULL<pos:position pos:line="11" pos:column="56"/></name><operator pos:line="11" pos:column="56">)<pos:position pos:line="11" pos:column="57"/></operator></expr>)<pos:position pos:line="11" pos:column="58"/></condition><then pos:line="11" pos:column="58"> <block pos:line="11" pos:column="59">{
        <comment type="block" pos:line="12" pos:column="9">/* No sed expressions */</comment>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_remove_output_filter<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">f<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><call><name pos:line="14" pos:column="16">ap_pass_brigade<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name><name pos:line="14" pos:column="32">f<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">next<pos:position pos:line="14" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">bb<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">ctx<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">==<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">NULL<pos:position pos:line="17" pos:column="20"/></name></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21"> <block pos:line="17" pos:column="22">{

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><call><name pos:line="19" pos:column="31">APR_BRIGADE_FIRST<pos:position pos:line="19" pos:column="48"/></name><argument_list pos:line="19" pos:column="48">(<argument><expr><name pos:line="19" pos:column="49">bb<pos:position pos:line="19" pos:column="51"/></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="54"/></condition><then pos:line="19" pos:column="54"> <block pos:line="19" pos:column="55">{
            <comment type="block" pos:line="20" pos:column="13">/* no need to run sed filter for Head requests */</comment>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">ap_remove_output_filter<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name pos:line="21" pos:column="37">f<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
            <return pos:line="22" pos:column="13">return <expr><call><name pos:line="22" pos:column="20">ap_pass_brigade<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name><name pos:line="22" pos:column="36">f<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">-&gt;<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="39">next<pos:position pos:line="22" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">bb<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></return>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="25" pos:column="9">status<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name pos:line="25" pos:column="18">init_context<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">f<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">sed_cfg<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="43">1<pos:position pos:line="25" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">status<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">!=<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">APR_SUCCESS<pos:position pos:line="26" pos:column="34"/></name></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35">
             <block type="pseudo"><return pos:line="27" pos:column="14">return <expr><name pos:line="27" pos:column="21">status<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="28" pos:column="9">ctx<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <name><name pos:line="28" pos:column="15">f<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">ctx<pos:position pos:line="28" pos:column="21"/></name></name></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">apr_table_unset<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name><name pos:line="29" pos:column="25">f<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">-&gt;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="28">r<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">-&gt;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="31">headers_out<pos:position pos:line="29" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="44">"Content-Length"<pos:position pos:line="29" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="32" pos:column="5">ctx<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">-&gt;<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="10">bb<pos:position pos:line="32" pos:column="12"/></name></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <call><name pos:line="32" pos:column="15">apr_brigade_create<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name><name pos:line="32" pos:column="34">f<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">r<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">-&gt;<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="40">pool<pos:position pos:line="32" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="46">f<pos:position pos:line="32" pos:column="47"/></name><operator pos:line="32" pos:column="47">-&gt;<pos:position pos:line="32" pos:column="52"/></operator><name pos:line="32" pos:column="49">c<pos:position pos:line="32" pos:column="50"/></name><operator pos:line="32" pos:column="50">-&gt;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="52">bucket_alloc<pos:position pos:line="32" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>

    <comment type="block" pos:line="34" pos:column="5">/* Here is the main logic. Iterate through all the buckets, read the
     * content of the bucket, call sed_eval_buffer on the data.
     * sed_eval_buffer will read the data line by line, run filters on each
     * line. sed_eval_buffer will generates the output by calling
     * sed_write_output which will add the output to ctx-&gt;bb. At the end of
     * the loop, ctx-&gt;bb is passed to the next filter in chain. At the end of
     * the data, if new line is not found then sed_eval_buffer will store the
     * data in its own buffer.
     *
     * Once eos bucket is found then sed_finalize_eval will flush the rest of
     * the data. If there is no new line in last line of data, new line is
     * appended (that is a solaris sed behavior). libsed's internal memory for
     * evaluation is allocated on request's pool so it will be cleared once
     * request is over.
     *
     * If flush bucket is found then append the the flush bucket to ctx-&gt;bb
     * and pass it to next filter. There may be some data which will still be
     * in sed's internal buffer which can't be flushed until new line
     * character is arrived.
     */</comment>
    <for pos:line="54" pos:column="5">for <control pos:line="54" pos:column="9">(<init><expr><name pos:line="54" pos:column="10">b<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <call><name pos:line="54" pos:column="14">APR_BRIGADE_FIRST<pos:position pos:line="54" pos:column="31"/></name><argument_list pos:line="54" pos:column="31">(<argument><expr><name pos:line="54" pos:column="32">bb<pos:position pos:line="54" pos:column="34"/></name></expr></argument>)<pos:position pos:line="54" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="36"/></init> <condition><expr><name pos:line="54" pos:column="37">b<pos:position pos:line="54" pos:column="38"/></name> <operator pos:line="54" pos:column="39">!=<pos:position pos:line="54" pos:column="41"/></operator> <call><name pos:line="54" pos:column="42">APR_BRIGADE_SENTINEL<pos:position pos:line="54" pos:column="62"/></name><argument_list pos:line="54" pos:column="62">(<argument><expr><name pos:line="54" pos:column="63">bb<pos:position pos:line="54" pos:column="65"/></name></expr></argument>)<pos:position pos:line="54" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="67"/></condition><incr/>)<pos:position pos:line="54" pos:column="68"/></control> <block pos:line="54" pos:column="69">{
        <decl_stmt><decl><type><specifier pos:line="55" pos:column="9">const<pos:position pos:line="55" pos:column="14"/></specifier> <name pos:line="55" pos:column="15">char<pos:position pos:line="55" pos:column="19"/></name> <modifier pos:line="55" pos:column="20">*<pos:position pos:line="55" pos:column="21"/></modifier></type><name pos:line="55" pos:column="21">buf<pos:position pos:line="55" pos:column="24"/></name> <init pos:line="55" pos:column="25">= <expr><name pos:line="55" pos:column="27">NULL<pos:position pos:line="55" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="55" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="56" pos:column="9">apr_size_t<pos:position pos:line="56" pos:column="19"/></name></type> <name pos:line="56" pos:column="20">bytes<pos:position pos:line="56" pos:column="25"/></name> <init pos:line="56" pos:column="26">= <expr><literal type="number" pos:line="56" pos:column="28">0<pos:position pos:line="56" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="56" pos:column="30"/></decl_stmt>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><call><name pos:line="57" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">b<pos:position pos:line="57" pos:column="32"/></name></expr></argument>)<pos:position pos:line="57" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="34"/></condition><then pos:line="57" pos:column="34"> <block pos:line="57" pos:column="35">{
            <decl_stmt><decl><type><name pos:line="58" pos:column="13">apr_bucket<pos:position pos:line="58" pos:column="23"/></name> <modifier pos:line="58" pos:column="24">*<pos:position pos:line="58" pos:column="25"/></modifier></type><name pos:line="58" pos:column="25">b1<pos:position pos:line="58" pos:column="27"/></name> <init pos:line="58" pos:column="28">= <expr><call><name pos:line="58" pos:column="30">APR_BUCKET_NEXT<pos:position pos:line="58" pos:column="45"/></name><argument_list pos:line="58" pos:column="45">(<argument><expr><name pos:line="58" pos:column="46">b<pos:position pos:line="58" pos:column="47"/></name></expr></argument>)<pos:position pos:line="58" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="58" pos:column="49"/></decl_stmt>
            <comment type="block" pos:line="59" pos:column="13">/* Now clean up the internal sed buffer */</comment>
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">sed_finalize_eval<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><operator pos:line="60" pos:column="31">&amp;<pos:position pos:line="60" pos:column="36"/></operator><name><name pos:line="60" pos:column="32">ctx<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">-&gt;<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="37">eval<pos:position pos:line="60" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="43">ctx<pos:position pos:line="60" pos:column="46"/></name></expr></argument>)<pos:position pos:line="60" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name pos:line="61" pos:column="13">status<pos:position pos:line="61" pos:column="19"/></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <call><name pos:line="61" pos:column="22">flush_output_buffer<pos:position pos:line="61" pos:column="41"/></name><argument_list pos:line="61" pos:column="41">(<argument><expr><name pos:line="61" pos:column="42">ctx<pos:position pos:line="61" pos:column="45"/></name></expr></argument>)<pos:position pos:line="61" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="47"/></expr_stmt>
            <if pos:line="62" pos:column="13">if <condition pos:line="62" pos:column="16">(<expr><name pos:line="62" pos:column="17">status<pos:position pos:line="62" pos:column="23"/></name> <operator pos:line="62" pos:column="24">!=<pos:position pos:line="62" pos:column="26"/></operator> <name pos:line="62" pos:column="27">APR_SUCCESS<pos:position pos:line="62" pos:column="38"/></name></expr>)<pos:position pos:line="62" pos:column="39"/></condition><then pos:line="62" pos:column="39"> <block pos:line="62" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">clear_ctxpool<pos:position pos:line="63" pos:column="30"/></name><argument_list pos:line="63" pos:column="30">(<argument><expr><name pos:line="63" pos:column="31">ctx<pos:position pos:line="63" pos:column="34"/></name></expr></argument>)<pos:position pos:line="63" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="36"/></expr_stmt>
                <return pos:line="64" pos:column="17">return <expr><name pos:line="64" pos:column="24">status<pos:position pos:line="64" pos:column="30"/></name></expr>;<pos:position pos:line="64" pos:column="31"/></return>
            }<pos:position pos:line="65" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><name pos:line="66" pos:column="31">b<pos:position pos:line="66" pos:column="32"/></name></expr></argument>)<pos:position pos:line="66" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
            <comment type="block" pos:line="67" pos:column="13">/* Insert the eos bucket to ctx-&gt;bb brigade */</comment>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="68" pos:column="36"/></name><argument_list pos:line="68" pos:column="36">(<argument><expr><name><name pos:line="68" pos:column="37">ctx<pos:position pos:line="68" pos:column="40"/></name><operator pos:line="68" pos:column="40">-&gt;<pos:position pos:line="68" pos:column="45"/></operator><name pos:line="68" pos:column="42">bb<pos:position pos:line="68" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="46">b<pos:position pos:line="68" pos:column="47"/></name></expr></argument>)<pos:position pos:line="68" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="69" pos:column="13">b<pos:position pos:line="69" pos:column="14"/></name> <operator pos:line="69" pos:column="15">=<pos:position pos:line="69" pos:column="16"/></operator> <name pos:line="69" pos:column="17">b1<pos:position pos:line="69" pos:column="19"/></name></expr>;<pos:position pos:line="69" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></then>
        <elseif pos:line="71" pos:column="9">else <if pos:line="71" pos:column="14">if <condition pos:line="71" pos:column="17">(<expr><call><name pos:line="71" pos:column="18">APR_BUCKET_IS_FLUSH<pos:position pos:line="71" pos:column="37"/></name><argument_list pos:line="71" pos:column="37">(<argument><expr><name pos:line="71" pos:column="38">b<pos:position pos:line="71" pos:column="39"/></name></expr></argument>)<pos:position pos:line="71" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="41"/></condition><then pos:line="71" pos:column="41"> <block pos:line="71" pos:column="42">{
            <decl_stmt><decl><type><name pos:line="72" pos:column="13">apr_bucket<pos:position pos:line="72" pos:column="23"/></name> <modifier pos:line="72" pos:column="24">*<pos:position pos:line="72" pos:column="25"/></modifier></type><name pos:line="72" pos:column="25">b1<pos:position pos:line="72" pos:column="27"/></name> <init pos:line="72" pos:column="28">= <expr><call><name pos:line="72" pos:column="30">APR_BUCKET_NEXT<pos:position pos:line="72" pos:column="45"/></name><argument_list pos:line="72" pos:column="45">(<argument><expr><name pos:line="72" pos:column="46">b<pos:position pos:line="72" pos:column="47"/></name></expr></argument>)<pos:position pos:line="72" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="72" pos:column="49"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><name pos:line="73" pos:column="31">b<pos:position pos:line="73" pos:column="32"/></name></expr></argument>)<pos:position pos:line="73" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="74" pos:column="13">status<pos:position pos:line="74" pos:column="19"/></name> <operator pos:line="74" pos:column="20">=<pos:position pos:line="74" pos:column="21"/></operator> <call><name pos:line="74" pos:column="22">flush_output_buffer<pos:position pos:line="74" pos:column="41"/></name><argument_list pos:line="74" pos:column="41">(<argument><expr><name pos:line="74" pos:column="42">ctx<pos:position pos:line="74" pos:column="45"/></name></expr></argument>)<pos:position pos:line="74" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="47"/></expr_stmt>
            <if pos:line="75" pos:column="13">if <condition pos:line="75" pos:column="16">(<expr><name pos:line="75" pos:column="17">status<pos:position pos:line="75" pos:column="23"/></name> <operator pos:line="75" pos:column="24">!=<pos:position pos:line="75" pos:column="26"/></operator> <name pos:line="75" pos:column="27">APR_SUCCESS<pos:position pos:line="75" pos:column="38"/></name></expr>)<pos:position pos:line="75" pos:column="39"/></condition><then pos:line="75" pos:column="39"> <block pos:line="75" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="76" pos:column="17">clear_ctxpool<pos:position pos:line="76" pos:column="30"/></name><argument_list pos:line="76" pos:column="30">(<argument><expr><name pos:line="76" pos:column="31">ctx<pos:position pos:line="76" pos:column="34"/></name></expr></argument>)<pos:position pos:line="76" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="36"/></expr_stmt>
                <return pos:line="77" pos:column="17">return <expr><name pos:line="77" pos:column="24">status<pos:position pos:line="77" pos:column="30"/></name></expr>;<pos:position pos:line="77" pos:column="31"/></return>
            }<pos:position pos:line="78" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="79" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="79" pos:column="36"/></name><argument_list pos:line="79" pos:column="36">(<argument><expr><name><name pos:line="79" pos:column="37">ctx<pos:position pos:line="79" pos:column="40"/></name><operator pos:line="79" pos:column="40">-&gt;<pos:position pos:line="79" pos:column="45"/></operator><name pos:line="79" pos:column="42">bb<pos:position pos:line="79" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="46">b<pos:position pos:line="79" pos:column="47"/></name></expr></argument>)<pos:position pos:line="79" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="80" pos:column="13">b<pos:position pos:line="80" pos:column="14"/></name> <operator pos:line="80" pos:column="15">=<pos:position pos:line="80" pos:column="16"/></operator> <name pos:line="80" pos:column="17">b1<pos:position pos:line="80" pos:column="19"/></name></expr>;<pos:position pos:line="80" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="81" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="82" pos:column="9">else <if pos:line="82" pos:column="14">if <condition pos:line="82" pos:column="17">(<expr><call><name pos:line="82" pos:column="18">APR_BUCKET_IS_METADATA<pos:position pos:line="82" pos:column="40"/></name><argument_list pos:line="82" pos:column="40">(<argument><expr><name pos:line="82" pos:column="41">b<pos:position pos:line="82" pos:column="42"/></name></expr></argument>)<pos:position pos:line="82" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="44"/></condition><then pos:line="82" pos:column="44"> <block pos:line="82" pos:column="45">{
            <expr_stmt><expr><name pos:line="83" pos:column="13">b<pos:position pos:line="83" pos:column="14"/></name> <operator pos:line="83" pos:column="15">=<pos:position pos:line="83" pos:column="16"/></operator> <call><name pos:line="83" pos:column="17">APR_BUCKET_NEXT<pos:position pos:line="83" pos:column="32"/></name><argument_list pos:line="83" pos:column="32">(<argument><expr><name pos:line="83" pos:column="33">b<pos:position pos:line="83" pos:column="34"/></name></expr></argument>)<pos:position pos:line="83" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="84" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="85" pos:column="9">else <if pos:line="85" pos:column="14">if <condition pos:line="85" pos:column="17">(<expr><call><name pos:line="85" pos:column="18">apr_bucket_read<pos:position pos:line="85" pos:column="33"/></name><argument_list pos:line="85" pos:column="33">(<argument><expr><name pos:line="85" pos:column="34">b<pos:position pos:line="85" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="37">&amp;<pos:position pos:line="85" pos:column="42"/></operator><name pos:line="85" pos:column="38">buf<pos:position pos:line="85" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="43">&amp;<pos:position pos:line="85" pos:column="48"/></operator><name pos:line="85" pos:column="44">bytes<pos:position pos:line="85" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="51">APR_BLOCK_READ<pos:position pos:line="85" pos:column="65"/></name></expr></argument>)<pos:position pos:line="85" pos:column="66"/></argument_list></call>
                 <operator pos:line="86" pos:column="18">==<pos:position pos:line="86" pos:column="20"/></operator> <name pos:line="86" pos:column="21">APR_SUCCESS<pos:position pos:line="86" pos:column="32"/></name></expr>)<pos:position pos:line="86" pos:column="33"/></condition><then pos:line="86" pos:column="33"> <block pos:line="86" pos:column="34">{
            <decl_stmt><decl><type><name pos:line="87" pos:column="13">apr_bucket<pos:position pos:line="87" pos:column="23"/></name> <modifier pos:line="87" pos:column="24">*<pos:position pos:line="87" pos:column="25"/></modifier></type><name pos:line="87" pos:column="25">b1<pos:position pos:line="87" pos:column="27"/></name> <init pos:line="87" pos:column="28">= <expr><call><name pos:line="87" pos:column="30">APR_BUCKET_NEXT<pos:position pos:line="87" pos:column="45"/></name><argument_list pos:line="87" pos:column="45">(<argument><expr><name pos:line="87" pos:column="46">b<pos:position pos:line="87" pos:column="47"/></name></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="87" pos:column="49"/></decl_stmt>
            <expr_stmt><expr><name pos:line="88" pos:column="13">status<pos:position pos:line="88" pos:column="19"/></name> <operator pos:line="88" pos:column="20">=<pos:position pos:line="88" pos:column="21"/></operator> <call><name pos:line="88" pos:column="22">sed_eval_buffer<pos:position pos:line="88" pos:column="37"/></name><argument_list pos:line="88" pos:column="37">(<argument><expr><operator pos:line="88" pos:column="38">&amp;<pos:position pos:line="88" pos:column="43"/></operator><name><name pos:line="88" pos:column="39">ctx<pos:position pos:line="88" pos:column="42"/></name><operator pos:line="88" pos:column="42">-&gt;<pos:position pos:line="88" pos:column="47"/></operator><name pos:line="88" pos:column="44">eval<pos:position pos:line="88" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="50">buf<pos:position pos:line="88" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="55">bytes<pos:position pos:line="88" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="62">ctx<pos:position pos:line="88" pos:column="65"/></name></expr></argument>)<pos:position pos:line="88" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="67"/></expr_stmt>
            <if pos:line="89" pos:column="13">if <condition pos:line="89" pos:column="16">(<expr><name pos:line="89" pos:column="17">status<pos:position pos:line="89" pos:column="23"/></name> <operator pos:line="89" pos:column="24">!=<pos:position pos:line="89" pos:column="26"/></operator> <name pos:line="89" pos:column="27">APR_SUCCESS<pos:position pos:line="89" pos:column="38"/></name></expr>)<pos:position pos:line="89" pos:column="39"/></condition><then pos:line="89" pos:column="39"> <block pos:line="89" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="90" pos:column="17">clear_ctxpool<pos:position pos:line="90" pos:column="30"/></name><argument_list pos:line="90" pos:column="30">(<argument><expr><name pos:line="90" pos:column="31">ctx<pos:position pos:line="90" pos:column="34"/></name></expr></argument>)<pos:position pos:line="90" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="36"/></expr_stmt>
                <return pos:line="91" pos:column="17">return <expr><name pos:line="91" pos:column="24">status<pos:position pos:line="91" pos:column="30"/></name></expr>;<pos:position pos:line="91" pos:column="31"/></return>
            }<pos:position pos:line="92" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="93" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="93" pos:column="30"/></name><argument_list pos:line="93" pos:column="30">(<argument><expr><name pos:line="93" pos:column="31">b<pos:position pos:line="93" pos:column="32"/></name></expr></argument>)<pos:position pos:line="93" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">apr_bucket_delete<pos:position pos:line="94" pos:column="30"/></name><argument_list pos:line="94" pos:column="30">(<argument><expr><name pos:line="94" pos:column="31">b<pos:position pos:line="94" pos:column="32"/></name></expr></argument>)<pos:position pos:line="94" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="95" pos:column="13">b<pos:position pos:line="95" pos:column="14"/></name> <operator pos:line="95" pos:column="15">=<pos:position pos:line="95" pos:column="16"/></operator> <name pos:line="95" pos:column="17">b1<pos:position pos:line="95" pos:column="19"/></name></expr>;<pos:position pos:line="95" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="96" pos:column="10"/></block></then></if></elseif>
        <else pos:line="97" pos:column="9">else <block pos:line="97" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="98" pos:column="13">apr_bucket<pos:position pos:line="98" pos:column="23"/></name> <modifier pos:line="98" pos:column="24">*<pos:position pos:line="98" pos:column="25"/></modifier></type><name pos:line="98" pos:column="25">b1<pos:position pos:line="98" pos:column="27"/></name> <init pos:line="98" pos:column="28">= <expr><call><name pos:line="98" pos:column="30">APR_BUCKET_NEXT<pos:position pos:line="98" pos:column="45"/></name><argument_list pos:line="98" pos:column="45">(<argument><expr><name pos:line="98" pos:column="46">b<pos:position pos:line="98" pos:column="47"/></name></expr></argument>)<pos:position pos:line="98" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="98" pos:column="49"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="99" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="99" pos:column="30"/></name><argument_list pos:line="99" pos:column="30">(<argument><expr><name pos:line="99" pos:column="31">b<pos:position pos:line="99" pos:column="32"/></name></expr></argument>)<pos:position pos:line="99" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="100" pos:column="13">b<pos:position pos:line="100" pos:column="14"/></name> <operator pos:line="100" pos:column="15">=<pos:position pos:line="100" pos:column="16"/></operator> <name pos:line="100" pos:column="17">b1<pos:position pos:line="100" pos:column="19"/></name></expr>;<pos:position pos:line="100" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="101" pos:column="10"/></block></else></if>
    }<pos:position pos:line="102" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="103" pos:column="5">apr_brigade_cleanup<pos:position pos:line="103" pos:column="24"/></name><argument_list pos:line="103" pos:column="24">(<argument><expr><name pos:line="103" pos:column="25">bb<pos:position pos:line="103" pos:column="27"/></name></expr></argument>)<pos:position pos:line="103" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="104" pos:column="5">status<pos:position pos:line="104" pos:column="11"/></name> <operator pos:line="104" pos:column="12">=<pos:position pos:line="104" pos:column="13"/></operator> <call><name pos:line="104" pos:column="14">flush_output_buffer<pos:position pos:line="104" pos:column="33"/></name><argument_list pos:line="104" pos:column="33">(<argument><expr><name pos:line="104" pos:column="34">ctx<pos:position pos:line="104" pos:column="37"/></name></expr></argument>)<pos:position pos:line="104" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="39"/></expr_stmt>
    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">(<expr><name pos:line="105" pos:column="9">status<pos:position pos:line="105" pos:column="15"/></name> <operator pos:line="105" pos:column="16">!=<pos:position pos:line="105" pos:column="18"/></operator> <name pos:line="105" pos:column="19">APR_SUCCESS<pos:position pos:line="105" pos:column="30"/></name></expr>)<pos:position pos:line="105" pos:column="31"/></condition><then pos:line="105" pos:column="31"> <block pos:line="105" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="106" pos:column="9">clear_ctxpool<pos:position pos:line="106" pos:column="22"/></name><argument_list pos:line="106" pos:column="22">(<argument><expr><name pos:line="106" pos:column="23">ctx<pos:position pos:line="106" pos:column="26"/></name></expr></argument>)<pos:position pos:line="106" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="28"/></expr_stmt>
        <return pos:line="107" pos:column="9">return <expr><name pos:line="107" pos:column="16">status<pos:position pos:line="107" pos:column="22"/></name></expr>;<pos:position pos:line="107" pos:column="23"/></return>
    }<pos:position pos:line="108" pos:column="6"/></block></then></if>
    <if pos:line="109" pos:column="5">if <condition pos:line="109" pos:column="8">(<expr><operator pos:line="109" pos:column="9">!<pos:position pos:line="109" pos:column="10"/></operator><call><name pos:line="109" pos:column="10">APR_BRIGADE_EMPTY<pos:position pos:line="109" pos:column="27"/></name><argument_list pos:line="109" pos:column="27">(<argument><expr><name><name pos:line="109" pos:column="28">ctx<pos:position pos:line="109" pos:column="31"/></name><operator pos:line="109" pos:column="31">-&gt;<pos:position pos:line="109" pos:column="36"/></operator><name pos:line="109" pos:column="33">bb<pos:position pos:line="109" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="37"/></condition><then pos:line="109" pos:column="37"> <block pos:line="109" pos:column="38">{
        <expr_stmt><expr><name pos:line="110" pos:column="9">status<pos:position pos:line="110" pos:column="15"/></name> <operator pos:line="110" pos:column="16">=<pos:position pos:line="110" pos:column="17"/></operator> <call><name pos:line="110" pos:column="18">ap_pass_brigade<pos:position pos:line="110" pos:column="33"/></name><argument_list pos:line="110" pos:column="33">(<argument><expr><name><name pos:line="110" pos:column="34">f<pos:position pos:line="110" pos:column="35"/></name><operator pos:line="110" pos:column="35">-&gt;<pos:position pos:line="110" pos:column="40"/></operator><name pos:line="110" pos:column="37">next<pos:position pos:line="110" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="43">ctx<pos:position pos:line="110" pos:column="46"/></name><operator pos:line="110" pos:column="46">-&gt;<pos:position pos:line="110" pos:column="51"/></operator><name pos:line="110" pos:column="48">bb<pos:position pos:line="110" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">apr_brigade_cleanup<pos:position pos:line="111" pos:column="28"/></name><argument_list pos:line="111" pos:column="28">(<argument><expr><name><name pos:line="111" pos:column="29">ctx<pos:position pos:line="111" pos:column="32"/></name><operator pos:line="111" pos:column="32">-&gt;<pos:position pos:line="111" pos:column="37"/></operator><name pos:line="111" pos:column="34">bb<pos:position pos:line="111" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="113" pos:column="5">clear_ctxpool<pos:position pos:line="113" pos:column="18"/></name><argument_list pos:line="113" pos:column="18">(<argument><expr><name pos:line="113" pos:column="19">ctx<pos:position pos:line="113" pos:column="22"/></name></expr></argument>)<pos:position pos:line="113" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="24"/></expr_stmt>
    <return pos:line="114" pos:column="5">return <expr><name pos:line="114" pos:column="12">status<pos:position pos:line="114" pos:column="18"/></name></expr>;<pos:position pos:line="114" pos:column="19"/></return>
}<pos:position pos:line="115" pos:column="2"/></block></function></unit>

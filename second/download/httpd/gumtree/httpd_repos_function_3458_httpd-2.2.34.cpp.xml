<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3458_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">client<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">apr_pool_t<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">p<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">client_socket_mode_t<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">socket_mode<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                  <parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">host<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">start_server<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">tmprv<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_socket_t<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">sock<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">buf<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><literal type="number" pos:line="6" pos:column="14">120<pos:position pos:line="6" pos:column="17"/></literal></expr>]<pos:position pos:line="6" pos:column="18"/></index></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_file_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">f<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">len<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">expected_len<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_off_t<pos:position pos:line="10" pos:column="14"/></name></type> <name pos:line="10" pos:column="15">current_file_offset<pos:position pos:line="10" pos:column="34"/></name></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_hdtr_t<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">hdtr<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">struct<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">iovec<pos:position pos:line="12" pos:column="17"/></name></name></type> <name><name pos:line="12" pos:column="18">headers<pos:position pos:line="12" pos:column="25"/></name><index pos:line="12" pos:column="25">[<expr><literal type="number" pos:line="12" pos:column="26">3<pos:position pos:line="12" pos:column="27"/></literal></expr>]<pos:position pos:line="12" pos:column="28"/></index></name></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">struct<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">iovec<pos:position pos:line="13" pos:column="17"/></name></name></type> <name><name pos:line="13" pos:column="18">trailers<pos:position pos:line="13" pos:column="26"/></name><index pos:line="13" pos:column="26">[<expr><literal type="number" pos:line="13" pos:column="27">3<pos:position pos:line="13" pos:column="28"/></literal></expr>]<pos:position pos:line="13" pos:column="29"/></index></name></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_size_t<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">bytes_read<pos:position pos:line="14" pos:column="26"/></name></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_pollset_t<pos:position pos:line="15" pos:column="18"/></name> <modifier pos:line="15" pos:column="19">*<pos:position pos:line="15" pos:column="20"/></modifier></type><name pos:line="15" pos:column="20">pset<pos:position pos:line="15" pos:column="24"/></name></decl>;<pos:position pos:line="15" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">apr_int32_t<pos:position pos:line="16" pos:column="16"/></name></type> <name pos:line="16" pos:column="17">nsocks<pos:position pos:line="16" pos:column="23"/></name></decl>;<pos:position pos:line="16" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">connect_tries<pos:position pos:line="17" pos:column="22"/></name> <init pos:line="17" pos:column="23">= <expr><literal type="number" pos:line="17" pos:column="25">1<pos:position pos:line="17" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">i<pos:position pos:line="18" pos:column="10"/></name></decl>;<pos:position pos:line="18" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">family<pos:position pos:line="19" pos:column="15"/></name></decl>;<pos:position pos:line="19" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">apr_sockaddr_t<pos:position pos:line="20" pos:column="19"/></name> <modifier pos:line="20" pos:column="20">*<pos:position pos:line="20" pos:column="21"/></modifier></type><name pos:line="20" pos:column="21">destsa<pos:position pos:line="20" pos:column="27"/></name></decl>;<pos:position pos:line="20" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">apr_proc_t<pos:position pos:line="21" pos:column="15"/></name></type> <name pos:line="21" pos:column="16">server<pos:position pos:line="21" pos:column="22"/></name></decl>;<pos:position pos:line="21" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">apr_interval_time_t<pos:position pos:line="22" pos:column="24"/></name></type> <name pos:line="22" pos:column="25">connect_retry_interval<pos:position pos:line="22" pos:column="47"/></name> <init pos:line="22" pos:column="48">= <expr><call><name pos:line="22" pos:column="50">apr_time_from_msec<pos:position pos:line="22" pos:column="68"/></name><argument_list pos:line="22" pos:column="68">(<argument><expr><literal type="number" pos:line="22" pos:column="69">50<pos:position pos:line="22" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="73"/></decl_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">start_server<pos:position pos:line="24" pos:column="21"/></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22"> <block pos:line="24" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">spawn_server<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">p<pos:position pos:line="25" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="25">&amp;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="26">server<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">connect_tries<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <literal type="number" pos:line="26" pos:column="25">5<pos:position pos:line="26" pos:column="26"/></literal></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt> <comment type="block" pos:line="26" pos:column="28">/* give it a chance to start up */</comment>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">create_testfile<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">p<pos:position pos:line="29" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="24">TESTFILE<pos:position pos:line="29" pos:column="32"/></name></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="31" pos:column="5">rv<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <call><name pos:line="31" pos:column="10">apr_file_open<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><operator pos:line="31" pos:column="24">&amp;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="25">f<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="28">TESTFILE<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">APR_FOPEN_READ<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="54">0<pos:position pos:line="31" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="57">p<pos:position pos:line="31" pos:column="58"/></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="60"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">rv<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">!=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">APR_SUCCESS<pos:position pos:line="32" pos:column="26"/></name></expr>)<pos:position pos:line="32" pos:column="27"/></condition><then pos:line="32" pos:column="27"> <block pos:line="32" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">aprerr<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><literal type="string" pos:line="33" pos:column="16">"apr_file_open()"<pos:position pos:line="33" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="35">rv<pos:position pos:line="33" pos:column="37"/></name></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">host<pos:position pos:line="36" pos:column="14"/></name></expr>)<pos:position pos:line="36" pos:column="15"/></condition><then pos:line="36" pos:column="15"> <block pos:line="36" pos:column="16">{
        <expr_stmt><expr><name pos:line="37" pos:column="9">host<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <literal type="string" pos:line="37" pos:column="16">"127.0.0.1"<pos:position pos:line="37" pos:column="27"/></literal></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="39" pos:column="5">family<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <name pos:line="39" pos:column="14">APR_INET<pos:position pos:line="39" pos:column="22"/></name></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">rv<pos:position pos:line="40" pos:column="7"/></name> <operator pos:line="40" pos:column="8">=<pos:position pos:line="40" pos:column="9"/></operator> <call><name pos:line="40" pos:column="10">apr_sockaddr_info_get<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><operator pos:line="40" pos:column="32">&amp;<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="33">destsa<pos:position pos:line="40" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="41">host<pos:position pos:line="40" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="47">family<pos:position pos:line="40" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="55">TESTSF_PORT<pos:position pos:line="40" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="68">0<pos:position pos:line="40" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="71">p<pos:position pos:line="40" pos:column="72"/></name></expr></argument>)<pos:position pos:line="40" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="74"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">rv<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">!=<pos:position pos:line="41" pos:column="14"/></operator> <name pos:line="41" pos:column="15">APR_SUCCESS<pos:position pos:line="41" pos:column="26"/></name></expr>)<pos:position pos:line="41" pos:column="27"/></condition><then pos:line="41" pos:column="27"> <block pos:line="41" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">aprerr<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><literal type="string" pos:line="42" pos:column="16">"apr_sockaddr_info_get()"<pos:position pos:line="42" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="43">rv<pos:position pos:line="42" pos:column="45"/></name></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <while pos:line="45" pos:column="5">while <condition pos:line="45" pos:column="11">(<expr><name pos:line="45" pos:column="12">connect_tries<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">--<pos:position pos:line="45" pos:column="27"/></operator></expr>)<pos:position pos:line="45" pos:column="28"/></condition> <block pos:line="45" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">apr_setup<pos:position pos:line="46" pos:column="18"/></name><argument_list pos:line="46" pos:column="18">(<argument><expr><name pos:line="46" pos:column="19">p<pos:position pos:line="46" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="22">&amp;<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="23">sock<pos:position pos:line="46" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="29">&amp;<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="30">family<pos:position pos:line="46" pos:column="36"/></name></expr></argument>)<pos:position pos:line="46" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="47" pos:column="9">rv<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <call><name pos:line="47" pos:column="14">apr_socket_connect<pos:position pos:line="47" pos:column="32"/></name><argument_list pos:line="47" pos:column="32">(<argument><expr><name pos:line="47" pos:column="33">sock<pos:position pos:line="47" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="39">destsa<pos:position pos:line="47" pos:column="45"/></name></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="47"/></expr_stmt>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">connect_tries<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">&amp;&amp;<pos:position pos:line="48" pos:column="37"/></operator> <call><name pos:line="48" pos:column="30">APR_STATUS_IS_ECONNREFUSED<pos:position pos:line="48" pos:column="56"/></name><argument_list pos:line="48" pos:column="56">(<argument><expr><name pos:line="48" pos:column="57">rv<pos:position pos:line="48" pos:column="59"/></name></expr></argument>)<pos:position pos:line="48" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="61"/></condition><then pos:line="48" pos:column="61"> <block pos:line="48" pos:column="62">{
            <decl_stmt><decl><type><name pos:line="49" pos:column="13">apr_status_t<pos:position pos:line="49" pos:column="25"/></name></type> <name pos:line="49" pos:column="26">tmprv<pos:position pos:line="49" pos:column="31"/></name> <init pos:line="49" pos:column="32">= <expr><call><name pos:line="49" pos:column="34">apr_socket_close<pos:position pos:line="49" pos:column="50"/></name><argument_list pos:line="49" pos:column="50">(<argument><expr><name pos:line="49" pos:column="51">sock<pos:position pos:line="49" pos:column="55"/></name></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="49" pos:column="57"/></decl_stmt>
            <if pos:line="50" pos:column="13">if <condition pos:line="50" pos:column="16">(<expr><name pos:line="50" pos:column="17">tmprv<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">!=<pos:position pos:line="50" pos:column="25"/></operator> <name pos:line="50" pos:column="26">APR_SUCCESS<pos:position pos:line="50" pos:column="37"/></name></expr>)<pos:position pos:line="50" pos:column="38"/></condition><then pos:line="50" pos:column="38"> <block pos:line="50" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="51" pos:column="17">aprerr<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><literal type="string" pos:line="51" pos:column="24">"apr_socket_close()"<pos:position pos:line="51" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="46">tmprv<pos:position pos:line="51" pos:column="51"/></name></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="52" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">apr_sleep<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">connect_retry_interval<pos:position pos:line="53" pos:column="45"/></name></expr></argument>)<pos:position pos:line="53" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name pos:line="54" pos:column="13">connect_retry_interval<pos:position pos:line="54" pos:column="35"/></name> <operator pos:line="54" pos:column="36">*=<pos:position pos:line="54" pos:column="38"/></operator> <literal type="number" pos:line="54" pos:column="39">2<pos:position pos:line="54" pos:column="40"/></literal></expr>;<pos:position pos:line="54" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then>
        <else pos:line="56" pos:column="9">else <block pos:line="56" pos:column="14">{
            <break pos:line="57" pos:column="13">break;<pos:position pos:line="57" pos:column="19"/></break>
        }<pos:position pos:line="58" pos:column="10"/></block></else></if>
    }<pos:position pos:line="59" pos:column="6"/></block></while>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">rv<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">!=<pos:position pos:line="60" pos:column="14"/></operator> <name pos:line="60" pos:column="15">APR_SUCCESS<pos:position pos:line="60" pos:column="26"/></name></expr>)<pos:position pos:line="60" pos:column="27"/></condition><then pos:line="60" pos:column="27"> <block pos:line="60" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">aprerr<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><literal type="string" pos:line="61" pos:column="16">"apr_socket_connect()"<pos:position pos:line="61" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="40">rv<pos:position pos:line="61" pos:column="42"/></name></expr></argument>)<pos:position pos:line="61" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <switch pos:line="64" pos:column="5">switch<condition pos:line="64" pos:column="11">(<expr><name pos:line="64" pos:column="12">socket_mode<pos:position pos:line="64" pos:column="23"/></name></expr>)<pos:position pos:line="64" pos:column="24"/></condition> <block pos:line="64" pos:column="25">{
    <case pos:line="65" pos:column="5">case <expr><name pos:line="65" pos:column="10">BLK<pos:position pos:line="65" pos:column="13"/></name></expr>:<pos:position pos:line="65" pos:column="14"/></case>
        <comment type="block" pos:line="66" pos:column="9">/* leave it blocking */</comment>
        <break pos:line="67" pos:column="9">break;<pos:position pos:line="67" pos:column="15"/></break>
    <case pos:line="68" pos:column="5">case <expr><name pos:line="68" pos:column="10">NONBLK<pos:position pos:line="68" pos:column="16"/></name></expr>:<pos:position pos:line="68" pos:column="17"/></case>
        <comment type="block" pos:line="69" pos:column="9">/* set it non-blocking */</comment>
        <expr_stmt><expr><name pos:line="70" pos:column="9">rv<pos:position pos:line="70" pos:column="11"/></name> <operator pos:line="70" pos:column="12">=<pos:position pos:line="70" pos:column="13"/></operator> <call><name pos:line="70" pos:column="14">apr_socket_opt_set<pos:position pos:line="70" pos:column="32"/></name><argument_list pos:line="70" pos:column="32">(<argument><expr><name pos:line="70" pos:column="33">sock<pos:position pos:line="70" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="39">APR_SO_NONBLOCK<pos:position pos:line="70" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="56">1<pos:position pos:line="70" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="59"/></expr_stmt>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">rv<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">!=<pos:position pos:line="71" pos:column="18"/></operator> <name pos:line="71" pos:column="19">APR_SUCCESS<pos:position pos:line="71" pos:column="30"/></name></expr>)<pos:position pos:line="71" pos:column="31"/></condition><then pos:line="71" pos:column="31"> <block pos:line="71" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="72" pos:column="13">aprerr<pos:position pos:line="72" pos:column="19"/></name><argument_list pos:line="72" pos:column="19">(<argument><expr><literal type="string" pos:line="72" pos:column="20">"apr_socket_opt_set(APR_SO_NONBLOCK)"<pos:position pos:line="72" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="59">rv<pos:position pos:line="72" pos:column="61"/></name></expr></argument>)<pos:position pos:line="72" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>
        <break pos:line="74" pos:column="9">break;<pos:position pos:line="74" pos:column="15"/></break>
    <case pos:line="75" pos:column="5">case <expr><name pos:line="75" pos:column="10">TIMEOUT<pos:position pos:line="75" pos:column="17"/></name></expr>:<pos:position pos:line="75" pos:column="18"/></case>
        <comment type="block" pos:line="76" pos:column="9">/* set a timeout */</comment>
        <expr_stmt><expr><name pos:line="77" pos:column="9">rv<pos:position pos:line="77" pos:column="11"/></name> <operator pos:line="77" pos:column="12">=<pos:position pos:line="77" pos:column="13"/></operator> <call><name pos:line="77" pos:column="14">apr_socket_timeout_set<pos:position pos:line="77" pos:column="36"/></name><argument_list pos:line="77" pos:column="36">(<argument><expr><name pos:line="77" pos:column="37">sock<pos:position pos:line="77" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="43">100<pos:position pos:line="77" pos:column="46"/></literal> <operator pos:line="77" pos:column="47">*<pos:position pos:line="77" pos:column="48"/></operator> <name pos:line="77" pos:column="49">APR_USEC_PER_SEC<pos:position pos:line="77" pos:column="65"/></name></expr></argument>)<pos:position pos:line="77" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="67"/></expr_stmt>
        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name pos:line="78" pos:column="13">rv<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">!=<pos:position pos:line="78" pos:column="18"/></operator> <name pos:line="78" pos:column="19">APR_SUCCESS<pos:position pos:line="78" pos:column="30"/></name></expr>)<pos:position pos:line="78" pos:column="31"/></condition><then pos:line="78" pos:column="31"> <block pos:line="78" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="79" pos:column="13">aprerr<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><literal type="string" pos:line="79" pos:column="20">"apr_socket_opt_set(APR_SO_NONBLOCK)"<pos:position pos:line="79" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="59">rv<pos:position pos:line="79" pos:column="61"/></name></expr></argument>)<pos:position pos:line="79" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">exit<pos:position pos:line="80" pos:column="17"/></name><argument_list pos:line="80" pos:column="17">(<argument><expr><literal type="number" pos:line="80" pos:column="18">1<pos:position pos:line="80" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="81" pos:column="10"/></block></then></if>
        <break pos:line="82" pos:column="9">break;<pos:position pos:line="82" pos:column="15"/></break>
    <default pos:line="83" pos:column="5">default:<pos:position pos:line="83" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">assert<pos:position pos:line="84" pos:column="15"/></name><argument_list pos:line="84" pos:column="15">(<argument><expr><literal type="number" pos:line="84" pos:column="16">1<pos:position pos:line="84" pos:column="17"/></literal> <operator pos:line="84" pos:column="18">!=<pos:position pos:line="84" pos:column="20"/></operator> <literal type="number" pos:line="84" pos:column="21">1<pos:position pos:line="84" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></switch>

    <expr_stmt><expr><call><name pos:line="87" pos:column="5">printf<pos:position pos:line="87" pos:column="11"/></name><argument_list pos:line="87" pos:column="11">(<argument><expr><literal type="string" pos:line="87" pos:column="12">"Sending the file...\n"<pos:position pos:line="87" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="89" pos:column="5">hdtr<pos:position pos:line="89" pos:column="9"/></name><operator pos:line="89" pos:column="9">.<pos:position pos:line="89" pos:column="10"/></operator><name pos:line="89" pos:column="10">headers<pos:position pos:line="89" pos:column="17"/></name></name> <operator pos:line="89" pos:column="18">=<pos:position pos:line="89" pos:column="19"/></operator> <name pos:line="89" pos:column="20">headers<pos:position pos:line="89" pos:column="27"/></name></expr>;<pos:position pos:line="89" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="90" pos:column="5">hdtr<pos:position pos:line="90" pos:column="9"/></name><operator pos:line="90" pos:column="9">.<pos:position pos:line="90" pos:column="10"/></operator><name pos:line="90" pos:column="10">numheaders<pos:position pos:line="90" pos:column="20"/></name></name> <operator pos:line="90" pos:column="21">=<pos:position pos:line="90" pos:column="22"/></operator> <literal type="number" pos:line="90" pos:column="23">3<pos:position pos:line="90" pos:column="24"/></literal></expr>;<pos:position pos:line="90" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="91" pos:column="5">hdtr<pos:position pos:line="91" pos:column="9"/></name><operator pos:line="91" pos:column="9">.<pos:position pos:line="91" pos:column="10"/></operator><name pos:line="91" pos:column="10">headers<pos:position pos:line="91" pos:column="17"/></name><index pos:line="91" pos:column="17">[<expr><literal type="number" pos:line="91" pos:column="18">0<pos:position pos:line="91" pos:column="19"/></literal></expr>]<pos:position pos:line="91" pos:column="20"/></index></name><operator pos:line="91" pos:column="20">.<pos:position pos:line="91" pos:column="21"/></operator><name pos:line="91" pos:column="21">iov_base<pos:position pos:line="91" pos:column="29"/></name> <operator pos:line="91" pos:column="30">=<pos:position pos:line="91" pos:column="31"/></operator> <name pos:line="91" pos:column="32">HDR1<pos:position pos:line="91" pos:column="36"/></name></expr>;<pos:position pos:line="91" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="92" pos:column="5">hdtr<pos:position pos:line="92" pos:column="9"/></name><operator pos:line="92" pos:column="9">.<pos:position pos:line="92" pos:column="10"/></operator><name pos:line="92" pos:column="10">headers<pos:position pos:line="92" pos:column="17"/></name><index pos:line="92" pos:column="17">[<expr><literal type="number" pos:line="92" pos:column="18">0<pos:position pos:line="92" pos:column="19"/></literal></expr>]<pos:position pos:line="92" pos:column="20"/></index></name><operator pos:line="92" pos:column="20">.<pos:position pos:line="92" pos:column="21"/></operator><name pos:line="92" pos:column="21">iov_len<pos:position pos:line="92" pos:column="28"/></name>  <operator pos:line="92" pos:column="30">=<pos:position pos:line="92" pos:column="31"/></operator> <call><name pos:line="92" pos:column="32">strlen<pos:position pos:line="92" pos:column="38"/></name><argument_list pos:line="92" pos:column="38">(<argument><expr><name><name pos:line="92" pos:column="39">hdtr<pos:position pos:line="92" pos:column="43"/></name><operator pos:line="92" pos:column="43">.<pos:position pos:line="92" pos:column="44"/></operator><name pos:line="92" pos:column="44">headers<pos:position pos:line="92" pos:column="51"/></name><index pos:line="92" pos:column="51">[<expr><literal type="number" pos:line="92" pos:column="52">0<pos:position pos:line="92" pos:column="53"/></literal></expr>]<pos:position pos:line="92" pos:column="54"/></index></name><operator pos:line="92" pos:column="54">.<pos:position pos:line="92" pos:column="55"/></operator><name pos:line="92" pos:column="55">iov_base<pos:position pos:line="92" pos:column="63"/></name></expr></argument>)<pos:position pos:line="92" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="93" pos:column="5">hdtr<pos:position pos:line="93" pos:column="9"/></name><operator pos:line="93" pos:column="9">.<pos:position pos:line="93" pos:column="10"/></operator><name pos:line="93" pos:column="10">headers<pos:position pos:line="93" pos:column="17"/></name><index pos:line="93" pos:column="17">[<expr><literal type="number" pos:line="93" pos:column="18">1<pos:position pos:line="93" pos:column="19"/></literal></expr>]<pos:position pos:line="93" pos:column="20"/></index></name><operator pos:line="93" pos:column="20">.<pos:position pos:line="93" pos:column="21"/></operator><name pos:line="93" pos:column="21">iov_base<pos:position pos:line="93" pos:column="29"/></name> <operator pos:line="93" pos:column="30">=<pos:position pos:line="93" pos:column="31"/></operator> <name pos:line="93" pos:column="32">HDR2<pos:position pos:line="93" pos:column="36"/></name></expr>;<pos:position pos:line="93" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="94" pos:column="5">hdtr<pos:position pos:line="94" pos:column="9"/></name><operator pos:line="94" pos:column="9">.<pos:position pos:line="94" pos:column="10"/></operator><name pos:line="94" pos:column="10">headers<pos:position pos:line="94" pos:column="17"/></name><index pos:line="94" pos:column="17">[<expr><literal type="number" pos:line="94" pos:column="18">1<pos:position pos:line="94" pos:column="19"/></literal></expr>]<pos:position pos:line="94" pos:column="20"/></index></name><operator pos:line="94" pos:column="20">.<pos:position pos:line="94" pos:column="21"/></operator><name pos:line="94" pos:column="21">iov_len<pos:position pos:line="94" pos:column="28"/></name>  <operator pos:line="94" pos:column="30">=<pos:position pos:line="94" pos:column="31"/></operator> <call><name pos:line="94" pos:column="32">strlen<pos:position pos:line="94" pos:column="38"/></name><argument_list pos:line="94" pos:column="38">(<argument><expr><name><name pos:line="94" pos:column="39">hdtr<pos:position pos:line="94" pos:column="43"/></name><operator pos:line="94" pos:column="43">.<pos:position pos:line="94" pos:column="44"/></operator><name pos:line="94" pos:column="44">headers<pos:position pos:line="94" pos:column="51"/></name><index pos:line="94" pos:column="51">[<expr><literal type="number" pos:line="94" pos:column="52">1<pos:position pos:line="94" pos:column="53"/></literal></expr>]<pos:position pos:line="94" pos:column="54"/></index></name><operator pos:line="94" pos:column="54">.<pos:position pos:line="94" pos:column="55"/></operator><name pos:line="94" pos:column="55">iov_base<pos:position pos:line="94" pos:column="63"/></name></expr></argument>)<pos:position pos:line="94" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="95" pos:column="5">hdtr<pos:position pos:line="95" pos:column="9"/></name><operator pos:line="95" pos:column="9">.<pos:position pos:line="95" pos:column="10"/></operator><name pos:line="95" pos:column="10">headers<pos:position pos:line="95" pos:column="17"/></name><index pos:line="95" pos:column="17">[<expr><literal type="number" pos:line="95" pos:column="18">2<pos:position pos:line="95" pos:column="19"/></literal></expr>]<pos:position pos:line="95" pos:column="20"/></index></name><operator pos:line="95" pos:column="20">.<pos:position pos:line="95" pos:column="21"/></operator><name pos:line="95" pos:column="21">iov_base<pos:position pos:line="95" pos:column="29"/></name> <operator pos:line="95" pos:column="30">=<pos:position pos:line="95" pos:column="31"/></operator> <call><name pos:line="95" pos:column="32">malloc<pos:position pos:line="95" pos:column="38"/></name><argument_list pos:line="95" pos:column="38">(<argument><expr><name pos:line="95" pos:column="39">HDR3_LEN<pos:position pos:line="95" pos:column="47"/></name></expr></argument>)<pos:position pos:line="95" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="96" pos:column="5">assert<pos:position pos:line="96" pos:column="11"/></name><argument_list pos:line="96" pos:column="11">(<argument><expr><name><name pos:line="96" pos:column="12">hdtr<pos:position pos:line="96" pos:column="16"/></name><operator pos:line="96" pos:column="16">.<pos:position pos:line="96" pos:column="17"/></operator><name pos:line="96" pos:column="17">headers<pos:position pos:line="96" pos:column="24"/></name><index pos:line="96" pos:column="24">[<expr><literal type="number" pos:line="96" pos:column="25">2<pos:position pos:line="96" pos:column="26"/></literal></expr>]<pos:position pos:line="96" pos:column="27"/></index></name><operator pos:line="96" pos:column="27">.<pos:position pos:line="96" pos:column="28"/></operator><name pos:line="96" pos:column="28">iov_base<pos:position pos:line="96" pos:column="36"/></name></expr></argument>)<pos:position pos:line="96" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">memset<pos:position pos:line="97" pos:column="11"/></name><argument_list pos:line="97" pos:column="11">(<argument><expr><name><name pos:line="97" pos:column="12">hdtr<pos:position pos:line="97" pos:column="16"/></name><operator pos:line="97" pos:column="16">.<pos:position pos:line="97" pos:column="17"/></operator><name pos:line="97" pos:column="17">headers<pos:position pos:line="97" pos:column="24"/></name><index pos:line="97" pos:column="24">[<expr><literal type="number" pos:line="97" pos:column="25">2<pos:position pos:line="97" pos:column="26"/></literal></expr>]<pos:position pos:line="97" pos:column="27"/></index></name><operator pos:line="97" pos:column="27">.<pos:position pos:line="97" pos:column="28"/></operator><name pos:line="97" pos:column="28">iov_base<pos:position pos:line="97" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="38">HDR3_CHAR<pos:position pos:line="97" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="49">HDR3_LEN<pos:position pos:line="97" pos:column="57"/></name></expr></argument>)<pos:position pos:line="97" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="98" pos:column="5">hdtr<pos:position pos:line="98" pos:column="9"/></name><operator pos:line="98" pos:column="9">.<pos:position pos:line="98" pos:column="10"/></operator><name pos:line="98" pos:column="10">headers<pos:position pos:line="98" pos:column="17"/></name><index pos:line="98" pos:column="17">[<expr><literal type="number" pos:line="98" pos:column="18">2<pos:position pos:line="98" pos:column="19"/></literal></expr>]<pos:position pos:line="98" pos:column="20"/></index></name><operator pos:line="98" pos:column="20">.<pos:position pos:line="98" pos:column="21"/></operator><name pos:line="98" pos:column="21">iov_len<pos:position pos:line="98" pos:column="28"/></name>  <operator pos:line="98" pos:column="30">=<pos:position pos:line="98" pos:column="31"/></operator> <name pos:line="98" pos:column="32">HDR3_LEN<pos:position pos:line="98" pos:column="40"/></name></expr>;<pos:position pos:line="98" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="100" pos:column="5">hdtr<pos:position pos:line="100" pos:column="9"/></name><operator pos:line="100" pos:column="9">.<pos:position pos:line="100" pos:column="10"/></operator><name pos:line="100" pos:column="10">trailers<pos:position pos:line="100" pos:column="18"/></name></name> <operator pos:line="100" pos:column="19">=<pos:position pos:line="100" pos:column="20"/></operator> <name pos:line="100" pos:column="21">trailers<pos:position pos:line="100" pos:column="29"/></name></expr>;<pos:position pos:line="100" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="101" pos:column="5">hdtr<pos:position pos:line="101" pos:column="9"/></name><operator pos:line="101" pos:column="9">.<pos:position pos:line="101" pos:column="10"/></operator><name pos:line="101" pos:column="10">numtrailers<pos:position pos:line="101" pos:column="21"/></name></name> <operator pos:line="101" pos:column="22">=<pos:position pos:line="101" pos:column="23"/></operator> <literal type="number" pos:line="101" pos:column="24">3<pos:position pos:line="101" pos:column="25"/></literal></expr>;<pos:position pos:line="101" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="102" pos:column="5">hdtr<pos:position pos:line="102" pos:column="9"/></name><operator pos:line="102" pos:column="9">.<pos:position pos:line="102" pos:column="10"/></operator><name pos:line="102" pos:column="10">trailers<pos:position pos:line="102" pos:column="18"/></name><index pos:line="102" pos:column="18">[<expr><literal type="number" pos:line="102" pos:column="19">0<pos:position pos:line="102" pos:column="20"/></literal></expr>]<pos:position pos:line="102" pos:column="21"/></index></name><operator pos:line="102" pos:column="21">.<pos:position pos:line="102" pos:column="22"/></operator><name pos:line="102" pos:column="22">iov_base<pos:position pos:line="102" pos:column="30"/></name> <operator pos:line="102" pos:column="31">=<pos:position pos:line="102" pos:column="32"/></operator> <name pos:line="102" pos:column="33">TRL1<pos:position pos:line="102" pos:column="37"/></name></expr>;<pos:position pos:line="102" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="103" pos:column="5">hdtr<pos:position pos:line="103" pos:column="9"/></name><operator pos:line="103" pos:column="9">.<pos:position pos:line="103" pos:column="10"/></operator><name pos:line="103" pos:column="10">trailers<pos:position pos:line="103" pos:column="18"/></name><index pos:line="103" pos:column="18">[<expr><literal type="number" pos:line="103" pos:column="19">0<pos:position pos:line="103" pos:column="20"/></literal></expr>]<pos:position pos:line="103" pos:column="21"/></index></name><operator pos:line="103" pos:column="21">.<pos:position pos:line="103" pos:column="22"/></operator><name pos:line="103" pos:column="22">iov_len<pos:position pos:line="103" pos:column="29"/></name>  <operator pos:line="103" pos:column="31">=<pos:position pos:line="103" pos:column="32"/></operator> <call><name pos:line="103" pos:column="33">strlen<pos:position pos:line="103" pos:column="39"/></name><argument_list pos:line="103" pos:column="39">(<argument><expr><name><name pos:line="103" pos:column="40">hdtr<pos:position pos:line="103" pos:column="44"/></name><operator pos:line="103" pos:column="44">.<pos:position pos:line="103" pos:column="45"/></operator><name pos:line="103" pos:column="45">trailers<pos:position pos:line="103" pos:column="53"/></name><index pos:line="103" pos:column="53">[<expr><literal type="number" pos:line="103" pos:column="54">0<pos:position pos:line="103" pos:column="55"/></literal></expr>]<pos:position pos:line="103" pos:column="56"/></index></name><operator pos:line="103" pos:column="56">.<pos:position pos:line="103" pos:column="57"/></operator><name pos:line="103" pos:column="57">iov_base<pos:position pos:line="103" pos:column="65"/></name></expr></argument>)<pos:position pos:line="103" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="104" pos:column="5">hdtr<pos:position pos:line="104" pos:column="9"/></name><operator pos:line="104" pos:column="9">.<pos:position pos:line="104" pos:column="10"/></operator><name pos:line="104" pos:column="10">trailers<pos:position pos:line="104" pos:column="18"/></name><index pos:line="104" pos:column="18">[<expr><literal type="number" pos:line="104" pos:column="19">1<pos:position pos:line="104" pos:column="20"/></literal></expr>]<pos:position pos:line="104" pos:column="21"/></index></name><operator pos:line="104" pos:column="21">.<pos:position pos:line="104" pos:column="22"/></operator><name pos:line="104" pos:column="22">iov_base<pos:position pos:line="104" pos:column="30"/></name> <operator pos:line="104" pos:column="31">=<pos:position pos:line="104" pos:column="32"/></operator> <name pos:line="104" pos:column="33">TRL2<pos:position pos:line="104" pos:column="37"/></name></expr>;<pos:position pos:line="104" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="105" pos:column="5">hdtr<pos:position pos:line="105" pos:column="9"/></name><operator pos:line="105" pos:column="9">.<pos:position pos:line="105" pos:column="10"/></operator><name pos:line="105" pos:column="10">trailers<pos:position pos:line="105" pos:column="18"/></name><index pos:line="105" pos:column="18">[<expr><literal type="number" pos:line="105" pos:column="19">1<pos:position pos:line="105" pos:column="20"/></literal></expr>]<pos:position pos:line="105" pos:column="21"/></index></name><operator pos:line="105" pos:column="21">.<pos:position pos:line="105" pos:column="22"/></operator><name pos:line="105" pos:column="22">iov_len<pos:position pos:line="105" pos:column="29"/></name>  <operator pos:line="105" pos:column="31">=<pos:position pos:line="105" pos:column="32"/></operator> <call><name pos:line="105" pos:column="33">strlen<pos:position pos:line="105" pos:column="39"/></name><argument_list pos:line="105" pos:column="39">(<argument><expr><name><name pos:line="105" pos:column="40">hdtr<pos:position pos:line="105" pos:column="44"/></name><operator pos:line="105" pos:column="44">.<pos:position pos:line="105" pos:column="45"/></operator><name pos:line="105" pos:column="45">trailers<pos:position pos:line="105" pos:column="53"/></name><index pos:line="105" pos:column="53">[<expr><literal type="number" pos:line="105" pos:column="54">1<pos:position pos:line="105" pos:column="55"/></literal></expr>]<pos:position pos:line="105" pos:column="56"/></index></name><operator pos:line="105" pos:column="56">.<pos:position pos:line="105" pos:column="57"/></operator><name pos:line="105" pos:column="57">iov_base<pos:position pos:line="105" pos:column="65"/></name></expr></argument>)<pos:position pos:line="105" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="106" pos:column="5">hdtr<pos:position pos:line="106" pos:column="9"/></name><operator pos:line="106" pos:column="9">.<pos:position pos:line="106" pos:column="10"/></operator><name pos:line="106" pos:column="10">trailers<pos:position pos:line="106" pos:column="18"/></name><index pos:line="106" pos:column="18">[<expr><literal type="number" pos:line="106" pos:column="19">2<pos:position pos:line="106" pos:column="20"/></literal></expr>]<pos:position pos:line="106" pos:column="21"/></index></name><operator pos:line="106" pos:column="21">.<pos:position pos:line="106" pos:column="22"/></operator><name pos:line="106" pos:column="22">iov_base<pos:position pos:line="106" pos:column="30"/></name> <operator pos:line="106" pos:column="31">=<pos:position pos:line="106" pos:column="32"/></operator> <call><name pos:line="106" pos:column="33">malloc<pos:position pos:line="106" pos:column="39"/></name><argument_list pos:line="106" pos:column="39">(<argument><expr><name pos:line="106" pos:column="40">TRL3_LEN<pos:position pos:line="106" pos:column="48"/></name></expr></argument>)<pos:position pos:line="106" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">memset<pos:position pos:line="107" pos:column="11"/></name><argument_list pos:line="107" pos:column="11">(<argument><expr><name><name pos:line="107" pos:column="12">hdtr<pos:position pos:line="107" pos:column="16"/></name><operator pos:line="107" pos:column="16">.<pos:position pos:line="107" pos:column="17"/></operator><name pos:line="107" pos:column="17">trailers<pos:position pos:line="107" pos:column="25"/></name><index pos:line="107" pos:column="25">[<expr><literal type="number" pos:line="107" pos:column="26">2<pos:position pos:line="107" pos:column="27"/></literal></expr>]<pos:position pos:line="107" pos:column="28"/></index></name><operator pos:line="107" pos:column="28">.<pos:position pos:line="107" pos:column="29"/></operator><name pos:line="107" pos:column="29">iov_base<pos:position pos:line="107" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="39">TRL3_CHAR<pos:position pos:line="107" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="50">TRL3_LEN<pos:position pos:line="107" pos:column="58"/></name></expr></argument>)<pos:position pos:line="107" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="108" pos:column="5">assert<pos:position pos:line="108" pos:column="11"/></name><argument_list pos:line="108" pos:column="11">(<argument><expr><name><name pos:line="108" pos:column="12">hdtr<pos:position pos:line="108" pos:column="16"/></name><operator pos:line="108" pos:column="16">.<pos:position pos:line="108" pos:column="17"/></operator><name pos:line="108" pos:column="17">trailers<pos:position pos:line="108" pos:column="25"/></name><index pos:line="108" pos:column="25">[<expr><literal type="number" pos:line="108" pos:column="26">2<pos:position pos:line="108" pos:column="27"/></literal></expr>]<pos:position pos:line="108" pos:column="28"/></index></name><operator pos:line="108" pos:column="28">.<pos:position pos:line="108" pos:column="29"/></operator><name pos:line="108" pos:column="29">iov_base<pos:position pos:line="108" pos:column="37"/></name></expr></argument>)<pos:position pos:line="108" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="109" pos:column="5">hdtr<pos:position pos:line="109" pos:column="9"/></name><operator pos:line="109" pos:column="9">.<pos:position pos:line="109" pos:column="10"/></operator><name pos:line="109" pos:column="10">trailers<pos:position pos:line="109" pos:column="18"/></name><index pos:line="109" pos:column="18">[<expr><literal type="number" pos:line="109" pos:column="19">2<pos:position pos:line="109" pos:column="20"/></literal></expr>]<pos:position pos:line="109" pos:column="21"/></index></name><operator pos:line="109" pos:column="21">.<pos:position pos:line="109" pos:column="22"/></operator><name pos:line="109" pos:column="22">iov_len<pos:position pos:line="109" pos:column="29"/></name>  <operator pos:line="109" pos:column="31">=<pos:position pos:line="109" pos:column="32"/></operator> <name pos:line="109" pos:column="33">TRL3_LEN<pos:position pos:line="109" pos:column="41"/></name></expr>;<pos:position pos:line="109" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><name pos:line="111" pos:column="5">expected_len<pos:position pos:line="111" pos:column="17"/></name> <operator pos:line="111" pos:column="18">=<pos:position pos:line="111" pos:column="19"/></operator> 
        <call><name pos:line="112" pos:column="9">strlen<pos:position pos:line="112" pos:column="15"/></name><argument_list pos:line="112" pos:column="15">(<argument><expr><name pos:line="112" pos:column="16">HDR1<pos:position pos:line="112" pos:column="20"/></name></expr></argument>)<pos:position pos:line="112" pos:column="21"/></argument_list></call> <operator pos:line="112" pos:column="22">+<pos:position pos:line="112" pos:column="23"/></operator> <call><name pos:line="112" pos:column="24">strlen<pos:position pos:line="112" pos:column="30"/></name><argument_list pos:line="112" pos:column="30">(<argument><expr><name pos:line="112" pos:column="31">HDR2<pos:position pos:line="112" pos:column="35"/></name></expr></argument>)<pos:position pos:line="112" pos:column="36"/></argument_list></call> <operator pos:line="112" pos:column="37">+<pos:position pos:line="112" pos:column="38"/></operator> <name pos:line="112" pos:column="39">HDR3_LEN<pos:position pos:line="112" pos:column="47"/></name> <operator pos:line="112" pos:column="48">+<pos:position pos:line="112" pos:column="49"/></operator>
        <call><name pos:line="113" pos:column="9">strlen<pos:position pos:line="113" pos:column="15"/></name><argument_list pos:line="113" pos:column="15">(<argument><expr><name pos:line="113" pos:column="16">TRL1<pos:position pos:line="113" pos:column="20"/></name></expr></argument>)<pos:position pos:line="113" pos:column="21"/></argument_list></call> <operator pos:line="113" pos:column="22">+<pos:position pos:line="113" pos:column="23"/></operator> <call><name pos:line="113" pos:column="24">strlen<pos:position pos:line="113" pos:column="30"/></name><argument_list pos:line="113" pos:column="30">(<argument><expr><name pos:line="113" pos:column="31">TRL2<pos:position pos:line="113" pos:column="35"/></name></expr></argument>)<pos:position pos:line="113" pos:column="36"/></argument_list></call> <operator pos:line="113" pos:column="37">+<pos:position pos:line="113" pos:column="38"/></operator> <name pos:line="113" pos:column="39">TRL3_LEN<pos:position pos:line="113" pos:column="47"/></name> <operator pos:line="113" pos:column="48">+<pos:position pos:line="113" pos:column="49"/></operator>
        <name pos:line="114" pos:column="9">FILE_LENGTH<pos:position pos:line="114" pos:column="20"/></name></expr>;<pos:position pos:line="114" pos:column="21"/></expr_stmt>
    
    <if pos:line="116" pos:column="5">if <condition pos:line="116" pos:column="8">(<expr><name pos:line="116" pos:column="9">socket_mode<pos:position pos:line="116" pos:column="20"/></name> <operator pos:line="116" pos:column="21">==<pos:position pos:line="116" pos:column="23"/></operator> <name pos:line="116" pos:column="24">BLK<pos:position pos:line="116" pos:column="27"/></name></expr>)<pos:position pos:line="116" pos:column="28"/></condition><then pos:line="116" pos:column="28"> <block pos:line="116" pos:column="29">{
        <expr_stmt><expr><name pos:line="117" pos:column="9">current_file_offset<pos:position pos:line="117" pos:column="28"/></name> <operator pos:line="117" pos:column="29">=<pos:position pos:line="117" pos:column="30"/></operator> <literal type="number" pos:line="117" pos:column="31">0<pos:position pos:line="117" pos:column="32"/></literal></expr>;<pos:position pos:line="117" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="118" pos:column="9">len<pos:position pos:line="118" pos:column="12"/></name> <operator pos:line="118" pos:column="13">=<pos:position pos:line="118" pos:column="14"/></operator> <name pos:line="118" pos:column="15">FILE_LENGTH<pos:position pos:line="118" pos:column="26"/></name></expr>;<pos:position pos:line="118" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="119" pos:column="9">rv<pos:position pos:line="119" pos:column="11"/></name> <operator pos:line="119" pos:column="12">=<pos:position pos:line="119" pos:column="13"/></operator> <call><name pos:line="119" pos:column="14">apr_socket_sendfile<pos:position pos:line="119" pos:column="33"/></name><argument_list pos:line="119" pos:column="33">(<argument><expr><name pos:line="119" pos:column="34">sock<pos:position pos:line="119" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="40">f<pos:position pos:line="119" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="43">&amp;<pos:position pos:line="119" pos:column="48"/></operator><name pos:line="119" pos:column="44">hdtr<pos:position pos:line="119" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="50">&amp;<pos:position pos:line="119" pos:column="55"/></operator><name pos:line="119" pos:column="51">current_file_offset<pos:position pos:line="119" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="72">&amp;<pos:position pos:line="119" pos:column="77"/></operator><name pos:line="119" pos:column="73">len<pos:position pos:line="119" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="78">0<pos:position pos:line="119" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="81"/></expr_stmt>
        <if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name pos:line="120" pos:column="13">rv<pos:position pos:line="120" pos:column="15"/></name> <operator pos:line="120" pos:column="16">!=<pos:position pos:line="120" pos:column="18"/></operator> <name pos:line="120" pos:column="19">APR_SUCCESS<pos:position pos:line="120" pos:column="30"/></name></expr>)<pos:position pos:line="120" pos:column="31"/></condition><then pos:line="120" pos:column="31"> <block pos:line="120" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="121" pos:column="13">aprerr<pos:position pos:line="121" pos:column="19"/></name><argument_list pos:line="121" pos:column="19">(<argument><expr><literal type="string" pos:line="121" pos:column="20">"apr_socket_sendfile()"<pos:position pos:line="121" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="121" pos:column="45">rv<pos:position pos:line="121" pos:column="47"/></name></expr></argument>)<pos:position pos:line="121" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="122" pos:column="10"/></block></then></if>
        
        <expr_stmt><expr><call><name pos:line="124" pos:column="9">printf<pos:position pos:line="124" pos:column="15"/></name><argument_list pos:line="124" pos:column="15">(<argument><expr><literal type="string" pos:line="124" pos:column="16">"apr_socket_sendfile() updated offset with %ld\n"<pos:position pos:line="124" pos:column="65"/></literal></expr></argument>,
               <argument><expr><operator pos:line="125" pos:column="16">(<pos:position pos:line="125" pos:column="17"/></operator><name pos:line="125" pos:column="17">long<pos:position pos:line="125" pos:column="21"/></name> <name pos:line="125" pos:column="22">int<pos:position pos:line="125" pos:column="25"/></name><operator pos:line="125" pos:column="25">)<pos:position pos:line="125" pos:column="26"/></operator><name pos:line="125" pos:column="26">current_file_offset<pos:position pos:line="125" pos:column="45"/></name></expr></argument>)<pos:position pos:line="125" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="47"/></expr_stmt>
        
        <expr_stmt><expr><call><name pos:line="127" pos:column="9">printf<pos:position pos:line="127" pos:column="15"/></name><argument_list pos:line="127" pos:column="15">(<argument><expr><literal type="string" pos:line="127" pos:column="16">"apr_socket_sendfile() updated len with %ld\n"<pos:position pos:line="127" pos:column="62"/></literal></expr></argument>,
               <argument><expr><operator pos:line="128" pos:column="16">(<pos:position pos:line="128" pos:column="17"/></operator><name pos:line="128" pos:column="17">long<pos:position pos:line="128" pos:column="21"/></name> <name pos:line="128" pos:column="22">int<pos:position pos:line="128" pos:column="25"/></name><operator pos:line="128" pos:column="25">)<pos:position pos:line="128" pos:column="26"/></operator><name pos:line="128" pos:column="26">len<pos:position pos:line="128" pos:column="29"/></name></expr></argument>)<pos:position pos:line="128" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="31"/></expr_stmt>
        
        <expr_stmt><expr><call><name pos:line="130" pos:column="9">printf<pos:position pos:line="130" pos:column="15"/></name><argument_list pos:line="130" pos:column="15">(<argument><expr><literal type="string" pos:line="130" pos:column="16">"bytes really sent: %"<pos:position pos:line="130" pos:column="38"/></literal> <name pos:line="130" pos:column="39">APR_SIZE_T_FMT<pos:position pos:line="130" pos:column="53"/></name> <literal type="string" pos:line="130" pos:column="54">"\n"<pos:position pos:line="130" pos:column="58"/></literal></expr></argument>,
               <argument><expr><name pos:line="131" pos:column="16">expected_len<pos:position pos:line="131" pos:column="28"/></name></expr></argument>)<pos:position pos:line="131" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="30"/></expr_stmt>

        <if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><name pos:line="133" pos:column="13">len<pos:position pos:line="133" pos:column="16"/></name> <operator pos:line="133" pos:column="17">!=<pos:position pos:line="133" pos:column="19"/></operator> <name pos:line="133" pos:column="20">expected_len<pos:position pos:line="133" pos:column="32"/></name></expr>)<pos:position pos:line="133" pos:column="33"/></condition><then pos:line="133" pos:column="33"> <block pos:line="133" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="134" pos:column="13">fprintf<pos:position pos:line="134" pos:column="20"/></name><argument_list pos:line="134" pos:column="20">(<argument><expr><name pos:line="134" pos:column="21">stderr<pos:position pos:line="134" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="29">"apr_socket_sendfile() didn't report the correct "<pos:position pos:line="134" pos:column="79"/></literal>
                    <literal type="string" pos:line="135" pos:column="21">"number of bytes sent!\n"<pos:position pos:line="135" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="136" pos:column="13">exit<pos:position pos:line="136" pos:column="17"/></name><argument_list pos:line="136" pos:column="17">(<argument><expr><literal type="number" pos:line="136" pos:column="18">1<pos:position pos:line="136" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="137" pos:column="10"/></block></then></if>
    }<pos:position pos:line="138" pos:column="6"/></block></then>
    <else pos:line="139" pos:column="5">else <block pos:line="139" pos:column="10">{
        <comment type="block" pos:line="140" pos:column="9">/* non-blocking... wooooooo */</comment>
        <decl_stmt><decl><type><name pos:line="141" pos:column="9">apr_size_t<pos:position pos:line="141" pos:column="19"/></name></type> <name pos:line="141" pos:column="20">total_bytes_sent<pos:position pos:line="141" pos:column="36"/></name></decl>;<pos:position pos:line="141" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="142" pos:column="9">apr_pollfd_t<pos:position pos:line="142" pos:column="21"/></name></type> <name pos:line="142" pos:column="22">pfd<pos:position pos:line="142" pos:column="25"/></name></decl>;<pos:position pos:line="142" pos:column="26"/></decl_stmt>

        <expr_stmt><expr><name pos:line="144" pos:column="9">pset<pos:position pos:line="144" pos:column="13"/></name> <operator pos:line="144" pos:column="14">=<pos:position pos:line="144" pos:column="15"/></operator> <name pos:line="144" pos:column="16">NULL<pos:position pos:line="144" pos:column="20"/></name></expr>;<pos:position pos:line="144" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="145" pos:column="9">rv<pos:position pos:line="145" pos:column="11"/></name> <operator pos:line="145" pos:column="12">=<pos:position pos:line="145" pos:column="13"/></operator> <call><name pos:line="145" pos:column="14">apr_pollset_create<pos:position pos:line="145" pos:column="32"/></name><argument_list pos:line="145" pos:column="32">(<argument><expr><operator pos:line="145" pos:column="33">&amp;<pos:position pos:line="145" pos:column="38"/></operator><name pos:line="145" pos:column="34">pset<pos:position pos:line="145" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="40">1<pos:position pos:line="145" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="145" pos:column="43">p<pos:position pos:line="145" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="46">0<pos:position pos:line="145" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="146" pos:column="9">assert<pos:position pos:line="146" pos:column="15"/></name><argument_list pos:line="146" pos:column="15">(<argument><expr><operator pos:line="146" pos:column="16">!<pos:position pos:line="146" pos:column="17"/></operator><name pos:line="146" pos:column="17">rv<pos:position pos:line="146" pos:column="19"/></name></expr></argument>)<pos:position pos:line="146" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="147" pos:column="9">pfd<pos:position pos:line="147" pos:column="12"/></name><operator pos:line="147" pos:column="12">.<pos:position pos:line="147" pos:column="13"/></operator><name pos:line="147" pos:column="13">p<pos:position pos:line="147" pos:column="14"/></name></name> <operator pos:line="147" pos:column="15">=<pos:position pos:line="147" pos:column="16"/></operator> <name pos:line="147" pos:column="17">p<pos:position pos:line="147" pos:column="18"/></name></expr>;<pos:position pos:line="147" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="148" pos:column="9">pfd<pos:position pos:line="148" pos:column="12"/></name><operator pos:line="148" pos:column="12">.<pos:position pos:line="148" pos:column="13"/></operator><name pos:line="148" pos:column="13">desc_type<pos:position pos:line="148" pos:column="22"/></name></name> <operator pos:line="148" pos:column="23">=<pos:position pos:line="148" pos:column="24"/></operator> <name pos:line="148" pos:column="25">APR_POLL_SOCKET<pos:position pos:line="148" pos:column="40"/></name></expr>;<pos:position pos:line="148" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="149" pos:column="9">pfd<pos:position pos:line="149" pos:column="12"/></name><operator pos:line="149" pos:column="12">.<pos:position pos:line="149" pos:column="13"/></operator><name pos:line="149" pos:column="13">reqevents<pos:position pos:line="149" pos:column="22"/></name></name> <operator pos:line="149" pos:column="23">=<pos:position pos:line="149" pos:column="24"/></operator> <name pos:line="149" pos:column="25">APR_POLLOUT<pos:position pos:line="149" pos:column="36"/></name></expr>;<pos:position pos:line="149" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="150" pos:column="9">pfd<pos:position pos:line="150" pos:column="12"/></name><operator pos:line="150" pos:column="12">.<pos:position pos:line="150" pos:column="13"/></operator><name pos:line="150" pos:column="13">rtnevents<pos:position pos:line="150" pos:column="22"/></name></name> <operator pos:line="150" pos:column="23">=<pos:position pos:line="150" pos:column="24"/></operator> <literal type="number" pos:line="150" pos:column="25">0<pos:position pos:line="150" pos:column="26"/></literal></expr>;<pos:position pos:line="150" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="151" pos:column="9">pfd<pos:position pos:line="151" pos:column="12"/></name><operator pos:line="151" pos:column="12">.<pos:position pos:line="151" pos:column="13"/></operator><name pos:line="151" pos:column="13">desc<pos:position pos:line="151" pos:column="17"/></name><operator pos:line="151" pos:column="17">.<pos:position pos:line="151" pos:column="18"/></operator><name pos:line="151" pos:column="18">s<pos:position pos:line="151" pos:column="19"/></name></name> <operator pos:line="151" pos:column="20">=<pos:position pos:line="151" pos:column="21"/></operator> <name pos:line="151" pos:column="22">sock<pos:position pos:line="151" pos:column="26"/></name></expr>;<pos:position pos:line="151" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="152" pos:column="9">pfd<pos:position pos:line="152" pos:column="12"/></name><operator pos:line="152" pos:column="12">.<pos:position pos:line="152" pos:column="13"/></operator><name pos:line="152" pos:column="13">client_data<pos:position pos:line="152" pos:column="24"/></name></name> <operator pos:line="152" pos:column="25">=<pos:position pos:line="152" pos:column="26"/></operator> <name pos:line="152" pos:column="27">NULL<pos:position pos:line="152" pos:column="31"/></name></expr>;<pos:position pos:line="152" pos:column="32"/></expr_stmt>

        <expr_stmt><expr><name pos:line="154" pos:column="9">rv<pos:position pos:line="154" pos:column="11"/></name> <operator pos:line="154" pos:column="12">=<pos:position pos:line="154" pos:column="13"/></operator> <call><name pos:line="154" pos:column="14">apr_pollset_add<pos:position pos:line="154" pos:column="29"/></name><argument_list pos:line="154" pos:column="29">(<argument><expr><name pos:line="154" pos:column="30">pset<pos:position pos:line="154" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="154" pos:column="36">&amp;<pos:position pos:line="154" pos:column="41"/></operator><name pos:line="154" pos:column="37">pfd<pos:position pos:line="154" pos:column="40"/></name></expr></argument>)<pos:position pos:line="154" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="42"/></expr_stmt>        
        <expr_stmt><expr><call><name pos:line="155" pos:column="9">assert<pos:position pos:line="155" pos:column="15"/></name><argument_list pos:line="155" pos:column="15">(<argument><expr><operator pos:line="155" pos:column="16">!<pos:position pos:line="155" pos:column="17"/></operator><name pos:line="155" pos:column="17">rv<pos:position pos:line="155" pos:column="19"/></name></expr></argument>)<pos:position pos:line="155" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="21"/></expr_stmt>

        <expr_stmt><expr><name pos:line="157" pos:column="9">total_bytes_sent<pos:position pos:line="157" pos:column="25"/></name> <operator pos:line="157" pos:column="26">=<pos:position pos:line="157" pos:column="27"/></operator> <literal type="number" pos:line="157" pos:column="28">0<pos:position pos:line="157" pos:column="29"/></literal></expr>;<pos:position pos:line="157" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="158" pos:column="9">current_file_offset<pos:position pos:line="158" pos:column="28"/></name> <operator pos:line="158" pos:column="29">=<pos:position pos:line="158" pos:column="30"/></operator> <literal type="number" pos:line="158" pos:column="31">0<pos:position pos:line="158" pos:column="32"/></literal></expr>;<pos:position pos:line="158" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="159" pos:column="9">len<pos:position pos:line="159" pos:column="12"/></name> <operator pos:line="159" pos:column="13">=<pos:position pos:line="159" pos:column="14"/></operator> <name pos:line="159" pos:column="15">FILE_LENGTH<pos:position pos:line="159" pos:column="26"/></name></expr>;<pos:position pos:line="159" pos:column="27"/></expr_stmt>
        <do pos:line="160" pos:column="9">do <block pos:line="160" pos:column="12">{
            <decl_stmt><decl><type><name pos:line="161" pos:column="13">apr_size_t<pos:position pos:line="161" pos:column="23"/></name></type> <name pos:line="161" pos:column="24">tmplen<pos:position pos:line="161" pos:column="30"/></name></decl>;<pos:position pos:line="161" pos:column="31"/></decl_stmt>

            <expr_stmt><expr><name pos:line="163" pos:column="13">tmplen<pos:position pos:line="163" pos:column="19"/></name> <operator pos:line="163" pos:column="20">=<pos:position pos:line="163" pos:column="21"/></operator> <name pos:line="163" pos:column="22">len<pos:position pos:line="163" pos:column="25"/></name></expr>;<pos:position pos:line="163" pos:column="26"/></expr_stmt> <comment type="block" pos:line="163" pos:column="27">/* bytes remaining to send from the file */</comment>
            <expr_stmt><expr><call><name pos:line="164" pos:column="13">printf<pos:position pos:line="164" pos:column="19"/></name><argument_list pos:line="164" pos:column="19">(<argument><expr><literal type="string" pos:line="164" pos:column="20">"Calling apr_socket_sendfile()...\n"<pos:position pos:line="164" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="165" pos:column="13">printf<pos:position pos:line="165" pos:column="19"/></name><argument_list pos:line="165" pos:column="19">(<argument><expr><literal type="string" pos:line="165" pos:column="20">"Headers (%d):\n"<pos:position pos:line="165" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="39">hdtr<pos:position pos:line="165" pos:column="43"/></name><operator pos:line="165" pos:column="43">.<pos:position pos:line="165" pos:column="44"/></operator><name pos:line="165" pos:column="44">numheaders<pos:position pos:line="165" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="165" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="56"/></expr_stmt>
            <for pos:line="166" pos:column="13">for <control pos:line="166" pos:column="17">(<init><expr><name pos:line="166" pos:column="18">i<pos:position pos:line="166" pos:column="19"/></name> <operator pos:line="166" pos:column="20">=<pos:position pos:line="166" pos:column="21"/></operator> <literal type="number" pos:line="166" pos:column="22">0<pos:position pos:line="166" pos:column="23"/></literal></expr>;<pos:position pos:line="166" pos:column="24"/></init> <condition><expr><name pos:line="166" pos:column="25">i<pos:position pos:line="166" pos:column="26"/></name> <operator pos:line="166" pos:column="27">&lt;<pos:position pos:line="166" pos:column="31"/></operator> <name><name pos:line="166" pos:column="29">hdtr<pos:position pos:line="166" pos:column="33"/></name><operator pos:line="166" pos:column="33">.<pos:position pos:line="166" pos:column="34"/></operator><name pos:line="166" pos:column="34">numheaders<pos:position pos:line="166" pos:column="44"/></name></name></expr>;<pos:position pos:line="166" pos:column="45"/></condition> <incr><expr><name pos:line="166" pos:column="46">i<pos:position pos:line="166" pos:column="47"/></name><operator pos:line="166" pos:column="47">++<pos:position pos:line="166" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="166" pos:column="50"/></control> <block pos:line="166" pos:column="51">{
                <expr_stmt><expr><call><name pos:line="167" pos:column="17">printf<pos:position pos:line="167" pos:column="23"/></name><argument_list pos:line="167" pos:column="23">(<argument><expr><literal type="string" pos:line="167" pos:column="24">"\t%ld bytes (%c)\n"<pos:position pos:line="167" pos:column="44"/></literal></expr></argument>,
                       <argument><expr><operator pos:line="168" pos:column="24">(<pos:position pos:line="168" pos:column="25"/></operator><name pos:line="168" pos:column="25">long<pos:position pos:line="168" pos:column="29"/></name><operator pos:line="168" pos:column="29">)<pos:position pos:line="168" pos:column="30"/></operator><name><name pos:line="168" pos:column="30">hdtr<pos:position pos:line="168" pos:column="34"/></name><operator pos:line="168" pos:column="34">.<pos:position pos:line="168" pos:column="35"/></operator><name pos:line="168" pos:column="35">headers<pos:position pos:line="168" pos:column="42"/></name><index pos:line="168" pos:column="42">[<expr><name pos:line="168" pos:column="43">i<pos:position pos:line="168" pos:column="44"/></name></expr>]<pos:position pos:line="168" pos:column="45"/></index></name><operator pos:line="168" pos:column="45">.<pos:position pos:line="168" pos:column="46"/></operator><name pos:line="168" pos:column="46">iov_len<pos:position pos:line="168" pos:column="53"/></name></expr></argument>,
                       <argument><expr><operator pos:line="169" pos:column="24">*<pos:position pos:line="169" pos:column="25"/></operator><operator pos:line="169" pos:column="25">(<pos:position pos:line="169" pos:column="26"/></operator><name pos:line="169" pos:column="26">char<pos:position pos:line="169" pos:column="30"/></name> <operator pos:line="169" pos:column="31">*<pos:position pos:line="169" pos:column="32"/></operator><operator pos:line="169" pos:column="32">)<pos:position pos:line="169" pos:column="33"/></operator><name><name pos:line="169" pos:column="33">hdtr<pos:position pos:line="169" pos:column="37"/></name><operator pos:line="169" pos:column="37">.<pos:position pos:line="169" pos:column="38"/></operator><name pos:line="169" pos:column="38">headers<pos:position pos:line="169" pos:column="45"/></name><index pos:line="169" pos:column="45">[<expr><name pos:line="169" pos:column="46">i<pos:position pos:line="169" pos:column="47"/></name></expr>]<pos:position pos:line="169" pos:column="48"/></index></name><operator pos:line="169" pos:column="48">.<pos:position pos:line="169" pos:column="49"/></operator><name pos:line="169" pos:column="49">iov_base<pos:position pos:line="169" pos:column="57"/></name></expr></argument>)<pos:position pos:line="169" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="170" pos:column="14"/></block></for>
            <expr_stmt><expr><call><name pos:line="171" pos:column="13">printf<pos:position pos:line="171" pos:column="19"/></name><argument_list pos:line="171" pos:column="19">(<argument><expr><literal type="string" pos:line="171" pos:column="20">"File: %ld bytes from offset %ld\n"<pos:position pos:line="171" pos:column="55"/></literal></expr></argument>,
                   <argument><expr><operator pos:line="172" pos:column="20">(<pos:position pos:line="172" pos:column="21"/></operator><name pos:line="172" pos:column="21">long<pos:position pos:line="172" pos:column="25"/></name><operator pos:line="172" pos:column="25">)<pos:position pos:line="172" pos:column="26"/></operator><name pos:line="172" pos:column="26">tmplen<pos:position pos:line="172" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="172" pos:column="34">(<pos:position pos:line="172" pos:column="35"/></operator><name pos:line="172" pos:column="35">long<pos:position pos:line="172" pos:column="39"/></name><operator pos:line="172" pos:column="39">)<pos:position pos:line="172" pos:column="40"/></operator><name pos:line="172" pos:column="40">current_file_offset<pos:position pos:line="172" pos:column="59"/></name></expr></argument>)<pos:position pos:line="172" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="173" pos:column="13">printf<pos:position pos:line="173" pos:column="19"/></name><argument_list pos:line="173" pos:column="19">(<argument><expr><literal type="string" pos:line="173" pos:column="20">"Trailers (%d):\n"<pos:position pos:line="173" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="173" pos:column="40">hdtr<pos:position pos:line="173" pos:column="44"/></name><operator pos:line="173" pos:column="44">.<pos:position pos:line="173" pos:column="45"/></operator><name pos:line="173" pos:column="45">numtrailers<pos:position pos:line="173" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="173" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="58"/></expr_stmt>
            <for pos:line="174" pos:column="13">for <control pos:line="174" pos:column="17">(<init><expr><name pos:line="174" pos:column="18">i<pos:position pos:line="174" pos:column="19"/></name> <operator pos:line="174" pos:column="20">=<pos:position pos:line="174" pos:column="21"/></operator> <literal type="number" pos:line="174" pos:column="22">0<pos:position pos:line="174" pos:column="23"/></literal></expr>;<pos:position pos:line="174" pos:column="24"/></init> <condition><expr><name pos:line="174" pos:column="25">i<pos:position pos:line="174" pos:column="26"/></name> <operator pos:line="174" pos:column="27">&lt;<pos:position pos:line="174" pos:column="31"/></operator> <name><name pos:line="174" pos:column="29">hdtr<pos:position pos:line="174" pos:column="33"/></name><operator pos:line="174" pos:column="33">.<pos:position pos:line="174" pos:column="34"/></operator><name pos:line="174" pos:column="34">numtrailers<pos:position pos:line="174" pos:column="45"/></name></name></expr>;<pos:position pos:line="174" pos:column="46"/></condition> <incr><expr><name pos:line="174" pos:column="47">i<pos:position pos:line="174" pos:column="48"/></name><operator pos:line="174" pos:column="48">++<pos:position pos:line="174" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="174" pos:column="51"/></control> <block pos:line="174" pos:column="52">{
                <expr_stmt><expr><call><name pos:line="175" pos:column="17">printf<pos:position pos:line="175" pos:column="23"/></name><argument_list pos:line="175" pos:column="23">(<argument><expr><literal type="string" pos:line="175" pos:column="24">"\t%ld bytes\n"<pos:position pos:line="175" pos:column="39"/></literal></expr></argument>,
                       <argument><expr><operator pos:line="176" pos:column="24">(<pos:position pos:line="176" pos:column="25"/></operator><name pos:line="176" pos:column="25">long<pos:position pos:line="176" pos:column="29"/></name><operator pos:line="176" pos:column="29">)<pos:position pos:line="176" pos:column="30"/></operator><name><name pos:line="176" pos:column="30">hdtr<pos:position pos:line="176" pos:column="34"/></name><operator pos:line="176" pos:column="34">.<pos:position pos:line="176" pos:column="35"/></operator><name pos:line="176" pos:column="35">trailers<pos:position pos:line="176" pos:column="43"/></name><index pos:line="176" pos:column="43">[<expr><name pos:line="176" pos:column="44">i<pos:position pos:line="176" pos:column="45"/></name></expr>]<pos:position pos:line="176" pos:column="46"/></index></name><operator pos:line="176" pos:column="46">.<pos:position pos:line="176" pos:column="47"/></operator><name pos:line="176" pos:column="47">iov_len<pos:position pos:line="176" pos:column="54"/></name></expr></argument>)<pos:position pos:line="176" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="177" pos:column="14"/></block></for>

            <expr_stmt><expr><name pos:line="179" pos:column="13">rv<pos:position pos:line="179" pos:column="15"/></name> <operator pos:line="179" pos:column="16">=<pos:position pos:line="179" pos:column="17"/></operator> <call><name pos:line="179" pos:column="18">apr_socket_sendfile<pos:position pos:line="179" pos:column="37"/></name><argument_list pos:line="179" pos:column="37">(<argument><expr><name pos:line="179" pos:column="38">sock<pos:position pos:line="179" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="44">f<pos:position pos:line="179" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="179" pos:column="47">&amp;<pos:position pos:line="179" pos:column="52"/></operator><name pos:line="179" pos:column="48">hdtr<pos:position pos:line="179" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="179" pos:column="54">&amp;<pos:position pos:line="179" pos:column="59"/></operator><name pos:line="179" pos:column="55">current_file_offset<pos:position pos:line="179" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="179" pos:column="76">&amp;<pos:position pos:line="179" pos:column="81"/></operator><name pos:line="179" pos:column="77">tmplen<pos:position pos:line="179" pos:column="83"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="179" pos:column="85">0<pos:position pos:line="179" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="88"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="180" pos:column="13">printf<pos:position pos:line="180" pos:column="19"/></name><argument_list pos:line="180" pos:column="19">(<argument><expr><literal type="string" pos:line="180" pos:column="20">"apr_socket_sendfile()-&gt;%d, sent %ld bytes\n"<pos:position pos:line="180" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="180" pos:column="67">rv<pos:position pos:line="180" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="180" pos:column="71">(<pos:position pos:line="180" pos:column="72"/></operator><name pos:line="180" pos:column="72">long<pos:position pos:line="180" pos:column="76"/></name><operator pos:line="180" pos:column="76">)<pos:position pos:line="180" pos:column="77"/></operator><name pos:line="180" pos:column="77">tmplen<pos:position pos:line="180" pos:column="83"/></name></expr></argument>)<pos:position pos:line="180" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="85"/></expr_stmt>
            <if pos:line="181" pos:column="13">if <condition pos:line="181" pos:column="16">(<expr><name pos:line="181" pos:column="17">rv<pos:position pos:line="181" pos:column="19"/></name></expr>)<pos:position pos:line="181" pos:column="20"/></condition><then pos:line="181" pos:column="20"> <block pos:line="181" pos:column="21">{
                <if pos:line="182" pos:column="17">if <condition pos:line="182" pos:column="20">(<expr><call><name pos:line="182" pos:column="21">APR_STATUS_IS_EAGAIN<pos:position pos:line="182" pos:column="41"/></name><argument_list pos:line="182" pos:column="41">(<argument><expr><name pos:line="182" pos:column="42">rv<pos:position pos:line="182" pos:column="44"/></name></expr></argument>)<pos:position pos:line="182" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="182" pos:column="46"/></condition><then pos:line="182" pos:column="46"> <block pos:line="182" pos:column="47">{
                    <expr_stmt><expr><call><name pos:line="183" pos:column="21">assert<pos:position pos:line="183" pos:column="27"/></name><argument_list pos:line="183" pos:column="27">(<argument><expr><name pos:line="183" pos:column="28">tmplen<pos:position pos:line="183" pos:column="34"/></name> <operator pos:line="183" pos:column="35">==<pos:position pos:line="183" pos:column="37"/></operator> <literal type="number" pos:line="183" pos:column="38">0<pos:position pos:line="183" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="184" pos:column="21">nsocks<pos:position pos:line="184" pos:column="27"/></name> <operator pos:line="184" pos:column="28">=<pos:position pos:line="184" pos:column="29"/></operator> <literal type="number" pos:line="184" pos:column="30">1<pos:position pos:line="184" pos:column="31"/></literal></expr>;<pos:position pos:line="184" pos:column="32"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="185" pos:column="21">tmprv<pos:position pos:line="185" pos:column="26"/></name> <operator pos:line="185" pos:column="27">=<pos:position pos:line="185" pos:column="28"/></operator> <call><name pos:line="185" pos:column="29">apr_pollset_poll<pos:position pos:line="185" pos:column="45"/></name><argument_list pos:line="185" pos:column="45">(<argument><expr><name pos:line="185" pos:column="46">pset<pos:position pos:line="185" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="185" pos:column="52">-<pos:position pos:line="185" pos:column="53"/></operator><literal type="number" pos:line="185" pos:column="53">1<pos:position pos:line="185" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="185" pos:column="56">&amp;<pos:position pos:line="185" pos:column="61"/></operator><name pos:line="185" pos:column="57">nsocks<pos:position pos:line="185" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="65">NULL<pos:position pos:line="185" pos:column="69"/></name></expr></argument>)<pos:position pos:line="185" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="71"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="186" pos:column="21">assert<pos:position pos:line="186" pos:column="27"/></name><argument_list pos:line="186" pos:column="27">(<argument><expr><operator pos:line="186" pos:column="28">!<pos:position pos:line="186" pos:column="29"/></operator><name pos:line="186" pos:column="29">tmprv<pos:position pos:line="186" pos:column="34"/></name></expr></argument>)<pos:position pos:line="186" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="36"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="187" pos:column="21">assert<pos:position pos:line="187" pos:column="27"/></name><argument_list pos:line="187" pos:column="27">(<argument><expr><name pos:line="187" pos:column="28">nsocks<pos:position pos:line="187" pos:column="34"/></name> <operator pos:line="187" pos:column="35">==<pos:position pos:line="187" pos:column="37"/></operator> <literal type="number" pos:line="187" pos:column="38">1<pos:position pos:line="187" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="41"/></expr_stmt>
                    <comment type="block" pos:line="188" pos:column="21">/* continue; */</comment>
                }<pos:position pos:line="189" pos:column="18"/></block></then></if>
            }<pos:position pos:line="190" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="192" pos:column="13">total_bytes_sent<pos:position pos:line="192" pos:column="29"/></name> <operator pos:line="192" pos:column="30">+=<pos:position pos:line="192" pos:column="32"/></operator> <name pos:line="192" pos:column="33">tmplen<pos:position pos:line="192" pos:column="39"/></name></expr>;<pos:position pos:line="192" pos:column="40"/></expr_stmt>

            <comment type="block" pos:line="194" pos:column="13">/* Adjust hdtr to compensate for partially-written
             * data.
             */</comment>

            <comment type="block" pos:line="198" pos:column="13">/* First, skip over any header data which might have
             * been written.
             */</comment>
            <while pos:line="201" pos:column="13">while <condition pos:line="201" pos:column="19">(<expr><name pos:line="201" pos:column="20">tmplen<pos:position pos:line="201" pos:column="26"/></name> <operator pos:line="201" pos:column="27">&amp;&amp;<pos:position pos:line="201" pos:column="37"/></operator> <name><name pos:line="201" pos:column="30">hdtr<pos:position pos:line="201" pos:column="34"/></name><operator pos:line="201" pos:column="34">.<pos:position pos:line="201" pos:column="35"/></operator><name pos:line="201" pos:column="35">numheaders<pos:position pos:line="201" pos:column="45"/></name></name></expr>)<pos:position pos:line="201" pos:column="46"/></condition> <block pos:line="201" pos:column="47">{
                <if pos:line="202" pos:column="17">if <condition pos:line="202" pos:column="20">(<expr><name pos:line="202" pos:column="21">tmplen<pos:position pos:line="202" pos:column="27"/></name> <operator pos:line="202" pos:column="28">&gt;=<pos:position pos:line="202" pos:column="33"/></operator> <name><name pos:line="202" pos:column="31">hdtr<pos:position pos:line="202" pos:column="35"/></name><operator pos:line="202" pos:column="35">.<pos:position pos:line="202" pos:column="36"/></operator><name pos:line="202" pos:column="36">headers<pos:position pos:line="202" pos:column="43"/></name><index pos:line="202" pos:column="43">[<expr><literal type="number" pos:line="202" pos:column="44">0<pos:position pos:line="202" pos:column="45"/></literal></expr>]<pos:position pos:line="202" pos:column="46"/></index></name><operator pos:line="202" pos:column="46">.<pos:position pos:line="202" pos:column="47"/></operator><name pos:line="202" pos:column="47">iov_len<pos:position pos:line="202" pos:column="54"/></name></expr>)<pos:position pos:line="202" pos:column="55"/></condition><then pos:line="202" pos:column="55"> <block pos:line="202" pos:column="56">{
                    <expr_stmt><expr><name pos:line="203" pos:column="21">tmplen<pos:position pos:line="203" pos:column="27"/></name> <operator pos:line="203" pos:column="28">-=<pos:position pos:line="203" pos:column="30"/></operator> <name><name pos:line="203" pos:column="31">hdtr<pos:position pos:line="203" pos:column="35"/></name><operator pos:line="203" pos:column="35">.<pos:position pos:line="203" pos:column="36"/></operator><name pos:line="203" pos:column="36">headers<pos:position pos:line="203" pos:column="43"/></name><index pos:line="203" pos:column="43">[<expr><literal type="number" pos:line="203" pos:column="44">0<pos:position pos:line="203" pos:column="45"/></literal></expr>]<pos:position pos:line="203" pos:column="46"/></index></name><operator pos:line="203" pos:column="46">.<pos:position pos:line="203" pos:column="47"/></operator><name pos:line="203" pos:column="47">iov_len<pos:position pos:line="203" pos:column="54"/></name></expr>;<pos:position pos:line="203" pos:column="55"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="204" pos:column="21">--<pos:position pos:line="204" pos:column="23"/></operator><name><name pos:line="204" pos:column="23">hdtr<pos:position pos:line="204" pos:column="27"/></name><operator pos:line="204" pos:column="27">.<pos:position pos:line="204" pos:column="28"/></operator><name pos:line="204" pos:column="28">numheaders<pos:position pos:line="204" pos:column="38"/></name></name></expr>;<pos:position pos:line="204" pos:column="39"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="205" pos:column="21">++<pos:position pos:line="205" pos:column="23"/></operator><name><name pos:line="205" pos:column="23">hdtr<pos:position pos:line="205" pos:column="27"/></name><operator pos:line="205" pos:column="27">.<pos:position pos:line="205" pos:column="28"/></operator><name pos:line="205" pos:column="28">headers<pos:position pos:line="205" pos:column="35"/></name></name></expr>;<pos:position pos:line="205" pos:column="36"/></expr_stmt>
                }<pos:position pos:line="206" pos:column="18"/></block></then>
                <else pos:line="207" pos:column="17">else <block pos:line="207" pos:column="22">{
                    <expr_stmt><expr><name><name pos:line="208" pos:column="21">hdtr<pos:position pos:line="208" pos:column="25"/></name><operator pos:line="208" pos:column="25">.<pos:position pos:line="208" pos:column="26"/></operator><name pos:line="208" pos:column="26">headers<pos:position pos:line="208" pos:column="33"/></name><index pos:line="208" pos:column="33">[<expr><literal type="number" pos:line="208" pos:column="34">0<pos:position pos:line="208" pos:column="35"/></literal></expr>]<pos:position pos:line="208" pos:column="36"/></index></name><operator pos:line="208" pos:column="36">.<pos:position pos:line="208" pos:column="37"/></operator><name pos:line="208" pos:column="37">iov_len<pos:position pos:line="208" pos:column="44"/></name> <operator pos:line="208" pos:column="45">-=<pos:position pos:line="208" pos:column="47"/></operator> <name pos:line="208" pos:column="48">tmplen<pos:position pos:line="208" pos:column="54"/></name></expr>;<pos:position pos:line="208" pos:column="55"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="209" pos:column="21">hdtr<pos:position pos:line="209" pos:column="25"/></name><operator pos:line="209" pos:column="25">.<pos:position pos:line="209" pos:column="26"/></operator><name pos:line="209" pos:column="26">headers<pos:position pos:line="209" pos:column="33"/></name><index pos:line="209" pos:column="33">[<expr><literal type="number" pos:line="209" pos:column="34">0<pos:position pos:line="209" pos:column="35"/></literal></expr>]<pos:position pos:line="209" pos:column="36"/></index></name><operator pos:line="209" pos:column="36">.<pos:position pos:line="209" pos:column="37"/></operator><name pos:line="209" pos:column="37">iov_base<pos:position pos:line="209" pos:column="45"/></name> <operator pos:line="209" pos:column="46">=<pos:position pos:line="209" pos:column="47"/></operator> 
			<operator pos:line="210" pos:column="25">(<pos:position pos:line="210" pos:column="26"/></operator><name pos:line="210" pos:column="26">char<pos:position pos:line="210" pos:column="30"/></name><operator pos:line="210" pos:column="30">*<pos:position pos:line="210" pos:column="31"/></operator><operator pos:line="210" pos:column="31">)<pos:position pos:line="210" pos:column="32"/></operator> <name><name pos:line="210" pos:column="33">hdtr<pos:position pos:line="210" pos:column="37"/></name><operator pos:line="210" pos:column="37">.<pos:position pos:line="210" pos:column="38"/></operator><name pos:line="210" pos:column="38">headers<pos:position pos:line="210" pos:column="45"/></name><index pos:line="210" pos:column="45">[<expr><literal type="number" pos:line="210" pos:column="46">0<pos:position pos:line="210" pos:column="47"/></literal></expr>]<pos:position pos:line="210" pos:column="48"/></index></name><operator pos:line="210" pos:column="48">.<pos:position pos:line="210" pos:column="49"/></operator><name pos:line="210" pos:column="49">iov_base<pos:position pos:line="210" pos:column="57"/></name> <operator pos:line="210" pos:column="58">+<pos:position pos:line="210" pos:column="59"/></operator> <name pos:line="210" pos:column="60">tmplen<pos:position pos:line="210" pos:column="66"/></name></expr>;<pos:position pos:line="210" pos:column="67"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="211" pos:column="21">tmplen<pos:position pos:line="211" pos:column="27"/></name> <operator pos:line="211" pos:column="28">=<pos:position pos:line="211" pos:column="29"/></operator> <literal type="number" pos:line="211" pos:column="30">0<pos:position pos:line="211" pos:column="31"/></literal></expr>;<pos:position pos:line="211" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="212" pos:column="18"/></block></else></if>
            }<pos:position pos:line="213" pos:column="14"/></block></while>

            <comment type="block" pos:line="215" pos:column="13">/* Now, skip over any file data which might have been
             * written.
             */</comment>

            <if pos:line="219" pos:column="13">if <condition pos:line="219" pos:column="16">(<expr><name pos:line="219" pos:column="17">tmplen<pos:position pos:line="219" pos:column="23"/></name> <operator pos:line="219" pos:column="24">&lt;=<pos:position pos:line="219" pos:column="29"/></operator> <name pos:line="219" pos:column="27">len<pos:position pos:line="219" pos:column="30"/></name></expr>)<pos:position pos:line="219" pos:column="31"/></condition><then pos:line="219" pos:column="31"> <block pos:line="219" pos:column="32">{
                <expr_stmt><expr><name pos:line="220" pos:column="17">current_file_offset<pos:position pos:line="220" pos:column="36"/></name> <operator pos:line="220" pos:column="37">+=<pos:position pos:line="220" pos:column="39"/></operator> <name pos:line="220" pos:column="40">tmplen<pos:position pos:line="220" pos:column="46"/></name></expr>;<pos:position pos:line="220" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name pos:line="221" pos:column="17">len<pos:position pos:line="221" pos:column="20"/></name> <operator pos:line="221" pos:column="21">-=<pos:position pos:line="221" pos:column="23"/></operator> <name pos:line="221" pos:column="24">tmplen<pos:position pos:line="221" pos:column="30"/></name></expr>;<pos:position pos:line="221" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name pos:line="222" pos:column="17">tmplen<pos:position pos:line="222" pos:column="23"/></name> <operator pos:line="222" pos:column="24">=<pos:position pos:line="222" pos:column="25"/></operator> <literal type="number" pos:line="222" pos:column="26">0<pos:position pos:line="222" pos:column="27"/></literal></expr>;<pos:position pos:line="222" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="223" pos:column="14"/></block></then>
            <else pos:line="224" pos:column="13">else <block pos:line="224" pos:column="18">{
                <expr_stmt><expr><name pos:line="225" pos:column="17">tmplen<pos:position pos:line="225" pos:column="23"/></name> <operator pos:line="225" pos:column="24">-=<pos:position pos:line="225" pos:column="26"/></operator> <name pos:line="225" pos:column="27">len<pos:position pos:line="225" pos:column="30"/></name></expr>;<pos:position pos:line="225" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name pos:line="226" pos:column="17">len<pos:position pos:line="226" pos:column="20"/></name> <operator pos:line="226" pos:column="21">=<pos:position pos:line="226" pos:column="22"/></operator> <literal type="number" pos:line="226" pos:column="23">0<pos:position pos:line="226" pos:column="24"/></literal></expr>;<pos:position pos:line="226" pos:column="25"/></expr_stmt>
                <expr_stmt><expr><name pos:line="227" pos:column="17">current_file_offset<pos:position pos:line="227" pos:column="36"/></name> <operator pos:line="227" pos:column="37">=<pos:position pos:line="227" pos:column="38"/></operator> <literal type="number" pos:line="227" pos:column="39">0<pos:position pos:line="227" pos:column="40"/></literal></expr>;<pos:position pos:line="227" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="228" pos:column="14"/></block></else></if>

            <comment type="block" pos:line="230" pos:column="13">/* Last, skip over any trailer data which might have
             * been written.
             */</comment>

            <while pos:line="234" pos:column="13">while <condition pos:line="234" pos:column="19">(<expr><name pos:line="234" pos:column="20">tmplen<pos:position pos:line="234" pos:column="26"/></name> <operator pos:line="234" pos:column="27">&amp;&amp;<pos:position pos:line="234" pos:column="37"/></operator> <name><name pos:line="234" pos:column="30">hdtr<pos:position pos:line="234" pos:column="34"/></name><operator pos:line="234" pos:column="34">.<pos:position pos:line="234" pos:column="35"/></operator><name pos:line="234" pos:column="35">numtrailers<pos:position pos:line="234" pos:column="46"/></name></name></expr>)<pos:position pos:line="234" pos:column="47"/></condition> <block pos:line="234" pos:column="48">{
                <if pos:line="235" pos:column="17">if <condition pos:line="235" pos:column="20">(<expr><name pos:line="235" pos:column="21">tmplen<pos:position pos:line="235" pos:column="27"/></name> <operator pos:line="235" pos:column="28">&gt;=<pos:position pos:line="235" pos:column="33"/></operator> <name><name pos:line="235" pos:column="31">hdtr<pos:position pos:line="235" pos:column="35"/></name><operator pos:line="235" pos:column="35">.<pos:position pos:line="235" pos:column="36"/></operator><name pos:line="235" pos:column="36">trailers<pos:position pos:line="235" pos:column="44"/></name><index pos:line="235" pos:column="44">[<expr><literal type="number" pos:line="235" pos:column="45">0<pos:position pos:line="235" pos:column="46"/></literal></expr>]<pos:position pos:line="235" pos:column="47"/></index></name><operator pos:line="235" pos:column="47">.<pos:position pos:line="235" pos:column="48"/></operator><name pos:line="235" pos:column="48">iov_len<pos:position pos:line="235" pos:column="55"/></name></expr>)<pos:position pos:line="235" pos:column="56"/></condition><then pos:line="235" pos:column="56"> <block pos:line="235" pos:column="57">{
                    <expr_stmt><expr><name pos:line="236" pos:column="21">tmplen<pos:position pos:line="236" pos:column="27"/></name> <operator pos:line="236" pos:column="28">-=<pos:position pos:line="236" pos:column="30"/></operator> <name><name pos:line="236" pos:column="31">hdtr<pos:position pos:line="236" pos:column="35"/></name><operator pos:line="236" pos:column="35">.<pos:position pos:line="236" pos:column="36"/></operator><name pos:line="236" pos:column="36">trailers<pos:position pos:line="236" pos:column="44"/></name><index pos:line="236" pos:column="44">[<expr><literal type="number" pos:line="236" pos:column="45">0<pos:position pos:line="236" pos:column="46"/></literal></expr>]<pos:position pos:line="236" pos:column="47"/></index></name><operator pos:line="236" pos:column="47">.<pos:position pos:line="236" pos:column="48"/></operator><name pos:line="236" pos:column="48">iov_len<pos:position pos:line="236" pos:column="55"/></name></expr>;<pos:position pos:line="236" pos:column="56"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="237" pos:column="21">--<pos:position pos:line="237" pos:column="23"/></operator><name><name pos:line="237" pos:column="23">hdtr<pos:position pos:line="237" pos:column="27"/></name><operator pos:line="237" pos:column="27">.<pos:position pos:line="237" pos:column="28"/></operator><name pos:line="237" pos:column="28">numtrailers<pos:position pos:line="237" pos:column="39"/></name></name></expr>;<pos:position pos:line="237" pos:column="40"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="238" pos:column="21">++<pos:position pos:line="238" pos:column="23"/></operator><name><name pos:line="238" pos:column="23">hdtr<pos:position pos:line="238" pos:column="27"/></name><operator pos:line="238" pos:column="27">.<pos:position pos:line="238" pos:column="28"/></operator><name pos:line="238" pos:column="28">trailers<pos:position pos:line="238" pos:column="36"/></name></name></expr>;<pos:position pos:line="238" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="239" pos:column="18"/></block></then>
                <else pos:line="240" pos:column="17">else <block pos:line="240" pos:column="22">{
                    <expr_stmt><expr><name><name pos:line="241" pos:column="21">hdtr<pos:position pos:line="241" pos:column="25"/></name><operator pos:line="241" pos:column="25">.<pos:position pos:line="241" pos:column="26"/></operator><name pos:line="241" pos:column="26">trailers<pos:position pos:line="241" pos:column="34"/></name><index pos:line="241" pos:column="34">[<expr><literal type="number" pos:line="241" pos:column="35">0<pos:position pos:line="241" pos:column="36"/></literal></expr>]<pos:position pos:line="241" pos:column="37"/></index></name><operator pos:line="241" pos:column="37">.<pos:position pos:line="241" pos:column="38"/></operator><name pos:line="241" pos:column="38">iov_len<pos:position pos:line="241" pos:column="45"/></name> <operator pos:line="241" pos:column="46">-=<pos:position pos:line="241" pos:column="48"/></operator> <name pos:line="241" pos:column="49">tmplen<pos:position pos:line="241" pos:column="55"/></name></expr>;<pos:position pos:line="241" pos:column="56"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="242" pos:column="21">hdtr<pos:position pos:line="242" pos:column="25"/></name><operator pos:line="242" pos:column="25">.<pos:position pos:line="242" pos:column="26"/></operator><name pos:line="242" pos:column="26">trailers<pos:position pos:line="242" pos:column="34"/></name><index pos:line="242" pos:column="34">[<expr><literal type="number" pos:line="242" pos:column="35">0<pos:position pos:line="242" pos:column="36"/></literal></expr>]<pos:position pos:line="242" pos:column="37"/></index></name><operator pos:line="242" pos:column="37">.<pos:position pos:line="242" pos:column="38"/></operator><name pos:line="242" pos:column="38">iov_base<pos:position pos:line="242" pos:column="46"/></name> <operator pos:line="242" pos:column="47">=<pos:position pos:line="242" pos:column="48"/></operator> 
			<operator pos:line="243" pos:column="25">(<pos:position pos:line="243" pos:column="26"/></operator><name pos:line="243" pos:column="26">char<pos:position pos:line="243" pos:column="30"/></name> <operator pos:line="243" pos:column="31">*<pos:position pos:line="243" pos:column="32"/></operator><operator pos:line="243" pos:column="32">)<pos:position pos:line="243" pos:column="33"/></operator><name><name pos:line="243" pos:column="33">hdtr<pos:position pos:line="243" pos:column="37"/></name><operator pos:line="243" pos:column="37">.<pos:position pos:line="243" pos:column="38"/></operator><name pos:line="243" pos:column="38">trailers<pos:position pos:line="243" pos:column="46"/></name><index pos:line="243" pos:column="46">[<expr><literal type="number" pos:line="243" pos:column="47">0<pos:position pos:line="243" pos:column="48"/></literal></expr>]<pos:position pos:line="243" pos:column="49"/></index></name><operator pos:line="243" pos:column="49">.<pos:position pos:line="243" pos:column="50"/></operator><name pos:line="243" pos:column="50">iov_base<pos:position pos:line="243" pos:column="58"/></name> <operator pos:line="243" pos:column="59">+<pos:position pos:line="243" pos:column="60"/></operator> <name pos:line="243" pos:column="61">tmplen<pos:position pos:line="243" pos:column="67"/></name></expr>;<pos:position pos:line="243" pos:column="68"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="244" pos:column="21">tmplen<pos:position pos:line="244" pos:column="27"/></name> <operator pos:line="244" pos:column="28">=<pos:position pos:line="244" pos:column="29"/></operator> <literal type="number" pos:line="244" pos:column="30">0<pos:position pos:line="244" pos:column="31"/></literal></expr>;<pos:position pos:line="244" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="245" pos:column="18"/></block></else></if>
            }<pos:position pos:line="246" pos:column="14"/></block></while>

        }<pos:position pos:line="248" pos:column="10"/></block> while <condition pos:line="248" pos:column="17">(<expr><name pos:line="248" pos:column="18">total_bytes_sent<pos:position pos:line="248" pos:column="34"/></name> <operator pos:line="248" pos:column="35">&lt;<pos:position pos:line="248" pos:column="39"/></operator> <name pos:line="248" pos:column="37">expected_len<pos:position pos:line="248" pos:column="49"/></name> <operator pos:line="248" pos:column="50">&amp;&amp;<pos:position pos:line="248" pos:column="60"/></operator>
                 <operator pos:line="249" pos:column="18">(<pos:position pos:line="249" pos:column="19"/></operator><name pos:line="249" pos:column="19">rv<pos:position pos:line="249" pos:column="21"/></name> <operator pos:line="249" pos:column="22">==<pos:position pos:line="249" pos:column="24"/></operator> <name pos:line="249" pos:column="25">APR_SUCCESS<pos:position pos:line="249" pos:column="36"/></name> <operator pos:line="249" pos:column="37">||<pos:position pos:line="249" pos:column="39"/></operator> 
                 <operator pos:line="250" pos:column="18">(<pos:position pos:line="250" pos:column="19"/></operator><call><name pos:line="250" pos:column="19">APR_STATUS_IS_EAGAIN<pos:position pos:line="250" pos:column="39"/></name><argument_list pos:line="250" pos:column="39">(<argument><expr><name pos:line="250" pos:column="40">rv<pos:position pos:line="250" pos:column="42"/></name></expr></argument>)<pos:position pos:line="250" pos:column="43"/></argument_list></call> <operator pos:line="250" pos:column="44">&amp;&amp;<pos:position pos:line="250" pos:column="54"/></operator> <name pos:line="250" pos:column="47">socket_mode<pos:position pos:line="250" pos:column="58"/></name> <operator pos:line="250" pos:column="59">!=<pos:position pos:line="250" pos:column="61"/></operator> <name pos:line="250" pos:column="62">TIMEOUT<pos:position pos:line="250" pos:column="69"/></name><operator pos:line="250" pos:column="69">)<pos:position pos:line="250" pos:column="70"/></operator><operator pos:line="250" pos:column="70">)<pos:position pos:line="250" pos:column="71"/></operator></expr>)<pos:position pos:line="250" pos:column="72"/></condition>;<pos:position pos:line="250" pos:column="73"/></do>
        <if pos:line="251" pos:column="9">if <condition pos:line="251" pos:column="12">(<expr><name pos:line="251" pos:column="13">total_bytes_sent<pos:position pos:line="251" pos:column="29"/></name> <operator pos:line="251" pos:column="30">!=<pos:position pos:line="251" pos:column="32"/></operator> <name pos:line="251" pos:column="33">expected_len<pos:position pos:line="251" pos:column="45"/></name></expr>)<pos:position pos:line="251" pos:column="46"/></condition><then pos:line="251" pos:column="46"> <block pos:line="251" pos:column="47">{
            <macro><name pos:line="252" pos:column="13">fprintf<pos:position pos:line="252" pos:column="20"/></name><argument_list pos:line="252" pos:column="20">(<argument pos:line="252" pos:column="21">stderr<pos:position pos:line="252" pos:column="27"/></argument>,
                    <argument><literal type="string" pos:line="253" pos:column="21">"client problem: sent %ld of %ld bytes\n"<pos:position pos:line="253" pos:column="62"/></literal></argument>,
                    <argument pos:line="254" pos:column="21">(long)total_bytes_sent<pos:position pos:line="254" pos:column="43"/></argument>, <argument pos:line="254" pos:column="45">(<pos:position pos:line="254" pos:column="46"/></argument></argument_list></macro></block></then></if></block></else></if></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2750.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">process_resource_config_fnmatch<pos:position pos:line="1" pos:column="51"/></name><parameter_list pos:line="1" pos:column="51">(<parameter><decl><type><name pos:line="1" pos:column="52">server_rec<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">s<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                                                   <parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name pos:line="2" pos:column="58">char<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">path<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
                                                   <parameter><decl><type><specifier pos:line="3" pos:column="52">const<pos:position pos:line="3" pos:column="57"/></specifier> <name pos:line="3" pos:column="58">char<pos:position pos:line="3" pos:column="62"/></name> <modifier pos:line="3" pos:column="63">*<pos:position pos:line="3" pos:column="64"/></modifier></type><name pos:line="3" pos:column="64">fname<pos:position pos:line="3" pos:column="69"/></name></decl></parameter>,
                                                   <parameter><decl><type><name pos:line="4" pos:column="52">ap_directive_t<pos:position pos:line="4" pos:column="66"/></name> <modifier pos:line="4" pos:column="67">*<pos:position pos:line="4" pos:column="68"/></modifier><modifier pos:line="4" pos:column="68">*<pos:position pos:line="4" pos:column="69"/></modifier></type><name pos:line="4" pos:column="69">conftree<pos:position pos:line="4" pos:column="77"/></name></decl></parameter>,
                                                   <parameter><decl><type><name pos:line="5" pos:column="52">apr_pool_t<pos:position pos:line="5" pos:column="62"/></name> <modifier pos:line="5" pos:column="63">*<pos:position pos:line="5" pos:column="64"/></modifier></type><name pos:line="5" pos:column="64">p<pos:position pos:line="5" pos:column="65"/></name></decl></parameter>,
                                                   <parameter><decl><type><name pos:line="6" pos:column="52">apr_pool_t<pos:position pos:line="6" pos:column="62"/></name> <modifier pos:line="6" pos:column="63">*<pos:position pos:line="6" pos:column="64"/></modifier></type><name pos:line="6" pos:column="64">ptemp<pos:position pos:line="6" pos:column="69"/></name></decl></parameter>,
                                                   <parameter><decl><type><name pos:line="7" pos:column="52">unsigned<pos:position pos:line="7" pos:column="60"/></name></type> <name pos:line="7" pos:column="61">depth<pos:position pos:line="7" pos:column="66"/></name></decl></parameter>,
                                                   <parameter><decl><type><name pos:line="8" pos:column="52">int<pos:position pos:line="8" pos:column="55"/></name></type> <name pos:line="8" pos:column="56">optional<pos:position pos:line="8" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="8" pos:column="65"/></parameter_list>
<block pos:line="9" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">rest<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_status_t<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">rv<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_dir_t<pos:position pos:line="12" pos:column="14"/></name> <modifier pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></modifier></type><name pos:line="12" pos:column="16">dirp<pos:position pos:line="12" pos:column="20"/></name></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_finfo_t<pos:position pos:line="13" pos:column="16"/></name></type> <name pos:line="13" pos:column="17">dirent<pos:position pos:line="13" pos:column="23"/></name></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_array_header_t<pos:position pos:line="14" pos:column="23"/></name> <modifier pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></modifier></type><name pos:line="14" pos:column="25">candidates<pos:position pos:line="14" pos:column="35"/></name> <init pos:line="14" pos:column="36">= <expr><name pos:line="14" pos:column="38">NULL<pos:position pos:line="14" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">fnames<pos:position pos:line="15" pos:column="11"/></name> <modifier pos:line="15" pos:column="12">*<pos:position pos:line="15" pos:column="13"/></modifier></type><name pos:line="15" pos:column="13">fnew<pos:position pos:line="15" pos:column="17"/></name></decl>;<pos:position pos:line="15" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">current<pos:position pos:line="16" pos:column="16"/></name></decl>;<pos:position pos:line="16" pos:column="17"/></decl_stmt>

    <comment type="block" pos:line="18" pos:column="5">/* find the first part of the filename */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">rest<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">ap_strchr_c<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">fname<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="31">'/'<pos:position pos:line="19" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">rest<pos:position pos:line="20" pos:column="13"/></name></expr>)<pos:position pos:line="20" pos:column="14"/></condition><then pos:line="20" pos:column="14"> <block pos:line="20" pos:column="15">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">fname<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">apr_pstrndup<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">ptemp<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">fname<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">rest<pos:position pos:line="21" pos:column="48"/></name> <operator pos:line="21" pos:column="49">-<pos:position pos:line="21" pos:column="50"/></operator> <name pos:line="21" pos:column="51">fname<pos:position pos:line="21" pos:column="56"/></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">rest<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">++<pos:position pos:line="22" pos:column="15"/></operator></expr>;<pos:position pos:line="22" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* optimisation - if the filename isn't a wildcard, process it directly */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><call><name pos:line="26" pos:column="10">apr_fnmatch_test<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">fname<pos:position pos:line="26" pos:column="32"/></name></expr></argument>)<pos:position pos:line="26" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34"> <block pos:line="26" pos:column="35">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">path<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">ap_make_full_path<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">ptemp<pos:position pos:line="27" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="41">path<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">fname<pos:position pos:line="27" pos:column="52"/></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">rest<pos:position pos:line="28" pos:column="18"/></name></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19"> <block pos:line="28" pos:column="20">{
            <return pos:line="29" pos:column="13">return <expr><call><name pos:line="29" pos:column="20">process_resource_config_nofnmatch<pos:position pos:line="29" pos:column="53"/></name><argument_list pos:line="29" pos:column="53">(<argument><expr><name pos:line="29" pos:column="54">s<pos:position pos:line="29" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="57">path<pos:position pos:line="29" pos:column="61"/></name></expr></argument>,
                                                     <argument><expr><name pos:line="30" pos:column="54">conftree<pos:position pos:line="30" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="64">p<pos:position pos:line="30" pos:column="65"/></name></expr></argument>,
                                                     <argument><expr><name pos:line="31" pos:column="54">ptemp<pos:position pos:line="31" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="61">0<pos:position pos:line="31" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="64">optional<pos:position pos:line="31" pos:column="72"/></name></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="74"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></then>
        <else pos:line="33" pos:column="9">else <block pos:line="33" pos:column="14">{
            <return pos:line="34" pos:column="13">return <expr><call><name pos:line="34" pos:column="20">process_resource_config_fnmatch<pos:position pos:line="34" pos:column="51"/></name><argument_list pos:line="34" pos:column="51">(<argument><expr><name pos:line="34" pos:column="52">s<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">path<pos:position pos:line="34" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="61">rest<pos:position pos:line="34" pos:column="65"/></name></expr></argument>,
                                                   <argument><expr><name pos:line="35" pos:column="52">conftree<pos:position pos:line="35" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="62">p<pos:position pos:line="35" pos:column="63"/></name></expr></argument>,
                                                   <argument><expr><name pos:line="36" pos:column="52">ptemp<pos:position pos:line="36" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="59">0<pos:position pos:line="36" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="62">optional<pos:position pos:line="36" pos:column="70"/></name></expr></argument>)<pos:position pos:line="36" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="72"/></return>
        }<pos:position pos:line="37" pos:column="10"/></block></else></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="40" pos:column="5">/*
     * first course of business is to grok all the directory
     * entries here and store 'em away. Recall we need full pathnames
     * for this.
     */</comment>
    <expr_stmt><expr><name pos:line="45" pos:column="5">rv<pos:position pos:line="45" pos:column="7"/></name> <operator pos:line="45" pos:column="8">=<pos:position pos:line="45" pos:column="9"/></operator> <call><name pos:line="45" pos:column="10">apr_dir_open<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><operator pos:line="45" pos:column="23">&amp;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="24">dirp<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="30">path<pos:position pos:line="45" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="36">ptemp<pos:position pos:line="45" pos:column="41"/></name></expr></argument>)<pos:position pos:line="45" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="43"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">rv<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">!=<pos:position pos:line="46" pos:column="14"/></operator> <name pos:line="46" pos:column="15">APR_SUCCESS<pos:position pos:line="46" pos:column="26"/></name></expr>)<pos:position pos:line="46" pos:column="27"/></condition><then pos:line="46" pos:column="27"> <block pos:line="46" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="47" pos:column="9">char<pos:position pos:line="47" pos:column="13"/></name></type> <name><name pos:line="47" pos:column="14">errmsg<pos:position pos:line="47" pos:column="20"/></name><index pos:line="47" pos:column="20">[<expr><literal type="number" pos:line="47" pos:column="21">120<pos:position pos:line="47" pos:column="24"/></literal></expr>]<pos:position pos:line="47" pos:column="25"/></index></name></decl>;<pos:position pos:line="47" pos:column="26"/></decl_stmt>
        <return pos:line="48" pos:column="9">return <expr><call><name pos:line="48" pos:column="16">apr_psprintf<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">p<pos:position pos:line="48" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="32">"Could not open config directory %s: %s"<pos:position pos:line="48" pos:column="72"/></literal></expr></argument>,
                            <argument><expr><name pos:line="49" pos:column="29">path<pos:position pos:line="49" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="35">apr_strerror<pos:position pos:line="49" pos:column="47"/></name><argument_list pos:line="49" pos:column="47">(<argument><expr><name pos:line="49" pos:column="48">rv<pos:position pos:line="49" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="52">errmsg<pos:position pos:line="49" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="60">sizeof <name pos:line="49" pos:column="67">errmsg<pos:position pos:line="49" pos:column="73"/></name></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="76"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="52" pos:column="5">candidates<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <call><name pos:line="52" pos:column="18">apr_array_make<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">ptemp<pos:position pos:line="52" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="40">1<pos:position pos:line="52" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="43">sizeof<argument_list pos:line="52" pos:column="49">(<argument><expr><name pos:line="52" pos:column="50">fnames<pos:position pos:line="52" pos:column="56"/></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="59"/></expr_stmt>
    <while pos:line="53" pos:column="5">while <condition pos:line="53" pos:column="11">(<expr><call><name pos:line="53" pos:column="12">apr_dir_read<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><operator pos:line="53" pos:column="25">&amp;<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="26">dirent<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="34">APR_FINFO_DIRENT<pos:position pos:line="53" pos:column="50"/></name> <operator pos:line="53" pos:column="51">|<pos:position pos:line="53" pos:column="52"/></operator> <name pos:line="53" pos:column="53">APR_FINFO_TYPE<pos:position pos:line="53" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="69">dirp<pos:position pos:line="53" pos:column="73"/></name></expr></argument>)<pos:position pos:line="53" pos:column="74"/></argument_list></call> <operator pos:line="53" pos:column="75">==<pos:position pos:line="53" pos:column="77"/></operator> <name pos:line="53" pos:column="78">APR_SUCCESS<pos:position pos:line="53" pos:column="89"/></name></expr>)<pos:position pos:line="53" pos:column="90"/></condition> <block pos:line="53" pos:column="91">{
        <comment type="block" pos:line="54" pos:column="9">/* strip out '.' and '..' */</comment>
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><call><name pos:line="55" pos:column="13">strcmp<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><name><name pos:line="55" pos:column="20">dirent<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">.<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="27">name<pos:position pos:line="55" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="33">"."<pos:position pos:line="55" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="37"/></argument_list></call>
            <operator pos:line="56" pos:column="13">&amp;&amp;<pos:position pos:line="56" pos:column="23"/></operator> <call><name pos:line="56" pos:column="16">strcmp<pos:position pos:line="56" pos:column="22"/></name><argument_list pos:line="56" pos:column="22">(<argument><expr><name><name pos:line="56" pos:column="23">dirent<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">.<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="30">name<pos:position pos:line="56" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="36">".."<pos:position pos:line="56" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call>
            <operator pos:line="57" pos:column="13">&amp;&amp;<pos:position pos:line="57" pos:column="23"/></operator> <operator pos:line="57" pos:column="16">(<pos:position pos:line="57" pos:column="17"/></operator><call><name pos:line="57" pos:column="17">apr_fnmatch<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><name pos:line="57" pos:column="29">fname<pos:position pos:line="57" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="36">dirent<pos:position pos:line="57" pos:column="42"/></name><operator pos:line="57" pos:column="42">.<pos:position pos:line="57" pos:column="43"/></operator><name pos:line="57" pos:column="43">name<pos:position pos:line="57" pos:column="47"/></name></name></expr></argument>,
                            <argument><expr><name pos:line="58" pos:column="29">APR_FNM_PERIOD<pos:position pos:line="58" pos:column="43"/></name></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call> <operator pos:line="58" pos:column="45">==<pos:position pos:line="58" pos:column="47"/></operator> <name pos:line="58" pos:column="48">APR_SUCCESS<pos:position pos:line="58" pos:column="59"/></name><operator pos:line="58" pos:column="59">)<pos:position pos:line="58" pos:column="60"/></operator></expr>)<pos:position pos:line="58" pos:column="61"/></condition><then pos:line="58" pos:column="61"> <block pos:line="58" pos:column="62">{
            <decl_stmt><decl><type><specifier pos:line="59" pos:column="13">const<pos:position pos:line="59" pos:column="18"/></specifier> <name pos:line="59" pos:column="19">char<pos:position pos:line="59" pos:column="23"/></name> <modifier pos:line="59" pos:column="24">*<pos:position pos:line="59" pos:column="25"/></modifier></type><name pos:line="59" pos:column="25">full_path<pos:position pos:line="59" pos:column="34"/></name> <init pos:line="59" pos:column="35">= <expr><call><name pos:line="59" pos:column="37">ap_make_full_path<pos:position pos:line="59" pos:column="54"/></name><argument_list pos:line="59" pos:column="54">(<argument><expr><name pos:line="59" pos:column="55">ptemp<pos:position pos:line="59" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="62">path<pos:position pos:line="59" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="68">dirent<pos:position pos:line="59" pos:column="74"/></name><operator pos:line="59" pos:column="74">.<pos:position pos:line="59" pos:column="75"/></operator><name pos:line="59" pos:column="75">name<pos:position pos:line="59" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="59" pos:column="81"/></decl_stmt>
            <comment type="block" pos:line="60" pos:column="13">/* If matching internal to path, and we happen to match something
             * other than a directory, skip it
             */</comment>
            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><name pos:line="63" pos:column="17">rest<pos:position pos:line="63" pos:column="21"/></name> <operator pos:line="63" pos:column="22">&amp;&amp;<pos:position pos:line="63" pos:column="32"/></operator> <operator pos:line="63" pos:column="25">(<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="26">rv<pos:position pos:line="63" pos:column="28"/></name> <operator pos:line="63" pos:column="29">==<pos:position pos:line="63" pos:column="31"/></operator> <name pos:line="63" pos:column="32">APR_SUCCESS<pos:position pos:line="63" pos:column="43"/></name><operator pos:line="63" pos:column="43">)<pos:position pos:line="63" pos:column="44"/></operator> <operator pos:line="63" pos:column="45">&amp;&amp;<pos:position pos:line="63" pos:column="55"/></operator> <operator pos:line="63" pos:column="48">(<pos:position pos:line="63" pos:column="49"/></operator><name><name pos:line="63" pos:column="49">dirent<pos:position pos:line="63" pos:column="55"/></name><operator pos:line="63" pos:column="55">.<pos:position pos:line="63" pos:column="56"/></operator><name pos:line="63" pos:column="56">filetype<pos:position pos:line="63" pos:column="64"/></name></name> <operator pos:line="63" pos:column="65">!=<pos:position pos:line="63" pos:column="67"/></operator> <name pos:line="63" pos:column="68">APR_DIR<pos:position pos:line="63" pos:column="75"/></name><operator pos:line="63" pos:column="75">)<pos:position pos:line="63" pos:column="76"/></operator></expr>)<pos:position pos:line="63" pos:column="77"/></condition><then pos:line="63" pos:column="77"> <block pos:line="63" pos:column="78">{
                <continue pos:line="64" pos:column="17">continue;<pos:position pos:line="64" pos:column="26"/></continue>
            }<pos:position pos:line="65" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="66" pos:column="13">fnew<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">=<pos:position pos:line="66" pos:column="19"/></operator> <operator pos:line="66" pos:column="20">(<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="21">fnames<pos:position pos:line="66" pos:column="27"/></name> <operator pos:line="66" pos:column="28">*<pos:position pos:line="66" pos:column="29"/></operator><operator pos:line="66" pos:column="29">)<pos:position pos:line="66" pos:column="30"/></operator> <call><name pos:line="66" pos:column="31">apr_array_push<pos:position pos:line="66" pos:column="45"/></name><argument_list pos:line="66" pos:column="45">(<argument><expr><name pos:line="66" pos:column="46">candidates<pos:position pos:line="66" pos:column="56"/></name></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="67" pos:column="13">fnew<pos:position pos:line="67" pos:column="17"/></name><operator pos:line="67" pos:column="17">-&gt;<pos:position pos:line="67" pos:column="22"/></operator><name pos:line="67" pos:column="19">fname<pos:position pos:line="67" pos:column="24"/></name></name> <operator pos:line="67" pos:column="25">=<pos:position pos:line="67" pos:column="26"/></operator> <name pos:line="67" pos:column="27">full_path<pos:position pos:line="67" pos:column="36"/></name></expr>;<pos:position pos:line="67" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>
    }<pos:position pos:line="69" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="71" pos:column="5">apr_dir_close<pos:position pos:line="71" pos:column="18"/></name><argument_list pos:line="71" pos:column="18">(<argument><expr><name pos:line="71" pos:column="19">dirp<pos:position pos:line="71" pos:column="23"/></name></expr></argument>)<pos:position pos:line="71" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="25"/></expr_stmt>
    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><name><name pos:line="72" pos:column="9">candidates<pos:position pos:line="72" pos:column="19"/></name><operator pos:line="72" pos:column="19">-&gt;<pos:position pos:line="72" pos:column="24"/></operator><name pos:line="72" pos:column="21">nelts<pos:position pos:line="72" pos:column="26"/></name></name> <operator pos:line="72" pos:column="27">!=<pos:position pos:line="72" pos:column="29"/></operator> <literal type="number" pos:line="72" pos:column="30">0<pos:position pos:line="72" pos:column="31"/></literal></expr>)<pos:position pos:line="72" pos:column="32"/></condition><then pos:line="72" pos:column="32"> <block pos:line="72" pos:column="33">{
        <decl_stmt><decl><type><specifier pos:line="73" pos:column="9">const<pos:position pos:line="73" pos:column="14"/></specifier> <name pos:line="73" pos:column="15">char<pos:position pos:line="73" pos:column="19"/></name> <modifier pos:line="73" pos:column="20">*<pos:position pos:line="73" pos:column="21"/></modifier></type><name pos:line="73" pos:column="21">error<pos:position pos:line="73" pos:column="26"/></name></decl>;<pos:position pos:line="73" pos:column="27"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="75" pos:column="9">qsort<pos:position pos:line="75" pos:column="14"/></name><argument_list pos:line="75" pos:column="14">(<argument><expr><operator pos:line="75" pos:column="15">(<pos:position pos:line="75" pos:column="16"/></operator><name pos:line="75" pos:column="16">void<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">*<pos:position pos:line="75" pos:column="22"/></operator><operator pos:line="75" pos:column="22">)<pos:position pos:line="75" pos:column="23"/></operator> <name><name pos:line="75" pos:column="24">candidates<pos:position pos:line="75" pos:column="34"/></name><operator pos:line="75" pos:column="34">-&gt;<pos:position pos:line="75" pos:column="39"/></operator><name pos:line="75" pos:column="36">elts<pos:position pos:line="75" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="42">candidates<pos:position pos:line="75" pos:column="52"/></name><operator pos:line="75" pos:column="52">-&gt;<pos:position pos:line="75" pos:column="57"/></operator><name pos:line="75" pos:column="54">nelts<pos:position pos:line="75" pos:column="59"/></name></name></expr></argument>,
              <argument><expr><sizeof pos:line="76" pos:column="15">sizeof<argument_list pos:line="76" pos:column="21">(<argument><expr><name pos:line="76" pos:column="22">fnames<pos:position pos:line="76" pos:column="28"/></name></expr></argument>)<pos:position pos:line="76" pos:column="29"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="76" pos:column="31">fname_alphasort<pos:position pos:line="76" pos:column="46"/></name></expr></argument>)<pos:position pos:line="76" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="48"/></expr_stmt>

        <comment type="block" pos:line="78" pos:column="9">/*
         * Now recurse these... we handle errors and subdirectories
         * via the recursion, which is nice
         */</comment>
        <for pos:line="82" pos:column="9">for <control pos:line="82" pos:column="13">(<init><expr><name pos:line="82" pos:column="14">current<pos:position pos:line="82" pos:column="21"/></name> <operator pos:line="82" pos:column="22">=<pos:position pos:line="82" pos:column="23"/></operator> <literal type="number" pos:line="82" pos:column="24">0<pos:position pos:line="82" pos:column="25"/></literal></expr>;<pos:position pos:line="82" pos:column="26"/></init> <condition><expr><name pos:line="82" pos:column="27">current<pos:position pos:line="82" pos:column="34"/></name> <operator pos:line="82" pos:column="35">&lt;<pos:position pos:line="82" pos:column="39"/></operator> <name><name pos:line="82" pos:column="37">candidates<pos:position pos:line="82" pos:column="47"/></name><operator pos:line="82" pos:column="47">-&gt;<pos:position pos:line="82" pos:column="52"/></operator><name pos:line="82" pos:column="49">nelts<pos:position pos:line="82" pos:column="54"/></name></name></expr>;<pos:position pos:line="82" pos:column="55"/></condition> <incr><expr><operator pos:line="82" pos:column="56">++<pos:position pos:line="82" pos:column="58"/></operator><name pos:line="82" pos:column="58">current<pos:position pos:line="82" pos:column="65"/></name></expr></incr>)<pos:position pos:line="82" pos:column="66"/></control> <block pos:line="82" pos:column="67">{
            <expr_stmt><expr><name pos:line="83" pos:column="13">fnew<pos:position pos:line="83" pos:column="17"/></name> <operator pos:line="83" pos:column="18">=<pos:position pos:line="83" pos:column="19"/></operator> <operator pos:line="83" pos:column="20">&amp;<pos:position pos:line="83" pos:column="25"/></operator><operator pos:line="83" pos:column="21">(<pos:position pos:line="83" pos:column="22"/></operator><operator pos:line="83" pos:column="22">(<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="23">fnames<pos:position pos:line="83" pos:column="29"/></name> <operator pos:line="83" pos:column="30">*<pos:position pos:line="83" pos:column="31"/></operator><operator pos:line="83" pos:column="31">)<pos:position pos:line="83" pos:column="32"/></operator> <name><name pos:line="83" pos:column="33">candidates<pos:position pos:line="83" pos:column="43"/></name><operator pos:line="83" pos:column="43">-&gt;<pos:position pos:line="83" pos:column="48"/></operator><name pos:line="83" pos:column="45">elts<pos:position pos:line="83" pos:column="49"/></name></name><operator pos:line="83" pos:column="49">)<pos:position pos:line="83" pos:column="50"/></operator><index pos:line="83" pos:column="50">[<expr><name pos:line="83" pos:column="51">current<pos:position pos:line="83" pos:column="58"/></name></expr>]<pos:position pos:line="83" pos:column="59"/></index></expr>;<pos:position pos:line="83" pos:column="60"/></expr_stmt>
            <if pos:line="84" pos:column="13">if <condition pos:line="84" pos:column="16">(<expr><operator pos:line="84" pos:column="17">!<pos:position pos:line="84" pos:column="18"/></operator><name pos:line="84" pos:column="18">rest<pos:position pos:line="84" pos:column="22"/></name></expr>)<pos:position pos:line="84" pos:column="23"/></condition><then pos:line="84" pos:column="23"> <block pos:line="84" pos:column="24">{
                <expr_stmt><expr><name pos:line="85" pos:column="17">error<pos:position pos:line="85" pos:column="22"/></name> <operator pos:line="85" pos:column="23">=<pos:position pos:line="85" pos:column="24"/></operator> <call><name pos:line="85" pos:column="25">process_resource_config_nofnmatch<pos:position pos:line="85" pos:column="58"/></name><argument_list pos:line="85" pos:column="58">(<argument><expr><name pos:line="85" pos:column="59">s<pos:position pos:line="85" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="62">fnew<pos:position pos:line="85" pos:column="66"/></name><operator pos:line="85" pos:column="66">-&gt;<pos:position pos:line="85" pos:column="71"/></operator><name pos:line="85" pos:column="68">fname<pos:position pos:line="85" pos:column="73"/></name></name></expr></argument>,
                                                          <argument><expr><name pos:line="86" pos:column="59">conftree<pos:position pos:line="86" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="69">p<pos:position pos:line="86" pos:column="70"/></name></expr></argument>,
                                                          <argument><expr><name pos:line="87" pos:column="59">ptemp<pos:position pos:line="87" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="66">0<pos:position pos:line="87" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="69">optional<pos:position pos:line="87" pos:column="77"/></name></expr></argument>)<pos:position pos:line="87" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="79"/></expr_stmt>
            }<pos:position pos:line="88" pos:column="14"/></block></then>
            <else pos:line="89" pos:column="13">else <block pos:line="89" pos:column="18">{
                <expr_stmt><expr><name pos:line="90" pos:column="17">error<pos:position pos:line="90" pos:column="22"/></name> <operator pos:line="90" pos:column="23">=<pos:position pos:line="90" pos:column="24"/></operator> <call><name pos:line="90" pos:column="25">process_resource_config_fnmatch<pos:position pos:line="90" pos:column="56"/></name><argument_list pos:line="90" pos:column="56">(<argument><expr><name pos:line="90" pos:column="57">s<pos:position pos:line="90" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="60">fnew<pos:position pos:line="90" pos:column="64"/></name><operator pos:line="90" pos:column="64">-&gt;<pos:position pos:line="90" pos:column="69"/></operator><name pos:line="90" pos:column="66">fname<pos:position pos:line="90" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="73">rest<pos:position pos:line="90" pos:column="77"/></name></expr></argument>,
                                                        <argument><expr><name pos:line="91" pos:column="57">conftree<pos:position pos:line="91" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="67">p<pos:position pos:line="91" pos:column="68"/></name></expr></argument>,
                                                        <argument><expr><name pos:line="92" pos:column="57">ptemp<pos:position pos:line="92" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="64">0<pos:position pos:line="92" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="67">optional<pos:position pos:line="92" pos:column="75"/></name></expr></argument>)<pos:position pos:line="92" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="77"/></expr_stmt>
            }<pos:position pos:line="93" pos:column="14"/></block></else></if>
            <if pos:line="94" pos:column="13">if <condition pos:line="94" pos:column="16">(<expr><name pos:line="94" pos:column="17">error<pos:position pos:line="94" pos:column="22"/></name></expr>)<pos:position pos:line="94" pos:column="23"/></condition><then pos:line="94" pos:column="23"> <block pos:line="94" pos:column="24">{
                <return pos:line="95" pos:column="17">return <expr><name pos:line="95" pos:column="24">error<pos:position pos:line="95" pos:column="29"/></name></expr>;<pos:position pos:line="95" pos:column="30"/></return>
            }<pos:position pos:line="96" pos:column="14"/></block></then></if>
        }<pos:position pos:line="97" pos:column="10"/></block></for>
    }<pos:position pos:line="98" pos:column="6"/></block></then>
    <else pos:line="99" pos:column="5">else <block pos:line="99" pos:column="10">{

        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><operator pos:line="101" pos:column="13">!<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="14">optional<pos:position pos:line="101" pos:column="22"/></name></expr>)<pos:position pos:line="101" pos:column="23"/></condition><then pos:line="101" pos:column="23"> <block pos:line="101" pos:column="24">{
            <return pos:line="102" pos:column="13">return <expr><call><name pos:line="102" pos:column="20">apr_psprintf<pos:position pos:line="102" pos:column="32"/></name><argument_list pos:line="102" pos:column="32">(<argument><expr><name pos:line="102" pos:column="33">p<pos:position pos:line="102" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="36">"No matches for the wildcard '%s' in '%s', failing "<pos:position pos:line="102" pos:column="88"/></literal>
                                   <literal type="string" pos:line="103" pos:column="36">"(use IncludeOptional if required)"<pos:position pos:line="103" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="73">fname<pos:position pos:line="103" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="80">path<pos:position pos:line="103" pos:column="84"/></name></expr></argument>)<pos:position pos:line="103" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="86"/></return>
        }<pos:position pos:line="104" pos:column="10"/></block></then></if>
    }<pos:position pos:line="105" pos:column="6"/></block></else></if>

    <return pos:line="107" pos:column="5">return <expr><name pos:line="107" pos:column="12">NULL<pos:position pos:line="107" pos:column="16"/></name></expr>;<pos:position pos:line="107" pos:column="17"/></return>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

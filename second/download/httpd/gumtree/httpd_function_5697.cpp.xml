<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5697.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">send_environment<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">proxy_conn_rec<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">conn<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">request_rec<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">r<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">apr_pool_t<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">temp_pool<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">apr_uint16_t<pos:position pos:line="3" pos:column="50"/></name></type> <name pos:line="3" pos:column="51">request_id<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">apr_array_header_t<pos:position pos:line="5" pos:column="29"/></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">envarr<pos:position pos:line="5" pos:column="37"/></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">apr_table_entry_t<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">elts<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">iovec<pos:position pos:line="7" pos:column="17"/></name></name></type> <name><name pos:line="7" pos:column="18">vec<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><literal type="number" pos:line="7" pos:column="22">2<pos:position pos:line="7" pos:column="23"/></literal></expr>]<pos:position pos:line="7" pos:column="24"/></index></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ap_fcgi_header<pos:position pos:line="8" pos:column="19"/></name></type> <name pos:line="8" pos:column="20">header<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unsigned<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">char<pos:position pos:line="9" pos:column="18"/></name></type> <name><name pos:line="9" pos:column="19">farray<pos:position pos:line="9" pos:column="25"/></name><index pos:line="9" pos:column="25">[<expr><name pos:line="9" pos:column="26">AP_FCGI_HEADER_LEN<pos:position pos:line="9" pos:column="44"/></name></expr>]<pos:position pos:line="9" pos:column="45"/></index></name></decl>;<pos:position pos:line="9" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">body<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_status_t<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">rv<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_size_t<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">avail_len<pos:position pos:line="12" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="27">len<pos:position pos:line="12" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="32">required_len<pos:position pos:line="12" pos:column="44"/></name></decl>;<pos:position pos:line="12" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">next_elem<pos:position pos:line="13" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="20">starting_elem<pos:position pos:line="13" pos:column="33"/></name></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">proxyfilename<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><name><name pos:line="14" pos:column="27">r<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">filename<pos:position pos:line="14" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">fcgi_req_config_t<pos:position pos:line="15" pos:column="22"/></name> <modifier pos:line="15" pos:column="23">*<pos:position pos:line="15" pos:column="24"/></modifier></type><name pos:line="15" pos:column="24">rconf<pos:position pos:line="15" pos:column="29"/></name> <init pos:line="15" pos:column="30">= <expr><call><name pos:line="15" pos:column="32">ap_get_module_config<pos:position pos:line="15" pos:column="52"/></name><argument_list pos:line="15" pos:column="52">(<argument><expr><name><name pos:line="15" pos:column="53">r<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">-&gt;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="56">request_config<pos:position pos:line="15" pos:column="70"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="72">&amp;<pos:position pos:line="15" pos:column="77"/></operator><name pos:line="15" pos:column="73">proxy_fcgi_module<pos:position pos:line="15" pos:column="90"/></name></expr></argument>)<pos:position pos:line="15" pos:column="91"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="92"/></decl_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">rconf<pos:position pos:line="17" pos:column="14"/></name></expr>)<pos:position pos:line="17" pos:column="15"/></condition><then pos:line="17" pos:column="15"> <block pos:line="17" pos:column="16">{ 
       <if pos:line="18" pos:column="8">if <condition pos:line="18" pos:column="11">(<expr><name><name pos:line="18" pos:column="12">rconf<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">need_dirwalk<pos:position pos:line="18" pos:column="31"/></name></name></expr>)<pos:position pos:line="18" pos:column="32"/></condition><then pos:line="18" pos:column="32"> <block pos:line="18" pos:column="33">{ 
          <expr_stmt><expr><call><name pos:line="19" pos:column="11">ap_directory_walk<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">r<pos:position pos:line="19" pos:column="30"/></name></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
       }<pos:position pos:line="20" pos:column="9"/></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="23" pos:column="5">/* Strip balancer prefix */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">r<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">filename<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">&amp;&amp;<pos:position pos:line="24" pos:column="31"/></operator> <operator pos:line="24" pos:column="24">!<pos:position pos:line="24" pos:column="25"/></operator><call><name pos:line="24" pos:column="25">strncmp<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name><name pos:line="24" pos:column="33">r<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">filename<pos:position pos:line="24" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="46">"proxy:balancer://"<pos:position pos:line="24" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="67">17<pos:position pos:line="24" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="71"/></condition><then pos:line="24" pos:column="71"> <block pos:line="24" pos:column="72">{ 
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">char<pos:position pos:line="25" pos:column="13"/></name> <modifier pos:line="25" pos:column="14">*<pos:position pos:line="25" pos:column="15"/></modifier></type><name pos:line="25" pos:column="15">newfname<pos:position pos:line="25" pos:column="23"/></name> <init pos:line="25" pos:column="24">= <expr><call><name pos:line="25" pos:column="26">apr_pstrdup<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name><name pos:line="25" pos:column="38">r<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">-&gt;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="41">pool<pos:position pos:line="25" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="47">r<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">-&gt;<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="50">filename<pos:position pos:line="25" pos:column="58"/></name></name><operator pos:line="25" pos:column="58">+<pos:position pos:line="25" pos:column="59"/></operator><literal type="number" pos:line="25" pos:column="59">17<pos:position pos:line="25" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="63"/></decl_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">newfname<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <call><name pos:line="26" pos:column="20">ap_strchr<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">newfname<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="40">'/'<pos:position pos:line="26" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">r<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">filename<pos:position pos:line="27" pos:column="20"/></name></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="23">newfname<pos:position pos:line="27" pos:column="31"/></name></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ap_add_common_vars<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">r<pos:position pos:line="30" pos:column="25"/></name></expr></argument>)<pos:position pos:line="30" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ap_add_cgi_vars<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">r<pos:position pos:line="31" pos:column="22"/></name></expr></argument>)<pos:position pos:line="31" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
 
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">r<pos:position pos:line="33" pos:column="6"/></name><operator pos:line="33" pos:column="6">-&gt;<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="8">filename<pos:position pos:line="33" pos:column="16"/></name></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <name pos:line="33" pos:column="19">proxyfilename<pos:position pos:line="33" pos:column="32"/></name></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* XXX are there any FastCGI specific env vars we need to send? */</comment>

    <comment type="block" pos:line="37" pos:column="5">/* XXX mod_cgi/mod_cgid use ap_create_environment here, which fills in
     *     the TZ value specially.  We could use that, but it would mean
     *     parsing the key/value pairs back OUT of the allocated env array,
     *     not to mention allocating a totally useless array in the first
     *     place, which would suck. */</comment>

    <expr_stmt><expr><name pos:line="43" pos:column="5">envarr<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <call><name pos:line="43" pos:column="14">apr_table_elts<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><name><name pos:line="43" pos:column="29">r<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">-&gt;<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="32">subprocess_env<pos:position pos:line="43" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">elts<pos:position pos:line="44" pos:column="9"/></name> <operator pos:line="44" pos:column="10">=<pos:position pos:line="44" pos:column="11"/></operator> <operator pos:line="44" pos:column="12">(<pos:position pos:line="44" pos:column="13"/></operator><specifier pos:line="44" pos:column="13">const<pos:position pos:line="44" pos:column="18"/></specifier> <name pos:line="44" pos:column="19">apr_table_entry_t<pos:position pos:line="44" pos:column="36"/></name> <operator pos:line="44" pos:column="37">*<pos:position pos:line="44" pos:column="38"/></operator><operator pos:line="44" pos:column="38">)<pos:position pos:line="44" pos:column="39"/></operator> <name><name pos:line="44" pos:column="40">envarr<pos:position pos:line="44" pos:column="46"/></name><operator pos:line="44" pos:column="46">-&gt;<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="48">elts<pos:position pos:line="44" pos:column="52"/></name></name></expr>;<pos:position pos:line="44" pos:column="53"/></expr_stmt>

<cpp:ifdef pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">ifdef<pos:position pos:line="46" pos:column="7"/></cpp:directive> <name pos:line="46" pos:column="8">FCGI_DUMP_ENV_VARS<pos:position pos:line="46" pos:column="26"/></name></cpp:ifdef>
    <block pos:line="47" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="48" pos:column="9">int<pos:position pos:line="48" pos:column="12"/></name></type> <name pos:line="48" pos:column="13">i<pos:position pos:line="48" pos:column="14"/></name></decl>;<pos:position pos:line="48" pos:column="15"/></decl_stmt>
        
        <for pos:line="50" pos:column="9">for <control pos:line="50" pos:column="13">(<init><expr><name pos:line="50" pos:column="14">i<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <literal type="number" pos:line="50" pos:column="18">0<pos:position pos:line="50" pos:column="19"/></literal></expr>;<pos:position pos:line="50" pos:column="20"/></init> <condition><expr><name pos:line="50" pos:column="21">i<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">&lt;<pos:position pos:line="50" pos:column="27"/></operator> <name><name pos:line="50" pos:column="25">envarr<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">-&gt;<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="33">nelts<pos:position pos:line="50" pos:column="38"/></name></name></expr>;<pos:position pos:line="50" pos:column="39"/></condition> <incr><expr><operator pos:line="50" pos:column="40">++<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="42">i<pos:position pos:line="50" pos:column="43"/></name></expr></incr>)<pos:position pos:line="50" pos:column="44"/></control> <block pos:line="50" pos:column="45">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">ap_log_rerror<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">APLOG_MARK<pos:position pos:line="51" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="39">APLOG_DEBUG<pos:position pos:line="51" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="52">0<pos:position pos:line="51" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="55">r<pos:position pos:line="51" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="58">APLOGNO<pos:position pos:line="51" pos:column="65"/></name><argument_list pos:line="51" pos:column="65">(<argument><expr><literal type="number" pos:line="51" pos:column="66">01062<pos:position pos:line="51" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="72"/></argument_list></call>
                          <literal type="string" pos:line="52" pos:column="27">"sending env var '%s' value '%s'"<pos:position pos:line="52" pos:column="60"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="53" pos:column="27">elts<pos:position pos:line="53" pos:column="31"/></name><index pos:line="53" pos:column="31">[<expr><name pos:line="53" pos:column="32">i<pos:position pos:line="53" pos:column="33"/></name></expr>]<pos:position pos:line="53" pos:column="34"/></index></name><operator pos:line="53" pos:column="34">.<pos:position pos:line="53" pos:column="35"/></operator><name pos:line="53" pos:column="35">key<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="40">elts<pos:position pos:line="53" pos:column="44"/></name><index pos:line="53" pos:column="44">[<expr><name pos:line="53" pos:column="45">i<pos:position pos:line="53" pos:column="46"/></name></expr>]<pos:position pos:line="53" pos:column="47"/></index></name><operator pos:line="53" pos:column="47">.<pos:position pos:line="53" pos:column="48"/></operator><name pos:line="53" pos:column="48">val<pos:position pos:line="53" pos:column="51"/></name></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></for>
    }<pos:position pos:line="55" pos:column="6"/></block>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="58" pos:column="5">/* Send envvars over in as many FastCGI records as it takes, */</comment>
    <expr_stmt><expr><name pos:line="59" pos:column="5">next_elem<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator> <literal type="number" pos:line="59" pos:column="17">0<pos:position pos:line="59" pos:column="18"/></literal></expr>;<pos:position pos:line="59" pos:column="19"/></expr_stmt> <comment type="block" pos:line="59" pos:column="20">/* starting with the first one */</comment>

    <expr_stmt><expr><name pos:line="61" pos:column="5">avail_len<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">=<pos:position pos:line="61" pos:column="16"/></operator> <literal type="number" pos:line="61" pos:column="17">16<pos:position pos:line="61" pos:column="19"/></literal> <operator pos:line="61" pos:column="20">*<pos:position pos:line="61" pos:column="21"/></operator> <literal type="number" pos:line="61" pos:column="22">1024<pos:position pos:line="61" pos:column="26"/></literal></expr>;<pos:position pos:line="61" pos:column="27"/></expr_stmt> <comment type="block" pos:line="61" pos:column="28">/* our limit per record, which could have been up
                            * to AP_FCGI_MAX_CONTENT_LEN
                            */</comment>

    <while pos:line="65" pos:column="5">while <condition pos:line="65" pos:column="11">(<expr><name pos:line="65" pos:column="12">next_elem<pos:position pos:line="65" pos:column="21"/></name> <operator pos:line="65" pos:column="22">&lt;<pos:position pos:line="65" pos:column="26"/></operator> <name><name pos:line="65" pos:column="24">envarr<pos:position pos:line="65" pos:column="30"/></name><operator pos:line="65" pos:column="30">-&gt;<pos:position pos:line="65" pos:column="35"/></operator><name pos:line="65" pos:column="32">nelts<pos:position pos:line="65" pos:column="37"/></name></name></expr>)<pos:position pos:line="65" pos:column="38"/></condition> <block pos:line="65" pos:column="39">{
        <expr_stmt><expr><name pos:line="66" pos:column="9">starting_elem<pos:position pos:line="66" pos:column="22"/></name> <operator pos:line="66" pos:column="23">=<pos:position pos:line="66" pos:column="24"/></operator> <name pos:line="66" pos:column="25">next_elem<pos:position pos:line="66" pos:column="34"/></name></expr>;<pos:position pos:line="66" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="67" pos:column="9">required_len<pos:position pos:line="67" pos:column="21"/></name> <operator pos:line="67" pos:column="22">=<pos:position pos:line="67" pos:column="23"/></operator> <call><name pos:line="67" pos:column="24">ap_fcgi_encoded_env_len<pos:position pos:line="67" pos:column="47"/></name><argument_list pos:line="67" pos:column="47">(<argument><expr><name><name pos:line="67" pos:column="48">r<pos:position pos:line="67" pos:column="49"/></name><operator pos:line="67" pos:column="49">-&gt;<pos:position pos:line="67" pos:column="54"/></operator><name pos:line="67" pos:column="51">subprocess_env<pos:position pos:line="67" pos:column="65"/></name></name></expr></argument>,
                                               <argument><expr><name pos:line="68" pos:column="48">avail_len<pos:position pos:line="68" pos:column="57"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="69" pos:column="48">&amp;<pos:position pos:line="69" pos:column="53"/></operator><name pos:line="69" pos:column="49">next_elem<pos:position pos:line="69" pos:column="58"/></name></expr></argument>)<pos:position pos:line="69" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="60"/></expr_stmt>

        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><operator pos:line="71" pos:column="13">!<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="14">required_len<pos:position pos:line="71" pos:column="26"/></name></expr>)<pos:position pos:line="71" pos:column="27"/></condition><then pos:line="71" pos:column="27"> <block pos:line="71" pos:column="28">{
            <if pos:line="72" pos:column="13">if <condition pos:line="72" pos:column="16">(<expr><name pos:line="72" pos:column="17">next_elem<pos:position pos:line="72" pos:column="26"/></name> <operator pos:line="72" pos:column="27">&lt;<pos:position pos:line="72" pos:column="31"/></operator> <name><name pos:line="72" pos:column="29">envarr<pos:position pos:line="72" pos:column="35"/></name><operator pos:line="72" pos:column="35">-&gt;<pos:position pos:line="72" pos:column="40"/></operator><name pos:line="72" pos:column="37">nelts<pos:position pos:line="72" pos:column="42"/></name></name></expr>)<pos:position pos:line="72" pos:column="43"/></condition><then pos:line="72" pos:column="43"> <block pos:line="72" pos:column="44">{
                <expr_stmt><expr><call><name pos:line="73" pos:column="17">ap_log_rerror<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><name pos:line="73" pos:column="31">APLOG_MARK<pos:position pos:line="73" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="43">APLOG_WARNING<pos:position pos:line="73" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="58">0<pos:position pos:line="73" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="61">r<pos:position pos:line="73" pos:column="62"/></name></expr></argument>,
                              <argument><expr><call><name pos:line="74" pos:column="31">APLOGNO<pos:position pos:line="74" pos:column="38"/></name><argument_list pos:line="74" pos:column="38">(<argument><expr><literal type="number" pos:line="74" pos:column="39">02536<pos:position pos:line="74" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="45"/></argument_list></call> <literal type="string" pos:line="74" pos:column="46">"couldn't encode envvar '%s' in %"<pos:position pos:line="74" pos:column="80"/></literal>
                              <name pos:line="75" pos:column="31">APR_SIZE_T_FMT<pos:position pos:line="75" pos:column="45"/></name> <literal type="string" pos:line="75" pos:column="46">" bytes"<pos:position pos:line="75" pos:column="54"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="76" pos:column="31">elts<pos:position pos:line="76" pos:column="35"/></name><index pos:line="76" pos:column="35">[<expr><name pos:line="76" pos:column="36">next_elem<pos:position pos:line="76" pos:column="45"/></name></expr>]<pos:position pos:line="76" pos:column="46"/></index></name><operator pos:line="76" pos:column="46">.<pos:position pos:line="76" pos:column="47"/></operator><name pos:line="76" pos:column="47">key<pos:position pos:line="76" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="52">avail_len<pos:position pos:line="76" pos:column="61"/></name></expr></argument>)<pos:position pos:line="76" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="63"/></expr_stmt>
                <comment type="block" pos:line="77" pos:column="17">/* skip this envvar and continue */</comment>
                <expr_stmt><expr><operator pos:line="78" pos:column="17">++<pos:position pos:line="78" pos:column="19"/></operator><name pos:line="78" pos:column="19">next_elem<pos:position pos:line="78" pos:column="28"/></name></expr>;<pos:position pos:line="78" pos:column="29"/></expr_stmt>
                <continue pos:line="79" pos:column="17">continue;<pos:position pos:line="79" pos:column="26"/></continue>
            }<pos:position pos:line="80" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="81" pos:column="13">/* only an unused element at the end of the array */</comment>
            <break pos:line="82" pos:column="13">break;<pos:position pos:line="82" pos:column="19"/></break>
        }<pos:position pos:line="83" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="85" pos:column="9">body<pos:position pos:line="85" pos:column="13"/></name> <operator pos:line="85" pos:column="14">=<pos:position pos:line="85" pos:column="15"/></operator> <call><name pos:line="85" pos:column="16">apr_palloc<pos:position pos:line="85" pos:column="26"/></name><argument_list pos:line="85" pos:column="26">(<argument><expr><name pos:line="85" pos:column="27">temp_pool<pos:position pos:line="85" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="38">required_len<pos:position pos:line="85" pos:column="50"/></name></expr></argument>)<pos:position pos:line="85" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name pos:line="86" pos:column="9">rv<pos:position pos:line="86" pos:column="11"/></name> <operator pos:line="86" pos:column="12">=<pos:position pos:line="86" pos:column="13"/></operator> <call><name pos:line="86" pos:column="14">ap_fcgi_encode_env<pos:position pos:line="86" pos:column="32"/></name><argument_list pos:line="86" pos:column="32">(<argument><expr><name pos:line="86" pos:column="33">r<pos:position pos:line="86" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="36">r<pos:position pos:line="86" pos:column="37"/></name><operator pos:line="86" pos:column="37">-&gt;<pos:position pos:line="86" pos:column="42"/></operator><name pos:line="86" pos:column="39">subprocess_env<pos:position pos:line="86" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="55">body<pos:position pos:line="86" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="61">required_len<pos:position pos:line="86" pos:column="73"/></name></expr></argument>,
                                <argument><expr><operator pos:line="87" pos:column="33">&amp;<pos:position pos:line="87" pos:column="38"/></operator><name pos:line="87" pos:column="34">starting_elem<pos:position pos:line="87" pos:column="47"/></name></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="49"/></expr_stmt>
        <comment type="block" pos:line="88" pos:column="9">/* we pre-compute, so we can't run out of space */</comment>
        <expr_stmt><expr><call><name pos:line="89" pos:column="9">ap_assert<pos:position pos:line="89" pos:column="18"/></name><argument_list pos:line="89" pos:column="18">(<argument><expr><name pos:line="89" pos:column="19">rv<pos:position pos:line="89" pos:column="21"/></name> <operator pos:line="89" pos:column="22">==<pos:position pos:line="89" pos:column="24"/></operator> <name pos:line="89" pos:column="25">APR_SUCCESS<pos:position pos:line="89" pos:column="36"/></name></expr></argument>)<pos:position pos:line="89" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="38"/></expr_stmt>
        <comment type="block" pos:line="90" pos:column="9">/* compute and encode must be in sync */</comment>
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">ap_assert<pos:position pos:line="91" pos:column="18"/></name><argument_list pos:line="91" pos:column="18">(<argument><expr><name pos:line="91" pos:column="19">starting_elem<pos:position pos:line="91" pos:column="32"/></name> <operator pos:line="91" pos:column="33">==<pos:position pos:line="91" pos:column="35"/></operator> <name pos:line="91" pos:column="36">next_elem<pos:position pos:line="91" pos:column="45"/></name></expr></argument>)<pos:position pos:line="91" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="47"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="93" pos:column="9">ap_fcgi_fill_in_header<pos:position pos:line="93" pos:column="31"/></name><argument_list pos:line="93" pos:column="31">(<argument><expr><operator pos:line="93" pos:column="32">&amp;<pos:position pos:line="93" pos:column="37"/></operator><name pos:line="93" pos:column="33">header<pos:position pos:line="93" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="41">AP_FCGI_PARAMS<pos:position pos:line="93" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="57">request_id<pos:position pos:line="93" pos:column="67"/></name></expr></argument>,
                               <argument><expr><operator pos:line="94" pos:column="32">(<pos:position pos:line="94" pos:column="33"/></operator><name pos:line="94" pos:column="33">apr_uint16_t<pos:position pos:line="94" pos:column="45"/></name><operator pos:line="94" pos:column="45">)<pos:position pos:line="94" pos:column="46"/></operator><name pos:line="94" pos:column="46">required_len<pos:position pos:line="94" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="60">0<pos:position pos:line="94" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">ap_fcgi_header_to_array<pos:position pos:line="95" pos:column="32"/></name><argument_list pos:line="95" pos:column="32">(<argument><expr><operator pos:line="95" pos:column="33">&amp;<pos:position pos:line="95" pos:column="38"/></operator><name pos:line="95" pos:column="34">header<pos:position pos:line="95" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="42">farray<pos:position pos:line="95" pos:column="48"/></name></expr></argument>)<pos:position pos:line="95" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="50"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="97" pos:column="9">vec<pos:position pos:line="97" pos:column="12"/></name><index pos:line="97" pos:column="12">[<expr><literal type="number" pos:line="97" pos:column="13">0<pos:position pos:line="97" pos:column="14"/></literal></expr>]<pos:position pos:line="97" pos:column="15"/></index></name><operator pos:line="97" pos:column="15">.<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="16">iov_base<pos:position pos:line="97" pos:column="24"/></name> <operator pos:line="97" pos:column="25">=<pos:position pos:line="97" pos:column="26"/></operator> <operator pos:line="97" pos:column="27">(<pos:position pos:line="97" pos:column="28"/></operator><name pos:line="97" pos:column="28">void<pos:position pos:line="97" pos:column="32"/></name> <operator pos:line="97" pos:column="33">*<pos:position pos:line="97" pos:column="34"/></operator><operator pos:line="97" pos:column="34">)<pos:position pos:line="97" pos:column="35"/></operator><name pos:line="97" pos:column="35">farray<pos:position pos:line="97" pos:column="41"/></name></expr>;<pos:position pos:line="97" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="98" pos:column="9">vec<pos:position pos:line="98" pos:column="12"/></name><index pos:line="98" pos:column="12">[<expr><literal type="number" pos:line="98" pos:column="13">0<pos:position pos:line="98" pos:column="14"/></literal></expr>]<pos:position pos:line="98" pos:column="15"/></index></name><operator pos:line="98" pos:column="15">.<pos:position pos:line="98" pos:column="16"/></operator><name pos:line="98" pos:column="16">iov_len<pos:position pos:line="98" pos:column="23"/></name> <operator pos:line="98" pos:column="24">=<pos:position pos:line="98" pos:column="25"/></operator> <sizeof pos:line="98" pos:column="26">sizeof<argument_list pos:line="98" pos:column="32">(<argument><expr><name pos:line="98" pos:column="33">farray<pos:position pos:line="98" pos:column="39"/></name></expr></argument>)<pos:position pos:line="98" pos:column="40"/></argument_list></sizeof></expr>;<pos:position pos:line="98" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="99" pos:column="9">vec<pos:position pos:line="99" pos:column="12"/></name><index pos:line="99" pos:column="12">[<expr><literal type="number" pos:line="99" pos:column="13">1<pos:position pos:line="99" pos:column="14"/></literal></expr>]<pos:position pos:line="99" pos:column="15"/></index></name><operator pos:line="99" pos:column="15">.<pos:position pos:line="99" pos:column="16"/></operator><name pos:line="99" pos:column="16">iov_base<pos:position pos:line="99" pos:column="24"/></name> <operator pos:line="99" pos:column="25">=<pos:position pos:line="99" pos:column="26"/></operator> <name pos:line="99" pos:column="27">body<pos:position pos:line="99" pos:column="31"/></name></expr>;<pos:position pos:line="99" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="100" pos:column="9">vec<pos:position pos:line="100" pos:column="12"/></name><index pos:line="100" pos:column="12">[<expr><literal type="number" pos:line="100" pos:column="13">1<pos:position pos:line="100" pos:column="14"/></literal></expr>]<pos:position pos:line="100" pos:column="15"/></index></name><operator pos:line="100" pos:column="15">.<pos:position pos:line="100" pos:column="16"/></operator><name pos:line="100" pos:column="16">iov_len<pos:position pos:line="100" pos:column="23"/></name> <operator pos:line="100" pos:column="24">=<pos:position pos:line="100" pos:column="25"/></operator> <name pos:line="100" pos:column="26">required_len<pos:position pos:line="100" pos:column="38"/></name></expr>;<pos:position pos:line="100" pos:column="39"/></expr_stmt>

        <expr_stmt><expr><name pos:line="102" pos:column="9">rv<pos:position pos:line="102" pos:column="11"/></name> <operator pos:line="102" pos:column="12">=<pos:position pos:line="102" pos:column="13"/></operator> <call><name pos:line="102" pos:column="14">send_data<pos:position pos:line="102" pos:column="23"/></name><argument_list pos:line="102" pos:column="23">(<argument><expr><name pos:line="102" pos:column="24">conn<pos:position pos:line="102" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="30">vec<pos:position pos:line="102" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="35">2<pos:position pos:line="102" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="102" pos:column="38">&amp;<pos:position pos:line="102" pos:column="43"/></operator><name pos:line="102" pos:column="39">len<pos:position pos:line="102" pos:column="42"/></name></expr></argument>)<pos:position pos:line="102" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="103" pos:column="9">apr_pool_clear<pos:position pos:line="103" pos:column="23"/></name><argument_list pos:line="103" pos:column="23">(<argument><expr><name pos:line="103" pos:column="24">temp_pool<pos:position pos:line="103" pos:column="33"/></name></expr></argument>)<pos:position pos:line="103" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="35"/></expr_stmt>

        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">rv<pos:position pos:line="105" pos:column="15"/></name></expr>)<pos:position pos:line="105" pos:column="16"/></condition><then pos:line="105" pos:column="16"> <block pos:line="105" pos:column="17">{
            <return pos:line="106" pos:column="13">return <expr><name pos:line="106" pos:column="20">rv<pos:position pos:line="106" pos:column="22"/></name></expr>;<pos:position pos:line="106" pos:column="23"/></return>
        }<pos:position pos:line="107" pos:column="10"/></block></then></if>
    }<pos:position pos:line="108" pos:column="6"/></block></while>

    <comment type="block" pos:line="110" pos:column="5">/* Envvars sent, so say we're done */</comment>
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">ap_fcgi_fill_in_header<pos:position pos:line="111" pos:column="27"/></name><argument_list pos:line="111" pos:column="27">(<argument><expr><operator pos:line="111" pos:column="28">&amp;<pos:position pos:line="111" pos:column="33"/></operator><name pos:line="111" pos:column="29">header<pos:position pos:line="111" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="37">AP_FCGI_PARAMS<pos:position pos:line="111" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="53">request_id<pos:position pos:line="111" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="65">0<pos:position pos:line="111" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="68">0<pos:position pos:line="111" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="112" pos:column="5">ap_fcgi_header_to_array<pos:position pos:line="112" pos:column="28"/></name><argument_list pos:line="112" pos:column="28">(<argument><expr><operator pos:line="112" pos:column="29">&amp;<pos:position pos:line="112" pos:column="34"/></operator><name pos:line="112" pos:column="30">header<pos:position pos:line="112" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="38">farray<pos:position pos:line="112" pos:column="44"/></name></expr></argument>)<pos:position pos:line="112" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="114" pos:column="5">vec<pos:position pos:line="114" pos:column="8"/></name><index pos:line="114" pos:column="8">[<expr><literal type="number" pos:line="114" pos:column="9">0<pos:position pos:line="114" pos:column="10"/></literal></expr>]<pos:position pos:line="114" pos:column="11"/></index></name><operator pos:line="114" pos:column="11">.<pos:position pos:line="114" pos:column="12"/></operator><name pos:line="114" pos:column="12">iov_base<pos:position pos:line="114" pos:column="20"/></name> <operator pos:line="114" pos:column="21">=<pos:position pos:line="114" pos:column="22"/></operator> <operator pos:line="114" pos:column="23">(<pos:position pos:line="114" pos:column="24"/></operator><name pos:line="114" pos:column="24">void<pos:position pos:line="114" pos:column="28"/></name> <operator pos:line="114" pos:column="29">*<pos:position pos:line="114" pos:column="30"/></operator><operator pos:line="114" pos:column="30">)<pos:position pos:line="114" pos:column="31"/></operator><name pos:line="114" pos:column="31">farray<pos:position pos:line="114" pos:column="37"/></name></expr>;<pos:position pos:line="114" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="115" pos:column="5">vec<pos:position pos:line="115" pos:column="8"/></name><index pos:line="115" pos:column="8">[<expr><literal type="number" pos:line="115" pos:column="9">0<pos:position pos:line="115" pos:column="10"/></literal></expr>]<pos:position pos:line="115" pos:column="11"/></index></name><operator pos:line="115" pos:column="11">.<pos:position pos:line="115" pos:column="12"/></operator><name pos:line="115" pos:column="12">iov_len<pos:position pos:line="115" pos:column="19"/></name> <operator pos:line="115" pos:column="20">=<pos:position pos:line="115" pos:column="21"/></operator> <sizeof pos:line="115" pos:column="22">sizeof<argument_list pos:line="115" pos:column="28">(<argument><expr><name pos:line="115" pos:column="29">farray<pos:position pos:line="115" pos:column="35"/></name></expr></argument>)<pos:position pos:line="115" pos:column="36"/></argument_list></sizeof></expr>;<pos:position pos:line="115" pos:column="37"/></expr_stmt>

    <return pos:line="117" pos:column="5">return <expr><call><name pos:line="117" pos:column="12">send_data<pos:position pos:line="117" pos:column="21"/></name><argument_list pos:line="117" pos:column="21">(<argument><expr><name pos:line="117" pos:column="22">conn<pos:position pos:line="117" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="28">vec<pos:position pos:line="117" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="33">1<pos:position pos:line="117" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="117" pos:column="36">&amp;<pos:position pos:line="117" pos:column="41"/></operator><name pos:line="117" pos:column="37">len<pos:position pos:line="117" pos:column="40"/></name></expr></argument>)<pos:position pos:line="117" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="42"/></return>
}<pos:position pos:line="118" pos:column="2"/></block></function></unit>

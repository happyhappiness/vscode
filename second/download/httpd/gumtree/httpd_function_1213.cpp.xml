<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1213.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier> <specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier></type> <name><name pos:line="1" pos:column="39">argv<pos:position pos:line="1" pos:column="43"/></name><index pos:line="1" pos:column="43">[]<pos:position pos:line="1" pos:column="45"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_file_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">fpw<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">NULL<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">record<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><name pos:line="4" pos:column="17">MAX_STRING_LEN<pos:position pos:line="4" pos:column="31"/></name></expr>]<pos:position pos:line="4" pos:column="32"/></index></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">line<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">MAX_STRING_LEN<pos:position pos:line="5" pos:column="29"/></name></expr>]<pos:position pos:line="5" pos:column="30"/></index></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">password<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">pwfilename<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">user<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">tn<pos:position pos:line="9" pos:column="12"/></name><index pos:line="9" pos:column="12">[]<pos:position pos:line="9" pos:column="14"/></index></name> <init pos:line="9" pos:column="15">= <expr><literal type="string" pos:line="9" pos:column="17">"htpasswd.tmp.XXXXXX"<pos:position pos:line="9" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">dirname<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">scratch<pos:position pos:line="11" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="11" pos:column="20">cp<pos:position pos:line="11" pos:column="22"/></name><index pos:line="11" pos:column="22">[<expr><name pos:line="11" pos:column="23">MAX_STRING_LEN<pos:position pos:line="11" pos:column="37"/></name></expr>]<pos:position pos:line="11" pos:column="38"/></index></name></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">found<pos:position pos:line="12" pos:column="14"/></name> <init pos:line="12" pos:column="15">= <expr><literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">i<pos:position pos:line="13" pos:column="10"/></name></decl>;<pos:position pos:line="13" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">alg<pos:position pos:line="14" pos:column="12"/></name> <init pos:line="14" pos:column="13">= <expr><name pos:line="14" pos:column="15">ALG_CRYPT<pos:position pos:line="14" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">mask<pos:position pos:line="15" pos:column="13"/></name> <init pos:line="15" pos:column="14">= <expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">apr_pool_t<pos:position pos:line="16" pos:column="15"/></name> <modifier pos:line="16" pos:column="16">*<pos:position pos:line="16" pos:column="17"/></modifier></type><name pos:line="16" pos:column="17">pool<pos:position pos:line="16" pos:column="21"/></name></decl>;<pos:position pos:line="16" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">existing_file<pos:position pos:line="17" pos:column="22"/></name> <init pos:line="17" pos:column="23">= <expr><literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>
<cpp:if pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">if<pos:position pos:line="18" pos:column="4"/></cpp:directive> <expr><name pos:line="18" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="18" pos:column="23"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">apr_status_t<pos:position pos:line="19" pos:column="17"/></name></type> <name pos:line="19" pos:column="18">rv<pos:position pos:line="19" pos:column="20"/></name></decl>;<pos:position pos:line="19" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">apr_xlate_t<pos:position pos:line="20" pos:column="16"/></name> <modifier pos:line="20" pos:column="17">*<pos:position pos:line="20" pos:column="18"/></modifier></type><name pos:line="20" pos:column="18">to_ascii<pos:position pos:line="20" pos:column="26"/></name></decl>;<pos:position pos:line="20" pos:column="27"/></decl_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">apr_app_initialize<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><operator pos:line="23" pos:column="24">&amp;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="25">argc<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="31">&amp;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="32">argv<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">NULL<pos:position pos:line="23" pos:column="42"/></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">atexit<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">terminate<pos:position pos:line="24" pos:column="21"/></name></expr></argument>)<pos:position pos:line="24" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">apr_pool_create<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><operator pos:line="25" pos:column="21">&amp;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="22">pool<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">NULL<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">apr_file_open_stderr<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><operator pos:line="26" pos:column="26">&amp;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="27">errfile<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">pool<pos:position pos:line="26" pos:column="40"/></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>

<cpp:if pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">if<pos:position pos:line="28" pos:column="4"/></cpp:directive> <expr><name pos:line="28" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="28" pos:column="23"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="29" pos:column="5">rv<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <call><name pos:line="29" pos:column="10">apr_xlate_open<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><operator pos:line="29" pos:column="25">&amp;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="26">to_ascii<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="36">"ISO8859-1"<pos:position pos:line="29" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">APR_DEFAULT_CHARSET<pos:position pos:line="29" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="70">pool<pos:position pos:line="29" pos:column="74"/></name></expr></argument>)<pos:position pos:line="29" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="76"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">rv<pos:position pos:line="30" pos:column="11"/></name></expr>)<pos:position pos:line="30" pos:column="12"/></condition><then pos:line="30" pos:column="12"> <block pos:line="30" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">apr_file_printf<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">errfile<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="34">"apr_xlate_open(to ASCII)-&gt;%d\n"<pos:position pos:line="31" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="68">rv<pos:position pos:line="31" pos:column="70"/></name></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">exit<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="34" pos:column="5">rv<pos:position pos:line="34" pos:column="7"/></name> <operator pos:line="34" pos:column="8">=<pos:position pos:line="34" pos:column="9"/></operator> <call><name pos:line="34" pos:column="10">apr_SHA1InitEBCDIC<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name pos:line="34" pos:column="29">to_ascii<pos:position pos:line="34" pos:column="37"/></name></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">rv<pos:position pos:line="35" pos:column="11"/></name></expr>)<pos:position pos:line="35" pos:column="12"/></condition><then pos:line="35" pos:column="12"> <block pos:line="35" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">apr_file_printf<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">errfile<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="34">"apr_SHA1InitEBCDIC()-&gt;%d\n"<pos:position pos:line="36" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="64">rv<pos:position pos:line="36" pos:column="66"/></name></expr></argument>)<pos:position pos:line="36" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">exit<pos:position pos:line="37" pos:column="13"/></name><argument_list pos:line="37" pos:column="13">(<argument><expr><literal type="number" pos:line="37" pos:column="14">1<pos:position pos:line="37" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="39" pos:column="5">rv<pos:position pos:line="39" pos:column="7"/></name> <operator pos:line="39" pos:column="8">=<pos:position pos:line="39" pos:column="9"/></operator> <call><name pos:line="39" pos:column="10">apr_MD5InitEBCDIC<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">to_ascii<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">rv<pos:position pos:line="40" pos:column="11"/></name></expr>)<pos:position pos:line="40" pos:column="12"/></condition><then pos:line="40" pos:column="12"> <block pos:line="40" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">apr_file_printf<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">errfile<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="34">"apr_MD5InitEBCDIC()-&gt;%d\n"<pos:position pos:line="41" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="63">rv<pos:position pos:line="41" pos:column="65"/></name></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">exit<pos:position pos:line="42" pos:column="13"/></name><argument_list pos:line="42" pos:column="13">(<argument><expr><literal type="number" pos:line="42" pos:column="14">1<pos:position pos:line="42" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="44" pos:column="8">/*APR_CHARSET_EBCDIC*/</comment>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">check_args<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><name pos:line="46" pos:column="16">pool<pos:position pos:line="46" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="22">argc<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="28">argv<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="34">&amp;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="35">alg<pos:position pos:line="46" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="40">&amp;<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="41">mask<pos:position pos:line="46" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="47">&amp;<pos:position pos:line="46" pos:column="52"/></operator><name pos:line="46" pos:column="48">user<pos:position pos:line="46" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="54">&amp;<pos:position pos:line="46" pos:column="59"/></operator><name pos:line="46" pos:column="55">pwfilename<pos:position pos:line="46" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="67">&amp;<pos:position pos:line="46" pos:column="72"/></operator><name pos:line="46" pos:column="68">password<pos:position pos:line="46" pos:column="76"/></name></expr></argument>)<pos:position pos:line="46" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="78"/></expr_stmt>


<cpp:if pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">if<pos:position pos:line="49" pos:column="4"/></cpp:directive> <expr><call><name pos:line="49" pos:column="5">defined<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">WIN32<pos:position pos:line="49" pos:column="18"/></name></expr></argument>)<pos:position pos:line="49" pos:column="19"/></argument_list></call> <operator pos:line="49" pos:column="20">||<pos:position pos:line="49" pos:column="22"/></operator> <call><name pos:line="49" pos:column="23">defined<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">(<argument><expr><name pos:line="49" pos:column="31">NETWARE<pos:position pos:line="49" pos:column="38"/></name></expr></argument>)<pos:position pos:line="49" pos:column="39"/></argument_list></call></expr></cpp:if>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">alg<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">==<pos:position pos:line="50" pos:column="15"/></operator> <name pos:line="50" pos:column="16">ALG_CRYPT<pos:position pos:line="50" pos:column="25"/></name></expr>)<pos:position pos:line="50" pos:column="26"/></condition><then pos:line="50" pos:column="26"> <block pos:line="50" pos:column="27">{
        <expr_stmt><expr><name pos:line="51" pos:column="9">alg<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">=<pos:position pos:line="51" pos:column="14"/></operator> <name pos:line="51" pos:column="15">ALG_APMD5<pos:position pos:line="51" pos:column="24"/></name></expr>;<pos:position pos:line="51" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">apr_file_printf<pos:position pos:line="52" pos:column="24"/></name><argument_list pos:line="52" pos:column="24">(<argument><expr><name pos:line="52" pos:column="25">errfile<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="34">"Automatically using MD5 format.\n"<pos:position pos:line="52" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">if<pos:position pos:line="56" pos:column="4"/></cpp:directive> <expr><operator pos:line="56" pos:column="5">(<pos:position pos:line="56" pos:column="6"/></operator><operator pos:line="56" pos:column="6">!<pos:position pos:line="56" pos:column="7"/></operator><operator pos:line="56" pos:column="7">(<pos:position pos:line="56" pos:column="8"/></operator><call><name pos:line="56" pos:column="8">defined<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><name pos:line="56" pos:column="16">WIN32<pos:position pos:line="56" pos:column="21"/></name></expr></argument>)<pos:position pos:line="56" pos:column="22"/></argument_list></call> <operator pos:line="56" pos:column="23">||<pos:position pos:line="56" pos:column="25"/></operator> <call><name pos:line="56" pos:column="26">defined<pos:position pos:line="56" pos:column="33"/></name><argument_list pos:line="56" pos:column="33">(<argument><expr><name pos:line="56" pos:column="34">TPF<pos:position pos:line="56" pos:column="37"/></name></expr></argument>)<pos:position pos:line="56" pos:column="38"/></argument_list></call> <operator pos:line="56" pos:column="39">||<pos:position pos:line="56" pos:column="41"/></operator> <call><name pos:line="56" pos:column="42">defined<pos:position pos:line="56" pos:column="49"/></name><argument_list pos:line="56" pos:column="49">(<argument><expr><name pos:line="56" pos:column="50">NETWARE<pos:position pos:line="56" pos:column="57"/></name></expr></argument>)<pos:position pos:line="56" pos:column="58"/></argument_list></call><operator pos:line="56" pos:column="58">)<pos:position pos:line="56" pos:column="59"/></operator><operator pos:line="56" pos:column="59">)<pos:position pos:line="56" pos:column="60"/></operator></expr></cpp:if>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">alg<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">==<pos:position pos:line="57" pos:column="15"/></operator> <name pos:line="57" pos:column="16">ALG_PLAIN<pos:position pos:line="57" pos:column="25"/></name></expr>)<pos:position pos:line="57" pos:column="26"/></condition><then pos:line="57" pos:column="26"> <block pos:line="57" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">apr_file_printf<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><name pos:line="58" pos:column="25">errfile<pos:position pos:line="58" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="58" pos:column="33">"Warning: storing passwords as plain text "<pos:position pos:line="58" pos:column="76"/></literal>
                        <literal type="string" pos:line="59" pos:column="25">"might just not work on this platform.\n"<pos:position pos:line="59" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="63" pos:column="5">/*
     * Only do the file checks if we're supposed to frob it.
     */</comment>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><operator pos:line="66" pos:column="9">!<pos:position pos:line="66" pos:column="10"/></operator><operator pos:line="66" pos:column="10">(<pos:position pos:line="66" pos:column="11"/></operator><name pos:line="66" pos:column="11">mask<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">&amp;<pos:position pos:line="66" pos:column="21"/></operator> <name pos:line="66" pos:column="18">APHTP_NOFILE<pos:position pos:line="66" pos:column="30"/></name><operator pos:line="66" pos:column="30">)<pos:position pos:line="66" pos:column="31"/></operator></expr>)<pos:position pos:line="66" pos:column="32"/></condition><then pos:line="66" pos:column="32"> <block pos:line="66" pos:column="33">{
        <expr_stmt><expr><name pos:line="67" pos:column="9">existing_file<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <call><name pos:line="67" pos:column="25">exists<pos:position pos:line="67" pos:column="31"/></name><argument_list pos:line="67" pos:column="31">(<argument><expr><name pos:line="67" pos:column="32">pwfilename<pos:position pos:line="67" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="44">pool<pos:position pos:line="67" pos:column="48"/></name></expr></argument>)<pos:position pos:line="67" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="50"/></expr_stmt>
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">existing_file<pos:position pos:line="68" pos:column="26"/></name></expr>)<pos:position pos:line="68" pos:column="27"/></condition><then pos:line="68" pos:column="27"> <block pos:line="68" pos:column="28">{
            <comment type="block" pos:line="69" pos:column="13">/*
             * Check that this existing file is readable and writable.
             */</comment>
            <if pos:line="72" pos:column="13">if <condition pos:line="72" pos:column="16">(<expr><operator pos:line="72" pos:column="17">!<pos:position pos:line="72" pos:column="18"/></operator><call><name pos:line="72" pos:column="18">accessible<pos:position pos:line="72" pos:column="28"/></name><argument_list pos:line="72" pos:column="28">(<argument><expr><name pos:line="72" pos:column="29">pool<pos:position pos:line="72" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="35">pwfilename<pos:position pos:line="72" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="47">APR_READ<pos:position pos:line="72" pos:column="55"/></name> <operator pos:line="72" pos:column="56">|<pos:position pos:line="72" pos:column="57"/></operator> <name pos:line="72" pos:column="58">APR_APPEND<pos:position pos:line="72" pos:column="68"/></name></expr></argument>)<pos:position pos:line="72" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="70"/></condition><then pos:line="72" pos:column="70"> <block pos:line="72" pos:column="71">{
                <expr_stmt><expr><call><name pos:line="73" pos:column="17">apr_file_printf<pos:position pos:line="73" pos:column="32"/></name><argument_list pos:line="73" pos:column="32">(<argument><expr><name pos:line="73" pos:column="33">errfile<pos:position pos:line="73" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="42">"%s: cannot open file %s for "<pos:position pos:line="73" pos:column="72"/></literal>
                                <literal type="string" pos:line="74" pos:column="33">"read/write access\n"<pos:position pos:line="74" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="56">argv<pos:position pos:line="74" pos:column="60"/></name><index pos:line="74" pos:column="60">[<expr><literal type="number" pos:line="74" pos:column="61">0<pos:position pos:line="74" pos:column="62"/></literal></expr>]<pos:position pos:line="74" pos:column="63"/></index></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="65">pwfilename<pos:position pos:line="74" pos:column="75"/></name></expr></argument>)<pos:position pos:line="74" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">exit<pos:position pos:line="75" pos:column="21"/></name><argument_list pos:line="75" pos:column="21">(<argument><expr><name pos:line="75" pos:column="22">ERR_FILEPERM<pos:position pos:line="75" pos:column="34"/></name></expr></argument>)<pos:position pos:line="75" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></then></if>
        }<pos:position pos:line="77" pos:column="10"/></block></then>
        <else pos:line="78" pos:column="9">else <block pos:line="78" pos:column="14">{
            <comment type="block" pos:line="79" pos:column="13">/*
             * Error out if -c was omitted for this non-existant file.
             */</comment>
            <if pos:line="82" pos:column="13">if <condition pos:line="82" pos:column="16">(<expr><operator pos:line="82" pos:column="17">!<pos:position pos:line="82" pos:column="18"/></operator><operator pos:line="82" pos:column="18">(<pos:position pos:line="82" pos:column="19"/></operator><name pos:line="82" pos:column="19">mask<pos:position pos:line="82" pos:column="23"/></name> <operator pos:line="82" pos:column="24">&amp;<pos:position pos:line="82" pos:column="29"/></operator> <name pos:line="82" pos:column="26">APHTP_NEWFILE<pos:position pos:line="82" pos:column="39"/></name><operator pos:line="82" pos:column="39">)<pos:position pos:line="82" pos:column="40"/></operator></expr>)<pos:position pos:line="82" pos:column="41"/></condition><then pos:line="82" pos:column="41"> <block pos:line="82" pos:column="42">{
                <expr_stmt><expr><call><name pos:line="83" pos:column="17">apr_file_printf<pos:position pos:line="83" pos:column="32"/></name><argument_list pos:line="83" pos:column="32">(<argument><expr><name pos:line="83" pos:column="33">errfile<pos:position pos:line="83" pos:column="40"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="84" pos:column="25">"%s: cannot modify file %s; use '-c' to create it\n"<pos:position pos:line="84" pos:column="77"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="85" pos:column="25">argv<pos:position pos:line="85" pos:column="29"/></name><index pos:line="85" pos:column="29">[<expr><literal type="number" pos:line="85" pos:column="30">0<pos:position pos:line="85" pos:column="31"/></literal></expr>]<pos:position pos:line="85" pos:column="32"/></index></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="34">pwfilename<pos:position pos:line="85" pos:column="44"/></name></expr></argument>)<pos:position pos:line="85" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="86" pos:column="17">exit<pos:position pos:line="86" pos:column="21"/></name><argument_list pos:line="86" pos:column="21">(<argument><expr><name pos:line="86" pos:column="22">ERR_FILEPERM<pos:position pos:line="86" pos:column="34"/></name></expr></argument>)<pos:position pos:line="86" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="87" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="88" pos:column="13">/*
             * As it doesn't exist yet, verify that we can create it.
             */</comment>
            <if pos:line="91" pos:column="13">if <condition pos:line="91" pos:column="16">(<expr><operator pos:line="91" pos:column="17">!<pos:position pos:line="91" pos:column="18"/></operator><call><name pos:line="91" pos:column="18">accessible<pos:position pos:line="91" pos:column="28"/></name><argument_list pos:line="91" pos:column="28">(<argument><expr><name pos:line="91" pos:column="29">pool<pos:position pos:line="91" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="35">pwfilename<pos:position pos:line="91" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="47">APR_CREATE<pos:position pos:line="91" pos:column="57"/></name> <operator pos:line="91" pos:column="58">|<pos:position pos:line="91" pos:column="59"/></operator> <name pos:line="91" pos:column="60">APR_WRITE<pos:position pos:line="91" pos:column="69"/></name></expr></argument>)<pos:position pos:line="91" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="71"/></condition><then pos:line="91" pos:column="71"> <block pos:line="91" pos:column="72">{
                <expr_stmt><expr><call><name pos:line="92" pos:column="17">apr_file_printf<pos:position pos:line="92" pos:column="32"/></name><argument_list pos:line="92" pos:column="32">(<argument><expr><name pos:line="92" pos:column="33">errfile<pos:position pos:line="92" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="42">"%s: cannot create file %s\n"<pos:position pos:line="92" pos:column="71"/></literal></expr></argument>,
                                <argument><expr><name><name pos:line="93" pos:column="33">argv<pos:position pos:line="93" pos:column="37"/></name><index pos:line="93" pos:column="37">[<expr><literal type="number" pos:line="93" pos:column="38">0<pos:position pos:line="93" pos:column="39"/></literal></expr>]<pos:position pos:line="93" pos:column="40"/></index></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="42">pwfilename<pos:position pos:line="93" pos:column="52"/></name></expr></argument>)<pos:position pos:line="93" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="94" pos:column="17">exit<pos:position pos:line="94" pos:column="21"/></name><argument_list pos:line="94" pos:column="21">(<argument><expr><name pos:line="94" pos:column="22">ERR_FILEPERM<pos:position pos:line="94" pos:column="34"/></name></expr></argument>)<pos:position pos:line="94" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="95" pos:column="14"/></block></then></if>
        }<pos:position pos:line="96" pos:column="10"/></block></else></if>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="99" pos:column="5">/*
     * All the file access checks (if any) have been made.  Time to go to work;
     * try to create the record for the username in question.  If that
     * fails, there's no need to waste any time on file manipulations.
     * Any error message text is returned in the record buffer, since
     * the mkrecord() routine doesn't have access to argv[].
     */</comment>
    <if pos:line="106" pos:column="5">if <condition pos:line="106" pos:column="8">(<expr><operator pos:line="106" pos:column="9">!<pos:position pos:line="106" pos:column="10"/></operator><operator pos:line="106" pos:column="10">(<pos:position pos:line="106" pos:column="11"/></operator><name pos:line="106" pos:column="11">mask<pos:position pos:line="106" pos:column="15"/></name> <operator pos:line="106" pos:column="16">&amp;<pos:position pos:line="106" pos:column="21"/></operator> <name pos:line="106" pos:column="18">APHTP_DELUSER<pos:position pos:line="106" pos:column="31"/></name><operator pos:line="106" pos:column="31">)<pos:position pos:line="106" pos:column="32"/></operator></expr>)<pos:position pos:line="106" pos:column="33"/></condition><then pos:line="106" pos:column="33"> <block pos:line="106" pos:column="34">{
        <expr_stmt><expr><name pos:line="107" pos:column="9">i<pos:position pos:line="107" pos:column="10"/></name> <operator pos:line="107" pos:column="11">=<pos:position pos:line="107" pos:column="12"/></operator> <call><name pos:line="107" pos:column="13">mkrecord<pos:position pos:line="107" pos:column="21"/></name><argument_list pos:line="107" pos:column="21">(<argument><expr><name pos:line="107" pos:column="22">user<pos:position pos:line="107" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="28">record<pos:position pos:line="107" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="107" pos:column="36">sizeof<argument_list pos:line="107" pos:column="42">(<argument><expr><name pos:line="107" pos:column="43">record<pos:position pos:line="107" pos:column="49"/></name></expr></argument>)<pos:position pos:line="107" pos:column="50"/></argument_list></sizeof> <operator pos:line="107" pos:column="51">-<pos:position pos:line="107" pos:column="52"/></operator> <literal type="number" pos:line="107" pos:column="53">1<pos:position pos:line="107" pos:column="54"/></literal></expr></argument>,
                     <argument><expr><name pos:line="108" pos:column="22">password<pos:position pos:line="108" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="32">alg<pos:position pos:line="108" pos:column="35"/></name></expr></argument>)<pos:position pos:line="108" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="37"/></expr_stmt>
        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name pos:line="109" pos:column="13">i<pos:position pos:line="109" pos:column="14"/></name> <operator pos:line="109" pos:column="15">!=<pos:position pos:line="109" pos:column="17"/></operator> <literal type="number" pos:line="109" pos:column="18">0<pos:position pos:line="109" pos:column="19"/></literal></expr>)<pos:position pos:line="109" pos:column="20"/></condition><then pos:line="109" pos:column="20"> <block pos:line="109" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="110" pos:column="13">apr_file_printf<pos:position pos:line="110" pos:column="28"/></name><argument_list pos:line="110" pos:column="28">(<argument><expr><name pos:line="110" pos:column="29">errfile<pos:position pos:line="110" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="38">"%s: %s\n"<pos:position pos:line="110" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="50">argv<pos:position pos:line="110" pos:column="54"/></name><index pos:line="110" pos:column="54">[<expr><literal type="number" pos:line="110" pos:column="55">0<pos:position pos:line="110" pos:column="56"/></literal></expr>]<pos:position pos:line="110" pos:column="57"/></index></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="59">record<pos:position pos:line="110" pos:column="65"/></name></expr></argument>)<pos:position pos:line="110" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="111" pos:column="13">exit<pos:position pos:line="111" pos:column="17"/></name><argument_list pos:line="111" pos:column="17">(<argument><expr><name pos:line="111" pos:column="18">i<pos:position pos:line="111" pos:column="19"/></name></expr></argument>)<pos:position pos:line="111" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="112" pos:column="10"/></block></then></if>
        <if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name pos:line="113" pos:column="13">mask<pos:position pos:line="113" pos:column="17"/></name> <operator pos:line="113" pos:column="18">&amp;<pos:position pos:line="113" pos:column="23"/></operator> <name pos:line="113" pos:column="20">APHTP_NOFILE<pos:position pos:line="113" pos:column="32"/></name></expr>)<pos:position pos:line="113" pos:column="33"/></condition><then pos:line="113" pos:column="33"> <block pos:line="113" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="114" pos:column="13">printf<pos:position pos:line="114" pos:column="19"/></name><argument_list pos:line="114" pos:column="19">(<argument><expr><literal type="string" pos:line="114" pos:column="20">"%s\n"<pos:position pos:line="114" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="28">record<pos:position pos:line="114" pos:column="34"/></name></expr></argument>)<pos:position pos:line="114" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="115" pos:column="13">exit<pos:position pos:line="115" pos:column="17"/></name><argument_list pos:line="115" pos:column="17">(<argument><expr><literal type="number" pos:line="115" pos:column="18">0<pos:position pos:line="115" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="116" pos:column="10"/></block></then></if>
    }<pos:position pos:line="117" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="119" pos:column="5">/*
     * We can access the files the right way, and we have a record
     * to add or update.  Let's do it..
     */</comment>
    <if pos:line="123" pos:column="5">if <condition pos:line="123" pos:column="8">(<expr><call><name pos:line="123" pos:column="9">apr_temp_dir_get<pos:position pos:line="123" pos:column="25"/></name><argument_list pos:line="123" pos:column="25">(<argument><expr><operator pos:line="123" pos:column="26">(<pos:position pos:line="123" pos:column="27"/></operator><specifier pos:line="123" pos:column="27">const<pos:position pos:line="123" pos:column="32"/></specifier> <name pos:line="123" pos:column="33">char<pos:position pos:line="123" pos:column="37"/></name><operator pos:line="123" pos:column="37">*<pos:position pos:line="123" pos:column="38"/></operator><operator pos:line="123" pos:column="38">*<pos:position pos:line="123" pos:column="39"/></operator><operator pos:line="123" pos:column="39">)<pos:position pos:line="123" pos:column="40"/></operator><operator pos:line="123" pos:column="40">&amp;<pos:position pos:line="123" pos:column="45"/></operator><name pos:line="123" pos:column="41">dirname<pos:position pos:line="123" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="50">pool<pos:position pos:line="123" pos:column="54"/></name></expr></argument>)<pos:position pos:line="123" pos:column="55"/></argument_list></call> <operator pos:line="123" pos:column="56">!=<pos:position pos:line="123" pos:column="58"/></operator> <name pos:line="123" pos:column="59">APR_SUCCESS<pos:position pos:line="123" pos:column="70"/></name></expr>)<pos:position pos:line="123" pos:column="71"/></condition><then pos:line="123" pos:column="71"> <block pos:line="123" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="124" pos:column="9">apr_file_printf<pos:position pos:line="124" pos:column="24"/></name><argument_list pos:line="124" pos:column="24">(<argument><expr><name pos:line="124" pos:column="25">errfile<pos:position pos:line="124" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="34">"%s: could not determine temp dir\n"<pos:position pos:line="124" pos:column="70"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="125" pos:column="25">argv<pos:position pos:line="125" pos:column="29"/></name><index pos:line="125" pos:column="29">[<expr><literal type="number" pos:line="125" pos:column="30">0<pos:position pos:line="125" pos:column="31"/></literal></expr>]<pos:position pos:line="125" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="125" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="126" pos:column="9">exit<pos:position pos:line="126" pos:column="13"/></name><argument_list pos:line="126" pos:column="13">(<argument><expr><name pos:line="126" pos:column="14">ERR_FILEPERM<pos:position pos:line="126" pos:column="26"/></name></expr></argument>)<pos:position pos:line="126" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="127" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="128" pos:column="5">dirname<pos:position pos:line="128" pos:column="12"/></name> <operator pos:line="128" pos:column="13">=<pos:position pos:line="128" pos:column="14"/></operator> <call><name pos:line="128" pos:column="15">apr_psprintf<pos:position pos:line="128" pos:column="27"/></name><argument_list pos:line="128" pos:column="27">(<argument><expr><name pos:line="128" pos:column="28">pool<pos:position pos:line="128" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="34">"%s/%s"<pos:position pos:line="128" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="128" pos:column="43">dirname<pos:position pos:line="128" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="52">tn<pos:position pos:line="128" pos:column="54"/></name></expr></argument>)<pos:position pos:line="128" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="56"/></expr_stmt>

    <if pos:line="130" pos:column="5">if <condition pos:line="130" pos:column="8">(<expr><call><name pos:line="130" pos:column="9">apr_file_mktemp<pos:position pos:line="130" pos:column="24"/></name><argument_list pos:line="130" pos:column="24">(<argument><expr><operator pos:line="130" pos:column="25">&amp;<pos:position pos:line="130" pos:column="30"/></operator><name pos:line="130" pos:column="26">ftemp<pos:position pos:line="130" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="33">dirname<pos:position pos:line="130" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="42">0<pos:position pos:line="130" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="45">pool<pos:position pos:line="130" pos:column="49"/></name></expr></argument>)<pos:position pos:line="130" pos:column="50"/></argument_list></call> <operator pos:line="130" pos:column="51">!=<pos:position pos:line="130" pos:column="53"/></operator> <name pos:line="130" pos:column="54">APR_SUCCESS<pos:position pos:line="130" pos:column="65"/></name></expr>)<pos:position pos:line="130" pos:column="66"/></condition><then pos:line="130" pos:column="66"> <block pos:line="130" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="131" pos:column="9">apr_file_printf<pos:position pos:line="131" pos:column="24"/></name><argument_list pos:line="131" pos:column="24">(<argument><expr><name pos:line="131" pos:column="25">errfile<pos:position pos:line="131" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="34">"%s: unable to create temporary file %s\n"<pos:position pos:line="131" pos:column="76"/></literal></expr></argument>, 
                        <argument><expr><name><name pos:line="132" pos:column="25">argv<pos:position pos:line="132" pos:column="29"/></name><index pos:line="132" pos:column="29">[<expr><literal type="number" pos:line="132" pos:column="30">0<pos:position pos:line="132" pos:column="31"/></literal></expr>]<pos:position pos:line="132" pos:column="32"/></index></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="34">dirname<pos:position pos:line="132" pos:column="41"/></name></expr></argument>)<pos:position pos:line="132" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="133" pos:column="9">exit<pos:position pos:line="133" pos:column="13"/></name><argument_list pos:line="133" pos:column="13">(<argument><expr><name pos:line="133" pos:column="14">ERR_FILEPERM<pos:position pos:line="133" pos:column="26"/></name></expr></argument>)<pos:position pos:line="133" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="136" pos:column="5">/*
     * If we're not creating a new file, copy records from the existing
     * one to the temporary file until we find the specified user.
     */</comment>
    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><name pos:line="140" pos:column="9">existing_file<pos:position pos:line="140" pos:column="22"/></name> <operator pos:line="140" pos:column="23">&amp;&amp;<pos:position pos:line="140" pos:column="33"/></operator> <operator pos:line="140" pos:column="26">!<pos:position pos:line="140" pos:column="27"/></operator><operator pos:line="140" pos:column="27">(<pos:position pos:line="140" pos:column="28"/></operator><name pos:line="140" pos:column="28">mask<pos:position pos:line="140" pos:column="32"/></name> <operator pos:line="140" pos:column="33">&amp;<pos:position pos:line="140" pos:column="38"/></operator> <name pos:line="140" pos:column="35">APHTP_NEWFILE<pos:position pos:line="140" pos:column="48"/></name><operator pos:line="140" pos:column="48">)<pos:position pos:line="140" pos:column="49"/></operator></expr>)<pos:position pos:line="140" pos:column="50"/></condition><then pos:line="140" pos:column="50"> <block pos:line="140" pos:column="51">{
        <if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><call><name pos:line="141" pos:column="13">apr_file_open<pos:position pos:line="141" pos:column="26"/></name><argument_list pos:line="141" pos:column="26">(<argument><expr><operator pos:line="141" pos:column="27">&amp;<pos:position pos:line="141" pos:column="32"/></operator><name pos:line="141" pos:column="28">fpw<pos:position pos:line="141" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="33">pwfilename<pos:position pos:line="141" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="45">APR_READ<pos:position pos:line="141" pos:column="53"/></name> <operator pos:line="141" pos:column="54">|<pos:position pos:line="141" pos:column="55"/></operator> <name pos:line="141" pos:column="56">APR_BUFFERED<pos:position pos:line="141" pos:column="68"/></name></expr></argument>,
                          <argument><expr><name pos:line="142" pos:column="27">APR_OS_DEFAULT<pos:position pos:line="142" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="43">pool<pos:position pos:line="142" pos:column="47"/></name></expr></argument>)<pos:position pos:line="142" pos:column="48"/></argument_list></call> <operator pos:line="142" pos:column="49">!=<pos:position pos:line="142" pos:column="51"/></operator> <name pos:line="142" pos:column="52">APR_SUCCESS<pos:position pos:line="142" pos:column="63"/></name></expr>)<pos:position pos:line="142" pos:column="64"/></condition><then pos:line="142" pos:column="64"> <block pos:line="142" pos:column="65">{
            <expr_stmt><expr><call><name pos:line="143" pos:column="13">apr_file_printf<pos:position pos:line="143" pos:column="28"/></name><argument_list pos:line="143" pos:column="28">(<argument><expr><name pos:line="143" pos:column="29">errfile<pos:position pos:line="143" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="38">"%s: unable to read file %s\n"<pos:position pos:line="143" pos:column="68"/></literal></expr></argument>, 
                            <argument><expr><name><name pos:line="144" pos:column="29">argv<pos:position pos:line="144" pos:column="33"/></name><index pos:line="144" pos:column="33">[<expr><literal type="number" pos:line="144" pos:column="34">0<pos:position pos:line="144" pos:column="35"/></literal></expr>]<pos:position pos:line="144" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="38">pwfilename<pos:position pos:line="144" pos:column="48"/></name></expr></argument>)<pos:position pos:line="144" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="145" pos:column="13">exit<pos:position pos:line="145" pos:column="17"/></name><argument_list pos:line="145" pos:column="17">(<argument><expr><name pos:line="145" pos:column="18">ERR_FILEPERM<pos:position pos:line="145" pos:column="30"/></name></expr></argument>)<pos:position pos:line="145" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="146" pos:column="10"/></block></then></if>
        <while pos:line="147" pos:column="9">while <condition pos:line="147" pos:column="15">(<expr><call><name pos:line="147" pos:column="16">apr_file_gets<pos:position pos:line="147" pos:column="29"/></name><argument_list pos:line="147" pos:column="29">(<argument><expr><name pos:line="147" pos:column="30">line<pos:position pos:line="147" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="147" pos:column="36">sizeof<argument_list pos:line="147" pos:column="42">(<argument><expr><name pos:line="147" pos:column="43">line<pos:position pos:line="147" pos:column="47"/></name></expr></argument>)<pos:position pos:line="147" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="147" pos:column="50">fpw<pos:position pos:line="147" pos:column="53"/></name></expr></argument>)<pos:position pos:line="147" pos:column="54"/></argument_list></call> <operator pos:line="147" pos:column="55">==<pos:position pos:line="147" pos:column="57"/></operator> <name pos:line="147" pos:column="58">APR_SUCCESS<pos:position pos:line="147" pos:column="69"/></name></expr>)<pos:position pos:line="147" pos:column="70"/></condition> <block pos:line="147" pos:column="71">{
            <decl_stmt><decl><type><name pos:line="148" pos:column="13">char<pos:position pos:line="148" pos:column="17"/></name> <modifier pos:line="148" pos:column="18">*<pos:position pos:line="148" pos:column="19"/></modifier></type><name pos:line="148" pos:column="19">colon<pos:position pos:line="148" pos:column="24"/></name></decl>;<pos:position pos:line="148" pos:column="25"/></decl_stmt>

            <expr_stmt><expr><call><name pos:line="150" pos:column="13">strcpy<pos:position pos:line="150" pos:column="19"/></name><argument_list pos:line="150" pos:column="19">(<argument><expr><name pos:line="150" pos:column="20">cp<pos:position pos:line="150" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="24">line<pos:position pos:line="150" pos:column="28"/></name></expr></argument>)<pos:position pos:line="150" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="151" pos:column="13">scratch<pos:position pos:line="151" pos:column="20"/></name> <operator pos:line="151" pos:column="21">=<pos:position pos:line="151" pos:column="22"/></operator> <name pos:line="151" pos:column="23">cp<pos:position pos:line="151" pos:column="25"/></name></expr>;<pos:position pos:line="151" pos:column="26"/></expr_stmt>
            <while pos:line="152" pos:column="13">while <condition pos:line="152" pos:column="19">(<expr><call><name pos:line="152" pos:column="20">apr_isspace<pos:position pos:line="152" pos:column="31"/></name><argument_list pos:line="152" pos:column="31">(<argument><expr><operator pos:line="152" pos:column="32">*<pos:position pos:line="152" pos:column="33"/></operator><name pos:line="152" pos:column="33">scratch<pos:position pos:line="152" pos:column="40"/></name></expr></argument>)<pos:position pos:line="152" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="152" pos:column="42"/></condition> <block pos:line="152" pos:column="43">{
                <expr_stmt><expr><operator pos:line="153" pos:column="17">++<pos:position pos:line="153" pos:column="19"/></operator><name pos:line="153" pos:column="19">scratch<pos:position pos:line="153" pos:column="26"/></name></expr>;<pos:position pos:line="153" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="154" pos:column="14"/></block></while>

            <if pos:line="156" pos:column="13">if <condition pos:line="156" pos:column="16">(<expr><operator pos:line="156" pos:column="17">!<pos:position pos:line="156" pos:column="18"/></operator><operator pos:line="156" pos:column="18">*<pos:position pos:line="156" pos:column="19"/></operator><name pos:line="156" pos:column="19">scratch<pos:position pos:line="156" pos:column="26"/></name> <operator pos:line="156" pos:column="27">||<pos:position pos:line="156" pos:column="29"/></operator> <operator pos:line="156" pos:column="30">(<pos:position pos:line="156" pos:column="31"/></operator><operator pos:line="156" pos:column="31">*<pos:position pos:line="156" pos:column="32"/></operator><name pos:line="156" pos:column="32">scratch<pos:position pos:line="156" pos:column="39"/></name> <operator pos:line="156" pos:column="40">==<pos:position pos:line="156" pos:column="42"/></operator> <literal type="char" pos:line="156" pos:column="43">'#'<pos:position pos:line="156" pos:column="46"/></literal><operator pos:line="156" pos:column="46">)<pos:position pos:line="156" pos:column="47"/></operator></expr>)<pos:position pos:line="156" pos:column="48"/></condition><then pos:line="156" pos:column="48"> <block pos:line="156" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="157" pos:column="17">putline<pos:position pos:line="157" pos:column="24"/></name><argument_list pos:line="157" pos:column="24">(<argument><expr><name pos:line="157" pos:column="25">ftemp<pos:position pos:line="157" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="32">line<pos:position pos:line="157" pos:column="36"/></name></expr></argument>)<pos:position pos:line="157" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="38"/></expr_stmt>
                <continue pos:line="158" pos:column="17">continue;<pos:position pos:line="158" pos:column="26"/></continue>
            }<pos:position pos:line="159" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="160" pos:column="13">/*
             * See if this is our user.
             */</comment>
            <expr_stmt><expr><name pos:line="163" pos:column="13">colon<pos:position pos:line="163" pos:column="18"/></name> <operator pos:line="163" pos:column="19">=<pos:position pos:line="163" pos:column="20"/></operator> <call><name pos:line="163" pos:column="21">strchr<pos:position pos:line="163" pos:column="27"/></name><argument_list pos:line="163" pos:column="27">(<argument><expr><name pos:line="163" pos:column="28">scratch<pos:position pos:line="163" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="163" pos:column="37">':'<pos:position pos:line="163" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="42"/></expr_stmt>
            <if pos:line="164" pos:column="13">if <condition pos:line="164" pos:column="16">(<expr><name pos:line="164" pos:column="17">colon<pos:position pos:line="164" pos:column="22"/></name> <operator pos:line="164" pos:column="23">!=<pos:position pos:line="164" pos:column="25"/></operator> <name pos:line="164" pos:column="26">NULL<pos:position pos:line="164" pos:column="30"/></name></expr>)<pos:position pos:line="164" pos:column="31"/></condition><then pos:line="164" pos:column="31"> <block pos:line="164" pos:column="32">{
                <expr_stmt><expr><operator pos:line="165" pos:column="17">*<pos:position pos:line="165" pos:column="18"/></operator><name pos:line="165" pos:column="18">colon<pos:position pos:line="165" pos:column="23"/></name> <operator pos:line="165" pos:column="24">=<pos:position pos:line="165" pos:column="25"/></operator> <literal type="char" pos:line="165" pos:column="26">'\0'<pos:position pos:line="165" pos:column="30"/></literal></expr>;<pos:position pos:line="165" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="166" pos:column="14"/></block></then>
            <else pos:line="167" pos:column="13">else <block pos:line="167" pos:column="18">{
                <comment type="block" pos:line="168" pos:column="17">/*
                 * If we've not got a colon on the line, this could well 
                 * not be a valid htpasswd file.
                 * We should bail at this point.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="173" pos:column="17">apr_file_printf<pos:position pos:line="173" pos:column="32"/></name><argument_list pos:line="173" pos:column="32">(<argument><expr><name pos:line="173" pos:column="33">errfile<pos:position pos:line="173" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="173" pos:column="42">"\n%s: The file %s does not appear "<pos:position pos:line="173" pos:column="78"/></literal>
                                         <literal type="string" pos:line="174" pos:column="42">"to be a valid htpasswd file.\n"<pos:position pos:line="174" pos:column="74"/></literal></expr></argument>,
                                <argument><expr><name><name pos:line="175" pos:column="33">argv<pos:position pos:line="175" pos:column="37"/></name><index pos:line="175" pos:column="37">[<expr><literal type="number" pos:line="175" pos:column="38">0<pos:position pos:line="175" pos:column="39"/></literal></expr>]<pos:position pos:line="175" pos:column="40"/></index></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="42">pwfilename<pos:position pos:line="175" pos:column="52"/></name></expr></argument>)<pos:position pos:line="175" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="176" pos:column="17">apr_file_close<pos:position pos:line="176" pos:column="31"/></name><argument_list pos:line="176" pos:column="31">(<argument><expr><name pos:line="176" pos:column="32">fpw<pos:position pos:line="176" pos:column="35"/></name></expr></argument>)<pos:position pos:line="176" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="177" pos:column="17">exit<pos:position pos:line="177" pos:column="21"/></name><argument_list pos:line="177" pos:column="21">(<argument><expr><name pos:line="177" pos:column="22">ERR_INVALID<pos:position pos:line="177" pos:column="33"/></name></expr></argument>)<pos:position pos:line="177" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="178" pos:column="14"/></block></else></if>
            <if pos:line="179" pos:column="13">if <condition pos:line="179" pos:column="16">(<expr><call><name pos:line="179" pos:column="17">strcmp<pos:position pos:line="179" pos:column="23"/></name><argument_list pos:line="179" pos:column="23">(<argument><expr><name pos:line="179" pos:column="24">user<pos:position pos:line="179" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="30">scratch<pos:position pos:line="179" pos:column="37"/></name></expr></argument>)<pos:position pos:line="179" pos:column="38"/></argument_list></call> <operator pos:line="179" pos:column="39">!=<pos:position pos:line="179" pos:column="41"/></operator> <literal type="number" pos:line="179" pos:column="42">0<pos:position pos:line="179" pos:column="43"/></literal></expr>)<pos:position pos:line="179" pos:column="44"/></condition><then pos:line="179" pos:column="44"> <block pos:line="179" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="180" pos:column="17">putline<pos:position pos:line="180" pos:column="24"/></name><argument_list pos:line="180" pos:column="24">(<argument><expr><name pos:line="180" pos:column="25">ftemp<pos:position pos:line="180" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="32">line<pos:position pos:line="180" pos:column="36"/></name></expr></argument>)<pos:position pos:line="180" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="38"/></expr_stmt>
                <continue pos:line="181" pos:column="17">continue;<pos:position pos:line="181" pos:column="26"/></continue>
            }<pos:position pos:line="182" pos:column="14"/></block></then>
            <else pos:line="183" pos:column="13">else <block pos:line="183" pos:column="18">{
                <if pos:line="184" pos:column="17">if <condition pos:line="184" pos:column="20">(<expr><operator pos:line="184" pos:column="21">!<pos:position pos:line="184" pos:column="22"/></operator><operator pos:line="184" pos:column="22">(<pos:position pos:line="184" pos:column="23"/></operator><name pos:line="184" pos:column="23">mask<pos:position pos:line="184" pos:column="27"/></name> <operator pos:line="184" pos:column="28">&amp;<pos:position pos:line="184" pos:column="33"/></operator> <name pos:line="184" pos:column="30">APHTP_DELUSER<pos:position pos:line="184" pos:column="43"/></name><operator pos:line="184" pos:column="43">)<pos:position pos:line="184" pos:column="44"/></operator></expr>)<pos:position pos:line="184" pos:column="45"/></condition><then pos:line="184" pos:column="45"> <block pos:line="184" pos:column="46">{
                    <comment type="block" pos:line="185" pos:column="21">/* We found the user we were looking for.
                     * Add him to the file.
                    */</comment>
                    <expr_stmt><expr><call><name pos:line="188" pos:column="21">apr_file_printf<pos:position pos:line="188" pos:column="36"/></name><argument_list pos:line="188" pos:column="36">(<argument><expr><name pos:line="188" pos:column="37">errfile<pos:position pos:line="188" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="188" pos:column="46">"Updating "<pos:position pos:line="188" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="59"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="189" pos:column="21">putline<pos:position pos:line="189" pos:column="28"/></name><argument_list pos:line="189" pos:column="28">(<argument><expr><name pos:line="189" pos:column="29">ftemp<pos:position pos:line="189" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="36">record<pos:position pos:line="189" pos:column="42"/></name></expr></argument>)<pos:position pos:line="189" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="44"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="190" pos:column="21">found<pos:position pos:line="190" pos:column="26"/></name><operator pos:line="190" pos:column="26">++<pos:position pos:line="190" pos:column="28"/></operator></expr>;<pos:position pos:line="190" pos:column="29"/></expr_stmt>
                }<pos:position pos:line="191" pos:column="18"/></block></then>
                <else pos:line="192" pos:column="17">else <block pos:line="192" pos:column="22">{
                    <comment type="block" pos:line="193" pos:column="21">/* We found the user we were looking for.
                     * Delete them from the file.
                     */</comment>
                    <expr_stmt><expr><call><name pos:line="196" pos:column="21">apr_file_printf<pos:position pos:line="196" pos:column="36"/></name><argument_list pos:line="196" pos:column="36">(<argument><expr><name pos:line="196" pos:column="37">errfile<pos:position pos:line="196" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="46">"Deleting "<pos:position pos:line="196" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="59"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="197" pos:column="21">found<pos:position pos:line="197" pos:column="26"/></name><operator pos:line="197" pos:column="26">++<pos:position pos:line="197" pos:column="28"/></operator></expr>;<pos:position pos:line="197" pos:column="29"/></expr_stmt>
                }<pos:position pos:line="198" pos:column="18"/></block></else></if>
            }<pos:position pos:line="199" pos:column="14"/></block></else></if>
        }<pos:position pos:line="200" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="201" pos:column="9">apr_file_close<pos:position pos:line="201" pos:column="23"/></name><argument_list pos:line="201" pos:column="23">(<argument><expr><name pos:line="201" pos:column="24">fpw<pos:position pos:line="201" pos:column="27"/></name></expr></argument>)<pos:position pos:line="201" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="202" pos:column="6"/></block></then></if>
    <if pos:line="203" pos:column="5">if <condition pos:line="203" pos:column="8">(<expr><operator pos:line="203" pos:column="9">!<pos:position pos:line="203" pos:column="10"/></operator><name pos:line="203" pos:column="10">found<pos:position pos:line="203" pos:column="15"/></name> <operator pos:line="203" pos:column="16">&amp;&amp;<pos:position pos:line="203" pos:column="26"/></operator> <operator pos:line="203" pos:column="19">!<pos:position pos:line="203" pos:column="20"/></operator><operator pos:line="203" pos:column="20">(<pos:position pos:line="203" pos:column="21"/></operator><name pos:line="203" pos:column="21">mask<pos:position pos:line="203" pos:column="25"/></name> <operator pos:line="203" pos:column="26">&amp;<pos:position pos:line="203" pos:column="31"/></operator> <name pos:line="203" pos:column="28">APHTP_DELUSER<pos:position pos:line="203" pos:column="41"/></name><operator pos:line="203" pos:column="41">)<pos:position pos:line="203" pos:column="42"/></operator></expr>)<pos:position pos:line="203" pos:column="43"/></condition><then pos:line="203" pos:column="43"> <block pos:line="203" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="204" pos:column="9">apr_file_printf<pos:position pos:line="204" pos:column="24"/></name><argument_list pos:line="204" pos:column="24">(<argument><expr><name pos:line="204" pos:column="25">errfile<pos:position pos:line="204" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="204" pos:column="34">"Adding "<pos:position pos:line="204" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="204" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="205" pos:column="9">putline<pos:position pos:line="205" pos:column="16"/></name><argument_list pos:line="205" pos:column="16">(<argument><expr><name pos:line="205" pos:column="17">ftemp<pos:position pos:line="205" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="24">record<pos:position pos:line="205" pos:column="30"/></name></expr></argument>)<pos:position pos:line="205" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="206" pos:column="6"/></block></then>
    <elseif pos:line="207" pos:column="5">else <if pos:line="207" pos:column="10">if <condition pos:line="207" pos:column="13">(<expr><operator pos:line="207" pos:column="14">!<pos:position pos:line="207" pos:column="15"/></operator><name pos:line="207" pos:column="15">found<pos:position pos:line="207" pos:column="20"/></name> <operator pos:line="207" pos:column="21">&amp;&amp;<pos:position pos:line="207" pos:column="31"/></operator> <operator pos:line="207" pos:column="24">(<pos:position pos:line="207" pos:column="25"/></operator><name pos:line="207" pos:column="25">mask<pos:position pos:line="207" pos:column="29"/></name> <operator pos:line="207" pos:column="30">&amp;<pos:position pos:line="207" pos:column="35"/></operator> <name pos:line="207" pos:column="32">APHTP_DELUSER<pos:position pos:line="207" pos:column="45"/></name><operator pos:line="207" pos:column="45">)<pos:position pos:line="207" pos:column="46"/></operator></expr>)<pos:position pos:line="207" pos:column="47"/></condition><then pos:line="207" pos:column="47"> <block pos:line="207" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="208" pos:column="9">apr_file_printf<pos:position pos:line="208" pos:column="24"/></name><argument_list pos:line="208" pos:column="24">(<argument><expr><name pos:line="208" pos:column="25">errfile<pos:position pos:line="208" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="34">"User %s not found\n"<pos:position pos:line="208" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="208" pos:column="57">user<pos:position pos:line="208" pos:column="61"/></name></expr></argument>)<pos:position pos:line="208" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="209" pos:column="9">exit<pos:position pos:line="209" pos:column="13"/></name><argument_list pos:line="209" pos:column="13">(<argument><expr><literal type="number" pos:line="209" pos:column="14">0<pos:position pos:line="209" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="209" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="210" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><call><name pos:line="211" pos:column="5">apr_file_printf<pos:position pos:line="211" pos:column="20"/></name><argument_list pos:line="211" pos:column="20">(<argument><expr><name pos:line="211" pos:column="21">errfile<pos:position pos:line="211" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="211" pos:column="30">"password for user %s\n"<pos:position pos:line="211" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="211" pos:column="56">user<pos:position pos:line="211" pos:column="60"/></name></expr></argument>)<pos:position pos:line="211" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="213" pos:column="5">/* The temporary file has all the data, just copy it to the new location.
     */</comment>
    <if pos:line="215" pos:column="5">if <condition pos:line="215" pos:column="8">(<expr><call><name pos:line="215" pos:column="9">apr_file_copy<pos:position pos:line="215" pos:column="22"/></name><argument_list pos:line="215" pos:column="22">(<argument><expr><name pos:line="215" pos:column="23">dirname<pos:position pos:line="215" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="32">pwfilename<pos:position pos:line="215" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="44">APR_FILE_SOURCE_PERMS<pos:position pos:line="215" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="67">pool<pos:position pos:line="215" pos:column="71"/></name></expr></argument>)<pos:position pos:line="215" pos:column="72"/></argument_list></call> <operator pos:line="215" pos:column="73">!=<pos:position pos:line="215" pos:column="75"/></operator>
        <name pos:line="216" pos:column="9">APR_SUCCESS<pos:position pos:line="216" pos:column="20"/></name></expr>)<pos:position pos:line="216" pos:column="21"/></condition><then pos:line="216" pos:column="21"> <block pos:line="216" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="217" pos:column="9">apr_file_printf<pos:position pos:line="217" pos:column="24"/></name><argument_list pos:line="217" pos:column="24">(<argument><expr><name pos:line="217" pos:column="25">errfile<pos:position pos:line="217" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="217" pos:column="34">"%s: unable to update file %s\n"<pos:position pos:line="217" pos:column="66"/></literal></expr></argument>, 
                        <argument><expr><name><name pos:line="218" pos:column="25">argv<pos:position pos:line="218" pos:column="29"/></name><index pos:line="218" pos:column="29">[<expr><literal type="number" pos:line="218" pos:column="30">0<pos:position pos:line="218" pos:column="31"/></literal></expr>]<pos:position pos:line="218" pos:column="32"/></index></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="34">pwfilename<pos:position pos:line="218" pos:column="44"/></name></expr></argument>)<pos:position pos:line="218" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="219" pos:column="9">exit<pos:position pos:line="219" pos:column="13"/></name><argument_list pos:line="219" pos:column="13">(<argument><expr><name pos:line="219" pos:column="14">ERR_FILEPERM<pos:position pos:line="219" pos:column="26"/></name></expr></argument>)<pos:position pos:line="219" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="220" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="221" pos:column="5">apr_file_close<pos:position pos:line="221" pos:column="19"/></name><argument_list pos:line="221" pos:column="19">(<argument><expr><name pos:line="221" pos:column="20">ftemp<pos:position pos:line="221" pos:column="25"/></name></expr></argument>)<pos:position pos:line="221" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="27"/></expr_stmt>
    <return pos:line="222" pos:column="5">return <expr><literal type="number" pos:line="222" pos:column="12">0<pos:position pos:line="222" pos:column="13"/></literal></expr>;<pos:position pos:line="222" pos:column="14"/></return>
}<pos:position pos:line="223" pos:column="2"/></block></function></unit>

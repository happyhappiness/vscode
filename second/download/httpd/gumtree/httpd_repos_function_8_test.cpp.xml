<function xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position"><specifier pos:line="198" pos:column="1">static<pos:position pos:line="198" pos:column="7"/></specifier> <type><name pos:line="198" pos:column="8">int<pos:position pos:line="198" pos:column="11"/></name></type> <name pos:line="198" pos:column="12">write_state_bool<pos:position pos:line="198" pos:column="28"/></name><parameter_list pos:line="198" pos:column="28">(<parameter><decl><type><specifier pos:line="198" pos:column="29">const<pos:position pos:line="198" pos:column="34"/></specifier> <name><name pos:line="198" pos:column="35">struct<pos:position pos:line="198" pos:column="41"/></name> <name pos:line="198" pos:column="42">am_state<pos:position pos:line="198" pos:column="50"/></name></name> <modifier pos:line="198" pos:column="51">*<pos:position pos:line="198" pos:column="52"/></modifier></type><name pos:line="198" pos:column="52">state<pos:position pos:line="198" pos:column="57"/></name></decl></parameter>,
			    <parameter><decl><type><specifier pos:line="199" pos:column="29">const<pos:position pos:line="199" pos:column="34"/></specifier> <name pos:line="199" pos:column="35">char<pos:position pos:line="199" pos:column="39"/></name> <modifier pos:line="199" pos:column="40">*<pos:position pos:line="199" pos:column="41"/></modifier></type><name pos:line="199" pos:column="41">name<pos:position pos:line="199" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="199" pos:column="47">int<pos:position pos:line="199" pos:column="50"/></name></type> <name pos:line="199" pos:column="51">value<pos:position pos:line="199" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="199" pos:column="57"/></parameter_list>
<block pos:line="200" pos:column="1">{
	<return pos:line="201" pos:column="9">return <expr><call><name pos:line="201" pos:column="16">write_state_text<pos:position pos:line="201" pos:column="32"/></name><argument_list pos:line="201" pos:column="32">(<argument><expr><name pos:line="201" pos:column="33">state<pos:position pos:line="201" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="40">name<pos:position pos:line="201" pos:column="44"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="201" pos:column="46">value<pos:position pos:line="201" pos:column="51"/></name></expr> ?<pos:position pos:line="201" pos:column="53"/></condition><then pos:line="201" pos:column="53"> <expr><literal type="string" pos:line="201" pos:column="54">"t"<pos:position pos:line="201" pos:column="57"/></literal></expr> <pos:position pos:line="201" pos:column="58"/></then><else pos:line="201" pos:column="58">: <expr><literal type="string" pos:line="201" pos:column="60">"f"<pos:position pos:line="201" pos:column="63"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="201" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="65"/></return>
}<pos:position pos:line="202" pos:column="2"/></block></function>


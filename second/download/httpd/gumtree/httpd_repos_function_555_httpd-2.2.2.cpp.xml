<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_555_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">do_headers_fixup<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">request_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">r<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">apr_table_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">headers<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">apr_array_header_t<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">fixup<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">int<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">early<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><expr><name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr>;<pos:position pos:line="6" pos:column="16"/></init> <condition><expr><name pos:line="6" pos:column="17">i<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&lt;<pos:position pos:line="6" pos:column="23"/></operator> <name><name pos:line="6" pos:column="21">fixup<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">nelts<pos:position pos:line="6" pos:column="33"/></name></name></expr>;<pos:position pos:line="6" pos:column="34"/></condition> <incr><expr><operator pos:line="6" pos:column="35">++<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="37">i<pos:position pos:line="6" pos:column="38"/></name></expr></incr>)<pos:position pos:line="6" pos:column="39"/></control> <block pos:line="6" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">header_entry<pos:position pos:line="7" pos:column="21"/></name> <modifier pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></modifier></type><name pos:line="7" pos:column="23">hdr<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><operator pos:line="7" pos:column="29">&amp;<pos:position pos:line="7" pos:column="34"/></operator><operator pos:line="7" pos:column="30">(<pos:position pos:line="7" pos:column="31"/></operator><operator pos:line="7" pos:column="31">(<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">header_entry<pos:position pos:line="7" pos:column="44"/></name> <operator pos:line="7" pos:column="45">*<pos:position pos:line="7" pos:column="46"/></operator><operator pos:line="7" pos:column="46">)<pos:position pos:line="7" pos:column="47"/></operator> <operator pos:line="7" pos:column="48">(<pos:position pos:line="7" pos:column="49"/></operator><name><name pos:line="7" pos:column="49">fixup<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">-&gt;<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="56">elts<pos:position pos:line="7" pos:column="60"/></name></name><operator pos:line="7" pos:column="60">)<pos:position pos:line="7" pos:column="61"/></operator><operator pos:line="7" pos:column="61">)<pos:position pos:line="7" pos:column="62"/></operator><index pos:line="7" pos:column="62">[<expr><name pos:line="7" pos:column="63">i<pos:position pos:line="7" pos:column="64"/></name></expr>]<pos:position pos:line="7" pos:column="65"/></index></expr></init></decl>;<pos:position pos:line="7" pos:column="66"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">envar<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name><name pos:line="8" pos:column="29">hdr<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">condition_var<pos:position pos:line="8" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>

        <comment type="block" pos:line="10" pos:column="9">/* ignore early headers in late calls */</comment>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">early<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">&amp;&amp;<pos:position pos:line="11" pos:column="30"/></operator> <operator pos:line="11" pos:column="23">(<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">envar<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">==<pos:position pos:line="11" pos:column="32"/></operator> <name pos:line="11" pos:column="33">condition_early<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">)<pos:position pos:line="11" pos:column="49"/></operator></expr>)<pos:position pos:line="11" pos:column="50"/></condition><then pos:line="11" pos:column="50"> <block pos:line="11" pos:column="51">{
            <continue pos:line="12" pos:column="13">continue;<pos:position pos:line="12" pos:column="22"/></continue>
        }<pos:position pos:line="13" pos:column="10"/></block></then>
        <comment type="block" pos:line="14" pos:column="9">/* ignore late headers in early calls */</comment>
        <elseif pos:line="15" pos:column="9">else <if pos:line="15" pos:column="14">if <condition pos:line="15" pos:column="17">(<expr><name pos:line="15" pos:column="18">early<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">&amp;&amp;<pos:position pos:line="15" pos:column="34"/></operator> <operator pos:line="15" pos:column="27">(<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">envar<pos:position pos:line="15" pos:column="33"/></name> <operator pos:line="15" pos:column="34">!=<pos:position pos:line="15" pos:column="36"/></operator> <name pos:line="15" pos:column="37">condition_early<pos:position pos:line="15" pos:column="52"/></name><operator pos:line="15" pos:column="52">)<pos:position pos:line="15" pos:column="53"/></operator></expr>)<pos:position pos:line="15" pos:column="54"/></condition><then pos:line="15" pos:column="54"> <block pos:line="15" pos:column="55">{
            <continue pos:line="16" pos:column="13">continue;<pos:position pos:line="16" pos:column="22"/></continue>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if></elseif>
        <comment type="block" pos:line="18" pos:column="9">/* Have any conditional envar-controlled Header processing to do? */</comment>
        <elseif pos:line="19" pos:column="9">else <if pos:line="19" pos:column="14">if <condition pos:line="19" pos:column="17">(<expr><name pos:line="19" pos:column="18">envar<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">&amp;&amp;<pos:position pos:line="19" pos:column="34"/></operator> <operator pos:line="19" pos:column="27">!<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">early<pos:position pos:line="19" pos:column="33"/></name></expr>)<pos:position pos:line="19" pos:column="34"/></condition><then pos:line="19" pos:column="34"> <block pos:line="19" pos:column="35">{
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><operator pos:line="20" pos:column="17">*<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">envar<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">!=<pos:position pos:line="20" pos:column="26"/></operator> <literal type="char" pos:line="20" pos:column="27">'!'<pos:position pos:line="20" pos:column="30"/></literal></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31"> <block pos:line="20" pos:column="32">{
                <if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><call><name pos:line="21" pos:column="21">apr_table_get<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><name><name pos:line="21" pos:column="35">r<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">-&gt;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="38">subprocess_env<pos:position pos:line="21" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="54">envar<pos:position pos:line="21" pos:column="59"/></name></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call> <operator pos:line="21" pos:column="61">==<pos:position pos:line="21" pos:column="63"/></operator> <name pos:line="21" pos:column="64">NULL<pos:position pos:line="21" pos:column="68"/></name></expr>)<pos:position pos:line="21" pos:column="69"/></condition><then pos:line="21" pos:column="69">
                    <block type="pseudo"><continue pos:line="22" pos:column="21">continue;<pos:position pos:line="22" pos:column="30"/></continue></block></then></if>
            }<pos:position pos:line="23" pos:column="14"/></block></then>
            <else pos:line="24" pos:column="13">else <block pos:line="24" pos:column="18">{
                <if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">apr_table_get<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name><name pos:line="25" pos:column="35">r<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">subprocess_env<pos:position pos:line="25" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="54">&amp;<pos:position pos:line="25" pos:column="59"/></operator><name><name pos:line="25" pos:column="55">envar<pos:position pos:line="25" pos:column="60"/></name><index pos:line="25" pos:column="60">[<expr><literal type="number" pos:line="25" pos:column="61">1<pos:position pos:line="25" pos:column="62"/></literal></expr>]<pos:position pos:line="25" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call> <operator pos:line="25" pos:column="65">!=<pos:position pos:line="25" pos:column="67"/></operator> <name pos:line="25" pos:column="68">NULL<pos:position pos:line="25" pos:column="72"/></name></expr>)<pos:position pos:line="25" pos:column="73"/></condition><then pos:line="25" pos:column="73">
                    <block type="pseudo"><continue pos:line="26" pos:column="21">continue;<pos:position pos:line="26" pos:column="30"/></continue></block></then></if>
            }<pos:position pos:line="27" pos:column="14"/></block></else></if>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if></elseif></if>

        <switch pos:line="30" pos:column="9">switch <condition pos:line="30" pos:column="16">(<expr><name><name pos:line="30" pos:column="17">hdr<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">action<pos:position pos:line="30" pos:column="28"/></name></name></expr>)<pos:position pos:line="30" pos:column="29"/></condition> <block pos:line="30" pos:column="30">{
        <case pos:line="31" pos:column="9">case <expr><name pos:line="31" pos:column="14">hdr_add<pos:position pos:line="31" pos:column="21"/></name></expr>:<pos:position pos:line="31" pos:column="22"/></case>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">apr_table_addn<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">headers<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="37">hdr<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">-&gt;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="42">header<pos:position pos:line="32" pos:column="48"/></name></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="50">process_tags<pos:position pos:line="32" pos:column="62"/></name><argument_list pos:line="32" pos:column="62">(<argument><expr><name pos:line="32" pos:column="63">hdr<pos:position pos:line="32" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="68">r<pos:position pos:line="32" pos:column="69"/></name></expr></argument>)<pos:position pos:line="32" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="72"/></expr_stmt>
            <break pos:line="33" pos:column="13">break;<pos:position pos:line="33" pos:column="19"/></break>
        <case pos:line="34" pos:column="9">case <expr><name pos:line="34" pos:column="14">hdr_append<pos:position pos:line="34" pos:column="24"/></name></expr>:<pos:position pos:line="34" pos:column="25"/></case>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">apr_table_mergen<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">headers<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="39">hdr<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">-&gt;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="44">header<pos:position pos:line="35" pos:column="50"/></name></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="52">process_tags<pos:position pos:line="35" pos:column="64"/></name><argument_list pos:line="35" pos:column="64">(<argument><expr><name pos:line="35" pos:column="65">hdr<pos:position pos:line="35" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="70">r<pos:position pos:line="35" pos:column="71"/></name></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="74"/></expr_stmt>
            <break pos:line="36" pos:column="13">break;<pos:position pos:line="36" pos:column="19"/></break>
        <case pos:line="37" pos:column="9">case <expr><name pos:line="37" pos:column="14">hdr_set<pos:position pos:line="37" pos:column="21"/></name></expr>:<pos:position pos:line="37" pos:column="22"/></case>
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">apr_table_setn<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><name pos:line="38" pos:column="28">headers<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="37">hdr<pos:position pos:line="38" pos:column="40"/></name><operator pos:line="38" pos:column="40">-&gt;<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="42">header<pos:position pos:line="38" pos:column="48"/></name></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="50">process_tags<pos:position pos:line="38" pos:column="62"/></name><argument_list pos:line="38" pos:column="62">(<argument><expr><name pos:line="38" pos:column="63">hdr<pos:position pos:line="38" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="68">r<pos:position pos:line="38" pos:column="69"/></name></expr></argument>)<pos:position pos:line="38" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="72"/></expr_stmt>
            <break pos:line="39" pos:column="13">break;<pos:position pos:line="39" pos:column="19"/></break>
        <case pos:line="40" pos:column="9">case <expr><name pos:line="40" pos:column="14">hdr_unset<pos:position pos:line="40" pos:column="23"/></name></expr>:<pos:position pos:line="40" pos:column="24"/></case>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">apr_table_unset<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">headers<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="38">hdr<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">-&gt;<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="43">header<pos:position pos:line="41" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
            <break pos:line="42" pos:column="13">break;<pos:position pos:line="42" pos:column="19"/></break>
        <case pos:line="43" pos:column="9">case <expr><name pos:line="43" pos:column="14">hdr_echo<pos:position pos:line="43" pos:column="22"/></name></expr>:<pos:position pos:line="43" pos:column="23"/></case>
        <block pos:line="44" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="45" pos:column="13">echo_do<pos:position pos:line="45" pos:column="20"/></name></type> <name pos:line="45" pos:column="21">v<pos:position pos:line="45" pos:column="22"/></name></decl>;<pos:position pos:line="45" pos:column="23"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="46" pos:column="13">v<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">.<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">r<pos:position pos:line="46" pos:column="16"/></name></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <name pos:line="46" pos:column="19">r<pos:position pos:line="46" pos:column="20"/></name></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="47" pos:column="13">v<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">.<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">hdr<pos:position pos:line="47" pos:column="18"/></name></name> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <name pos:line="47" pos:column="21">hdr<pos:position pos:line="47" pos:column="24"/></name></expr>;<pos:position pos:line="47" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">apr_table_do<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><operator pos:line="48" pos:column="26">(<pos:position pos:line="48" pos:column="27"/></operator><call><call><name pos:line="48" pos:column="27">int<pos:position pos:line="48" pos:column="30"/></name> <argument_list pos:line="48" pos:column="31">(<argument><expr><operator pos:line="48" pos:column="32">*<pos:position pos:line="48" pos:column="33"/></operator></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call> <argument_list pos:line="48" pos:column="35">(<argument><expr><name pos:line="48" pos:column="36">void<pos:position pos:line="48" pos:column="40"/></name> <operator pos:line="48" pos:column="41">*<pos:position pos:line="48" pos:column="42"/></operator></expr></argument>, <argument><expr><specifier pos:line="48" pos:column="44">const<pos:position pos:line="48" pos:column="49"/></specifier> <name pos:line="48" pos:column="50">char<pos:position pos:line="48" pos:column="54"/></name> <operator pos:line="48" pos:column="55">*<pos:position pos:line="48" pos:column="56"/></operator></expr></argument>, <argument><expr><specifier pos:line="48" pos:column="58">const<pos:position pos:line="48" pos:column="63"/></specifier> <name pos:line="48" pos:column="64">char<pos:position pos:line="48" pos:column="68"/></name> <operator pos:line="48" pos:column="69">*<pos:position pos:line="48" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="48" pos:column="71"/></argument_list></call><operator pos:line="48" pos:column="71">)<pos:position pos:line="48" pos:column="72"/></operator>
                         <name pos:line="49" pos:column="26">echo_header<pos:position pos:line="49" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="39">(<pos:position pos:line="49" pos:column="40"/></operator><name pos:line="49" pos:column="40">void<pos:position pos:line="49" pos:column="44"/></name> <operator pos:line="49" pos:column="45">*<pos:position pos:line="49" pos:column="46"/></operator><operator pos:line="49" pos:column="46">)<pos:position pos:line="49" pos:column="47"/></operator> <operator pos:line="49" pos:column="48">&amp;<pos:position pos:line="49" pos:column="53"/></operator><name pos:line="49" pos:column="49">v<pos:position pos:line="49" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="52">r<pos:position pos:line="49" pos:column="53"/></name><operator pos:line="49" pos:column="53">-&gt;<pos:position pos:line="49" pos:column="58"/></operator><name pos:line="49" pos:column="55">headers_in<pos:position pos:line="49" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="67">NULL<pos:position pos:line="49" pos:column="71"/></name></expr></argument>)<pos:position pos:line="49" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="73"/></expr_stmt>
            <break pos:line="50" pos:column="13">break;<pos:position pos:line="50" pos:column="19"/></break>
        }<pos:position pos:line="51" pos:column="10"/></block>
        }<pos:position pos:line="52" pos:column="10"/></block></switch>
    }<pos:position pos:line="53" pos:column="6"/></block></for>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

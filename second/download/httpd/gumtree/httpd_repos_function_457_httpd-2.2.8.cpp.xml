<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_457_httpd-2.2.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">logio_pre_config<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">apr_pool_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">p<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">apr_pool_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">plog<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">apr_pool_t<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">ptemp<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><specifier pos:line="3" pos:column="5">static<pos:position pos:line="3" pos:column="11"/></specifier> <call><name pos:line="3" pos:column="12">APR_OPTIONAL_FN_TYPE<pos:position pos:line="3" pos:column="32"/></name><argument_list pos:line="3" pos:column="32">(<argument><expr><name pos:line="3" pos:column="33">ap_register_log_handler<pos:position pos:line="3" pos:column="56"/></name></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list></call> <operator pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></operator><name pos:line="3" pos:column="59">log_pfn_register<pos:position pos:line="3" pos:column="75"/></name></expr>;<pos:position pos:line="3" pos:column="76"/></expr_stmt>

    <expr_stmt><expr><name pos:line="5" pos:column="5">log_pfn_register<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">=<pos:position pos:line="5" pos:column="23"/></operator> <call><name pos:line="5" pos:column="24">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="5" pos:column="48"/></name><argument_list pos:line="5" pos:column="48">(<argument><expr><name pos:line="5" pos:column="49">ap_register_log_handler<pos:position pos:line="5" pos:column="72"/></name></expr></argument>)<pos:position pos:line="5" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="74"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">log_pfn_register<pos:position pos:line="7" pos:column="25"/></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26"> <block pos:line="7" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">log_pfn_register<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">p<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="29">"I"<pos:position pos:line="8" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">log_bytes_in<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="48">0<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">log_pfn_register<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">p<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="29">"O"<pos:position pos:line="9" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">log_bytes_out<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="49">0<pos:position pos:line="9" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">OK<pos:position pos:line="12" pos:column="14"/></name></expr>;<pos:position pos:line="12" pos:column="15"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6247.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier> <name pos:line="1" pos:column="15">APR_THREAD_FUNC<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">listener_thread<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name pos:line="1" pos:column="47">apr_thread_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type> <name pos:line="1" pos:column="62">thd<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">void<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">dummy<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">timer_event_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">ep<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">timer_event_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">te<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rc<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">proc_info<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">ti<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">dummy<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">process_slot<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><name><name pos:line="7" pos:column="24">ti<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">pid<pos:position pos:line="7" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_pool_t<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">tpool<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><call><name pos:line="8" pos:column="25">apr_thread_pool_get<pos:position pos:line="8" pos:column="44"/></name><argument_list pos:line="8" pos:column="44">(<argument><expr><name pos:line="8" pos:column="45">thd<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">void<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">csd<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><name pos:line="9" pos:column="17">NULL<pos:position pos:line="9" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_pool_t<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">ptrans<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>         <comment type="block" pos:line="10" pos:column="33">/* Pool for per-transaction stuff */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">ap_listen_rec<pos:position pos:line="11" pos:column="18"/></name> <modifier pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></modifier></type><name pos:line="11" pos:column="20">lr<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">have_idle_worker<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">apr_pollfd_t<pos:position pos:line="13" pos:column="23"/></name> <modifier pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></modifier></type><name pos:line="13" pos:column="25">out_pfd<pos:position pos:line="13" pos:column="32"/></name></decl>;<pos:position pos:line="13" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_int32_t<pos:position pos:line="14" pos:column="16"/></name></type> <name pos:line="14" pos:column="17">num<pos:position pos:line="14" pos:column="20"/></name> <init pos:line="14" pos:column="21">= <expr><literal type="number" pos:line="14" pos:column="23">0<pos:position pos:line="14" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_interval_time_t<pos:position pos:line="15" pos:column="24"/></name></type> <name pos:line="15" pos:column="25">timeout_interval<pos:position pos:line="15" pos:column="41"/></name></decl>;<pos:position pos:line="15" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">apr_time_t<pos:position pos:line="16" pos:column="15"/></name></type> <name pos:line="16" pos:column="16">timeout_time<pos:position pos:line="16" pos:column="28"/></name> <init pos:line="16" pos:column="29">= <expr><literal type="number" pos:line="16" pos:column="31">0<pos:position pos:line="16" pos:column="32"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="34">now<pos:position pos:line="16" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="39">last_log<pos:position pos:line="16" pos:column="47"/></name></decl>;<pos:position pos:line="16" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">listener_poll_type<pos:position pos:line="17" pos:column="23"/></name> <modifier pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></modifier></type><name pos:line="17" pos:column="25">pt<pos:position pos:line="17" pos:column="27"/></name></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">closed<pos:position pos:line="18" pos:column="15"/></name> <init pos:line="18" pos:column="16">= <expr><literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="18" pos:column="21">listeners_disabled<pos:position pos:line="18" pos:column="39"/></name> <init pos:line="18" pos:column="40">= <expr><literal type="number" pos:line="18" pos:column="42">0<pos:position pos:line="18" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="44"/></decl_stmt>

    <expr_stmt><expr><name pos:line="20" pos:column="5">last_log<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">apr_time_now<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">()<pos:position pos:line="20" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">free<pos:position pos:line="21" pos:column="9"/></name><argument_list pos:line="21" pos:column="9">(<argument><expr><name pos:line="21" pos:column="10">ti<pos:position pos:line="21" pos:column="12"/></name></expr></argument>)<pos:position pos:line="21" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="14"/></expr_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* the following times out events that are really close in the future
     *   to prevent extra poll calls
     *
     * current value is .1 second
     */</comment>
<cpp:define pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">define<pos:position pos:line="28" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="28" pos:column="9">TIMEOUT_FUDGE_FACTOR<pos:position pos:line="28" pos:column="29"/></name></cpp:macro> <cpp:value pos:line="28" pos:column="30">100000<pos:position pos:line="28" pos:column="36"/></cpp:value></cpp:define>
<cpp:define pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">define<pos:position pos:line="29" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="29" pos:column="9">EVENT_FUDGE_FACTOR<pos:position pos:line="29" pos:column="27"/></name></cpp:macro> <cpp:value pos:line="29" pos:column="28">10000<pos:position pos:line="29" pos:column="33"/></cpp:value></cpp:define>

    <expr_stmt><expr><name pos:line="31" pos:column="5">rc<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <call><name pos:line="31" pos:column="10">init_pollset<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">tpool<pos:position pos:line="31" pos:column="28"/></name></expr></argument>)<pos:position pos:line="31" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">rc<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">!=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">APR_SUCCESS<pos:position pos:line="32" pos:column="26"/></name></expr>)<pos:position pos:line="32" pos:column="27"/></condition><then pos:line="32" pos:column="27"> <block pos:line="32" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_log_error<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">APLOG_MARK<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="34">APLOG_ERR<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="45">rc<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="49">ap_server_conf<pos:position pos:line="33" pos:column="63"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="34" pos:column="22">"failed to initialize pollset, "<pos:position pos:line="34" pos:column="54"/></literal>
                     <literal type="string" pos:line="35" pos:column="22">"attempting to shutdown process gracefully"<pos:position pos:line="35" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">signal_threads<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">ST_GRACEFUL<pos:position pos:line="36" pos:column="35"/></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">NULL<pos:position pos:line="37" pos:column="20"/></name></expr>;<pos:position pos:line="37" pos:column="21"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="40" pos:column="5">/* Unblock the signal used to wake this thread up, and set a handler for
     * it.
     */</comment>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">unblock_signal<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><name pos:line="43" pos:column="20">LISTENER_SIGNAL<pos:position pos:line="43" pos:column="35"/></name></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">apr_signal<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">LISTENER_SIGNAL<pos:position pos:line="44" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="33">dummy_signal_handler<pos:position pos:line="44" pos:column="53"/></name></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="55"/></expr_stmt>

    <for pos:line="46" pos:column="5">for <control pos:line="46" pos:column="9">(<init pos:line="46" pos:column="10">;<pos:position pos:line="46" pos:column="11"/></init><condition pos:line="46" pos:column="11">;<pos:position pos:line="46" pos:column="12"/></condition><incr/>)<pos:position pos:line="46" pos:column="13"/></control> <block pos:line="46" pos:column="14">{
        <decl_stmt><decl><type><name pos:line="47" pos:column="9">int<pos:position pos:line="47" pos:column="12"/></name></type> <name pos:line="47" pos:column="13">workers_were_busy<pos:position pos:line="47" pos:column="30"/></name> <init pos:line="47" pos:column="31">= <expr><literal type="number" pos:line="47" pos:column="33">0<pos:position pos:line="47" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="47" pos:column="35"/></decl_stmt>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">listener_may_exit<pos:position pos:line="48" pos:column="30"/></name></expr>)<pos:position pos:line="48" pos:column="31"/></condition><then pos:line="48" pos:column="31"> <block pos:line="48" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">close_listeners<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><name pos:line="49" pos:column="29">process_slot<pos:position pos:line="49" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="43">&amp;<pos:position pos:line="49" pos:column="48"/></operator><name pos:line="49" pos:column="44">closed<pos:position pos:line="49" pos:column="50"/></name></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="52"/></expr_stmt>
            <if pos:line="50" pos:column="13">if <condition pos:line="50" pos:column="16">(<expr><name pos:line="50" pos:column="17">terminate_mode<pos:position pos:line="50" pos:column="31"/></name> <operator pos:line="50" pos:column="32">==<pos:position pos:line="50" pos:column="34"/></operator> <name pos:line="50" pos:column="35">ST_UNGRACEFUL<pos:position pos:line="50" pos:column="48"/></name>
                <operator pos:line="51" pos:column="17">||<pos:position pos:line="51" pos:column="19"/></operator> <call><name pos:line="51" pos:column="20">apr_atomic_read32<pos:position pos:line="51" pos:column="37"/></name><argument_list pos:line="51" pos:column="37">(<argument><expr><operator pos:line="51" pos:column="38">&amp;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="39">connection_count<pos:position pos:line="51" pos:column="55"/></name></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call> <operator pos:line="51" pos:column="57">==<pos:position pos:line="51" pos:column="59"/></operator> <literal type="number" pos:line="51" pos:column="60">0<pos:position pos:line="51" pos:column="61"/></literal></expr>)<pos:position pos:line="51" pos:column="62"/></condition><then pos:line="51" pos:column="62">
                <block type="pseudo"><break pos:line="52" pos:column="17">break;<pos:position pos:line="52" pos:column="23"/></break></block></then></if>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>

        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">conns_this_child<pos:position pos:line="55" pos:column="29"/></name> <operator pos:line="55" pos:column="30">&lt;=<pos:position pos:line="55" pos:column="35"/></operator> <literal type="number" pos:line="55" pos:column="33">0<pos:position pos:line="55" pos:column="34"/></literal></expr>)<pos:position pos:line="55" pos:column="35"/></condition><then pos:line="55" pos:column="35">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="13">check_infinite_requests<pos:position pos:line="56" pos:column="36"/></name><argument_list pos:line="56" pos:column="36">()<pos:position pos:line="56" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="39"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="58" pos:column="9">now<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <call><name pos:line="58" pos:column="15">apr_time_now<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">()<pos:position pos:line="58" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt>
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><call><name pos:line="59" pos:column="13">APLOGtrace6<pos:position pos:line="59" pos:column="24"/></name><argument_list pos:line="59" pos:column="24">(<argument><expr><name pos:line="59" pos:column="25">ap_server_conf<pos:position pos:line="59" pos:column="39"/></name></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="41"/></condition><then pos:line="59" pos:column="41"> <block pos:line="59" pos:column="42">{
            <comment type="block" pos:line="60" pos:column="13">/* trace log status every second */</comment>
            <if pos:line="61" pos:column="13">if <condition pos:line="61" pos:column="16">(<expr><name pos:line="61" pos:column="17">now<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">-<pos:position pos:line="61" pos:column="22"/></operator> <name pos:line="61" pos:column="23">last_log<pos:position pos:line="61" pos:column="31"/></name> <operator pos:line="61" pos:column="32">&gt;<pos:position pos:line="61" pos:column="36"/></operator> <call><name pos:line="61" pos:column="34">apr_time_from_msec<pos:position pos:line="61" pos:column="52"/></name><argument_list pos:line="61" pos:column="52">(<argument><expr><literal type="number" pos:line="61" pos:column="53">1000<pos:position pos:line="61" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="59"/></condition><then pos:line="61" pos:column="59"> <block pos:line="61" pos:column="60">{
                <expr_stmt><expr><name pos:line="62" pos:column="17">last_log<pos:position pos:line="62" pos:column="25"/></name> <operator pos:line="62" pos:column="26">=<pos:position pos:line="62" pos:column="27"/></operator> <name pos:line="62" pos:column="28">now<pos:position pos:line="62" pos:column="31"/></name></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">apr_thread_mutex_lock<pos:position pos:line="63" pos:column="38"/></name><argument_list pos:line="63" pos:column="38">(<argument><expr><name pos:line="63" pos:column="39">timeout_mutex<pos:position pos:line="63" pos:column="52"/></name></expr></argument>)<pos:position pos:line="63" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">ap_log_error<pos:position pos:line="64" pos:column="29"/></name><argument_list pos:line="64" pos:column="29">(<argument><expr><name pos:line="64" pos:column="30">APLOG_MARK<pos:position pos:line="64" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="42">APLOG_TRACE6<pos:position pos:line="64" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="56">0<pos:position pos:line="64" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="59">ap_server_conf<pos:position pos:line="64" pos:column="73"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="65" pos:column="30">"connections: %u (clogged: %u write-completion: %d "<pos:position pos:line="65" pos:column="82"/></literal>
                             <literal type="string" pos:line="66" pos:column="30">"keep-alive: %d lingering: %d suspended: %u)"<pos:position pos:line="66" pos:column="75"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="67" pos:column="30">apr_atomic_read32<pos:position pos:line="67" pos:column="47"/></name><argument_list pos:line="67" pos:column="47">(<argument><expr><operator pos:line="67" pos:column="48">&amp;<pos:position pos:line="67" pos:column="53"/></operator><name pos:line="67" pos:column="49">connection_count<pos:position pos:line="67" pos:column="65"/></name></expr></argument>)<pos:position pos:line="67" pos:column="66"/></argument_list></call></expr></argument>,
                             <argument><expr><call><name pos:line="68" pos:column="30">apr_atomic_read32<pos:position pos:line="68" pos:column="47"/></name><argument_list pos:line="68" pos:column="47">(<argument><expr><operator pos:line="68" pos:column="48">&amp;<pos:position pos:line="68" pos:column="53"/></operator><name pos:line="68" pos:column="49">clogged_count<pos:position pos:line="68" pos:column="62"/></name></expr></argument>)<pos:position pos:line="68" pos:column="63"/></argument_list></call></expr></argument>,
                             <argument><expr><operator pos:line="69" pos:column="30">*<pos:position pos:line="69" pos:column="31"/></operator><name><name pos:line="69" pos:column="31">write_completion_q<pos:position pos:line="69" pos:column="49"/></name><operator pos:line="69" pos:column="49">-&gt;<pos:position pos:line="69" pos:column="54"/></operator><name pos:line="69" pos:column="51">total<pos:position pos:line="69" pos:column="56"/></name></name></expr></argument>,
                             <argument><expr><operator pos:line="70" pos:column="30">*<pos:position pos:line="70" pos:column="31"/></operator><name><name pos:line="70" pos:column="31">keepalive_q<pos:position pos:line="70" pos:column="42"/></name><operator pos:line="70" pos:column="42">-&gt;<pos:position pos:line="70" pos:column="47"/></operator><name pos:line="70" pos:column="44">total<pos:position pos:line="70" pos:column="49"/></name></name></expr></argument>,
                             <argument><expr><call><name pos:line="71" pos:column="30">apr_atomic_read32<pos:position pos:line="71" pos:column="47"/></name><argument_list pos:line="71" pos:column="47">(<argument><expr><operator pos:line="71" pos:column="48">&amp;<pos:position pos:line="71" pos:column="53"/></operator><name pos:line="71" pos:column="49">lingering_count<pos:position pos:line="71" pos:column="64"/></name></expr></argument>)<pos:position pos:line="71" pos:column="65"/></argument_list></call></expr></argument>,
                             <argument><expr><call><name pos:line="72" pos:column="30">apr_atomic_read32<pos:position pos:line="72" pos:column="47"/></name><argument_list pos:line="72" pos:column="47">(<argument><expr><operator pos:line="72" pos:column="48">&amp;<pos:position pos:line="72" pos:column="53"/></operator><name pos:line="72" pos:column="49">suspended_count<pos:position pos:line="72" pos:column="64"/></name></expr></argument>)<pos:position pos:line="72" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="73" pos:column="17">apr_thread_mutex_unlock<pos:position pos:line="73" pos:column="40"/></name><argument_list pos:line="73" pos:column="40">(<argument><expr><name pos:line="73" pos:column="41">timeout_mutex<pos:position pos:line="73" pos:column="54"/></name></expr></argument>)<pos:position pos:line="73" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="74" pos:column="14"/></block></then></if>
        }<pos:position pos:line="75" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="77" pos:column="9">apr_thread_mutex_lock<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><name pos:line="77" pos:column="31">g_timer_skiplist_mtx<pos:position pos:line="77" pos:column="51"/></name></expr></argument>)<pos:position pos:line="77" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name pos:line="78" pos:column="9">te<pos:position pos:line="78" pos:column="11"/></name> <operator pos:line="78" pos:column="12">=<pos:position pos:line="78" pos:column="13"/></operator> <call><name pos:line="78" pos:column="14">apr_skiplist_peek<pos:position pos:line="78" pos:column="31"/></name><argument_list pos:line="78" pos:column="31">(<argument><expr><name pos:line="78" pos:column="32">timer_skiplist<pos:position pos:line="78" pos:column="46"/></name></expr></argument>)<pos:position pos:line="78" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="48"/></expr_stmt>
        <if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name pos:line="79" pos:column="13">te<pos:position pos:line="79" pos:column="15"/></name></expr>)<pos:position pos:line="79" pos:column="16"/></condition><then pos:line="79" pos:column="16"> <block pos:line="79" pos:column="17">{
            <if pos:line="80" pos:column="13">if <condition pos:line="80" pos:column="16">(<expr><name><name pos:line="80" pos:column="17">te<pos:position pos:line="80" pos:column="19"/></name><operator pos:line="80" pos:column="19">-&gt;<pos:position pos:line="80" pos:column="24"/></operator><name pos:line="80" pos:column="21">when<pos:position pos:line="80" pos:column="25"/></name></name> <operator pos:line="80" pos:column="26">&gt;<pos:position pos:line="80" pos:column="30"/></operator> <name pos:line="80" pos:column="28">now<pos:position pos:line="80" pos:column="31"/></name></expr>)<pos:position pos:line="80" pos:column="32"/></condition><then pos:line="80" pos:column="32"> <block pos:line="80" pos:column="33">{
                <expr_stmt><expr><name pos:line="81" pos:column="17">timeout_interval<pos:position pos:line="81" pos:column="33"/></name> <operator pos:line="81" pos:column="34">=<pos:position pos:line="81" pos:column="35"/></operator> <name><name pos:line="81" pos:column="36">te<pos:position pos:line="81" pos:column="38"/></name><operator pos:line="81" pos:column="38">-&gt;<pos:position pos:line="81" pos:column="43"/></operator><name pos:line="81" pos:column="40">when<pos:position pos:line="81" pos:column="44"/></name></name> <operator pos:line="81" pos:column="45">-<pos:position pos:line="81" pos:column="46"/></operator> <name pos:line="81" pos:column="47">now<pos:position pos:line="81" pos:column="50"/></name></expr>;<pos:position pos:line="81" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="82" pos:column="14"/></block></then>
            <else pos:line="83" pos:column="13">else <block pos:line="83" pos:column="18">{
                <expr_stmt><expr><name pos:line="84" pos:column="17">timeout_interval<pos:position pos:line="84" pos:column="33"/></name> <operator pos:line="84" pos:column="34">=<pos:position pos:line="84" pos:column="35"/></operator> <literal type="number" pos:line="84" pos:column="36">1<pos:position pos:line="84" pos:column="37"/></literal></expr>;<pos:position pos:line="84" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="85" pos:column="14"/></block></else></if>
        }<pos:position pos:line="86" pos:column="10"/></block></then>
        <else pos:line="87" pos:column="9">else <block pos:line="87" pos:column="14">{
            <expr_stmt><expr><name pos:line="88" pos:column="13">timeout_interval<pos:position pos:line="88" pos:column="29"/></name> <operator pos:line="88" pos:column="30">=<pos:position pos:line="88" pos:column="31"/></operator> <call><name pos:line="88" pos:column="32">apr_time_from_msec<pos:position pos:line="88" pos:column="50"/></name><argument_list pos:line="88" pos:column="50">(<argument><expr><literal type="number" pos:line="88" pos:column="51">100<pos:position pos:line="88" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="89" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="90" pos:column="32"/></name><argument_list pos:line="90" pos:column="32">(<argument><expr><name pos:line="90" pos:column="33">g_timer_skiplist_mtx<pos:position pos:line="90" pos:column="53"/></name></expr></argument>)<pos:position pos:line="90" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="55"/></expr_stmt>

        <expr_stmt><expr><name pos:line="92" pos:column="9">rc<pos:position pos:line="92" pos:column="11"/></name> <operator pos:line="92" pos:column="12">=<pos:position pos:line="92" pos:column="13"/></operator> <call><name pos:line="92" pos:column="14">apr_pollset_poll<pos:position pos:line="92" pos:column="30"/></name><argument_list pos:line="92" pos:column="30">(<argument><expr><name pos:line="92" pos:column="31">event_pollset<pos:position pos:line="92" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="46">timeout_interval<pos:position pos:line="92" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="64">&amp;<pos:position pos:line="92" pos:column="69"/></operator><name pos:line="92" pos:column="65">num<pos:position pos:line="92" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="70">&amp;<pos:position pos:line="92" pos:column="75"/></operator><name pos:line="92" pos:column="71">out_pfd<pos:position pos:line="92" pos:column="78"/></name></expr></argument>)<pos:position pos:line="92" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="80"/></expr_stmt>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">rc<pos:position pos:line="93" pos:column="15"/></name> <operator pos:line="93" pos:column="16">!=<pos:position pos:line="93" pos:column="18"/></operator> <name pos:line="93" pos:column="19">APR_SUCCESS<pos:position pos:line="93" pos:column="30"/></name></expr>)<pos:position pos:line="93" pos:column="31"/></condition><then pos:line="93" pos:column="31"> <block pos:line="93" pos:column="32">{
            <if pos:line="94" pos:column="13">if <condition pos:line="94" pos:column="16">(<expr><call><name pos:line="94" pos:column="17">APR_STATUS_IS_EINTR<pos:position pos:line="94" pos:column="36"/></name><argument_list pos:line="94" pos:column="36">(<argument><expr><name pos:line="94" pos:column="37">rc<pos:position pos:line="94" pos:column="39"/></name></expr></argument>)<pos:position pos:line="94" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="41"/></condition><then pos:line="94" pos:column="41"> <block pos:line="94" pos:column="42">{
                <continue pos:line="95" pos:column="17">continue;<pos:position pos:line="95" pos:column="26"/></continue>
            }<pos:position pos:line="96" pos:column="14"/></block></then></if>
            <if pos:line="97" pos:column="13">if <condition pos:line="97" pos:column="16">(<expr><operator pos:line="97" pos:column="17">!<pos:position pos:line="97" pos:column="18"/></operator><call><name pos:line="97" pos:column="18">APR_STATUS_IS_TIMEUP<pos:position pos:line="97" pos:column="38"/></name><argument_list pos:line="97" pos:column="38">(<argument><expr><name pos:line="97" pos:column="39">rc<pos:position pos:line="97" pos:column="41"/></name></expr></argument>)<pos:position pos:line="97" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="43"/></condition><then pos:line="97" pos:column="43"> <block pos:line="97" pos:column="44">{
                <expr_stmt><expr><call><name pos:line="98" pos:column="17">ap_log_error<pos:position pos:line="98" pos:column="29"/></name><argument_list pos:line="98" pos:column="29">(<argument><expr><name pos:line="98" pos:column="30">APLOG_MARK<pos:position pos:line="98" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="42">APLOG_CRIT<pos:position pos:line="98" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="54">rc<pos:position pos:line="98" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="58">ap_server_conf<pos:position pos:line="98" pos:column="72"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="99" pos:column="30">"apr_pollset_poll failed.  Attempting to "<pos:position pos:line="99" pos:column="72"/></literal>
                             <literal type="string" pos:line="100" pos:column="30">"shutdown process gracefully"<pos:position pos:line="100" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="101" pos:column="17">signal_threads<pos:position pos:line="101" pos:column="31"/></name><argument_list pos:line="101" pos:column="31">(<argument><expr><name pos:line="101" pos:column="32">ST_GRACEFUL<pos:position pos:line="101" pos:column="43"/></name></expr></argument>)<pos:position pos:line="101" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="102" pos:column="14"/></block></then></if>
        }<pos:position pos:line="103" pos:column="10"/></block></then></if>

        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">listener_may_exit<pos:position pos:line="105" pos:column="30"/></name></expr>)<pos:position pos:line="105" pos:column="31"/></condition><then pos:line="105" pos:column="31"> <block pos:line="105" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="106" pos:column="13">close_listeners<pos:position pos:line="106" pos:column="28"/></name><argument_list pos:line="106" pos:column="28">(<argument><expr><name pos:line="106" pos:column="29">process_slot<pos:position pos:line="106" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="43">&amp;<pos:position pos:line="106" pos:column="48"/></operator><name pos:line="106" pos:column="44">closed<pos:position pos:line="106" pos:column="50"/></name></expr></argument>)<pos:position pos:line="106" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="52"/></expr_stmt>
            <if pos:line="107" pos:column="13">if <condition pos:line="107" pos:column="16">(<expr><name pos:line="107" pos:column="17">terminate_mode<pos:position pos:line="107" pos:column="31"/></name> <operator pos:line="107" pos:column="32">==<pos:position pos:line="107" pos:column="34"/></operator> <name pos:line="107" pos:column="35">ST_UNGRACEFUL<pos:position pos:line="107" pos:column="48"/></name>
                <operator pos:line="108" pos:column="17">||<pos:position pos:line="108" pos:column="19"/></operator> <call><name pos:line="108" pos:column="20">apr_atomic_read32<pos:position pos:line="108" pos:column="37"/></name><argument_list pos:line="108" pos:column="37">(<argument><expr><operator pos:line="108" pos:column="38">&amp;<pos:position pos:line="108" pos:column="43"/></operator><name pos:line="108" pos:column="39">connection_count<pos:position pos:line="108" pos:column="55"/></name></expr></argument>)<pos:position pos:line="108" pos:column="56"/></argument_list></call> <operator pos:line="108" pos:column="57">==<pos:position pos:line="108" pos:column="59"/></operator> <literal type="number" pos:line="108" pos:column="60">0<pos:position pos:line="108" pos:column="61"/></literal></expr>)<pos:position pos:line="108" pos:column="62"/></condition><then pos:line="108" pos:column="62">
                <block type="pseudo"><break pos:line="109" pos:column="17">break;<pos:position pos:line="109" pos:column="23"/></break></block></then></if>
        }<pos:position pos:line="110" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="112" pos:column="9">now<pos:position pos:line="112" pos:column="12"/></name> <operator pos:line="112" pos:column="13">=<pos:position pos:line="112" pos:column="14"/></operator> <call><name pos:line="112" pos:column="15">apr_time_now<pos:position pos:line="112" pos:column="27"/></name><argument_list pos:line="112" pos:column="27">()<pos:position pos:line="112" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="113" pos:column="9">apr_thread_mutex_lock<pos:position pos:line="113" pos:column="30"/></name><argument_list pos:line="113" pos:column="30">(<argument><expr><name pos:line="113" pos:column="31">g_timer_skiplist_mtx<pos:position pos:line="113" pos:column="51"/></name></expr></argument>)<pos:position pos:line="113" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name pos:line="114" pos:column="9">ep<pos:position pos:line="114" pos:column="11"/></name> <operator pos:line="114" pos:column="12">=<pos:position pos:line="114" pos:column="13"/></operator> <call><name pos:line="114" pos:column="14">apr_skiplist_peek<pos:position pos:line="114" pos:column="31"/></name><argument_list pos:line="114" pos:column="31">(<argument><expr><name pos:line="114" pos:column="32">timer_skiplist<pos:position pos:line="114" pos:column="46"/></name></expr></argument>)<pos:position pos:line="114" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="48"/></expr_stmt>
        <while pos:line="115" pos:column="9">while <condition pos:line="115" pos:column="15">(<expr><name pos:line="115" pos:column="16">ep<pos:position pos:line="115" pos:column="18"/></name></expr>)<pos:position pos:line="115" pos:column="19"/></condition> <block pos:line="115" pos:column="20">{
            <if pos:line="116" pos:column="13">if <condition pos:line="116" pos:column="16">(<expr><name><name pos:line="116" pos:column="17">ep<pos:position pos:line="116" pos:column="19"/></name><operator pos:line="116" pos:column="19">-&gt;<pos:position pos:line="116" pos:column="24"/></operator><name pos:line="116" pos:column="21">when<pos:position pos:line="116" pos:column="25"/></name></name> <operator pos:line="116" pos:column="26">&lt;<pos:position pos:line="116" pos:column="30"/></operator> <name pos:line="116" pos:column="28">now<pos:position pos:line="116" pos:column="31"/></name> <operator pos:line="116" pos:column="32">+<pos:position pos:line="116" pos:column="33"/></operator> <name pos:line="116" pos:column="34">EVENT_FUDGE_FACTOR<pos:position pos:line="116" pos:column="52"/></name></expr>)<pos:position pos:line="116" pos:column="53"/></condition><then pos:line="116" pos:column="53"> <block pos:line="116" pos:column="54">{
                <expr_stmt><expr><call><name pos:line="117" pos:column="17">apr_skiplist_pop<pos:position pos:line="117" pos:column="33"/></name><argument_list pos:line="117" pos:column="33">(<argument><expr><name pos:line="117" pos:column="34">timer_skiplist<pos:position pos:line="117" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="50">NULL<pos:position pos:line="117" pos:column="54"/></name></expr></argument>)<pos:position pos:line="117" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="56"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="118" pos:column="17">push_timer2worker<pos:position pos:line="118" pos:column="34"/></name><argument_list pos:line="118" pos:column="34">(<argument><expr><name pos:line="118" pos:column="35">ep<pos:position pos:line="118" pos:column="37"/></name></expr></argument>)<pos:position pos:line="118" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="119" pos:column="14"/></block></then>
            <else pos:line="120" pos:column="13">else <block pos:line="120" pos:column="18">{
                <break pos:line="121" pos:column="17">break;<pos:position pos:line="121" pos:column="23"/></break>
            }<pos:position pos:line="122" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="123" pos:column="13">ep<pos:position pos:line="123" pos:column="15"/></name> <operator pos:line="123" pos:column="16">=<pos:position pos:line="123" pos:column="17"/></operator> <call><name pos:line="123" pos:column="18">apr_skiplist_peek<pos:position pos:line="123" pos:column="35"/></name><argument_list pos:line="123" pos:column="35">(<argument><expr><name pos:line="123" pos:column="36">timer_skiplist<pos:position pos:line="123" pos:column="50"/></name></expr></argument>)<pos:position pos:line="123" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="124" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="125" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="125" pos:column="32"/></name><argument_list pos:line="125" pos:column="32">(<argument><expr><name pos:line="125" pos:column="33">g_timer_skiplist_mtx<pos:position pos:line="125" pos:column="53"/></name></expr></argument>)<pos:position pos:line="125" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="55"/></expr_stmt>

        <while pos:line="127" pos:column="9">while <condition pos:line="127" pos:column="15">(<expr><name pos:line="127" pos:column="16">num<pos:position pos:line="127" pos:column="19"/></name></expr>)<pos:position pos:line="127" pos:column="20"/></condition> <block pos:line="127" pos:column="21">{
            <expr_stmt><expr><name pos:line="128" pos:column="13">pt<pos:position pos:line="128" pos:column="15"/></name> <operator pos:line="128" pos:column="16">=<pos:position pos:line="128" pos:column="17"/></operator> <operator pos:line="128" pos:column="18">(<pos:position pos:line="128" pos:column="19"/></operator><name pos:line="128" pos:column="19">listener_poll_type<pos:position pos:line="128" pos:column="37"/></name> <operator pos:line="128" pos:column="38">*<pos:position pos:line="128" pos:column="39"/></operator><operator pos:line="128" pos:column="39">)<pos:position pos:line="128" pos:column="40"/></operator> <name><name pos:line="128" pos:column="41">out_pfd<pos:position pos:line="128" pos:column="48"/></name><operator pos:line="128" pos:column="48">-&gt;<pos:position pos:line="128" pos:column="53"/></operator><name pos:line="128" pos:column="50">client_data<pos:position pos:line="128" pos:column="61"/></name></name></expr>;<pos:position pos:line="128" pos:column="62"/></expr_stmt>
            <if pos:line="129" pos:column="13">if <condition pos:line="129" pos:column="16">(<expr><name><name pos:line="129" pos:column="17">pt<pos:position pos:line="129" pos:column="19"/></name><operator pos:line="129" pos:column="19">-&gt;<pos:position pos:line="129" pos:column="24"/></operator><name pos:line="129" pos:column="21">type<pos:position pos:line="129" pos:column="25"/></name></name> <operator pos:line="129" pos:column="26">==<pos:position pos:line="129" pos:column="28"/></operator> <name pos:line="129" pos:column="29">PT_CSD<pos:position pos:line="129" pos:column="35"/></name></expr>)<pos:position pos:line="129" pos:column="36"/></condition><then pos:line="129" pos:column="36"> <block pos:line="129" pos:column="37">{
                <comment type="block" pos:line="130" pos:column="17">/* one of the sockets is readable */</comment>
                <decl_stmt><decl><type><name pos:line="131" pos:column="17">event_conn_state_t<pos:position pos:line="131" pos:column="35"/></name> <modifier pos:line="131" pos:column="36">*<pos:position pos:line="131" pos:column="37"/></modifier></type><name pos:line="131" pos:column="37">cs<pos:position pos:line="131" pos:column="39"/></name> <init pos:line="131" pos:column="40">= <expr><operator pos:line="131" pos:column="42">(<pos:position pos:line="131" pos:column="43"/></operator><name pos:line="131" pos:column="43">event_conn_state_t<pos:position pos:line="131" pos:column="61"/></name> <operator pos:line="131" pos:column="62">*<pos:position pos:line="131" pos:column="63"/></operator><operator pos:line="131" pos:column="63">)<pos:position pos:line="131" pos:column="64"/></operator> <name><name pos:line="131" pos:column="65">pt<pos:position pos:line="131" pos:column="67"/></name><operator pos:line="131" pos:column="67">-&gt;<pos:position pos:line="131" pos:column="72"/></operator><name pos:line="131" pos:column="69">baton<pos:position pos:line="131" pos:column="74"/></name></name></expr></init></decl>;<pos:position pos:line="131" pos:column="75"/></decl_stmt>
                <decl_stmt><decl><type><name><name pos:line="132" pos:column="17">struct<pos:position pos:line="132" pos:column="23"/></name> <name pos:line="132" pos:column="24">timeout_queue<pos:position pos:line="132" pos:column="37"/></name></name> <modifier pos:line="132" pos:column="38">*<pos:position pos:line="132" pos:column="39"/></modifier></type><name pos:line="132" pos:column="39">remove_from_q<pos:position pos:line="132" pos:column="52"/></name> <init pos:line="132" pos:column="53">= <expr><name><name pos:line="132" pos:column="55">cs<pos:position pos:line="132" pos:column="57"/></name><operator pos:line="132" pos:column="57">-&gt;<pos:position pos:line="132" pos:column="62"/></operator><name pos:line="132" pos:column="59">sc<pos:position pos:line="132" pos:column="61"/></name><operator pos:line="132" pos:column="61">-&gt;<pos:position pos:line="132" pos:column="66"/></operator><name pos:line="132" pos:column="63">wc_q<pos:position pos:line="132" pos:column="67"/></name></name></expr></init></decl>;<pos:position pos:line="132" pos:column="68"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="133" pos:column="17">int<pos:position pos:line="133" pos:column="20"/></name></type> <name pos:line="133" pos:column="21">blocking<pos:position pos:line="133" pos:column="29"/></name> <init pos:line="133" pos:column="30">= <expr><literal type="number" pos:line="133" pos:column="32">1<pos:position pos:line="133" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="133" pos:column="34"/></decl_stmt>

                <switch pos:line="135" pos:column="17">switch <condition pos:line="135" pos:column="24">(<expr><name><name pos:line="135" pos:column="25">cs<pos:position pos:line="135" pos:column="27"/></name><operator pos:line="135" pos:column="27">-&gt;<pos:position pos:line="135" pos:column="32"/></operator><name pos:line="135" pos:column="29">pub<pos:position pos:line="135" pos:column="32"/></name><operator pos:line="135" pos:column="32">.<pos:position pos:line="135" pos:column="33"/></operator><name pos:line="135" pos:column="33">state<pos:position pos:line="135" pos:column="38"/></name></name></expr>)<pos:position pos:line="135" pos:column="39"/></condition> <block pos:line="135" pos:column="40">{
                <case pos:line="136" pos:column="17">case <expr><name pos:line="136" pos:column="22">CONN_STATE_CHECK_REQUEST_LINE_READABLE<pos:position pos:line="136" pos:column="60"/></name></expr>:<pos:position pos:line="136" pos:column="61"/></case>
                    <expr_stmt><expr><name><name pos:line="137" pos:column="21">cs<pos:position pos:line="137" pos:column="23"/></name><operator pos:line="137" pos:column="23">-&gt;<pos:position pos:line="137" pos:column="28"/></operator><name pos:line="137" pos:column="25">pub<pos:position pos:line="137" pos:column="28"/></name><operator pos:line="137" pos:column="28">.<pos:position pos:line="137" pos:column="29"/></operator><name pos:line="137" pos:column="29">state<pos:position pos:line="137" pos:column="34"/></name></name> <operator pos:line="137" pos:column="35">=<pos:position pos:line="137" pos:column="36"/></operator> <name pos:line="137" pos:column="37">CONN_STATE_READ_REQUEST_LINE<pos:position pos:line="137" pos:column="65"/></name></expr>;<pos:position pos:line="137" pos:column="66"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="138" pos:column="21">remove_from_q<pos:position pos:line="138" pos:column="34"/></name> <operator pos:line="138" pos:column="35">=<pos:position pos:line="138" pos:column="36"/></operator> <name><name pos:line="138" pos:column="37">cs<pos:position pos:line="138" pos:column="39"/></name><operator pos:line="138" pos:column="39">-&gt;<pos:position pos:line="138" pos:column="44"/></operator><name pos:line="138" pos:column="41">sc<pos:position pos:line="138" pos:column="43"/></name><operator pos:line="138" pos:column="43">-&gt;<pos:position pos:line="138" pos:column="48"/></operator><name pos:line="138" pos:column="45">ka_q<pos:position pos:line="138" pos:column="49"/></name></name></expr>;<pos:position pos:line="138" pos:column="50"/></expr_stmt>
                    <comment type="block" pos:line="139" pos:column="21">/* don't wait for a worker for a keepalive request */</comment>
                    <expr_stmt><expr><name pos:line="140" pos:column="21">blocking<pos:position pos:line="140" pos:column="29"/></name> <operator pos:line="140" pos:column="30">=<pos:position pos:line="140" pos:column="31"/></operator> <literal type="number" pos:line="140" pos:column="32">0<pos:position pos:line="140" pos:column="33"/></literal></expr>;<pos:position pos:line="140" pos:column="34"/></expr_stmt>
                    <comment type="block" pos:line="141" pos:column="21">/* FALL THROUGH */</comment>
                <case pos:line="142" pos:column="17">case <expr><name pos:line="142" pos:column="22">CONN_STATE_WRITE_COMPLETION<pos:position pos:line="142" pos:column="49"/></name></expr>:<pos:position pos:line="142" pos:column="50"/></case>
                    <expr_stmt><expr><call><name pos:line="143" pos:column="21">get_worker<pos:position pos:line="143" pos:column="31"/></name><argument_list pos:line="143" pos:column="31">(<argument><expr><operator pos:line="143" pos:column="32">&amp;<pos:position pos:line="143" pos:column="37"/></operator><name pos:line="143" pos:column="33">have_idle_worker<pos:position pos:line="143" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="51">blocking<pos:position pos:line="143" pos:column="59"/></name></expr></argument>,
                               <argument><expr><operator pos:line="144" pos:column="32">&amp;<pos:position pos:line="144" pos:column="37"/></operator><name pos:line="144" pos:column="33">workers_were_busy<pos:position pos:line="144" pos:column="50"/></name></expr></argument>)<pos:position pos:line="144" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="52"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="145" pos:column="21">apr_thread_mutex_lock<pos:position pos:line="145" pos:column="42"/></name><argument_list pos:line="145" pos:column="42">(<argument><expr><name pos:line="145" pos:column="43">timeout_mutex<pos:position pos:line="145" pos:column="56"/></name></expr></argument>)<pos:position pos:line="145" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="58"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="146" pos:column="21">TO_QUEUE_REMOVE<pos:position pos:line="146" pos:column="36"/></name><argument_list pos:line="146" pos:column="36">(<argument><expr><name pos:line="146" pos:column="37">remove_from_q<pos:position pos:line="146" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="52">cs<pos:position pos:line="146" pos:column="54"/></name></expr></argument>)<pos:position pos:line="146" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="56"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="147" pos:column="21">rc<pos:position pos:line="147" pos:column="23"/></name> <operator pos:line="147" pos:column="24">=<pos:position pos:line="147" pos:column="25"/></operator> <call><name pos:line="147" pos:column="26">apr_pollset_remove<pos:position pos:line="147" pos:column="44"/></name><argument_list pos:line="147" pos:column="44">(<argument><expr><name pos:line="147" pos:column="45">event_pollset<pos:position pos:line="147" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="147" pos:column="60">&amp;<pos:position pos:line="147" pos:column="65"/></operator><name><name pos:line="147" pos:column="61">cs<pos:position pos:line="147" pos:column="63"/></name><operator pos:line="147" pos:column="63">-&gt;<pos:position pos:line="147" pos:column="68"/></operator><name pos:line="147" pos:column="65">pfd<pos:position pos:line="147" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="70"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="148" pos:column="21">apr_thread_mutex_unlock<pos:position pos:line="148" pos:column="44"/></name><argument_list pos:line="148" pos:column="44">(<argument><expr><name pos:line="148" pos:column="45">timeout_mutex<pos:position pos:line="148" pos:column="58"/></name></expr></argument>)<pos:position pos:line="148" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="60"/></expr_stmt>

                    <comment type="block" pos:line="150" pos:column="21">/*
                     * Some of the pollset backends, like KQueue or Epoll
                     * automagically remove the FD if the socket is closed,
                     * therefore, we can accept _SUCCESS or _NOTFOUND,
                     * and we still want to keep going
                     */</comment>
                    <if pos:line="156" pos:column="21">if <condition pos:line="156" pos:column="24">(<expr><name pos:line="156" pos:column="25">rc<pos:position pos:line="156" pos:column="27"/></name> <operator pos:line="156" pos:column="28">!=<pos:position pos:line="156" pos:column="30"/></operator> <name pos:line="156" pos:column="31">APR_SUCCESS<pos:position pos:line="156" pos:column="42"/></name> <operator pos:line="156" pos:column="43">&amp;&amp;<pos:position pos:line="156" pos:column="53"/></operator> <operator pos:line="156" pos:column="46">!<pos:position pos:line="156" pos:column="47"/></operator><call><name pos:line="156" pos:column="47">APR_STATUS_IS_NOTFOUND<pos:position pos:line="156" pos:column="69"/></name><argument_list pos:line="156" pos:column="69">(<argument><expr><name pos:line="156" pos:column="70">rc<pos:position pos:line="156" pos:column="72"/></name></expr></argument>)<pos:position pos:line="156" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="156" pos:column="74"/></condition><then pos:line="156" pos:column="74"> <block pos:line="156" pos:column="75">{
                        <expr_stmt><expr><call><name pos:line="157" pos:column="25">ap_log_error<pos:position pos:line="157" pos:column="37"/></name><argument_list pos:line="157" pos:column="37">(<argument><expr><name pos:line="157" pos:column="38">APLOG_MARK<pos:position pos:line="157" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="50">APLOG_ERR<pos:position pos:line="157" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="61">rc<pos:position pos:line="157" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="65">ap_server_conf<pos:position pos:line="157" pos:column="79"/></name></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="158" pos:column="38">"pollset remove failed"<pos:position pos:line="158" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="63"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="159" pos:column="25">start_lingering_close_nonblocking<pos:position pos:line="159" pos:column="58"/></name><argument_list pos:line="159" pos:column="58">(<argument><expr><name pos:line="159" pos:column="59">cs<pos:position pos:line="159" pos:column="61"/></name></expr></argument>)<pos:position pos:line="159" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="63"/></expr_stmt>
                        <break pos:line="160" pos:column="25">break;<pos:position pos:line="160" pos:column="31"/></break>
                    }<pos:position pos:line="161" pos:column="22"/></block></then></if>

                    <expr_stmt><expr><call><name pos:line="163" pos:column="21">TO_QUEUE_ELEM_INIT<pos:position pos:line="163" pos:column="39"/></name><argument_list pos:line="163" pos:column="39">(<argument><expr><name pos:line="163" pos:column="40">cs<pos:position pos:line="163" pos:column="42"/></name></expr></argument>)<pos:position pos:line="163" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="44"/></expr_stmt>
                    <comment type="block" pos:line="164" pos:column="21">/* If we didn't get a worker immediately for a keep-alive
                     * request, we close the connection, so that the client can
                     * re-connect to a different process.
                     */</comment>
                    <if pos:line="168" pos:column="21">if <condition pos:line="168" pos:column="24">(<expr><operator pos:line="168" pos:column="25">!<pos:position pos:line="168" pos:column="26"/></operator><name pos:line="168" pos:column="26">have_idle_worker<pos:position pos:line="168" pos:column="42"/></name></expr>)<pos:position pos:line="168" pos:column="43"/></condition><then pos:line="168" pos:column="43"> <block pos:line="168" pos:column="44">{
                        <expr_stmt><expr><call><name pos:line="169" pos:column="25">start_lingering_close_nonblocking<pos:position pos:line="169" pos:column="58"/></name><argument_list pos:line="169" pos:column="58">(<argument><expr><name pos:line="169" pos:column="59">cs<pos:position pos:line="169" pos:column="61"/></name></expr></argument>)<pos:position pos:line="169" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="63"/></expr_stmt>
                        <break pos:line="170" pos:column="25">break;<pos:position pos:line="170" pos:column="31"/></break>
                    }<pos:position pos:line="171" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name pos:line="172" pos:column="21">rc<pos:position pos:line="172" pos:column="23"/></name> <operator pos:line="172" pos:column="24">=<pos:position pos:line="172" pos:column="25"/></operator> <call><name pos:line="172" pos:column="26">push2worker<pos:position pos:line="172" pos:column="37"/></name><argument_list pos:line="172" pos:column="37">(<argument><expr><name pos:line="172" pos:column="38">out_pfd<pos:position pos:line="172" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="47">event_pollset<pos:position pos:line="172" pos:column="60"/></name></expr></argument>)<pos:position pos:line="172" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="62"/></expr_stmt>
                    <if pos:line="173" pos:column="21">if <condition pos:line="173" pos:column="24">(<expr><name pos:line="173" pos:column="25">rc<pos:position pos:line="173" pos:column="27"/></name> <operator pos:line="173" pos:column="28">!=<pos:position pos:line="173" pos:column="30"/></operator> <name pos:line="173" pos:column="31">APR_SUCCESS<pos:position pos:line="173" pos:column="42"/></name></expr>)<pos:position pos:line="173" pos:column="43"/></condition><then pos:line="173" pos:column="43"> <block pos:line="173" pos:column="44">{
                        <expr_stmt><expr><call><name pos:line="174" pos:column="25">ap_log_error<pos:position pos:line="174" pos:column="37"/></name><argument_list pos:line="174" pos:column="37">(<argument><expr><name pos:line="174" pos:column="38">APLOG_MARK<pos:position pos:line="174" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="50">APLOG_CRIT<pos:position pos:line="174" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="62">rc<pos:position pos:line="174" pos:column="64"/></name></expr></argument>,
                                     <argument><expr><name pos:line="175" pos:column="38">ap_server_conf<pos:position pos:line="175" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="54">"push2worker failed"<pos:position pos:line="175" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="76"/></expr_stmt>
                    }<pos:position pos:line="176" pos:column="22"/></block></then>
                    <else pos:line="177" pos:column="21">else <block pos:line="177" pos:column="26">{
                        <expr_stmt><expr><name pos:line="178" pos:column="25">have_idle_worker<pos:position pos:line="178" pos:column="41"/></name> <operator pos:line="178" pos:column="42">=<pos:position pos:line="178" pos:column="43"/></operator> <literal type="number" pos:line="178" pos:column="44">0<pos:position pos:line="178" pos:column="45"/></literal></expr>;<pos:position pos:line="178" pos:column="46"/></expr_stmt>
                    }<pos:position pos:line="179" pos:column="22"/></block></else></if>
                    <break pos:line="180" pos:column="21">break;<pos:position pos:line="180" pos:column="27"/></break>
                <case pos:line="181" pos:column="17">case <expr><name pos:line="181" pos:column="22">CONN_STATE_LINGER_NORMAL<pos:position pos:line="181" pos:column="46"/></name></expr>:<pos:position pos:line="181" pos:column="47"/></case>
                <case pos:line="182" pos:column="17">case <expr><name pos:line="182" pos:column="22">CONN_STATE_LINGER_SHORT<pos:position pos:line="182" pos:column="45"/></name></expr>:<pos:position pos:line="182" pos:column="46"/></case>
                    <expr_stmt><expr><call><name pos:line="183" pos:column="21">process_lingering_close<pos:position pos:line="183" pos:column="44"/></name><argument_list pos:line="183" pos:column="44">(<argument><expr><name pos:line="183" pos:column="45">cs<pos:position pos:line="183" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="49">out_pfd<pos:position pos:line="183" pos:column="56"/></name></expr></argument>)<pos:position pos:line="183" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="58"/></expr_stmt>
                    <break pos:line="184" pos:column="21">break;<pos:position pos:line="184" pos:column="27"/></break>
                <default pos:line="185" pos:column="17">default:<pos:position pos:line="185" pos:column="25"/></default>
                    <expr_stmt><expr><call><name pos:line="186" pos:column="21">ap_log_error<pos:position pos:line="186" pos:column="33"/></name><argument_list pos:line="186" pos:column="33">(<argument><expr><name pos:line="186" pos:column="34">APLOG_MARK<pos:position pos:line="186" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="46">APLOG_CRIT<pos:position pos:line="186" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="58">rc<pos:position pos:line="186" pos:column="60"/></name></expr></argument>,
                                 <argument><expr><name pos:line="187" pos:column="34">ap_server_conf<pos:position pos:line="187" pos:column="48"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="188" pos:column="34">"event_loop: unexpected state %d"<pos:position pos:line="188" pos:column="67"/></literal></expr></argument>,
                                 <argument><expr><name><name pos:line="189" pos:column="34">cs<pos:position pos:line="189" pos:column="36"/></name><operator pos:line="189" pos:column="36">-&gt;<pos:position pos:line="189" pos:column="41"/></operator><name pos:line="189" pos:column="38">pub<pos:position pos:line="189" pos:column="41"/></name><operator pos:line="189" pos:column="41">.<pos:position pos:line="189" pos:column="42"/></operator><name pos:line="189" pos:column="42">state<pos:position pos:line="189" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="49"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="190" pos:column="21">ap_assert<pos:position pos:line="190" pos:column="30"/></name><argument_list pos:line="190" pos:column="30">(<argument><expr><literal type="number" pos:line="190" pos:column="31">0<pos:position pos:line="190" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="34"/></expr_stmt>
                }<pos:position pos:line="191" pos:column="18"/></block></switch>
            }<pos:position pos:line="192" pos:column="14"/></block></then>
            <elseif pos:line="193" pos:column="13">else <if pos:line="193" pos:column="18">if <condition pos:line="193" pos:column="21">(<expr><name><name pos:line="193" pos:column="22">pt<pos:position pos:line="193" pos:column="24"/></name><operator pos:line="193" pos:column="24">-&gt;<pos:position pos:line="193" pos:column="29"/></operator><name pos:line="193" pos:column="26">type<pos:position pos:line="193" pos:column="30"/></name></name> <operator pos:line="193" pos:column="31">==<pos:position pos:line="193" pos:column="33"/></operator> <name pos:line="193" pos:column="34">PT_ACCEPT<pos:position pos:line="193" pos:column="43"/></name></expr>)<pos:position pos:line="193" pos:column="44"/></condition><then pos:line="193" pos:column="44"> <block pos:line="193" pos:column="45">{
                <comment type="block" pos:line="194" pos:column="17">/* A Listener Socket is ready for an accept() */</comment>
                <if pos:line="195" pos:column="17">if <condition pos:line="195" pos:column="20">(<expr><name pos:line="195" pos:column="21">workers_were_busy<pos:position pos:line="195" pos:column="38"/></name></expr>)<pos:position pos:line="195" pos:column="39"/></condition><then pos:line="195" pos:column="39"> <block pos:line="195" pos:column="40">{
                    <if pos:line="196" pos:column="21">if <condition pos:line="196" pos:column="24">(<expr><operator pos:line="196" pos:column="25">!<pos:position pos:line="196" pos:column="26"/></operator><name pos:line="196" pos:column="26">listeners_disabled<pos:position pos:line="196" pos:column="44"/></name></expr>)<pos:position pos:line="196" pos:column="45"/></condition><then pos:line="196" pos:column="45">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="197" pos:column="25">disable_listensocks<pos:position pos:line="197" pos:column="44"/></name><argument_list pos:line="197" pos:column="44">(<argument><expr><name pos:line="197" pos:column="45">process_slot<pos:position pos:line="197" pos:column="57"/></name></expr></argument>)<pos:position pos:line="197" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="59"/></expr_stmt></block></then></if>
                    <expr_stmt><expr><name pos:line="198" pos:column="21">listeners_disabled<pos:position pos:line="198" pos:column="39"/></name> <operator pos:line="198" pos:column="40">=<pos:position pos:line="198" pos:column="41"/></operator> <literal type="number" pos:line="198" pos:column="42">1<pos:position pos:line="198" pos:column="43"/></literal></expr>;<pos:position pos:line="198" pos:column="44"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="199" pos:column="21">ap_log_error<pos:position pos:line="199" pos:column="33"/></name><argument_list pos:line="199" pos:column="33">(<argument><expr><name pos:line="199" pos:column="34">APLOG_MARK<pos:position pos:line="199" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="46">APLOG_DEBUG<pos:position pos:line="199" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="199" pos:column="59">0<pos:position pos:line="199" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="199" pos:column="62">ap_server_conf<pos:position pos:line="199" pos:column="76"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="200" pos:column="34">"All workers busy, not accepting new conns "<pos:position pos:line="200" pos:column="78"/></literal>
                                 <literal type="string" pos:line="201" pos:column="34">"in this process"<pos:position pos:line="201" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="53"/></expr_stmt>
                }<pos:position pos:line="202" pos:column="18"/></block></then>
                <elseif pos:line="203" pos:column="17">else <if pos:line="203" pos:column="22">if <condition pos:line="203" pos:column="25">(  <expr><operator pos:line="203" pos:column="28">(<pos:position pos:line="203" pos:column="29"/></operator><name pos:line="203" pos:column="29">int<pos:position pos:line="203" pos:column="32"/></name><operator pos:line="203" pos:column="32">)<pos:position pos:line="203" pos:column="33"/></operator><call><name pos:line="203" pos:column="33">apr_atomic_read32<pos:position pos:line="203" pos:column="50"/></name><argument_list pos:line="203" pos:column="50">(<argument><expr><operator pos:line="203" pos:column="51">&amp;<pos:position pos:line="203" pos:column="56"/></operator><name pos:line="203" pos:column="52">connection_count<pos:position pos:line="203" pos:column="68"/></name></expr></argument>)<pos:position pos:line="203" pos:column="69"/></argument_list></call>
                           <operator pos:line="204" pos:column="28">-<pos:position pos:line="204" pos:column="29"/></operator> <operator pos:line="204" pos:column="30">(<pos:position pos:line="204" pos:column="31"/></operator><name pos:line="204" pos:column="31">int<pos:position pos:line="204" pos:column="34"/></name><operator pos:line="204" pos:column="34">)<pos:position pos:line="204" pos:column="35"/></operator><call><name pos:line="204" pos:column="35">apr_atomic_read32<pos:position pos:line="204" pos:column="52"/></name><argument_list pos:line="204" pos:column="52">(<argument><expr><operator pos:line="204" pos:column="53">&amp;<pos:position pos:line="204" pos:column="58"/></operator><name pos:line="204" pos:column="54">lingering_count<pos:position pos:line="204" pos:column="69"/></name></expr></argument>)<pos:position pos:line="204" pos:column="70"/></argument_list></call>
                         <operator pos:line="205" pos:column="26">&gt;<pos:position pos:line="205" pos:column="30"/></operator> <name pos:line="205" pos:column="28">threads_per_child<pos:position pos:line="205" pos:column="45"/></name>
                           <operator pos:line="206" pos:column="28">+<pos:position pos:line="206" pos:column="29"/></operator> <call><name pos:line="206" pos:column="30">ap_queue_info_get_idlers<pos:position pos:line="206" pos:column="54"/></name><argument_list pos:line="206" pos:column="54">(<argument><expr><name pos:line="206" pos:column="55">worker_queue_info<pos:position pos:line="206" pos:column="72"/></name></expr></argument>)<pos:position pos:line="206" pos:column="73"/></argument_list></call> <operator pos:line="206" pos:column="74">*<pos:position pos:line="206" pos:column="75"/></operator>
                             <name pos:line="207" pos:column="30">worker_factor<pos:position pos:line="207" pos:column="43"/></name> <operator pos:line="207" pos:column="44">/<pos:position pos:line="207" pos:column="45"/></operator> <name pos:line="207" pos:column="46">WORKER_FACTOR_SCALE<pos:position pos:line="207" pos:column="65"/></name></expr>)<pos:position pos:line="207" pos:column="66"/></condition><then pos:line="207" pos:column="66">
                <block pos:line="208" pos:column="17">{
                    <if pos:line="209" pos:column="21">if <condition pos:line="209" pos:column="24">(<expr><operator pos:line="209" pos:column="25">!<pos:position pos:line="209" pos:column="26"/></operator><name pos:line="209" pos:column="26">listeners_disabled<pos:position pos:line="209" pos:column="44"/></name></expr>)<pos:position pos:line="209" pos:column="45"/></condition><then pos:line="209" pos:column="45">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="210" pos:column="25">disable_listensocks<pos:position pos:line="210" pos:column="44"/></name><argument_list pos:line="210" pos:column="44">(<argument><expr><name pos:line="210" pos:column="45">process_slot<pos:position pos:line="210" pos:column="57"/></name></expr></argument>)<pos:position pos:line="210" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="59"/></expr_stmt></block></then></if>
                    <expr_stmt><expr><call><name pos:line="211" pos:column="21">ap_log_error<pos:position pos:line="211" pos:column="33"/></name><argument_list pos:line="211" pos:column="33">(<argument><expr><name pos:line="211" pos:column="34">APLOG_MARK<pos:position pos:line="211" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="211" pos:column="46">APLOG_DEBUG<pos:position pos:line="211" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="211" pos:column="59">0<pos:position pos:line="211" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="211" pos:column="62">ap_server_conf<pos:position pos:line="211" pos:column="76"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="212" pos:column="34">"Too many open connections (%u), "<pos:position pos:line="212" pos:column="68"/></literal>
                                 <literal type="string" pos:line="213" pos:column="34">"not accepting new conns in this process"<pos:position pos:line="213" pos:column="75"/></literal></expr></argument>,
                                 <argument><expr><call><name pos:line="214" pos:column="34">apr_atomic_read32<pos:position pos:line="214" pos:column="51"/></name><argument_list pos:line="214" pos:column="51">(<argument><expr><operator pos:line="214" pos:column="52">&amp;<pos:position pos:line="214" pos:column="57"/></operator><name pos:line="214" pos:column="53">connection_count<pos:position pos:line="214" pos:column="69"/></name></expr></argument>)<pos:position pos:line="214" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="214" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="72"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="215" pos:column="21">ap_log_error<pos:position pos:line="215" pos:column="33"/></name><argument_list pos:line="215" pos:column="33">(<argument><expr><name pos:line="215" pos:column="34">APLOG_MARK<pos:position pos:line="215" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="46">APLOG_TRACE1<pos:position pos:line="215" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="215" pos:column="60">0<pos:position pos:line="215" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="215" pos:column="63">ap_server_conf<pos:position pos:line="215" pos:column="77"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="216" pos:column="34">"Idle workers: %u"<pos:position pos:line="216" pos:column="52"/></literal></expr></argument>,
                                 <argument><expr><call><name pos:line="217" pos:column="34">ap_queue_info_get_idlers<pos:position pos:line="217" pos:column="58"/></name><argument_list pos:line="217" pos:column="58">(<argument><expr><name pos:line="217" pos:column="59">worker_queue_info<pos:position pos:line="217" pos:column="76"/></name></expr></argument>)<pos:position pos:line="217" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="217" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="79"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="218" pos:column="21">listeners_disabled<pos:position pos:line="218" pos:column="39"/></name> <operator pos:line="218" pos:column="40">=<pos:position pos:line="218" pos:column="41"/></operator> <literal type="number" pos:line="218" pos:column="42">1<pos:position pos:line="218" pos:column="43"/></literal></expr>;<pos:position pos:line="218" pos:column="44"/></expr_stmt>
                }<pos:position pos:line="219" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="220" pos:column="17">else <if pos:line="220" pos:column="22">if <condition pos:line="220" pos:column="25">(<expr><name pos:line="220" pos:column="26">listeners_disabled<pos:position pos:line="220" pos:column="44"/></name></expr>)<pos:position pos:line="220" pos:column="45"/></condition><then pos:line="220" pos:column="45"> <block pos:line="220" pos:column="46">{
                    <expr_stmt><expr><name pos:line="221" pos:column="21">listeners_disabled<pos:position pos:line="221" pos:column="39"/></name> <operator pos:line="221" pos:column="40">=<pos:position pos:line="221" pos:column="41"/></operator> <literal type="number" pos:line="221" pos:column="42">0<pos:position pos:line="221" pos:column="43"/></literal></expr>;<pos:position pos:line="221" pos:column="44"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="222" pos:column="21">enable_listensocks<pos:position pos:line="222" pos:column="39"/></name><argument_list pos:line="222" pos:column="39">(<argument><expr><name pos:line="222" pos:column="40">process_slot<pos:position pos:line="222" pos:column="52"/></name></expr></argument>)<pos:position pos:line="222" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="223" pos:column="18"/></block></then></if></elseif></if>
                <if pos:line="224" pos:column="17">if <condition pos:line="224" pos:column="20">(<expr><operator pos:line="224" pos:column="21">!<pos:position pos:line="224" pos:column="22"/></operator><name pos:line="224" pos:column="22">listeners_disabled<pos:position pos:line="224" pos:column="40"/></name></expr>)<pos:position pos:line="224" pos:column="41"/></condition><then pos:line="224" pos:column="41"> <block pos:line="224" pos:column="42">{
                    <expr_stmt><expr><name pos:line="225" pos:column="21">lr<pos:position pos:line="225" pos:column="23"/></name> <operator pos:line="225" pos:column="24">=<pos:position pos:line="225" pos:column="25"/></operator> <operator pos:line="225" pos:column="26">(<pos:position pos:line="225" pos:column="27"/></operator><name pos:line="225" pos:column="27">ap_listen_rec<pos:position pos:line="225" pos:column="40"/></name> <operator pos:line="225" pos:column="41">*<pos:position pos:line="225" pos:column="42"/></operator><operator pos:line="225" pos:column="42">)<pos:position pos:line="225" pos:column="43"/></operator> <name><name pos:line="225" pos:column="44">pt<pos:position pos:line="225" pos:column="46"/></name><operator pos:line="225" pos:column="46">-&gt;<pos:position pos:line="225" pos:column="51"/></operator><name pos:line="225" pos:column="48">baton<pos:position pos:line="225" pos:column="53"/></name></name></expr>;<pos:position pos:line="225" pos:column="54"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="226" pos:column="21">ap_pop_pool<pos:position pos:line="226" pos:column="32"/></name><argument_list pos:line="226" pos:column="32">(<argument><expr><operator pos:line="226" pos:column="33">&amp;<pos:position pos:line="226" pos:column="38"/></operator><name pos:line="226" pos:column="34">ptrans<pos:position pos:line="226" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="42">worker_queue_info<pos:position pos:line="226" pos:column="59"/></name></expr></argument>)<pos:position pos:line="226" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="61"/></expr_stmt>

                    <if pos:line="228" pos:column="21">if <condition pos:line="228" pos:column="24">(<expr><name pos:line="228" pos:column="25">ptrans<pos:position pos:line="228" pos:column="31"/></name> <operator pos:line="228" pos:column="32">==<pos:position pos:line="228" pos:column="34"/></operator> <name pos:line="228" pos:column="35">NULL<pos:position pos:line="228" pos:column="39"/></name></expr>)<pos:position pos:line="228" pos:column="40"/></condition><then pos:line="228" pos:column="40"> <block pos:line="228" pos:column="41">{
                        <comment type="block" pos:line="229" pos:column="25">/* create a new transaction pool for each accepted socket */</comment>
                        <decl_stmt><decl><type><name pos:line="230" pos:column="25">apr_allocator_t<pos:position pos:line="230" pos:column="40"/></name> <modifier pos:line="230" pos:column="41">*<pos:position pos:line="230" pos:column="42"/></modifier></type><name pos:line="230" pos:column="42">allocator<pos:position pos:line="230" pos:column="51"/></name></decl>;<pos:position pos:line="230" pos:column="52"/></decl_stmt>

                        <expr_stmt><expr><call><name pos:line="232" pos:column="25">apr_allocator_create<pos:position pos:line="232" pos:column="45"/></name><argument_list pos:line="232" pos:column="45">(<argument><expr><operator pos:line="232" pos:column="46">&amp;<pos:position pos:line="232" pos:column="51"/></operator><name pos:line="232" pos:column="47">allocator<pos:position pos:line="232" pos:column="56"/></name></expr></argument>)<pos:position pos:line="232" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="58"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="233" pos:column="25">apr_allocator_max_free_set<pos:position pos:line="233" pos:column="51"/></name><argument_list pos:line="233" pos:column="51">(<argument><expr><name pos:line="233" pos:column="52">allocator<pos:position pos:line="233" pos:column="61"/></name></expr></argument>,
                                                   <argument><expr><name pos:line="234" pos:column="52">ap_max_mem_free<pos:position pos:line="234" pos:column="67"/></name></expr></argument>)<pos:position pos:line="234" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="69"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="235" pos:column="25">apr_pool_create_ex<pos:position pos:line="235" pos:column="43"/></name><argument_list pos:line="235" pos:column="43">(<argument><expr><operator pos:line="235" pos:column="44">&amp;<pos:position pos:line="235" pos:column="49"/></operator><name pos:line="235" pos:column="45">ptrans<pos:position pos:line="235" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="53">pconf<pos:position pos:line="235" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="60">NULL<pos:position pos:line="235" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="66">allocator<pos:position pos:line="235" pos:column="75"/></name></expr></argument>)<pos:position pos:line="235" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="77"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="236" pos:column="25">apr_allocator_owner_set<pos:position pos:line="236" pos:column="48"/></name><argument_list pos:line="236" pos:column="48">(<argument><expr><name pos:line="236" pos:column="49">allocator<pos:position pos:line="236" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="60">ptrans<pos:position pos:line="236" pos:column="66"/></name></expr></argument>)<pos:position pos:line="236" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="68"/></expr_stmt>
                        <if pos:line="237" pos:column="25">if <condition pos:line="237" pos:column="28">(<expr><name pos:line="237" pos:column="29">ptrans<pos:position pos:line="237" pos:column="35"/></name> <operator pos:line="237" pos:column="36">==<pos:position pos:line="237" pos:column="38"/></operator> <name pos:line="237" pos:column="39">NULL<pos:position pos:line="237" pos:column="43"/></name></expr>)<pos:position pos:line="237" pos:column="44"/></condition><then pos:line="237" pos:column="44"> <block pos:line="237" pos:column="45">{
                            <expr_stmt><expr><call><name pos:line="238" pos:column="29">ap_log_error<pos:position pos:line="238" pos:column="41"/></name><argument_list pos:line="238" pos:column="41">(<argument><expr><name pos:line="238" pos:column="42">APLOG_MARK<pos:position pos:line="238" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="54">APLOG_CRIT<pos:position pos:line="238" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="66">rc<pos:position pos:line="238" pos:column="68"/></name></expr></argument>,
                                         <argument><expr><name pos:line="239" pos:column="42">ap_server_conf<pos:position pos:line="239" pos:column="56"/></name></expr></argument>,
                                         <argument><expr><literal type="string" pos:line="240" pos:column="42">"Failed to create transaction pool"<pos:position pos:line="240" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="240" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="79"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="241" pos:column="29">signal_threads<pos:position pos:line="241" pos:column="43"/></name><argument_list pos:line="241" pos:column="43">(<argument><expr><name pos:line="241" pos:column="44">ST_GRACEFUL<pos:position pos:line="241" pos:column="55"/></name></expr></argument>)<pos:position pos:line="241" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="57"/></expr_stmt>
                            <return pos:line="242" pos:column="29">return <expr><name pos:line="242" pos:column="36">NULL<pos:position pos:line="242" pos:column="40"/></name></expr>;<pos:position pos:line="242" pos:column="41"/></return>
                        }<pos:position pos:line="243" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="244" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="245" pos:column="21">apr_pool_tag<pos:position pos:line="245" pos:column="33"/></name><argument_list pos:line="245" pos:column="33">(<argument><expr><name pos:line="245" pos:column="34">ptrans<pos:position pos:line="245" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="245" pos:column="42">"transaction"<pos:position pos:line="245" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="245" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="57"/></expr_stmt>

                    <expr_stmt><expr><call><name pos:line="247" pos:column="21">get_worker<pos:position pos:line="247" pos:column="31"/></name><argument_list pos:line="247" pos:column="31">(<argument><expr><operator pos:line="247" pos:column="32">&amp;<pos:position pos:line="247" pos:column="37"/></operator><name pos:line="247" pos:column="33">have_idle_worker<pos:position pos:line="247" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="247" pos:column="51">1<pos:position pos:line="247" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="247" pos:column="54">&amp;<pos:position pos:line="247" pos:column="59"/></operator><name pos:line="247" pos:column="55">workers_were_busy<pos:position pos:line="247" pos:column="72"/></name></expr></argument>)<pos:position pos:line="247" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="74"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="248" pos:column="21">rc<pos:position pos:line="248" pos:column="23"/></name> <operator pos:line="248" pos:column="24">=<pos:position pos:line="248" pos:column="25"/></operator> <call><name><name pos:line="248" pos:column="26">lr<pos:position pos:line="248" pos:column="28"/></name><operator pos:line="248" pos:column="28">-&gt;<pos:position pos:line="248" pos:column="33"/></operator><name pos:line="248" pos:column="30">accept_func<pos:position pos:line="248" pos:column="41"/></name></name><argument_list pos:line="248" pos:column="41">(<argument><expr><operator pos:line="248" pos:column="42">&amp;<pos:position pos:line="248" pos:column="47"/></operator><name pos:line="248" pos:column="43">csd<pos:position pos:line="248" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="48">lr<pos:position pos:line="248" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="52">ptrans<pos:position pos:line="248" pos:column="58"/></name></expr></argument>)<pos:position pos:line="248" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="60"/></expr_stmt>

                    <comment type="block" pos:line="250" pos:column="21">/* later we trash rv and rely on csd to indicate
                     * success/failure
                     */</comment>
                    <expr_stmt><expr><call><name pos:line="253" pos:column="21">AP_DEBUG_ASSERT<pos:position pos:line="253" pos:column="36"/></name><argument_list pos:line="253" pos:column="36">(<argument><expr><name pos:line="253" pos:column="37">rc<pos:position pos:line="253" pos:column="39"/></name> <operator pos:line="253" pos:column="40">==<pos:position pos:line="253" pos:column="42"/></operator> <name pos:line="253" pos:column="43">APR_SUCCESS<pos:position pos:line="253" pos:column="54"/></name> <operator pos:line="253" pos:column="55">||<pos:position pos:line="253" pos:column="57"/></operator> <operator pos:line="253" pos:column="58">!<pos:position pos:line="253" pos:column="59"/></operator><name pos:line="253" pos:column="59">csd<pos:position pos:line="253" pos:column="62"/></name></expr></argument>)<pos:position pos:line="253" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="64"/></expr_stmt>

                    <if pos:line="255" pos:column="21">if <condition pos:line="255" pos:column="24">(<expr><name pos:line="255" pos:column="25">rc<pos:position pos:line="255" pos:column="27"/></name> <operator pos:line="255" pos:column="28">==<pos:position pos:line="255" pos:column="30"/></operator> <name pos:line="255" pos:column="31">APR_EGENERAL<pos:position pos:line="255" pos:column="43"/></name></expr>)<pos:position pos:line="255" pos:column="44"/></condition><then pos:line="255" pos:column="44"> <block pos:line="255" pos:column="45">{
                        <comment type="block" pos:line="256" pos:column="25">/* E[NM]FILE, ENOMEM, etc */</comment>
                        <expr_stmt><expr><name pos:line="257" pos:column="25">resource_shortage<pos:position pos:line="257" pos:column="42"/></name> <operator pos:line="257" pos:column="43">=<pos:position pos:line="257" pos:column="44"/></operator> <literal type="number" pos:line="257" pos:column="45">1<pos:position pos:line="257" pos:column="46"/></literal></expr>;<pos:position pos:line="257" pos:column="47"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="258" pos:column="25">signal_threads<pos:position pos:line="258" pos:column="39"/></name><argument_list pos:line="258" pos:column="39">(<argument><expr><name pos:line="258" pos:column="40">ST_GRACEFUL<pos:position pos:line="258" pos:column="51"/></name></expr></argument>)<pos:position pos:line="258" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="53"/></expr_stmt>
                    }<pos:position pos:line="259" pos:column="22"/></block></then></if>

                    <if pos:line="261" pos:column="21">if <condition pos:line="261" pos:column="24">(<expr><name pos:line="261" pos:column="25">csd<pos:position pos:line="261" pos:column="28"/></name> <operator pos:line="261" pos:column="29">!=<pos:position pos:line="261" pos:column="31"/></operator> <name pos:line="261" pos:column="32">NULL<pos:position pos:line="261" pos:column="36"/></name></expr>)<pos:position pos:line="261" pos:column="37"/></condition><then pos:line="261" pos:column="37"> <block pos:line="261" pos:column="38">{
                        <expr_stmt><expr><name pos:line="262" pos:column="25">conns_this_child<pos:position pos:line="262" pos:column="41"/></name><operator pos:line="262" pos:column="41">--<pos:position pos:line="262" pos:column="43"/></operator></expr>;<pos:position pos:line="262" pos:column="44"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="263" pos:column="25">rc<pos:position pos:line="263" pos:column="27"/></name> <operator pos:line="263" pos:column="28">=<pos:position pos:line="263" pos:column="29"/></operator> <call><name pos:line="263" pos:column="30">ap_queue_push<pos:position pos:line="263" pos:column="43"/></name><argument_list pos:line="263" pos:column="43">(<argument><expr><name pos:line="263" pos:column="44">worker_queue<pos:position pos:line="263" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="58">csd<pos:position pos:line="263" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="63">NULL<pos:position pos:line="263" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="69">ptrans<pos:position pos:line="263" pos:column="75"/></name></expr></argument>)<pos:position pos:line="263" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="77"/></expr_stmt>
                        <if pos:line="264" pos:column="25">if <condition pos:line="264" pos:column="28">(<expr><name pos:line="264" pos:column="29">rc<pos:position pos:line="264" pos:column="31"/></name> <operator pos:line="264" pos:column="32">!=<pos:position pos:line="264" pos:column="34"/></operator> <name pos:line="264" pos:column="35">APR_SUCCESS<pos:position pos:line="264" pos:column="46"/></name></expr>)<pos:position pos:line="264" pos:column="47"/></condition><then pos:line="264" pos:column="47"> <block pos:line="264" pos:column="48">{
                            <comment type="block" pos:line="265" pos:column="29">/* trash the connection; we couldn't queue the connected
                             * socket to a worker
                             */</comment>
                            <expr_stmt><expr><call><name pos:line="268" pos:column="29">apr_socket_close<pos:position pos:line="268" pos:column="45"/></name><argument_list pos:line="268" pos:column="45">(<argument><expr><name pos:line="268" pos:column="46">csd<pos:position pos:line="268" pos:column="49"/></name></expr></argument>)<pos:position pos:line="268" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="51"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="269" pos:column="29">ap_log_error<pos:position pos:line="269" pos:column="41"/></name><argument_list pos:line="269" pos:column="41">(<argument><expr><name pos:line="269" pos:column="42">APLOG_MARK<pos:position pos:line="269" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="54">APLOG_CRIT<pos:position pos:line="269" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="66">rc<pos:position pos:line="269" pos:column="68"/></name></expr></argument>,
                                         <argument><expr><name pos:line="270" pos:column="42">ap_server_conf<pos:position pos:line="270" pos:column="56"/></name></expr></argument>,
                                         <argument><expr><literal type="string" pos:line="271" pos:column="42">"ap_queue_push failed"<pos:position pos:line="271" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="271" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="66"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="272" pos:column="29">ap_push_pool<pos:position pos:line="272" pos:column="41"/></name><argument_list pos:line="272" pos:column="41">(<argument><expr><name pos:line="272" pos:column="42">worker_queue_info<pos:position pos:line="272" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="272" pos:column="61">ptrans<pos:position pos:line="272" pos:column="67"/></name></expr></argument>)<pos:position pos:line="272" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="69"/></expr_stmt>
                        }<pos:position pos:line="273" pos:column="26"/></block></then>
                        <else pos:line="274" pos:column="25">else <block pos:line="274" pos:column="30">{
                            <expr_stmt><expr><name pos:line="275" pos:column="29">have_idle_worker<pos:position pos:line="275" pos:column="45"/></name> <operator pos:line="275" pos:column="46">=<pos:position pos:line="275" pos:column="47"/></operator> <literal type="number" pos:line="275" pos:column="48">0<pos:position pos:line="275" pos:column="49"/></literal></expr>;<pos:position pos:line="275" pos:column="50"/></expr_stmt>
                        }<pos:position pos:line="276" pos:column="26"/></block></else></if>
                    }<pos:position pos:line="277" pos:column="22"/></block></then>
                    <else pos:line="278" pos:column="21">else <block pos:line="278" pos:column="26">{
                        <expr_stmt><expr><call><name pos:line="279" pos:column="25">ap_push_pool<pos:position pos:line="279" pos:column="37"/></name><argument_list pos:line="279" pos:column="37">(<argument><expr><name pos:line="279" pos:column="38">worker_queue_info<pos:position pos:line="279" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="279" pos:column="57">ptrans<pos:position pos:line="279" pos:column="63"/></name></expr></argument>)<pos:position pos:line="279" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="65"/></expr_stmt>
                    }<pos:position pos:line="280" pos:column="22"/></block></else></if>
                }<pos:position pos:line="281" pos:column="18"/></block></then></if>
            }<pos:position pos:line="282" pos:column="14"/></block></then></if></elseif></if>               <comment type="block" pos:line="282" pos:column="29">/* if:else on pt-&gt;type */</comment>
            <expr_stmt><expr><name pos:line="283" pos:column="13">out_pfd<pos:position pos:line="283" pos:column="20"/></name><operator pos:line="283" pos:column="20">++<pos:position pos:line="283" pos:column="22"/></operator></expr>;<pos:position pos:line="283" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="284" pos:column="13">num<pos:position pos:line="284" pos:column="16"/></name><operator pos:line="284" pos:column="16">--<pos:position pos:line="284" pos:column="18"/></operator></expr>;<pos:position pos:line="284" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="285" pos:column="10"/></block></while>                   <comment type="block" pos:line="285" pos:column="29">/* while for processing poll */</comment>

        <comment type="block" pos:line="287" pos:column="9">/* XXX possible optimization: stash the current time for use as
         * r-&gt;request_time for new requests
         */</comment>
        <expr_stmt><expr><name pos:line="290" pos:column="9">now<pos:position pos:line="290" pos:column="12"/></name> <operator pos:line="290" pos:column="13">=<pos:position pos:line="290" pos:column="14"/></operator> <call><name pos:line="290" pos:column="15">apr_time_now<pos:position pos:line="290" pos:column="27"/></name><argument_list pos:line="290" pos:column="27">()<pos:position pos:line="290" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="30"/></expr_stmt>
        <comment type="block" pos:line="291" pos:column="9">/* We only do this once per 0.1s (TIMEOUT_FUDGE_FACTOR), or on a clock
         * skew (if the system time is set back in the meantime, timeout_time
         * will exceed now + TIMEOUT_FUDGE_FACTOR, can't happen otherwise).
         */</comment>
        <if pos:line="295" pos:column="9">if <condition pos:line="295" pos:column="12">(<expr><name pos:line="295" pos:column="13">now<pos:position pos:line="295" pos:column="16"/></name> <operator pos:line="295" pos:column="17">&gt;<pos:position pos:line="295" pos:column="21"/></operator> <name pos:line="295" pos:column="19">timeout_time<pos:position pos:line="295" pos:column="31"/></name> <operator pos:line="295" pos:column="32">||<pos:position pos:line="295" pos:column="34"/></operator> <name pos:line="295" pos:column="35">now<pos:position pos:line="295" pos:column="38"/></name> <operator pos:line="295" pos:column="39">+<pos:position pos:line="295" pos:column="40"/></operator> <name pos:line="295" pos:column="41">TIMEOUT_FUDGE_FACTOR<pos:position pos:line="295" pos:column="61"/></name> <operator pos:line="295" pos:column="62">&lt;<pos:position pos:line="295" pos:column="66"/></operator> <name pos:line="295" pos:column="64">timeout_time<pos:position pos:line="295" pos:column="76"/></name></expr> )<pos:position pos:line="295" pos:column="78"/></condition><then pos:line="295" pos:column="78"> <block pos:line="295" pos:column="79">{
            <decl_stmt><decl><type><name><name pos:line="296" pos:column="13">struct<pos:position pos:line="296" pos:column="19"/></name> <name pos:line="296" pos:column="20">process_score<pos:position pos:line="296" pos:column="33"/></name></name> <modifier pos:line="296" pos:column="34">*<pos:position pos:line="296" pos:column="35"/></modifier></type><name pos:line="296" pos:column="35">ps<pos:position pos:line="296" pos:column="37"/></name></decl>;<pos:position pos:line="296" pos:column="38"/></decl_stmt>
            <expr_stmt><expr><name pos:line="297" pos:column="13">timeout_time<pos:position pos:line="297" pos:column="25"/></name> <operator pos:line="297" pos:column="26">=<pos:position pos:line="297" pos:column="27"/></operator> <name pos:line="297" pos:column="28">now<pos:position pos:line="297" pos:column="31"/></name> <operator pos:line="297" pos:column="32">+<pos:position pos:line="297" pos:column="33"/></operator> <name pos:line="297" pos:column="34">TIMEOUT_FUDGE_FACTOR<pos:position pos:line="297" pos:column="54"/></name></expr>;<pos:position pos:line="297" pos:column="55"/></expr_stmt>

            <comment type="block" pos:line="299" pos:column="13">/* handle timed out sockets */</comment>
            <expr_stmt><expr><call><name pos:line="300" pos:column="13">apr_thread_mutex_lock<pos:position pos:line="300" pos:column="34"/></name><argument_list pos:line="300" pos:column="34">(<argument><expr><name pos:line="300" pos:column="35">timeout_mutex<pos:position pos:line="300" pos:column="48"/></name></expr></argument>)<pos:position pos:line="300" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="50"/></expr_stmt>

            <comment type="block" pos:line="302" pos:column="13">/* Step 1: keepalive timeouts */</comment>
            <comment type="block" pos:line="303" pos:column="13">/* If all workers are busy, we kill older keep-alive connections so that they
             * may connect to another process.
             */</comment>
            <if pos:line="306" pos:column="13">if <condition pos:line="306" pos:column="16">(<expr><name pos:line="306" pos:column="17">workers_were_busy<pos:position pos:line="306" pos:column="34"/></name> <operator pos:line="306" pos:column="35">&amp;&amp;<pos:position pos:line="306" pos:column="45"/></operator> <operator pos:line="306" pos:column="38">*<pos:position pos:line="306" pos:column="39"/></operator><name><name pos:line="306" pos:column="39">keepalive_q<pos:position pos:line="306" pos:column="50"/></name><operator pos:line="306" pos:column="50">-&gt;<pos:position pos:line="306" pos:column="55"/></operator><name pos:line="306" pos:column="52">total<pos:position pos:line="306" pos:column="57"/></name></name></expr>)<pos:position pos:line="306" pos:column="58"/></condition><then pos:line="306" pos:column="58"> <block pos:line="306" pos:column="59">{
                <expr_stmt><expr><call><name pos:line="307" pos:column="17">ap_log_error<pos:position pos:line="307" pos:column="29"/></name><argument_list pos:line="307" pos:column="29">(<argument><expr><name pos:line="307" pos:column="30">APLOG_MARK<pos:position pos:line="307" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="307" pos:column="42">APLOG_TRACE1<pos:position pos:line="307" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="307" pos:column="56">0<pos:position pos:line="307" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="307" pos:column="59">ap_server_conf<pos:position pos:line="307" pos:column="73"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="308" pos:column="30">"All workers are busy, will close %d keep-alive "<pos:position pos:line="308" pos:column="79"/></literal>
                             <literal type="string" pos:line="309" pos:column="30">"connections"<pos:position pos:line="309" pos:column="43"/></literal></expr></argument>,
                             <argument><expr><operator pos:line="310" pos:column="30">*<pos:position pos:line="310" pos:column="31"/></operator><name><name pos:line="310" pos:column="31">keepalive_q<pos:position pos:line="310" pos:column="42"/></name><operator pos:line="310" pos:column="42">-&gt;<pos:position pos:line="310" pos:column="47"/></operator><name pos:line="310" pos:column="44">total<pos:position pos:line="310" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="310" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="311" pos:column="17">process_timeout_queue<pos:position pos:line="311" pos:column="38"/></name><argument_list pos:line="311" pos:column="38">(<argument><expr><name pos:line="311" pos:column="39">keepalive_q<pos:position pos:line="311" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="311" pos:column="52">0<pos:position pos:line="311" pos:column="53"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="312" pos:column="39">start_lingering_close_nonblocking<pos:position pos:line="312" pos:column="72"/></name></expr></argument>)<pos:position pos:line="312" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="74"/></expr_stmt>
            }<pos:position pos:line="313" pos:column="14"/></block></then>
            <else pos:line="314" pos:column="13">else <block pos:line="314" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="315" pos:column="17">process_timeout_queue<pos:position pos:line="315" pos:column="38"/></name><argument_list pos:line="315" pos:column="38">(<argument><expr><name pos:line="315" pos:column="39">keepalive_q<pos:position pos:line="315" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="315" pos:column="52">timeout_time<pos:position pos:line="315" pos:column="64"/></name></expr></argument>,
                                      <argument><expr><name pos:line="316" pos:column="39">start_lingering_close_nonblocking<pos:position pos:line="316" pos:column="72"/></name></expr></argument>)<pos:position pos:line="316" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="74"/></expr_stmt>
            }<pos:position pos:line="317" pos:column="14"/></block></else></if>
            <comment type="block" pos:line="318" pos:column="13">/* Step 2: write completion timeouts */</comment>
            <expr_stmt><expr><call><name pos:line="319" pos:column="13">process_timeout_queue<pos:position pos:line="319" pos:column="34"/></name><argument_list pos:line="319" pos:column="34">(<argument><expr><name pos:line="319" pos:column="35">write_completion_q<pos:position pos:line="319" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="319" pos:column="55">timeout_time<pos:position pos:line="319" pos:column="67"/></name></expr></argument>,
                                  <argument><expr><name pos:line="320" pos:column="35">start_lingering_close_nonblocking<pos:position pos:line="320" pos:column="68"/></name></expr></argument>)<pos:position pos:line="320" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="70"/></expr_stmt>
            <comment type="block" pos:line="321" pos:column="13">/* Step 3: (normal) lingering close completion timeouts */</comment>
            <expr_stmt><expr><call><name pos:line="322" pos:column="13">process_timeout_queue<pos:position pos:line="322" pos:column="34"/></name><argument_list pos:line="322" pos:column="34">(<argument><expr><name pos:line="322" pos:column="35">linger_q<pos:position pos:line="322" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="322" pos:column="45">timeout_time<pos:position pos:line="322" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="322" pos:column="59">stop_lingering_close<pos:position pos:line="322" pos:column="79"/></name></expr></argument>)<pos:position pos:line="322" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="81"/></expr_stmt>
            <comment type="block" pos:line="323" pos:column="13">/* Step 4: (short) lingering close completion timeouts */</comment>
            <expr_stmt><expr><call><name pos:line="324" pos:column="13">process_timeout_queue<pos:position pos:line="324" pos:column="34"/></name><argument_list pos:line="324" pos:column="34">(<argument><expr><name pos:line="324" pos:column="35">short_linger_q<pos:position pos:line="324" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="324" pos:column="51">timeout_time<pos:position pos:line="324" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="324" pos:column="65">stop_lingering_close<pos:position pos:line="324" pos:column="85"/></name></expr></argument>)<pos:position pos:line="324" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="87"/></expr_stmt>

            <expr_stmt><expr><name pos:line="326" pos:column="13">ps<pos:position pos:line="326" pos:column="15"/></name> <operator pos:line="326" pos:column="16">=<pos:position pos:line="326" pos:column="17"/></operator> <call><name pos:line="326" pos:column="18">ap_get_scoreboard_process<pos:position pos:line="326" pos:column="43"/></name><argument_list pos:line="326" pos:column="43">(<argument><expr><name pos:line="326" pos:column="44">process_slot<pos:position pos:line="326" pos:column="56"/></name></expr></argument>)<pos:position pos:line="326" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="327" pos:column="13">ps<pos:position pos:line="327" pos:column="15"/></name><operator pos:line="327" pos:column="15">-&gt;<pos:position pos:line="327" pos:column="20"/></operator><name pos:line="327" pos:column="17">write_completion<pos:position pos:line="327" pos:column="33"/></name></name> <operator pos:line="327" pos:column="34">=<pos:position pos:line="327" pos:column="35"/></operator> <operator pos:line="327" pos:column="36">*<pos:position pos:line="327" pos:column="37"/></operator><name><name pos:line="327" pos:column="37">write_completion_q<pos:position pos:line="327" pos:column="55"/></name><operator pos:line="327" pos:column="55">-&gt;<pos:position pos:line="327" pos:column="60"/></operator><name pos:line="327" pos:column="57">total<pos:position pos:line="327" pos:column="62"/></name></name></expr>;<pos:position pos:line="327" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="328" pos:column="13">ps<pos:position pos:line="328" pos:column="15"/></name><operator pos:line="328" pos:column="15">-&gt;<pos:position pos:line="328" pos:column="20"/></operator><name pos:line="328" pos:column="17">keep_alive<pos:position pos:line="328" pos:column="27"/></name></name> <operator pos:line="328" pos:column="28">=<pos:position pos:line="328" pos:column="29"/></operator> <operator pos:line="328" pos:column="30">*<pos:position pos:line="328" pos:column="31"/></operator><name><name pos:line="328" pos:column="31">keepalive_q<pos:position pos:line="328" pos:column="42"/></name><operator pos:line="328" pos:column="42">-&gt;<pos:position pos:line="328" pos:column="47"/></operator><name pos:line="328" pos:column="44">total<pos:position pos:line="328" pos:column="49"/></name></name></expr>;<pos:position pos:line="328" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="329" pos:column="13">apr_thread_mutex_unlock<pos:position pos:line="329" pos:column="36"/></name><argument_list pos:line="329" pos:column="36">(<argument><expr><name pos:line="329" pos:column="37">timeout_mutex<pos:position pos:line="329" pos:column="50"/></name></expr></argument>)<pos:position pos:line="329" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="329" pos:column="52"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="331" pos:column="13">ps<pos:position pos:line="331" pos:column="15"/></name><operator pos:line="331" pos:column="15">-&gt;<pos:position pos:line="331" pos:column="20"/></operator><name pos:line="331" pos:column="17">connections<pos:position pos:line="331" pos:column="28"/></name></name> <operator pos:line="331" pos:column="29">=<pos:position pos:line="331" pos:column="30"/></operator> <call><name pos:line="331" pos:column="31">apr_atomic_read32<pos:position pos:line="331" pos:column="48"/></name><argument_list pos:line="331" pos:column="48">(<argument><expr><operator pos:line="331" pos:column="49">&amp;<pos:position pos:line="331" pos:column="54"/></operator><name pos:line="331" pos:column="50">connection_count<pos:position pos:line="331" pos:column="66"/></name></expr></argument>)<pos:position pos:line="331" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="332" pos:column="13">ps<pos:position pos:line="332" pos:column="15"/></name><operator pos:line="332" pos:column="15">-&gt;<pos:position pos:line="332" pos:column="20"/></operator><name pos:line="332" pos:column="17">suspended<pos:position pos:line="332" pos:column="26"/></name></name> <operator pos:line="332" pos:column="27">=<pos:position pos:line="332" pos:column="28"/></operator> <call><name pos:line="332" pos:column="29">apr_atomic_read32<pos:position pos:line="332" pos:column="46"/></name><argument_list pos:line="332" pos:column="46">(<argument><expr><operator pos:line="332" pos:column="47">&amp;<pos:position pos:line="332" pos:column="52"/></operator><name pos:line="332" pos:column="48">suspended_count<pos:position pos:line="332" pos:column="63"/></name></expr></argument>)<pos:position pos:line="332" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="333" pos:column="13">ps<pos:position pos:line="333" pos:column="15"/></name><operator pos:line="333" pos:column="15">-&gt;<pos:position pos:line="333" pos:column="20"/></operator><name pos:line="333" pos:column="17">lingering_close<pos:position pos:line="333" pos:column="32"/></name></name> <operator pos:line="333" pos:column="33">=<pos:position pos:line="333" pos:column="34"/></operator> <call><name pos:line="333" pos:column="35">apr_atomic_read32<pos:position pos:line="333" pos:column="52"/></name><argument_list pos:line="333" pos:column="52">(<argument><expr><operator pos:line="333" pos:column="53">&amp;<pos:position pos:line="333" pos:column="58"/></operator><name pos:line="333" pos:column="54">lingering_count<pos:position pos:line="333" pos:column="69"/></name></expr></argument>)<pos:position pos:line="333" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="334" pos:column="10"/></block></then></if>
        <if pos:line="335" pos:column="9">if <condition pos:line="335" pos:column="12">(<expr><name pos:line="335" pos:column="13">listeners_disabled<pos:position pos:line="335" pos:column="31"/></name> <operator pos:line="335" pos:column="32">&amp;&amp;<pos:position pos:line="335" pos:column="42"/></operator> <operator pos:line="335" pos:column="35">!<pos:position pos:line="335" pos:column="36"/></operator><name pos:line="335" pos:column="36">workers_were_busy<pos:position pos:line="335" pos:column="53"/></name>
            <operator pos:line="336" pos:column="13">&amp;&amp;<pos:position pos:line="336" pos:column="23"/></operator> <operator pos:line="336" pos:column="16">(<pos:position pos:line="336" pos:column="17"/></operator><name pos:line="336" pos:column="17">int<pos:position pos:line="336" pos:column="20"/></name><operator pos:line="336" pos:column="20">)<pos:position pos:line="336" pos:column="21"/></operator><call><name pos:line="336" pos:column="21">apr_atomic_read32<pos:position pos:line="336" pos:column="38"/></name><argument_list pos:line="336" pos:column="38">(<argument><expr><operator pos:line="336" pos:column="39">&amp;<pos:position pos:line="336" pos:column="44"/></operator><name pos:line="336" pos:column="40">connection_count<pos:position pos:line="336" pos:column="56"/></name></expr></argument>)<pos:position pos:line="336" pos:column="57"/></argument_list></call>
               <operator pos:line="337" pos:column="16">-<pos:position pos:line="337" pos:column="17"/></operator> <operator pos:line="337" pos:column="18">(<pos:position pos:line="337" pos:column="19"/></operator><name pos:line="337" pos:column="19">int<pos:position pos:line="337" pos:column="22"/></name><operator pos:line="337" pos:column="22">)<pos:position pos:line="337" pos:column="23"/></operator><call><name pos:line="337" pos:column="23">apr_atomic_read32<pos:position pos:line="337" pos:column="40"/></name><argument_list pos:line="337" pos:column="40">(<argument><expr><operator pos:line="337" pos:column="41">&amp;<pos:position pos:line="337" pos:column="46"/></operator><name pos:line="337" pos:column="42">lingering_count<pos:position pos:line="337" pos:column="57"/></name></expr></argument>)<pos:position pos:line="337" pos:column="58"/></argument_list></call>
               <operator pos:line="338" pos:column="16">&lt;<pos:position pos:line="338" pos:column="20"/></operator> <operator pos:line="338" pos:column="18">(<pos:position pos:line="338" pos:column="19"/></operator><operator pos:line="338" pos:column="19">(<pos:position pos:line="338" pos:column="20"/></operator><name pos:line="338" pos:column="20">int<pos:position pos:line="338" pos:column="23"/></name><operator pos:line="338" pos:column="23">)<pos:position pos:line="338" pos:column="24"/></operator><call><name pos:line="338" pos:column="24">ap_queue_info_get_idlers<pos:position pos:line="338" pos:column="48"/></name><argument_list pos:line="338" pos:column="48">(<argument><expr><name pos:line="338" pos:column="49">worker_queue_info<pos:position pos:line="338" pos:column="66"/></name></expr></argument>)<pos:position pos:line="338" pos:column="67"/></argument_list></call> <operator pos:line="338" pos:column="68">-<pos:position pos:line="338" pos:column="69"/></operator> <literal type="number" pos:line="338" pos:column="70">1<pos:position pos:line="338" pos:column="71"/></literal><operator pos:line="338" pos:column="71">)<pos:position pos:line="338" pos:column="72"/></operator>
                 <operator pos:line="339" pos:column="18">*<pos:position pos:line="339" pos:column="19"/></operator> <name pos:line="339" pos:column="20">worker_factor<pos:position pos:line="339" pos:column="33"/></name> <operator pos:line="339" pos:column="34">/<pos:position pos:line="339" pos:column="35"/></operator> <name pos:line="339" pos:column="36">WORKER_FACTOR_SCALE<pos:position pos:line="339" pos:column="55"/></name> <operator pos:line="339" pos:column="56">+<pos:position pos:line="339" pos:column="57"/></operator> <name pos:line="339" pos:column="58">threads_per_child<pos:position pos:line="339" pos:column="75"/></name></expr>)<pos:position pos:line="339" pos:column="76"/></condition><then pos:line="339" pos:column="76">
        <block pos:line="340" pos:column="9">{
            <expr_stmt><expr><name pos:line="341" pos:column="13">listeners_disabled<pos:position pos:line="341" pos:column="31"/></name> <operator pos:line="341" pos:column="32">=<pos:position pos:line="341" pos:column="33"/></operator> <literal type="number" pos:line="341" pos:column="34">0<pos:position pos:line="341" pos:column="35"/></literal></expr>;<pos:position pos:line="341" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="342" pos:column="13">enable_listensocks<pos:position pos:line="342" pos:column="31"/></name><argument_list pos:line="342" pos:column="31">(<argument><expr><name pos:line="342" pos:column="32">process_slot<pos:position pos:line="342" pos:column="44"/></name></expr></argument>)<pos:position pos:line="342" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="342" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="343" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="344" pos:column="9">/*
         * XXX: do we need to set some timeout that re-enables the listensocks
         * XXX: in case no other event occurs?
         */</comment>
    }<pos:position pos:line="348" pos:column="6"/></block></for>     <comment type="block" pos:line="348" pos:column="11">/* listener main loop */</comment>

    <expr_stmt><expr><call><name pos:line="350" pos:column="5">close_listeners<pos:position pos:line="350" pos:column="20"/></name><argument_list pos:line="350" pos:column="20">(<argument><expr><name pos:line="350" pos:column="21">process_slot<pos:position pos:line="350" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="350" pos:column="35">&amp;<pos:position pos:line="350" pos:column="40"/></operator><name pos:line="350" pos:column="36">closed<pos:position pos:line="350" pos:column="42"/></name></expr></argument>)<pos:position pos:line="350" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="351" pos:column="5">ap_queue_term<pos:position pos:line="351" pos:column="18"/></name><argument_list pos:line="351" pos:column="18">(<argument><expr><name pos:line="351" pos:column="19">worker_queue<pos:position pos:line="351" pos:column="31"/></name></expr></argument>)<pos:position pos:line="351" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="353" pos:column="5">apr_thread_exit<pos:position pos:line="353" pos:column="20"/></name><argument_list pos:line="353" pos:column="20">(<argument><expr><name pos:line="353" pos:column="21">thd<pos:position pos:line="353" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="353" pos:column="26">APR_SUCCESS<pos:position pos:line="353" pos:column="37"/></name></expr></argument>)<pos:position pos:line="353" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="39"/></expr_stmt>
    <return pos:line="354" pos:column="5">return <expr><name pos:line="354" pos:column="12">NULL<pos:position pos:line="354" pos:column="16"/></name></expr>;<pos:position pos:line="354" pos:column="17"/></return>
}<pos:position pos:line="355" pos:column="2"/></block></function></unit>

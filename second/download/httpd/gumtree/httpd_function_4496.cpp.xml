<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4496.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">proxy_match_ipaddr<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">dirconn_entry<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">This<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">request_rec<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">r<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="12">ip_addr<pos:position pos:line="3" pos:column="19"/></name><index pos:line="3" pos:column="19">[<expr><literal type="number" pos:line="3" pos:column="20">4<pos:position pos:line="3" pos:column="21"/></literal></expr>]<pos:position pos:line="3" pos:column="22"/></index></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">in_addr<pos:position pos:line="4" pos:column="19"/></name></name></type> <name pos:line="4" pos:column="20">addr<pos:position pos:line="4" pos:column="24"/></name></decl>, <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="27">ip<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">host<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><call><name pos:line="5" pos:column="24">proxy_get_host_of_request<pos:position pos:line="5" pos:column="49"/></name><argument_list pos:line="5" pos:column="49">(<argument><expr><name pos:line="5" pos:column="50">r<pos:position pos:line="5" pos:column="51"/></name></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">host<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">==<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">NULL<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22"> <block pos:line="7" pos:column="23">{   <comment type="block" pos:line="7" pos:column="27">/* oops! */</comment>
       <return pos:line="8" pos:column="8">return <expr><literal type="number" pos:line="8" pos:column="15">0<pos:position pos:line="8" pos:column="16"/></literal></expr>;<pos:position pos:line="8" pos:column="17"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">memset<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><operator pos:line="11" pos:column="12">&amp;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="13">addr<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="19">'\0'<pos:position pos:line="11" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="25">sizeof <name pos:line="11" pos:column="32">addr<pos:position pos:line="11" pos:column="36"/></name></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">memset<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name pos:line="12" pos:column="12">ip_addr<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="21">'\0'<pos:position pos:line="12" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="27">sizeof <name pos:line="12" pos:column="34">ip_addr<pos:position pos:line="12" pos:column="41"/></name></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><literal type="number" pos:line="14" pos:column="9">4<pos:position pos:line="14" pos:column="10"/></literal> <operator pos:line="14" pos:column="11">==<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">sscanf<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">host<pos:position pos:line="14" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="27">"%d.%d.%d.%d"<pos:position pos:line="14" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="42">&amp;<pos:position pos:line="14" pos:column="47"/></operator><name><name pos:line="14" pos:column="43">ip_addr<pos:position pos:line="14" pos:column="50"/></name><index pos:line="14" pos:column="50">[<expr><literal type="number" pos:line="14" pos:column="51">0<pos:position pos:line="14" pos:column="52"/></literal></expr>]<pos:position pos:line="14" pos:column="53"/></index></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="55">&amp;<pos:position pos:line="14" pos:column="60"/></operator><name><name pos:line="14" pos:column="56">ip_addr<pos:position pos:line="14" pos:column="63"/></name><index pos:line="14" pos:column="63">[<expr><literal type="number" pos:line="14" pos:column="64">1<pos:position pos:line="14" pos:column="65"/></literal></expr>]<pos:position pos:line="14" pos:column="66"/></index></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="68">&amp;<pos:position pos:line="14" pos:column="73"/></operator><name><name pos:line="14" pos:column="69">ip_addr<pos:position pos:line="14" pos:column="76"/></name><index pos:line="14" pos:column="76">[<expr><literal type="number" pos:line="14" pos:column="77">2<pos:position pos:line="14" pos:column="78"/></literal></expr>]<pos:position pos:line="14" pos:column="79"/></index></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="81">&amp;<pos:position pos:line="14" pos:column="86"/></operator><name><name pos:line="14" pos:column="82">ip_addr<pos:position pos:line="14" pos:column="89"/></name><index pos:line="14" pos:column="89">[<expr><literal type="number" pos:line="14" pos:column="90">3<pos:position pos:line="14" pos:column="91"/></literal></expr>]<pos:position pos:line="14" pos:column="92"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="93"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="94"/></condition><then pos:line="14" pos:column="94"> <block pos:line="14" pos:column="95">{
        <for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name><name pos:line="15" pos:column="14">addr<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">.<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">s_addr<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <literal type="number" pos:line="15" pos:column="28">0<pos:position pos:line="15" pos:column="29"/></literal></expr><operator pos:line="15" pos:column="29">,<pos:position pos:line="15" pos:column="30"/></operator> <expr><name pos:line="15" pos:column="31">i<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">=<pos:position pos:line="15" pos:column="34"/></operator> <literal type="number" pos:line="15" pos:column="35">0<pos:position pos:line="15" pos:column="36"/></literal></expr>;<pos:position pos:line="15" pos:column="37"/></init> <condition><expr><name pos:line="15" pos:column="38">i<pos:position pos:line="15" pos:column="39"/></name> <operator pos:line="15" pos:column="40">&lt;<pos:position pos:line="15" pos:column="44"/></operator> <literal type="number" pos:line="15" pos:column="42">4<pos:position pos:line="15" pos:column="43"/></literal></expr>;<pos:position pos:line="15" pos:column="44"/></condition> <incr><expr><operator pos:line="15" pos:column="45">++<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="47">i<pos:position pos:line="15" pos:column="48"/></name></expr></incr>)<pos:position pos:line="15" pos:column="49"/></control> <block pos:line="15" pos:column="50">{
            <comment type="block" pos:line="16" pos:column="13">/* ap_proxy_is_ipaddr() already confirmed that we have
             * a valid octet in ip_addr[i]
             */</comment>
            <expr_stmt><expr><name><name pos:line="19" pos:column="13">addr<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">.<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">s_addr<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">|=<pos:position pos:line="19" pos:column="27"/></operator> <call><name pos:line="19" pos:column="28">htonl<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name><name pos:line="19" pos:column="34">ip_addr<pos:position pos:line="19" pos:column="41"/></name><index pos:line="19" pos:column="41">[<expr><name pos:line="19" pos:column="42">i<pos:position pos:line="19" pos:column="43"/></name></expr>]<pos:position pos:line="19" pos:column="44"/></index></name> <operator pos:line="19" pos:column="45">&lt;&lt;<pos:position pos:line="19" pos:column="53"/></operator> <operator pos:line="19" pos:column="48">(<pos:position pos:line="19" pos:column="49"/></operator><literal type="number" pos:line="19" pos:column="49">24<pos:position pos:line="19" pos:column="51"/></literal> <operator pos:line="19" pos:column="52">-<pos:position pos:line="19" pos:column="53"/></operator> <literal type="number" pos:line="19" pos:column="54">8<pos:position pos:line="19" pos:column="55"/></literal> <operator pos:line="19" pos:column="56">*<pos:position pos:line="19" pos:column="57"/></operator> <name pos:line="19" pos:column="58">i<pos:position pos:line="19" pos:column="59"/></name><operator pos:line="19" pos:column="59">)<pos:position pos:line="19" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></for>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">This<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">addr<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">s_addr<pos:position pos:line="22" pos:column="30"/></name></name> <operator pos:line="22" pos:column="31">==<pos:position pos:line="22" pos:column="33"/></operator> <operator pos:line="22" pos:column="34">(<pos:position pos:line="22" pos:column="35"/></operator><name><name pos:line="22" pos:column="35">addr<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">.<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="40">s_addr<pos:position pos:line="22" pos:column="46"/></name></name> <operator pos:line="22" pos:column="47">&amp;<pos:position pos:line="22" pos:column="52"/></operator> <name><name pos:line="22" pos:column="49">This<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">-&gt;<pos:position pos:line="22" pos:column="58"/></operator><name pos:line="22" pos:column="55">mask<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">.<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="60">s_addr<pos:position pos:line="22" pos:column="66"/></name></name><operator pos:line="22" pos:column="66">)<pos:position pos:line="22" pos:column="67"/></operator></expr>)<pos:position pos:line="22" pos:column="68"/></condition><then pos:line="22" pos:column="68"> <block pos:line="22" pos:column="69">{
<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><name pos:line="23" pos:column="5">DEBUGGING<pos:position pos:line="23" pos:column="14"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">ap_log_error<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">APLOG_MARK<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="38">APLOG_STARTUP<pos:position pos:line="24" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="53">0<pos:position pos:line="24" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="56">NULL<pos:position pos:line="24" pos:column="60"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="25" pos:column="26">"1)IP-Match: %s[%s] &lt;-&gt; "<pos:position pos:line="25" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="53">host<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="59">inet_ntoa<pos:position pos:line="25" pos:column="68"/></name><argument_list pos:line="25" pos:column="68">(<argument><expr><name pos:line="25" pos:column="69">addr<pos:position pos:line="25" pos:column="73"/></name></expr></argument>)<pos:position pos:line="25" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">ap_log_error<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">APLOG_MARK<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="38">APLOG_STARTUP<pos:position pos:line="26" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="53">0<pos:position pos:line="26" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="56">NULL<pos:position pos:line="26" pos:column="60"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="27" pos:column="26">"%s/"<pos:position pos:line="27" pos:column="31"/></literal></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="33">inet_ntoa<pos:position pos:line="27" pos:column="42"/></name><argument_list pos:line="27" pos:column="42">(<argument><expr><name><name pos:line="27" pos:column="43">This<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">addr<pos:position pos:line="27" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">ap_log_error<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">APLOG_MARK<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">APLOG_STARTUP<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="53">0<pos:position pos:line="28" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="56">NULL<pos:position pos:line="28" pos:column="60"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="29" pos:column="26">"%s"<pos:position pos:line="29" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="32">inet_ntoa<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name><name pos:line="29" pos:column="42">This<pos:position pos:line="29" pos:column="46"/></name><operator pos:line="29" pos:column="46">-&gt;<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="48">mask<pos:position pos:line="29" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
            <return pos:line="31" pos:column="13">return <expr><literal type="number" pos:line="31" pos:column="20">1<pos:position pos:line="31" pos:column="21"/></literal></expr>;<pos:position pos:line="31" pos:column="22"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></then>
<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><name pos:line="33" pos:column="5">DEBUGGING<pos:position pos:line="33" pos:column="14"/></name></expr></cpp:if>
        <else pos:line="34" pos:column="9">else <block pos:line="34" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">ap_log_error<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">APLOG_MARK<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="38">APLOG_STARTUP<pos:position pos:line="35" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="53">0<pos:position pos:line="35" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="56">NULL<pos:position pos:line="35" pos:column="60"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="36" pos:column="26">"1)IP-NoMatch: %s[%s] &lt;-&gt; "<pos:position pos:line="36" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="55">host<pos:position pos:line="36" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="61">inet_ntoa<pos:position pos:line="36" pos:column="70"/></name><argument_list pos:line="36" pos:column="70">(<argument><expr><name pos:line="36" pos:column="71">addr<pos:position pos:line="36" pos:column="75"/></name></expr></argument>)<pos:position pos:line="36" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">ap_log_error<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">APLOG_MARK<pos:position pos:line="37" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="38">APLOG_STARTUP<pos:position pos:line="37" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="53">0<pos:position pos:line="37" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="56">NULL<pos:position pos:line="37" pos:column="60"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="38" pos:column="26">"%s/"<pos:position pos:line="38" pos:column="31"/></literal></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="33">inet_ntoa<pos:position pos:line="38" pos:column="42"/></name><argument_list pos:line="38" pos:column="42">(<argument><expr><name><name pos:line="38" pos:column="43">This<pos:position pos:line="38" pos:column="47"/></name><operator pos:line="38" pos:column="47">-&gt;<pos:position pos:line="38" pos:column="52"/></operator><name pos:line="38" pos:column="49">addr<pos:position pos:line="38" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">ap_log_error<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name pos:line="39" pos:column="26">APLOG_MARK<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">APLOG_STARTUP<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="53">0<pos:position pos:line="39" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="56">NULL<pos:position pos:line="39" pos:column="60"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="40" pos:column="26">"%s"<pos:position pos:line="40" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="32">inet_ntoa<pos:position pos:line="40" pos:column="41"/></name><argument_list pos:line="40" pos:column="41">(<argument><expr><name><name pos:line="40" pos:column="42">This<pos:position pos:line="40" pos:column="46"/></name><operator pos:line="40" pos:column="46">-&gt;<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="48">mask<pos:position pos:line="40" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></else></if>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="43" pos:column="6"/></block></then>
    <else pos:line="44" pos:column="5">else <block pos:line="44" pos:column="10">{
        <decl_stmt><decl><type><name><name pos:line="45" pos:column="9">struct<pos:position pos:line="45" pos:column="15"/></name> <name pos:line="45" pos:column="16">apr_sockaddr_t<pos:position pos:line="45" pos:column="30"/></name></name> <modifier pos:line="45" pos:column="31">*<pos:position pos:line="45" pos:column="32"/></modifier></type><name pos:line="45" pos:column="32">reqaddr<pos:position pos:line="45" pos:column="39"/></name></decl>;<pos:position pos:line="45" pos:column="40"/></decl_stmt>

        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name pos:line="47" pos:column="13">apr_sockaddr_info_get<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><operator pos:line="47" pos:column="35">&amp;<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="36">reqaddr<pos:position pos:line="47" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="45">host<pos:position pos:line="47" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="51">APR_UNSPEC<pos:position pos:line="47" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="63">0<pos:position pos:line="47" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="66">0<pos:position pos:line="47" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="69">r<pos:position pos:line="47" pos:column="70"/></name><operator pos:line="47" pos:column="70">-&gt;<pos:position pos:line="47" pos:column="75"/></operator><name pos:line="47" pos:column="72">pool<pos:position pos:line="47" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="77"/></argument_list></call>
            <operator pos:line="48" pos:column="13">!=<pos:position pos:line="48" pos:column="15"/></operator> <name pos:line="48" pos:column="16">APR_SUCCESS<pos:position pos:line="48" pos:column="27"/></name></expr>)<pos:position pos:line="48" pos:column="28"/></condition><then pos:line="48" pos:column="28"> <block pos:line="48" pos:column="29">{
<cpp:if pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">if<pos:position pos:line="49" pos:column="4"/></cpp:directive> <expr><name pos:line="49" pos:column="5">DEBUGGING<pos:position pos:line="49" pos:column="14"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">ap_log_error<pos:position pos:line="50" pos:column="25"/></name><argument_list pos:line="50" pos:column="25">(<argument><expr><name pos:line="50" pos:column="26">APLOG_MARK<pos:position pos:line="50" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="38">APLOG_STARTUP<pos:position pos:line="50" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="53">0<pos:position pos:line="50" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="56">NULL<pos:position pos:line="50" pos:column="60"/></name></expr></argument>,
             <argument><expr><literal type="string" pos:line="51" pos:column="14">"2)IP-NoMatch: hostname=%s msg=Host not found"<pos:position pos:line="51" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="62">host<pos:position pos:line="51" pos:column="66"/></name></expr></argument>)<pos:position pos:line="51" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif>
            <return pos:line="53" pos:column="13">return <expr><literal type="number" pos:line="53" pos:column="20">0<pos:position pos:line="53" pos:column="21"/></literal></expr>;<pos:position pos:line="53" pos:column="22"/></return>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="56" pos:column="9">/* Try to deal with multiple IP addr's for a host */</comment>
        <comment type="block" pos:line="57" pos:column="9">/* FIXME: This needs to be able to deal with IPv6 */</comment>
        <while pos:line="58" pos:column="9">while <condition pos:line="58" pos:column="15">(<expr><name pos:line="58" pos:column="16">reqaddr<pos:position pos:line="58" pos:column="23"/></name></expr>)<pos:position pos:line="58" pos:column="24"/></condition> <block pos:line="58" pos:column="25">{
            <expr_stmt><expr><name pos:line="59" pos:column="13">ip<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <operator pos:line="59" pos:column="18">(<pos:position pos:line="59" pos:column="19"/></operator>struct <name pos:line="59" pos:column="26">in_addr<pos:position pos:line="59" pos:column="33"/></name> <operator pos:line="59" pos:column="34">*<pos:position pos:line="59" pos:column="35"/></operator><operator pos:line="59" pos:column="35">)<pos:position pos:line="59" pos:column="36"/></operator> <name><name pos:line="59" pos:column="37">reqaddr<pos:position pos:line="59" pos:column="44"/></name><operator pos:line="59" pos:column="44">-&gt;<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="46">ipaddr_ptr<pos:position pos:line="59" pos:column="56"/></name></name></expr>;<pos:position pos:line="59" pos:column="57"/></expr_stmt>
            <if pos:line="60" pos:column="13">if <condition pos:line="60" pos:column="16">(<expr><name><name pos:line="60" pos:column="17">This<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">-&gt;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="23">addr<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">.<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="28">s_addr<pos:position pos:line="60" pos:column="34"/></name></name> <operator pos:line="60" pos:column="35">==<pos:position pos:line="60" pos:column="37"/></operator> <operator pos:line="60" pos:column="38">(<pos:position pos:line="60" pos:column="39"/></operator><name><name pos:line="60" pos:column="39">ip<pos:position pos:line="60" pos:column="41"/></name><operator pos:line="60" pos:column="41">-&gt;<pos:position pos:line="60" pos:column="46"/></operator><name pos:line="60" pos:column="43">s_addr<pos:position pos:line="60" pos:column="49"/></name></name> <operator pos:line="60" pos:column="50">&amp;<pos:position pos:line="60" pos:column="55"/></operator> <name><name pos:line="60" pos:column="52">This<pos:position pos:line="60" pos:column="56"/></name><operator pos:line="60" pos:column="56">-&gt;<pos:position pos:line="60" pos:column="61"/></operator><name pos:line="60" pos:column="58">mask<pos:position pos:line="60" pos:column="62"/></name><operator pos:line="60" pos:column="62">.<pos:position pos:line="60" pos:column="63"/></operator><name pos:line="60" pos:column="63">s_addr<pos:position pos:line="60" pos:column="69"/></name></name><operator pos:line="60" pos:column="69">)<pos:position pos:line="60" pos:column="70"/></operator></expr>)<pos:position pos:line="60" pos:column="71"/></condition><then pos:line="60" pos:column="71"> <block pos:line="60" pos:column="72">{
<cpp:if pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">if<pos:position pos:line="61" pos:column="4"/></cpp:directive> <expr><name pos:line="61" pos:column="5">DEBUGGING<pos:position pos:line="61" pos:column="14"/></name></expr></cpp:if>
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">ap_log_error<pos:position pos:line="62" pos:column="29"/></name><argument_list pos:line="62" pos:column="29">(<argument><expr><name pos:line="62" pos:column="30">APLOG_MARK<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="42">APLOG_STARTUP<pos:position pos:line="62" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="57">0<pos:position pos:line="62" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="60">NULL<pos:position pos:line="62" pos:column="64"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="63" pos:column="30">"3)IP-Match: %s[%s] &lt;-&gt; "<pos:position pos:line="63" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="57">host<pos:position pos:line="63" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="63">inet_ntoa<pos:position pos:line="63" pos:column="72"/></name><argument_list pos:line="63" pos:column="72">(<argument><expr><operator pos:line="63" pos:column="73">*<pos:position pos:line="63" pos:column="74"/></operator><name pos:line="63" pos:column="74">ip<pos:position pos:line="63" pos:column="76"/></name></expr></argument>)<pos:position pos:line="63" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="79"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">ap_log_error<pos:position pos:line="64" pos:column="29"/></name><argument_list pos:line="64" pos:column="29">(<argument><expr><name pos:line="64" pos:column="30">APLOG_MARK<pos:position pos:line="64" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="42">APLOG_STARTUP<pos:position pos:line="64" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="57">0<pos:position pos:line="64" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="60">NULL<pos:position pos:line="64" pos:column="64"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="65" pos:column="30">"%s/"<pos:position pos:line="65" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="37">inet_ntoa<pos:position pos:line="65" pos:column="46"/></name><argument_list pos:line="65" pos:column="46">(<argument><expr><name><name pos:line="65" pos:column="47">This<pos:position pos:line="65" pos:column="51"/></name><operator pos:line="65" pos:column="51">-&gt;<pos:position pos:line="65" pos:column="56"/></operator><name pos:line="65" pos:column="53">addr<pos:position pos:line="65" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="66" pos:column="17">ap_log_error<pos:position pos:line="66" pos:column="29"/></name><argument_list pos:line="66" pos:column="29">(<argument><expr><name pos:line="66" pos:column="30">APLOG_MARK<pos:position pos:line="66" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="42">APLOG_STARTUP<pos:position pos:line="66" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="57">0<pos:position pos:line="66" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="60">NULL<pos:position pos:line="66" pos:column="64"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="67" pos:column="30">"%s"<pos:position pos:line="67" pos:column="34"/></literal></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="36">inet_ntoa<pos:position pos:line="67" pos:column="45"/></name><argument_list pos:line="67" pos:column="45">(<argument><expr><name><name pos:line="67" pos:column="46">This<pos:position pos:line="67" pos:column="50"/></name><operator pos:line="67" pos:column="50">-&gt;<pos:position pos:line="67" pos:column="55"/></operator><name pos:line="67" pos:column="52">mask<pos:position pos:line="67" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="59"/></expr_stmt>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif<pos:position pos:line="68" pos:column="7"/></cpp:directive></cpp:endif>
                <return pos:line="69" pos:column="17">return <expr><literal type="number" pos:line="69" pos:column="24">1<pos:position pos:line="69" pos:column="25"/></literal></expr>;<pos:position pos:line="69" pos:column="26"/></return>
            }<pos:position pos:line="70" pos:column="14"/></block></then>
<cpp:if pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">if<pos:position pos:line="71" pos:column="4"/></cpp:directive> <expr><name pos:line="71" pos:column="5">DEBUGGING<pos:position pos:line="71" pos:column="14"/></name></expr></cpp:if>
            <else pos:line="72" pos:column="13">else <block pos:line="72" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="73" pos:column="17">ap_log_error<pos:position pos:line="73" pos:column="29"/></name><argument_list pos:line="73" pos:column="29">(<argument><expr><name pos:line="73" pos:column="30">APLOG_MARK<pos:position pos:line="73" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="42">APLOG_STARTUP<pos:position pos:line="73" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="57">0<pos:position pos:line="73" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="60">NULL<pos:position pos:line="73" pos:column="64"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="74" pos:column="30">"3)IP-NoMatch: %s[%s] &lt;-&gt; "<pos:position pos:line="74" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="59">host<pos:position pos:line="74" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="65">inet_ntoa<pos:position pos:line="74" pos:column="74"/></name><argument_list pos:line="74" pos:column="74">(<argument><expr><operator pos:line="74" pos:column="75">*<pos:position pos:line="74" pos:column="76"/></operator><name pos:line="74" pos:column="76">ip<pos:position pos:line="74" pos:column="78"/></name></expr></argument>)<pos:position pos:line="74" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="81"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">ap_log_error<pos:position pos:line="75" pos:column="29"/></name><argument_list pos:line="75" pos:column="29">(<argument><expr><name pos:line="75" pos:column="30">APLOG_MARK<pos:position pos:line="75" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="42">APLOG_STARTUP<pos:position pos:line="75" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="57">0<pos:position pos:line="75" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="60">NULL<pos:position pos:line="75" pos:column="64"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="76" pos:column="30">"%s/"<pos:position pos:line="76" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="76" pos:column="37">inet_ntoa<pos:position pos:line="76" pos:column="46"/></name><argument_list pos:line="76" pos:column="46">(<argument><expr><name><name pos:line="76" pos:column="47">This<pos:position pos:line="76" pos:column="51"/></name><operator pos:line="76" pos:column="51">-&gt;<pos:position pos:line="76" pos:column="56"/></operator><name pos:line="76" pos:column="53">addr<pos:position pos:line="76" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="77" pos:column="17">ap_log_error<pos:position pos:line="77" pos:column="29"/></name><argument_list pos:line="77" pos:column="29">(<argument><expr><name pos:line="77" pos:column="30">APLOG_MARK<pos:position pos:line="77" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="42">APLOG_STARTUP<pos:position pos:line="77" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="57">0<pos:position pos:line="77" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="60">NULL<pos:position pos:line="77" pos:column="64"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="78" pos:column="30">"%s"<pos:position pos:line="78" pos:column="34"/></literal></expr></argument>, <argument><expr><call><name pos:line="78" pos:column="36">inet_ntoa<pos:position pos:line="78" pos:column="45"/></name><argument_list pos:line="78" pos:column="45">(<argument><expr><name><name pos:line="78" pos:column="46">This<pos:position pos:line="78" pos:column="50"/></name><operator pos:line="78" pos:column="50">-&gt;<pos:position pos:line="78" pos:column="55"/></operator><name pos:line="78" pos:column="52">mask<pos:position pos:line="78" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="79" pos:column="14"/></block></else></if>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif<pos:position pos:line="80" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name pos:line="81" pos:column="13">reqaddr<pos:position pos:line="81" pos:column="20"/></name> <operator pos:line="81" pos:column="21">=<pos:position pos:line="81" pos:column="22"/></operator> <name><name pos:line="81" pos:column="23">reqaddr<pos:position pos:line="81" pos:column="30"/></name><operator pos:line="81" pos:column="30">-&gt;<pos:position pos:line="81" pos:column="35"/></operator><name pos:line="81" pos:column="32">next<pos:position pos:line="81" pos:column="36"/></name></name></expr>;<pos:position pos:line="81" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="82" pos:column="10"/></block></while>
    }<pos:position pos:line="83" pos:column="6"/></block></else></if>

    <return pos:line="85" pos:column="5">return <expr><literal type="number" pos:line="85" pos:column="12">0<pos:position pos:line="85" pos:column="13"/></literal></expr>;<pos:position pos:line="85" pos:column="14"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

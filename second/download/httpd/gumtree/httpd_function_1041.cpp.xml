<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1041.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">master_main<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">server_rec<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">s<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">HANDLE<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">shutdown_event<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">HANDLE<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">restart_event<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">rv<pos:position pos:line="3" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="13">cld<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">restart_pending<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">shutdown_pending<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HANDLE<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">child_exit_event<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">HANDLE<pos:position pos:line="7" pos:column="11"/></name></type> <name><name pos:line="7" pos:column="12">event_handles<pos:position pos:line="7" pos:column="25"/></name><index pos:line="7" pos:column="25">[<expr><name pos:line="7" pos:column="26">NUM_WAIT_HANDLES<pos:position pos:line="7" pos:column="42"/></name></expr>]<pos:position pos:line="7" pos:column="43"/></index></name></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">DWORD<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">child_pid<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">restart_pending<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">shutdown_pending<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">=<pos:position pos:line="10" pos:column="41"/></operator> <literal type="number" pos:line="10" pos:column="42">0<pos:position pos:line="10" pos:column="43"/></literal></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="12" pos:column="5">event_handles<pos:position pos:line="12" pos:column="18"/></name><index pos:line="12" pos:column="18">[<expr><name pos:line="12" pos:column="19">SHUTDOWN_HANDLE<pos:position pos:line="12" pos:column="34"/></name></expr>]<pos:position pos:line="12" pos:column="35"/></index></name> <operator pos:line="12" pos:column="36">=<pos:position pos:line="12" pos:column="37"/></operator> <name pos:line="12" pos:column="38">shutdown_event<pos:position pos:line="12" pos:column="52"/></name></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">event_handles<pos:position pos:line="13" pos:column="18"/></name><index pos:line="13" pos:column="18">[<expr><name pos:line="13" pos:column="19">RESTART_HANDLE<pos:position pos:line="13" pos:column="33"/></name></expr>]<pos:position pos:line="13" pos:column="34"/></index></name> <operator pos:line="13" pos:column="35">=<pos:position pos:line="13" pos:column="36"/></operator> <name pos:line="13" pos:column="37">restart_event<pos:position pos:line="13" pos:column="50"/></name></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* Create a single child process */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">rv<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <call><name pos:line="16" pos:column="10">create_process<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">pconf<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="32">&amp;<pos:position pos:line="16" pos:column="37"/></operator><name><name pos:line="16" pos:column="33">event_handles<pos:position pos:line="16" pos:column="46"/></name><index pos:line="16" pos:column="46">[<expr><name pos:line="16" pos:column="47">CHILD_HANDLE<pos:position pos:line="16" pos:column="59"/></name></expr>]<pos:position pos:line="16" pos:column="60"/></index></name></expr></argument>, 
                        <argument><expr><operator pos:line="17" pos:column="25">&amp;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="26">child_exit_event<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="44">&amp;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="45">child_pid<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">rv<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">&lt;<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16"> 
    <block pos:line="19" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_log_error<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">APLOG_MARK<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">APLOG_CRIT<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="46">apr_get_os_error<pos:position pos:line="20" pos:column="62"/></name><argument_list pos:line="20" pos:column="62">()<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="20" pos:column="66">ap_server_conf<pos:position pos:line="20" pos:column="80"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="21" pos:column="22">"master_main: create child process failed. Exiting."<pos:position pos:line="21" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">shutdown_pending<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">1<pos:position pos:line="22" pos:column="29"/></literal></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
        <goto pos:line="23" pos:column="9">goto <name pos:line="23" pos:column="14">die_now<pos:position pos:line="23" pos:column="21"/></name>;<pos:position pos:line="23" pos:column="22"/></goto>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><call><name pos:line="25" pos:column="10">strcasecmp<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">signal_arg<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="33">"runservice"<pos:position pos:line="25" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="47"/></condition><then pos:line="25" pos:column="47"> <block pos:line="25" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">mpm_service_started<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">()<pos:position pos:line="26" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* Update the scoreboard. Note that there is only a single active
     * child at once.
     */</comment>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">ap_scoreboard_image<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">parent<pos:position pos:line="32" pos:column="32"/></name><index pos:line="32" pos:column="32">[<expr><literal type="number" pos:line="32" pos:column="33">0<pos:position pos:line="32" pos:column="34"/></literal></expr>]<pos:position pos:line="32" pos:column="35"/></index></name><operator pos:line="32" pos:column="35">.<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="36">quiescing<pos:position pos:line="32" pos:column="45"/></name> <operator pos:line="32" pos:column="46">=<pos:position pos:line="32" pos:column="47"/></operator> <literal type="number" pos:line="32" pos:column="48">0<pos:position pos:line="32" pos:column="49"/></literal></expr>;<pos:position pos:line="32" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">ap_scoreboard_image<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">-&gt;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="26">parent<pos:position pos:line="33" pos:column="32"/></name><index pos:line="33" pos:column="32">[<expr><literal type="number" pos:line="33" pos:column="33">0<pos:position pos:line="33" pos:column="34"/></literal></expr>]<pos:position pos:line="33" pos:column="35"/></index></name><operator pos:line="33" pos:column="35">.<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="36">pid<pos:position pos:line="33" pos:column="39"/></name> <operator pos:line="33" pos:column="40">=<pos:position pos:line="33" pos:column="41"/></operator> <name pos:line="33" pos:column="42">child_pid<pos:position pos:line="33" pos:column="51"/></name></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* Wait for shutdown or restart events or for child death */</comment>
    <expr_stmt><expr><name pos:line="36" pos:column="5">winnt_mpm_state<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">AP_MPMQ_RUNNING<pos:position pos:line="36" pos:column="38"/></name></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">rv<pos:position pos:line="37" pos:column="7"/></name> <operator pos:line="37" pos:column="8">=<pos:position pos:line="37" pos:column="9"/></operator> <call><name pos:line="37" pos:column="10">WaitForMultipleObjects<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">NUM_WAIT_HANDLES<pos:position pos:line="37" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="51">(<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="52">HANDLE<pos:position pos:line="37" pos:column="58"/></name> <operator pos:line="37" pos:column="59">*<pos:position pos:line="37" pos:column="60"/></operator><operator pos:line="37" pos:column="60">)<pos:position pos:line="37" pos:column="61"/></operator> <name pos:line="37" pos:column="62">event_handles<pos:position pos:line="37" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="77">FALSE<pos:position pos:line="37" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="84">INFINITE<pos:position pos:line="37" pos:column="92"/></name></expr></argument>)<pos:position pos:line="37" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="94"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">cld<pos:position pos:line="38" pos:column="8"/></name> <operator pos:line="38" pos:column="9">=<pos:position pos:line="38" pos:column="10"/></operator> <name pos:line="38" pos:column="11">rv<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">-<pos:position pos:line="38" pos:column="15"/></operator> <name pos:line="38" pos:column="16">WAIT_OBJECT_0<pos:position pos:line="38" pos:column="29"/></name></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">rv<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">==<pos:position pos:line="39" pos:column="14"/></operator> <name pos:line="39" pos:column="15">WAIT_FAILED<pos:position pos:line="39" pos:column="26"/></name></expr>)<pos:position pos:line="39" pos:column="27"/></condition><then pos:line="39" pos:column="27"> <block pos:line="39" pos:column="28">{
        <comment type="block" pos:line="40" pos:column="9">/* Something serious is wrong */</comment>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">ap_log_error<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">APLOG_MARK<pos:position pos:line="41" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="41" pos:column="33">APLOG_CRIT<pos:position pos:line="41" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="45">apr_get_os_error<pos:position pos:line="41" pos:column="61"/></name><argument_list pos:line="41" pos:column="61">()<pos:position pos:line="41" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="41" pos:column="65">ap_server_conf<pos:position pos:line="41" pos:column="79"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="42" pos:column="22">"master_main: WaitForMultipeObjects WAIT_FAILED -- doing server shutdown"<pos:position pos:line="42" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="97"/></expr_stmt>
        <expr_stmt><expr><name pos:line="43" pos:column="9">shutdown_pending<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">=<pos:position pos:line="43" pos:column="27"/></operator> <literal type="number" pos:line="43" pos:column="28">1<pos:position pos:line="43" pos:column="29"/></literal></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then>
    <elseif pos:line="45" pos:column="5">else <if pos:line="45" pos:column="10">if <condition pos:line="45" pos:column="13">(<expr><name pos:line="45" pos:column="14">rv<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">==<pos:position pos:line="45" pos:column="19"/></operator> <name pos:line="45" pos:column="20">WAIT_TIMEOUT<pos:position pos:line="45" pos:column="32"/></name></expr>)<pos:position pos:line="45" pos:column="33"/></condition><then pos:line="45" pos:column="33"> <block pos:line="45" pos:column="34">{
        <comment type="block" pos:line="46" pos:column="9">/* Hey, this cannot happen */</comment>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">ap_log_error<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">APLOG_MARK<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">APLOG_ERR<pos:position pos:line="47" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="45">apr_get_os_error<pos:position pos:line="47" pos:column="61"/></name><argument_list pos:line="47" pos:column="61">()<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="47" pos:column="65">s<pos:position pos:line="47" pos:column="66"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="48" pos:column="22">"master_main: WaitForMultipeObjects with INFINITE wait exited with WAIT_TIMEOUT"<pos:position pos:line="48" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="104"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">shutdown_pending<pos:position pos:line="49" pos:column="25"/></name> <operator pos:line="49" pos:column="26">=<pos:position pos:line="49" pos:column="27"/></operator> <literal type="number" pos:line="49" pos:column="28">1<pos:position pos:line="49" pos:column="29"/></literal></expr>;<pos:position pos:line="49" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="51" pos:column="5">else <if pos:line="51" pos:column="10">if <condition pos:line="51" pos:column="13">(<expr><name pos:line="51" pos:column="14">cld<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">==<pos:position pos:line="51" pos:column="20"/></operator> <name pos:line="51" pos:column="21">SHUTDOWN_HANDLE<pos:position pos:line="51" pos:column="36"/></name></expr>)<pos:position pos:line="51" pos:column="37"/></condition><then pos:line="51" pos:column="37"> <block pos:line="51" pos:column="38">{
        <comment type="block" pos:line="52" pos:column="9">/* shutdown_event signalled */</comment>
        <expr_stmt><expr><name pos:line="53" pos:column="9">shutdown_pending<pos:position pos:line="53" pos:column="25"/></name> <operator pos:line="53" pos:column="26">=<pos:position pos:line="53" pos:column="27"/></operator> <literal type="number" pos:line="53" pos:column="28">1<pos:position pos:line="53" pos:column="29"/></literal></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">ap_log_error<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><name pos:line="54" pos:column="22">APLOG_MARK<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="34">APLOG_NOTICE<pos:position pos:line="54" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="48">APR_SUCCESS<pos:position pos:line="54" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="61">s<pos:position pos:line="54" pos:column="62"/></name></expr></argument>, 
                     <argument><expr><literal type="string" pos:line="55" pos:column="22">"Parent: Received shutdown signal -- Shutting down the server."<pos:position pos:line="55" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="87"/></expr_stmt>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">ResetEvent<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">(<argument><expr><name pos:line="56" pos:column="24">shutdown_event<pos:position pos:line="56" pos:column="38"/></name></expr></argument>)<pos:position pos:line="56" pos:column="39"/></argument_list></call> <operator pos:line="56" pos:column="40">==<pos:position pos:line="56" pos:column="42"/></operator> <literal type="number" pos:line="56" pos:column="43">0<pos:position pos:line="56" pos:column="44"/></literal></expr>)<pos:position pos:line="56" pos:column="45"/></condition><then pos:line="56" pos:column="45"> <block pos:line="56" pos:column="46">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">ap_log_error<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">APLOG_MARK<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="38">APLOG_ERR<pos:position pos:line="57" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="49">apr_get_os_error<pos:position pos:line="57" pos:column="65"/></name><argument_list pos:line="57" pos:column="65">()<pos:position pos:line="57" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="57" pos:column="69">s<pos:position pos:line="57" pos:column="70"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="58" pos:column="26">"ResetEvent(shutdown_event)"<pos:position pos:line="58" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="61" pos:column="5">else <if pos:line="61" pos:column="10">if <condition pos:line="61" pos:column="13">(<expr><name pos:line="61" pos:column="14">cld<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">==<pos:position pos:line="61" pos:column="20"/></operator> <name pos:line="61" pos:column="21">RESTART_HANDLE<pos:position pos:line="61" pos:column="35"/></name></expr>)<pos:position pos:line="61" pos:column="36"/></condition><then pos:line="61" pos:column="36"> <block pos:line="61" pos:column="37">{
        <comment type="block" pos:line="62" pos:column="9">/* Received a restart event. Prepare the restart_event to be reused 
         * then signal the child process to exit. 
         */</comment>
        <expr_stmt><expr><name pos:line="65" pos:column="9">restart_pending<pos:position pos:line="65" pos:column="24"/></name> <operator pos:line="65" pos:column="25">=<pos:position pos:line="65" pos:column="26"/></operator> <literal type="number" pos:line="65" pos:column="27">1<pos:position pos:line="65" pos:column="28"/></literal></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">ap_log_error<pos:position pos:line="66" pos:column="21"/></name><argument_list pos:line="66" pos:column="21">(<argument><expr><name pos:line="66" pos:column="22">APLOG_MARK<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="34">APLOG_NOTICE<pos:position pos:line="66" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="48">0<pos:position pos:line="66" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="51">s<pos:position pos:line="66" pos:column="52"/></name></expr></argument>, 
                     <argument><expr><literal type="string" pos:line="67" pos:column="22">"Parent: Received restart signal -- Restarting the server."<pos:position pos:line="67" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="83"/></expr_stmt>
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><call><name pos:line="68" pos:column="13">ResetEvent<pos:position pos:line="68" pos:column="23"/></name><argument_list pos:line="68" pos:column="23">(<argument><expr><name pos:line="68" pos:column="24">restart_event<pos:position pos:line="68" pos:column="37"/></name></expr></argument>)<pos:position pos:line="68" pos:column="38"/></argument_list></call> <operator pos:line="68" pos:column="39">==<pos:position pos:line="68" pos:column="41"/></operator> <literal type="number" pos:line="68" pos:column="42">0<pos:position pos:line="68" pos:column="43"/></literal></expr>)<pos:position pos:line="68" pos:column="44"/></condition><then pos:line="68" pos:column="44"> <block pos:line="68" pos:column="45">{
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">ap_log_error<pos:position pos:line="69" pos:column="25"/></name><argument_list pos:line="69" pos:column="25">(<argument><expr><name pos:line="69" pos:column="26">APLOG_MARK<pos:position pos:line="69" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="38">APLOG_ERR<pos:position pos:line="69" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="49">apr_get_os_error<pos:position pos:line="69" pos:column="65"/></name><argument_list pos:line="69" pos:column="65">()<pos:position pos:line="69" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="69" pos:column="69">s<pos:position pos:line="69" pos:column="70"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="70" pos:column="26">"Parent: ResetEvent(restart_event) failed."<pos:position pos:line="70" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><call><name pos:line="72" pos:column="13">SetEvent<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><name pos:line="72" pos:column="22">child_exit_event<pos:position pos:line="72" pos:column="38"/></name></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call> <operator pos:line="72" pos:column="40">==<pos:position pos:line="72" pos:column="42"/></operator> <literal type="number" pos:line="72" pos:column="43">0<pos:position pos:line="72" pos:column="44"/></literal></expr>)<pos:position pos:line="72" pos:column="45"/></condition><then pos:line="72" pos:column="45"> <block pos:line="72" pos:column="46">{
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">ap_log_error<pos:position pos:line="73" pos:column="25"/></name><argument_list pos:line="73" pos:column="25">(<argument><expr><name pos:line="73" pos:column="26">APLOG_MARK<pos:position pos:line="73" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="38">APLOG_ERR<pos:position pos:line="73" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="49">apr_get_os_error<pos:position pos:line="73" pos:column="65"/></name><argument_list pos:line="73" pos:column="65">()<pos:position pos:line="73" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="73" pos:column="69">s<pos:position pos:line="73" pos:column="70"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="74" pos:column="26">"Parent: SetEvent for child process %d failed."<pos:position pos:line="74" pos:column="73"/></literal></expr></argument>, 
                         <argument><expr><name><name pos:line="75" pos:column="26">event_handles<pos:position pos:line="75" pos:column="39"/></name><index pos:line="75" pos:column="39">[<expr><name pos:line="75" pos:column="40">CHILD_HANDLE<pos:position pos:line="75" pos:column="52"/></name></expr>]<pos:position pos:line="75" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="75" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="76" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="77" pos:column="9">/* Don't wait to verify that the child process really exits, 
         * just move on with the restart.
         */</comment>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">CloseHandle<pos:position pos:line="80" pos:column="20"/></name><argument_list pos:line="80" pos:column="20">(<argument><expr><name><name pos:line="80" pos:column="21">event_handles<pos:position pos:line="80" pos:column="34"/></name><index pos:line="80" pos:column="34">[<expr><name pos:line="80" pos:column="35">CHILD_HANDLE<pos:position pos:line="80" pos:column="47"/></name></expr>]<pos:position pos:line="80" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="80" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="81" pos:column="9">event_handles<pos:position pos:line="81" pos:column="22"/></name><index pos:line="81" pos:column="22">[<expr><name pos:line="81" pos:column="23">CHILD_HANDLE<pos:position pos:line="81" pos:column="35"/></name></expr>]<pos:position pos:line="81" pos:column="36"/></index></name> <operator pos:line="81" pos:column="37">=<pos:position pos:line="81" pos:column="38"/></operator> <name pos:line="81" pos:column="39">NULL<pos:position pos:line="81" pos:column="43"/></name></expr>;<pos:position pos:line="81" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if></elseif>
    <else pos:line="83" pos:column="5">else <block pos:line="83" pos:column="10">{
        <comment type="block" pos:line="84" pos:column="9">/* The child process exited prematurely due to a fatal error. */</comment>
        <decl_stmt><decl><type><name pos:line="85" pos:column="9">DWORD<pos:position pos:line="85" pos:column="14"/></name></type> <name pos:line="85" pos:column="15">exitcode<pos:position pos:line="85" pos:column="23"/></name></decl>;<pos:position pos:line="85" pos:column="24"/></decl_stmt>
        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><operator pos:line="86" pos:column="13">!<pos:position pos:line="86" pos:column="14"/></operator><call><name pos:line="86" pos:column="14">GetExitCodeProcess<pos:position pos:line="86" pos:column="32"/></name><argument_list pos:line="86" pos:column="32">(<argument><expr><name><name pos:line="86" pos:column="33">event_handles<pos:position pos:line="86" pos:column="46"/></name><index pos:line="86" pos:column="46">[<expr><name pos:line="86" pos:column="47">CHILD_HANDLE<pos:position pos:line="86" pos:column="59"/></name></expr>]<pos:position pos:line="86" pos:column="60"/></index></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="62">&amp;<pos:position pos:line="86" pos:column="67"/></operator><name pos:line="86" pos:column="63">exitcode<pos:position pos:line="86" pos:column="71"/></name></expr></argument>)<pos:position pos:line="86" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="73"/></condition><then pos:line="86" pos:column="73"> <block pos:line="86" pos:column="74">{
            <comment type="block" pos:line="87" pos:column="13">/* HUH? We did exit, didn't we? */</comment>
            <expr_stmt><expr><name pos:line="88" pos:column="13">exitcode<pos:position pos:line="88" pos:column="21"/></name> <operator pos:line="88" pos:column="22">=<pos:position pos:line="88" pos:column="23"/></operator> <name pos:line="88" pos:column="24">APEXIT_CHILDFATAL<pos:position pos:line="88" pos:column="41"/></name></expr>;<pos:position pos:line="88" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if>
        <if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(   <expr><name pos:line="90" pos:column="16">exitcode<pos:position pos:line="90" pos:column="24"/></name> <operator pos:line="90" pos:column="25">==<pos:position pos:line="90" pos:column="27"/></operator> <name pos:line="90" pos:column="28">APEXIT_CHILDFATAL<pos:position pos:line="90" pos:column="45"/></name> 
            <operator pos:line="91" pos:column="13">||<pos:position pos:line="91" pos:column="15"/></operator> <name pos:line="91" pos:column="16">exitcode<pos:position pos:line="91" pos:column="24"/></name> <operator pos:line="91" pos:column="25">==<pos:position pos:line="91" pos:column="27"/></operator> <name pos:line="91" pos:column="28">APEXIT_CHILDINIT<pos:position pos:line="91" pos:column="44"/></name>
            <operator pos:line="92" pos:column="13">||<pos:position pos:line="92" pos:column="15"/></operator> <name pos:line="92" pos:column="16">exitcode<pos:position pos:line="92" pos:column="24"/></name> <operator pos:line="92" pos:column="25">==<pos:position pos:line="92" pos:column="27"/></operator> <name pos:line="92" pos:column="28">APEXIT_INIT<pos:position pos:line="92" pos:column="39"/></name></expr>)<pos:position pos:line="92" pos:column="40"/></condition><then pos:line="92" pos:column="40"> <block pos:line="92" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="93" pos:column="13">ap_log_error<pos:position pos:line="93" pos:column="25"/></name><argument_list pos:line="93" pos:column="25">(<argument><expr><name pos:line="93" pos:column="26">APLOG_MARK<pos:position pos:line="93" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="38">APLOG_ERR<pos:position pos:line="93" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="49">0<pos:position pos:line="93" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="52">ap_server_conf<pos:position pos:line="93" pos:column="66"/></name></expr></argument>, 
                         <argument><expr><literal type="string" pos:line="94" pos:column="26">"Parent: child process exited with status %u -- Aborting."<pos:position pos:line="94" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="86">exitcode<pos:position pos:line="94" pos:column="94"/></name></expr></argument>)<pos:position pos:line="94" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="96"/></expr_stmt>
        }<pos:position pos:line="95" pos:column="10"/></block></then>
        <else pos:line="96" pos:column="9">else <block pos:line="96" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="97" pos:column="13">int<pos:position pos:line="97" pos:column="16"/></name></type> <name pos:line="97" pos:column="17">i<pos:position pos:line="97" pos:column="18"/></name></decl>;<pos:position pos:line="97" pos:column="19"/></decl_stmt>
            <expr_stmt><expr><name pos:line="98" pos:column="13">restart_pending<pos:position pos:line="98" pos:column="28"/></name> <operator pos:line="98" pos:column="29">=<pos:position pos:line="98" pos:column="30"/></operator> <literal type="number" pos:line="98" pos:column="31">1<pos:position pos:line="98" pos:column="32"/></literal></expr>;<pos:position pos:line="98" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="99" pos:column="13">ap_log_error<pos:position pos:line="99" pos:column="25"/></name><argument_list pos:line="99" pos:column="25">(<argument><expr><name pos:line="99" pos:column="26">APLOG_MARK<pos:position pos:line="99" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="38">APLOG_NOTICE<pos:position pos:line="99" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="52">APR_SUCCESS<pos:position pos:line="99" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="65">ap_server_conf<pos:position pos:line="99" pos:column="79"/></name></expr></argument>, 
                         <argument><expr><literal type="string" pos:line="100" pos:column="26">"Parent: child process exited with status %u -- Restarting."<pos:position pos:line="100" pos:column="86"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="88">exitcode<pos:position pos:line="100" pos:column="96"/></name></expr></argument>)<pos:position pos:line="100" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="98"/></expr_stmt>
            <for pos:line="101" pos:column="13">for <control pos:line="101" pos:column="17">(<init><expr><name pos:line="101" pos:column="18">i<pos:position pos:line="101" pos:column="19"/></name> <operator pos:line="101" pos:column="20">=<pos:position pos:line="101" pos:column="21"/></operator> <literal type="number" pos:line="101" pos:column="22">0<pos:position pos:line="101" pos:column="23"/></literal></expr>;<pos:position pos:line="101" pos:column="24"/></init> <condition><expr><name pos:line="101" pos:column="25">i<pos:position pos:line="101" pos:column="26"/></name> <operator pos:line="101" pos:column="27">&lt;<pos:position pos:line="101" pos:column="31"/></operator> <name pos:line="101" pos:column="29">ap_threads_per_child<pos:position pos:line="101" pos:column="49"/></name></expr>;<pos:position pos:line="101" pos:column="50"/></condition> <incr><expr><name pos:line="101" pos:column="51">i<pos:position pos:line="101" pos:column="52"/></name><operator pos:line="101" pos:column="52">++<pos:position pos:line="101" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="101" pos:column="55"/></control> <block pos:line="101" pos:column="56">{
                <expr_stmt><expr><call><name pos:line="102" pos:column="17">ap_update_child_status_from_indexes<pos:position pos:line="102" pos:column="52"/></name><argument_list pos:line="102" pos:column="52">(<argument><expr><literal type="number" pos:line="102" pos:column="53">0<pos:position pos:line="102" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="56">i<pos:position pos:line="102" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="59">SERVER_DEAD<pos:position pos:line="102" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="72">NULL<pos:position pos:line="102" pos:column="76"/></name></expr></argument>)<pos:position pos:line="102" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="78"/></expr_stmt>
            }<pos:position pos:line="103" pos:column="14"/></block></for>
        }<pos:position pos:line="104" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="105" pos:column="9">CloseHandle<pos:position pos:line="105" pos:column="20"/></name><argument_list pos:line="105" pos:column="20">(<argument><expr><name><name pos:line="105" pos:column="21">event_handles<pos:position pos:line="105" pos:column="34"/></name><index pos:line="105" pos:column="34">[<expr><name pos:line="105" pos:column="35">CHILD_HANDLE<pos:position pos:line="105" pos:column="47"/></name></expr>]<pos:position pos:line="105" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="105" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="106" pos:column="9">event_handles<pos:position pos:line="106" pos:column="22"/></name><index pos:line="106" pos:column="22">[<expr><name pos:line="106" pos:column="23">CHILD_HANDLE<pos:position pos:line="106" pos:column="35"/></name></expr>]<pos:position pos:line="106" pos:column="36"/></index></name> <operator pos:line="106" pos:column="37">=<pos:position pos:line="106" pos:column="38"/></operator> <name pos:line="106" pos:column="39">NULL<pos:position pos:line="106" pos:column="43"/></name></expr>;<pos:position pos:line="106" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="107" pos:column="6"/></block></else></if>
    <if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><name pos:line="108" pos:column="9">restart_pending<pos:position pos:line="108" pos:column="24"/></name></expr>)<pos:position pos:line="108" pos:column="25"/></condition><then pos:line="108" pos:column="25"> <block pos:line="108" pos:column="26">{
        <expr_stmt><expr><operator pos:line="109" pos:column="9">++<pos:position pos:line="109" pos:column="11"/></operator><name pos:line="109" pos:column="11">ap_my_generation<pos:position pos:line="109" pos:column="27"/></name></expr>;<pos:position pos:line="109" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="110" pos:column="9">ap_scoreboard_image<pos:position pos:line="110" pos:column="28"/></name><operator pos:line="110" pos:column="28">-&gt;<pos:position pos:line="110" pos:column="33"/></operator><name pos:line="110" pos:column="30">global<pos:position pos:line="110" pos:column="36"/></name><operator pos:line="110" pos:column="36">-&gt;<pos:position pos:line="110" pos:column="41"/></operator><name pos:line="110" pos:column="38">running_generation<pos:position pos:line="110" pos:column="56"/></name></name> <operator pos:line="110" pos:column="57">=<pos:position pos:line="110" pos:column="58"/></operator> <name pos:line="110" pos:column="59">ap_my_generation<pos:position pos:line="110" pos:column="75"/></name></expr>;<pos:position pos:line="110" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="111" pos:column="6"/></block></then></if>
<label><name pos:line="112" pos:column="1">die_now<pos:position pos:line="112" pos:column="8"/></name>:<pos:position pos:line="112" pos:column="9"/></label>
    <if pos:line="113" pos:column="5">if <condition pos:line="113" pos:column="8">(<expr><name pos:line="113" pos:column="9">shutdown_pending<pos:position pos:line="113" pos:column="25"/></name></expr>)<pos:position pos:line="113" pos:column="26"/></condition><then pos:line="113" pos:column="26"> 
    <block pos:line="114" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="115" pos:column="9">int<pos:position pos:line="115" pos:column="12"/></name></type> <name pos:line="115" pos:column="13">timeout<pos:position pos:line="115" pos:column="20"/></name> <init pos:line="115" pos:column="21">= <expr><literal type="number" pos:line="115" pos:column="23">30000<pos:position pos:line="115" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="115" pos:column="29"/></decl_stmt>  <comment type="block" pos:line="115" pos:column="31">/* Timeout is milliseconds */</comment>
        <expr_stmt><expr><name pos:line="116" pos:column="9">winnt_mpm_state<pos:position pos:line="116" pos:column="24"/></name> <operator pos:line="116" pos:column="25">=<pos:position pos:line="116" pos:column="26"/></operator> <name pos:line="116" pos:column="27">AP_MPMQ_STOPPING<pos:position pos:line="116" pos:column="43"/></name></expr>;<pos:position pos:line="116" pos:column="44"/></expr_stmt>

        <comment type="block" pos:line="118" pos:column="9">/* This shutdown is only marginally graceful. We will give the 
         * child a bit of time to exit gracefully. If the time expires,
         * the child will be wacked.
         */</comment>
        <if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><operator pos:line="122" pos:column="13">!<pos:position pos:line="122" pos:column="14"/></operator><call><name pos:line="122" pos:column="14">strcasecmp<pos:position pos:line="122" pos:column="24"/></name><argument_list pos:line="122" pos:column="24">(<argument><expr><name pos:line="122" pos:column="25">signal_arg<pos:position pos:line="122" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="37">"runservice"<pos:position pos:line="122" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="51"/></condition><then pos:line="122" pos:column="51"> <block pos:line="122" pos:column="52">{
            <expr_stmt><expr><call><name pos:line="123" pos:column="13">mpm_service_stopping<pos:position pos:line="123" pos:column="33"/></name><argument_list pos:line="123" pos:column="33">()<pos:position pos:line="123" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="124" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="125" pos:column="9">/* Signal the child processes to exit */</comment>
        <if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><call><name pos:line="126" pos:column="13">SetEvent<pos:position pos:line="126" pos:column="21"/></name><argument_list pos:line="126" pos:column="21">(<argument><expr><name pos:line="126" pos:column="22">child_exit_event<pos:position pos:line="126" pos:column="38"/></name></expr></argument>)<pos:position pos:line="126" pos:column="39"/></argument_list></call> <operator pos:line="126" pos:column="40">==<pos:position pos:line="126" pos:column="42"/></operator> <literal type="number" pos:line="126" pos:column="43">0<pos:position pos:line="126" pos:column="44"/></literal></expr>)<pos:position pos:line="126" pos:column="45"/></condition><then pos:line="126" pos:column="45"> <block pos:line="126" pos:column="46">{
                <expr_stmt><expr><call><name pos:line="127" pos:column="17">ap_log_error<pos:position pos:line="127" pos:column="29"/></name><argument_list pos:line="127" pos:column="29">(<argument><expr><name pos:line="127" pos:column="30">APLOG_MARK<pos:position pos:line="127" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="127" pos:column="41">APLOG_ERR<pos:position pos:line="127" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="127" pos:column="52">apr_get_os_error<pos:position pos:line="127" pos:column="68"/></name><argument_list pos:line="127" pos:column="68">()<pos:position pos:line="127" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="127" pos:column="72">ap_server_conf<pos:position pos:line="127" pos:column="86"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="128" pos:column="30">"Parent: SetEvent for child process %d failed"<pos:position pos:line="128" pos:column="76"/></literal></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="78">event_handles<pos:position pos:line="128" pos:column="91"/></name><index pos:line="128" pos:column="91">[<expr><name pos:line="128" pos:column="92">CHILD_HANDLE<pos:position pos:line="128" pos:column="104"/></name></expr>]<pos:position pos:line="128" pos:column="105"/></index></name></expr></argument>)<pos:position pos:line="128" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="107"/></expr_stmt>
        }<pos:position pos:line="129" pos:column="10"/></block></then></if>
        <if pos:line="130" pos:column="9">if <condition pos:line="130" pos:column="12">(<expr><name><name pos:line="130" pos:column="13">event_handles<pos:position pos:line="130" pos:column="26"/></name><index pos:line="130" pos:column="26">[<expr><name pos:line="130" pos:column="27">CHILD_HANDLE<pos:position pos:line="130" pos:column="39"/></name></expr>]<pos:position pos:line="130" pos:column="40"/></index></name></expr>)<pos:position pos:line="130" pos:column="41"/></condition><then pos:line="130" pos:column="41"> <block pos:line="130" pos:column="42">{
            <expr_stmt><expr><name pos:line="131" pos:column="13">rv<pos:position pos:line="131" pos:column="15"/></name> <operator pos:line="131" pos:column="16">=<pos:position pos:line="131" pos:column="17"/></operator> <call><name pos:line="131" pos:column="18">WaitForSingleObject<pos:position pos:line="131" pos:column="37"/></name><argument_list pos:line="131" pos:column="37">(<argument><expr><name><name pos:line="131" pos:column="38">event_handles<pos:position pos:line="131" pos:column="51"/></name><index pos:line="131" pos:column="51">[<expr><name pos:line="131" pos:column="52">CHILD_HANDLE<pos:position pos:line="131" pos:column="64"/></name></expr>]<pos:position pos:line="131" pos:column="65"/></index></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="67">timeout<pos:position pos:line="131" pos:column="74"/></name></expr></argument>)<pos:position pos:line="131" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="76"/></expr_stmt>
            <if pos:line="132" pos:column="13">if <condition pos:line="132" pos:column="16">(<expr><name pos:line="132" pos:column="17">rv<pos:position pos:line="132" pos:column="19"/></name> <operator pos:line="132" pos:column="20">==<pos:position pos:line="132" pos:column="22"/></operator> <name pos:line="132" pos:column="23">WAIT_OBJECT_0<pos:position pos:line="132" pos:column="36"/></name></expr>)<pos:position pos:line="132" pos:column="37"/></condition><then pos:line="132" pos:column="37"> <block pos:line="132" pos:column="38">{
                <expr_stmt><expr><call><name pos:line="133" pos:column="17">ap_log_error<pos:position pos:line="133" pos:column="29"/></name><argument_list pos:line="133" pos:column="29">(<argument><expr><name pos:line="133" pos:column="30">APLOG_MARK<pos:position pos:line="133" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="133" pos:column="41">APLOG_NOTICE<pos:position pos:line="133" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="55">APR_SUCCESS<pos:position pos:line="133" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="68">ap_server_conf<pos:position pos:line="133" pos:column="82"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="134" pos:column="30">"Parent: Child process exited successfully."<pos:position pos:line="134" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="76"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="135" pos:column="17">CloseHandle<pos:position pos:line="135" pos:column="28"/></name><argument_list pos:line="135" pos:column="28">(<argument><expr><name><name pos:line="135" pos:column="29">event_handles<pos:position pos:line="135" pos:column="42"/></name><index pos:line="135" pos:column="42">[<expr><name pos:line="135" pos:column="43">CHILD_HANDLE<pos:position pos:line="135" pos:column="55"/></name></expr>]<pos:position pos:line="135" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="135" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="136" pos:column="17">event_handles<pos:position pos:line="136" pos:column="30"/></name><index pos:line="136" pos:column="30">[<expr><name pos:line="136" pos:column="31">CHILD_HANDLE<pos:position pos:line="136" pos:column="43"/></name></expr>]<pos:position pos:line="136" pos:column="44"/></index></name> <operator pos:line="136" pos:column="45">=<pos:position pos:line="136" pos:column="46"/></operator> <name pos:line="136" pos:column="47">NULL<pos:position pos:line="136" pos:column="51"/></name></expr>;<pos:position pos:line="136" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="137" pos:column="14"/></block></then>
            <else pos:line="138" pos:column="13">else <block pos:line="138" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="139" pos:column="17">ap_log_error<pos:position pos:line="139" pos:column="29"/></name><argument_list pos:line="139" pos:column="29">(<argument><expr><name pos:line="139" pos:column="30">APLOG_MARK<pos:position pos:line="139" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="139" pos:column="41">APLOG_NOTICE<pos:position pos:line="139" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="55">APR_SUCCESS<pos:position pos:line="139" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="68">ap_server_conf<pos:position pos:line="139" pos:column="82"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="140" pos:column="30">"Parent: Forcing termination of child process %d "<pos:position pos:line="140" pos:column="80"/></literal></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="82">event_handles<pos:position pos:line="140" pos:column="95"/></name><index pos:line="140" pos:column="95">[<expr><name pos:line="140" pos:column="96">CHILD_HANDLE<pos:position pos:line="140" pos:column="108"/></name></expr>]<pos:position pos:line="140" pos:column="109"/></index></name></expr></argument>)<pos:position pos:line="140" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="111"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="141" pos:column="17">TerminateProcess<pos:position pos:line="141" pos:column="33"/></name><argument_list pos:line="141" pos:column="33">(<argument><expr><name><name pos:line="141" pos:column="34">event_handles<pos:position pos:line="141" pos:column="47"/></name><index pos:line="141" pos:column="47">[<expr><name pos:line="141" pos:column="48">CHILD_HANDLE<pos:position pos:line="141" pos:column="60"/></name></expr>]<pos:position pos:line="141" pos:column="61"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="63">1<pos:position pos:line="141" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="66"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="142" pos:column="17">CloseHandle<pos:position pos:line="142" pos:column="28"/></name><argument_list pos:line="142" pos:column="28">(<argument><expr><name><name pos:line="142" pos:column="29">event_handles<pos:position pos:line="142" pos:column="42"/></name><index pos:line="142" pos:column="42">[<expr><name pos:line="142" pos:column="43">CHILD_HANDLE<pos:position pos:line="142" pos:column="55"/></name></expr>]<pos:position pos:line="142" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="142" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="143" pos:column="17">event_handles<pos:position pos:line="143" pos:column="30"/></name><index pos:line="143" pos:column="30">[<expr><name pos:line="143" pos:column="31">CHILD_HANDLE<pos:position pos:line="143" pos:column="43"/></name></expr>]<pos:position pos:line="143" pos:column="44"/></index></name> <operator pos:line="143" pos:column="45">=<pos:position pos:line="143" pos:column="46"/></operator> <name pos:line="143" pos:column="47">NULL<pos:position pos:line="143" pos:column="51"/></name></expr>;<pos:position pos:line="143" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="144" pos:column="14"/></block></else></if>
        }<pos:position pos:line="145" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="146" pos:column="9">CloseHandle<pos:position pos:line="146" pos:column="20"/></name><argument_list pos:line="146" pos:column="20">(<argument><expr><name pos:line="146" pos:column="21">child_exit_event<pos:position pos:line="146" pos:column="37"/></name></expr></argument>)<pos:position pos:line="146" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="39"/></expr_stmt>
        <return pos:line="147" pos:column="9">return <expr><literal type="number" pos:line="147" pos:column="16">0<pos:position pos:line="147" pos:column="17"/></literal></expr>;<pos:position pos:line="147" pos:column="18"/></return>  <comment type="block" pos:line="147" pos:column="20">/* Tell the caller we do not want to restart */</comment>
    }<pos:position pos:line="148" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="149" pos:column="5">winnt_mpm_state<pos:position pos:line="149" pos:column="20"/></name> <operator pos:line="149" pos:column="21">=<pos:position pos:line="149" pos:column="22"/></operator> <name pos:line="149" pos:column="23">AP_MPMQ_STARTING<pos:position pos:line="149" pos:column="39"/></name></expr>;<pos:position pos:line="149" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="150" pos:column="5">CloseHandle<pos:position pos:line="150" pos:column="16"/></name><argument_list pos:line="150" pos:column="16">(<argument><expr><name pos:line="150" pos:column="17">child_exit_event<pos:position pos:line="150" pos:column="33"/></name></expr></argument>)<pos:position pos:line="150" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="35"/></expr_stmt>
    <return pos:line="151" pos:column="5">return <expr><literal type="number" pos:line="151" pos:column="12">1<pos:position pos:line="151" pos:column="13"/></literal></expr>;<pos:position pos:line="151" pos:column="14"/></return>      <comment type="block" pos:line="151" pos:column="20">/* Tell the caller we want a restart */</comment>
}<pos:position pos:line="152" pos:column="2"/></block></function></unit>

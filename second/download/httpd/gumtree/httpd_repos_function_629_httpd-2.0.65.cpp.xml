<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_629_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">local_compare<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">p1<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">void<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">p2<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">table_compare_t<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">compare<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">table_t<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type> <name pos:line="2" pos:column="67">table_p<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">table_entry_t<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier><specifier pos:line="4" pos:column="26">const<pos:position pos:line="4" pos:column="31"/></specifier> <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier></type><name pos:line="4" pos:column="33">ent1_p<pos:position pos:line="4" pos:column="39"/></name> <init pos:line="4" pos:column="40">= <expr><name pos:line="4" pos:column="42">p1<pos:position pos:line="4" pos:column="44"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier>const <modifier pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="54">ent2_p<pos:position pos:line="4" pos:column="60"/></name> <init pos:line="4" pos:column="61">= <expr><name pos:line="4" pos:column="63">p2<pos:position pos:line="4" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">cmp<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">int<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">size<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* compare as many bytes as we can */</comment>
    <expr_stmt><expr><name pos:line="9" pos:column="5">size<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <name><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">ent1_p<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">)<pos:position pos:line="9" pos:column="21"/></operator><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">te_key_size<pos:position pos:line="9" pos:column="34"/></name></name></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><operator pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">ent2_p<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">)<pos:position pos:line="10" pos:column="18"/></operator><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">te_key_size<pos:position pos:line="10" pos:column="31"/></name></name> <operator pos:line="10" pos:column="32">&lt;<pos:position pos:line="10" pos:column="36"/></operator> <name pos:line="10" pos:column="34">size<pos:position pos:line="10" pos:column="38"/></name></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="9">size<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">ent2_p<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">)<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">te_key_size<pos:position pos:line="11" pos:column="38"/></name></name></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="12" pos:column="5">cmp<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <call><name pos:line="12" pos:column="11">memcmp<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><call><name pos:line="12" pos:column="18">ENTRY_KEY_BUF<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><operator pos:line="12" pos:column="32">*<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">ent1_p<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="42">ENTRY_KEY_BUF<pos:position pos:line="12" pos:column="55"/></name><argument_list pos:line="12" pos:column="55">(<argument><expr><operator pos:line="12" pos:column="56">*<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="57">ent2_p<pos:position pos:line="12" pos:column="63"/></name></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="12" pos:column="66">size<pos:position pos:line="12" pos:column="70"/></name></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>
    <comment type="block" pos:line="13" pos:column="5">/* if common-size equal, then if next more bytes, it is larger */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">cmp<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">==<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>)<pos:position pos:line="14" pos:column="18"/></condition><then pos:line="14" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="9">cmp<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <name><operator pos:line="15" pos:column="15">(<pos:position pos:line="15" pos:column="16"/></operator><operator pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">ent1_p<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">)<pos:position pos:line="15" pos:column="24"/></operator><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">te_key_size<pos:position pos:line="15" pos:column="37"/></name></name> <operator pos:line="15" pos:column="38">-<pos:position pos:line="15" pos:column="39"/></operator> <name><operator pos:line="15" pos:column="40">(<pos:position pos:line="15" pos:column="41"/></operator><operator pos:line="15" pos:column="41">*<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="42">ent2_p<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">)<pos:position pos:line="15" pos:column="49"/></operator><operator pos:line="15" pos:column="49">-&gt;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="51">te_key_size<pos:position pos:line="15" pos:column="62"/></name></name></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt></block></then></if>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">cmp<pos:position pos:line="16" pos:column="15"/></name></expr>;<pos:position pos:line="16" pos:column="16"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2449_httpd-2.2.34.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ap_mpm_run<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">apr_pool_t<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">_pconf<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">apr_pool_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">plog<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">server_rec<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">s<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">remaining_threads_to_start<pos:position pos:line="3" pos:column="35"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="37">i<pos:position pos:line="3" pos:column="38"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="39">j<pos:position pos:line="3" pos:column="40"/></name></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ap_listen_rec<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">lr<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">pconf<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <name pos:line="6" pos:column="13">_pconf<pos:position pos:line="6" pos:column="19"/></name></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">ap_server_conf<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">s<pos:position pos:line="7" pos:column="23"/></name></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* Increase the available pool of fd's.  This code from
     * Joe Kloss &lt;joek@be.com&gt;
     */</comment>
    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">( <expr><name pos:line="12" pos:column="9">FD_SETSIZE<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">&gt;<pos:position pos:line="12" pos:column="24"/></operator> <literal type="number" pos:line="12" pos:column="22">128<pos:position pos:line="12" pos:column="25"/></literal> <operator pos:line="12" pos:column="26">&amp;&amp;<pos:position pos:line="12" pos:column="36"/></operator> <operator pos:line="12" pos:column="29">(<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">i<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">=<pos:position pos:line="12" pos:column="33"/></operator> <call><name pos:line="12" pos:column="34">_kset_fd_limit_<pos:position pos:line="12" pos:column="49"/></name><argument_list pos:line="12" pos:column="49">( <argument><expr><literal type="number" pos:line="12" pos:column="51">128<pos:position pos:line="12" pos:column="54"/></literal></expr></argument> )<pos:position pos:line="12" pos:column="56"/></argument_list></call><operator pos:line="12" pos:column="56">)<pos:position pos:line="12" pos:column="57"/></operator> <operator pos:line="12" pos:column="58">&lt;<pos:position pos:line="12" pos:column="62"/></operator> <literal type="number" pos:line="12" pos:column="60">0<pos:position pos:line="12" pos:column="61"/></literal></expr> )<pos:position pos:line="12" pos:column="63"/></condition><then><block pos:line="12" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_log_error<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">APLOG_MARK<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">APLOG_ERR<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">i<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">s<pos:position pos:line="13" pos:column="49"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="14" pos:column="13">"could not set FD_SETSIZE (_kset_fd_limit_ failed)"<pos:position pos:line="14" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* BeOS R5 doesn't support pipes on select() calls, so we use a
     * UDP socket as these are supported in both R5 and BONE.  If we only cared
     * about BONE we'd use a pipe, but there it is.
     * As we have UDP support in APR, now use the APR functions and check all the
     * return values...
     */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">apr_sockaddr_info_get<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><operator pos:line="23" pos:column="31">&amp;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="32">udp_sa<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="40">"127.0.0.1"<pos:position pos:line="23" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="53">APR_UNSPEC<pos:position pos:line="23" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="65">7772<pos:position pos:line="23" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="71">0<pos:position pos:line="23" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="74">_pconf<pos:position pos:line="23" pos:column="80"/></name></expr></argument>)<pos:position pos:line="23" pos:column="81"/></argument_list></call>
        <operator pos:line="24" pos:column="9">!=<pos:position pos:line="24" pos:column="11"/></operator> <name pos:line="24" pos:column="12">APR_SUCCESS<pos:position pos:line="24" pos:column="23"/></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then><block pos:line="24" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ap_log_error<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">APLOG_MARK<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">APLOG_ALERT<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="47">errno<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">s<pos:position pos:line="25" pos:column="55"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="26" pos:column="13">"couldn't create control socket information, shutting down"<pos:position pos:line="26" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="74"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">1<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name pos:line="29" pos:column="9">apr_socket_create<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><operator pos:line="29" pos:column="27">&amp;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="28">udp_sock<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="38">udp_sa<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">-&gt;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="46">family<pos:position pos:line="29" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">SOCK_DGRAM<pos:position pos:line="29" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="66">0<pos:position pos:line="29" pos:column="67"/></literal></expr></argument>,
                      <argument><expr><name pos:line="30" pos:column="23">_pconf<pos:position pos:line="30" pos:column="29"/></name></expr></argument>)<pos:position pos:line="30" pos:column="30"/></argument_list></call> <operator pos:line="30" pos:column="31">!=<pos:position pos:line="30" pos:column="33"/></operator> <name pos:line="30" pos:column="34">APR_SUCCESS<pos:position pos:line="30" pos:column="45"/></name></expr>)<pos:position pos:line="30" pos:column="46"/></condition><then><block pos:line="30" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">ap_log_error<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">APLOG_MARK<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">APLOG_ALERT<pos:position pos:line="31" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="47">errno<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="54">s<pos:position pos:line="31" pos:column="55"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="32" pos:column="13">"couldn't create control socket, shutting down"<pos:position pos:line="32" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="62"/></expr_stmt>
        <return pos:line="33" pos:column="9">return <expr><literal type="number" pos:line="33" pos:column="16">1<pos:position pos:line="33" pos:column="17"/></literal></expr>;<pos:position pos:line="33" pos:column="18"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><call><name pos:line="35" pos:column="9">apr_socket_bind<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">udp_sock<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">udp_sa<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call> <operator pos:line="35" pos:column="43">!=<pos:position pos:line="35" pos:column="45"/></operator> <name pos:line="35" pos:column="46">APR_SUCCESS<pos:position pos:line="35" pos:column="57"/></name></expr>)<pos:position pos:line="35" pos:column="58"/></condition><then><block pos:line="35" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_error<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">APLOG_MARK<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">APLOG_ALERT<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">errno<pos:position pos:line="36" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="54">s<pos:position pos:line="36" pos:column="55"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="37" pos:column="13">"couldn't bind UDP socket!"<pos:position pos:line="37" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><literal type="number" pos:line="38" pos:column="16">1<pos:position pos:line="38" pos:column="17"/></literal></expr>;<pos:position pos:line="38" pos:column="18"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">(<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">num_listening_sockets<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">=<pos:position pos:line="41" pos:column="33"/></operator> <call><name pos:line="41" pos:column="34">ap_setup_listeners<pos:position pos:line="41" pos:column="52"/></name><argument_list pos:line="41" pos:column="52">(<argument><expr><name pos:line="41" pos:column="53">ap_server_conf<pos:position pos:line="41" pos:column="67"/></name></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call><operator pos:line="41" pos:column="68">)<pos:position pos:line="41" pos:column="69"/></operator> <operator pos:line="41" pos:column="70">&lt;<pos:position pos:line="41" pos:column="74"/></operator> <literal type="number" pos:line="41" pos:column="72">1<pos:position pos:line="41" pos:column="73"/></literal></expr>)<pos:position pos:line="41" pos:column="74"/></condition><then pos:line="41" pos:column="74"> <block pos:line="41" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">ap_log_error<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">APLOG_MARK<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="34">APLOG_ALERT<pos:position pos:line="42" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="47">0<pos:position pos:line="42" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="50">s<pos:position pos:line="42" pos:column="51"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="43" pos:column="13">"no listening sockets available, shutting down"<pos:position pos:line="43" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="62"/></expr_stmt>
        <return pos:line="44" pos:column="9">return <expr><literal type="number" pos:line="44" pos:column="16">1<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">ap_log_pid<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">(<argument><expr><name pos:line="47" pos:column="16">pconf<pos:position pos:line="47" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="23">ap_pid_fname<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="49" pos:column="5">/*
     * Create our locks...
     */</comment>

    <comment type="block" pos:line="53" pos:column="5">/* accept_mutex
     * used to lock around select so we only have one thread
     * in select at a time
     */</comment>
    <expr_stmt><expr><name pos:line="57" pos:column="5">rv<pos:position pos:line="57" pos:column="7"/></name> <operator pos:line="57" pos:column="8">=<pos:position pos:line="57" pos:column="9"/></operator> <call><name pos:line="57" pos:column="10">apr_thread_mutex_create<pos:position pos:line="57" pos:column="33"/></name><argument_list pos:line="57" pos:column="33">(<argument><expr><operator pos:line="57" pos:column="34">&amp;<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="35">accept_mutex<pos:position pos:line="57" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="49">0<pos:position pos:line="57" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="52">pconf<pos:position pos:line="57" pos:column="57"/></name></expr></argument>)<pos:position pos:line="57" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="59"/></expr_stmt>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">rv<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">!=<pos:position pos:line="58" pos:column="14"/></operator> <name pos:line="58" pos:column="15">APR_SUCCESS<pos:position pos:line="58" pos:column="26"/></name></expr>)<pos:position pos:line="58" pos:column="27"/></condition><then pos:line="58" pos:column="27"> <block pos:line="58" pos:column="28">{
        <comment type="block" pos:line="59" pos:column="9">/* tsch tsch, can't have more than one thread in the accept loop
           at a time so we need to fall on our sword... */</comment>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">ap_log_error<pos:position pos:line="61" pos:column="21"/></name><argument_list pos:line="61" pos:column="21">(<argument><expr><name pos:line="61" pos:column="22">APLOG_MARK<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="34">APLOG_EMERG<pos:position pos:line="61" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="47">rv<pos:position pos:line="61" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="51">s<pos:position pos:line="61" pos:column="52"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="62" pos:column="22">"Couldn't create accept lock"<pos:position pos:line="62" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="53"/></expr_stmt>
        <return pos:line="63" pos:column="9">return <expr><literal type="number" pos:line="63" pos:column="16">1<pos:position pos:line="63" pos:column="17"/></literal></expr>;<pos:position pos:line="63" pos:column="18"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="66" pos:column="5">/*
     * Startup/shutdown...
     */</comment>

    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><operator pos:line="70" pos:column="9">!<pos:position pos:line="70" pos:column="10"/></operator><name pos:line="70" pos:column="10">is_graceful<pos:position pos:line="70" pos:column="21"/></name></expr>)<pos:position pos:line="70" pos:column="22"/></condition><then pos:line="70" pos:column="22"> <block pos:line="70" pos:column="23">{
        <comment type="block" pos:line="71" pos:column="9">/* setup the scoreboard shared memory */</comment>
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><call><name pos:line="72" pos:column="13">ap_run_pre_mpm<pos:position pos:line="72" pos:column="27"/></name><argument_list pos:line="72" pos:column="27">(<argument><expr><name><name pos:line="72" pos:column="28">s<pos:position pos:line="72" pos:column="29"/></name><operator pos:line="72" pos:column="29">-&gt;<pos:position pos:line="72" pos:column="34"/></operator><name pos:line="72" pos:column="31">process<pos:position pos:line="72" pos:column="38"/></name><operator pos:line="72" pos:column="38">-&gt;<pos:position pos:line="72" pos:column="43"/></operator><name pos:line="72" pos:column="40">pool<pos:position pos:line="72" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="46">SB_SHARED<pos:position pos:line="72" pos:column="55"/></name></expr></argument>)<pos:position pos:line="72" pos:column="56"/></argument_list></call> <operator pos:line="72" pos:column="57">!=<pos:position pos:line="72" pos:column="59"/></operator> <name pos:line="72" pos:column="60">OK<pos:position pos:line="72" pos:column="62"/></name></expr>)<pos:position pos:line="72" pos:column="63"/></condition><then pos:line="72" pos:column="63"> <block pos:line="72" pos:column="64">{
            <return pos:line="73" pos:column="13">return <expr><literal type="number" pos:line="73" pos:column="20">1<pos:position pos:line="73" pos:column="21"/></literal></expr>;<pos:position pos:line="73" pos:column="22"/></return>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>

        <for pos:line="76" pos:column="9">for <control pos:line="76" pos:column="13">(<init><expr><name pos:line="76" pos:column="14">i<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">=<pos:position pos:line="76" pos:column="17"/></operator> <literal type="number" pos:line="76" pos:column="18">0<pos:position pos:line="76" pos:column="19"/></literal></expr>;<pos:position pos:line="76" pos:column="20"/></init> <condition><expr><name pos:line="76" pos:column="21">i<pos:position pos:line="76" pos:column="22"/></name> <operator pos:line="76" pos:column="23">&lt;<pos:position pos:line="76" pos:column="27"/></operator> <name pos:line="76" pos:column="25">HARD_SERVER_LIMIT<pos:position pos:line="76" pos:column="42"/></name></expr>;<pos:position pos:line="76" pos:column="43"/></condition> <incr><expr><name pos:line="76" pos:column="44">i<pos:position pos:line="76" pos:column="45"/></name><operator pos:line="76" pos:column="45">++<pos:position pos:line="76" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="76" pos:column="48"/></control> <block pos:line="76" pos:column="49">{
            <expr_stmt><expr><name><name pos:line="77" pos:column="13">ap_scoreboard_image<pos:position pos:line="77" pos:column="32"/></name><operator pos:line="77" pos:column="32">-&gt;<pos:position pos:line="77" pos:column="37"/></operator><name pos:line="77" pos:column="34">parent<pos:position pos:line="77" pos:column="40"/></name><index pos:line="77" pos:column="40">[<expr><name pos:line="77" pos:column="41">i<pos:position pos:line="77" pos:column="42"/></name></expr>]<pos:position pos:line="77" pos:column="43"/></index></name><operator pos:line="77" pos:column="43">.<pos:position pos:line="77" pos:column="44"/></operator><name pos:line="77" pos:column="44">pid<pos:position pos:line="77" pos:column="47"/></name> <operator pos:line="77" pos:column="48">=<pos:position pos:line="77" pos:column="49"/></operator> <literal type="number" pos:line="77" pos:column="50">0<pos:position pos:line="77" pos:column="51"/></literal></expr>;<pos:position pos:line="77" pos:column="52"/></expr_stmt>
            <for pos:line="78" pos:column="13">for <control pos:line="78" pos:column="17">(<init><expr><name pos:line="78" pos:column="18">j<pos:position pos:line="78" pos:column="19"/></name> <operator pos:line="78" pos:column="20">=<pos:position pos:line="78" pos:column="21"/></operator> <literal type="number" pos:line="78" pos:column="22">0<pos:position pos:line="78" pos:column="23"/></literal></expr>;<pos:position pos:line="78" pos:column="24"/></init><condition><expr><name pos:line="78" pos:column="24">j<pos:position pos:line="78" pos:column="25"/></name> <operator pos:line="78" pos:column="26">&lt;<pos:position pos:line="78" pos:column="30"/></operator> <name pos:line="78" pos:column="28">HARD_THREAD_LIMIT<pos:position pos:line="78" pos:column="45"/></name></expr>;<pos:position pos:line="78" pos:column="46"/></condition> <incr><expr><name pos:line="78" pos:column="47">j<pos:position pos:line="78" pos:column="48"/></name><operator pos:line="78" pos:column="48">++<pos:position pos:line="78" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="78" pos:column="51"/></control>
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="79" pos:column="17">ap_scoreboard_image<pos:position pos:line="79" pos:column="36"/></name><operator pos:line="79" pos:column="36">-&gt;<pos:position pos:line="79" pos:column="41"/></operator><name pos:line="79" pos:column="38">servers<pos:position pos:line="79" pos:column="45"/></name><index pos:line="79" pos:column="45">[<expr><name pos:line="79" pos:column="46">i<pos:position pos:line="79" pos:column="47"/></name></expr>]<pos:position pos:line="79" pos:column="48"/></index><index pos:line="79" pos:column="48">[<expr><name pos:line="79" pos:column="49">j<pos:position pos:line="79" pos:column="50"/></name></expr>]<pos:position pos:line="79" pos:column="51"/></index></name><operator pos:line="79" pos:column="51">.<pos:position pos:line="79" pos:column="52"/></operator><name pos:line="79" pos:column="52">tid<pos:position pos:line="79" pos:column="55"/></name> <operator pos:line="79" pos:column="56">=<pos:position pos:line="79" pos:column="57"/></operator> <literal type="number" pos:line="79" pos:column="58">0<pos:position pos:line="79" pos:column="59"/></literal></expr>;<pos:position pos:line="79" pos:column="60"/></expr_stmt></block></for>
        }<pos:position pos:line="80" pos:column="10"/></block></for>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>

    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name pos:line="83" pos:column="9">HARD_SERVER_LIMIT<pos:position pos:line="83" pos:column="26"/></name> <operator pos:line="83" pos:column="27">==<pos:position pos:line="83" pos:column="29"/></operator> <literal type="number" pos:line="83" pos:column="30">1<pos:position pos:line="83" pos:column="31"/></literal></expr>)<pos:position pos:line="83" pos:column="32"/></condition><then pos:line="83" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="84" pos:column="9">ap_scoreboard_image<pos:position pos:line="84" pos:column="28"/></name><operator pos:line="84" pos:column="28">-&gt;<pos:position pos:line="84" pos:column="33"/></operator><name pos:line="84" pos:column="30">parent<pos:position pos:line="84" pos:column="36"/></name><index pos:line="84" pos:column="36">[<expr><literal type="number" pos:line="84" pos:column="37">0<pos:position pos:line="84" pos:column="38"/></literal></expr>]<pos:position pos:line="84" pos:column="39"/></index></name><operator pos:line="84" pos:column="39">.<pos:position pos:line="84" pos:column="40"/></operator><name pos:line="84" pos:column="40">pid<pos:position pos:line="84" pos:column="43"/></name> <operator pos:line="84" pos:column="44">=<pos:position pos:line="84" pos:column="45"/></operator> <call><name pos:line="84" pos:column="46">getpid<pos:position pos:line="84" pos:column="52"/></name><argument_list pos:line="84" pos:column="52">()<pos:position pos:line="84" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="55"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="86" pos:column="5">set_signals<pos:position pos:line="86" pos:column="16"/></name><argument_list pos:line="86" pos:column="16">()<pos:position pos:line="86" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="19"/></expr_stmt>

    <comment type="block" pos:line="88" pos:column="5">/* Sanity checks to avoid thrashing... */</comment>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><name pos:line="89" pos:column="9">max_spare_threads<pos:position pos:line="89" pos:column="26"/></name> <operator pos:line="89" pos:column="27">&lt;<pos:position pos:line="89" pos:column="31"/></operator> <name pos:line="89" pos:column="29">min_spare_threads<pos:position pos:line="89" pos:column="46"/></name></expr> )<pos:position pos:line="89" pos:column="48"/></condition><then pos:line="89" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="9">max_spare_threads<pos:position pos:line="90" pos:column="26"/></name> <operator pos:line="90" pos:column="27">=<pos:position pos:line="90" pos:column="28"/></operator> <name pos:line="90" pos:column="29">min_spare_threads<pos:position pos:line="90" pos:column="46"/></name></expr>;<pos:position pos:line="90" pos:column="47"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="92" pos:column="5">/* If we're doing a graceful_restart then we're going to see a lot
     * of threads exiting immediately when we get into the main loop
     * below (because we just sent them AP_SIG_GRACEFUL).  This happens
     * pretty rapidly... and for each one that exits we'll start a new one
     * until we reach at least threads_min_free.  But we may be permitted to
     * start more than that, so we'll just keep track of how many we're
     * supposed to start up without the 1 second penalty between each fork.
     */</comment>
    <expr_stmt><expr><name pos:line="100" pos:column="5">remaining_threads_to_start<pos:position pos:line="100" pos:column="31"/></name> <operator pos:line="100" pos:column="32">=<pos:position pos:line="100" pos:column="33"/></operator> <name pos:line="100" pos:column="34">ap_threads_to_start<pos:position pos:line="100" pos:column="53"/></name></expr>;<pos:position pos:line="100" pos:column="54"/></expr_stmt>
    <comment type="block" pos:line="101" pos:column="5">/* sanity check on the number to start... */</comment>
    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><name pos:line="102" pos:column="9">remaining_threads_to_start<pos:position pos:line="102" pos:column="35"/></name> <operator pos:line="102" pos:column="36">&gt;<pos:position pos:line="102" pos:column="40"/></operator> <name pos:line="102" pos:column="38">ap_thread_limit<pos:position pos:line="102" pos:column="53"/></name></expr>)<pos:position pos:line="102" pos:column="54"/></condition><then pos:line="102" pos:column="54"> <block pos:line="102" pos:column="55">{
            <expr_stmt><expr><name pos:line="103" pos:column="13">remaining_threads_to_start<pos:position pos:line="103" pos:column="39"/></name> <operator pos:line="103" pos:column="40">=<pos:position pos:line="103" pos:column="41"/></operator> <name pos:line="103" pos:column="42">ap_thread_limit<pos:position pos:line="103" pos:column="57"/></name></expr>;<pos:position pos:line="103" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="104" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="106" pos:column="5">/* If we're doing the single process thing or we're in a graceful_restart
     * then we don't start threads here.
     * if we're in one_process mode we don't want to start threads
     * do we??
     */</comment>
    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><operator pos:line="111" pos:column="9">!<pos:position pos:line="111" pos:column="10"/></operator><name pos:line="111" pos:column="10">is_graceful<pos:position pos:line="111" pos:column="21"/></name> <operator pos:line="111" pos:column="22">&amp;&amp;<pos:position pos:line="111" pos:column="32"/></operator> <operator pos:line="111" pos:column="25">!<pos:position pos:line="111" pos:column="26"/></operator><name pos:line="111" pos:column="26">one_process<pos:position pos:line="111" pos:column="37"/></name></expr>)<pos:position pos:line="111" pos:column="38"/></condition><then pos:line="111" pos:column="38"> <block pos:line="111" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="112" pos:column="13">startup_threads<pos:position pos:line="112" pos:column="28"/></name><argument_list pos:line="112" pos:column="28">(<argument><expr><name pos:line="112" pos:column="29">remaining_threads_to_start<pos:position pos:line="112" pos:column="55"/></name></expr></argument>)<pos:position pos:line="112" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name pos:line="113" pos:column="13">remaining_threads_to_start<pos:position pos:line="113" pos:column="39"/></name> <operator pos:line="113" pos:column="40">=<pos:position pos:line="113" pos:column="41"/></operator> <literal type="number" pos:line="113" pos:column="42">0<pos:position pos:line="113" pos:column="43"/></literal></expr>;<pos:position pos:line="113" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="114" pos:column="6"/></block></then> <else pos:line="114" pos:column="7">else <block pos:line="114" pos:column="12">{<pos:position pos:line="114" pos:column="13"/></block></else></if></block></function>
            <comment type="block" pos:line="115" pos:column="13">/* give the system so</comment></unit>

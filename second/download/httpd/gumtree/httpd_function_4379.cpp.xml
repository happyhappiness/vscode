<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4379.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_headers<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">request_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">r<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">int<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">state<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="3" pos:column="27">char<pos:position pos:line="3" pos:column="31"/></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">readbuf<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="4" pos:column="27">apr_bucket_brigade<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier></type><name pos:line="4" pos:column="47">ob<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="50"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">conn_rec<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">c<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name><name pos:line="6" pos:column="19">r<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">connection<pos:position pos:line="6" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">itr<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">readbuf<pos:position pos:line="7" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>

    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">*<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">itr<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition> <block pos:line="9" pos:column="18">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">itr<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">==<pos:position pos:line="10" pos:column="20"/></operator> <literal type="char" pos:line="10" pos:column="21">'\r'<pos:position pos:line="10" pos:column="25"/></literal></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26"> <block pos:line="10" pos:column="27">{
            <switch pos:line="11" pos:column="13">switch <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">state<pos:position pos:line="11" pos:column="27"/></name></expr>)<pos:position pos:line="11" pos:column="28"/></condition> <block pos:line="11" pos:column="29">{
                <case pos:line="12" pos:column="17">case <expr><name pos:line="12" pos:column="22">HDR_STATE_GOT_CRLF<pos:position pos:line="12" pos:column="40"/></name></expr>:<pos:position pos:line="12" pos:column="41"/></case>
                    <expr_stmt><expr><operator pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">state<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="30">HDR_STATE_GOT_CRLFCR<pos:position pos:line="13" pos:column="50"/></name></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt>
                    <break pos:line="14" pos:column="21">break;<pos:position pos:line="14" pos:column="27"/></break>

                <default pos:line="16" pos:column="17">default:<pos:position pos:line="16" pos:column="25"/></default>
                    <expr_stmt><expr><operator pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">state<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">HDR_STATE_GOT_CR<pos:position pos:line="17" pos:column="46"/></name></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
                    <break pos:line="18" pos:column="21">break;<pos:position pos:line="18" pos:column="27"/></break>
            }<pos:position pos:line="19" pos:column="14"/></block></switch>
        }<pos:position pos:line="20" pos:column="10"/></block></then>
        <elseif pos:line="21" pos:column="9">else <if pos:line="21" pos:column="14">if <condition pos:line="21" pos:column="17">(<expr><operator pos:line="21" pos:column="18">*<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">itr<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">==<pos:position pos:line="21" pos:column="25"/></operator> <literal type="char" pos:line="21" pos:column="26">'\n'<pos:position pos:line="21" pos:column="30"/></literal></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31"> <block pos:line="21" pos:column="32">{
            <switch pos:line="22" pos:column="13">switch <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">*<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">state<pos:position pos:line="22" pos:column="27"/></name></expr>)<pos:position pos:line="22" pos:column="28"/></condition> <block pos:line="22" pos:column="29">{
                 <case pos:line="23" pos:column="18">case <expr><name pos:line="23" pos:column="23">HDR_STATE_GOT_LF<pos:position pos:line="23" pos:column="39"/></name></expr>:<pos:position pos:line="23" pos:column="40"/></case>
                     <expr_stmt><expr><operator pos:line="24" pos:column="22">*<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="23">state<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">HDR_STATE_DONE_WITH_HEADERS<pos:position pos:line="24" pos:column="58"/></name></expr>;<pos:position pos:line="24" pos:column="59"/></expr_stmt>
                     <break pos:line="25" pos:column="22">break;<pos:position pos:line="25" pos:column="28"/></break>

                 <case pos:line="27" pos:column="18">case <expr><name pos:line="27" pos:column="23">HDR_STATE_GOT_CR<pos:position pos:line="27" pos:column="39"/></name></expr>:<pos:position pos:line="27" pos:column="40"/></case>
                     <expr_stmt><expr><operator pos:line="28" pos:column="22">*<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">state<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <name pos:line="28" pos:column="31">HDR_STATE_GOT_CRLF<pos:position pos:line="28" pos:column="49"/></name></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>
                     <break pos:line="29" pos:column="22">break;<pos:position pos:line="29" pos:column="28"/></break>

                 <case pos:line="31" pos:column="18">case <expr><name pos:line="31" pos:column="23">HDR_STATE_GOT_CRLFCR<pos:position pos:line="31" pos:column="43"/></name></expr>:<pos:position pos:line="31" pos:column="44"/></case>
                     <expr_stmt><expr><operator pos:line="32" pos:column="22">*<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">state<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="31">HDR_STATE_DONE_WITH_HEADERS<pos:position pos:line="32" pos:column="58"/></name></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>
                     <break pos:line="33" pos:column="22">break;<pos:position pos:line="33" pos:column="28"/></break>

                 <default pos:line="35" pos:column="18">default:<pos:position pos:line="35" pos:column="26"/></default>
                     <expr_stmt><expr><operator pos:line="36" pos:column="22">*<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">state<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <name pos:line="36" pos:column="31">HDR_STATE_GOT_LF<pos:position pos:line="36" pos:column="47"/></name></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt>
                     <break pos:line="37" pos:column="22">break;<pos:position pos:line="37" pos:column="28"/></break>
            }<pos:position pos:line="38" pos:column="14"/></block></switch>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if></elseif>
        <else pos:line="40" pos:column="9">else <block pos:line="40" pos:column="14">{
            <expr_stmt><expr><operator pos:line="41" pos:column="13">*<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">state<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">=<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="22">HDR_STATE_READING_HEADERS<pos:position pos:line="41" pos:column="47"/></name></expr>;<pos:position pos:line="41" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></else></if>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">*<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">state<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">==<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">HDR_STATE_DONE_WITH_HEADERS<pos:position pos:line="44" pos:column="50"/></name></expr>)<pos:position pos:line="44" pos:column="51"/></condition><then pos:line="44" pos:column="51">
            <block type="pseudo"><break pos:line="45" pos:column="13">break;<pos:position pos:line="45" pos:column="19"/></break></block></then></if>

        <expr_stmt><expr><operator pos:line="47" pos:column="9">++<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">itr<pos:position pos:line="47" pos:column="14"/></name></expr>;<pos:position pos:line="47" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></while>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">*<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">state<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">==<pos:position pos:line="50" pos:column="18"/></operator> <name pos:line="50" pos:column="19">HDR_STATE_DONE_WITH_HEADERS<pos:position pos:line="50" pos:column="46"/></name></expr>)<pos:position pos:line="50" pos:column="47"/></condition><then pos:line="50" pos:column="47"> <block pos:line="50" pos:column="48">{
        <decl_stmt><decl><type><name pos:line="51" pos:column="9">int<pos:position pos:line="51" pos:column="12"/></name></type> <name pos:line="51" pos:column="13">status<pos:position pos:line="51" pos:column="19"/></name> <init pos:line="51" pos:column="20">= <expr><call><name pos:line="51" pos:column="22">ap_scan_script_header_err_brigade<pos:position pos:line="51" pos:column="55"/></name><argument_list pos:line="51" pos:column="55">(<argument><expr><name pos:line="51" pos:column="56">r<pos:position pos:line="51" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="59">ob<pos:position pos:line="51" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="63">NULL<pos:position pos:line="51" pos:column="67"/></name></expr></argument>)<pos:position pos:line="51" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="69"/></decl_stmt>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">status<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">!=<pos:position pos:line="52" pos:column="22"/></operator> <name pos:line="52" pos:column="23">OK<pos:position pos:line="52" pos:column="25"/></name></expr>)<pos:position pos:line="52" pos:column="26"/></condition><then pos:line="52" pos:column="26"> <block pos:line="52" pos:column="27">{
            <decl_stmt><decl><type><name pos:line="53" pos:column="13">apr_bucket<pos:position pos:line="53" pos:column="23"/></name> <modifier pos:line="53" pos:column="24">*<pos:position pos:line="53" pos:column="25"/></modifier></type><name pos:line="53" pos:column="25">b<pos:position pos:line="53" pos:column="26"/></name></decl>;<pos:position pos:line="53" pos:column="27"/></decl_stmt>

            <expr_stmt><expr><name><name pos:line="55" pos:column="13">r<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">-&gt;<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="16">status<pos:position pos:line="55" pos:column="22"/></name></name> <operator pos:line="55" pos:column="23">=<pos:position pos:line="55" pos:column="24"/></operator> <name pos:line="55" pos:column="25">status<pos:position pos:line="55" pos:column="31"/></name></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="57" pos:column="13">apr_brigade_cleanup<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">ob<pos:position pos:line="57" pos:column="35"/></name></expr></argument>)<pos:position pos:line="57" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="37"/></expr_stmt>

            <expr_stmt><expr><name pos:line="59" pos:column="13">b<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator> <call><name pos:line="59" pos:column="17">apr_bucket_eos_create<pos:position pos:line="59" pos:column="38"/></name><argument_list pos:line="59" pos:column="38">(<argument><expr><name><name pos:line="59" pos:column="39">c<pos:position pos:line="59" pos:column="40"/></name><operator pos:line="59" pos:column="40">-&gt;<pos:position pos:line="59" pos:column="45"/></operator><name pos:line="59" pos:column="42">bucket_alloc<pos:position pos:line="59" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="56"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="61" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="61" pos:column="36"/></name><argument_list pos:line="61" pos:column="36">(<argument><expr><name pos:line="61" pos:column="37">ob<pos:position pos:line="61" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="41">b<pos:position pos:line="61" pos:column="42"/></name></expr></argument>)<pos:position pos:line="61" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="44"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="63" pos:column="13">ap_pass_brigade<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><name><name pos:line="63" pos:column="29">r<pos:position pos:line="63" pos:column="30"/></name><operator pos:line="63" pos:column="30">-&gt;<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="32">output_filters<pos:position pos:line="63" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="48">ob<pos:position pos:line="63" pos:column="50"/></name></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="52"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="65" pos:column="13">ap_log_error<pos:position pos:line="65" pos:column="25"/></name><argument_list pos:line="65" pos:column="25">(<argument><expr><name pos:line="65" pos:column="26">APLOG_MARK<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">APLOG_ERR<pos:position pos:line="65" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="49">0<pos:position pos:line="65" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="52">r<pos:position pos:line="65" pos:column="53"/></name><operator pos:line="65" pos:column="53">-&gt;<pos:position pos:line="65" pos:column="58"/></operator><name pos:line="65" pos:column="55">server<pos:position pos:line="65" pos:column="61"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="66" pos:column="26">"proxy: FCGI: Error parsing script headers"<pos:position pos:line="66" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="71"/></expr_stmt>

            <return pos:line="68" pos:column="13">return <expr><operator pos:line="68" pos:column="20">-<pos:position pos:line="68" pos:column="21"/></operator><literal type="number" pos:line="68" pos:column="21">1<pos:position pos:line="68" pos:column="22"/></literal></expr>;<pos:position pos:line="68" pos:column="23"/></return>
        }<pos:position pos:line="69" pos:column="10"/></block></then>
        <else pos:line="70" pos:column="9">else <block pos:line="70" pos:column="14">{
            <return pos:line="71" pos:column="13">return <expr><literal type="number" pos:line="71" pos:column="20">1<pos:position pos:line="71" pos:column="21"/></literal></expr>;<pos:position pos:line="71" pos:column="22"/></return>
        }<pos:position pos:line="72" pos:column="10"/></block></else></if>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <return pos:line="75" pos:column="5">return <expr><literal type="number" pos:line="75" pos:column="12">0<pos:position pos:line="75" pos:column="13"/></literal></expr>;<pos:position pos:line="75" pos:column="14"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

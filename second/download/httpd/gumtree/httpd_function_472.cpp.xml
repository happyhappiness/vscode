<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_472.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">apr_status_t<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">ap_proxy_http_create_connection<pos:position pos:line="2" pos:column="45"/></name><parameter_list pos:line="2" pos:column="45">(<parameter><decl><type><name pos:line="2" pos:column="46">apr_pool_t<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">p<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">request_rec<pos:position pos:line="2" pos:column="72"/></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="74">r<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="3" pos:column="46">proxy_http_conn_t<pos:position pos:line="3" pos:column="63"/></name> <modifier pos:line="3" pos:column="64">*<pos:position pos:line="3" pos:column="65"/></modifier></type><name pos:line="3" pos:column="65">p_conn<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="4" pos:column="46">conn_rec<pos:position pos:line="4" pos:column="54"/></name> <modifier pos:line="4" pos:column="55">*<pos:position pos:line="4" pos:column="56"/></modifier></type><name pos:line="4" pos:column="56">c<pos:position pos:line="4" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="59">conn_rec<pos:position pos:line="4" pos:column="67"/></name> <modifier pos:line="4" pos:column="68">*<pos:position pos:line="4" pos:column="69"/></modifier><modifier pos:line="4" pos:column="69">*<pos:position pos:line="4" pos:column="70"/></modifier></type><name pos:line="4" pos:column="70">origin<pos:position pos:line="4" pos:column="76"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="5" pos:column="46">proxy_conn_rec<pos:position pos:line="5" pos:column="60"/></name> <modifier pos:line="5" pos:column="61">*<pos:position pos:line="5" pos:column="62"/></modifier></type><name pos:line="5" pos:column="62">backend<pos:position pos:line="5" pos:column="69"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="6" pos:column="46">proxy_server_conf<pos:position pos:line="6" pos:column="63"/></name> <modifier pos:line="6" pos:column="64">*<pos:position pos:line="6" pos:column="65"/></modifier></type><name pos:line="6" pos:column="65">conf<pos:position pos:line="6" pos:column="69"/></name></decl></parameter>,
                                             <parameter><decl><type><specifier pos:line="7" pos:column="46">const<pos:position pos:line="7" pos:column="51"/></specifier> <name pos:line="7" pos:column="52">char<pos:position pos:line="7" pos:column="56"/></name> <modifier pos:line="7" pos:column="57">*<pos:position pos:line="7" pos:column="58"/></modifier></type><name pos:line="7" pos:column="58">proxyname<pos:position pos:line="7" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="68"/></parameter_list> <block pos:line="7" pos:column="69">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">failed<pos:position pos:line="8" pos:column="15"/></name><init pos:line="8" pos:column="15">=<expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr></init></decl>, new<init pos:line="8" pos:column="22">=<expr><literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr></init>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_socket_t<pos:position pos:line="9" pos:column="17"/></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type><name pos:line="9" pos:column="19">client_socket<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><name pos:line="9" pos:column="35">NULL<pos:position pos:line="9" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* We have determined who to connect to. Now make the connection, supporting
     * a KeepAlive connection.
     */</comment>

    <comment type="block" pos:line="15" pos:column="5">/* get all the possible IP addresses for the destname and loop through them
     * until we get a successful connection
     */</comment>

    <comment type="block" pos:line="19" pos:column="5">/* if a keepalive socket is already open, check whether it must stay
     * open, or whether it should be closed and a new socket created.
     */</comment>
    <comment type="block" pos:line="22" pos:column="5">/* see memory note above */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">backend<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">connection<pos:position pos:line="23" pos:column="28"/></name></name></expr>)<pos:position pos:line="23" pos:column="29"/></condition><then pos:line="23" pos:column="29"> <block pos:line="23" pos:column="30">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">client_socket<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <call><name pos:line="24" pos:column="25">ap_get_module_config<pos:position pos:line="24" pos:column="45"/></name><argument_list pos:line="24" pos:column="45">(<argument><expr><name><name pos:line="24" pos:column="46">backend<pos:position pos:line="24" pos:column="53"/></name><operator pos:line="24" pos:column="53">-&gt;<pos:position pos:line="24" pos:column="58"/></operator><name pos:line="24" pos:column="55">connection<pos:position pos:line="24" pos:column="65"/></name><operator pos:line="24" pos:column="65">-&gt;<pos:position pos:line="24" pos:column="70"/></operator><name pos:line="24" pos:column="67">conn_config<pos:position pos:line="24" pos:column="78"/></name></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="80">&amp;<pos:position pos:line="24" pos:column="85"/></operator><name pos:line="24" pos:column="81">core_module<pos:position pos:line="24" pos:column="92"/></name></expr></argument>)<pos:position pos:line="24" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="94"/></expr_stmt>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">(<pos:position pos:line="25" pos:column="14"/></operator><name><name pos:line="25" pos:column="14">backend<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">connection<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">id<pos:position pos:line="25" pos:column="37"/></name></name> <operator pos:line="25" pos:column="38">==<pos:position pos:line="25" pos:column="40"/></operator> <name><name pos:line="25" pos:column="41">c<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">id<pos:position pos:line="25" pos:column="46"/></name></name><operator pos:line="25" pos:column="46">)<pos:position pos:line="25" pos:column="47"/></operator> <operator pos:line="25" pos:column="48">&amp;&amp;<pos:position pos:line="25" pos:column="58"/></operator>
            <operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><name><name pos:line="26" pos:column="14">backend<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">port<pos:position pos:line="26" pos:column="27"/></name></name> <operator pos:line="26" pos:column="28">==<pos:position pos:line="26" pos:column="30"/></operator> <name><name pos:line="26" pos:column="31">p_conn<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">port<pos:position pos:line="26" pos:column="43"/></name></name><operator pos:line="26" pos:column="43">)<pos:position pos:line="26" pos:column="44"/></operator> <operator pos:line="26" pos:column="45">&amp;&amp;<pos:position pos:line="26" pos:column="55"/></operator>
            <operator pos:line="27" pos:column="13">(<pos:position pos:line="27" pos:column="14"/></operator><name><name pos:line="27" pos:column="14">backend<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">hostname<pos:position pos:line="27" pos:column="31"/></name></name><operator pos:line="27" pos:column="31">)<pos:position pos:line="27" pos:column="32"/></operator> <operator pos:line="27" pos:column="33">&amp;&amp;<pos:position pos:line="27" pos:column="43"/></operator>
            <operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><operator pos:line="28" pos:column="14">!<pos:position pos:line="28" pos:column="15"/></operator><call><name pos:line="28" pos:column="15">apr_strnatcasecmp<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name><name pos:line="28" pos:column="33">backend<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">-&gt;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="42">hostname<pos:position pos:line="28" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="52">p_conn<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">-&gt;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="60">name<pos:position pos:line="28" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call><operator pos:line="28" pos:column="65">)<pos:position pos:line="28" pos:column="66"/></operator></expr>)<pos:position pos:line="28" pos:column="67"/></condition><then pos:line="28" pos:column="67"> <block pos:line="28" pos:column="68">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">ap_log_error<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">APLOG_MARK<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">APLOG_DEBUG<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="51">0<pos:position pos:line="29" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="54">r<pos:position pos:line="29" pos:column="55"/></name><operator pos:line="29" pos:column="55">-&gt;<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="57">server<pos:position pos:line="29" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="30" pos:column="26">"proxy: keepalive address match (keep original socket)"<pos:position pos:line="30" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="83"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then> <else pos:line="31" pos:column="11">else <block pos:line="31" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">ap_log_error<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">APLOG_MARK<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="38">APLOG_DEBUG<pos:position pos:line="32" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="51">0<pos:position pos:line="32" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="54">r<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">-&gt;<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="57">server<pos:position pos:line="32" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="33" pos:column="26">"proxy: keepalive address mismatch / connection has"<pos:position pos:line="33" pos:column="78"/></literal>
                         <literal type="string" pos:line="34" pos:column="26">" changed (close old socket (%s/%s, %d/%d))"<pos:position pos:line="34" pos:column="70"/></literal></expr></argument>, 
                         <argument><expr><name><name pos:line="35" pos:column="26">p_conn<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">-&gt;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="34">name<pos:position pos:line="35" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="40">backend<pos:position pos:line="35" pos:column="47"/></name><operator pos:line="35" pos:column="47">-&gt;<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="49">hostname<pos:position pos:line="35" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="59">p_conn<pos:position pos:line="35" pos:column="65"/></name><operator pos:line="35" pos:column="65">-&gt;<pos:position pos:line="35" pos:column="70"/></operator><name pos:line="35" pos:column="67">port<pos:position pos:line="35" pos:column="71"/></name></name></expr></argument>,
                         <argument><expr><name><name pos:line="36" pos:column="26">backend<pos:position pos:line="36" pos:column="33"/></name><operator pos:line="36" pos:column="33">-&gt;<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="35">port<pos:position pos:line="36" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">apr_socket_close<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">client_socket<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">backend<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">-&gt;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="22">connection<pos:position pos:line="38" pos:column="32"/></name></name> <operator pos:line="38" pos:column="33">=<pos:position pos:line="38" pos:column="34"/></operator> <name pos:line="38" pos:column="35">NULL<pos:position pos:line="38" pos:column="39"/></name></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></else></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="42" pos:column="5">/* get a socket - either a keepalive one, or a new one */</comment>
    <expr_stmt><expr><operator pos:line="43" pos:column="5">new<pos:position pos:line="43" pos:column="8"/></operator> <operator pos:line="43" pos:column="9">=<pos:position pos:line="43" pos:column="10"/></operator> <literal type="number" pos:line="43" pos:column="11">1<pos:position pos:line="43" pos:column="12"/></literal></expr>;<pos:position pos:line="43" pos:column="13"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><name><name pos:line="44" pos:column="10">backend<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">connection<pos:position pos:line="44" pos:column="29"/></name></name><operator pos:line="44" pos:column="29">)<pos:position pos:line="44" pos:column="30"/></operator> <operator pos:line="44" pos:column="31">&amp;&amp;<pos:position pos:line="44" pos:column="41"/></operator> <operator pos:line="44" pos:column="34">(<pos:position pos:line="44" pos:column="35"/></operator><name><name pos:line="44" pos:column="35">backend<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">-&gt;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="44">connection<pos:position pos:line="44" pos:column="54"/></name><operator pos:line="44" pos:column="54">-&gt;<pos:position pos:line="44" pos:column="59"/></operator><name pos:line="44" pos:column="56">id<pos:position pos:line="44" pos:column="58"/></name></name> <operator pos:line="44" pos:column="59">==<pos:position pos:line="44" pos:column="61"/></operator> <name><name pos:line="44" pos:column="62">c<pos:position pos:line="44" pos:column="63"/></name><operator pos:line="44" pos:column="63">-&gt;<pos:position pos:line="44" pos:column="68"/></operator><name pos:line="44" pos:column="65">id<pos:position pos:line="44" pos:column="67"/></name></name><operator pos:line="44" pos:column="67">)<pos:position pos:line="44" pos:column="68"/></operator></expr>)<pos:position pos:line="44" pos:column="69"/></condition><then pos:line="44" pos:column="69"> <block pos:line="44" pos:column="70">{
        <decl_stmt><decl><type><name pos:line="45" pos:column="9">apr_size_t<pos:position pos:line="45" pos:column="19"/></name></type> <name pos:line="45" pos:column="20">buffer_len<pos:position pos:line="45" pos:column="30"/></name> <init pos:line="45" pos:column="31">= <expr><literal type="number" pos:line="45" pos:column="33">1<pos:position pos:line="45" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="45" pos:column="35"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="46" pos:column="9">char<pos:position pos:line="46" pos:column="13"/></name></type> <name><name pos:line="46" pos:column="14">test_buffer<pos:position pos:line="46" pos:column="25"/></name><index pos:line="46" pos:column="25">[<expr><literal type="number" pos:line="46" pos:column="26">1<pos:position pos:line="46" pos:column="27"/></literal></expr>]<pos:position pos:line="46" pos:column="28"/></index></name></decl>;<pos:position pos:line="46" pos:column="29"/></decl_stmt> 
        <decl_stmt><decl><type><name pos:line="47" pos:column="9">apr_status_t<pos:position pos:line="47" pos:column="21"/></name></type> <name pos:line="47" pos:column="22">socket_status<pos:position pos:line="47" pos:column="35"/></name></decl>;<pos:position pos:line="47" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="48" pos:column="9">apr_interval_time_t<pos:position pos:line="48" pos:column="28"/></name></type> <name pos:line="48" pos:column="29">current_timeout<pos:position pos:line="48" pos:column="44"/></name></decl>;<pos:position pos:line="48" pos:column="45"/></decl_stmt>

        <comment type="block" pos:line="50" pos:column="9">/* use previous keepalive socket */</comment>
        <expr_stmt><expr><operator pos:line="51" pos:column="9">*<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">origin<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <name><name pos:line="51" pos:column="19">backend<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">-&gt;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="28">connection<pos:position pos:line="51" pos:column="38"/></name></name></expr>;<pos:position pos:line="51" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">p_conn<pos:position pos:line="52" pos:column="15"/></name><operator pos:line="52" pos:column="15">-&gt;<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="17">sock<pos:position pos:line="52" pos:column="21"/></name></name> <operator pos:line="52" pos:column="22">=<pos:position pos:line="52" pos:column="23"/></operator> <name pos:line="52" pos:column="24">client_socket<pos:position pos:line="52" pos:column="37"/></name></expr>;<pos:position pos:line="52" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="53" pos:column="9">new<pos:position pos:line="53" pos:column="12"/></operator> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <literal type="number" pos:line="53" pos:column="15">0<pos:position pos:line="53" pos:column="16"/></literal></expr>;<pos:position pos:line="53" pos:column="17"/></expr_stmt>

        <comment type="block" pos:line="55" pos:column="9">/* save timeout */</comment>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">apr_socket_timeout_get<pos:position pos:line="56" pos:column="31"/></name><argument_list pos:line="56" pos:column="31">(<argument><expr><name><name pos:line="56" pos:column="32">p_conn<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">-&gt;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="40">sock<pos:position pos:line="56" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="46">&amp;<pos:position pos:line="56" pos:column="51"/></operator><name pos:line="56" pos:column="47">current_timeout<pos:position pos:line="56" pos:column="62"/></name></expr></argument>)<pos:position pos:line="56" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="64"/></expr_stmt>
        <comment type="block" pos:line="57" pos:column="9">/* set no timeout */</comment>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">apr_socket_timeout_set<pos:position pos:line="58" pos:column="31"/></name><argument_list pos:line="58" pos:column="31">(<argument><expr><name><name pos:line="58" pos:column="32">p_conn<pos:position pos:line="58" pos:column="38"/></name><operator pos:line="58" pos:column="38">-&gt;<pos:position pos:line="58" pos:column="43"/></operator><name pos:line="58" pos:column="40">sock<pos:position pos:line="58" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="46">0<pos:position pos:line="58" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="59" pos:column="9">socket_status<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">=<pos:position pos:line="59" pos:column="24"/></operator> <call><name pos:line="59" pos:column="25">apr_recv<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><name><name pos:line="59" pos:column="34">p_conn<pos:position pos:line="59" pos:column="40"/></name><operator pos:line="59" pos:column="40">-&gt;<pos:position pos:line="59" pos:column="45"/></operator><name pos:line="59" pos:column="42">sock<pos:position pos:line="59" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="48">test_buffer<pos:position pos:line="59" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="61">&amp;<pos:position pos:line="59" pos:column="66"/></operator><name pos:line="59" pos:column="62">buffer_len<pos:position pos:line="59" pos:column="72"/></name></expr></argument>)<pos:position pos:line="59" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="74"/></expr_stmt>
        <comment type="block" pos:line="60" pos:column="9">/* put back old timeout */</comment>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">apr_socket_timeout_set<pos:position pos:line="61" pos:column="31"/></name><argument_list pos:line="61" pos:column="31">(<argument><expr><name><name pos:line="61" pos:column="32">p_conn<pos:position pos:line="61" pos:column="38"/></name><operator pos:line="61" pos:column="38">-&gt;<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="40">sock<pos:position pos:line="61" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="46">current_timeout<pos:position pos:line="61" pos:column="61"/></name></expr></argument>)<pos:position pos:line="61" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="63"/></expr_stmt>
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">( <expr><call><name pos:line="62" pos:column="14">APR_STATUS_IS_EOF<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">socket_status<pos:position pos:line="62" pos:column="45"/></name></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call></expr> )<pos:position pos:line="62" pos:column="48"/></condition><then pos:line="62" pos:column="48"> <block pos:line="62" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">ap_log_error<pos:position pos:line="63" pos:column="25"/></name><argument_list pos:line="63" pos:column="25">(<argument><expr><name pos:line="63" pos:column="26">APLOG_MARK<pos:position pos:line="63" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="38">APLOG_INFO<pos:position pos:line="63" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="50">0<pos:position pos:line="63" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="53">NULL<pos:position pos:line="63" pos:column="57"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="64" pos:column="26">"proxy: previous connection is closed, creating a new connection."<pos:position pos:line="64" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="94"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="65" pos:column="13">new<pos:position pos:line="65" pos:column="16"/></operator> <operator pos:line="65" pos:column="17">=<pos:position pos:line="65" pos:column="18"/></operator> <literal type="number" pos:line="65" pos:column="19">1<pos:position pos:line="65" pos:column="20"/></literal></expr>;<pos:position pos:line="65" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><operator pos:line="68" pos:column="9">new<pos:position pos:line="68" pos:column="12"/></operator></expr>)<pos:position pos:line="68" pos:column="13"/></condition><then pos:line="68" pos:column="13"> <block pos:line="68" pos:column="14">{
        <decl_stmt><decl><type><name pos:line="69" pos:column="9">int<pos:position pos:line="69" pos:column="12"/></name></type> <name pos:line="69" pos:column="13">rc<pos:position pos:line="69" pos:column="15"/></name></decl>;<pos:position pos:line="69" pos:column="16"/></decl_stmt>

        <comment type="block" pos:line="71" pos:column="9">/* create a new socket */</comment>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">backend<pos:position pos:line="72" pos:column="16"/></name><operator pos:line="72" pos:column="16">-&gt;<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="18">connection<pos:position pos:line="72" pos:column="28"/></name></name> <operator pos:line="72" pos:column="29">=<pos:position pos:line="72" pos:column="30"/></operator> <name pos:line="72" pos:column="31">NULL<pos:position pos:line="72" pos:column="35"/></name></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt>

        <comment type="block" pos:line="74" pos:column="9">/*
         * At this point we have a list of one or more IP addresses of
         * the machine to connect to. If configured, reorder this
         * list so that the "best candidate" is first try. "best
         * candidate" could mean the least loaded server, the fastest
         * responding server, whatever.
         *
         * For now we do nothing, ie we get DNS round robin.
         * XXX FIXME
         */</comment>
        <expr_stmt><expr><name pos:line="84" pos:column="9">failed<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <call><name pos:line="84" pos:column="18">ap_proxy_connect_to_backend<pos:position pos:line="84" pos:column="45"/></name><argument_list pos:line="84" pos:column="45">(<argument><expr><operator pos:line="84" pos:column="46">&amp;<pos:position pos:line="84" pos:column="51"/></operator><name><name pos:line="84" pos:column="47">p_conn<pos:position pos:line="84" pos:column="53"/></name><operator pos:line="84" pos:column="53">-&gt;<pos:position pos:line="84" pos:column="58"/></operator><name pos:line="84" pos:column="55">sock<pos:position pos:line="84" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="61">"HTTP"<pos:position pos:line="84" pos:column="67"/></literal></expr></argument>,
                                             <argument><expr><name><name pos:line="85" pos:column="46">p_conn<pos:position pos:line="85" pos:column="52"/></name><operator pos:line="85" pos:column="52">-&gt;<pos:position pos:line="85" pos:column="57"/></operator><name pos:line="85" pos:column="54">addr<pos:position pos:line="85" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="60">p_conn<pos:position pos:line="85" pos:column="66"/></name><operator pos:line="85" pos:column="66">-&gt;<pos:position pos:line="85" pos:column="71"/></operator><name pos:line="85" pos:column="68">name<pos:position pos:line="85" pos:column="72"/></name></name></expr></argument>,
                                             <argument><expr><name pos:line="86" pos:column="46">conf<pos:position pos:line="86" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="52">r<pos:position pos:line="86" pos:column="53"/></name><operator pos:line="86" pos:column="53">-&gt;<pos:position pos:line="86" pos:column="58"/></operator><name pos:line="86" pos:column="55">server<pos:position pos:line="86" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="63">c<pos:position pos:line="86" pos:column="64"/></name><operator pos:line="86" pos:column="64">-&gt;<pos:position pos:line="86" pos:column="69"/></operator><name pos:line="86" pos:column="66">pool<pos:position pos:line="86" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="72"/></expr_stmt>

        <comment type="block" pos:line="88" pos:column="9">/* handle a permanent error on the connect */</comment>
        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">failed<pos:position pos:line="89" pos:column="19"/></name></expr>)<pos:position pos:line="89" pos:column="20"/></condition><then pos:line="89" pos:column="20"> <block pos:line="89" pos:column="21">{
            <if pos:line="90" pos:column="13">if <condition pos:line="90" pos:column="16">(<expr><name pos:line="90" pos:column="17">proxyname<pos:position pos:line="90" pos:column="26"/></name></expr>)<pos:position pos:line="90" pos:column="27"/></condition><then pos:line="90" pos:column="27"> <block pos:line="90" pos:column="28">{
                <return pos:line="91" pos:column="17">return <expr><name pos:line="91" pos:column="24">DECLINED<pos:position pos:line="91" pos:column="32"/></name></expr>;<pos:position pos:line="91" pos:column="33"/></return>
            }<pos:position pos:line="92" pos:column="14"/></block></then> <else pos:line="92" pos:column="15">else <block pos:line="92" pos:column="20">{
                <return pos:line="93" pos:column="17">return <expr><name pos:line="93" pos:column="24">HTTP_BAD_GATEWAY<pos:position pos:line="93" pos:column="40"/></name></expr>;<pos:position pos:line="93" pos:column="41"/></return>
            }<pos:position pos:line="94" pos:column="14"/></block></else></if>
        }<pos:position pos:line="95" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="97" pos:column="9">ap_log_error<pos:position pos:line="97" pos:column="21"/></name><argument_list pos:line="97" pos:column="21">(<argument><expr><name pos:line="97" pos:column="22">APLOG_MARK<pos:position pos:line="97" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="34">APLOG_DEBUG<pos:position pos:line="97" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="47">0<pos:position pos:line="97" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="50">r<pos:position pos:line="97" pos:column="51"/></name><operator pos:line="97" pos:column="51">-&gt;<pos:position pos:line="97" pos:column="56"/></operator><name pos:line="97" pos:column="53">server<pos:position pos:line="97" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="98" pos:column="22">"proxy: socket is connected"<pos:position pos:line="98" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="52"/></expr_stmt>

        <comment type="block" pos:line="100" pos:column="9">/* the socket is now open, create a new backend server connection */</comment>
        <expr_stmt><expr><operator pos:line="101" pos:column="9">*<pos:position pos:line="101" pos:column="10"/></operator><name pos:line="101" pos:column="10">origin<pos:position pos:line="101" pos:column="16"/></name> <operator pos:line="101" pos:column="17">=<pos:position pos:line="101" pos:column="18"/></operator> <call><name pos:line="101" pos:column="19">ap_run_create_connection<pos:position pos:line="101" pos:column="43"/></name><argument_list pos:line="101" pos:column="43">(<argument><expr><name><name pos:line="101" pos:column="44">c<pos:position pos:line="101" pos:column="45"/></name><operator pos:line="101" pos:column="45">-&gt;<pos:position pos:line="101" pos:column="50"/></operator><name pos:line="101" pos:column="47">pool<pos:position pos:line="101" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="53">r<pos:position pos:line="101" pos:column="54"/></name><operator pos:line="101" pos:column="54">-&gt;<pos:position pos:line="101" pos:column="59"/></operator><name pos:line="101" pos:column="56">server<pos:position pos:line="101" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="64">p_conn<pos:position pos:line="101" pos:column="70"/></name><operator pos:line="101" pos:column="70">-&gt;<pos:position pos:line="101" pos:column="75"/></operator><name pos:line="101" pos:column="72">sock<pos:position pos:line="101" pos:column="76"/></name></name></expr></argument>,
                                           <argument><expr><name><name pos:line="102" pos:column="44">r<pos:position pos:line="102" pos:column="45"/></name><operator pos:line="102" pos:column="45">-&gt;<pos:position pos:line="102" pos:column="50"/></operator><name pos:line="102" pos:column="47">connection<pos:position pos:line="102" pos:column="57"/></name><operator pos:line="102" pos:column="57">-&gt;<pos:position pos:line="102" pos:column="62"/></operator><name pos:line="102" pos:column="59">id<pos:position pos:line="102" pos:column="61"/></name></name></expr></argument>,
                                           <argument><expr><name><name pos:line="103" pos:column="44">r<pos:position pos:line="103" pos:column="45"/></name><operator pos:line="103" pos:column="45">-&gt;<pos:position pos:line="103" pos:column="50"/></operator><name pos:line="103" pos:column="47">connection<pos:position pos:line="103" pos:column="57"/></name><operator pos:line="103" pos:column="57">-&gt;<pos:position pos:line="103" pos:column="62"/></operator><name pos:line="103" pos:column="59">sbh<pos:position pos:line="103" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="64">c<pos:position pos:line="103" pos:column="65"/></name><operator pos:line="103" pos:column="65">-&gt;<pos:position pos:line="103" pos:column="70"/></operator><name pos:line="103" pos:column="67">bucket_alloc<pos:position pos:line="103" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="81"/></expr_stmt>
        <if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><operator pos:line="104" pos:column="13">!<pos:position pos:line="104" pos:column="14"/></operator><operator pos:line="104" pos:column="14">*<pos:position pos:line="104" pos:column="15"/></operator><name pos:line="104" pos:column="15">origin<pos:position pos:line="104" pos:column="21"/></name></expr>)<pos:position pos:line="104" pos:column="22"/></condition><then pos:line="104" pos:column="22"> <block pos:line="104" pos:column="23">{
        <comment type="block" pos:line="105" pos:column="9">/* the peer reset the connection already; ap_run_create_connection() 
         * closed the socket
         */</comment>
            <expr_stmt><expr><call><name pos:line="108" pos:column="13">ap_log_error<pos:position pos:line="108" pos:column="25"/></name><argument_list pos:line="108" pos:column="25">(<argument><expr><name pos:line="108" pos:column="26">APLOG_MARK<pos:position pos:line="108" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="38">APLOG_DEBUG<pos:position pos:line="108" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="51">0<pos:position pos:line="108" pos:column="52"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="109" pos:column="26">r<pos:position pos:line="109" pos:column="27"/></name><operator pos:line="109" pos:column="27">-&gt;<pos:position pos:line="109" pos:column="32"/></operator><name pos:line="109" pos:column="29">server<pos:position pos:line="109" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="37">"proxy: an error occurred creating a "<pos:position pos:line="109" pos:column="75"/></literal>
                         <literal type="string" pos:line="110" pos:column="26">"new connection to %pI (%s)"<pos:position pos:line="110" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="56">p_conn<pos:position pos:line="110" pos:column="62"/></name><operator pos:line="110" pos:column="62">-&gt;<pos:position pos:line="110" pos:column="67"/></operator><name pos:line="110" pos:column="64">addr<pos:position pos:line="110" pos:column="68"/></name></name></expr></argument>,
                         <argument><expr><name><name pos:line="111" pos:column="26">p_conn<pos:position pos:line="111" pos:column="32"/></name><operator pos:line="111" pos:column="32">-&gt;<pos:position pos:line="111" pos:column="37"/></operator><name pos:line="111" pos:column="34">name<pos:position pos:line="111" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="112" pos:column="13">apr_socket_close<pos:position pos:line="112" pos:column="29"/></name><argument_list pos:line="112" pos:column="29">(<argument><expr><name><name pos:line="112" pos:column="30">p_conn<pos:position pos:line="112" pos:column="36"/></name><operator pos:line="112" pos:column="36">-&gt;<pos:position pos:line="112" pos:column="41"/></operator><name pos:line="112" pos:column="38">sock<pos:position pos:line="112" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="44"/></expr_stmt>
            <return pos:line="113" pos:column="13">return <expr><name pos:line="113" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="113" pos:column="46"/></name></expr>;<pos:position pos:line="113" pos:column="47"/></return>
        }<pos:position pos:line="114" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="115" pos:column="9">backend<pos:position pos:line="115" pos:column="16"/></name><operator pos:line="115" pos:column="16">-&gt;<pos:position pos:line="115" pos:column="21"/></operator><name pos:line="115" pos:column="18">connection<pos:position pos:line="115" pos:column="28"/></name></name> <operator pos:line="115" pos:column="29">=<pos:position pos:line="115" pos:column="30"/></operator> <operator pos:line="115" pos:column="31">*<pos:position pos:line="115" pos:column="32"/></operator><name pos:line="115" pos:column="32">origin<pos:position pos:line="115" pos:column="38"/></name></expr>;<pos:position pos:line="115" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="116" pos:column="9">backend<pos:position pos:line="116" pos:column="16"/></name><operator pos:line="116" pos:column="16">-&gt;<pos:position pos:line="116" pos:column="21"/></operator><name pos:line="116" pos:column="18">hostname<pos:position pos:line="116" pos:column="26"/></name></name> <operator pos:line="116" pos:column="27">=<pos:position pos:line="116" pos:column="28"/></operator> <call><name pos:line="116" pos:column="29">apr_pstrdup<pos:position pos:line="116" pos:column="40"/></name><argument_list pos:line="116" pos:column="40">(<argument><expr><name><name pos:line="116" pos:column="41">c<pos:position pos:line="116" pos:column="42"/></name><operator pos:line="116" pos:column="42">-&gt;<pos:position pos:line="116" pos:column="47"/></operator><name pos:line="116" pos:column="44">pool<pos:position pos:line="116" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="50">p_conn<pos:position pos:line="116" pos:column="56"/></name><operator pos:line="116" pos:column="56">-&gt;<pos:position pos:line="116" pos:column="61"/></operator><name pos:line="116" pos:column="58">name<pos:position pos:line="116" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="117" pos:column="9">backend<pos:position pos:line="117" pos:column="16"/></name><operator pos:line="117" pos:column="16">-&gt;<pos:position pos:line="117" pos:column="21"/></operator><name pos:line="117" pos:column="18">port<pos:position pos:line="117" pos:column="22"/></name></name> <operator pos:line="117" pos:column="23">=<pos:position pos:line="117" pos:column="24"/></operator> <name><name pos:line="117" pos:column="25">p_conn<pos:position pos:line="117" pos:column="31"/></name><operator pos:line="117" pos:column="31">-&gt;<pos:position pos:line="117" pos:column="36"/></operator><name pos:line="117" pos:column="33">port<pos:position pos:line="117" pos:column="37"/></name></name></expr>;<pos:position pos:line="117" pos:column="38"/></expr_stmt>

        <if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name><name pos:line="119" pos:column="13">backend<pos:position pos:line="119" pos:column="20"/></name><operator pos:line="119" pos:column="20">-&gt;<pos:position pos:line="119" pos:column="25"/></operator><name pos:line="119" pos:column="22">is_ssl<pos:position pos:line="119" pos:column="28"/></name></name></expr>)<pos:position pos:line="119" pos:column="29"/></condition><then pos:line="119" pos:column="29"> <block pos:line="119" pos:column="30">{
            <if pos:line="120" pos:column="13">if <condition pos:line="120" pos:column="16">(<expr><operator pos:line="120" pos:column="17">!<pos:position pos:line="120" pos:column="18"/></operator><call><name pos:line="120" pos:column="18">ap_proxy_ssl_enable<pos:position pos:line="120" pos:column="37"/></name><argument_list pos:line="120" pos:column="37">(<argument><expr><name><name pos:line="120" pos:column="38">backend<pos:position pos:line="120" pos:column="45"/></name><operator pos:line="120" pos:column="45">-&gt;<pos:position pos:line="120" pos:column="50"/></operator><name pos:line="120" pos:column="47">connection<pos:position pos:line="120" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="120" pos:column="59"/></condition><then pos:line="120" pos:column="59"> <block pos:line="120" pos:column="60">{
                <expr_stmt><expr><call><name pos:line="121" pos:column="17">ap_log_error<pos:position pos:line="121" pos:column="29"/></name><argument_list pos:line="121" pos:column="29">(<argument><expr><name pos:line="121" pos:column="30">APLOG_MARK<pos:position pos:line="121" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="42">APLOG_ERR<pos:position pos:line="121" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="53">0<pos:position pos:line="121" pos:column="54"/></literal></expr></argument>,
                             <argument><expr><name><name pos:line="122" pos:column="30">r<pos:position pos:line="122" pos:column="31"/></name><operator pos:line="122" pos:column="31">-&gt;<pos:position pos:line="122" pos:column="36"/></operator><name pos:line="122" pos:column="33">server<pos:position pos:line="122" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="41">"proxy: failed to enable ssl support "<pos:position pos:line="122" pos:column="79"/></literal>
                             <literal type="string" pos:line="123" pos:column="30">"for %pI (%s)"<pos:position pos:line="123" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="46">p_conn<pos:position pos:line="123" pos:column="52"/></name><operator pos:line="123" pos:column="52">-&gt;<pos:position pos:line="123" pos:column="57"/></operator><name pos:line="123" pos:column="54">addr<pos:position pos:line="123" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="60">p_conn<pos:position pos:line="123" pos:column="66"/></name><operator pos:line="123" pos:column="66">-&gt;<pos:position pos:line="123" pos:column="71"/></operator><name pos:line="123" pos:column="68">name<pos:position pos:line="123" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="74"/></expr_stmt>
                <return pos:line="124" pos:column="17">return <expr><name pos:line="124" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="124" pos:column="50"/></name></expr>;<pos:position pos:line="124" pos:column="51"/></return>
            }<pos:position pos:line="125" pos:column="14"/></block></then></if>
        }<pos:position pos:line="126" pos:column="10"/></block></then>
        <else pos:line="127" pos:column="9">else <block pos:line="127" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="128" pos:column="13">ap_proxy_ssl_disable<pos:position pos:line="128" pos:column="33"/></name><argument_list pos:line="128" pos:column="33">(<argument><expr><name><name pos:line="128" pos:column="34">backend<pos:position pos:line="128" pos:column="41"/></name><operator pos:line="128" pos:column="41">-&gt;<pos:position pos:line="128" pos:column="46"/></operator><name pos:line="128" pos:column="43">connection<pos:position pos:line="128" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="129" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="131" pos:column="9">ap_log_error<pos:position pos:line="131" pos:column="21"/></name><argument_list pos:line="131" pos:column="21">(<argument><expr><name pos:line="131" pos:column="22">APLOG_MARK<pos:position pos:line="131" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="34">APLOG_DEBUG<pos:position pos:line="131" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="131" pos:column="47">0<pos:position pos:line="131" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="50">r<pos:position pos:line="131" pos:column="51"/></name><operator pos:line="131" pos:column="51">-&gt;<pos:position pos:line="131" pos:column="56"/></operator><name pos:line="131" pos:column="53">server<pos:position pos:line="131" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="132" pos:column="22">"proxy: connection complete to %pI (%s)"<pos:position pos:line="132" pos:column="62"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="133" pos:column="22">p_conn<pos:position pos:line="133" pos:column="28"/></name><operator pos:line="133" pos:column="28">-&gt;<pos:position pos:line="133" pos:column="33"/></operator><name pos:line="133" pos:column="30">addr<pos:position pos:line="133" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="36">p_conn<pos:position pos:line="133" pos:column="42"/></name><operator pos:line="133" pos:column="42">-&gt;<pos:position pos:line="133" pos:column="47"/></operator><name pos:line="133" pos:column="44">name<pos:position pos:line="133" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="50"/></expr_stmt>

        <comment type="block" pos:line="135" pos:column="9">/* set up the connection filters */</comment>
        <expr_stmt><expr><name pos:line="136" pos:column="9">rc<pos:position pos:line="136" pos:column="11"/></name> <operator pos:line="136" pos:column="12">=<pos:position pos:line="136" pos:column="13"/></operator> <call><name pos:line="136" pos:column="14">ap_run_pre_connection<pos:position pos:line="136" pos:column="35"/></name><argument_list pos:line="136" pos:column="35">(<argument><expr><operator pos:line="136" pos:column="36">*<pos:position pos:line="136" pos:column="37"/></operator><name pos:line="136" pos:column="37">origin<pos:position pos:line="136" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="45">p_conn<pos:position pos:line="136" pos:column="51"/></name><operator pos:line="136" pos:column="51">-&gt;<pos:position pos:line="136" pos:column="56"/></operator><name pos:line="136" pos:column="53">sock<pos:position pos:line="136" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="59"/></expr_stmt>
        <if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><name pos:line="137" pos:column="13">rc<pos:position pos:line="137" pos:column="15"/></name> <operator pos:line="137" pos:column="16">!=<pos:position pos:line="137" pos:column="18"/></operator> <name pos:line="137" pos:column="19">OK<pos:position pos:line="137" pos:column="21"/></name> <operator pos:line="137" pos:column="22">&amp;&amp;<pos:position pos:line="137" pos:column="32"/></operator> <name pos:line="137" pos:column="25">rc<pos:position pos:line="137" pos:column="27"/></name> <operator pos:line="137" pos:column="28">!=<pos:position pos:line="137" pos:column="30"/></operator> <name pos:line="137" pos:column="31">DONE<pos:position pos:line="137" pos:column="35"/></name></expr>)<pos:position pos:line="137" pos:column="36"/></condition><then pos:line="137" pos:column="36"> <block pos:line="137" pos:column="37">{
            <expr_stmt><expr><name><operator pos:line="138" pos:column="13">(<pos:position pos:line="138" pos:column="14"/></operator><operator pos:line="138" pos:column="14">*<pos:position pos:line="138" pos:column="15"/></operator><name pos:line="138" pos:column="15">origin<pos:position pos:line="138" pos:column="21"/></name><operator pos:line="138" pos:column="21">)<pos:position pos:line="138" pos:column="22"/></operator><operator pos:line="138" pos:column="22">-&gt;<pos:position pos:line="138" pos:column="27"/></operator><name pos:line="138" pos:column="24">aborted<pos:position pos:line="138" pos:column="31"/></name></name> <operator pos:line="138" pos:column="32">=<pos:position pos:line="138" pos:column="33"/></operator> <literal type="number" pos:line="138" pos:column="34">1<pos:position pos:line="138" pos:column="35"/></literal></expr>;<pos:position pos:line="138" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="139" pos:column="13">ap_log_error<pos:position pos:line="139" pos:column="25"/></name><argument_list pos:line="139" pos:column="25">(<argument><expr><name pos:line="139" pos:column="26">APLOG_MARK<pos:position pos:line="139" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="38">APLOG_DEBUG<pos:position pos:line="139" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="139" pos:column="51">0<pos:position pos:line="139" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="139" pos:column="54">r<pos:position pos:line="139" pos:column="55"/></name><operator pos:line="139" pos:column="55">-&gt;<pos:position pos:line="139" pos:column="60"/></operator><name pos:line="139" pos:column="57">server<pos:position pos:line="139" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="140" pos:column="26">"proxy: HTTP: pre_connection setup failed (%d)"<pos:position pos:line="140" pos:column="73"/></literal></expr></argument>,
                         <argument><expr><name pos:line="141" pos:column="26">rc<pos:position pos:line="141" pos:column="28"/></name></expr></argument>)<pos:position pos:line="141" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="30"/></expr_stmt>
            <return pos:line="142" pos:column="13">return <expr><name pos:line="142" pos:column="20">rc<pos:position pos:line="142" pos:column="22"/></name></expr>;<pos:position pos:line="142" pos:column="23"/></return>
        }<pos:position pos:line="143" pos:column="10"/></block></then></if>
    }<pos:position pos:line="144" pos:column="6"/></block></then></if>
    <return pos:line="145" pos:column="5">return <expr><name pos:line="145" pos:column="12">OK<pos:position pos:line="145" pos:column="14"/></name></expr>;<pos:position pos:line="145" pos:column="15"/></return>
}<pos:position pos:line="146" pos:column="2"/></block></function></unit>

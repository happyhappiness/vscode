<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_80_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ssl_proceed_handshake<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">connection<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">c<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">do_next<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">1<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<expr><name pos:line="5" pos:column="12">do_next<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition> <block pos:line="5" pos:column="21">{
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ret<pos:position pos:line="6" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="18">ecode<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">apr_pollfd_t<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">new_pollfd<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>

        <expr_stmt><expr><name pos:line="9" pos:column="9">ret<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">SSL_do_handshake<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name><name pos:line="9" pos:column="32">c<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">ssl<pos:position pos:line="9" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">ecode<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">SSL_get_error<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name><name pos:line="10" pos:column="31">c<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">ssl<pos:position pos:line="10" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">ret<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>

        <switch pos:line="12" pos:column="9">switch <condition pos:line="12" pos:column="16">(<expr><name pos:line="12" pos:column="17">ecode<pos:position pos:line="12" pos:column="22"/></name></expr>)<pos:position pos:line="12" pos:column="23"/></condition> <block pos:line="12" pos:column="24">{
        <case pos:line="13" pos:column="9">case <expr><name pos:line="13" pos:column="14">SSL_ERROR_NONE<pos:position pos:line="13" pos:column="28"/></name></expr>:<pos:position pos:line="13" pos:column="29"/></case>
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><name pos:line="14" pos:column="17">verbosity<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">&gt;=<pos:position pos:line="14" pos:column="32"/></operator> <literal type="number" pos:line="14" pos:column="30">2<pos:position pos:line="14" pos:column="31"/></literal></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">ssl_print_info<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">c<pos:position pos:line="15" pos:column="33"/></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt></block></then></if>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><name pos:line="16" pos:column="17">ssl_info<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">==<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">NULL<pos:position pos:line="16" pos:column="33"/></name></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34"> <block pos:line="16" pos:column="35">{
                <decl_stmt><decl><type><name pos:line="17" pos:column="17">AB_SSL_CIPHER_CONST<pos:position pos:line="17" pos:column="36"/></name> <name pos:line="17" pos:column="37">SSL_CIPHER<pos:position pos:line="17" pos:column="47"/></name> <modifier pos:line="17" pos:column="48">*<pos:position pos:line="17" pos:column="49"/></modifier></type><name pos:line="17" pos:column="49">ci<pos:position pos:line="17" pos:column="51"/></name></decl>;<pos:position pos:line="17" pos:column="52"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="18" pos:column="17">X509<pos:position pos:line="18" pos:column="21"/></name> <modifier pos:line="18" pos:column="22">*<pos:position pos:line="18" pos:column="23"/></modifier></type><name pos:line="18" pos:column="23">cert<pos:position pos:line="18" pos:column="27"/></name></decl>;<pos:position pos:line="18" pos:column="28"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="19" pos:column="17">int<pos:position pos:line="19" pos:column="20"/></name></type> <name pos:line="19" pos:column="21">sk_bits<pos:position pos:line="19" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="19" pos:column="30">pk_bits<pos:position pos:line="19" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="19" pos:column="39">swork<pos:position pos:line="19" pos:column="44"/></name></decl>;<pos:position pos:line="19" pos:column="45"/></decl_stmt>

                <expr_stmt><expr><name pos:line="21" pos:column="17">ci<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="22">SSL_get_current_cipher<pos:position pos:line="21" pos:column="44"/></name><argument_list pos:line="21" pos:column="44">(<argument><expr><name><name pos:line="21" pos:column="45">c<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">-&gt;<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="48">ssl<pos:position pos:line="21" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><name pos:line="22" pos:column="17">sk_bits<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <call><name pos:line="22" pos:column="27">SSL_CIPHER_get_bits<pos:position pos:line="22" pos:column="46"/></name><argument_list pos:line="22" pos:column="46">(<argument><expr><name pos:line="22" pos:column="47">ci<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="51">&amp;<pos:position pos:line="22" pos:column="56"/></operator><name pos:line="22" pos:column="52">swork<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><name pos:line="23" pos:column="17">cert<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <call><name pos:line="23" pos:column="24">SSL_get_peer_certificate<pos:position pos:line="23" pos:column="48"/></name><argument_list pos:line="23" pos:column="48">(<argument><expr><name><name pos:line="23" pos:column="49">c<pos:position pos:line="23" pos:column="50"/></name><operator pos:line="23" pos:column="50">-&gt;<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="52">ssl<pos:position pos:line="23" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt>
                <if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">cert<pos:position pos:line="24" pos:column="25"/></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="21">pk_bits<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <call><name pos:line="25" pos:column="31">EVP_PKEY_bits<pos:position pos:line="25" pos:column="44"/></name><argument_list pos:line="25" pos:column="44">(<argument><expr><call><name pos:line="25" pos:column="45">X509_get_pubkey<pos:position pos:line="25" pos:column="60"/></name><argument_list pos:line="25" pos:column="60">(<argument><expr><name pos:line="25" pos:column="61">cert<pos:position pos:line="25" pos:column="65"/></name></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="68"/></expr_stmt></block></then>
                <else pos:line="26" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="21">pk_bits<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <literal type="number" pos:line="27" pos:column="31">0<pos:position pos:line="27" pos:column="32"/></literal></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt></block></else></if>  <comment type="block" pos:line="27" pos:column="35">/* Anon DH */</comment>

                <expr_stmt><expr><name pos:line="29" pos:column="17">ssl_info<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <call><name pos:line="29" pos:column="28">malloc<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><literal type="number" pos:line="29" pos:column="35">128<pos:position pos:line="29" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="30" pos:column="17">apr_snprintf<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">ssl_info<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="40">128<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="45">"%s,%s,%d,%d"<pos:position pos:line="30" pos:column="58"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="31" pos:column="30">SSL_CIPHER_get_version<pos:position pos:line="31" pos:column="52"/></name><argument_list pos:line="31" pos:column="52">(<argument><expr><name pos:line="31" pos:column="53">ci<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr></argument>,
                             <argument><expr><call><name pos:line="32" pos:column="30">SSL_CIPHER_get_name<pos:position pos:line="32" pos:column="49"/></name><argument_list pos:line="32" pos:column="49">(<argument><expr><name pos:line="32" pos:column="50">ci<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="33" pos:column="30">pk_bits<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">sk_bits<pos:position pos:line="33" pos:column="46"/></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">write_request<pos:position pos:line="35" pos:column="26"/></name><argument_list pos:line="35" pos:column="26">(<argument><expr><name pos:line="35" pos:column="27">c<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="36" pos:column="13">do_next<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <literal type="number" pos:line="36" pos:column="23">0<pos:position pos:line="36" pos:column="24"/></literal></expr>;<pos:position pos:line="36" pos:column="25"/></expr_stmt>
            <break pos:line="37" pos:column="13">break;<pos:position pos:line="37" pos:column="19"/></break>
        <case pos:line="38" pos:column="9">case <expr><name pos:line="38" pos:column="14">SSL_ERROR_WANT_READ<pos:position pos:line="38" pos:column="33"/></name></expr>:<pos:position pos:line="38" pos:column="34"/></case>
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">new_pollfd<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">.<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">desc_type<pos:position pos:line="39" pos:column="33"/></name></name> <operator pos:line="39" pos:column="34">=<pos:position pos:line="39" pos:column="35"/></operator> <name pos:line="39" pos:column="36">APR_POLL_SOCKET<pos:position pos:line="39" pos:column="51"/></name></expr>;<pos:position pos:line="39" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="40" pos:column="13">new_pollfd<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">.<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">reqevents<pos:position pos:line="40" pos:column="33"/></name></name> <operator pos:line="40" pos:column="34">=<pos:position pos:line="40" pos:column="35"/></operator> <name pos:line="40" pos:column="36">APR_POLLIN<pos:position pos:line="40" pos:column="46"/></name></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">new_pollfd<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">.<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="24">desc<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">.<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="29">s<pos:position pos:line="41" pos:column="30"/></name></name> <operator pos:line="41" pos:column="31">=<pos:position pos:line="41" pos:column="32"/></operator> <name><name pos:line="41" pos:column="33">c<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">-&gt;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="36">aprsock<pos:position pos:line="41" pos:column="43"/></name></name></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="42" pos:column="13">new_pollfd<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">.<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">client_data<pos:position pos:line="42" pos:column="35"/></name></name> <operator pos:line="42" pos:column="36">=<pos:position pos:line="42" pos:column="37"/></operator> <name pos:line="42" pos:column="38">c<pos:position pos:line="42" pos:column="39"/></name></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">apr_pollset_add<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><name pos:line="43" pos:column="29">readbits<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="39">&amp;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="40">new_pollfd<pos:position pos:line="43" pos:column="50"/></name></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><name pos:line="44" pos:column="13">do_next<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <literal type="number" pos:line="44" pos:column="23">0<pos:position pos:line="44" pos:column="24"/></literal></expr>;<pos:position pos:line="44" pos:column="25"/></expr_stmt>
            <break pos:line="45" pos:column="13">break;<pos:position pos:line="45" pos:column="19"/></break>
        <case pos:line="46" pos:column="9">case <expr><name pos:line="46" pos:column="14">SSL_ERROR_WANT_WRITE<pos:position pos:line="46" pos:column="34"/></name></expr>:<pos:position pos:line="46" pos:column="35"/></case>
            <comment type="block" pos:line="47" pos:column="13">/* Try again */</comment>
            <expr_stmt><expr><name pos:line="48" pos:column="13">do_next<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <literal type="number" pos:line="48" pos:column="23">1<pos:position pos:line="48" pos:column="24"/></literal></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt>
            <break pos:line="49" pos:column="13">break;<pos:position pos:line="49" pos:column="19"/></break>
        <case pos:line="50" pos:column="9">case <expr><name pos:line="50" pos:column="14">SSL_ERROR_WANT_CONNECT<pos:position pos:line="50" pos:column="36"/></name></expr>:<pos:position pos:line="50" pos:column="37"/></case>
        <case pos:line="51" pos:column="9">case <expr><name pos:line="51" pos:column="14">SSL_ERROR_SSL<pos:position pos:line="51" pos:column="27"/></name></expr>:<pos:position pos:line="51" pos:column="28"/></case>
        <case pos:line="52" pos:column="9">case <expr><name pos:line="52" pos:column="14">SSL_ERROR_SYSCALL<pos:position pos:line="52" pos:column="31"/></name></expr>:<pos:position pos:line="52" pos:column="32"/></case>
            <comment type="block" pos:line="53" pos:column="13">/* Unexpected result */</comment>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">BIO_printf<pos:position pos:line="54" pos:column="23"/></name><argument_list pos:line="54" pos:column="23">(<argument><expr><name pos:line="54" pos:column="24">bio_err<pos:position pos:line="54" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="33">"SSL handshake failed (%d).\n"<pos:position pos:line="54" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="65">ecode<pos:position pos:line="54" pos:column="70"/></name></expr></argument>)<pos:position pos:line="54" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">ERR_print_errors<pos:position pos:line="55" pos:column="29"/></name><argument_list pos:line="55" pos:column="29">(<argument><expr><name pos:line="55" pos:column="30">bio_err<pos:position pos:line="55" pos:column="37"/></name></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">close_connection<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">c<pos:position pos:line="56" pos:column="31"/></name></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name pos:line="57" pos:column="13">do_next<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <literal type="number" pos:line="57" pos:column="23">0<pos:position pos:line="57" pos:column="24"/></literal></expr>;<pos:position pos:line="57" pos:column="25"/></expr_stmt>
            <break pos:line="58" pos:column="13">break;<pos:position pos:line="58" pos:column="19"/></break>
        }<pos:position pos:line="59" pos:column="10"/></block></switch>
    }<pos:position pos:line="60" pos:column="6"/></block></while>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_275_httpd-2.2.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dav_append_prop<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">apr_pool_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">pool<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>,
                            <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">name<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">value<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="3" pos:column="29">apr_text_header<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">phdr<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="51"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">s<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">lang<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><name pos:line="6" pos:column="24">value<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* skip past the xml:lang value */</comment>
    <expr_stmt><expr><name pos:line="9" pos:column="5">value<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">+=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">strlen<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">lang<pos:position pos:line="9" pos:column="25"/></name></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call> <operator pos:line="9" pos:column="27">+<pos:position pos:line="9" pos:column="28"/></operator> <literal type="number" pos:line="9" pos:column="29">1<pos:position pos:line="9" pos:column="30"/></literal></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">value<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">==<pos:position pos:line="11" pos:column="18"/></operator> <literal type="char" pos:line="11" pos:column="19">'\0'<pos:position pos:line="11" pos:column="23"/></literal></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24"> <block pos:line="11" pos:column="25">{
        <comment type="block" pos:line="12" pos:column="9">/* the property is an empty value */</comment>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">name<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">==<pos:position pos:line="13" pos:column="21"/></operator> <literal type="char" pos:line="13" pos:column="22">':'<pos:position pos:line="13" pos:column="25"/></literal></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
            <comment type="block" pos:line="14" pos:column="13">/* "no namespace" case */</comment>
            <expr_stmt><expr><name pos:line="15" pos:column="13">s<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">apr_psprintf<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">pool<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="36">"&lt;%s/&gt;"<pos:position pos:line="15" pos:column="49"/></literal> <name pos:line="15" pos:column="44">DEBUG_CR<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="54">name<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">+<pos:position pos:line="15" pos:column="59"/></operator><literal type="number" pos:line="15" pos:column="59">1<pos:position pos:line="15" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then>
        <else pos:line="17" pos:column="9">else <block pos:line="17" pos:column="14">{
            <expr_stmt><expr><name pos:line="18" pos:column="13">s<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <call><name pos:line="18" pos:column="17">apr_psprintf<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">pool<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="36">"&lt;ns%s/&gt;"<pos:position pos:line="18" pos:column="51"/></literal> <name pos:line="18" pos:column="46">DEBUG_CR<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="56">name<pos:position pos:line="18" pos:column="60"/></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></else></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then>
    <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><operator pos:line="21" pos:column="14">*<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">lang<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">!=<pos:position pos:line="21" pos:column="22"/></operator> <literal type="char" pos:line="21" pos:column="23">'\0'<pos:position pos:line="21" pos:column="27"/></literal></expr>)<pos:position pos:line="21" pos:column="28"/></condition><then pos:line="21" pos:column="28"> <block pos:line="21" pos:column="29">{
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">*<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">name<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">==<pos:position pos:line="22" pos:column="21"/></operator> <literal type="char" pos:line="22" pos:column="22">':'<pos:position pos:line="22" pos:column="25"/></literal></expr>)<pos:position pos:line="22" pos:column="26"/></condition><then pos:line="22" pos:column="26"> <block pos:line="22" pos:column="27">{
            <comment type="block" pos:line="23" pos:column="13">/* "no namespace" case */</comment>
            <expr_stmt><expr><name pos:line="24" pos:column="13">s<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <call><name pos:line="24" pos:column="17">apr_psprintf<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">pool<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="36">"&lt;%s xml:lang=\"%s\"&gt;%s&lt;/%s&gt;"<pos:position pos:line="24" pos:column="77"/></literal> <name pos:line="24" pos:column="66">DEBUG_CR<pos:position pos:line="24" pos:column="74"/></name></expr></argument>,
                             <argument><expr><name pos:line="25" pos:column="30">name<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">+<pos:position pos:line="25" pos:column="35"/></operator><literal type="number" pos:line="25" pos:column="35">1<pos:position pos:line="25" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="38">lang<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">value<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">name<pos:position pos:line="25" pos:column="55"/></name><operator pos:line="25" pos:column="55">+<pos:position pos:line="25" pos:column="56"/></operator><literal type="number" pos:line="25" pos:column="56">1<pos:position pos:line="25" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then>
        <else pos:line="27" pos:column="9">else <block pos:line="27" pos:column="14">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">s<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <call><name pos:line="28" pos:column="17">apr_psprintf<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">pool<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="36">"&lt;ns%s xml:lang=\"%s\"&gt;%s&lt;/ns%s&gt;"<pos:position pos:line="28" pos:column="81"/></literal> <name pos:line="28" pos:column="70">DEBUG_CR<pos:position pos:line="28" pos:column="78"/></name></expr></argument>,
                             <argument><expr><name pos:line="29" pos:column="30">name<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="36">lang<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">value<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">name<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></else></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><operator pos:line="32" pos:column="14">*<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">name<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">==<pos:position pos:line="32" pos:column="22"/></operator> <literal type="char" pos:line="32" pos:column="23">':'<pos:position pos:line="32" pos:column="26"/></literal></expr>)<pos:position pos:line="32" pos:column="27"/></condition><then pos:line="32" pos:column="27"> <block pos:line="32" pos:column="28">{
        <comment type="block" pos:line="33" pos:column="9">/* "no namespace" case */</comment>
        <expr_stmt><expr><name pos:line="34" pos:column="9">s<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <call><name pos:line="34" pos:column="13">apr_psprintf<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">pool<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="32">"&lt;%s&gt;%s&lt;/%s&gt;"<pos:position pos:line="34" pos:column="57"/></literal> <name pos:line="34" pos:column="46">DEBUG_CR<pos:position pos:line="34" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="56">name<pos:position pos:line="34" pos:column="60"/></name><operator pos:line="34" pos:column="60">+<pos:position pos:line="34" pos:column="61"/></operator><literal type="number" pos:line="34" pos:column="61">1<pos:position pos:line="34" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="64">value<pos:position pos:line="34" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="71">name<pos:position pos:line="34" pos:column="75"/></name><operator pos:line="34" pos:column="75">+<pos:position pos:line="34" pos:column="76"/></operator><literal type="number" pos:line="34" pos:column="76">1<pos:position pos:line="34" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if></elseif>
    <else pos:line="36" pos:column="5">else <block pos:line="36" pos:column="10">{
        <expr_stmt><expr><name pos:line="37" pos:column="9">s<pos:position pos:line="37" pos:column="10"/></name> <operator pos:line="37" pos:column="11">=<pos:position pos:line="37" pos:column="12"/></operator> <call><name pos:line="37" pos:column="13">apr_psprintf<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">pool<pos:position pos:line="37" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="32">"&lt;ns%s&gt;%s&lt;/ns%s&gt;"<pos:position pos:line="37" pos:column="61"/></literal> <name pos:line="37" pos:column="50">DEBUG_CR<pos:position pos:line="37" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="60">name<pos:position pos:line="37" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="66">value<pos:position pos:line="37" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="73">name<pos:position pos:line="37" pos:column="77"/></name></expr></argument>)<pos:position pos:line="37" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">apr_text_append<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">pool<pos:position pos:line="40" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="27">phdr<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="33">s<pos:position pos:line="40" pos:column="34"/></name></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>
